[
 "BOOTSTRAP",
 {
  "defaultCharset": "windows-1252",
  "pidString": "8784@DESKTOP-HP7QPF3",
  "systemProperties": {
   "awt.toolkit": "sun.awt.windows.WToolkit",
   "file.encoding": "Cp1252",
   "file.encoding.pkg": "sun.io",
   "file.separator": "\\",
   "java.awt.graphicsenv": "sun.awt.Win32GraphicsEnvironment",
   "java.awt.headless": "true",
   "java.awt.printerjob": "sun.awt.windows.WPrinterJob",
   "java.class.path": "C:\\Users\\kmala\\workspace\\Team3\\core\\build\\classes\\test;C:\\Users\\kmala\\workspace\\Team3\\core\\build\\resources\\test;C:\\Users\\kmala\\workspace\\Team3\\core\\build\\classes\\main;C:\\Users\\kmala\\workspace\\Team3\\core\\build\\resources\\main;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-core\\6.2.0\\849ee62525a294416802be2cacc66c80352f6f13\\lucene-core-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-analyzers-common\\6.2.0\\d254d52dd394b5079129f3d5f3bf4f2d44a5936e\\lucene-analyzers-common-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-backward-codecs\\6.2.0\\b625bb21456b3c0d1e5e431bced125cb060c1abd\\lucene-backward-codecs-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-grouping\\6.2.0\\9527fedfd5acc624b2bb3f862bd99fb8f470b053\\lucene-grouping-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-highlighter\\6.2.0\\7ca342372a3f45e32bbd21cecaa757e38eccb8a5\\lucene-highlighter-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-join\\6.2.0\\da0b8de98511abd4fe9c7d48a353d17854c5ed46\\lucene-join-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-memory\\6.2.0\\bc9e075b1ee051c8e5246c237c38d8e71dab8a66\\lucene-memory-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-misc\\6.2.0\\94ddde6312566a4da4a50a88e453b6c82c759b41\\lucene-misc-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-queries\\6.2.0\\dce47238f78e3e97d91dc6fefa9f46f07866bc2b\\lucene-queries-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-queryparser\\6.2.0\\17ef728ac15e668bfa1105321611548424637645\\lucene-queryparser-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-sandbox\\6.2.0\\520183f7b9aba77a26e224760c420a3844b0631a\\lucene-sandbox-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-spatial\\6.2.0\\8dba929b66927b936fbc76103b109ad6c824daee\\lucene-spatial-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-spatial-extras\\6.2.0\\3b5a6ef5cd90c0218a72e9e2f7e60104be2447da\\lucene-spatial-extras-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-spatial3d\\6.2.0\\fcdb0567725722c5145149d1502848b6a96ec18d\\lucene-spatial3d-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-suggest\\6.2.0\\3d9d526c51f483d27f425c75d7e56bc0849242d6\\lucene-suggest-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.elasticsearch\\securesm\\1.1\\1e423447d020041534be94c0f31a49fbdc1f2950\\securesm-1.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\net.sf.jopt-simple\\jopt-simple\\5.0.2\\98cafc6081d5632b61be2c9e60650b64ddbc637c\\jopt-simple-5.0.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.carrotsearch\\hppc\\0.7.1\\8b5057f74ea378c0150a1860874a3ebdcb713767\\hppc-0.7.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\joda-time\\joda-time\\2.9.4\\1c295b462f16702ebe720bbb08f62e1ba80da41b\\joda-time-2.9.4.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.joda\\joda-convert\\1.2\\35ec554f0cd00c956cc69051514d9488b1374dec\\joda-convert-1.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.yaml\\snakeyaml\\1.15\\3b132bea69e8ee099f416044970997bde80f4ea6\\snakeyaml-1.15.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.8.1\\fd13b1c033741d48291315c6370f7d475a42dccf\\jackson-core-2.8.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.dataformat\\jackson-dataformat-smile\\2.8.1\\5b73867bc12224946fc67fc8d49d9f5e698d7f\\jackson-dataformat-smile-2.8.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.dataformat\\jackson-dataformat-yaml\\2.8.1\\eb63166c723b0b4b9fb5298fca232a2f6612ec34\\jackson-dataformat-yaml-2.8.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.dataformat\\jackson-dataformat-cbor\\2.8.1\\3a6fb7e75c9972559a78cf5cfc5a48a41a13ea40\\jackson-dataformat-cbor-2.8.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.tdunning\\t-digest\\3.0\\84ccf145ac2215e6bfa63baa3101c0af41017cfc\\t-digest-3.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.hdrhistogram\\HdrHistogram\\2.1.6\\7495feb7f71ee124bd2a7e7d83590e296d71d80e\\HdrHistogram-2.1.6.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.locationtech.spatial4j\\spatial4j\\0.6\\21b15310bddcfd8c72611c180f20cf23279809a3\\spatial4j-0.6.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.vividsolutions\\jts\\1.13\\3ccfb9b60f04d71add996a666ceb8902904fd805\\jts-1.13.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.logging.log4j\\log4j-api\\2.6.2\\bd1b74a5d170686362091c7cf596bbc3adf5c09b\\log4j-api-2.6.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.logging.log4j\\log4j-core\\2.6.2\\a91369f655eb1639c6aece5c5eb5108db18306\\log4j-core-2.6.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.logging.log4j\\log4j-1.2-api\\2.6.2\\3b4c5a8b734b6a29b2f03380535a48da6284b210\\log4j-1.2-api-2.6.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\net.java.dev.jna\\jna\\4.2.2\\5012450aee579c3118ff09461d5ce210e0cdc2a9\\jna-4.2.2.jar;C:\\Users\\kmala\\workspace\\Team3\\test\\framework\\build\\distributions\\framework-5.0.0-alpha6-SNAPSHOT.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.carrotsearch.randomizedtesting\\randomizedtesting-runner\\2.3.2\\307965917fe8a22b7ee72deba39ef4b8e6ebc069\\randomizedtesting-runner-2.3.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\junit\\junit\\4.11\\4e031bb61df09069aeb2bffb4019e7a5034a4ee0\\junit-4.11.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.hamcrest\\hamcrest-all\\1.3\\63a21ebc981131004ad02e0434e799fd7f3a8d5a\\hamcrest-all-1.3.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-test-framework\\6.2.0\\f5026be3983acfb40d4092dbfbc015ec6e6addab\\lucene-test-framework-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-codecs\\6.2.0\\99f887266b0ad9f2c286b3976c5bc48c8cd36624\\lucene-codecs-6.2.0.jar;C:\\Users\\kmala\\workspace\\Team3\\client\\rest\\build\\distributions\\rest-5.0.0-alpha6-SNAPSHOT.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.httpcomponents\\httpclient\\4.5.2\\733db77aa8d9b2d68015189df76ab06304406e50\\httpclient-4.5.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.httpcomponents\\httpcore\\4.4.5\\e7501a1b34325abb00d17dde96150604a0658b54\\httpcore-4.4.5.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\commons-logging\\commons-logging\\1.1.3\\f6f66e966c70a83ffbdb6f17a0919eaf7c8aca7f\\commons-logging-1.1.3.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.10\\4b95f4897fa13f2cd904aee711aeafc0c5295cd8\\commons-codec-1.10.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.elasticsearch\\securemock\\1.2\\98201d4ad5ac93f6b415ae9172d52b5e7cda490e\\securemock-1.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.httpcomponents\\httpasyncclient\\4.1.2\\95aa3e6fb520191a0970a73cf09f62948ee614be\\httpasyncclient-4.1.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.httpcomponents\\httpcore-nio\\4.4.5\\f4be009e7505f6ceddf21e7960c759f413f15056\\httpcore-nio-4.4.5.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.carrotsearch.randomizedtesting\\junit4-ant\\2.3.2\\dc8f03f6111974092491f35b8269eb0fc57f52f7\\junit4-ant-2.3.2.jar",
   "java.class.version": "52.0",
   "java.endorsed.dirs": "C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\endorsed",
   "java.ext.dirs": "C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\ext;C:\\Windows\\Sun\\Java\\lib\\ext",
   "java.home": "C:\\Program Files\\Java\\jdk1.8.0_102\\jre",
   "java.io.tmpdir": "./temp",
   "java.library.path": "C:\\Program Files\\Java\\jdk1.8.0_102\\bin;C:\\Windows\\Sun\\Java\\bin;C:\\Windows\\system32;C:\\Windows;C:\\ProgramData\\Oracle\\Java\\javapath;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\Skype\\Phone\\;C:\\Tools\\curl-7.50.1\\bin;C:\\Program Files\\Git\\cmd;C:\\Tools\\gradle-2.13\\bin;C:\\Tools\\apache-maven-3.3.9\\bin;C:\\Program Files\\doxygen\\bin;C:\\Tools\\sonar-scanner-2.7\\bin;C:\\Windows\\system32\\config\\systemprofile\\.dnx\\bin;C:\\Program Files\\Microsoft DNX\\Dnvm\\;C:\\Program Files\\Microsoft SQL Server\\120\\Tools\\Binn\\;C:\\Users\\kmala\\AppData\\Local\\Microsoft\\WindowsApps;;.",
   "java.runtime.name": "Java(TM) SE Runtime Environment",
   "java.runtime.version": "1.8.0_102-b14",
   "java.specification.name": "Java Platform API Specification",
   "java.specification.vendor": "Oracle Corporation",
   "java.specification.version": "1.8",
   "java.vendor": "Oracle Corporation",
   "java.vendor.url": "http://java.oracle.com/",
   "java.vendor.url.bug": "http://bugreport.sun.com/bugreport/",
   "java.version": "1.8.0_102",
   "java.vm.info": "mixed mode",
   "java.vm.name": "Java HotSpot(TM) 64-Bit Server VM",
   "java.vm.specification.name": "Java Virtual Machine Specification",
   "java.vm.specification.vendor": "Oracle Corporation",
   "java.vm.specification.version": "1.8",
   "java.vm.vendor": "Oracle Corporation",
   "java.vm.version": "25.102-b14",
   "jna.nosys": "true",
   "junit4.childvm.count": "3",
   "junit4.childvm.cwd": "C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0",
   "junit4.childvm.id": "0",
   "junit4.memory.total": "514850816",
   "junit4.pidString": "8784@DESKTOP-HP7QPF3",
   "junit4.processors": "4",
   "line.separator": "\r\n",
   "os.arch": "amd64",
   "os.name": "Windows 10",
   "os.version": "10.0",
   "path.separator": ";",
   "sun.arch.data.model": "64",
   "sun.boot.class.path": "C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\resources.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\rt.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\sunrsasign.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\jsse.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\jce.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\charsets.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\jfr.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\classes",
   "sun.boot.library.path": "C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\bin",
   "sun.cpu.endian": "little",
   "sun.cpu.isalist": "amd64",
   "sun.desktop": "windows",
   "sun.io.unicode.encoding": "UnicodeLittle",
   "sun.java.command": "com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe -eventsfile C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\temp\\junit4-J0-20160918_124457_941.events @C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\temp\\junit4-J0-20160918_124457_941.suites -stdin",
   "sun.java.launcher": "SUN_STANDARD",
   "sun.jnu.encoding": "Cp1252",
   "sun.management.compiler": "HotSpot 64-Bit Tiered Compilers",
   "sun.os.patch.level": "",
   "tests.artifact": "core",
   "tests.gradle": "true",
   "tests.ifNoTests": "fail",
   "tests.logger.level": "WARN",
   "tests.prefix": "tests",
   "tests.security.manager": "true",
   "tests.seed": "FD13852EF36FC81C",
   "tests.task": ":core:test",
   "user.country": "US",
   "user.dir": "C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0",
   "user.home": "C:\\Users\\kmala",
   "user.language": "en",
   "user.name": "kmala",
   "user.script": "",
   "user.timezone": "",
   "user.variant": ""
  }
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.UpdateNumberOfReplicasTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.UpdateNumberOfReplicasTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.UpdateNumberOfReplicasTests",
   "children": [
    {
     "id": "ID#testUpdateNumberOfReplicas(org.elasticsearch.cluster.routing.allocation.UpdateNumberOfReplicasTests)",
     "displayName": "testUpdateNumberOfReplicas(org.elasticsearch.cluster.routing.allocation.UpdateNumberOfReplicasTests)",
     "methodName": "testUpdateNumberOfReplicas",
     "className": "org.elasticsearch.cluster.routing.allocation.UpdateNumberOfReplicasTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195499333
 }
]

[
 "TEST_STARTED",
 "ID#testUpdateNumberOfReplicas(org.elasticsearch.cluster.routing.allocation.UpdateNumberOfReplicasTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:45:15,715][INFO ][org.elasticsearch.cluster.routing.allocation] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:45:16,197][INFO ][org.elasticsearch.cluster.routing.allocation] Adding two nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:45:16,671][INFO ][org.elasticsearch.cluster.routing.allocation] Start all the primary shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:45:16,686][INFO ][org.elasticsearch.cluster.routing.allocation] Start all the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:45:16,696][INFO ][org.elasticsearch.cluster] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:45:16,698][INFO ][org.elasticsearch.cluster.routing.allocation] add another replica%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:45:16,719][INFO ][org.elasticsearch.cluster.routing.allocation] Add another node and start the added replica%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:45:16,722][INFO ][org.elasticsearch.cluster] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:45:16,729][INFO ][org.elasticsearch.cluster.routing.allocation] now remove a replica%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:45:16,730][INFO ][org.elasticsearch.cluster.routing.allocation] do a reroute, should remain the same%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdateNumberOfReplicas(org.elasticsearch.cluster.routing.allocation.UpdateNumberOfReplicasTests)",
  "startTimestamp": 1474195513827,
  "executionTime": 3173
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.UpdateNumberOfReplicasTests",
  "startTimestamp": 1474195499333,
  "executionTime": 17755
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.completion.CompletionSuggestionTests",
   "displayName": "org.elasticsearch.search.suggest.completion.CompletionSuggestionTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.completion.CompletionSuggestionTests",
   "children": [
    {
     "id": "ID#testToReduce(org.elasticsearch.search.suggest.completion.CompletionSuggestionTests)",
     "displayName": "testToReduce(org.elasticsearch.search.suggest.completion.CompletionSuggestionTests)",
     "methodName": "testToReduce",
     "className": "org.elasticsearch.search.suggest.completion.CompletionSuggestionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195517223
 }
]

[
 "TEST_STARTED",
 "ID#testToReduce(org.elasticsearch.search.suggest.completion.CompletionSuggestionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToReduce(org.elasticsearch.search.suggest.completion.CompletionSuggestionTests)",
  "startTimestamp": 1474195517357,
  "executionTime": 448
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.completion.CompletionSuggestionTests",
  "startTimestamp": 1474195517223,
  "executionTime": 595
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.CamelCaseFieldNameTests",
   "displayName": "org.elasticsearch.index.mapper.CamelCaseFieldNameTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.CamelCaseFieldNameTests",
   "children": [
    {
     "id": "ID#testCamelCaseFieldNameStaysAsIs(org.elasticsearch.index.mapper.CamelCaseFieldNameTests)",
     "displayName": "testCamelCaseFieldNameStaysAsIs(org.elasticsearch.index.mapper.CamelCaseFieldNameTests)",
     "methodName": "testCamelCaseFieldNameStaysAsIs",
     "className": "org.elasticsearch.index.mapper.CamelCaseFieldNameTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195517857
 }
]

[
 "TEST_STARTED",
 "ID#testCamelCaseFieldNameStaysAsIs(org.elasticsearch.index.mapper.CamelCaseFieldNameTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:45:18,213][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:45:18,610][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.7gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:45:18,611][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:45:18,635][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[8784], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:45:18,691][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:45:18,692][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:45:42,090][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:45:42,091][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:45:42,133][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[1]}, bound_addresses {local[1]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:45:42,336][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{rX8OsSjcRNmimN3cvdVOcg}{AZ97QmN3Qb6umC_YJnFBWg}{local}{local[1]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:45:42,350][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:45:42,540][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:45:43,257][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:45:44,531][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:45:45,777][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/_H7r8SQWQ6OGluZ5d02s6w] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:45:46,210][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/_H7r8SQWQ6OGluZ5d02s6w] update_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:45:46,238][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CamelCaseFieldNameTests#testCamelCaseFieldNameStaysAsIs]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCamelCaseFieldNameStaysAsIs(org.elasticsearch.index.mapper.CamelCaseFieldNameTests)",
  "startTimestamp": 1474195518017,
  "executionTime": 28308
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:45:46,326][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:45:46,331][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:45:46,332][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:45:46,385][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.CamelCaseFieldNameTests",
  "startTimestamp": 1474195517857,
  "executionTime": 28540
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.LuceneTests",
   "displayName": "org.elasticsearch.common.lucene.LuceneTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.LuceneTests",
   "children": [
    {
     "id": "ID#testWaitForIndex(org.elasticsearch.common.lucene.LuceneTests)",
     "displayName": "testWaitForIndex(org.elasticsearch.common.lucene.LuceneTests)",
     "methodName": "testWaitForIndex",
     "className": "org.elasticsearch.common.lucene.LuceneTests",
     "children": []
    },
    {
     "id": "ID#testNumDocs(org.elasticsearch.common.lucene.LuceneTests)",
     "displayName": "testNumDocs(org.elasticsearch.common.lucene.LuceneTests)",
     "methodName": "testNumDocs",
     "className": "org.elasticsearch.common.lucene.LuceneTests",
     "children": []
    },
    {
     "id": "ID#testCount(org.elasticsearch.common.lucene.LuceneTests)",
     "displayName": "testCount(org.elasticsearch.common.lucene.LuceneTests)",
     "methodName": "testCount",
     "className": "org.elasticsearch.common.lucene.LuceneTests",
     "children": []
    },
    {
     "id": "ID#testCleanIndex(org.elasticsearch.common.lucene.LuceneTests)",
     "displayName": "testCleanIndex(org.elasticsearch.common.lucene.LuceneTests)",
     "methodName": "testCleanIndex",
     "className": "org.elasticsearch.common.lucene.LuceneTests",
     "children": []
    },
    {
     "id": "ID#testPruneUnreferencedFiles(org.elasticsearch.common.lucene.LuceneTests)",
     "displayName": "testPruneUnreferencedFiles(org.elasticsearch.common.lucene.LuceneTests)",
     "methodName": "testPruneUnreferencedFiles",
     "className": "org.elasticsearch.common.lucene.LuceneTests",
     "children": []
    },
    {
     "id": "ID#testFiles(org.elasticsearch.common.lucene.LuceneTests)",
     "displayName": "testFiles(org.elasticsearch.common.lucene.LuceneTests)",
     "methodName": "testFiles",
     "className": "org.elasticsearch.common.lucene.LuceneTests",
     "children": []
    },
    {
     "id": "ID#testMMapHackSupported(org.elasticsearch.common.lucene.LuceneTests)",
     "displayName": "testMMapHackSupported(org.elasticsearch.common.lucene.LuceneTests)",
     "methodName": "testMMapHackSupported",
     "className": "org.elasticsearch.common.lucene.LuceneTests",
     "children": []
    },
    {
     "id": "ID#testAsSequentialAccessBits(org.elasticsearch.common.lucene.LuceneTests)",
     "displayName": "testAsSequentialAccessBits(org.elasticsearch.common.lucene.LuceneTests)",
     "methodName": "testAsSequentialAccessBits",
     "className": "org.elasticsearch.common.lucene.LuceneTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195546409
 }
]

[
 "TEST_STARTED",
 "ID#testWaitForIndex(org.elasticsearch.common.lucene.LuceneTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWaitForIndex(org.elasticsearch.common.lucene.LuceneTests)",
  "startTimestamp": 1474195546451,
  "executionTime": 1544
 }
]

[
 "TEST_STARTED",
 "ID#testNumDocs(org.elasticsearch.common.lucene.LuceneTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNumDocs(org.elasticsearch.common.lucene.LuceneTests)",
  "startTimestamp": 1474195547995,
  "executionTime": 723
 }
]

[
 "TEST_STARTED",
 "ID#testCount(org.elasticsearch.common.lucene.LuceneTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCount(org.elasticsearch.common.lucene.LuceneTests)",
  "startTimestamp": 1474195548718,
  "executionTime": 485
 }
]

[
 "TEST_STARTED",
 "ID#testCleanIndex(org.elasticsearch.common.lucene.LuceneTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCleanIndex(org.elasticsearch.common.lucene.LuceneTests)",
  "startTimestamp": 1474195549203,
  "executionTime": 147
 }
]

[
 "TEST_STARTED",
 "ID#testPruneUnreferencedFiles(org.elasticsearch.common.lucene.LuceneTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPruneUnreferencedFiles(org.elasticsearch.common.lucene.LuceneTests)",
  "startTimestamp": 1474195549350,
  "executionTime": 324
 }
]

[
 "TEST_STARTED",
 "ID#testFiles(org.elasticsearch.common.lucene.LuceneTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFiles(org.elasticsearch.common.lucene.LuceneTests)",
  "startTimestamp": 1474195549674,
  "executionTime": 166
 }
]

[
 "TEST_STARTED",
 "ID#testMMapHackSupported(org.elasticsearch.common.lucene.LuceneTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMMapHackSupported(org.elasticsearch.common.lucene.LuceneTests)",
  "startTimestamp": 1474195549840,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testAsSequentialAccessBits(org.elasticsearch.common.lucene.LuceneTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAsSequentialAccessBits(org.elasticsearch.common.lucene.LuceneTests)",
  "startTimestamp": 1474195549845,
  "executionTime": 70
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.LuceneTests",
  "startTimestamp": 1474195546409,
  "executionTime": 3509
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.rest.RestFilterChainTests",
   "displayName": "org.elasticsearch.rest.RestFilterChainTests",
   "methodName": null,
   "className": "org.elasticsearch.rest.RestFilterChainTests",
   "children": [
    {
     "id": "ID#testTooManyContinueProcessing(org.elasticsearch.rest.RestFilterChainTests)",
     "displayName": "testTooManyContinueProcessing(org.elasticsearch.rest.RestFilterChainTests)",
     "methodName": "testTooManyContinueProcessing",
     "className": "org.elasticsearch.rest.RestFilterChainTests",
     "children": []
    },
    {
     "id": "ID#testRestFilters(org.elasticsearch.rest.RestFilterChainTests)",
     "displayName": "testRestFilters(org.elasticsearch.rest.RestFilterChainTests)",
     "methodName": "testRestFilters",
     "className": "org.elasticsearch.rest.RestFilterChainTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195549931
 }
]

[
 "TEST_STARTED",
 "ID#testTooManyContinueProcessing(org.elasticsearch.rest.RestFilterChainTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTooManyContinueProcessing(org.elasticsearch.rest.RestFilterChainTests)",
  "startTimestamp": 1474195549985,
  "executionTime": 122
 }
]

[
 "TEST_STARTED",
 "ID#testRestFilters(org.elasticsearch.rest.RestFilterChainTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestFilters(org.elasticsearch.rest.RestFilterChainTests)",
  "startTimestamp": 1474195550108,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.rest.RestFilterChainTests",
  "startTimestamp": 1474195549931,
  "executionTime": 192
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.NodeConnectionsServiceTests",
   "displayName": "org.elasticsearch.cluster.NodeConnectionsServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.NodeConnectionsServiceTests",
   "children": [
    {
     "id": "ID#testReconnect(org.elasticsearch.cluster.NodeConnectionsServiceTests)",
     "displayName": "testReconnect(org.elasticsearch.cluster.NodeConnectionsServiceTests)",
     "methodName": "testReconnect",
     "className": "org.elasticsearch.cluster.NodeConnectionsServiceTests",
     "children": []
    },
    {
     "id": "ID#testConnectAndDisconnect(org.elasticsearch.cluster.NodeConnectionsServiceTests)",
     "displayName": "testConnectAndDisconnect(org.elasticsearch.cluster.NodeConnectionsServiceTests)",
     "methodName": "testConnectAndDisconnect",
     "className": "org.elasticsearch.cluster.NodeConnectionsServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195550236
 }
]

[
 "TEST_STARTED",
 "ID#testReconnect(org.elasticsearch.cluster.NodeConnectionsServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 07:45:50,417 TEST-NodeConnectionsServiceTests.testReconnect-seed#[FD13852EF36FC81C] ERROR An exception occurred processing Appender console java.security.AccessControlException: access denied (\"java.lang.RuntimePermission\" \"accessClassInPackage.sun.reflect\")%0D%0A%09at java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)%0D%0A%09at java.security.AccessController.checkPermission(AccessController.java:884)%0D%0A%09at java.lang.SecurityManager.checkPermission(SecurityManager.java:549)%0D%0A%09at java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1564)%0D%0A%09at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:311)%0D%0A%09at java.lang.ClassLoader.loadClass(ClassLoader.java:357)%0D%0A%09at java.lang.Class.forName0(Native Method)%0D%0A%09at java.lang.Class.forName(Class.java:264)%0D%0A%09at org.apache.logging.log4j.util.LoaderUtil.loadClass(LoaderUtil.java:122)%0D%0A%09at org.apache.logging.log4j.core.util.Loader.loadClass(Loader.java:228)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.loadClass(ThrowableProxy.java:496)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.toExtendedStackTrace(ThrowableProxy.java:617)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:135)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:117)%0D%0A%09at org.apache.logging.log4j.core.impl.MutableLogEvent.getThrownProxy(MutableLogEvent.java:314)%0D%0A%09at org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter.format(ExtendedThrowablePatternConverter.java:61)%0D%0A%09at org.apache.logging.log4j.core.pattern.PatternFormatter.format(PatternFormatter.java:38)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout$PatternSerializer.toSerializable(PatternLayout.java:294)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.toText(PatternLayout.java:195)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:180)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:57)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.directEncodeEvent(AbstractOutputStreamAppender.java:120)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.tryAppend(AbstractOutputStreamAppender.java:113)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.append(AbstractOutputStreamAppender.java:104)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.tryCallAppender(AppenderControl.java:155)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender0(AppenderControl.java:128)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppenderPreventRecursion(AppenderControl.java:119)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender(AppenderControl.java:84)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.callAppenders(LoggerConfig.java:390)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:375)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:359)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:349)%0D%0A%09at org.apache.logging.log4j.core.config.AwaitCompletionReliabilityStrategy.log(AwaitCompletionReliabilityStrategy.java:63)%0D%0A%09at org.apache.logging.log4j.core.Logger.logMessage(Logger.java:146)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logMessage(AbstractLogger.java:1983)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled(AbstractLogger.java:1845)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.warn(AbstractLogger.java:2536)%0D%0A%09at org.elasticsearch.cluster.NodeConnectionsService.validateNodeConnected(NodeConnectionsService.java:119)%0D%0A%09at org.elasticsearch.cluster.NodeConnectionsService.connectToAddedNodes(NodeConnectionsService.java:83)%0D%0A%09at org.elasticsearch.cluster.NodeConnectionsServiceTests.testReconnect(NodeConnectionsServiceTests.java:114)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0D%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0D%0A%09at java.lang.reflect.Method.invoke(Method.java:498)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at java.lang.Thread.run(Thread.java:745)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 07:45:50,447 TEST-NodeConnectionsServiceTests.testReconnect-seed#[FD13852EF36FC81C] ERROR An exception occurred processing Appender console java.security.AccessControlException: access denied (\"java.lang.RuntimePermission\" \"accessClassInPackage.sun.reflect\")%0D%0A%09at java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)%0D%0A%09at java.security.AccessController.checkPermission(AccessController.java:884)%0D%0A%09at java.lang.SecurityManager.checkPermission(SecurityManager.java:549)%0D%0A%09at java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1564)%0D%0A%09at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:311)%0D%0A%09at java.lang.ClassLoader.loadClass(ClassLoader.java:357)%0D%0A%09at java.lang.Class.forName0(Native Method)%0D%0A%09at java.lang.Class.forName(Class.java:264)%0D%0A%09at org.apache.logging.log4j.util.LoaderUtil.loadClass(LoaderUtil.java:122)%0D%0A%09at org.apache.logging.log4j.core.util.Loader.loadClass(Loader.java:228)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.loadClass(ThrowableProxy.java:496)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.toExtendedStackTrace(ThrowableProxy.java:617)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:135)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:117)%0D%0A%09at org.apache.logging.log4j.core.impl.MutableLogEvent.getThrownProxy(MutableLogEvent.java:314)%0D%0A%09at org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter.format(ExtendedThrowablePatternConverter.java:61)%0D%0A%09at org.apache.logging.log4j.core.pattern.PatternFormatter.format(PatternFormatter.java:38)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout$PatternSerializer.toSerializable(PatternLayout.java:294)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.toText(PatternLayout.java:195)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:180)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:57)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.directEncodeEvent(AbstractOutputStreamAppender.java:120)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.tryAppend(AbstractOutputStreamAppender.java:113)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.append(AbstractOutputStreamAppender.java:104)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.tryCallAppender(AppenderControl.java:155)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender0(AppenderControl.java:128)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppenderPreventRecursion(AppenderControl.java:119)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender(AppenderControl.java:84)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.callAppenders(LoggerConfig.java:390)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:375)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:359)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:349)%0D%0A%09at org.apache.logging.log4j.core.config.AwaitCompletionReliabilityStrategy.log(AwaitCompletionReliabilityStrategy.java:63)%0D%0A%09at org.apache.logging.log4j.core.Logger.logMessage(Logger.java:146)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logMessage(AbstractLogger.java:1983)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled(AbstractLogger.java:1845)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.warn(AbstractLogger.java:2536)%0D%0A%09at org.elasticsearch.cluster.NodeConnectionsService.validateNodeConnected(NodeConnectionsService.java:119)%0D%0A%09at org.elasticsearch.cluster.NodeConnectionsService.connectToAddedNodes(NodeConnectionsService.java:83)%0D%0A%09at org.elasticsearch.cluster.NodeConnectionsServiceTests.testReconnect(NodeConnectionsServiceTests.java:114)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0D%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0D%0A%09at java.lang.reflect.Method.invoke(Method.java:498)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at java.lang.Thread.run(Thread.java:745)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 07:45:50,461 TEST-NodeConnectionsServiceTests.testReconnect-seed#[FD13852EF36FC81C] ERROR An exception occurred processing Appender console java.security.AccessControlException: access denied (\"java.lang.RuntimePermission\" \"accessClassInPackage.sun.reflect\")%0D%0A%09at java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)%0D%0A%09at java.security.AccessController.checkPermission(AccessController.java:884)%0D%0A%09at java.lang.SecurityManager.checkPermission(SecurityManager.java:549)%0D%0A%09at java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1564)%0D%0A%09at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:311)%0D%0A%09at java.lang.ClassLoader.loadClass(ClassLoader.java:357)%0D%0A%09at java.lang.Class.forName0(Native Method)%0D%0A%09at java.lang.Class.forName(Class.java:264)%0D%0A%09at org.apache.logging.log4j.util.LoaderUtil.loadClass(LoaderUtil.java:122)%0D%0A%09at org.apache.logging.log4j.core.util.Loader.loadClass(Loader.java:228)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.loadClass(ThrowableProxy.java:496)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.toExtendedStackTrace(ThrowableProxy.java:617)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:135)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:117)%0D%0A%09at org.apache.logging.log4j.core.impl.MutableLogEvent.getThrownProxy(MutableLogEvent.java:314)%0D%0A%09at org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter.format(ExtendedThrowablePatternConverter.java:61)%0D%0A%09at org.apache.logging.log4j.core.pattern.PatternFormatter.format(PatternFormatter.java:38)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout$PatternSerializer.toSerializable(PatternLayout.java:294)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.toText(PatternLayout.java:195)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:180)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:57)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.directEncodeEvent(AbstractOutputStreamAppender.java:120)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.tryAppend(AbstractOutputStreamAppender.java:113)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.append(AbstractOutputStreamAppender.java:104)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.tryCallAppender(AppenderControl.java:155)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender0(AppenderControl.java:128)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppenderPreventRecursion(AppenderControl.java:119)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender(AppenderControl.java:84)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.callAppenders(LoggerConfig.java:390)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:375)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:359)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:349)%0D%0A%09at org.apache.logging.log4j.core.config.AwaitCompletionReliabilityStrategy.log(AwaitCompletionReliabilityStrategy.java:63)%0D%0A%09at org.apache.logging.log4j.core.Logger.logMessage(Logger.java:146)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logMessage(AbstractLogger.java:1983)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled(AbstractLogger.java:1845)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.warn(AbstractLogger.java:2536)%0D%0A%09at org.elasticsearch.cluster.NodeConnectionsService.validateNodeConnected(NodeConnectionsService.java:119)%0D%0A%09at org.elasticsearch.cluster.NodeConnectionsService.connectToAddedNodes(NodeConnectionsService.java:83)%0D%0A%09at org.elasticsearch.cluster.NodeConnectionsServiceTests.testReconnect(NodeConnectionsServiceTests.java:114)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0D%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0D%0A%09at java.lang.reflect.Method.invoke(Method.java:498)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at java.lang.Thread.run(Thread.java:745)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 07:45:50,469 TEST-NodeConnectionsServiceTests.testReconnect-seed#[FD13852EF36FC81C] ERROR An exception occurred processing Appender console java.security.AccessControlException: access denied (\"java.lang.RuntimePermission\" \"accessClassInPackage.sun.reflect\")%0D%0A%09at java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)%0D%0A%09at java.security.AccessController.checkPermission(AccessController.java:884)%0D%0A%09at java.lang.SecurityManager.checkPermission(SecurityManager.java:549)%0D%0A%09at java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1564)%0D%0A%09at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:311)%0D%0A%09at java.lang.ClassLoader.loadClass(ClassLoader.java:357)%0D%0A%09at java.lang.Class.forName0(Native Method)%0D%0A%09at java.lang.Class.forName(Class.java:264)%0D%0A%09at org.apache.logging.log4j.util.LoaderUtil.loadClass(LoaderUtil.java:122)%0D%0A%09at org.apache.logging.log4j.core.util.Loader.loadClass(Loader.java:228)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.loadClass(ThrowableProxy.java:496)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.toExtendedStackTrace(ThrowableProxy.java:617)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:135)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:117)%0D%0A%09at org.apache.logging.log4j.core.impl.MutableLogEvent.getThrownProxy(MutableLogEvent.java:314)%0D%0A%09at org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter.format(ExtendedThrowablePatternConverter.java:61)%0D%0A%09at org.apache.logging.log4j.core.pattern.PatternFormatter.format(PatternFormatter.java:38)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout$PatternSerializer.toSerializable(PatternLayout.java:294)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.toText(PatternLayout.java:195)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:180)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:57)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.directEncodeEvent(AbstractOutputStreamAppender.java:120)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.tryAppend(AbstractOutputStreamAppender.java:113)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.append(AbstractOutputStreamAppender.java:104)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.tryCallAppender(AppenderControl.java:155)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender0(AppenderControl.java:128)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppenderPreventRecursion(AppenderControl.java:119)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender(AppenderControl.java:84)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.callAppenders(LoggerConfig.java:390)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:375)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:359)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:349)%0D%0A%09at org.apache.logging.log4j.core.config.AwaitCompletionReliabilityStrategy.log(AwaitCompletionReliabilityStrategy.java:63)%0D%0A%09at org.apache.logging.log4j.core.Logger.logMessage(Logger.java:146)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logMessage(AbstractLogger.java:1983)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled(AbstractLogger.java:1845)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.warn(AbstractLogger.java:2536)%0D%0A%09at org.elasticsearch.cluster.NodeConnectionsService.validateNodeConnected(NodeConnectionsService.java:119)%0D%0A%09at org.elasticsearch.cluster.NodeConnectionsService.connectToAddedNodes(NodeConnectionsService.java:83)%0D%0A%09at org.elasticsearch.cluster.NodeConnectionsServiceTests.testReconnect(NodeConnectionsServiceTests.java:114)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0D%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0D%0A%09at java.lang.reflect.Method.invoke(Method.java:498)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at java.lang.Thread.run(Thread.java:745)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReconnect(org.elasticsearch.cluster.NodeConnectionsServiceTests)",
  "startTimestamp": 1474195550275,
  "executionTime": 342
 }
]

[
 "TEST_STARTED",
 "ID#testConnectAndDisconnect(org.elasticsearch.cluster.NodeConnectionsServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConnectAndDisconnect(org.elasticsearch.cluster.NodeConnectionsServiceTests)",
  "startTimestamp": 1474195550628,
  "executionTime": 32
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.NodeConnectionsServiceTests",
  "startTimestamp": 1474195550236,
  "executionTime": 463
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests",
   "displayName": "org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195550716
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)",
  "startTimestamp": 1474195550837,
  "executionTime": 90
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)",
  "startTimestamp": 1474195550928,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)",
  "startTimestamp": 1474195550931,
  "executionTime": 692
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests",
  "startTimestamp": 1474195550716,
  "executionTime": 1096
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.serialization.ClusterStateToStringTests",
   "displayName": "org.elasticsearch.cluster.serialization.ClusterStateToStringTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.serialization.ClusterStateToStringTests",
   "children": [
    {
     "id": "ID#testClusterStateSerialization(org.elasticsearch.cluster.serialization.ClusterStateToStringTests)",
     "displayName": "testClusterStateSerialization(org.elasticsearch.cluster.serialization.ClusterStateToStringTests)",
     "methodName": "testClusterStateSerialization",
     "className": "org.elasticsearch.cluster.serialization.ClusterStateToStringTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195551822
 }
]

[
 "TEST_STARTED",
 "ID#testClusterStateSerialization(org.elasticsearch.cluster.serialization.ClusterStateToStringTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterStateSerialization(org.elasticsearch.cluster.serialization.ClusterStateToStringTests)",
  "startTimestamp": 1474195551952,
  "executionTime": 135
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.serialization.ClusterStateToStringTests",
  "startTimestamp": 1474195551822,
  "executionTime": 275
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.translog.TranslogTests",
   "displayName": "org.elasticsearch.index.translog.TranslogTests",
   "methodName": null,
   "className": "org.elasticsearch.index.translog.TranslogTests",
   "children": [
    {
     "id": "ID#testFatalIOExceptionsWhileWritingConcurrently(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testFatalIOExceptionsWhileWritingConcurrently(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testFatalIOExceptionsWhileWritingConcurrently",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testCloseConcurrently(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testCloseConcurrently(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testCloseConcurrently",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testBasicCheckpoint(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testBasicCheckpoint(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testBasicCheckpoint",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testPendingDelete(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testPendingDelete(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testPendingDelete",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testRecoveryUncommittedCorruptedCheckpoint(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testRecoveryUncommittedCorruptedCheckpoint(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testRecoveryUncommittedCorruptedCheckpoint",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testFailFlush(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testFailFlush(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testFailFlush",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testRecoveryUncommittedFileExists(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testRecoveryUncommittedFileExists(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testRecoveryUncommittedFileExists",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testRead(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testRead(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testRead",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testSimpleOperations(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testSimpleOperations(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testSimpleOperations",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testLocationComparison(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testLocationComparison(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testLocationComparison",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testVerifyTranslogIsNotDeleted(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testVerifyTranslogIsNotDeleted(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testVerifyTranslogIsNotDeleted",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testBasicRecovery(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testBasicRecovery(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testBasicRecovery",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testConcurrentWritesWithVaryingSize(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testConcurrentWritesWithVaryingSize(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testConcurrentWritesWithVaryingSize",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testConcurrentWriteViewsAndSnapshot(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testConcurrentWriteViewsAndSnapshot(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testConcurrentWriteViewsAndSnapshot",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testSnapshotFromStreamInput(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testSnapshotFromStreamInput(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testSnapshotFromStreamInput",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testLocationHashCodeEquals(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testLocationHashCodeEquals(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testLocationHashCodeEquals",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testTranslogOpsCountIsCorrect(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testTranslogOpsCountIsCorrect(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testTranslogOpsCountIsCorrect",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testFailOnClosedWrite(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testFailOnClosedWrite(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testFailOnClosedWrite",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testSnapshotOnClosedTranslog(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testSnapshotOnClosedTranslog(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testSnapshotOnClosedTranslog",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testFailWriterWhileClosing(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testFailWriterWhileClosing(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testFailWriterWhileClosing",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testWithRandomException(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testWithRandomException(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testWithRandomException",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testOpenForeignTranslog(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testOpenForeignTranslog(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testOpenForeignTranslog",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testSyncUpToStream(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testSyncUpToStream(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testSyncUpToStream",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testRecoverWithUnbackedNextGenInIllegalState(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testRecoverWithUnbackedNextGenInIllegalState(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testRecoverWithUnbackedNextGenInIllegalState",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testIdParsingFromFile(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testIdParsingFromFile(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testIdParsingFromFile",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testTragicEventCanBeAnyException(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testTragicEventCanBeAnyException(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testTragicEventCanBeAnyException",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testTruncatedTranslogs(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testTruncatedTranslogs(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testTruncatedTranslogs",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testRecoverWithUnbackedNextGenAndFutureFile(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testRecoverWithUnbackedNextGenAndFutureFile(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testRecoverWithUnbackedNextGenAndFutureFile",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testRecoveryUncommitted(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testRecoveryUncommitted(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testRecoveryUncommitted",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testCheckpointOnDiskFull(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testCheckpointOnDiskFull(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testCheckpointOnDiskFull",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testStats(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testStats(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testStats",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testTranslogWriter(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testTranslogWriter(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testTranslogWriter",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testRecoverWithUnbackedNextGen(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testRecoverWithUnbackedNextGen(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testRecoverWithUnbackedNextGen",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testSnapshot(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testSnapshot(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testSnapshot",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testSyncUpTo(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testSyncUpTo(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testSyncUpTo",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testSnapshotWithNewTranslog(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testSnapshotWithNewTranslog(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testSnapshotWithNewTranslog",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testTranslogChecksums(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testTranslogChecksums(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testTranslogChecksums",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testFailWhileCreateWriteWithRecoveredTLogs(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testFailWhileCreateWriteWithRecoveredTLogs(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testFailWhileCreateWriteWithRecoveredTLogs",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195552191
 }
]

[
 "TEST_STARTED",
 "ID#testFatalIOExceptionsWhileWritingConcurrently(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFatalIOExceptionsWhileWritingConcurrently(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474195552238,
  "executionTime": 870
 }
]

[
 "TEST_STARTED",
 "ID#testCloseConcurrently(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:45:53,131][INFO ][org.elasticsearch.index.translog]  [index][1] testing with [4] threads, each doing [100] ops%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCloseConcurrently(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474195553109,
  "executionTime": 85
 }
]

[
 "TEST_STARTED",
 "ID#testBasicCheckpoint(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicCheckpoint(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474195553194,
  "executionTime": 324
 }
]

[
 "TEST_STARTED",
 "ID#testPendingDelete(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPendingDelete(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474195553518,
  "executionTime": 307
 }
]

[
 "TEST_STARTED",
 "ID#testRecoveryUncommittedCorruptedCheckpoint(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoveryUncommittedCorruptedCheckpoint(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474195553825,
  "executionTime": 97
 }
]

[
 "TEST_STARTED",
 "ID#testFailFlush(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailFlush(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474195553922,
  "executionTime": 59
 }
]

[
 "TEST_STARTED",
 "ID#testRecoveryUncommittedFileExists(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoveryUncommittedFileExists(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474195553981,
  "executionTime": 98
 }
]

[
 "TEST_STARTED",
 "ID#testRead(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRead(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474195554080,
  "executionTime": 154
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleOperations(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleOperations(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474195554235,
  "executionTime": 117
 }
]

[
 "TEST_STARTED",
 "ID#testLocationComparison(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLocationComparison(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474195554352,
  "executionTime": 66
 }
]

[
 "TEST_STARTED",
 "ID#testVerifyTranslogIsNotDeleted(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVerifyTranslogIsNotDeleted(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474195554418,
  "executionTime": 66
 }
]

[
 "TEST_STARTED",
 "ID#testBasicRecovery(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicRecovery(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474195554484,
  "executionTime": 229
 }
]

[
 "TEST_STARTED",
 "ID#testConcurrentWritesWithVaryingSize(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:45:54,723][INFO ][org.elasticsearch.index.translog]  [index][1] testing with [2] threads, each doing [101] ops%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcurrentWritesWithVaryingSize(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474195554713,
  "executionTime": 278
 }
]

[
 "TEST_STARTED",
 "ID#testConcurrentWriteViewsAndSnapshot(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:04,153][INFO ][org.elasticsearch.index.translog]  [index][1] --> test done. total ops written [2011]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcurrentWriteViewsAndSnapshot(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474195554991,
  "executionTime": 9168
 }
]

[
 "TEST_STARTED",
 "ID#testSnapshotFromStreamInput(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSnapshotFromStreamInput(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474195564160,
  "executionTime": 164
 }
]

[
 "TEST_STARTED",
 "ID#testLocationHashCodeEquals(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLocationHashCodeEquals(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474195564325,
  "executionTime": 241
 }
]

[
 "TEST_STARTED",
 "ID#testTranslogOpsCountIsCorrect(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTranslogOpsCountIsCorrect(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474195564566,
  "executionTime": 1848
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnClosedWrite(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnClosedWrite(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474195566415,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testSnapshotOnClosedTranslog(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSnapshotOnClosedTranslog(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474195566433,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testFailWriterWhileClosing(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailWriterWhileClosing(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474195566460,
  "executionTime": 83
 }
]

[
 "TEST_STARTED",
 "ID#testWithRandomException(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithRandomException(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474195566543,
  "executionTime": 292
 }
]

[
 "TEST_STARTED",
 "ID#testOpenForeignTranslog(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOpenForeignTranslog(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474195566835,
  "executionTime": 53
 }
]

[
 "TEST_STARTED",
 "ID#testSyncUpToStream(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSyncUpToStream(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474195566888,
  "executionTime": 326
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverWithUnbackedNextGenInIllegalState(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverWithUnbackedNextGenInIllegalState(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474195567214,
  "executionTime": 48
 }
]

[
 "TEST_STARTED",
 "ID#testIdParsingFromFile(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIdParsingFromFile(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474195567263,
  "executionTime": 31
 }
]

[
 "TEST_STARTED",
 "ID#testTragicEventCanBeAnyException(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTragicEventCanBeAnyException(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474195567294,
  "executionTime": 89
 }
]

[
 "TEST_STARTED",
 "ID#testTruncatedTranslogs(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:07,407][INFO ][org.elasticsearch.index.translog]  [index][1] --> truncating C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.index.translog.TranslogTests_FD13852EF36FC81C-001\\tempDir-001\\translog-1.tlog, prev: 6582, now: 4709%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTruncatedTranslogs(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474195567383,
  "executionTime": 34
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverWithUnbackedNextGenAndFutureFile(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:07,438][WARN ][org.elasticsearch.index.translog]  [index][1] deleted previously created, but not yet committed, next generation [translog-2.tlog]. This can happen due to a tragic exception when creating a new generation%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverWithUnbackedNextGenAndFutureFile(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474195567418,
  "executionTime": 64
 }
]

[
 "TEST_STARTED",
 "ID#testRecoveryUncommitted(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoveryUncommitted(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474195567482,
  "executionTime": 82
 }
]

[
 "TEST_STARTED",
 "ID#testCheckpointOnDiskFull(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckpointOnDiskFull(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474195567564,
  "executionTime": 31
 }
]

[
 "TEST_STARTED",
 "ID#testStats(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStats(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474195567595,
  "executionTime": 61
 }
]

[
 "TEST_STARTED",
 "ID#testTranslogWriter(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTranslogWriter(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474195567656,
  "executionTime": 32
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverWithUnbackedNextGen(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:07,717][WARN ][org.elasticsearch.index.translog]  [index][1] deleted previously created, but not yet committed, next generation [translog-2.tlog]. This can happen due to a tragic exception when creating a new generation%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverWithUnbackedNextGen(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474195567688,
  "executionTime": 105
 }
]

[
 "TEST_STARTED",
 "ID#testSnapshot(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSnapshot(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474195567794,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testSyncUpTo(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSyncUpTo(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474195567811,
  "executionTime": 672
 }
]

[
 "TEST_STARTED",
 "ID#testSnapshotWithNewTranslog(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSnapshotWithNewTranslog(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474195568483,
  "executionTime": 137
 }
]

[
 "TEST_STARTED",
 "ID#testTranslogChecksums(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:08,641][INFO ][org.elasticsearch.index.translog]  [index][1] --> corrupting C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.index.translog.TranslogTests_FD13852EF36FC81C-001\\tempDir-001\\translog-1.tlog...%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTranslogChecksums(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474195568621,
  "executionTime": 41
 }
]

[
 "TEST_STARTED",
 "ID#testFailWhileCreateWriteWithRecoveredTLogs(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailWhileCreateWriteWithRecoveredTLogs(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1474195568662,
  "executionTime": 116
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.translog.TranslogTests",
  "startTimestamp": 1474195552191,
  "executionTime": 16651
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests",
   "displayName": "org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests",
   "children": [
    {
     "id": "ID#testSimple(org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests)",
     "displayName": "testSimple(org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195568886
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests)",
  "startTimestamp": 1474195568905,
  "executionTime": 214
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests",
  "startTimestamp": 1474195568886,
  "executionTime": 236
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.ingest.IngestStatsTests",
   "displayName": "org.elasticsearch.ingest.IngestStatsTests",
   "methodName": null,
   "className": "org.elasticsearch.ingest.IngestStatsTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.ingest.IngestStatsTests)",
     "displayName": "testSerialization(org.elasticsearch.ingest.IngestStatsTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.ingest.IngestStatsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195569140
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.ingest.IngestStatsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.ingest.IngestStatsTests)",
  "startTimestamp": 1474195569203,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.ingest.IngestStatsTests",
  "startTimestamp": 1474195569140,
  "executionTime": 71
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.slice.SliceBuilderTests",
   "displayName": "org.elasticsearch.search.slice.SliceBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.slice.SliceBuilderTests",
   "children": [
    {
     "id": "ID#testInvalidArguments(org.elasticsearch.search.slice.SliceBuilderTests)",
     "displayName": "testInvalidArguments(org.elasticsearch.search.slice.SliceBuilderTests)",
     "methodName": "testInvalidArguments",
     "className": "org.elasticsearch.search.slice.SliceBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToFilter(org.elasticsearch.search.slice.SliceBuilderTests)",
     "displayName": "testToFilter(org.elasticsearch.search.slice.SliceBuilderTests)",
     "methodName": "testToFilter",
     "className": "org.elasticsearch.search.slice.SliceBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.slice.SliceBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.slice.SliceBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.slice.SliceBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.slice.SliceBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.slice.SliceBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.slice.SliceBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.slice.SliceBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.slice.SliceBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.slice.SliceBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195569236
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidArguments(org.elasticsearch.search.slice.SliceBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidArguments(org.elasticsearch.search.slice.SliceBuilderTests)",
  "startTimestamp": 1474195569342,
  "executionTime": 35
 }
]

[
 "TEST_STARTED",
 "ID#testToFilter(org.elasticsearch.search.slice.SliceBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToFilter(org.elasticsearch.search.slice.SliceBuilderTests)",
  "startTimestamp": 1474195569378,
  "executionTime": 1212
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.slice.SliceBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.slice.SliceBuilderTests)",
  "startTimestamp": 1474195570590,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.slice.SliceBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.slice.SliceBuilderTests)",
  "startTimestamp": 1474195570594,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.slice.SliceBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.slice.SliceBuilderTests)",
  "startTimestamp": 1474195570597,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.slice.SliceBuilderTests",
  "startTimestamp": 1474195569236,
  "executionTime": 1433
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.analysis.AnalysisModuleTests",
   "displayName": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
   "children": [
    {
     "id": "ID#testAnalyzerAliasDefault(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "displayName": "testAnalyzerAliasDefault(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "methodName": "testAnalyzerAliasDefault",
     "className": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
     "children": []
    },
    {
     "id": "ID#testAnalyzerAliasReferencesAlias(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "displayName": "testAnalyzerAliasReferencesAlias(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "methodName": "testAnalyzerAliasReferencesAlias",
     "className": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
     "children": []
    },
    {
     "id": "ID#testAnalyzerAlias(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "displayName": "testAnalyzerAlias(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "methodName": "testAnalyzerAlias",
     "className": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
     "children": []
    },
    {
     "id": "ID#testDefaultFactoryTokenFilters(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "displayName": "testDefaultFactoryTokenFilters(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "methodName": "testDefaultFactoryTokenFilters",
     "className": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
     "children": []
    },
    {
     "id": "ID#testDeprecatedPositionOffsetGap(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "displayName": "testDeprecatedPositionOffsetGap(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "methodName": "testDeprecatedPositionOffsetGap",
     "className": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
     "children": []
    },
    {
     "id": "ID#testSimpleConfigurationYaml(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "displayName": "testSimpleConfigurationYaml(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "methodName": "testSimpleConfigurationYaml",
     "className": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
     "children": []
    },
    {
     "id": "ID#testUnderscoreInAnalyzerName(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "displayName": "testUnderscoreInAnalyzerName(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "methodName": "testUnderscoreInAnalyzerName",
     "className": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterHunspellDictionary(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "displayName": "testRegisterHunspellDictionary(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "methodName": "testRegisterHunspellDictionary",
     "className": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
     "children": []
    },
    {
     "id": "ID#testSimpleConfigurationJson(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "displayName": "testSimpleConfigurationJson(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "methodName": "testSimpleConfigurationJson",
     "className": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
     "children": []
    },
    {
     "id": "ID#testWordListPath(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "displayName": "testWordListPath(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "methodName": "testWordListPath",
     "className": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
     "children": []
    },
    {
     "id": "ID#testUnderscoreInAnalyzerNameAlias(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "displayName": "testUnderscoreInAnalyzerNameAlias(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "methodName": "testUnderscoreInAnalyzerNameAlias",
     "className": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
     "children": []
    },
    {
     "id": "ID#testVersionedAnalyzers(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "displayName": "testVersionedAnalyzers(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "methodName": "testVersionedAnalyzers",
     "className": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
     "children": []
    },
    {
     "id": "ID#testAnalyzerAliasNotAllowedPost5x(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "displayName": "testAnalyzerAliasNotAllowedPost5x(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "methodName": "testAnalyzerAliasNotAllowedPost5x",
     "className": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
     "children": []
    },
    {
     "id": "ID#testAnalyzerAliasMoreThanOnce(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "displayName": "testAnalyzerAliasMoreThanOnce(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "methodName": "testAnalyzerAliasMoreThanOnce",
     "className": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195570692
 }
]

[
 "TEST_STARTED",
 "ID#testAnalyzerAliasDefault(org.elasticsearch.indices.analysis.AnalysisModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:10,903][WARN ][org.elasticsearch.deprecation.index.analysis]  [test] setting [index.analysis.analyzer.foobar.alias] is only allowed on index [test] because it was created before 5.x; analyzer aliases can no longer be created on new indices.%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAnalyzerAliasDefault(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
  "startTimestamp": 1474195570836,
  "executionTime": 152
 }
]

[
 "TEST_STARTED",
 "ID#testAnalyzerAliasReferencesAlias(org.elasticsearch.indices.analysis.AnalysisModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:10,999][WARN ][org.elasticsearch.deprecation.index.analysis]  [test] setting [index.analysis.analyzer.foobar.alias] is only allowed on index [test] because it was created before 5.x; analyzer aliases can no longer be created on new indices.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:11,000][WARN ][org.elasticsearch.deprecation.index.analysis]  [test] setting [index.analysis.analyzer.foobar_search.alias] is only allowed on index [test] because it was created before 5.x; analyzer aliases can no longer be created on new indices.%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAnalyzerAliasReferencesAlias(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
  "startTimestamp": 1474195570988,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testAnalyzerAlias(org.elasticsearch.indices.analysis.AnalysisModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:11,010][WARN ][org.elasticsearch.deprecation.index.analysis]  [test] setting [index.analysis.analyzer.foobar.alias] is only allowed on index [test] because it was created before 5.x; analyzer aliases can no longer be created on new indices.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:11,011][WARN ][org.elasticsearch.deprecation.index.analysis]  [test] setting [index.analysis.analyzer.foobar_search.alias] is only allowed on index [test] because it was created before 5.x; analyzer aliases can no longer be created on new indices.%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAnalyzerAlias(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
  "startTimestamp": 1474195571001,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultFactoryTokenFilters(org.elasticsearch.indices.analysis.AnalysisModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultFactoryTokenFilters(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
  "startTimestamp": 1474195571011,
  "executionTime": 144
 }
]

[
 "TEST_STARTED",
 "ID#testDeprecatedPositionOffsetGap(org.elasticsearch.indices.analysis.AnalysisModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeprecatedPositionOffsetGap(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
  "startTimestamp": 1474195571155,
  "executionTime": 66
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleConfigurationYaml(org.elasticsearch.indices.analysis.AnalysisModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleConfigurationYaml(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
  "startTimestamp": 1474195571222,
  "executionTime": 151
 }
]

[
 "TEST_STARTED",
 "ID#testUnderscoreInAnalyzerName(org.elasticsearch.indices.analysis.AnalysisModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnderscoreInAnalyzerName(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
  "startTimestamp": 1474195571374,
  "executionTime": 30
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterHunspellDictionary(org.elasticsearch.indices.analysis.AnalysisModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterHunspellDictionary(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
  "startTimestamp": 1474195571404,
  "executionTime": 1878
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleConfigurationJson(org.elasticsearch.indices.analysis.AnalysisModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleConfigurationJson(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
  "startTimestamp": 1474195573283,
  "executionTime": 99
 }
]

[
 "TEST_STARTED",
 "ID#testWordListPath(org.elasticsearch.indices.analysis.AnalysisModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWordListPath(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
  "startTimestamp": 1474195573383,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testUnderscoreInAnalyzerNameAlias(org.elasticsearch.indices.analysis.AnalysisModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:13,418][WARN ][org.elasticsearch.deprecation.index.analysis]  [test] setting [index.analysis.analyzer.valid_name.alias] is only allowed on index [test] because it was created before 5.x; analyzer aliases can no longer be created on new indices.%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnderscoreInAnalyzerNameAlias(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
  "startTimestamp": 1474195573407,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testVersionedAnalyzers(org.elasticsearch.indices.analysis.AnalysisModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionedAnalyzers(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
  "startTimestamp": 1474195573420,
  "executionTime": 64
 }
]

[
 "TEST_STARTED",
 "ID#testAnalyzerAliasNotAllowedPost5x(org.elasticsearch.indices.analysis.AnalysisModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAnalyzerAliasNotAllowedPost5x(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
  "startTimestamp": 1474195573486,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testAnalyzerAliasMoreThanOnce(org.elasticsearch.indices.analysis.AnalysisModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:13,529][WARN ][org.elasticsearch.deprecation.index.analysis]  [test] setting [index.analysis.analyzer.foobar.alias] is only allowed on index [test] because it was created before 5.x; analyzer aliases can no longer be created on new indices.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:46:13,530][WARN ][org.elasticsearch.deprecation.index.analysis]  [test] setting [index.analysis.analyzer.foobar1.alias] is only allowed on index [test] because it was created before 5.x; analyzer aliases can no longer be created on new indices.%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAnalyzerAliasMoreThanOnce(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
  "startTimestamp": 1474195573501,
  "executionTime": 29
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.analysis.AnalysisModuleTests",
  "startTimestamp": 1474195570692,
  "executionTime": 2867
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.monitor.fs.FsProbeTests",
   "displayName": "org.elasticsearch.monitor.fs.FsProbeTests",
   "methodName": null,
   "className": "org.elasticsearch.monitor.fs.FsProbeTests",
   "children": [
    {
     "id": "ID#testIoStats(org.elasticsearch.monitor.fs.FsProbeTests)",
     "displayName": "testIoStats(org.elasticsearch.monitor.fs.FsProbeTests)",
     "methodName": "testIoStats",
     "className": "org.elasticsearch.monitor.fs.FsProbeTests",
     "children": []
    },
    {
     "id": "ID#testFsInfo(org.elasticsearch.monitor.fs.FsProbeTests)",
     "displayName": "testFsInfo(org.elasticsearch.monitor.fs.FsProbeTests)",
     "methodName": "testFsInfo",
     "className": "org.elasticsearch.monitor.fs.FsProbeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195573568
 }
]

[
 "TEST_STARTED",
 "ID#testIoStats(org.elasticsearch.monitor.fs.FsProbeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIoStats(org.elasticsearch.monitor.fs.FsProbeTests)",
  "startTimestamp": 1474195573597,
  "executionTime": 70
 }
]

[
 "TEST_STARTED",
 "ID#testFsInfo(org.elasticsearch.monitor.fs.FsProbeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:13,742][INFO ][org.elasticsearch.env    ] [yacAp4L] using [2] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:13,743][INFO ][org.elasticsearch.env    ] [yacAp4L] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFsInfo(org.elasticsearch.monitor.fs.FsProbeTests)",
  "startTimestamp": 1474195573667,
  "executionTime": 109
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.monitor.fs.FsProbeTests",
  "startTimestamp": 1474195573568,
  "executionTime": 242
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.bootstrap.JNANativesTests",
   "displayName": "org.elasticsearch.bootstrap.JNANativesTests",
   "methodName": null,
   "className": "org.elasticsearch.bootstrap.JNANativesTests",
   "children": [
    {
     "id": "ID#testMlockall(org.elasticsearch.bootstrap.JNANativesTests)",
     "displayName": "testMlockall(org.elasticsearch.bootstrap.JNANativesTests)",
     "methodName": "testMlockall",
     "className": "org.elasticsearch.bootstrap.JNANativesTests",
     "children": []
    },
    {
     "id": "ID#testConsoleCtrlHandler(org.elasticsearch.bootstrap.JNANativesTests)",
     "displayName": "testConsoleCtrlHandler(org.elasticsearch.bootstrap.JNANativesTests)",
     "methodName": "testConsoleCtrlHandler",
     "className": "org.elasticsearch.bootstrap.JNANativesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195573824
 }
]

[
 "TEST_STARTED",
 "ID#testMlockall(org.elasticsearch.bootstrap.JNANativesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMlockall(org.elasticsearch.bootstrap.JNANativesTests)",
  "startTimestamp": 1474195573923,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testConsoleCtrlHandler(org.elasticsearch.bootstrap.JNANativesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConsoleCtrlHandler(org.elasticsearch.bootstrap.JNANativesTests)",
  "startTimestamp": 1474195573931,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.bootstrap.JNANativesTests",
  "startTimestamp": 1474195573824,
  "executionTime": 111
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.recycler.NoneRecyclerTests",
   "displayName": "org.elasticsearch.common.recycler.NoneRecyclerTests",
   "methodName": null,
   "className": "org.elasticsearch.common.recycler.NoneRecyclerTests",
   "children": [
    {
     "id": "ID#testDoubleRelease(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "displayName": "testDoubleRelease(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "methodName": "testDoubleRelease",
     "className": "org.elasticsearch.common.recycler.NoneRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testReuse(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "displayName": "testReuse(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "methodName": "testReuse",
     "className": "org.elasticsearch.common.recycler.NoneRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testClose(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "displayName": "testClose(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "methodName": "testClose",
     "className": "org.elasticsearch.common.recycler.NoneRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testRecycle(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "displayName": "testRecycle(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "methodName": "testRecycle",
     "className": "org.elasticsearch.common.recycler.NoneRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "displayName": "testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "methodName": "testDestroyWhenOverCapacity",
     "className": "org.elasticsearch.common.recycler.NoneRecyclerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195573945
 }
]

[
 "TEST_STARTED",
 "ID#testDoubleRelease(org.elasticsearch.common.recycler.NoneRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoubleRelease(org.elasticsearch.common.recycler.NoneRecyclerTests)",
  "startTimestamp": 1474195573993,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testReuse(org.elasticsearch.common.recycler.NoneRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReuse(org.elasticsearch.common.recycler.NoneRecyclerTests)",
  "startTimestamp": 1474195574000,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClose(org.elasticsearch.common.recycler.NoneRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClose(org.elasticsearch.common.recycler.NoneRecyclerTests)",
  "startTimestamp": 1474195574002,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecycle(org.elasticsearch.common.recycler.NoneRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecycle(org.elasticsearch.common.recycler.NoneRecyclerTests)",
  "startTimestamp": 1474195574004,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.NoneRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.NoneRecyclerTests)",
  "startTimestamp": 1474195574007,
  "executionTime": 38
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.recycler.NoneRecyclerTests",
  "startTimestamp": 1474195573945,
  "executionTime": 106
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.tasks.ListTasksResponseTests",
   "displayName": "org.elasticsearch.tasks.ListTasksResponseTests",
   "methodName": null,
   "className": "org.elasticsearch.tasks.ListTasksResponseTests",
   "children": [
    {
     "id": "ID#testNonEmptyToString(org.elasticsearch.tasks.ListTasksResponseTests)",
     "displayName": "testNonEmptyToString(org.elasticsearch.tasks.ListTasksResponseTests)",
     "methodName": "testNonEmptyToString",
     "className": "org.elasticsearch.tasks.ListTasksResponseTests",
     "children": []
    },
    {
     "id": "ID#testEmptyToString(org.elasticsearch.tasks.ListTasksResponseTests)",
     "displayName": "testEmptyToString(org.elasticsearch.tasks.ListTasksResponseTests)",
     "methodName": "testEmptyToString",
     "className": "org.elasticsearch.tasks.ListTasksResponseTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195574058
 }
]

[
 "TEST_STARTED",
 "ID#testNonEmptyToString(org.elasticsearch.tasks.ListTasksResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNonEmptyToString(org.elasticsearch.tasks.ListTasksResponseTests)",
  "startTimestamp": 1474195574173,
  "executionTime": 43
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyToString(org.elasticsearch.tasks.ListTasksResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyToString(org.elasticsearch.tasks.ListTasksResponseTests)",
  "startTimestamp": 1474195574216,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.tasks.ListTasksResponseTests",
  "startTimestamp": 1474195574058,
  "executionTime": 173
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests",
   "displayName": "org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInvalidParameters(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
     "displayName": "testInvalidParameters(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
     "methodName": "testInvalidParameters",
     "className": "org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195574273
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
  "startTimestamp": 1474195574312,
  "executionTime": 214
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidParameters(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidParameters(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
  "startTimestamp": 1474195574526,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
  "startTimestamp": 1474195574533,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
  "startTimestamp": 1474195574557,
  "executionTime": 191
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests",
  "startTimestamp": 1474195574273,
  "executionTime": 485
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.ParentIdQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
   "children": [
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "displayName": "testIgnoreUnmapped(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "methodName": "testIgnoreUnmapped",
     "className": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195574788
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.ParentIdQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:15,174][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{9r0tQrQiRvKFzud0KzoHcw}{local}{local[78]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:15,216][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:15,217][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
  "startTimestamp": 1474195574854,
  "executionTime": 528
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.ParentIdQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
  "startTimestamp": 1474195575382,
  "executionTime": 49
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.ParentIdQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
  "startTimestamp": 1474195575431,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreUnmapped(org.elasticsearch.index.query.ParentIdQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
  "startTimestamp": 1474195575436,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.ParentIdQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
  "startTimestamp": 1474195575443,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.ParentIdQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
  "startTimestamp": 1474195575452,
  "executionTime": 45
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.ParentIdQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
  "startTimestamp": 1474195575498,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.ParentIdQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
  "startTimestamp": 1474195575510,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.ParentIdQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
  "startTimestamp": 1474195575519,
  "executionTime": 47
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.ParentIdQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
  "startTimestamp": 1474195575566,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.ParentIdQueryBuilderTests",
  "startTimestamp": 1474195574788,
  "executionTime": 787
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.plugins.ProgressInputStreamTests",
   "displayName": "org.elasticsearch.plugins.ProgressInputStreamTests",
   "methodName": null,
   "className": "org.elasticsearch.plugins.ProgressInputStreamTests",
   "children": [
    {
     "id": "ID#testOddBytes(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "displayName": "testOddBytes(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "methodName": "testOddBytes",
     "className": "org.elasticsearch.plugins.ProgressInputStreamTests",
     "children": []
    },
    {
     "id": "ID#testOneByte(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "displayName": "testOneByte(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "methodName": "testOneByte",
     "className": "org.elasticsearch.plugins.ProgressInputStreamTests",
     "children": []
    },
    {
     "id": "ID#testEvenBytes(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "displayName": "testEvenBytes(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "methodName": "testEvenBytes",
     "className": "org.elasticsearch.plugins.ProgressInputStreamTests",
     "children": []
    },
    {
     "id": "ID#testThatProgressListenerIsCalledOnUnexpectedCompletion(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "displayName": "testThatProgressListenerIsCalledOnUnexpectedCompletion(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "methodName": "testThatProgressListenerIsCalledOnUnexpectedCompletion",
     "className": "org.elasticsearch.plugins.ProgressInputStreamTests",
     "children": []
    },
    {
     "id": "ID#testThatProgressListenerIsCalled(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "displayName": "testThatProgressListenerIsCalled(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "methodName": "testThatProgressListenerIsCalled",
     "className": "org.elasticsearch.plugins.ProgressInputStreamTests",
     "children": []
    },
    {
     "id": "ID#testThatProgressListenerReturnsMaxValueOnWrongExpectedSize(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "displayName": "testThatProgressListenerReturnsMaxValueOnWrongExpectedSize(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "methodName": "testThatProgressListenerReturnsMaxValueOnWrongExpectedSize",
     "className": "org.elasticsearch.plugins.ProgressInputStreamTests",
     "children": []
    },
    {
     "id": "ID#testOnProgressCannotBeCalledMoreThanOncePerPercent(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "displayName": "testOnProgressCannotBeCalledMoreThanOncePerPercent(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "methodName": "testOnProgressCannotBeCalledMoreThanOncePerPercent",
     "className": "org.elasticsearch.plugins.ProgressInputStreamTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195575611
 }
]

[
 "TEST_STARTED",
 "ID#testOddBytes(org.elasticsearch.plugins.ProgressInputStreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOddBytes(org.elasticsearch.plugins.ProgressInputStreamTests)",
  "startTimestamp": 1474195575635,
  "executionTime": 36
 }
]

[
 "TEST_STARTED",
 "ID#testOneByte(org.elasticsearch.plugins.ProgressInputStreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOneByte(org.elasticsearch.plugins.ProgressInputStreamTests)",
  "startTimestamp": 1474195575672,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testEvenBytes(org.elasticsearch.plugins.ProgressInputStreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEvenBytes(org.elasticsearch.plugins.ProgressInputStreamTests)",
  "startTimestamp": 1474195575682,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testThatProgressListenerIsCalledOnUnexpectedCompletion(org.elasticsearch.plugins.ProgressInputStreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatProgressListenerIsCalledOnUnexpectedCompletion(org.elasticsearch.plugins.ProgressInputStreamTests)",
  "startTimestamp": 1474195575702,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatProgressListenerIsCalled(org.elasticsearch.plugins.ProgressInputStreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatProgressListenerIsCalled(org.elasticsearch.plugins.ProgressInputStreamTests)",
  "startTimestamp": 1474195575708,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testThatProgressListenerReturnsMaxValueOnWrongExpectedSize(org.elasticsearch.plugins.ProgressInputStreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatProgressListenerReturnsMaxValueOnWrongExpectedSize(org.elasticsearch.plugins.ProgressInputStreamTests)",
  "startTimestamp": 1474195575710,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testOnProgressCannotBeCalledMoreThanOncePerPercent(org.elasticsearch.plugins.ProgressInputStreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOnProgressCannotBeCalledMoreThanOncePerPercent(org.elasticsearch.plugins.ProgressInputStreamTests)",
  "startTimestamp": 1474195575712,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.plugins.ProgressInputStreamTests",
  "startTimestamp": 1474195575611,
  "executionTime": 106
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.FailedNodeRoutingTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.FailedNodeRoutingTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.FailedNodeRoutingTests",
   "children": [
    {
     "id": "ID#testSimpleFailedNodeTest(org.elasticsearch.cluster.routing.allocation.FailedNodeRoutingTests)",
     "displayName": "testSimpleFailedNodeTest(org.elasticsearch.cluster.routing.allocation.FailedNodeRoutingTests)",
     "methodName": "testSimpleFailedNodeTest",
     "className": "org.elasticsearch.cluster.routing.allocation.FailedNodeRoutingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195575725
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFailedNodeTest(org.elasticsearch.cluster.routing.allocation.FailedNodeRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:15,785][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start 4 nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:15,802][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:15,804][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:15,805][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0], [test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:15,806][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] remove 2 nodes where primaries are allocated, reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:15,808][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFailedNodeTest(org.elasticsearch.cluster.routing.allocation.FailedNodeRoutingTests)",
  "startTimestamp": 1474195575753,
  "executionTime": 56
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.FailedNodeRoutingTests",
  "startTimestamp": 1474195575725,
  "executionTime": 89
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.settings.SettingsModuleTests",
   "displayName": "org.elasticsearch.common.settings.SettingsModuleTests",
   "methodName": null,
   "className": "org.elasticsearch.common.settings.SettingsModuleTests",
   "children": [
    {
     "id": "ID#testRegisterShared(org.elasticsearch.common.settings.SettingsModuleTests)",
     "displayName": "testRegisterShared(org.elasticsearch.common.settings.SettingsModuleTests)",
     "methodName": "testRegisterShared",
     "className": "org.elasticsearch.common.settings.SettingsModuleTests",
     "children": []
    },
    {
     "id": "ID#testValidate(org.elasticsearch.common.settings.SettingsModuleTests)",
     "displayName": "testValidate(org.elasticsearch.common.settings.SettingsModuleTests)",
     "methodName": "testValidate",
     "className": "org.elasticsearch.common.settings.SettingsModuleTests",
     "children": []
    },
    {
     "id": "ID#testSpecialTribeSetting(org.elasticsearch.common.settings.SettingsModuleTests)",
     "displayName": "testSpecialTribeSetting(org.elasticsearch.common.settings.SettingsModuleTests)",
     "methodName": "testSpecialTribeSetting",
     "className": "org.elasticsearch.common.settings.SettingsModuleTests",
     "children": []
    },
    {
     "id": "ID#testMutuallyExclusiveScopes(org.elasticsearch.common.settings.SettingsModuleTests)",
     "displayName": "testMutuallyExclusiveScopes(org.elasticsearch.common.settings.SettingsModuleTests)",
     "methodName": "testMutuallyExclusiveScopes",
     "className": "org.elasticsearch.common.settings.SettingsModuleTests",
     "children": []
    },
    {
     "id": "ID#testOldMaxClauseCountSetting(org.elasticsearch.common.settings.SettingsModuleTests)",
     "displayName": "testOldMaxClauseCountSetting(org.elasticsearch.common.settings.SettingsModuleTests)",
     "methodName": "testOldMaxClauseCountSetting",
     "className": "org.elasticsearch.common.settings.SettingsModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterSettings(org.elasticsearch.common.settings.SettingsModuleTests)",
     "displayName": "testRegisterSettings(org.elasticsearch.common.settings.SettingsModuleTests)",
     "methodName": "testRegisterSettings",
     "className": "org.elasticsearch.common.settings.SettingsModuleTests",
     "children": []
    },
    {
     "id": "ID#testLoggerSettings(org.elasticsearch.common.settings.SettingsModuleTests)",
     "displayName": "testLoggerSettings(org.elasticsearch.common.settings.SettingsModuleTests)",
     "methodName": "testLoggerSettings",
     "className": "org.elasticsearch.common.settings.SettingsModuleTests",
     "children": []
    },
    {
     "id": "ID#testTribeSetting(org.elasticsearch.common.settings.SettingsModuleTests)",
     "displayName": "testTribeSetting(org.elasticsearch.common.settings.SettingsModuleTests)",
     "methodName": "testTribeSetting",
     "className": "org.elasticsearch.common.settings.SettingsModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterSettingsFilter(org.elasticsearch.common.settings.SettingsModuleTests)",
     "displayName": "testRegisterSettingsFilter(org.elasticsearch.common.settings.SettingsModuleTests)",
     "methodName": "testRegisterSettingsFilter",
     "className": "org.elasticsearch.common.settings.SettingsModuleTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195575825
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterShared(org.elasticsearch.common.settings.SettingsModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterShared(org.elasticsearch.common.settings.SettingsModuleTests)",
  "startTimestamp": 1474195575956,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testValidate(org.elasticsearch.common.settings.SettingsModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:46:16,001][WARN ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] %0D%0A*************************************************************************************%0D%0AFound index level settings on node level configuration.%0D%0A%0D%0ASince elasticsearch 5.x index level settings can NOT be set on the nodes %0D%0Aconfiguration like the elasticsearch.yaml, in system properties or command line %0D%0Aarguments.In order to upgrade all indices the settings must be updated via the %0D%0A/${index}/_settings API. Unless all settings are dynamic all indices must be closed %0D%0Ain order to apply the upgradeIndices created in the future should use index templates %0D%0Ato set default values. %0D%0A%0D%0APlease ensure all required values are updated on all indices by executing: %0D%0A%0D%0Acurl -XPUT 'http://localhost:9200/_all/_settings?preserve_existing=true' -d '{%0A  \"index.foo.bar\" : \"1\"%0A}'%0D%0A*************************************************************************************%0D%0A%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidate(org.elasticsearch.common.settings.SettingsModuleTests)",
  "startTimestamp": 1474195575964,
  "executionTime": 72
 }
]

[
 "TEST_STARTED",
 "ID#testSpecialTribeSetting(org.elasticsearch.common.settings.SettingsModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSpecialTribeSetting(org.elasticsearch.common.settings.SettingsModuleTests)",
  "startTimestamp": 1474195576036,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testMutuallyExclusiveScopes(org.elasticsearch.common.settings.SettingsModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMutuallyExclusiveScopes(org.elasticsearch.common.settings.SettingsModuleTests)",
  "startTimestamp": 1474195576047,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testOldMaxClauseCountSetting(org.elasticsearch.common.settings.SettingsModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOldMaxClauseCountSetting(org.elasticsearch.common.settings.SettingsModuleTests)",
  "startTimestamp": 1474195576056,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterSettings(org.elasticsearch.common.settings.SettingsModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterSettings(org.elasticsearch.common.settings.SettingsModuleTests)",
  "startTimestamp": 1474195576067,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testLoggerSettings(org.elasticsearch.common.settings.SettingsModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLoggerSettings(org.elasticsearch.common.settings.SettingsModuleTests)",
  "startTimestamp": 1474195576079,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testTribeSetting(org.elasticsearch.common.settings.SettingsModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTribeSetting(org.elasticsearch.common.settings.SettingsModuleTests)",
  "startTimestamp": 1474195576089,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterSettingsFilter(org.elasticsearch.common.settings.SettingsModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterSettingsFilter(org.elasticsearch.common.settings.SettingsModuleTests)",
  "startTimestamp": 1474195576097,
  "executionTime": 16
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.settings.SettingsModuleTests",
  "startTimestamp": 1474195575825,
  "executionTime": 290
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.index.ESDirectoryReaderTests",
   "displayName": "org.elasticsearch.common.lucene.index.ESDirectoryReaderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.index.ESDirectoryReaderTests",
   "children": [
    {
     "id": "ID#testCoreCacheKey(org.elasticsearch.common.lucene.index.ESDirectoryReaderTests)",
     "displayName": "testCoreCacheKey(org.elasticsearch.common.lucene.index.ESDirectoryReaderTests)",
     "methodName": "testCoreCacheKey",
     "className": "org.elasticsearch.common.lucene.index.ESDirectoryReaderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195576122
 }
]

[
 "TEST_STARTED",
 "ID#testCoreCacheKey(org.elasticsearch.common.lucene.index.ESDirectoryReaderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCoreCacheKey(org.elasticsearch.common.lucene.index.ESDirectoryReaderTests)",
  "startTimestamp": 1474195576145,
  "executionTime": 24
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.index.ESDirectoryReaderTests",
  "startTimestamp": 1474195576122,
  "executionTime": 51
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.PercentileRanksTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.PercentileRanksTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.PercentileRanksTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.PercentileRanksTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.PercentileRanksTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.PercentileRanksTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195576184
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:46:16,229][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{9fXre1LVTWmuPBgLxxsfng}{local}{local[83]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)",
  "startTimestamp": 1474195576245,
  "executionTime": 295
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)",
  "startTimestamp": 1474195576540,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)",
  "startTimestamp": 1474195576543,
  "executionTime": 37
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.PercentileRanksTests",
  "startTimestamp": 1474195576184,
  "executionTime": 400
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.StemmerTokenFilterFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.StemmerTokenFilterFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.StemmerTokenFilterFactoryTests",
   "children": [
    {
     "id": "ID#testPorter2FilterFactory(org.elasticsearch.index.analysis.StemmerTokenFilterFactoryTests)",
     "displayName": "testPorter2FilterFactory(org.elasticsearch.index.analysis.StemmerTokenFilterFactoryTests)",
     "methodName": "testPorter2FilterFactory",
     "className": "org.elasticsearch.index.analysis.StemmerTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testEnglishFilterFactory(org.elasticsearch.index.analysis.StemmerTokenFilterFactoryTests)",
     "displayName": "testEnglishFilterFactory(org.elasticsearch.index.analysis.StemmerTokenFilterFactoryTests)",
     "methodName": "testEnglishFilterFactory",
     "className": "org.elasticsearch.index.analysis.StemmerTokenFilterFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195576593
 }
]

[
 "TEST_STARTED",
 "ID#testPorter2FilterFactory(org.elasticsearch.index.analysis.StemmerTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPorter2FilterFactory(org.elasticsearch.index.analysis.StemmerTokenFilterFactoryTests)",
  "startTimestamp": 1474195576621,
  "executionTime": 362
 }
]

[
 "TEST_STARTED",
 "ID#testEnglishFilterFactory(org.elasticsearch.index.analysis.StemmerTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnglishFilterFactory(org.elasticsearch.index.analysis.StemmerTokenFilterFactoryTests)",
  "startTimestamp": 1474195576983,
  "executionTime": 1474
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.StemmerTokenFilterFactoryTests",
  "startTimestamp": 1474195576593,
  "executionTime": 1992
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.AutoExpandReplicasTests",
   "displayName": "org.elasticsearch.cluster.metadata.AutoExpandReplicasTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.AutoExpandReplicasTests",
   "children": [
    {
     "id": "ID#testParseSettings(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)",
     "displayName": "testParseSettings(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)",
     "methodName": "testParseSettings",
     "className": "org.elasticsearch.cluster.metadata.AutoExpandReplicasTests",
     "children": []
    },
    {
     "id": "ID#testInvalidValues(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)",
     "displayName": "testInvalidValues(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)",
     "methodName": "testInvalidValues",
     "className": "org.elasticsearch.cluster.metadata.AutoExpandReplicasTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195578601
 }
]

[
 "TEST_STARTED",
 "ID#testParseSettings(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseSettings(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)",
  "startTimestamp": 1474195578620,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidValues(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidValues(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)",
  "startTimestamp": 1474195578622,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.AutoExpandReplicasTests",
  "startTimestamp": 1474195578601,
  "executionTime": 25
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.path.PathTrieTests",
   "displayName": "org.elasticsearch.common.path.PathTrieTests",
   "methodName": null,
   "className": "org.elasticsearch.common.path.PathTrieTests",
   "children": [
    {
     "id": "ID#testSamePathConcreteResolution(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testSamePathConcreteResolution(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testSamePathConcreteResolution",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testPreferNonWildcardExecution(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testPreferNonWildcardExecution(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testPreferNonWildcardExecution",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testEscapedSlashWithinUrl(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testEscapedSlashWithinUrl(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testEscapedSlashWithinUrl",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testEmptyPath(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testEmptyPath(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testEmptyPath",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testSameNameOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testSameNameOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testSameNameOnDifferentPath",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testNamedWildcardAndLookupWithWildcard(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testNamedWildcardAndLookupWithWildcard(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testNamedWildcardAndLookupWithWildcard",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testPath(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testPath(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testPath",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testDifferentNamesOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testDifferentNamesOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testDifferentNamesOnDifferentPath",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195578631
 }
]

[
 "TEST_STARTED",
 "ID#testSamePathConcreteResolution(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSamePathConcreteResolution(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1474195578648,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testPreferNonWildcardExecution(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreferNonWildcardExecution(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1474195578650,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEscapedSlashWithinUrl(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEscapedSlashWithinUrl(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1474195578652,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyPath(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyPath(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1474195578654,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSameNameOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSameNameOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1474195578657,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNamedWildcardAndLookupWithWildcard(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNamedWildcardAndLookupWithWildcard(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1474195578659,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testPath(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPath(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1474195578660,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDifferentNamesOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDifferentNamesOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1474195578662,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.path.PathTrieTests",
  "startTimestamp": 1474195578631,
  "executionTime": 34
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.ParentFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.ParentFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.ParentFieldMapperTests",
   "children": [
    {
     "id": "ID#testPost2Dot0LazyLoading(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "displayName": "testPost2Dot0LazyLoading(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "methodName": "testPost2Dot0LazyLoading",
     "className": "org.elasticsearch.index.mapper.ParentFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNoParentNullFieldCreatedIfNoParentSpecified(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "displayName": "testNoParentNullFieldCreatedIfNoParentSpecified(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "methodName": "testNoParentNullFieldCreatedIfNoParentSpecified",
     "className": "org.elasticsearch.index.mapper.ParentFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testParentSetInDocNotAllowed(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "displayName": "testParentSetInDocNotAllowed(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "methodName": "testParentSetInDocNotAllowed",
     "className": "org.elasticsearch.index.mapper.ParentFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testJoinFieldNotSet(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "displayName": "testJoinFieldNotSet(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "methodName": "testJoinFieldNotSet",
     "className": "org.elasticsearch.index.mapper.ParentFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testJoinFieldSet(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "displayName": "testJoinFieldSet(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "methodName": "testJoinFieldSet",
     "className": "org.elasticsearch.index.mapper.ParentFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testPost2Dot0EagerLoading(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "displayName": "testPost2Dot0EagerLoading(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
     "methodName": "testPost2Dot0EagerLoading",
     "className": "org.elasticsearch.index.mapper.ParentFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195578672
 }
]

[
 "TEST_STARTED",
 "ID#testPost2Dot0LazyLoading(org.elasticsearch.index.mapper.ParentFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:18,710][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:18,745][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:18,745][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:18,749][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[8784], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:18,751][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:18,751][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:18,968][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:18,969][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:18,970][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[2]}, bound_addresses {local[2]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:19,041][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{zSxNB4sNRR2W2gJB0VU9LQ}{ij6-8XSRQLyiSJ6dOA4W1A}{local}{local[2]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:19,043][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:19,108][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:19,325][INFO ][org.elasticsearch.index.mapper] [node_s_0] [3H9IBs3kSXCBnbocq1_e3A] [ParentFieldMapperTests#testPost2Dot0LazyLoading]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPost2Dot0LazyLoading(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
  "startTimestamp": 1474195578692,
  "executionTime": 636
 }
]

[
 "TEST_STARTED",
 "ID#testNoParentNullFieldCreatedIfNoParentSpecified(org.elasticsearch.index.mapper.ParentFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:19,345][INFO ][org.elasticsearch.index.mapper]  [_index] [ParentFieldMapperTests#testNoParentNullFieldCreatedIfNoParentSpecified]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoParentNullFieldCreatedIfNoParentSpecified(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
  "startTimestamp": 1474195579329,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testParentSetInDocNotAllowed(org.elasticsearch.index.mapper.ParentFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:19,357][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:19,633][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:19,903][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ParentFieldMapperTests#testParentSetInDocNotAllowed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParentSetInDocNotAllowed(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
  "startTimestamp": 1474195579347,
  "executionTime": 609
 }
]

[
 "TEST_STARTED",
 "ID#testJoinFieldNotSet(org.elasticsearch.index.mapper.ParentFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:19,970][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:20,060][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:20,079][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ParentFieldMapperTests#testJoinFieldNotSet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testJoinFieldNotSet(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
  "startTimestamp": 1474195579956,
  "executionTime": 179
 }
]

[
 "TEST_STARTED",
 "ID#testJoinFieldSet(org.elasticsearch.index.mapper.ParentFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:20,142][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:20,242][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:20,267][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ParentFieldMapperTests#testJoinFieldSet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testJoinFieldSet(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
  "startTimestamp": 1474195580135,
  "executionTime": 172
 }
]

[
 "TEST_STARTED",
 "ID#testPost2Dot0EagerLoading(org.elasticsearch.index.mapper.ParentFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:20,310][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ParentFieldMapperTests#testPost2Dot0EagerLoading]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPost2Dot0EagerLoading(org.elasticsearch.index.mapper.ParentFieldMapperTests)",
  "startTimestamp": 1474195580307,
  "executionTime": 5
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:20,312][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:20,313][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:20,314][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:20,317][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.ParentFieldMapperTests",
  "startTimestamp": 1474195578672,
  "executionTime": 1664
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.BoolQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.BoolQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
   "children": [
    {
     "id": "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testFromJsonEmptyQueryBody(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testFromJsonEmptyQueryBody",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMinShouldMatchDisableCoord(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testMinShouldMatchDisableCoord(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testMinShouldMatchDisableCoord",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRewriteMultipleTimes(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testRewriteMultipleTimes(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testRewriteMultipleTimes",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownQueryName(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testUnknownQueryName(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testUnknownQueryName",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRewrite(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testRewrite(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testRewrite",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testTooManyQueriesInObject(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testTooManyQueriesInObject(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testTooManyQueriesInObject",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEmptyBooleanQuery(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testEmptyBooleanQuery(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testEmptyBooleanQuery",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDefaultMinShouldMatch(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testDefaultMinShouldMatch(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testDefaultMinShouldMatch",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMinShouldMatchFilterWithoutShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testMinShouldMatchFilterWithoutShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testMinShouldMatchFilterWithoutShouldClauses",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMinShouldMatchBiggerThanNumberOfShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testMinShouldMatchBiggerThanNumberOfShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testMinShouldMatchBiggerThanNumberOfShouldClauses",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMinShouldMatchFilterWithShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testMinShouldMatchFilterWithShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testMinShouldMatchFilterWithShouldClauses",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195580346
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:46:20,445][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{jMeH-NaPSVywx_KPWRsotQ}{local}{local[84]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:46:20,463][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:46:20,463][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:46:20,481][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:27]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:46:20,482][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:46]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:46:20,483][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:100]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:46:20,484][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:27]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474195580400,
  "executionTime": 87
 }
]

[
 "TEST_STARTED",
 "ID#testMinShouldMatchDisableCoord(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinShouldMatchDisableCoord(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474195580487,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474195580511,
  "executionTime": 55
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474195580566,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testRewriteMultipleTimes(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRewriteMultipleTimes(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474195580587,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownQueryName(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownQueryName(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474195580593,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474195580602,
  "executionTime": 43
 }
]

[
 "TEST_STARTED",
 "ID#testRewrite(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRewrite(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474195580645,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testTooManyQueriesInObject(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTooManyQueriesInObject(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474195580648,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyBooleanQuery(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyBooleanQuery(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474195580657,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultMinShouldMatch(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultMinShouldMatch(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474195580661,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474195580669,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474195580672,
  "executionTime": 32
 }
]

[
 "TEST_STARTED",
 "ID#testMinShouldMatchFilterWithoutShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinShouldMatchFilterWithoutShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474195580704,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474195580707,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474195580714,
  "executionTime": 233
 }
]

[
 "TEST_STARTED",
 "ID#testMinShouldMatchBiggerThanNumberOfShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinShouldMatchBiggerThanNumberOfShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474195580947,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMinShouldMatchFilterWithShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinShouldMatchFilterWithShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474195580950,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474195580953,
  "executionTime": 37
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474195580990,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1474195580994,
  "executionTime": 112
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.BoolQueryBuilderTests",
  "startTimestamp": 1474195580346,
  "executionTime": 767
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests",
   "displayName": "org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests",
   "methodName": null,
   "className": "org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests",
   "children": [
    {
     "id": "ID#testParseXContentForAnalyzeRequestWithUnknownParamThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "displayName": "testParseXContentForAnalyzeRequestWithUnknownParamThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "methodName": "testParseXContentForAnalyzeRequestWithUnknownParamThrowsException",
     "className": "org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests",
     "children": []
    },
    {
     "id": "ID#testParseXContentForAnalyzeRequestWithCustomFilters(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "displayName": "testParseXContentForAnalyzeRequestWithCustomFilters(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "methodName": "testParseXContentForAnalyzeRequestWithCustomFilters",
     "className": "org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests",
     "children": []
    },
    {
     "id": "ID#testParseXContentForAnalyzeRequestWithInvalidJsonThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "displayName": "testParseXContentForAnalyzeRequestWithInvalidJsonThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "methodName": "testParseXContentForAnalyzeRequestWithInvalidJsonThrowsException",
     "className": "org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests",
     "children": []
    },
    {
     "id": "ID#testDeprecatedParamException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "displayName": "testDeprecatedParamException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "methodName": "testDeprecatedParamException",
     "className": "org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests",
     "children": []
    },
    {
     "id": "ID#testParseXContentForAnalyzeRequest(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "displayName": "testParseXContentForAnalyzeRequest(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "methodName": "testParseXContentForAnalyzeRequest",
     "className": "org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests",
     "children": []
    },
    {
     "id": "ID#testParseXContentForAnalyzeRequestWithInvalidStringExplainParamThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "displayName": "testParseXContentForAnalyzeRequestWithInvalidStringExplainParamThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "methodName": "testParseXContentForAnalyzeRequestWithInvalidStringExplainParamThrowsException",
     "className": "org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195581122
 }
]

[
 "TEST_STARTED",
 "ID#testParseXContentForAnalyzeRequestWithUnknownParamThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseXContentForAnalyzeRequestWithUnknownParamThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
  "startTimestamp": 1474195581146,
  "executionTime": 43
 }
]

[
 "TEST_STARTED",
 "ID#testParseXContentForAnalyzeRequestWithCustomFilters(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseXContentForAnalyzeRequestWithCustomFilters(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
  "startTimestamp": 1474195581189,
  "executionTime": 42
 }
]

[
 "TEST_STARTED",
 "ID#testParseXContentForAnalyzeRequestWithInvalidJsonThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseXContentForAnalyzeRequestWithInvalidJsonThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
  "startTimestamp": 1474195581232,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDeprecatedParamException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeprecatedParamException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
  "startTimestamp": 1474195581234,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParseXContentForAnalyzeRequest(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseXContentForAnalyzeRequest(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
  "startTimestamp": 1474195581236,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseXContentForAnalyzeRequestWithInvalidStringExplainParamThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseXContentForAnalyzeRequestWithInvalidStringExplainParamThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
  "startTimestamp": 1474195581238,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests",
  "startTimestamp": 1474195581122,
  "executionTime": 119
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.collect.CopyOnWriteHashMapTests",
   "displayName": "org.elasticsearch.common.collect.CopyOnWriteHashMapTests",
   "methodName": null,
   "className": "org.elasticsearch.common.collect.CopyOnWriteHashMapTests",
   "children": [
    {
     "id": "ID#testDuel(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
     "displayName": "testDuel(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
     "methodName": "testDuel",
     "className": "org.elasticsearch.common.collect.CopyOnWriteHashMapTests",
     "children": []
    },
    {
     "id": "ID#testUnsupportedValues(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
     "displayName": "testUnsupportedValues(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
     "methodName": "testUnsupportedValues",
     "className": "org.elasticsearch.common.collect.CopyOnWriteHashMapTests",
     "children": []
    },
    {
     "id": "ID#testUnsupportedAPIs(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
     "displayName": "testUnsupportedAPIs(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
     "methodName": "testUnsupportedAPIs",
     "className": "org.elasticsearch.common.collect.CopyOnWriteHashMapTests",
     "children": []
    },
    {
     "id": "ID#testCollision(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
     "displayName": "testCollision(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
     "methodName": "testCollision",
     "className": "org.elasticsearch.common.collect.CopyOnWriteHashMapTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195581248
 }
]

[
 "TEST_STARTED",
 "ID#testDuel(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuel(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
  "startTimestamp": 1474195581276,
  "executionTime": 112
 }
]

[
 "TEST_STARTED",
 "ID#testUnsupportedValues(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnsupportedValues(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
  "startTimestamp": 1474195581388,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnsupportedAPIs(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnsupportedAPIs(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
  "startTimestamp": 1474195581390,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCollision(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCollision(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
  "startTimestamp": 1474195581392,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.collect.CopyOnWriteHashMapTests",
  "startTimestamp": 1474195581248,
  "executionTime": 148
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.SearchRequestTests",
   "displayName": "org.elasticsearch.search.SearchRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.search.SearchRequestTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.SearchRequestTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.SearchRequestTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.SearchRequestTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.SearchRequestTests)",
     "displayName": "testSerialization(org.elasticsearch.search.SearchRequestTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.SearchRequestTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.search.SearchRequestTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.search.SearchRequestTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.search.SearchRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195581403
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.SearchRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.SearchRequestTests)",
  "startTimestamp": 1474195581420,
  "executionTime": 309
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.SearchRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.SearchRequestTests)",
  "startTimestamp": 1474195581729,
  "executionTime": 237
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.search.SearchRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.search.SearchRequestTests)",
  "startTimestamp": 1474195581966,
  "executionTime": 16
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.SearchRequestTests",
  "startTimestamp": 1474195581403,
  "executionTime": 586
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
   "displayName": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
   "methodName": null,
   "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
   "children": [
    {
     "id": "ID#testIncomingClusterStateValidation(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testIncomingClusterStateValidation(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testIncomingClusterStateValidation",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testSerializationFailureDuringDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testSerializationFailureDuringDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testSerializationFailureDuringDiffPublishing",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testPublishingWithSendingErrors(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testPublishingWithSendingErrors(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testPublishingWithSendingErrors",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testOutOfOrderCommitMessages(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testOutOfOrderCommitMessages(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testOutOfOrderCommitMessages",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testUnexpectedDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testUnexpectedDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testUnexpectedDiffPublishing",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testSimultaneousClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testSimultaneousClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testSimultaneousClusterStatePublishing",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testFailToPublishWithLessThanMinMasterNodes(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testFailToPublishWithLessThanMinMasterNodes(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testFailToPublishWithLessThanMinMasterNodes",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testDisablingDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testDisablingDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testDisablingDiffPublishing",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testTimeoutOrCommit(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testTimeoutOrCommit(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testTimeoutOrCommit",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testSimpleClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testSimpleClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testSimpleClusterStatePublishing",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195582052
 }
]

[
 "TEST_STARTED",
 "ID#testIncomingClusterStateValidation(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,121][INFO ][org.elasticsearch.test.transport] publish_address {local[3]}, bound_addresses {local[3]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,208][INFO ][org.elasticsearch.discovery.zen.publish] --> testing acceptances of any master when having no master%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,208][INFO ][org.elasticsearch.discovery.zen.publish] --> testing rejection of another master%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,208][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state from a different master than the current one, rejecting (received null, current null)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,209][INFO ][org.elasticsearch.discovery.zen.publish] --> test state from the current master is accepted%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,209][INFO ][org.elasticsearch.discovery.zen.publish] --> testing rejection of another cluster name%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,209][WARN ][org.elasticsearch.discovery.zen.publish] received cluster state from [null] which is also master but with a different cluster name [Cluster [ObdycxuZGv]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,209][INFO ][org.elasticsearch.discovery.zen.publish] --> testing rejection of a cluster state with wrong local node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,209][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state from [null] and not part of the cluster, should not happen%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,211][INFO ][org.elasticsearch.test.transport] publish_address {local[4]}, bound_addresses {local[4]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,217][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state from [null] and not part of the cluster, should not happen%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,217][INFO ][org.elasticsearch.discovery.zen.publish] --> testing acceptance of an old cluster state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,217][DEBUG][org.elasticsearch.discovery.zen.publish] received a cluster state that is not newer than the current one, ignoring (received 0, current 1)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,218][WARN ][org.elasticsearch.discovery.zen.publish] rejecting cluster state version [0] uuid [KbMmEQClS-iP7Ajc0gDI4g] received from [master]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncomingClusterStateValidation(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1474195582084,
  "executionTime": 138
 }
]

[
 "TEST_STARTED",
 "ID#testSerializationFailureDuringDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,227][INFO ][org.elasticsearch.test.transport] publish_address {local[5]}, bound_addresses {local[5]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,257][INFO ][org.elasticsearch.test.transport] publish_address {local[6]}, bound_addresses {local[6]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,519][DEBUG][org.elasticsearch.discovery.zen.publish] received diff for but don't have any local cluster state - requesting full state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,599][DEBUG][org.elasticsearch.discovery.zen.publish] resending full cluster state to node {CoqVchN5TSKGJO0NDKK6pw}{XizG2yyqR7u0ArB3b-8OKw}{local}{local[6]} reason RemoteTransportException[[][local[5]][internal:discovery/zen/publish/send]]; nested: IncompatibleClusterStateVersionException[have no local cluster state];; org.elasticsearch.cluster.IncompatibleClusterStateVersionException: have no local cluster state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,640][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [1] with size [209]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,655][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [IXVBk1IHTWKuIGcm9XZelA], version [1]) to [{CoqVchN5TSKGJO0NDKK6pw}{XizG2yyqR7u0ArB3b-8OKw}{local}{local[6]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,670][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [1], uuid [IXVBk1IHTWKuIGcm9XZelA]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerializationFailureDuringDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1474195582222,
  "executionTime": 461
 }
]

[
 "TEST_STARTED",
 "ID#testPublishingWithSendingErrors(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,688][INFO ][org.elasticsearch.test.transport] publish_address {local[7]}, bound_addresses {local[7]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,716][INFO ][org.elasticsearch.test.transport] publish_address {local[8]}, bound_addresses {local[8]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,731][INFO ][org.elasticsearch.test.transport] publish_address {local[9]}, bound_addresses {local[9]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,737][INFO ][org.elasticsearch.test.transport] publish_address {local[10]}, bound_addresses {local[10]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,742][INFO ][org.elasticsearch.test.transport] publish_address {local[11]}, bound_addresses {local[11]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,753][INFO ][org.elasticsearch.test.transport] publish_address {local[12]}, bound_addresses {local[12]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,756][INFO ][org.elasticsearch.test.transport] publish_address {local[13]}, bound_addresses {local[13]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,761][INFO ][org.elasticsearch.test.transport] publish_address {local[14]}, bound_addresses {local[14]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,770][INFO ][org.elasticsearch.test.transport] publish_address {local[15]}, bound_addresses {local[15]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,791][INFO ][org.elasticsearch.test.transport] publish_address {local[16]}, bound_addresses {local[16]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,796][INFO ][org.elasticsearch.discovery.zen.publish] --> expecting commit to timeout. good nodes [3], errors [3], timeouts [3]. min_master_nodes [7]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,811][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [0] with size [540]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,816][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [0] with size [540]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,825][DEBUG][org.elasticsearch.discovery.zen.publish] failed to send cluster state to {RZrLuQDhRReowh7uRvMdsw}{Of_YA30ZSiOAaaR25Un5Lw}{local}{local[11]}%0D%0Aorg.elasticsearch.transport.RemoteTransportException: [][local[7]][internal:discovery/zen/publish/send]%0ACaused by: org.elasticsearch.ElasticsearchException: forced error on incoming cluster state%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests$MockPublishAction.handleIncomingClusterStateRequest(PublishClusterStateActionTests.java:860) ~[test/:?]%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendClusterStateRequestHandler.messageReceived(PublishClusterStateAction.java:459) ~[main/:?]%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendClusterStateRequestHandler.messageReceived(PublishClusterStateAction.java:455) ~[main/:?]%0A%09at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33) ~[main/:?]%0A%09at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:69) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.handleRequest(LocalTransport.java:335) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.processReceivedMessage(LocalTransport.java:283) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.lambda$receiveMessage$0(LocalTransport.java:251) ~[main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:444) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,829][DEBUG][org.elasticsearch.discovery.zen.publish] failed to send cluster state to {IsOv3SwYTRyzH-YzlD6gDg}{elOzWb7_RzODPv942juLqg}{local}{local[16]}%0D%0Aorg.elasticsearch.transport.RemoteTransportException: [][local[7]][internal:discovery/zen/publish/send]%0ACaused by: org.elasticsearch.ElasticsearchException: forced error on incoming cluster state%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests$MockPublishAction.handleIncomingClusterStateRequest(PublishClusterStateActionTests.java:860) ~[test/:?]%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendClusterStateRequestHandler.messageReceived(PublishClusterStateAction.java:459) ~[main/:?]%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendClusterStateRequestHandler.messageReceived(PublishClusterStateAction.java:455) ~[main/:?]%0A%09at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33) ~[main/:?]%0A%09at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:69) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.handleRequest(LocalTransport.java:335) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.processReceivedMessage(LocalTransport.java:283) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.lambda$receiveMessage$0(LocalTransport.java:251) ~[main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:444) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,831][TRACE][org.elasticsearch.discovery.zen.publish] master node {RZrLuQDhRReowh7uRvMdsw}{Of_YA30ZSiOAaaR25Un5Lw}{local}{local[11]} failed to ack cluster state version [0]. processing ... (current pending [8], needed [6])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,832][DEBUG][org.elasticsearch.discovery.zen.publish] failed to send cluster state to {glQWK-69Sei9yBuujzSzow}{S5MOD0L2Tka-M0hxZKlV6w}{local}{local[12]}%0D%0Aorg.elasticsearch.transport.RemoteTransportException: [][local[7]][internal:discovery/zen/publish/send]%0ACaused by: org.elasticsearch.ElasticsearchException: forced error on incoming cluster state%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests$MockPublishAction.handleIncomingClusterStateRequest(PublishClusterStateActionTests.java:860) ~[test/:?]%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendClusterStateRequestHandler.messageReceived(PublishClusterStateAction.java:459) ~[main/:?]%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendClusterStateRequestHandler.messageReceived(PublishClusterStateAction.java:455) ~[main/:?]%0A%09at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33) ~[main/:?]%0A%09at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:69) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.handleRequest(LocalTransport.java:335) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.processReceivedMessage(LocalTransport.java:283) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.lambda$receiveMessage$0(LocalTransport.java:251) ~[main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:444) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,832][TRACE][org.elasticsearch.discovery.zen.publish] master node {glQWK-69Sei9yBuujzSzow}{S5MOD0L2Tka-M0hxZKlV6w}{local}{local[12]} failed to ack cluster state version [0]. processing ... (current pending [7], needed [6])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,833][DEBUG][org.elasticsearch.discovery.zen.publish] failed to send cluster state to {o8zXUZ9VT3eVmouQy_xQ-Q}{x5qH65UmSJWYWee_QOq-Gg}{local}{local[10]}%0D%0Aorg.elasticsearch.transport.RemoteTransportException: [][local[7]][internal:discovery/zen/publish/send]%0ACaused by: org.elasticsearch.ElasticsearchException: forced error on incoming cluster state%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests$MockPublishAction.handleIncomingClusterStateRequest(PublishClusterStateActionTests.java:860) ~[test/:?]%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendClusterStateRequestHandler.messageReceived(PublishClusterStateAction.java:459) ~[main/:?]%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendClusterStateRequestHandler.messageReceived(PublishClusterStateAction.java:455) ~[main/:?]%0A%09at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33) ~[main/:?]%0A%09at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:69) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.handleRequest(LocalTransport.java:335) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.processReceivedMessage(LocalTransport.java:283) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.lambda$receiveMessage$0(LocalTransport.java:251) ~[main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:444) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,833][TRACE][org.elasticsearch.discovery.zen.publish] master node {o8zXUZ9VT3eVmouQy_xQ-Q}{x5qH65UmSJWYWee_QOq-Gg}{local}{local[10]} failed to ack cluster state version [0]. processing ... (current pending [6], needed [6])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,834][TRACE][org.elasticsearch.discovery.zen.publish] master node {x2QIUtYvRpmcFgnw-n1HmQ}{2GV94esWRRS6YCuIGmtHNA}{local}{local[9]} acked cluster state version [0]. processing ... (current pending [5], needed [6])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,834][TRACE][org.elasticsearch.discovery.zen.publish] master node {p4eF4m_eQJqZjtyuN0r7Ng}{Gvd1tVQCS8iMQ3r_ZRySSw}{local}{local[8]} acked cluster state version [0]. processing ... (current pending [4], needed [5])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,918][TRACE][org.elasticsearch.discovery.zen.publish] failed to commit version [0]. timed out waiting for commit (commit timeout [100ms])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,923][DEBUG][org.elasticsearch.discovery.zen.publish] failed to send cluster state to {t9MQ6sB4RnaPc_q5mTL2bQ}{8_owLI5lQmqoJyUiat7ocQ}{local}{local[13]}%0D%0Aorg.elasticsearch.transport.NodeDisconnectedException: [][local[13]][internal:discovery/zen/publish/send] disconnected%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,924][TRACE][org.elasticsearch.discovery.zen.publish] master node {t9MQ6sB4RnaPc_q5mTL2bQ}{8_owLI5lQmqoJyUiat7ocQ}{local}{local[13]} failed to ack cluster state version [0]. processing ... (current pending [3], needed [4])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,924][DEBUG][org.elasticsearch.discovery.zen.publish] failed to send cluster state to {tA4uDhK6RGiDs9HbprZ_MA}{YZ6atxsFRe-Of9nJSTjATw}{local}{local[14]}%0D%0Aorg.elasticsearch.transport.NodeDisconnectedException: [][local[14]][internal:discovery/zen/publish/send] disconnected%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,925][TRACE][org.elasticsearch.discovery.zen.publish] master node {tA4uDhK6RGiDs9HbprZ_MA}{YZ6atxsFRe-Of9nJSTjATw}{local}{local[14]} failed to ack cluster state version [0]. processing ... (current pending [2], needed [4])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,925][DEBUG][org.elasticsearch.discovery.zen.publish] failed to send cluster state to {90Iq0OwcTUq7JcFKCR7D3Q}{ZWTxxdnjQzaTKEvTvUHZXQ}{local}{local[15]}%0D%0Aorg.elasticsearch.transport.NodeDisconnectedException: [][local[15]][internal:discovery/zen/publish/send] disconnected%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,925][TRACE][org.elasticsearch.discovery.zen.publish] master node {90Iq0OwcTUq7JcFKCR7D3Q}{ZWTxxdnjQzaTKEvTvUHZXQ}{local}{local[15]} failed to ack cluster state version [0]. processing ... (current pending [1], needed [4])%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPublishingWithSendingErrors(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1474195582683,
  "executionTime": 246
 }
]

[
 "TEST_STARTED",
 "ID#testOutOfOrderCommitMessages(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,934][INFO ][org.elasticsearch.test.transport] publish_address {local[17]}, bound_addresses {local[17]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,939][INFO ][org.elasticsearch.discovery.zen.publish] --> publishing states%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,940][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [1] with size [158]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,940][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [2] with size [160]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,941][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [3] with size [160]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,942][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [4] with size [160]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,942][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [5] with size [160]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,943][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [6] with size [160]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,944][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [7] with size [160]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,944][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [8] with size [160]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,945][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [9] with size [160]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,945][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [10] with size [160]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,946][INFO ][org.elasticsearch.discovery.zen.publish] --> committing states%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,946][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [9], uuid [0SRfYJdMSmq4Ib4faELcig]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,946][TRACE][org.elasticsearch.discovery.zen.publish] processing pending state uuid[hyBcIHE-T8O41lO2KAUt-g]/v[1] together with state uuid[0SRfYJdMSmq4Ib4faELcig]/v[9]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,946][TRACE][org.elasticsearch.discovery.zen.publish] processing pending state uuid[pLOTzJLVSw2ZARhht1oqhA]/v[2] together with state uuid[0SRfYJdMSmq4Ib4faELcig]/v[9]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,946][TRACE][org.elasticsearch.discovery.zen.publish] processing pending state uuid[iuigH-XaTiOS4Yp1WrgP4g]/v[3] together with state uuid[0SRfYJdMSmq4Ib4faELcig]/v[9]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,946][TRACE][org.elasticsearch.discovery.zen.publish] processing pending state uuid[imdum7J5Rwu6q1LAxZESWA]/v[4] together with state uuid[0SRfYJdMSmq4Ib4faELcig]/v[9]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,946][TRACE][org.elasticsearch.discovery.zen.publish] processing pending state uuid[ZqC2iDdNQUGBe8qd8rmLCA]/v[5] together with state uuid[0SRfYJdMSmq4Ib4faELcig]/v[9]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,946][TRACE][org.elasticsearch.discovery.zen.publish] processing pending state uuid[YLsXrAfJSCmLsA6QbG0llw]/v[6] together with state uuid[0SRfYJdMSmq4Ib4faELcig]/v[9]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,946][TRACE][org.elasticsearch.discovery.zen.publish] processing pending state uuid[cOTqgUhsRF6NZPvBByXGlw]/v[7] together with state uuid[0SRfYJdMSmq4Ib4faELcig]/v[9]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,947][TRACE][org.elasticsearch.discovery.zen.publish] processing pending state uuid[A0BdVgdIR4qWewuYx1ID9A]/v[8] together with state uuid[0SRfYJdMSmq4Ib4faELcig]/v[9]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,947][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [10], uuid [KFKUqOD9QkuXg2SNADTHOw]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOutOfOrderCommitMessages(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1474195582929,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testUnexpectedDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,959][INFO ][org.elasticsearch.test.transport] publish_address {local[18]}, bound_addresses {local[18]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,968][INFO ][org.elasticsearch.test.transport] publish_address {local[19]}, bound_addresses {local[19]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,973][DEBUG][org.elasticsearch.discovery.zen.publish] received diff for but don't have any local cluster state - requesting full state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,977][DEBUG][org.elasticsearch.discovery.zen.publish] resending full cluster state to node {qEKFHWiAR5WHxJIEmXu-ig}{HxYeChf-S-OKjxrotVFLRg}{local}{local[19]} reason RemoteTransportException[[][local[18]][internal:discovery/zen/publish/send]]; nested: IncompatibleClusterStateVersionException[have no local cluster state];; org.elasticsearch.cluster.IncompatibleClusterStateVersionException: have no local cluster state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,978][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [1] with size [212]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,980][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [c0szxPJ5T5mkghH7qdDZew], version [1]) to [{qEKFHWiAR5WHxJIEmXu-ig}{HxYeChf-S-OKjxrotVFLRg}{local}{local[19]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,981][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [1], uuid [c0szxPJ5T5mkghH7qdDZew]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,990][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [2] with uuid [-ou4q3PpSQaDRDX0DJyg_Q], diff size [133]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:22,999][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [-ou4q3PpSQaDRDX0DJyg_Q], version [2]) to [{qEKFHWiAR5WHxJIEmXu-ig}{HxYeChf-S-OKjxrotVFLRg}{local}{local[19]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,000][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [2], uuid [-ou4q3PpSQaDRDX0DJyg_Q]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnexpectedDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1474195582948,
  "executionTime": 55
 }
]

[
 "TEST_STARTED",
 "ID#testSimultaneousClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,009][INFO ][org.elasticsearch.test.transport] publish_address {local[20]}, bound_addresses {local[20]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,015][INFO ][org.elasticsearch.test.transport] publish_address {local[21]}, bound_addresses {local[21]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,027][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [1] with size [286]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,028][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [rnLOP6KoQRWTD79x7UeheA], version [1]) to [{79CZ-ab6SqWnYbfz4nYjrg}{xwBsL07mSoiv8Xu4WMufWA}{local}{local[21]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,031][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [1], uuid [rnLOP6KoQRWTD79x7UeheA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,034][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [2] with size [305]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,036][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [UCsfUt5QSe6aH63FlPjoMQ], version [2]) to [{79CZ-ab6SqWnYbfz4nYjrg}{xwBsL07mSoiv8Xu4WMufWA}{local}{local[21]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,045][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [2], uuid [UCsfUt5QSe6aH63FlPjoMQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,052][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [3] with size [324]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,053][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [v7XHrDSjTUWLGMVdKmyvYQ], version [3]) to [{79CZ-ab6SqWnYbfz4nYjrg}{xwBsL07mSoiv8Xu4WMufWA}{local}{local[21]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,053][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [3], uuid [v7XHrDSjTUWLGMVdKmyvYQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,058][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [4] with size [338]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,058][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [XEwxuwnOSfaGMx2k4lmUOA], version [4]) to [{79CZ-ab6SqWnYbfz4nYjrg}{xwBsL07mSoiv8Xu4WMufWA}{local}{local[21]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,059][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [4], uuid [XEwxuwnOSfaGMx2k4lmUOA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,060][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [5] with size [359]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,061][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [eEprJeFKT0yZakNPNWw8Wg], version [5]) to [{79CZ-ab6SqWnYbfz4nYjrg}{xwBsL07mSoiv8Xu4WMufWA}{local}{local[21]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,062][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [5], uuid [eEprJeFKT0yZakNPNWw8Wg]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,063][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [6] with size [373]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,064][TRACE][org.elasticsearch.discovery.zen.publish] master node {79CZ-ab6SqWnYbfz4nYjrg}{xwBsL07mSoiv8Xu4WMufWA}{local}{local[21]} acked cluster state version [6]. processing ... (current pending [1], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,064][TRACE][org.elasticsearch.discovery.zen.publish] committing version [6]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,064][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [jPKofpp1TBuj55RIfTWFew], version [6]) to [{79CZ-ab6SqWnYbfz4nYjrg}{xwBsL07mSoiv8Xu4WMufWA}{local}{local[21]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,065][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [6], uuid [jPKofpp1TBuj55RIfTWFew]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimultaneousClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1474195583003,
  "executionTime": 64
 }
]

[
 "TEST_STARTED",
 "ID#testFailToPublishWithLessThanMinMasterNodes(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,072][INFO ][org.elasticsearch.test.transport] publish_address {local[22]}, bound_addresses {local[22]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,076][INFO ][org.elasticsearch.test.transport] publish_address {local[23]}, bound_addresses {local[23]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,081][INFO ][org.elasticsearch.test.transport] publish_address {local[24]}, bound_addresses {local[24]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,084][INFO ][org.elasticsearch.test.transport] publish_address {local[25]}, bound_addresses {local[25]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,089][INFO ][org.elasticsearch.test.transport] publish_address {local[26]}, bound_addresses {local[26]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,107][INFO ][org.elasticsearch.test.transport] publish_address {local[27]}, bound_addresses {local[27]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,118][INFO ][org.elasticsearch.test.transport] publish_address {local[28]}, bound_addresses {local[28]}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailToPublishWithLessThanMinMasterNodes(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1474195583067,
  "executionTime": 56
 }
]

[
 "TEST_STARTED",
 "ID#testDisablingDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,129][INFO ][org.elasticsearch.test.transport] publish_address {local[29]}, bound_addresses {local[29]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,149][INFO ][org.elasticsearch.test.transport] publish_address {local[30]}, bound_addresses {local[30]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,195][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [1] with size [212]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,218][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [Qf-GAWUDSVqTltuRqKM-0Q], version [1]) to [{UolObmSBSIy_0ldCTkCVbg}{sQ2N55rVS2yS7XmE_dyLcQ}{local}{local[30]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,260][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [1], uuid [Qf-GAWUDSVqTltuRqKM-0Q]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,297][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [2] with size [255]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,305][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [Gh8mDaemQzmuCW0jwn9AWA], version [2]) to [{UolObmSBSIy_0ldCTkCVbg}{sQ2N55rVS2yS7XmE_dyLcQ}{local}{local[30]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,310][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [2], uuid [Gh8mDaemQzmuCW0jwn9AWA]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDisablingDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1474195583124,
  "executionTime": 194
 }
]

[
 "TEST_STARTED",
 "ID#testTimeoutOrCommit(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,325][INFO ][org.elasticsearch.test.transport] publish_address {local[31]}, bound_addresses {local[31]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,365][INFO ][org.elasticsearch.test.transport] publish_address {local[32]}, bound_addresses {local[32]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,385][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [1], UUID [CjxBkQ7UTy2ifF3jdjmASA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,394][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [1] with size [210]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,401][TRACE][org.elasticsearch.discovery.zen.publish] failed to commit version [1]. timed out waiting for commit (commit timeout [1ms])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,401][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [failed], verifying...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,402][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [2], UUID [yCuqYIhRQ0uXh1hvF6IvGg]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,412][TRACE][org.elasticsearch.discovery.zen.publish] ignoring ack from [{j3IBgn66SlKKSPHaEpK-yw}{lMe2hhj9SuOEtGQzygTPPQ}{local}{local[32]}] for cluster state version [1]. already failed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,413][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [2] with size [211]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,417][TRACE][org.elasticsearch.discovery.zen.publish] failed to commit version [2]. timed out waiting for commit (commit timeout [1ms])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,418][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [failed], verifying...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,418][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [3], UUID [kyIzQyTFQH6ASPbhU84QdA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,424][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [3] with size [213]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,424][TRACE][org.elasticsearch.discovery.zen.publish] ignoring ack from [{j3IBgn66SlKKSPHaEpK-yw}{lMe2hhj9SuOEtGQzygTPPQ}{local}{local[32]}] for cluster state version [2]. already failed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,427][TRACE][org.elasticsearch.discovery.zen.publish] master node {j3IBgn66SlKKSPHaEpK-yw}{lMe2hhj9SuOEtGQzygTPPQ}{local}{local[32]} acked cluster state version [3]. processing ... (current pending [1], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,428][TRACE][org.elasticsearch.discovery.zen.publish] committing version [3]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,428][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [kyIzQyTFQH6ASPbhU84QdA], version [3]) to [{j3IBgn66SlKKSPHaEpK-yw}{lMe2hhj9SuOEtGQzygTPPQ}{local}{local[32]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,432][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [3], uuid [kyIzQyTFQH6ASPbhU84QdA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,432][TRACE][org.elasticsearch.discovery.zen.publish] processing pending state uuid[CjxBkQ7UTy2ifF3jdjmASA]/v[1] together with state uuid[kyIzQyTFQH6ASPbhU84QdA]/v[3]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,432][TRACE][org.elasticsearch.discovery.zen.publish] processing pending state uuid[yCuqYIhRQ0uXh1hvF6IvGg]/v[2] together with state uuid[kyIzQyTFQH6ASPbhU84QdA]/v[3]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,436][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [succeeded], verifying...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,437][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [4], UUID [2x5KSjP4S2SUJ1j3TSkGPg]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,437][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [4] with size [211]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,438][TRACE][org.elasticsearch.discovery.zen.publish] master node {j3IBgn66SlKKSPHaEpK-yw}{lMe2hhj9SuOEtGQzygTPPQ}{local}{local[32]} acked cluster state version [4]. processing ... (current pending [1], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,438][TRACE][org.elasticsearch.discovery.zen.publish] committing version [4]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,438][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [2x5KSjP4S2SUJ1j3TSkGPg], version [4]) to [{j3IBgn66SlKKSPHaEpK-yw}{lMe2hhj9SuOEtGQzygTPPQ}{local}{local[32]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,438][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [4], uuid [2x5KSjP4S2SUJ1j3TSkGPg]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,439][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [succeeded], verifying...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,439][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [5], UUID [lnP0jdlBTY6aMJ_qmNnFOQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,440][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [5] with size [212]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,440][TRACE][org.elasticsearch.discovery.zen.publish] master node {j3IBgn66SlKKSPHaEpK-yw}{lMe2hhj9SuOEtGQzygTPPQ}{local}{local[32]} acked cluster state version [5]. processing ... (current pending [1], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,440][TRACE][org.elasticsearch.discovery.zen.publish] committing version [5]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,440][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [lnP0jdlBTY6aMJ_qmNnFOQ], version [5]) to [{j3IBgn66SlKKSPHaEpK-yw}{lMe2hhj9SuOEtGQzygTPPQ}{local}{local[32]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,442][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [5], uuid [lnP0jdlBTY6aMJ_qmNnFOQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,442][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [succeeded], verifying...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,442][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [6], UUID [lAEy-ov_S7-RGKce50YvcQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,443][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [6] with size [213]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,443][TRACE][org.elasticsearch.discovery.zen.publish] master node {j3IBgn66SlKKSPHaEpK-yw}{lMe2hhj9SuOEtGQzygTPPQ}{local}{local[32]} acked cluster state version [6]. processing ... (current pending [1], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,444][TRACE][org.elasticsearch.discovery.zen.publish] committing version [6]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,444][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [lAEy-ov_S7-RGKce50YvcQ], version [6]) to [{j3IBgn66SlKKSPHaEpK-yw}{lMe2hhj9SuOEtGQzygTPPQ}{local}{local[32]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,445][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [6], uuid [lAEy-ov_S7-RGKce50YvcQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,445][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [succeeded], verifying...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,445][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [7], UUID [St0ndQm6TjWna7NDxGpvjg]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,446][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [7] with size [212]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,447][TRACE][org.elasticsearch.discovery.zen.publish] master node {j3IBgn66SlKKSPHaEpK-yw}{lMe2hhj9SuOEtGQzygTPPQ}{local}{local[32]} acked cluster state version [7]. processing ... (current pending [1], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,447][TRACE][org.elasticsearch.discovery.zen.publish] committing version [7]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,448][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [St0ndQm6TjWna7NDxGpvjg], version [7]) to [{j3IBgn66SlKKSPHaEpK-yw}{lMe2hhj9SuOEtGQzygTPPQ}{local}{local[32]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,448][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [7], uuid [St0ndQm6TjWna7NDxGpvjg]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,449][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [succeeded], verifying...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,449][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [8], UUID [1GeT0KGPQSuYcUrijqrN0g]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,450][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [8] with size [211]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,450][TRACE][org.elasticsearch.discovery.zen.publish] master node {j3IBgn66SlKKSPHaEpK-yw}{lMe2hhj9SuOEtGQzygTPPQ}{local}{local[32]} acked cluster state version [8]. processing ... (current pending [1], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,450][TRACE][org.elasticsearch.discovery.zen.publish] committing version [8]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,450][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [1GeT0KGPQSuYcUrijqrN0g], version [8]) to [{j3IBgn66SlKKSPHaEpK-yw}{lMe2hhj9SuOEtGQzygTPPQ}{local}{local[32]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,451][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [8], uuid [1GeT0KGPQSuYcUrijqrN0g]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,451][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [succeeded], verifying...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,451][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [9], UUID [OMjcYWCiRICyT-HV1y0xNg]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,452][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [9] with size [213]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,452][TRACE][org.elasticsearch.discovery.zen.publish] master node {j3IBgn66SlKKSPHaEpK-yw}{lMe2hhj9SuOEtGQzygTPPQ}{local}{local[32]} acked cluster state version [9]. processing ... (current pending [1], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,452][TRACE][org.elasticsearch.discovery.zen.publish] committing version [9]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,452][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [OMjcYWCiRICyT-HV1y0xNg], version [9]) to [{j3IBgn66SlKKSPHaEpK-yw}{lMe2hhj9SuOEtGQzygTPPQ}{local}{local[32]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,453][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [9], uuid [OMjcYWCiRICyT-HV1y0xNg]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,453][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [succeeded], verifying...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,453][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [10], UUID [S71BIs2iQv6z1Lhmia3sYw]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,454][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [10] with size [213]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,454][TRACE][org.elasticsearch.discovery.zen.publish] master node {j3IBgn66SlKKSPHaEpK-yw}{lMe2hhj9SuOEtGQzygTPPQ}{local}{local[32]} acked cluster state version [10]. processing ... (current pending [1], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,454][TRACE][org.elasticsearch.discovery.zen.publish] committing version [10]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,455][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [S71BIs2iQv6z1Lhmia3sYw], version [10]) to [{j3IBgn66SlKKSPHaEpK-yw}{lMe2hhj9SuOEtGQzygTPPQ}{local}{local[32]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,455][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [10], uuid [S71BIs2iQv6z1Lhmia3sYw]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,455][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [succeeded], verifying...%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeoutOrCommit(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1474195583318,
  "executionTime": 139
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,462][INFO ][org.elasticsearch.test.transport] publish_address {local[33]}, bound_addresses {local[33]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,467][INFO ][org.elasticsearch.test.transport] publish_address {local[34]}, bound_addresses {local[34]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,473][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [1] with size [211]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,483][TRACE][org.elasticsearch.discovery.zen.publish] master node {hJnSwUcFRYG_3jxXNRVGhQ}{Shs3XZEjRTKE-K4TCzAnoQ}{local}{local[34]} acked cluster state version [1]. processing ... (current pending [1], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,483][TRACE][org.elasticsearch.discovery.zen.publish] committing version [1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,483][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [Z_up8wPwTO2KVtqoiG6_xw], version [1]) to [{hJnSwUcFRYG_3jxXNRVGhQ}{Shs3XZEjRTKE-K4TCzAnoQ}{local}{local[34]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,489][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [1], uuid [Z_up8wPwTO2KVtqoiG6_xw]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,499][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [2] with uuid [mnpSnLHCSQmHau7jhaJudQ], diff size [133]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,500][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [mnpSnLHCSQmHau7jhaJudQ], version [2]) to [{hJnSwUcFRYG_3jxXNRVGhQ}{Shs3XZEjRTKE-K4TCzAnoQ}{local}{local[34]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,508][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [2], uuid [mnpSnLHCSQmHau7jhaJudQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,511][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [3] with uuid [paGiMfPZTTaCYEbOIx1vfQ], diff size [91]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,512][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [paGiMfPZTTaCYEbOIx1vfQ], version [3]) to [{hJnSwUcFRYG_3jxXNRVGhQ}{Shs3XZEjRTKE-K4TCzAnoQ}{local}{local[34]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,512][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [3], uuid [paGiMfPZTTaCYEbOIx1vfQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,513][INFO ][org.elasticsearch.test.transport] publish_address {local[35]}, bound_addresses {local[35]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,521][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [4] with uuid [dg1ZmC4RQxyZqPYofeWTxg], diff size [262]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,523][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [4] with size [256]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,524][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [dg1ZmC4RQxyZqPYofeWTxg], version [4]) to [{hJnSwUcFRYG_3jxXNRVGhQ}{Shs3XZEjRTKE-K4TCzAnoQ}{local}{local[34]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,524][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [4], uuid [dg1ZmC4RQxyZqPYofeWTxg]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,524][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [dg1ZmC4RQxyZqPYofeWTxg], version [4]) to [{QG5TrmtyTS6hq5dBi1qgnQ}{fawbS2C5TJKE4KixeKeQ2Q}{local}{local[35]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,529][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [4], uuid [dg1ZmC4RQxyZqPYofeWTxg]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,532][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [5] with uuid [G4PBfqe0TrOQ6ImSB3zIWA], diff size [101]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,532][TRACE][org.elasticsearch.discovery.zen.publish] master node {hJnSwUcFRYG_3jxXNRVGhQ}{Shs3XZEjRTKE-K4TCzAnoQ}{local}{local[34]} acked cluster state version [5]. processing ... (current pending [2], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,532][TRACE][org.elasticsearch.discovery.zen.publish] committing version [5]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,532][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [G4PBfqe0TrOQ6ImSB3zIWA], version [5]) to [{hJnSwUcFRYG_3jxXNRVGhQ}{Shs3XZEjRTKE-K4TCzAnoQ}{local}{local[34]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,533][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [5], uuid [G4PBfqe0TrOQ6ImSB3zIWA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,540][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [5] with uuid [G4PBfqe0TrOQ6ImSB3zIWA], diff size [101]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,540][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [G4PBfqe0TrOQ6ImSB3zIWA], version [5]) to [{QG5TrmtyTS6hq5dBi1qgnQ}{fawbS2C5TJKE4KixeKeQ2Q}{local}{local[35]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,567][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [5], uuid [G4PBfqe0TrOQ6ImSB3zIWA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,570][DEBUG][org.elasticsearch.discovery.zen.publish] resending full cluster state to node {QG5TrmtyTS6hq5dBi1qgnQ}{fawbS2C5TJKE4KixeKeQ2Q}{local}{local[35]} reason RemoteTransportException[[][local[33]][internal:discovery/zen/publish/send]]; nested: IncompatibleClusterStateVersionException[Expected diff for version 5 with uuid G4PBfqe0TrOQ6ImSB3zIWA got version 6 and uuid CY1EAK4VQMWqcJNv81liRQ];; org.elasticsearch.cluster.IncompatibleClusterStateVersionException: Expected diff for version 5 with uuid G4PBfqe0TrOQ6ImSB3zIWA got version 6 and uuid CY1EAK4VQMWqcJNv81liRQ%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,573][DEBUG][org.elasticsearch.discovery.zen.publish] resending full cluster state to node {hJnSwUcFRYG_3jxXNRVGhQ}{Shs3XZEjRTKE-K4TCzAnoQ}{local}{local[34]} reason RemoteTransportException[[][local[33]][internal:discovery/zen/publish/send]]; nested: IncompatibleClusterStateVersionException[Expected diff for version 5 with uuid G4PBfqe0TrOQ6ImSB3zIWA got version 6 and uuid CY1EAK4VQMWqcJNv81liRQ];; org.elasticsearch.cluster.IncompatibleClusterStateVersionException: Expected diff for version 5 with uuid G4PBfqe0TrOQ6ImSB3zIWA got version 6 and uuid CY1EAK4VQMWqcJNv81liRQ%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,574][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [6] with size [263]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,576][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [6] with size [263]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,577][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [35reiK09Qeu7JO1Lk4etKQ], version [6]) to [{hJnSwUcFRYG_3jxXNRVGhQ}{Shs3XZEjRTKE-K4TCzAnoQ}{local}{local[34]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,578][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [35reiK09Qeu7JO1Lk4etKQ], version [6]) to [{QG5TrmtyTS6hq5dBi1qgnQ}{fawbS2C5TJKE4KixeKeQ2Q}{local}{local[35]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,579][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [6], uuid [35reiK09Qeu7JO1Lk4etKQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,579][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [6], uuid [35reiK09Qeu7JO1Lk4etKQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,582][DEBUG][org.elasticsearch.discovery.zen.publish] received diff for but don't have any local cluster state - requesting full state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,585][DEBUG][org.elasticsearch.discovery.zen.publish] resending full cluster state to node {QG5TrmtyTS6hq5dBi1qgnQ}{fawbS2C5TJKE4KixeKeQ2Q}{local}{local[35]} reason RemoteTransportException[[][local[34]][internal:discovery/zen/publish/send]]; nested: IncompatibleClusterStateVersionException[Expected diff for version 6 with uuid 35reiK09Qeu7JO1Lk4etKQ got version 7 and uuid 9BXQrLT3SHyoK_ke5vA1FQ];; org.elasticsearch.cluster.IncompatibleClusterStateVersionException: Expected diff for version 6 with uuid 35reiK09Qeu7JO1Lk4etKQ got version 7 and uuid 9BXQrLT3SHyoK_ke5vA1FQ%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,587][DEBUG][org.elasticsearch.discovery.zen.publish] resending full cluster state to node {9E4trVeIRiSTJ4o4qQc0aQ}{Qb_onXpZQviut1uVjtNjiA}{local}{local[33]} reason RemoteTransportException[[][local[34]][internal:discovery/zen/publish/send]]; nested: IncompatibleClusterStateVersionException[have no local cluster state];; org.elasticsearch.cluster.IncompatibleClusterStateVersionException: have no local cluster state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,589][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [7] with size [266]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,589][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [7] with size [266]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,590][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [MkfBjXmrSb-AAp5zb8QKIg], version [7]) to [{QG5TrmtyTS6hq5dBi1qgnQ}{fawbS2C5TJKE4KixeKeQ2Q}{local}{local[35]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,590][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [MkfBjXmrSb-AAp5zb8QKIg], version [7]) to [{9E4trVeIRiSTJ4o4qQc0aQ}{Qb_onXpZQviut1uVjtNjiA}{local}{local[33]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,590][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [7], uuid [MkfBjXmrSb-AAp5zb8QKIg]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:23,590][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [7], uuid [MkfBjXmrSb-AAp5zb8QKIg]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1474195583457,
  "executionTime": 137
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
  "startTimestamp": 1474195582052,
  "executionTime": 1545
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests",
   "displayName": "org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests",
   "children": [
    {
     "id": "ID#testZero(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "displayName": "testZero(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "methodName": "testZero",
     "className": "org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests",
     "children": []
    },
    {
     "id": "ID#testLargerThanDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "displayName": "testLargerThanDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "methodName": "testLargerThanDefault",
     "className": "org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests",
     "children": []
    },
    {
     "id": "ID#testNegativeIsError(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "displayName": "testNegativeIsError(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "methodName": "testNegativeIsError",
     "className": "org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests",
     "children": []
    },
    {
     "id": "ID#testDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "displayName": "testDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "methodName": "testDefault",
     "className": "org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests",
     "children": []
    },
    {
     "id": "ID#testDefaultDefaultsToAnalyzer(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "displayName": "testDefaultDefaultsToAnalyzer(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "methodName": "testDefaultDefaultsToAnalyzer",
     "className": "org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests",
     "children": []
    },
    {
     "id": "ID#testSmallerThanDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "displayName": "testSmallerThanDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "methodName": "testSmallerThanDefault",
     "className": "org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195583606
 }
]

[
 "TEST_STARTED",
 "ID#testZero(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:46:23,646][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:46:23,681][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:46:23,681][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:46:23,685][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[8784], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:46:23,689][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:46:23,691][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:46:23,894][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:46:23,894][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:46:23,895][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[36]}, bound_addresses {local[36]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:46:23,898][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{AZvxceEqTVaL5xRu7mv8RQ}{tpeTu-ZNSJuRd6PTIQ3hvA}{local}{local[36]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:46:23,899][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:46:23,917][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:46:23,961][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:46:24,083][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:46:24,754][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringFieldMapperPositionIncrementGapTests#testZero]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testZero(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
  "startTimestamp": 1474195583636,
  "executionTime": 1191
 }
]

[
 "TEST_STARTED",
 "ID#testLargerThanDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:46:24,839][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:46:25,030][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:46:25,398][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringFieldMapperPositionIncrementGapTests#testLargerThanDefault]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLargerThanDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
  "startTimestamp": 1474195584828,
  "executionTime": 616
 }
]

[
 "TEST_STARTED",
 "ID#testNegativeIsError(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:46:25,459][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringFieldMapperPositionIncrementGapTests#testNegativeIsError]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNegativeIsError(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
  "startTimestamp": 1474195585445,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:46:25,471][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [auto(index api)], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:46:25,527][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:46:25,550][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/fR-LEjsmQaqz1kDMOvuh5A] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:46:25,965][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringFieldMapperPositionIncrementGapTests#testDefault]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
  "startTimestamp": 1474195585461,
  "executionTime": 545
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultDefaultsToAnalyzer(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:46:26,018][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:46:26,076][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:46:26,219][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringFieldMapperPositionIncrementGapTests#testDefaultDefaultsToAnalyzer]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultDefaultsToAnalyzer(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
  "startTimestamp": 1474195586006,
  "executionTime": 255
 }
]

[
 "TEST_STARTED",
 "ID#testSmallerThanDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:46:26,275][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:46:26,340][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:46:26,622][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringFieldMapperPositionIncrementGapTests#testSmallerThanDefault]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSmallerThanDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
  "startTimestamp": 1474195586262,
  "executionTime": 434
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:46:26,697][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:46:26,698][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:46:26,698][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:46:26,701][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests",
  "startTimestamp": 1474195583606,
  "executionTime": 3107
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.WildcardQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
   "children": [
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEmptyValue(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testEmptyValue(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testEmptyValue",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testParseFailsWithMultipleFields(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testParseFailsWithMultipleFields",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195586720
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:26,789][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{7HfJB6AQSzm_GNjIL71Z3g}{local}{local[85]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:26,801][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:26,801][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:26,854][WARN ][org.elasticsearch.deprecation.index.mapper]  [kIgOO] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:26,854][WARN ][org.elasticsearch.deprecation.index.mapper]  [kIgOO] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:26,854][WARN ][org.elasticsearch.deprecation.index.mapper]  [kIgOO] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:26,869][WARN ][org.elasticsearch.deprecation.index.mapper]  [kIgOO] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:26,869][WARN ][org.elasticsearch.deprecation.index.mapper]  [kIgOO] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:26,869][WARN ][org.elasticsearch.deprecation.index.mapper]  [kIgOO] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:26,873][WARN ][org.elasticsearch.deprecation.index.mapper]  [kIgOO] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:26,874][WARN ][org.elasticsearch.deprecation.index.mapper]  [kIgOO] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:26,874][WARN ][org.elasticsearch.deprecation.index.mapper]  [kIgOO] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:26,877][WARN ][org.elasticsearch.deprecation.index.mapper]  [kIgOO] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:26,877][WARN ][org.elasticsearch.deprecation.index.mapper]  [kIgOO] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:26,877][WARN ][org.elasticsearch.deprecation.index.mapper]  [kIgOO] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:26,885][WARN ][org.elasticsearch.deprecation.index.mapper]  [kIgOO] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:26,885][WARN ][org.elasticsearch.deprecation.index.mapper]  [kIgOO] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:26,885][WARN ][org.elasticsearch.deprecation.index.mapper]  [kIgOO] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:26,894][WARN ][org.elasticsearch.deprecation.index.mapper]  [kIgOO] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:26,894][WARN ][org.elasticsearch.deprecation.index.mapper]  [kIgOO] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:26,894][WARN ][org.elasticsearch.deprecation.index.mapper]  [kIgOO] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:26,896][WARN ][org.elasticsearch.deprecation.index.mapper]  [kIgOO] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:26,896][WARN ][org.elasticsearch.deprecation.index.mapper]  [kIgOO] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:26,896][WARN ][org.elasticsearch.deprecation.index.mapper]  [kIgOO] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:26,900][WARN ][org.elasticsearch.deprecation.index.mapper]  [kIgOO] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:26,900][WARN ][org.elasticsearch.deprecation.index.mapper]  [kIgOO] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:26,900][WARN ][org.elasticsearch.deprecation.index.mapper]  [kIgOO] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:26,906][WARN ][org.elasticsearch.deprecation.index.mapper]  [kIgOO] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:26,906][WARN ][org.elasticsearch.deprecation.index.mapper]  [kIgOO] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:26,906][WARN ][org.elasticsearch.deprecation.index.mapper]  [kIgOO] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:26,908][WARN ][org.elasticsearch.deprecation.index.mapper]  [kIgOO] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:26,908][WARN ][org.elasticsearch.deprecation.index.mapper]  [kIgOO] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:26,908][WARN ][org.elasticsearch.deprecation.index.mapper]  [kIgOO] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:26,912][WARN ][org.elasticsearch.deprecation.index.mapper]  [kIgOO] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:26,912][WARN ][org.elasticsearch.deprecation.index.mapper]  [kIgOO] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:26,912][WARN ][org.elasticsearch.deprecation.index.mapper]  [kIgOO] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:26,918][WARN ][org.elasticsearch.deprecation.index.mapper]  [kIgOO] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:26,918][WARN ][org.elasticsearch.deprecation.index.mapper]  [kIgOO] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:26,918][WARN ][org.elasticsearch.deprecation.index.mapper]  [kIgOO] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1474195586783,
  "executionTime": 172
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyValue(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyValue(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1474195586955,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1474195586957,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1474195586960,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1474195586965,
  "executionTime": 47
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1474195587013,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1474195587016,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1474195587019,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1474195587026,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1474195587028,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1474195587032,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1474195587035,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.WildcardQueryBuilderTests",
  "startTimestamp": 1474195586720,
  "executionTime": 323
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.IdFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.IdFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.IdFieldMapperTests",
   "children": [
    {
     "id": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.IdFieldMapperTests)",
     "displayName": "testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.IdFieldMapperTests)",
     "methodName": "testIncludeInObjectNotAllowed",
     "className": "org.elasticsearch.index.mapper.IdFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testId(org.elasticsearch.index.mapper.IdFieldMapperTests)",
     "displayName": "testId(org.elasticsearch.index.mapper.IdFieldMapperTests)",
     "methodName": "testId",
     "className": "org.elasticsearch.index.mapper.IdFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195587049
 }
]

[
 "TEST_STARTED",
 "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.IdFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:27,096][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:27,133][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:27,134][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:27,139][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[8784], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:27,142][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:27,142][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:27,291][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:27,291][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:27,292][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[37]}, bound_addresses {local[37]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:27,295][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{N_nfIPh5SYGZjz933H0NZw}{Zuhu9-A0T4OH3ADKBTVzuw}{local}{local[37]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:27,295][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:27,320][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:27,349][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:27,409][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:27,425][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [IdFieldMapperTests#testIncludeInObjectNotAllowed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.IdFieldMapperTests)",
  "startTimestamp": 1474195587087,
  "executionTime": 374
 }
]

[
 "TEST_STARTED",
 "ID#testId(org.elasticsearch.index.mapper.IdFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:27,468][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:27,606][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:27,631][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [IdFieldMapperTests#testId]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testId(org.elasticsearch.index.mapper.IdFieldMapperTests)",
  "startTimestamp": 1474195587461,
  "executionTime": 200
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:27,661][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:27,662][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:27,662][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:16:27,664][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.IdFieldMapperTests",
  "startTimestamp": 1474195587049,
  "executionTime": 624
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.IndicesLifecycleListenerSingleNodeTests",
   "displayName": "org.elasticsearch.indices.IndicesLifecycleListenerSingleNodeTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.IndicesLifecycleListenerSingleNodeTests",
   "children": [
    {
     "id": "ID#testCloseDeleteCallback(org.elasticsearch.indices.IndicesLifecycleListenerSingleNodeTests)",
     "displayName": "testCloseDeleteCallback(org.elasticsearch.indices.IndicesLifecycleListenerSingleNodeTests)",
     "methodName": "testCloseDeleteCallback",
     "className": "org.elasticsearch.indices.IndicesLifecycleListenerSingleNodeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195587679
 }
]

[
 "TEST_STARTED",
 "ID#testCloseDeleteCallback(org.elasticsearch.indices.IndicesLifecycleListenerSingleNodeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:27,716][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:27,766][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:27,766][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:27,779][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[8784], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:27,783][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:27,783][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:28,011][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:28,012][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:28,015][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[38]}, bound_addresses {local[38]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:28,033][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{BWLh5257TwuKgZoETIrr6w}{qzuOERgwR9CMp7ov9Ci1lg}{local}{local[38]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:28,034][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:28,089][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:28,110][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:28,709][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:28,812][INFO ][org.elasticsearch.indices] [node_s_0] [IndicesLifecycleListenerSingleNodeTests#testCloseDeleteCallback]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCloseDeleteCallback(org.elasticsearch.indices.IndicesLifecycleListenerSingleNodeTests)",
  "startTimestamp": 1474195587706,
  "executionTime": 1123
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:28,829][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:28,830][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:28,830][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:28,832][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.IndicesLifecycleListenerSingleNodeTests",
  "startTimestamp": 1474195587679,
  "executionTime": 1159
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.TermsTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.TermsTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.TermsTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.TermsTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.TermsTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.TermsTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.TermsTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.TermsTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.TermsTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.TermsTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.TermsTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.TermsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195588848
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:46:28,980][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{1neR815VQ1W-92-vv0UoCQ}{local}{local[87]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.TermsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.TermsTests)",
  "startTimestamp": 1474195588991,
  "executionTime": 52
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.TermsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.TermsTests)",
  "startTimestamp": 1474195589043,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.TermsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.TermsTests)",
  "startTimestamp": 1474195589046,
  "executionTime": 69
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.TermsTests",
  "startTimestamp": 1474195588848,
  "executionTime": 271
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests",
   "children": [
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "displayName": "testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "methodName": "testIsFieldWithinQuery",
     "className": "org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "displayName": "testValueForSearch(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "methodName": "testValueForSearch",
     "className": "org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195589131
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
  "startTimestamp": 1474195589158,
  "executionTime": 30
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
  "startTimestamp": 1474195589188,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
  "startTimestamp": 1474195589191,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
  "startTimestamp": 1474195589193,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
  "startTimestamp": 1474195589196,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
  "startTimestamp": 1474195589198,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
  "startTimestamp": 1474195589200,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests",
  "startTimestamp": 1474195589131,
  "executionTime": 103
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.ShardRoutingTests",
   "displayName": "org.elasticsearch.cluster.routing.ShardRoutingTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.ShardRoutingTests",
   "children": [
    {
     "id": "ID#testExpectedSize(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "displayName": "testExpectedSize(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "methodName": "testExpectedSize",
     "className": "org.elasticsearch.cluster.routing.ShardRoutingTests",
     "children": []
    },
    {
     "id": "ID#testIsSourceTargetRelocation(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "displayName": "testIsSourceTargetRelocation(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "methodName": "testIsSourceTargetRelocation",
     "className": "org.elasticsearch.cluster.routing.ShardRoutingTests",
     "children": []
    },
    {
     "id": "ID#testIsSameAllocation(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "displayName": "testIsSameAllocation(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "methodName": "testIsSameAllocation",
     "className": "org.elasticsearch.cluster.routing.ShardRoutingTests",
     "children": []
    },
    {
     "id": "ID#testEqualsIgnoringVersion(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "displayName": "testEqualsIgnoringVersion(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "methodName": "testEqualsIgnoringVersion",
     "className": "org.elasticsearch.cluster.routing.ShardRoutingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195589240
 }
]

[
 "TEST_STARTED",
 "ID#testExpectedSize(org.elasticsearch.cluster.routing.ShardRoutingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExpectedSize(org.elasticsearch.cluster.routing.ShardRoutingTests)",
  "startTimestamp": 1474195589275,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testIsSourceTargetRelocation(org.elasticsearch.cluster.routing.ShardRoutingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsSourceTargetRelocation(org.elasticsearch.cluster.routing.ShardRoutingTests)",
  "startTimestamp": 1474195589288,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testIsSameAllocation(org.elasticsearch.cluster.routing.ShardRoutingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsSameAllocation(org.elasticsearch.cluster.routing.ShardRoutingTests)",
  "startTimestamp": 1474195589290,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsIgnoringVersion(org.elasticsearch.cluster.routing.ShardRoutingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsIgnoringVersion(org.elasticsearch.cluster.routing.ShardRoutingTests)",
  "startTimestamp": 1474195589292,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.ShardRoutingTests",
  "startTimestamp": 1474195589240,
  "executionTime": 57
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests",
   "displayName": "org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests",
   "children": [
    {
     "id": "ID#testSyncFailsOnIndexClosedOrMissing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "displayName": "testSyncFailsOnIndexClosedOrMissing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "methodName": "testSyncFailsOnIndexClosedOrMissing",
     "className": "org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests",
     "children": []
    },
    {
     "id": "ID#testModificationPreventsFlushing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "displayName": "testModificationPreventsFlushing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "methodName": "testModificationPreventsFlushing",
     "className": "org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests",
     "children": []
    },
    {
     "id": "ID#testSingleShardSuccess(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "displayName": "testSingleShardSuccess(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "methodName": "testSingleShardSuccess",
     "className": "org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests",
     "children": []
    },
    {
     "id": "ID#testFailAfterIntermediateCommit(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "displayName": "testFailAfterIntermediateCommit(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "methodName": "testFailAfterIntermediateCommit",
     "className": "org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests",
     "children": []
    },
    {
     "id": "ID#testFailWhenCommitIsMissing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "displayName": "testFailWhenCommitIsMissing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "methodName": "testFailWhenCommitIsMissing",
     "className": "org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests",
     "children": []
    },
    {
     "id": "ID#testSyncFailsIfOperationIsInFlight(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "displayName": "testSyncFailsIfOperationIsInFlight(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "methodName": "testSyncFailsIfOperationIsInFlight",
     "className": "org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195589305
 }
]

[
 "TEST_STARTED",
 "ID#testSyncFailsOnIndexClosedOrMissing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:29,337][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:29,374][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:29,374][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:29,378][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[8784], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:29,380][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:29,380][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:29,536][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:29,537][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:29,538][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[39]}, bound_addresses {local[39]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:29,539][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{stB7LuqOQ8emtKYkhLpUVQ}{c1hapLUZSWG7dUFegOZP0A}{local}{local[39]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:29,540][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:29,554][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:29,577][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:29,717][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:29,736][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[test/ehyES6zRRMGmGsHbMWPntA]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:29,779][INFO ][org.elasticsearch.indices.flush] [node_s_0] [SyncedFlushSingleNodeTests#testSyncFailsOnIndexClosedOrMissing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSyncFailsOnIndexClosedOrMissing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
  "startTimestamp": 1474195589327,
  "executionTime": 489
 }
]

[
 "TEST_STARTED",
 "ID#testModificationPreventsFlushing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:29,825][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:29,898][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:29,919][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/BQb0g6F_QuybcfYIWcfoBw] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:31,003][INFO ][org.elasticsearch.indices.flush] [node_s_0] [SyncedFlushSingleNodeTests#testModificationPreventsFlushing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testModificationPreventsFlushing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
  "startTimestamp": 1474195589816,
  "executionTime": 1639
 }
]

[
 "TEST_STARTED",
 "ID#testSingleShardSuccess(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:31,462][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:31,530][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:31,547][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/u3Y0zASqS_eo_aHQutdfWA] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:31,726][INFO ][org.elasticsearch.indices.flush] [node_s_0] [SyncedFlushSingleNodeTests#testSingleShardSuccess]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleShardSuccess(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
  "startTimestamp": 1474195591455,
  "executionTime": 313
 }
]

[
 "TEST_STARTED",
 "ID#testFailAfterIntermediateCommit(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:31,775][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:31,893][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:31,917][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/KmwJTryjSZCF3CtSm_J8qA] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:32,308][INFO ][org.elasticsearch.indices.flush] [node_s_0] [SyncedFlushSingleNodeTests#testFailAfterIntermediateCommit]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailAfterIntermediateCommit(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
  "startTimestamp": 1474195591768,
  "executionTime": 703
 }
]

[
 "TEST_STARTED",
 "ID#testFailWhenCommitIsMissing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:32,479][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:32,536][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:32,558][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/_U65r1n-T02hj-hMWh6s4A] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:33,438][INFO ][org.elasticsearch.indices.flush] [node_s_0] [SyncedFlushSingleNodeTests#testFailWhenCommitIsMissing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailWhenCommitIsMissing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
  "startTimestamp": 1474195592471,
  "executionTime": 1065
 }
]

[
 "TEST_STARTED",
 "ID#testSyncFailsIfOperationIsInFlight(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:33,544][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:33,720][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:33,744][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/8hOiMRH6QtWU5qz2DNXgEQ] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:34,104][INFO ][org.elasticsearch.indices.flush] [node_s_0] [SyncedFlushSingleNodeTests#testSyncFailsIfOperationIsInFlight]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSyncFailsIfOperationIsInFlight(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
  "startTimestamp": 1474195593537,
  "executionTime": 832
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:34,369][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:34,370][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:34,370][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:34,373][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests",
  "startTimestamp": 1474195589305,
  "executionTime": 5081
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.network.NetworkModuleTests",
   "displayName": "org.elasticsearch.common.network.NetworkModuleTests",
   "methodName": null,
   "className": "org.elasticsearch.common.network.NetworkModuleTests",
   "children": [
    {
     "id": "ID#testRegisterHttpTransport(org.elasticsearch.common.network.NetworkModuleTests)",
     "displayName": "testRegisterHttpTransport(org.elasticsearch.common.network.NetworkModuleTests)",
     "methodName": "testRegisterHttpTransport",
     "className": "org.elasticsearch.common.network.NetworkModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterTransportService(org.elasticsearch.common.network.NetworkModuleTests)",
     "displayName": "testRegisterTransportService(org.elasticsearch.common.network.NetworkModuleTests)",
     "methodName": "testRegisterTransportService",
     "className": "org.elasticsearch.common.network.NetworkModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterTransport(org.elasticsearch.common.network.NetworkModuleTests)",
     "displayName": "testRegisterTransport(org.elasticsearch.common.network.NetworkModuleTests)",
     "methodName": "testRegisterTransport",
     "className": "org.elasticsearch.common.network.NetworkModuleTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195594393
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterHttpTransport(org.elasticsearch.common.network.NetworkModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterHttpTransport(org.elasticsearch.common.network.NetworkModuleTests)",
  "startTimestamp": 1474195594741,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterTransportService(org.elasticsearch.common.network.NetworkModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterTransportService(org.elasticsearch.common.network.NetworkModuleTests)",
  "startTimestamp": 1474195594746,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterTransport(org.elasticsearch.common.network.NetworkModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterTransport(org.elasticsearch.common.network.NetworkModuleTests)",
  "startTimestamp": 1474195594750,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.network.NetworkModuleTests",
  "startTimestamp": 1474195594393,
  "executionTime": 365
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.builders.EnvelopeBuilderTests",
   "displayName": "org.elasticsearch.common.geo.builders.EnvelopeBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.builders.EnvelopeBuilderTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.common.geo.builders.EnvelopeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInvalidConstructorArgs(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)",
     "displayName": "testInvalidConstructorArgs(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)",
     "methodName": "testInvalidConstructorArgs",
     "className": "org.elasticsearch.common.geo.builders.EnvelopeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.common.geo.builders.EnvelopeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.common.geo.builders.EnvelopeBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195594764
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)",
  "startTimestamp": 1474195594886,
  "executionTime": 51
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidConstructorArgs(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidConstructorArgs(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)",
  "startTimestamp": 1474195594938,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)",
  "startTimestamp": 1474195594940,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)",
  "startTimestamp": 1474195594944,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.builders.EnvelopeBuilderTests",
  "startTimestamp": 1474195594764,
  "executionTime": 186
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.CompoundAnalysisTests",
   "displayName": "org.elasticsearch.index.analysis.CompoundAnalysisTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.CompoundAnalysisTests",
   "children": [
    {
     "id": "ID#testDictionaryDecompounder(org.elasticsearch.index.analysis.CompoundAnalysisTests)",
     "displayName": "testDictionaryDecompounder(org.elasticsearch.index.analysis.CompoundAnalysisTests)",
     "methodName": "testDictionaryDecompounder",
     "className": "org.elasticsearch.index.analysis.CompoundAnalysisTests",
     "children": []
    },
    {
     "id": "ID#testDefaultsCompoundAnalysis(org.elasticsearch.index.analysis.CompoundAnalysisTests)",
     "displayName": "testDefaultsCompoundAnalysis(org.elasticsearch.index.analysis.CompoundAnalysisTests)",
     "methodName": "testDefaultsCompoundAnalysis",
     "className": "org.elasticsearch.index.analysis.CompoundAnalysisTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195594964
 }
]

[
 "TEST_STARTED",
 "ID#testDictionaryDecompounder(org.elasticsearch.index.analysis.CompoundAnalysisTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDictionaryDecompounder(org.elasticsearch.index.analysis.CompoundAnalysisTests)",
  "startTimestamp": 1474195595028,
  "executionTime": 45
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultsCompoundAnalysis(org.elasticsearch.index.analysis.CompoundAnalysisTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultsCompoundAnalysis(org.elasticsearch.index.analysis.CompoundAnalysisTests)",
  "startTimestamp": 1474195595074,
  "executionTime": 14
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.CompoundAnalysisTests",
  "startTimestamp": 1474195594964,
  "executionTime": 128
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.NestedObjectMapperTests",
   "displayName": "org.elasticsearch.index.mapper.NestedObjectMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.NestedObjectMapperTests",
   "children": [
    {
     "id": "ID#testSingleNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "displayName": "testSingleNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "methodName": "testSingleNested",
     "className": "org.elasticsearch.index.mapper.NestedObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testMultiRootAndNested1(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "displayName": "testMultiRootAndNested1(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "methodName": "testMultiRootAndNested1",
     "className": "org.elasticsearch.index.mapper.NestedObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testMultiNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "displayName": "testMultiNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "methodName": "testMultiNested",
     "className": "org.elasticsearch.index.mapper.NestedObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testLimitOfNestedFieldsPerIndex(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "displayName": "testLimitOfNestedFieldsPerIndex(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "methodName": "testLimitOfNestedFieldsPerIndex",
     "className": "org.elasticsearch.index.mapper.NestedObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testNestedArrayStrict(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "displayName": "testNestedArrayStrict(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "methodName": "testNestedArrayStrict",
     "className": "org.elasticsearch.index.mapper.NestedObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testMultiObjectAndNested1(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "displayName": "testMultiObjectAndNested1(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "methodName": "testMultiObjectAndNested1",
     "className": "org.elasticsearch.index.mapper.NestedObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testMultiObjectAndNested2(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "displayName": "testMultiObjectAndNested2(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "methodName": "testMultiObjectAndNested2",
     "className": "org.elasticsearch.index.mapper.NestedObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testEmptyNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "displayName": "testEmptyNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "methodName": "testEmptyNested",
     "className": "org.elasticsearch.index.mapper.NestedObjectMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195595101
 }
]

[
 "TEST_STARTED",
 "ID#testSingleNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:35,137][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:35,384][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:35,385][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:35,468][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[8784], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:35,471][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:35,471][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:35,665][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:35,665][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:35,666][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[40]}, bound_addresses {local[40]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:35,671][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{m1dnAICYQ1iClQySSGQpsA}{m3rWtfOUSAaoDs5KElxecQ}{local}{local[40]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:35,671][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:35,685][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:35,705][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:35,773][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:35,790][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NestedObjectMapperTests#testSingleNested]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
  "startTimestamp": 1474195595127,
  "executionTime": 691
 }
]

[
 "TEST_STARTED",
 "ID#testMultiRootAndNested1(org.elasticsearch.index.mapper.NestedObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:35,827][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:35,888][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:35,904][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NestedObjectMapperTests#testMultiRootAndNested1]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiRootAndNested1(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
  "startTimestamp": 1474195595818,
  "executionTime": 127
 }
]

[
 "TEST_STARTED",
 "ID#testMultiNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:35,953][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:36,031][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:36,045][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NestedObjectMapperTests#testMultiNested]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
  "startTimestamp": 1474195595946,
  "executionTime": 145
 }
]

[
 "TEST_STARTED",
 "ID#testLimitOfNestedFieldsPerIndex(org.elasticsearch.index.mapper.NestedObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:36,100][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:36,168][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:36,189][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:36,245][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:36,315][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test3] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:36,406][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test3][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:36,486][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test4] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:36,539][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test4][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:36,580][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test5] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:36,647][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test5][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:36,673][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test5] [NestedObjectMapperTests#testLimitOfNestedFieldsPerIndex]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLimitOfNestedFieldsPerIndex(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
  "startTimestamp": 1474195596091,
  "executionTime": 739
 }
]

[
 "TEST_STARTED",
 "ID#testNestedArrayStrict(org.elasticsearch.index.mapper.NestedObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:36,837][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:36,977][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:36,994][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NestedObjectMapperTests#testNestedArrayStrict]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedArrayStrict(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
  "startTimestamp": 1474195596830,
  "executionTime": 263
 }
]

[
 "TEST_STARTED",
 "ID#testMultiObjectAndNested1(org.elasticsearch.index.mapper.NestedObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:37,102][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:37,153][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:37,171][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NestedObjectMapperTests#testMultiObjectAndNested1]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiObjectAndNested1(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
  "startTimestamp": 1474195597093,
  "executionTime": 106
 }
]

[
 "TEST_STARTED",
 "ID#testMultiObjectAndNested2(org.elasticsearch.index.mapper.NestedObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:37,206][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:37,263][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:37,278][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NestedObjectMapperTests#testMultiObjectAndNested2]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiObjectAndNested2(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
  "startTimestamp": 1474195597200,
  "executionTime": 112
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:37,320][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:37,386][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:37,405][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NestedObjectMapperTests#testEmptyNested]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
  "startTimestamp": 1474195597312,
  "executionTime": 137
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:37,450][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:37,452][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:37,453][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:37,455][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.NestedObjectMapperTests",
  "startTimestamp": 1474195595101,
  "executionTime": 2365
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.ingest.PipelineStoreTests",
   "displayName": "org.elasticsearch.ingest.PipelineStoreTests",
   "methodName": null,
   "className": "org.elasticsearch.ingest.PipelineStoreTests",
   "children": [
    {
     "id": "ID#testValidateNoIngestInfo(org.elasticsearch.ingest.PipelineStoreTests)",
     "displayName": "testValidateNoIngestInfo(org.elasticsearch.ingest.PipelineStoreTests)",
     "methodName": "testValidateNoIngestInfo",
     "className": "org.elasticsearch.ingest.PipelineStoreTests",
     "children": []
    },
    {
     "id": "ID#testUpdatePipelines(org.elasticsearch.ingest.PipelineStoreTests)",
     "displayName": "testUpdatePipelines(org.elasticsearch.ingest.PipelineStoreTests)",
     "methodName": "testUpdatePipelines",
     "className": "org.elasticsearch.ingest.PipelineStoreTests",
     "children": []
    },
    {
     "id": "ID#testGetPipelines(org.elasticsearch.ingest.PipelineStoreTests)",
     "displayName": "testGetPipelines(org.elasticsearch.ingest.PipelineStoreTests)",
     "methodName": "testGetPipelines",
     "className": "org.elasticsearch.ingest.PipelineStoreTests",
     "children": []
    },
    {
     "id": "ID#testDelete(org.elasticsearch.ingest.PipelineStoreTests)",
     "displayName": "testDelete(org.elasticsearch.ingest.PipelineStoreTests)",
     "methodName": "testDelete",
     "className": "org.elasticsearch.ingest.PipelineStoreTests",
     "children": []
    },
    {
     "id": "ID#testValidate(org.elasticsearch.ingest.PipelineStoreTests)",
     "displayName": "testValidate(org.elasticsearch.ingest.PipelineStoreTests)",
     "methodName": "testValidate",
     "className": "org.elasticsearch.ingest.PipelineStoreTests",
     "children": []
    },
    {
     "id": "ID#testPut(org.elasticsearch.ingest.PipelineStoreTests)",
     "displayName": "testPut(org.elasticsearch.ingest.PipelineStoreTests)",
     "methodName": "testPut",
     "className": "org.elasticsearch.ingest.PipelineStoreTests",
     "children": []
    },
    {
     "id": "ID#testPutWithErrorResponse(org.elasticsearch.ingest.PipelineStoreTests)",
     "displayName": "testPutWithErrorResponse(org.elasticsearch.ingest.PipelineStoreTests)",
     "methodName": "testPutWithErrorResponse",
     "className": "org.elasticsearch.ingest.PipelineStoreTests",
     "children": []
    },
    {
     "id": "ID#testCrud(org.elasticsearch.ingest.PipelineStoreTests)",
     "displayName": "testCrud(org.elasticsearch.ingest.PipelineStoreTests)",
     "methodName": "testCrud",
     "className": "org.elasticsearch.ingest.PipelineStoreTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195597476
 }
]

[
 "TEST_STARTED",
 "ID#testValidateNoIngestInfo(org.elasticsearch.ingest.PipelineStoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidateNoIngestInfo(org.elasticsearch.ingest.PipelineStoreTests)",
  "startTimestamp": 1474195597518,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testUpdatePipelines(org.elasticsearch.ingest.PipelineStoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdatePipelines(org.elasticsearch.ingest.PipelineStoreTests)",
  "startTimestamp": 1474195597545,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testGetPipelines(org.elasticsearch.ingest.PipelineStoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetPipelines(org.elasticsearch.ingest.PipelineStoreTests)",
  "startTimestamp": 1474195597548,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDelete(org.elasticsearch.ingest.PipelineStoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDelete(org.elasticsearch.ingest.PipelineStoreTests)",
  "startTimestamp": 1474195597551,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testValidate(org.elasticsearch.ingest.PipelineStoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidate(org.elasticsearch.ingest.PipelineStoreTests)",
  "startTimestamp": 1474195597557,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testPut(org.elasticsearch.ingest.PipelineStoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPut(org.elasticsearch.ingest.PipelineStoreTests)",
  "startTimestamp": 1474195597561,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testPutWithErrorResponse(org.elasticsearch.ingest.PipelineStoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPutWithErrorResponse(org.elasticsearch.ingest.PipelineStoreTests)",
  "startTimestamp": 1474195597567,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCrud(org.elasticsearch.ingest.PipelineStoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCrud(org.elasticsearch.ingest.PipelineStoreTests)",
  "startTimestamp": 1474195597569,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.ingest.PipelineStoreTests",
  "startTimestamp": 1474195597476,
  "executionTime": 97
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests",
   "children": [
    {
     "id": "ID#testUpdate(org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests)",
     "displayName": "testUpdate(org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests)",
     "methodName": "testUpdate",
     "className": "org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests",
     "children": []
    },
    {
     "id": "ID#testDefaults(org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests)",
     "displayName": "testDefaults(org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests)",
     "methodName": "testDefaults",
     "className": "org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195597579
 }
]

[
 "TEST_STARTED",
 "ID#testUpdate(org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:46:37,635][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [cluster.routing.allocation.disk.watermark.low] from [85%25] to [500mb]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:46:37,636][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [cluster.routing.allocation.disk.watermark.high] from [90%25] to [70%25]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:46:37,636][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [cluster.routing.allocation.disk.include_relocations] from [true] to [false]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:46:37,636][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [cluster.routing.allocation.disk.reroute_interval] from [60s] to [30s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:46:37,636][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [cluster.routing.allocation.disk.threshold_enabled] from [true] to [false]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdate(org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests)",
  "startTimestamp": 1474195597631,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testDefaults(org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaults(org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests)",
  "startTimestamp": 1474195597637,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests",
  "startTimestamp": 1474195597579,
  "executionTime": 62
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.RandomAllocationDeciderTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.RandomAllocationDeciderTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.RandomAllocationDeciderTests",
   "children": [
    {
     "id": "ID#testRandomDecisions(org.elasticsearch.cluster.routing.allocation.RandomAllocationDeciderTests)",
     "displayName": "testRandomDecisions(org.elasticsearch.cluster.routing.allocation.RandomAllocationDeciderTests)",
     "methodName": "testRandomDecisions",
     "className": "org.elasticsearch.cluster.routing.allocation.RandomAllocationDeciderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195597647
 }
]

[
 "TEST_STARTED",
 "ID#testRandomDecisions(org.elasticsearch.cluster.routing.allocation.RandomAllocationDeciderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:37,680][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start iteration [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:37,682][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding node [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:37,682][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding node [1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:37,690][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:37,716][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start iteration [1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:37,716][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding node [2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:37,733][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start iteration [2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:37,733][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding node [3]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:37,755][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[INDEX_6][1], [INDEX_4][3], [INDEX_1][1], [INDEX_1][0], [INDEX_2][1], [INDEX_2][6], [INDEX_5][4], [INDEX_5][3], [INDEX_5][1], [INDEX_8][4]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:37,755][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start iteration [3]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:37,755][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding node [4]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:37,756][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding node [5]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:37,776][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start iteration [4]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:37,776][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding node [6]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:37,776][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding node [7]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:37,796][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[INDEX_6][1], [INDEX_6][0], [INDEX_5][8], [INDEX_2][3], [INDEX_2][5], [INDEX_4][3], [INDEX_7][5], [INDEX_7][0], [INDEX_3][7], [INDEX_3][9]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:37,796][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Fill up nodes such that every shard can be allocated%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:37,796][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now say YES to everything%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:37,814][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Done Balancing after [2] iterations%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomDecisions(org.elasticsearch.cluster.routing.allocation.RandomAllocationDeciderTests)",
  "startTimestamp": 1474195597674,
  "executionTime": 141
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.RandomAllocationDeciderTests",
  "startTimestamp": 1474195597647,
  "executionTime": 173
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
   "displayName": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
   "children": [
    {
     "id": "ID#testFilterWithEmptyIncludesExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testFilterWithEmptyIncludesExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testFilterWithEmptyIncludesExcludes",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testCompleteObjectFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testCompleteObjectFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testCompleteObjectFiltering",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testPrefixedNamesFilteringTest(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testPrefixedNamesFilteringTest(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testPrefixedNamesFilteringTest",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testNotOmittingObjectWithNestedExcludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testNotOmittingObjectWithNestedExcludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testNotOmittingObjectWithNestedExcludedObject",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testFilterIncludesUsingStarPrefix(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testFilterIncludesUsingStarPrefix(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testFilterIncludesUsingStarPrefix",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testNestedMapInList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testNestedMapInList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testNestedMapInList",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testIncludingObjectWithNestedIncludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testIncludingObjectWithNestedIncludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testIncludingObjectWithNestedIncludedObject",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testNotOmittingObjectsWithExcludedProperties(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testNotOmittingObjectsWithExcludedProperties(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testNotOmittingObjectsWithExcludedProperties",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testSimpleList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testSimpleList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testSimpleList",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testThatFilterIncludesEmptyObjectWhenUsingIncludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testThatFilterIncludesEmptyObjectWhenUsingIncludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testThatFilterIncludesEmptyObjectWhenUsingIncludes",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testExtractValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testExtractValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testExtractValue",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testExtractRawValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testExtractRawValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testExtractRawValue",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testFilter(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testFilter(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testFilter",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testEmptyList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testEmptyList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testEmptyList",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testNestedList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testNestedList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testNestedList",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testThatFilterIncludesEmptyObjectWhenUsingExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testThatFilterIncludesEmptyObjectWhenUsingExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testThatFilterIncludesEmptyObjectWhenUsingExcludes",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testNestedFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testNestedFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testNestedFiltering",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195597831
 }
]

[
 "TEST_STARTED",
 "ID#testFilterWithEmptyIncludesExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterWithEmptyIncludesExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474195597867,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCompleteObjectFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompleteObjectFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474195597869,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testPrefixedNamesFilteringTest(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrefixedNamesFilteringTest(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474195597873,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNotOmittingObjectWithNestedExcludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotOmittingObjectWithNestedExcludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474195597875,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testFilterIncludesUsingStarPrefix(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterIncludesUsingStarPrefix(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474195597885,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNestedMapInList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedMapInList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474195597888,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testIncludingObjectWithNestedIncludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludingObjectWithNestedIncludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474195597895,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNotOmittingObjectsWithExcludedProperties(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotOmittingObjectsWithExcludedProperties(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474195597898,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474195597900,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatFilterIncludesEmptyObjectWhenUsingIncludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatFilterIncludesEmptyObjectWhenUsingIncludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474195597902,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testExtractValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474195597905,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testExtractRawValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractRawValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474195597907,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFilter(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilter(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474195597909,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474195597912,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testNestedList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474195597914,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatFilterIncludesEmptyObjectWhenUsingExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatFilterIncludesEmptyObjectWhenUsingExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474195597916,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNestedFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1474195597918,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
  "startTimestamp": 1474195597831,
  "executionTime": 92
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests",
   "displayName": "org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests",
   "children": [
    {
     "id": "ID#testStoreStatusOrdering(org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests)",
     "displayName": "testStoreStatusOrdering(org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests)",
     "methodName": "testStoreStatusOrdering",
     "className": "org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests",
     "children": []
    },
    {
     "id": "ID#testBasicSerialization(org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests)",
     "displayName": "testBasicSerialization(org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests)",
     "methodName": "testBasicSerialization",
     "className": "org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195597931
 }
]

[
 "TEST_STARTED",
 "ID#testStoreStatusOrdering(org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStoreStatusOrdering(org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests)",
  "startTimestamp": 1474195597974,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testBasicSerialization(org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicSerialization(org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests)",
  "startTimestamp": 1474195597992,
  "executionTime": 24
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests",
  "startTimestamp": 1474195597931,
  "executionTime": 87
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.shard.ShardPathTests",
   "displayName": "org.elasticsearch.index.shard.ShardPathTests",
   "methodName": null,
   "className": "org.elasticsearch.index.shard.ShardPathTests",
   "children": [
    {
     "id": "ID#testValidCtor(org.elasticsearch.index.shard.ShardPathTests)",
     "displayName": "testValidCtor(org.elasticsearch.index.shard.ShardPathTests)",
     "methodName": "testValidCtor",
     "className": "org.elasticsearch.index.shard.ShardPathTests",
     "children": []
    },
    {
     "id": "ID#testGetRootPaths(org.elasticsearch.index.shard.ShardPathTests)",
     "displayName": "testGetRootPaths(org.elasticsearch.index.shard.ShardPathTests)",
     "methodName": "testGetRootPaths",
     "className": "org.elasticsearch.index.shard.ShardPathTests",
     "children": []
    },
    {
     "id": "ID#testIllegalCustomDataPath(org.elasticsearch.index.shard.ShardPathTests)",
     "displayName": "testIllegalCustomDataPath(org.elasticsearch.index.shard.ShardPathTests)",
     "methodName": "testIllegalCustomDataPath",
     "className": "org.elasticsearch.index.shard.ShardPathTests",
     "children": []
    },
    {
     "id": "ID#testFailLoadShardPathIndexUUIDMissmatch(org.elasticsearch.index.shard.ShardPathTests)",
     "displayName": "testFailLoadShardPathIndexUUIDMissmatch(org.elasticsearch.index.shard.ShardPathTests)",
     "methodName": "testFailLoadShardPathIndexUUIDMissmatch",
     "className": "org.elasticsearch.index.shard.ShardPathTests",
     "children": []
    },
    {
     "id": "ID#testFailLoadShardPathOnMultiState(org.elasticsearch.index.shard.ShardPathTests)",
     "displayName": "testFailLoadShardPathOnMultiState(org.elasticsearch.index.shard.ShardPathTests)",
     "methodName": "testFailLoadShardPathOnMultiState",
     "className": "org.elasticsearch.index.shard.ShardPathTests",
     "children": []
    },
    {
     "id": "ID#testLoadShardPath(org.elasticsearch.index.shard.ShardPathTests)",
     "displayName": "testLoadShardPath(org.elasticsearch.index.shard.ShardPathTests)",
     "methodName": "testLoadShardPath",
     "className": "org.elasticsearch.index.shard.ShardPathTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195598025
 }
]

[
 "TEST_STARTED",
 "ID#testValidCtor(org.elasticsearch.index.shard.ShardPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidCtor(org.elasticsearch.index.shard.ShardPathTests)",
  "startTimestamp": 1474195598061,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testGetRootPaths(org.elasticsearch.index.shard.ShardPathTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:16:38,211][INFO ][org.elasticsearch.env    ] [DGNfRqv] using [2] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:16:38,221][INFO ][org.elasticsearch.env    ] [DGNfRqv] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetRootPaths(org.elasticsearch.index.shard.ShardPathTests)",
  "startTimestamp": 1474195598066,
  "executionTime": 195
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalCustomDataPath(org.elasticsearch.index.shard.ShardPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalCustomDataPath(org.elasticsearch.index.shard.ShardPathTests)",
  "startTimestamp": 1474195598261,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFailLoadShardPathIndexUUIDMissmatch(org.elasticsearch.index.shard.ShardPathTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:16:38,348][INFO ][org.elasticsearch.env    ] [0zAO1je] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:16:38,348][INFO ][org.elasticsearch.env    ] [0zAO1je] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:16:38,429][WARN ][org.elasticsearch.index.shard] [node_s_0] [test][0] [foo][0] found shard on path: [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.index.shard.ShardPathTests_FD13852EF36FC81C-001\\tempDir-007\\nodes\\0\\indices\\foobar\\0] with a different index UUID - this shard seems to be leftover from a different index with the same name. Remove the leftover shard in order to reuse the path with the current index%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailLoadShardPathIndexUUIDMissmatch(org.elasticsearch.index.shard.ShardPathTests)",
  "startTimestamp": 1474195598266,
  "executionTime": 163
 }
]

[
 "TEST_STARTED",
 "ID#testFailLoadShardPathOnMultiState(org.elasticsearch.index.shard.ShardPathTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:16:38,592][INFO ][org.elasticsearch.env    ] [r119Kt9] using [3] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:16:38,592][INFO ][org.elasticsearch.env    ] [r119Kt9] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailLoadShardPathOnMultiState(org.elasticsearch.index.shard.ShardPathTests)",
  "startTimestamp": 1474195598429,
  "executionTime": 257
 }
]

[
 "TEST_STARTED",
 "ID#testLoadShardPath(org.elasticsearch.index.shard.ShardPathTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:16:38,720][INFO ][org.elasticsearch.env    ] [3YM8QIJ] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:16:38,720][INFO ][org.elasticsearch.env    ] [3YM8QIJ] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLoadShardPath(org.elasticsearch.index.shard.ShardPathTests)",
  "startTimestamp": 1474195598686,
  "executionTime": 60
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.shard.ShardPathTests",
  "startTimestamp": 1474195598025,
  "executionTime": 809
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.engine.InternalEngineTests",
   "displayName": "org.elasticsearch.index.engine.InternalEngineTests",
   "methodName": null,
   "className": "org.elasticsearch.index.engine.InternalEngineTests",
   "children": [
    {
     "id": "ID#testUpgradeOldIndex(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testUpgradeOldIndex(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testUpgradeOldIndex",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testSearchResultRelease(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testSearchResultRelease(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testSearchResultRelease",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testSycnedFlushSurvivesEngineRestart(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testSycnedFlushSurvivesEngineRestart(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testSycnedFlushSurvivesEngineRestart",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testSegmentsStatsIncludingFileSizes(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testSegmentsStatsIncludingFileSizes(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testSegmentsStatsIncludingFileSizes",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testForceMergeAndClose(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testForceMergeAndClose(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testForceMergeAndClose",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testVersioningDeleteConflictWithFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testVersioningDeleteConflictWithFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testVersioningDeleteConflictWithFlush",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testFailStart(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testFailStart(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testFailStart",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testVersioningNewCreate(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testVersioningNewCreate(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testVersioningNewCreate",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testSettings(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testSettings(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testSettings",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testConcurrentGetAndFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testConcurrentGetAndFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testConcurrentGetAndFlush",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testRecoverFromForeignTranslog(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testRecoverFromForeignTranslog(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testRecoverFromForeignTranslog",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testCreatedFlagAfterFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testCreatedFlagAfterFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testCreatedFlagAfterFlush",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testTranslogMultipleOperationsSameDocument(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testTranslogMultipleOperationsSameDocument(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testTranslogMultipleOperationsSameDocument",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testEnableGcDeletes(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testEnableGcDeletes(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testEnableGcDeletes",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testVersioningDeleteConflict(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testVersioningDeleteConflict(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testVersioningDeleteConflict",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testIndexWriterIFDInfoStream(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testIndexWriterIFDInfoStream(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testIndexWriterIFDInfoStream",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testVersioningReplicaConflict1(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testVersioningReplicaConflict1(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testVersioningReplicaConflict1",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testVersioningNewIndex(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testVersioningNewIndex(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testVersioningNewIndex",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testExternalVersioningNewIndex(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testExternalVersioningNewIndex(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testExternalVersioningNewIndex",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testVersioningCreateExistsException(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testVersioningCreateExistsException(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testVersioningCreateExistsException",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testVersioningIndexConflict(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testVersioningIndexConflict(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testVersioningIndexConflict",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testExternalVersioningIndexConflictWithFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testExternalVersioningIndexConflictWithFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testExternalVersioningIndexConflictWithFlush",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testSimpleOperations(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testSimpleOperations(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testSimpleOperations",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testSycnedFlushVanishesOnReplay(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testSycnedFlushVanishesOnReplay(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testSycnedFlushVanishesOnReplay",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testTranslogReplay(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testTranslogReplay(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testTranslogReplay",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testRetryConcurrently(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testRetryConcurrently(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testRetryConcurrently",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testShardNotAvailableExceptionWhenEngineClosedConcurrently(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testShardNotAvailableExceptionWhenEngineClosedConcurrently(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testShardNotAvailableExceptionWhenEngineClosedConcurrently",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testMissingTranslog(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testMissingTranslog(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testMissingTranslog",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testTranslogReplayWithFailure(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testTranslogReplayWithFailure(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testTranslogReplayWithFailure",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testVersioningCreateExistsExceptionWithFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testVersioningCreateExistsExceptionWithFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testVersioningCreateExistsExceptionWithFlush",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testVersioningReplicaConflict2(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testVersioningReplicaConflict2(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testVersioningReplicaConflict2",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testDoubleDelivery(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testDoubleDelivery(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testDoubleDelivery",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testBasicCreatedFlag(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testBasicCreatedFlag(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testBasicCreatedFlag",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testForceMerge(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testForceMerge(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testForceMerge",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testSegmentsWithMergeFlag(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testSegmentsWithMergeFlag(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testSegmentsWithMergeFlag",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testCurrentTranslogIDisCommitted(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testCurrentTranslogIDisCommitted(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testCurrentTranslogIDisCommitted",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testAppendConcurrently(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testAppendConcurrently(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testAppendConcurrently",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testDocStats(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testDocStats(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testDocStats",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testRenewSyncFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testRenewSyncFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testRenewSyncFlush",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testSyncedFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testSyncedFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testSyncedFlush",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testRetryWithAutogeneratedIdsAndWrongOrderWorksAndNoDuplicateDocs(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testRetryWithAutogeneratedIdsAndWrongOrderWorksAndNoDuplicateDocs(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testRetryWithAutogeneratedIdsAndWrongOrderWorksAndNoDuplicateDocs",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testSkipTranslogReplay(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testSkipTranslogReplay(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testSkipTranslogReplay",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testTranslogRecoveryDoesNotReplayIntoTranslog(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testTranslogRecoveryDoesNotReplayIntoTranslog(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testTranslogRecoveryDoesNotReplayIntoTranslog",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testExtractShardId(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testExtractShardId(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testExtractShardId",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testIndexSearcherWrapper(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testIndexSearcherWrapper(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testIndexSearcherWrapper",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testFlushIsDisabledDuringTranslogRecovery(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testFlushIsDisabledDuringTranslogRecovery(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testFlushIsDisabledDuringTranslogRecovery",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testIndexWriterInfoStream(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testIndexWriterInfoStream(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testIndexWriterInfoStream",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testCommitStats(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testCommitStats(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testCommitStats",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testRetryWithAutogeneratedIdWorksAndNoDuplicateDocs(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testRetryWithAutogeneratedIdWorksAndNoDuplicateDocs(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testRetryWithAutogeneratedIdWorksAndNoDuplicateDocs",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testExternalVersioningIndexConflict(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testExternalVersioningIndexConflict(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testExternalVersioningIndexConflict",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testVersioningIndexConflictWithFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testVersioningIndexConflictWithFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testVersioningIndexConflictWithFlush",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testVerboseSegments(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testVerboseSegments(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testVerboseSegments",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testSegments(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testSegments(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testSegments",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195598877
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeOldIndex(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeOldIndex(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195598908,
  "executionTime": 2638
 }
]

[
 "TEST_STARTED",
 "ID#testSearchResultRelease(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearchResultRelease(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195601547,
  "executionTime": 130
 }
]

[
 "TEST_STARTED",
 "ID#testSycnedFlushSurvivesEngineRestart(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSycnedFlushSurvivesEngineRestart(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195601677,
  "executionTime": 186
 }
]

[
 "TEST_STARTED",
 "ID#testSegmentsStatsIncludingFileSizes(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSegmentsStatsIncludingFileSizes(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195601863,
  "executionTime": 186
 }
]

[
 "TEST_STARTED",
 "ID#testForceMergeAndClose(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:42,184][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:42,206][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:42,385][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=false%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:42,469][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:42,475][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:42,475][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:42,475][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:42,476][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:42,477][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:42,856][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:42,856][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:42,932][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:42,933][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:43,014][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:43,068][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:43,161][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:43,216][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:43,216][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:43,334][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:43,334][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:43,379][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=false%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:43,393][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:43,675][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:43,710][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:43,776][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:43,776][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:43,776][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=false%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:43,777][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:43,813][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:43,815][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:43,987][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:43,992][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:43,992][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:43,992][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:43,992][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:44,089][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:44,090][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:44,105][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:44,107][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=false%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:44,107][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:44,107][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=false%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:44,258][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:44,344][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=false%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:44,345][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:44,404][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=false%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:44,754][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:44,842][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:44,842][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:44,842][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=false%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:44,842][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:45,013][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:45,013][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForceMergeAndClose(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195602049,
  "executionTime": 3000
 }
]

[
 "TEST_STARTED",
 "ID#testVersioningDeleteConflictWithFlush(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersioningDeleteConflictWithFlush(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195605049,
  "executionTime": 286
 }
]

[
 "TEST_STARTED",
 "ID#testFailStart(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailStart(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195605335,
  "executionTime": 2986
 }
]

[
 "TEST_STARTED",
 "ID#testVersioningNewCreate(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersioningNewCreate(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195608321,
  "executionTime": 221
 }
]

[
 "TEST_STARTED",
 "ID#testSettings(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSettings(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195608542,
  "executionTime": 93
 }
]

[
 "TEST_STARTED",
 "ID#testConcurrentGetAndFlush(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcurrentGetAndFlush(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195608635,
  "executionTime": 675
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverFromForeignTranslog(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverFromForeignTranslog(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195609310,
  "executionTime": 261
 }
]

[
 "TEST_STARTED",
 "ID#testCreatedFlagAfterFlush(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreatedFlagAfterFlush(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195609571,
  "executionTime": 153
 }
]

[
 "TEST_STARTED",
 "ID#testTranslogMultipleOperationsSameDocument(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTranslogMultipleOperationsSameDocument(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195609724,
  "executionTime": 216
 }
]

[
 "TEST_STARTED",
 "ID#testEnableGcDeletes(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnableGcDeletes(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195609940,
  "executionTime": 1123
 }
]

[
 "TEST_STARTED",
 "ID#testVersioningDeleteConflict(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersioningDeleteConflict(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195611063,
  "executionTime": 112
 }
]

[
 "TEST_STARTED",
 "ID#testIndexWriterIFDInfoStream(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 04:46:51,358 TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[FD13852EF36FC81C] ERROR Attempted to append to non-started appender testIndexWriterIFDInfoStream"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:51,358][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[FD13852EF36FC81C] IFD: now checkpoint \"_0(6.2.0):c1 _1(6.2.0):c1\" [2 segments ; isCommit = false]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 04:46:51,360 TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[FD13852EF36FC81C] ERROR Attempted to append to non-started appender testIndexWriterIFDInfoStream"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:51,359][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[FD13852EF36FC81C] IFD: delete []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 04:46:51,360 TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[FD13852EF36FC81C] ERROR Attempted to append to non-started appender testIndexWriterIFDInfoStream"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:51,360][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[FD13852EF36FC81C] IFD: 2 msec to checkpoint%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 04:46:51,361 TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[FD13852EF36FC81C] ERROR Attempted to append to non-started appender testIndexWriterIFDInfoStream"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:51,361][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[FD13852EF36FC81C] IFD: will delete new file \"_1_Asserting_0.dvm\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:51,362][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[FD13852EF36FC81C] IFD: will delete new file \"_1_Asserting_0.tip\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:51,362][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[FD13852EF36FC81C] IFD: will delete new file \"_1.nvd\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:51,362][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[FD13852EF36FC81C] IFD: will delete new file \"_1_Asserting_0.doc\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:51,362][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[FD13852EF36FC81C] IFD: will delete new file \"_1_Asserting_0.tim\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:51,362][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[FD13852EF36FC81C] IFD: will delete new file \"_1_Asserting_0.dvd\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:51,362][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[FD13852EF36FC81C] IFD: will delete new file \"_1_Asserting_0.pos\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:51,362][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[FD13852EF36FC81C] IFD: will delete new file \"_1.fdx\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:51,362][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[FD13852EF36FC81C] IFD: will delete new file \"_1.nvm\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:51,362][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[FD13852EF36FC81C] IFD: will delete new file \"_1.fnm\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:51,362][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[FD13852EF36FC81C] IFD: will delete new file \"_1.fdt\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:51,362][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[FD13852EF36FC81C] IFD: delete [_1_Asserting_0.dvm, _1_Asserting_0.tip, _1.nvd, _1_Asserting_0.doc, _1_Asserting_0.tim, _1_Asserting_0.dvd, _1_Asserting_0.pos, _1.fdx, _1.nvm, _1.fnm, _1.fdt]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:51,362][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[FD13852EF36FC81C] IFD: now checkpoint \"_0(6.2.0):c1 _1(6.2.0):c1\" [2 segments ; isCommit = true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:51,363][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[FD13852EF36FC81C] IFD: deleteCommits: now decRef commit \"segments_2\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:51,363][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[FD13852EF36FC81C] IFD: delete [segments_2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:51,363][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[FD13852EF36FC81C] IFD: 0 msec to checkpoint%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:51,363][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[FD13852EF36FC81C] IFD: delete []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:51,363][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[FD13852EF36FC81C] IFD: delete []%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexWriterIFDInfoStream(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195611175,
  "executionTime": 283
 }
]

[
 "TEST_STARTED",
 "ID#testVersioningReplicaConflict1(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersioningReplicaConflict1(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195611458,
  "executionTime": 84
 }
]

[
 "TEST_STARTED",
 "ID#testVersioningNewIndex(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersioningNewIndex(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195611542,
  "executionTime": 162
 }
]

[
 "TEST_STARTED",
 "ID#testExternalVersioningNewIndex(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExternalVersioningNewIndex(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195611704,
  "executionTime": 168
 }
]

[
 "TEST_STARTED",
 "ID#testVersioningCreateExistsException(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersioningCreateExistsException(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195611872,
  "executionTime": 105
 }
]

[
 "TEST_STARTED",
 "ID#testVersioningIndexConflict(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersioningIndexConflict(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195611978,
  "executionTime": 113
 }
]

[
 "TEST_STARTED",
 "ID#testExternalVersioningIndexConflictWithFlush(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExternalVersioningIndexConflictWithFlush(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195612091,
  "executionTime": 103
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleOperations(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleOperations(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195612194,
  "executionTime": 340
 }
]

[
 "TEST_STARTED",
 "ID#testSycnedFlushVanishesOnReplay(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSycnedFlushVanishesOnReplay(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195612534,
  "executionTime": 293
 }
]

[
 "TEST_STARTED",
 "ID#testTranslogReplay(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTranslogReplay(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195612827,
  "executionTime": 1088
 }
]

[
 "TEST_STARTED",
 "ID#testRetryConcurrently(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRetryConcurrently(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195613915,
  "executionTime": 2578
 }
]

[
 "TEST_STARTED",
 "ID#testShardNotAvailableExceptionWhenEngineClosedConcurrently(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:56,626][INFO ][org.elasticsearch.index.engine]  [index][1] try with optimize%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:56,628][INFO ][org.elasticsearch.index.engine]  [index][1] exception caught: %0D%0Aorg.elasticsearch.index.engine.EngineClosedException: CurrentState[CLOSED] Closed%0A%09at org.elasticsearch.index.engine.Engine.ensureOpen(Engine.java:380) ~[main/:?]%0A%09at org.elasticsearch.index.engine.InternalEngine.forceMerge(InternalEngine.java:873) ~[main/:?]%0A%09at org.elasticsearch.index.engine.InternalEngineTests$7.run(InternalEngineTests.java:2087) ~[test/:?]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardNotAvailableExceptionWhenEngineClosedConcurrently(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195616493,
  "executionTime": 147
 }
]

[
 "TEST_STARTED",
 "ID#testMissingTranslog(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingTranslog(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195616640,
  "executionTime": 136
 }
]

[
 "TEST_STARTED",
 "ID#testTranslogReplayWithFailure(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTranslogReplayWithFailure(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195616776,
  "executionTime": 409
 }
]

[
 "TEST_STARTED",
 "ID#testVersioningCreateExistsExceptionWithFlush(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersioningCreateExistsExceptionWithFlush(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195617185,
  "executionTime": 342
 }
]

[
 "TEST_STARTED",
 "ID#testVersioningReplicaConflict2(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersioningReplicaConflict2(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195617527,
  "executionTime": 442
 }
]

[
 "TEST_STARTED",
 "ID#testDoubleDelivery(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoubleDelivery(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195617969,
  "executionTime": 189
 }
]

[
 "TEST_STARTED",
 "ID#testBasicCreatedFlag(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicCreatedFlag(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195618158,
  "executionTime": 71
 }
]

[
 "TEST_STARTED",
 "ID#testForceMerge(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForceMerge(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195618229,
  "executionTime": 4207
 }
]

[
 "TEST_STARTED",
 "ID#testSegmentsWithMergeFlag(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSegmentsWithMergeFlag(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195622436,
  "executionTime": 500
 }
]

[
 "TEST_STARTED",
 "ID#testCurrentTranslogIDisCommitted(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCurrentTranslogIDisCommitted(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195622936,
  "executionTime": 257
 }
]

[
 "TEST_STARTED",
 "ID#testAppendConcurrently(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendConcurrently(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195623193,
  "executionTime": 378
 }
]

[
 "TEST_STARTED",
 "ID#testDocStats(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDocStats(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195623571,
  "executionTime": 213
 }
]

[
 "TEST_STARTED",
 "ID#testRenewSyncFlush(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRenewSyncFlush(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195623785,
  "executionTime": 1362
 }
]

[
 "TEST_STARTED",
 "ID#testSyncedFlush(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSyncedFlush(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195625148,
  "executionTime": 228
 }
]

[
 "TEST_STARTED",
 "ID#testRetryWithAutogeneratedIdsAndWrongOrderWorksAndNoDuplicateDocs(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRetryWithAutogeneratedIdsAndWrongOrderWorksAndNoDuplicateDocs(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195625376,
  "executionTime": 455
 }
]

[
 "TEST_STARTED",
 "ID#testSkipTranslogReplay(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSkipTranslogReplay(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195625832,
  "executionTime": 3422
 }
]

[
 "TEST_STARTED",
 "ID#testTranslogRecoveryDoesNotReplayIntoTranslog(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTranslogRecoveryDoesNotReplayIntoTranslog(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195629254,
  "executionTime": 2582
 }
]

[
 "TEST_STARTED",
 "ID#testExtractShardId(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractShardId(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195631836,
  "executionTime": 1468
 }
]

[
 "TEST_STARTED",
 "ID#testIndexSearcherWrapper(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexSearcherWrapper(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195633304,
  "executionTime": 468
 }
]

[
 "TEST_STARTED",
 "ID#testFlushIsDisabledDuringTranslogRecovery(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFlushIsDisabledDuringTranslogRecovery(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195633773,
  "executionTime": 133
 }
]

[
 "TEST_STARTED",
 "ID#testIndexWriterInfoStream(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,068][TRACE][org.elasticsearch.index.engine]  [index][1] acquired flush lock immediately%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 04:47:14,069 TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] ERROR Attempted to append to non-started appender testIndexWriterInfoStream"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,079][TRACE][org.elasticsearch.index.translog]  [index][1] current translog set to [3]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 04:47:14,079 TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] ERROR Attempted to append to non-started appender testIndexWriterInfoStream"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,080][TRACE][org.elasticsearch.index.engine]  [index][1] starting commit for flush; commitTranslog=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 04:47:14,080 TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] ERROR Attempted to append to non-started appender testIndexWriterInfoStream"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,080][TRACE][org.elasticsearch.index.engine]  [index][1] committing writer with translog id [3]  and sync id [null] %0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 04:47:14,081 TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] ERROR Attempted to append to non-started appender testIndexWriterInfoStream"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,081][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IW: commit: start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,081][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IW: commit: enter lock%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,081][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IW: commit: now prepare%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,081][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IW: prepareCommit: flush%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,081][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IW:   index before flush _0(6.2.0):c1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,082][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] DW: startFullFlush%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,082][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] DW: anyChanges? numDocsInRam=1 deletes=false hasTickets:false pendingChangesInFullFlush: false%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,082][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] DWFC: addFlushableState DocumentsWriterPerThread [pendingDeletes=gen=0, segment=_1, aborted=false, numDocsInRAM=1, deleteQueue=DWDQ: [ generation: 4 ]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,082][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] DWPT: flush postings as segment _1 numDocs=1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,082][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IW: 0 msec to write norms%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,085][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IW: 2 msec to write docValues%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,085][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IW: 0 msec to write points%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,085][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IW: 0 msec to finish stored fields%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,092][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IW: 6 msec to write postings and finish vectors%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,092][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IW: 0 msec to write fieldInfos%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,092][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] DWPT: new segment has 0 deleted docs%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,092][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] DWPT: new segment has no vectors; norms; docValues; prox; freqs%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,092][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] DWPT: flushedFiles=[_1_Asserting_0.dvm, _1_Asserting_0.tip, _1.nvd, _1_Asserting_0.doc, _1_Asserting_0.tim, _1_Asserting_0.dvd, _1_Asserting_0.pos, _1.fdx, _1.nvm, _1.fnm, _1.fdt]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,093][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] DWPT: flushed codec=Asserting(Lucene62)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,099][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] DWPT: flushed: segment=_1 ramUsed=0.087 MB newFlushedSize=0.001 MB docs/MB=771.012%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,099][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IW: create compound file%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,105][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] DWPT: flush time 23.340137 msec%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,106][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] DW: publishFlushedSegment seg-private updates=null%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,106][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IW: publishFlushedSegment%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,106][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IW: publish sets newSegment delGen=6 seg=_1(6.2.0):c1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,106][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IFD: now checkpoint \"_0(6.2.0):c1 _1(6.2.0):c1\" [2 segments ; isCommit = false]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,106][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IFD: delete []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,107][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IFD: 0 msec to checkpoint%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,107][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IFD: will delete new file \"_1_Asserting_0.dvm\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,107][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IFD: will delete new file \"_1_Asserting_0.tip\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,107][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IFD: will delete new file \"_1.nvd\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,107][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IFD: will delete new file \"_1_Asserting_0.doc\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,107][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IFD: will delete new file \"_1_Asserting_0.tim\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,107][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IFD: will delete new file \"_1_Asserting_0.dvd\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,107][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IFD: will delete new file \"_1_Asserting_0.pos\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,107][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IFD: will delete new file \"_1.fdx\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,107][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IFD: will delete new file \"_1.nvm\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,107][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IFD: will delete new file \"_1.fnm\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,107][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IFD: will delete new file \"_1.fdt\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,108][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IFD: delete [_1_Asserting_0.dvm, _1_Asserting_0.tip, _1.nvd, _1_Asserting_0.doc, _1_Asserting_0.tim, _1_Asserting_0.dvd, _1_Asserting_0.pos, _1.fdx, _1.nvm, _1.fnm, _1.fdt]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,108][TRACE][org.elasticsearch.index.store.deletes] [index][1] StoreDirectory.deleteFile: delete file _1_Asserting_0.dvm%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,108][TRACE][org.elasticsearch.index.store.deletes] [index][1] StoreDirectory.deleteFile: delete file _1_Asserting_0.tip%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,113][TRACE][org.elasticsearch.index.store.deletes] [index][1] StoreDirectory.deleteFile: delete file _1.nvd%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,113][TRACE][org.elasticsearch.index.store.deletes] [index][1] StoreDirectory.deleteFile: delete file _1_Asserting_0.doc%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,113][TRACE][org.elasticsearch.index.store.deletes] [index][1] StoreDirectory.deleteFile: delete file _1_Asserting_0.tim%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,113][TRACE][org.elasticsearch.index.store.deletes] [index][1] StoreDirectory.deleteFile: delete file _1_Asserting_0.dvd%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,113][TRACE][org.elasticsearch.index.store.deletes] [index][1] StoreDirectory.deleteFile: delete file _1_Asserting_0.pos%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,113][TRACE][org.elasticsearch.index.store.deletes] [index][1] StoreDirectory.deleteFile: delete file _1.fdx%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,113][TRACE][org.elasticsearch.index.store.deletes] [index][1] StoreDirectory.deleteFile: delete file _1.nvm%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,113][TRACE][org.elasticsearch.index.store.deletes] [index][1] StoreDirectory.deleteFile: delete file _1.fnm%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,113][TRACE][org.elasticsearch.index.store.deletes] [index][1] StoreDirectory.deleteFile: delete file _1.fdt%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,114][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IW: apply all deletes during flush%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,114][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IW: now apply all deletes for all segments maxDoc=2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,114][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] BD: applyDeletes: open segment readers took 0 msec%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,114][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] BD: applyDeletes: no segments; skipping%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,114][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] BD: prune sis=segments_2: _0(6.2.0):c1 _1(6.2.0):c1 minGen=3 packetCount=0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,114][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] DW: TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] finishFullFlush success=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,114][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IW: %0Adir=store(MockDirectoryWrapper(RAMDirectory@2bdc2cb4 lockFactory=org.apache.lucene.store.SingleInstanceLockFactory@7cee964f))%0Aindex=_0(6.2.0):c1 _1(6.2.0):c1%0Aversion=6.2.0%0Aanalyzer=org.apache.lucene.analysis.MockAnalyzer%0AramBufferSizeMB=256.0%0AmaxBufferedDocs=-1%0AmaxBufferedDeleteTerms=-1%0AmergedSegmentWarmer=null%0AdelPolicy=org.apache.lucene.index.SnapshotDeletionPolicy%0Acommit=null%0AopenMode=CREATE%0Asimilarity=org.apache.lucene.search.similarities.RandomSimilarity%0AmergeScheduler=EngineMergeScheduler: maxThreadCount=2, maxMergeCount=7, ioThrottle=true%0Acodec=Asserting(Lucene62)%0AinfoStream=org.elasticsearch.common.lucene.LoggerInfoStream%0AmergePolicy=ElasticsearchMergePolicy([LogByteSizeMergePolicy: minMergeSize=1677721, mergeFactor=44, maxMergeSize=2147483648, maxMergeSizeForForcedMerge=9223372036854775807, calibrateSizeByDeletes=true, maxMergeDocs=2147483647, maxCFSSegmentSizeMB=8.796093022207999E12, noCFSRatio=0.0])%0AindexerThreadPool=org.apache.lucene.index.DocumentsWriterPerThreadPool@4b3b3d49%0AreaderPooling=false%0AperThreadHardLimitMB=1945%0AuseCompoundFile=true%0AcommitOnClose=false%0AindexSort=null%0Awriter=org.apache.lucene.index.IndexWriter@428b1ec0%0A%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,115][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IW: MMapDirectory.UNMAP_SUPPORTED=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,118][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] LMP: findMerges: 2 segments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,118][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] LMP: seg=_0(6.2.0):c1 level=2.0281968 size=0.002 MB%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,118][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] LMP: seg=_1(6.2.0):c1 level=2.0281968 size=0.002 MB%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,118][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] LMP:   level -1.0 to 2.0281968: 2 segments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,119][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] MS: now merge%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,119][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] MS:   index: _0(6.2.0):c1 _1(6.2.0):c1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,119][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] MS:   no more merges pending; now return%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,119][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IW: startCommit(): start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,119][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IW: startCommit index=_0(6.2.0):c1 _1(6.2.0):c1 changeCount=11%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,119][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IW: startCommit: wrote pending segments file \"pending_segments_3\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,120][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IW: done all syncs: [_1.cfs, _0.cfe, _0.si, _1.cfe, _1.si, _0.cfs]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,120][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IW: commit: pendingCommit != null%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,120][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IW: commit: done writing segments file \"segments_3\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,121][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IFD: now checkpoint \"_0(6.2.0):c1 _1(6.2.0):c1\" [2 segments ; isCommit = true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,121][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IFD: deleteCommits: now decRef commit \"segments_2\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,121][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IFD: delete [segments_2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,121][TRACE][org.elasticsearch.index.store.deletes] [index][1] StoreDirectory.deleteFile: delete file segments_2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,121][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IFD: 0 msec to checkpoint%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,121][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IFD: delete []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,121][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IW: commit: took 40.0 msec%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,121][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IW: commit: done%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,121][TRACE][org.elasticsearch.index.engine]  [index][1] finished commit for flush%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,121][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IW: nrtIsCurrent: infoVersion matches: false; DW changes: false; BD changes: false%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,122][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IW: flush at getReader%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,122][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] DW: startFullFlush%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,122][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IW: apply all deletes during flush%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,122][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IW: now apply all deletes for all segments maxDoc=2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,122][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] BD: applyDeletes: open segment readers took 0 msec%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,122][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] BD: applyDeletes: no segments; skipping%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,122][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] BD: prune sis=segments_3: _0(6.2.0):c1 _1(6.2.0):c1 minGen=3 packetCount=0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,124][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IW: incRefDeleter for NRT reader version=11 segments=_0(6.2.0):c1 _1(6.2.0):c1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,124][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IW: return reader version=11 reader=StandardDirectoryReader(segments_3:11:nrt _0(6.2.0):c1 _1(6.2.0):c1)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,124][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] DW: TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] finishFullFlush success=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,124][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IW: getReader took 2 msec%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,124][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IFD: delete []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,124][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[FD13852EF36FC81C] IW: decRefDeleter for NRT reader version=7 segments=_0(6.2.0):c1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:14,124][TRACE][org.elasticsearch.index.translog]  [index][1] delete translog file - not referenced and not current anymore C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.index.engine.InternalEngineTests_FD13852EF36FC81C-001\\translog-primary-047\\translog-2.tlog%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexWriterInfoStream(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195633907,
  "executionTime": 268
 }
]

[
 "TEST_STARTED",
 "ID#testCommitStats(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCommitStats(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195634176,
  "executionTime": 146
 }
]

[
 "TEST_STARTED",
 "ID#testRetryWithAutogeneratedIdWorksAndNoDuplicateDocs(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRetryWithAutogeneratedIdWorksAndNoDuplicateDocs(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195634322,
  "executionTime": 142
 }
]

[
 "TEST_STARTED",
 "ID#testExternalVersioningIndexConflict(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExternalVersioningIndexConflict(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195634464,
  "executionTime": 122
 }
]

[
 "TEST_STARTED",
 "ID#testVersioningIndexConflictWithFlush(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersioningIndexConflictWithFlush(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195634586,
  "executionTime": 548
 }
]

[
 "TEST_STARTED",
 "ID#testVerboseSegments(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVerboseSegments(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195635135,
  "executionTime": 231
 }
]

[
 "TEST_STARTED",
 "ID#testSegments(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSegments(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1474195635368,
  "executionTime": 459
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.engine.InternalEngineTests",
  "startTimestamp": 1474195598877,
  "executionTime": 38429
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
   "children": [
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testCommonTermsQuery4(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testCommonTermsQuery4(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testCommonTermsQuery4",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testCommonTermsQuery1(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testCommonTermsQuery1(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testCommonTermsQuery1",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testCommonTermsQuery2(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testCommonTermsQuery2(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testCommonTermsQuery2",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testParseFailsWithMultipleFields(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testParseFailsWithMultipleFields",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testCommonTermsQuery3(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testCommonTermsQuery3(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testCommonTermsQuery3",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195637314
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:17,366][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{DwImJFyXR_WnoyIMZtXJZA}{local}{local[99]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:17,373][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:17,374][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:17,453][WARN ][org.elasticsearch.deprecation.index.mapper]  [P] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:17,453][WARN ][org.elasticsearch.deprecation.index.mapper]  [P] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:17,453][WARN ][org.elasticsearch.deprecation.index.mapper]  [P] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:17,457][WARN ][org.elasticsearch.deprecation.index.mapper]  [P] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:17,457][WARN ][org.elasticsearch.deprecation.index.mapper]  [P] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:17,457][WARN ][org.elasticsearch.deprecation.index.mapper]  [P] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:17,463][WARN ][org.elasticsearch.deprecation.index.mapper]  [P] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:17,463][WARN ][org.elasticsearch.deprecation.index.mapper]  [P] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:17,463][WARN ][org.elasticsearch.deprecation.index.mapper]  [P] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:17,466][WARN ][org.elasticsearch.deprecation.index.mapper]  [P] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:17,466][WARN ][org.elasticsearch.deprecation.index.mapper]  [P] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:17,466][WARN ][org.elasticsearch.deprecation.index.mapper]  [P] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:17,469][WARN ][org.elasticsearch.deprecation.index.mapper]  [P] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:17,469][WARN ][org.elasticsearch.deprecation.index.mapper]  [P] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:17,469][WARN ][org.elasticsearch.deprecation.index.mapper]  [P] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:17,473][WARN ][org.elasticsearch.deprecation.index.mapper]  [P] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:17,473][WARN ][org.elasticsearch.deprecation.index.mapper]  [P] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:17,473][WARN ][org.elasticsearch.deprecation.index.mapper]  [P] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:17,476][WARN ][org.elasticsearch.deprecation.index.mapper]  [P] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:17,476][WARN ][org.elasticsearch.deprecation.index.mapper]  [P] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:17,476][WARN ][org.elasticsearch.deprecation.index.mapper]  [P] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:17,479][WARN ][org.elasticsearch.deprecation.index.mapper]  [P] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:17,479][WARN ][org.elasticsearch.deprecation.index.mapper]  [P] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:17,479][WARN ][org.elasticsearch.deprecation.index.mapper]  [P] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:17,484][WARN ][org.elasticsearch.deprecation.index.mapper]  [P] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:17,484][WARN ][org.elasticsearch.deprecation.index.mapper]  [P] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:17,484][WARN ][org.elasticsearch.deprecation.index.mapper]  [P] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1474195637356,
  "executionTime": 130
 }
]

[
 "TEST_STARTED",
 "ID#testCommonTermsQuery4(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCommonTermsQuery4(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1474195637486,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testCommonTermsQuery1(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCommonTermsQuery1(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1474195637492,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1474195637511,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testCommonTermsQuery2(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCommonTermsQuery2(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1474195637527,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1474195637535,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1474195637550,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1474195637553,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1474195637556,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1474195637558,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1474195637561,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1474195637571,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1474195637581,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testCommonTermsQuery3(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCommonTermsQuery3(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1474195637585,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1474195637608,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
  "startTimestamp": 1474195637314,
  "executionTime": 303
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.concurrent.ThreadContextTests",
   "displayName": "org.elasticsearch.common.util.concurrent.ThreadContextTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.concurrent.ThreadContextTests",
   "children": [
    {
     "id": "ID#testSerializeInDifferentContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "displayName": "testSerializeInDifferentContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "methodName": "testSerializeInDifferentContext",
     "className": "org.elasticsearch.common.util.concurrent.ThreadContextTests",
     "children": []
    },
    {
     "id": "ID#testSerializeInDifferentContextNoDefaults(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "displayName": "testSerializeInDifferentContextNoDefaults(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "methodName": "testSerializeInDifferentContextNoDefaults",
     "className": "org.elasticsearch.common.util.concurrent.ThreadContextTests",
     "children": []
    },
    {
     "id": "ID#testCanResetDefault(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "displayName": "testCanResetDefault(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "methodName": "testCanResetDefault",
     "className": "org.elasticsearch.common.util.concurrent.ThreadContextTests",
     "children": []
    },
    {
     "id": "ID#testResponseHeaders(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "displayName": "testResponseHeaders(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "methodName": "testResponseHeaders",
     "className": "org.elasticsearch.common.util.concurrent.ThreadContextTests",
     "children": []
    },
    {
     "id": "ID#testStashContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "displayName": "testStashContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "methodName": "testStashContext",
     "className": "org.elasticsearch.common.util.concurrent.ThreadContextTests",
     "children": []
    },
    {
     "id": "ID#testPreserveContextKeepsOriginalContextWhenCalledTwice(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "displayName": "testPreserveContextKeepsOriginalContextWhenCalledTwice(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "methodName": "testPreserveContextKeepsOriginalContextWhenCalledTwice",
     "className": "org.elasticsearch.common.util.concurrent.ThreadContextTests",
     "children": []
    },
    {
     "id": "ID#testStoreContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "displayName": "testStoreContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "methodName": "testStoreContext",
     "className": "org.elasticsearch.common.util.concurrent.ThreadContextTests",
     "children": []
    },
    {
     "id": "ID#testPreserveContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "displayName": "testPreserveContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "methodName": "testPreserveContext",
     "className": "org.elasticsearch.common.util.concurrent.ThreadContextTests",
     "children": []
    },
    {
     "id": "ID#testAccessClosed(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "displayName": "testAccessClosed(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "methodName": "testAccessClosed",
     "className": "org.elasticsearch.common.util.concurrent.ThreadContextTests",
     "children": []
    },
    {
     "id": "ID#testStashAndMerge(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "displayName": "testStashAndMerge(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "methodName": "testStashAndMerge",
     "className": "org.elasticsearch.common.util.concurrent.ThreadContextTests",
     "children": []
    },
    {
     "id": "ID#testSerialize(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "displayName": "testSerialize(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "methodName": "testSerialize",
     "className": "org.elasticsearch.common.util.concurrent.ThreadContextTests",
     "children": []
    },
    {
     "id": "ID#testCopyHeaders(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "displayName": "testCopyHeaders(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "methodName": "testCopyHeaders",
     "className": "org.elasticsearch.common.util.concurrent.ThreadContextTests",
     "children": []
    },
    {
     "id": "ID#testStashAndMergeWithModifiedDefaults(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "displayName": "testStashAndMergeWithModifiedDefaults(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
     "methodName": "testStashAndMergeWithModifiedDefaults",
     "className": "org.elasticsearch.common.util.concurrent.ThreadContextTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195637625
 }
]

[
 "TEST_STARTED",
 "ID#testSerializeInDifferentContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerializeInDifferentContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
  "startTimestamp": 1474195637672,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerializeInDifferentContextNoDefaults(org.elasticsearch.common.util.concurrent.ThreadContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerializeInDifferentContextNoDefaults(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
  "startTimestamp": 1474195637675,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCanResetDefault(org.elasticsearch.common.util.concurrent.ThreadContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCanResetDefault(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
  "startTimestamp": 1474195637677,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testResponseHeaders(org.elasticsearch.common.util.concurrent.ThreadContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResponseHeaders(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
  "startTimestamp": 1474195637679,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testStashContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStashContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
  "startTimestamp": 1474195637681,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testPreserveContextKeepsOriginalContextWhenCalledTwice(org.elasticsearch.common.util.concurrent.ThreadContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreserveContextKeepsOriginalContextWhenCalledTwice(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
  "startTimestamp": 1474195637683,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testStoreContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStoreContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
  "startTimestamp": 1474195637689,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testPreserveContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreserveContext(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
  "startTimestamp": 1474195637691,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testAccessClosed(org.elasticsearch.common.util.concurrent.ThreadContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAccessClosed(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
  "startTimestamp": 1474195637698,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testStashAndMerge(org.elasticsearch.common.util.concurrent.ThreadContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStashAndMerge(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
  "startTimestamp": 1474195637701,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialize(org.elasticsearch.common.util.concurrent.ThreadContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialize(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
  "startTimestamp": 1474195637703,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testCopyHeaders(org.elasticsearch.common.util.concurrent.ThreadContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyHeaders(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
  "startTimestamp": 1474195637710,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testStashAndMergeWithModifiedDefaults(org.elasticsearch.common.util.concurrent.ThreadContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStashAndMergeWithModifiedDefaults(org.elasticsearch.common.util.concurrent.ThreadContextTests)",
  "startTimestamp": 1474195637712,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.concurrent.ThreadContextTests",
  "startTimestamp": 1474195637625,
  "executionTime": 93
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.search.MultiSearchRequestTests",
   "displayName": "org.elasticsearch.action.search.MultiSearchRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.search.MultiSearchRequestTests",
   "children": [
    {
     "id": "ID#testSimpleAdd4(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "displayName": "testSimpleAdd4(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "methodName": "testSimpleAdd4",
     "className": "org.elasticsearch.action.search.MultiSearchRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleAdd(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "displayName": "testSimpleAdd(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "methodName": "testSimpleAdd",
     "className": "org.elasticsearch.action.search.MultiSearchRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleAdd2(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "displayName": "testSimpleAdd2(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "methodName": "testSimpleAdd2",
     "className": "org.elasticsearch.action.search.MultiSearchRequestTests",
     "children": []
    },
    {
     "id": "ID#testMaxConcurrentSearchRequests(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "displayName": "testMaxConcurrentSearchRequests(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "methodName": "testMaxConcurrentSearchRequests",
     "className": "org.elasticsearch.action.search.MultiSearchRequestTests",
     "children": []
    },
    {
     "id": "ID#testResponseErrorToXContent(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "displayName": "testResponseErrorToXContent(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "methodName": "testResponseErrorToXContent",
     "className": "org.elasticsearch.action.search.MultiSearchRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleAdd3(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "displayName": "testSimpleAdd3(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "methodName": "testSimpleAdd3",
     "className": "org.elasticsearch.action.search.MultiSearchRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195637725
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleAdd4(org.elasticsearch.action.search.MultiSearchRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleAdd4(org.elasticsearch.action.search.MultiSearchRequestTests)",
  "startTimestamp": 1474195637822,
  "executionTime": 131
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleAdd(org.elasticsearch.action.search.MultiSearchRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleAdd(org.elasticsearch.action.search.MultiSearchRequestTests)",
  "startTimestamp": 1474195637953,
  "executionTime": 34
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleAdd2(org.elasticsearch.action.search.MultiSearchRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleAdd2(org.elasticsearch.action.search.MultiSearchRequestTests)",
  "startTimestamp": 1474195637987,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testMaxConcurrentSearchRequests(org.elasticsearch.action.search.MultiSearchRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMaxConcurrentSearchRequests(org.elasticsearch.action.search.MultiSearchRequestTests)",
  "startTimestamp": 1474195637994,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testResponseErrorToXContent(org.elasticsearch.action.search.MultiSearchRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResponseErrorToXContent(org.elasticsearch.action.search.MultiSearchRequestTests)",
  "startTimestamp": 1474195637997,
  "executionTime": 111
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleAdd3(org.elasticsearch.action.search.MultiSearchRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleAdd3(org.elasticsearch.action.search.MultiSearchRequestTests)",
  "startTimestamp": 1474195638127,
  "executionTime": 16
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.search.MultiSearchRequestTests",
  "startTimestamp": 1474195637725,
  "executionTime": 421
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests",
   "displayName": "org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests",
   "children": [
    {
     "id": "ID#testNoAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
     "displayName": "testNoAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
     "methodName": "testNoAnalysisService",
     "className": "org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests",
     "children": []
    },
    {
     "id": "ID#testWithAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
     "displayName": "testWithAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
     "methodName": "testWithAnalysisService",
     "className": "org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests",
     "children": []
    },
    {
     "id": "ID#testFillsAttributes(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
     "displayName": "testFillsAttributes(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
     "methodName": "testFillsAttributes",
     "className": "org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests",
     "children": []
    },
    {
     "id": "ID#testUnknown(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
     "displayName": "testUnknown(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
     "methodName": "testUnknown",
     "className": "org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests",
     "children": []
    },
    {
     "id": "ID#testGetIndexAnalyserWithoutAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
     "displayName": "testGetIndexAnalyserWithoutAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
     "methodName": "testGetIndexAnalyserWithoutAnalysisService",
     "className": "org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195638154
 }
]

[
 "TEST_STARTED",
 "ID#testNoAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
  "startTimestamp": 1474195638213,
  "executionTime": 181
 }
]

[
 "TEST_STARTED",
 "ID#testWithAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
  "startTimestamp": 1474195638395,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testFillsAttributes(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFillsAttributes(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
  "startTimestamp": 1474195638424,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testUnknown(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknown(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
  "startTimestamp": 1474195638435,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testGetIndexAnalyserWithoutAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetIndexAnalyserWithoutAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
  "startTimestamp": 1474195638445,
  "executionTime": 21
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests",
  "startTimestamp": 1474195638154,
  "executionTime": 335
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.ClusterModuleTests",
   "displayName": "org.elasticsearch.cluster.ClusterModuleTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.ClusterModuleTests",
   "children": [
    {
     "id": "ID#testRegisterClusterDynamicSetting(org.elasticsearch.cluster.ClusterModuleTests)",
     "displayName": "testRegisterClusterDynamicSetting(org.elasticsearch.cluster.ClusterModuleTests)",
     "methodName": "testRegisterClusterDynamicSetting",
     "className": "org.elasticsearch.cluster.ClusterModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterIndexDynamicSettingDuplicate(org.elasticsearch.cluster.ClusterModuleTests)",
     "displayName": "testRegisterIndexDynamicSettingDuplicate(org.elasticsearch.cluster.ClusterModuleTests)",
     "methodName": "testRegisterIndexDynamicSettingDuplicate",
     "className": "org.elasticsearch.cluster.ClusterModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterIndexDynamicSetting(org.elasticsearch.cluster.ClusterModuleTests)",
     "displayName": "testRegisterIndexDynamicSetting(org.elasticsearch.cluster.ClusterModuleTests)",
     "methodName": "testRegisterIndexDynamicSetting",
     "className": "org.elasticsearch.cluster.ClusterModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterClusterDynamicSettingDuplicate(org.elasticsearch.cluster.ClusterModuleTests)",
     "displayName": "testRegisterClusterDynamicSettingDuplicate(org.elasticsearch.cluster.ClusterModuleTests)",
     "methodName": "testRegisterClusterDynamicSettingDuplicate",
     "className": "org.elasticsearch.cluster.ClusterModuleTests",
     "children": []
    },
    {
     "id": "ID#testUnknownShardsAllocator(org.elasticsearch.cluster.ClusterModuleTests)",
     "displayName": "testUnknownShardsAllocator(org.elasticsearch.cluster.ClusterModuleTests)",
     "methodName": "testUnknownShardsAllocator",
     "className": "org.elasticsearch.cluster.ClusterModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterShardsAllocatorAlreadyRegistered(org.elasticsearch.cluster.ClusterModuleTests)",
     "displayName": "testRegisterShardsAllocatorAlreadyRegistered(org.elasticsearch.cluster.ClusterModuleTests)",
     "methodName": "testRegisterShardsAllocatorAlreadyRegistered",
     "className": "org.elasticsearch.cluster.ClusterModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterAllocationDeciderDuplicate(org.elasticsearch.cluster.ClusterModuleTests)",
     "displayName": "testRegisterAllocationDeciderDuplicate(org.elasticsearch.cluster.ClusterModuleTests)",
     "methodName": "testRegisterAllocationDeciderDuplicate",
     "className": "org.elasticsearch.cluster.ClusterModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterAllocationDecider(org.elasticsearch.cluster.ClusterModuleTests)",
     "displayName": "testRegisterAllocationDecider(org.elasticsearch.cluster.ClusterModuleTests)",
     "methodName": "testRegisterAllocationDecider",
     "className": "org.elasticsearch.cluster.ClusterModuleTests",
     "children": []
    },
    {
     "id": "ID#testShardsAllocatorFactoryNull(org.elasticsearch.cluster.ClusterModuleTests)",
     "displayName": "testShardsAllocatorFactoryNull(org.elasticsearch.cluster.ClusterModuleTests)",
     "methodName": "testShardsAllocatorFactoryNull",
     "className": "org.elasticsearch.cluster.ClusterModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterShardsAllocator(org.elasticsearch.cluster.ClusterModuleTests)",
     "displayName": "testRegisterShardsAllocator(org.elasticsearch.cluster.ClusterModuleTests)",
     "methodName": "testRegisterShardsAllocator",
     "className": "org.elasticsearch.cluster.ClusterModuleTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195638496
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterClusterDynamicSetting(org.elasticsearch.cluster.ClusterModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterClusterDynamicSetting(org.elasticsearch.cluster.ClusterModuleTests)",
  "startTimestamp": 1474195638533,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterIndexDynamicSettingDuplicate(org.elasticsearch.cluster.ClusterModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterIndexDynamicSettingDuplicate(org.elasticsearch.cluster.ClusterModuleTests)",
  "startTimestamp": 1474195638538,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterIndexDynamicSetting(org.elasticsearch.cluster.ClusterModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterIndexDynamicSetting(org.elasticsearch.cluster.ClusterModuleTests)",
  "startTimestamp": 1474195638542,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterClusterDynamicSettingDuplicate(org.elasticsearch.cluster.ClusterModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterClusterDynamicSettingDuplicate(org.elasticsearch.cluster.ClusterModuleTests)",
  "startTimestamp": 1474195638547,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownShardsAllocator(org.elasticsearch.cluster.ClusterModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownShardsAllocator(org.elasticsearch.cluster.ClusterModuleTests)",
  "startTimestamp": 1474195638550,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterShardsAllocatorAlreadyRegistered(org.elasticsearch.cluster.ClusterModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterShardsAllocatorAlreadyRegistered(org.elasticsearch.cluster.ClusterModuleTests)",
  "startTimestamp": 1474195638561,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterAllocationDeciderDuplicate(org.elasticsearch.cluster.ClusterModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterAllocationDeciderDuplicate(org.elasticsearch.cluster.ClusterModuleTests)",
  "startTimestamp": 1474195638570,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterAllocationDecider(org.elasticsearch.cluster.ClusterModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterAllocationDecider(org.elasticsearch.cluster.ClusterModuleTests)",
  "startTimestamp": 1474195638577,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testShardsAllocatorFactoryNull(org.elasticsearch.cluster.ClusterModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardsAllocatorFactoryNull(org.elasticsearch.cluster.ClusterModuleTests)",
  "startTimestamp": 1474195638585,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterShardsAllocator(org.elasticsearch.cluster.ClusterModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterShardsAllocator(org.elasticsearch.cluster.ClusterModuleTests)",
  "startTimestamp": 1474195638592,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.ClusterModuleTests",
  "startTimestamp": 1474195638496,
  "executionTime": 104
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.structure.RoutingIteratorTests",
   "displayName": "org.elasticsearch.cluster.structure.RoutingIteratorTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.structure.RoutingIteratorTests",
   "children": [
    {
     "id": "ID#testShardsAndPreferNodeRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "displayName": "testShardsAndPreferNodeRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "methodName": "testShardsAndPreferNodeRouting",
     "className": "org.elasticsearch.cluster.structure.RoutingIteratorTests",
     "children": []
    },
    {
     "id": "ID#testRandomRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "displayName": "testRandomRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "methodName": "testRandomRouting",
     "className": "org.elasticsearch.cluster.structure.RoutingIteratorTests",
     "children": []
    },
    {
     "id": "ID#testIterator1(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "displayName": "testIterator1(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "methodName": "testIterator1",
     "className": "org.elasticsearch.cluster.structure.RoutingIteratorTests",
     "children": []
    },
    {
     "id": "ID#testEmptyIterator(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "displayName": "testEmptyIterator(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "methodName": "testEmptyIterator",
     "className": "org.elasticsearch.cluster.structure.RoutingIteratorTests",
     "children": []
    },
    {
     "id": "ID#testReplicaShardPreferenceIters(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "displayName": "testReplicaShardPreferenceIters(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "methodName": "testReplicaShardPreferenceIters",
     "className": "org.elasticsearch.cluster.structure.RoutingIteratorTests",
     "children": []
    },
    {
     "id": "ID#testIterator2(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "displayName": "testIterator2(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "methodName": "testIterator2",
     "className": "org.elasticsearch.cluster.structure.RoutingIteratorTests",
     "children": []
    },
    {
     "id": "ID#testNodeSelectorRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "displayName": "testNodeSelectorRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "methodName": "testNodeSelectorRouting",
     "className": "org.elasticsearch.cluster.structure.RoutingIteratorTests",
     "children": []
    },
    {
     "id": "ID#testAttributePreferenceRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "displayName": "testAttributePreferenceRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
     "methodName": "testAttributePreferenceRouting",
     "className": "org.elasticsearch.cluster.structure.RoutingIteratorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195638609
 }
]

[
 "TEST_STARTED",
 "ID#testShardsAndPreferNodeRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:17:18,645][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][1], [test][3], [test][4], [test][2], [test][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardsAndPreferNodeRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
  "startTimestamp": 1474195638633,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testRandomRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
  "startTimestamp": 1474195638658,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testIterator1(org.elasticsearch.cluster.structure.RoutingIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIterator1(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
  "startTimestamp": 1474195638666,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyIterator(org.elasticsearch.cluster.structure.RoutingIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyIterator(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
  "startTimestamp": 1474195638668,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReplicaShardPreferenceIters(org.elasticsearch.cluster.structure.RoutingIteratorTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:17:18,680][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][1], [test][0], [test][1], [test][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplicaShardPreferenceIters(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
  "startTimestamp": 1474195638671,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testIterator2(org.elasticsearch.cluster.structure.RoutingIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIterator2(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
  "startTimestamp": 1474195638681,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNodeSelectorRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNodeSelectorRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
  "startTimestamp": 1474195638683,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testAttributePreferenceRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:17:18,716][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAttributePreferenceRouting(org.elasticsearch.cluster.structure.RoutingIteratorTests)",
  "startTimestamp": 1474195638692,
  "executionTime": 28
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.structure.RoutingIteratorTests",
  "startTimestamp": 1474195638609,
  "executionTime": 114
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.XContentTypeTests",
   "displayName": "org.elasticsearch.common.xcontent.XContentTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.XContentTypeTests",
   "children": [
    {
     "id": "ID#testFromYaml(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "displayName": "testFromYaml(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "methodName": "testFromYaml",
     "className": "org.elasticsearch.common.xcontent.XContentTypeTests",
     "children": []
    },
    {
     "id": "ID#testFromWildcard(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "displayName": "testFromWildcard(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "methodName": "testFromWildcard",
     "className": "org.elasticsearch.common.xcontent.XContentTypeTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonUppercase(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "displayName": "testFromJsonUppercase(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "methodName": "testFromJsonUppercase",
     "className": "org.elasticsearch.common.xcontent.XContentTypeTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "displayName": "testFromJson(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.common.xcontent.XContentTypeTests",
     "children": []
    },
    {
     "id": "ID#testFromWildcardUppercase(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "displayName": "testFromWildcardUppercase(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "methodName": "testFromWildcardUppercase",
     "className": "org.elasticsearch.common.xcontent.XContentTypeTests",
     "children": []
    },
    {
     "id": "ID#testFromRubbish(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "displayName": "testFromRubbish(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "methodName": "testFromRubbish",
     "className": "org.elasticsearch.common.xcontent.XContentTypeTests",
     "children": []
    },
    {
     "id": "ID#testFromSmile(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "displayName": "testFromSmile(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "methodName": "testFromSmile",
     "className": "org.elasticsearch.common.xcontent.XContentTypeTests",
     "children": []
    },
    {
     "id": "ID#testFromCbor(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "displayName": "testFromCbor(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "methodName": "testFromCbor",
     "className": "org.elasticsearch.common.xcontent.XContentTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195638735
 }
]

[
 "TEST_STARTED",
 "ID#testFromYaml(org.elasticsearch.common.xcontent.XContentTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromYaml(org.elasticsearch.common.xcontent.XContentTypeTests)",
  "startTimestamp": 1474195638761,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromWildcard(org.elasticsearch.common.xcontent.XContentTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromWildcard(org.elasticsearch.common.xcontent.XContentTypeTests)",
  "startTimestamp": 1474195638764,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonUppercase(org.elasticsearch.common.xcontent.XContentTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonUppercase(org.elasticsearch.common.xcontent.XContentTypeTests)",
  "startTimestamp": 1474195638766,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.common.xcontent.XContentTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.common.xcontent.XContentTypeTests)",
  "startTimestamp": 1474195638767,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromWildcardUppercase(org.elasticsearch.common.xcontent.XContentTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromWildcardUppercase(org.elasticsearch.common.xcontent.XContentTypeTests)",
  "startTimestamp": 1474195638769,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromRubbish(org.elasticsearch.common.xcontent.XContentTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromRubbish(org.elasticsearch.common.xcontent.XContentTypeTests)",
  "startTimestamp": 1474195638771,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromSmile(org.elasticsearch.common.xcontent.XContentTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromSmile(org.elasticsearch.common.xcontent.XContentTypeTests)",
  "startTimestamp": 1474195638773,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFromCbor(org.elasticsearch.common.xcontent.XContentTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromCbor(org.elasticsearch.common.xcontent.XContentTypeTests)",
  "startTimestamp": 1474195638775,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.XContentTypeTests",
  "startTimestamp": 1474195638735,
  "executionTime": 43
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.builders.PointBuilderTests",
   "displayName": "org.elasticsearch.common.geo.builders.PointBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.builders.PointBuilderTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.PointBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.common.geo.builders.PointBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.common.geo.builders.PointBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.common.geo.builders.PointBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.common.geo.builders.PointBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.common.geo.builders.PointBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.common.geo.builders.PointBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.common.geo.builders.PointBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.common.geo.builders.PointBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195638785
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.PointBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.PointBuilderTests)",
  "startTimestamp": 1474195638820,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.common.geo.builders.PointBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.common.geo.builders.PointBuilderTests)",
  "startTimestamp": 1474195638824,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.common.geo.builders.PointBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.common.geo.builders.PointBuilderTests)",
  "startTimestamp": 1474195638826,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.builders.PointBuilderTests",
  "startTimestamp": 1474195638785,
  "executionTime": 53
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.gateway.PriorityComparatorTests",
   "displayName": "org.elasticsearch.gateway.PriorityComparatorTests",
   "methodName": null,
   "className": "org.elasticsearch.gateway.PriorityComparatorTests",
   "children": [
    {
     "id": "ID#testPreferNewIndices(org.elasticsearch.gateway.PriorityComparatorTests)",
     "displayName": "testPreferNewIndices(org.elasticsearch.gateway.PriorityComparatorTests)",
     "methodName": "testPreferNewIndices",
     "className": "org.elasticsearch.gateway.PriorityComparatorTests",
     "children": []
    },
    {
     "id": "ID#testPriorityComparatorSort(org.elasticsearch.gateway.PriorityComparatorTests)",
     "displayName": "testPriorityComparatorSort(org.elasticsearch.gateway.PriorityComparatorTests)",
     "methodName": "testPriorityComparatorSort",
     "className": "org.elasticsearch.gateway.PriorityComparatorTests",
     "children": []
    },
    {
     "id": "ID#testPreferPriorityIndices(org.elasticsearch.gateway.PriorityComparatorTests)",
     "displayName": "testPreferPriorityIndices(org.elasticsearch.gateway.PriorityComparatorTests)",
     "methodName": "testPreferPriorityIndices",
     "className": "org.elasticsearch.gateway.PriorityComparatorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195638844
 }
]

[
 "TEST_STARTED",
 "ID#testPreferNewIndices(org.elasticsearch.gateway.PriorityComparatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreferNewIndices(org.elasticsearch.gateway.PriorityComparatorTests)",
  "startTimestamp": 1474195638894,
  "executionTime": 34
 }
]

[
 "TEST_STARTED",
 "ID#testPriorityComparatorSort(org.elasticsearch.gateway.PriorityComparatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPriorityComparatorSort(org.elasticsearch.gateway.PriorityComparatorTests)",
  "startTimestamp": 1474195638928,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testPreferPriorityIndices(org.elasticsearch.gateway.PriorityComparatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreferPriorityIndices(org.elasticsearch.gateway.PriorityComparatorTests)",
  "startTimestamp": 1474195638935,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.gateway.PriorityComparatorTests",
  "startTimestamp": 1474195638844,
  "executionTime": 96
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.IdsQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.IdsQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIdsQueryWithInvalidValues(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testIdsQueryWithInvalidValues(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testIdsQueryWithInvalidValues",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIdsNotProvided(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testIdsNotProvided(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testIdsNotProvided",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonDeprecatedSyntax(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testFromJsonDeprecatedSyntax(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testFromJsonDeprecatedSyntax",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195638946
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:18,973][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{wuFFHiTqQiGztPoeWE8dnw}{local}{local[109]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:18,981][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:18,982][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:19,005][WARN ][org.elasticsearch.deprecation.index.mapper]  [b] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:19,005][WARN ][org.elasticsearch.deprecation.index.mapper]  [b] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:19,005][WARN ][org.elasticsearch.deprecation.index.mapper]  [b] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:19,008][WARN ][org.elasticsearch.deprecation.index.mapper]  [b] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:19,008][WARN ][org.elasticsearch.deprecation.index.mapper]  [b] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:19,009][WARN ][org.elasticsearch.deprecation.index.mapper]  [b] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:19,014][WARN ][org.elasticsearch.deprecation.index.mapper]  [b] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:19,014][WARN ][org.elasticsearch.deprecation.index.mapper]  [b] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:19,014][WARN ][org.elasticsearch.deprecation.index.mapper]  [b] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1474195638968,
  "executionTime": 49
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1474195639018,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1474195639031,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIdsQueryWithInvalidValues(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIdsQueryWithInvalidValues(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1474195639034,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1474195639048,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testIdsNotProvided(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIdsNotProvided(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1474195639064,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1474195639067,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonDeprecatedSyntax(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testFromJsonDeprecatedSyntax(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "message": "test requires at least one type",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test requires at least one type\r\n\tat __randomizedtesting.SeedInfo.seed([FD13852EF36FC81C:29F7A835251F0AA8]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.IdsQueryBuilderTests.testFromJsonDeprecatedSyntax(IdsQueryBuilderTests.java:124)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test requires at least one type",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonDeprecatedSyntax(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1474195639070,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1474195639093,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1474195639096,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1474195639098,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1474195639102,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1474195639105,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.IdsQueryBuilderTests",
  "startTimestamp": 1474195638946,
  "executionTime": 166
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests",
   "children": [
    {
     "id": "ID#testNoRebalanceOnPrimaryOverload(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
     "displayName": "testNoRebalanceOnPrimaryOverload(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
     "methodName": "testNoRebalanceOnPrimaryOverload",
     "className": "org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests",
     "children": []
    },
    {
     "id": "ID#testReplicaBalance(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
     "displayName": "testReplicaBalance(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
     "methodName": "testReplicaBalance",
     "className": "org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests",
     "children": []
    },
    {
     "id": "ID#testPersistedSettings(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
     "displayName": "testPersistedSettings(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
     "methodName": "testPersistedSettings",
     "className": "org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests",
     "children": []
    },
    {
     "id": "ID#testIndexBalance(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
     "displayName": "testIndexBalance(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
     "methodName": "testIndexBalance",
     "className": "org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195639120
 }
]

[
 "TEST_STARTED",
 "ID#testNoRebalanceOnPrimaryOverload(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:19,168][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] use the new allocator and check if it moves shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:19,170][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][1], [test][4], [test][2], [test][2], [test][3], [test][4], [test][0], [test][1], [test][3], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:19,171][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:19,171][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] rebalancing%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoRebalanceOnPrimaryOverload(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
  "startTimestamp": 1474195639154,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testReplicaBalance(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:19,195][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start 25 nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:19,220][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] restart all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:19,274][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:19,278][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test8][1], [test8][0], [test8][1], [test7][1], [test9][1], [test7][0], [test8][0], [test7][1], [test6][1], [test6][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:19,279][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:19,280][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start 1 more node, check that rebalancing will happen because we set it to always%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:19,306][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Removing half the nodes (13)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:19,309][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [removed nodes]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:19,309][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:19,309][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:19,309][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:19,318][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:19,342][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test11][0], [test4][1], [test11][1], [test3][0], [test9][1], [test3][1], [test9][0], [test9][1], [test7][0], [test7][1]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:19,359][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test4][1], [test3][0], [test4][1], [test3][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplicaBalance(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
  "startTimestamp": 1474195639171,
  "executionTime": 189
 }
]

[
 "TEST_STARTED",
 "ID#testPersistedSettings(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:19,363][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [cluster.routing.allocation.balance.threshold] from [1.0] to [2.0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:19,364][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [cluster.routing.allocation.balance.threshold] from [2.0] to [3.0]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPersistedSettings(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
  "startTimestamp": 1474195639360,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIndexBalance(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:19,372][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start 25 nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:19,382][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] restart all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:19,412][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:19,422][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:19,472][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test0][0], [test1][0], [test0][1], [test1][1], [test7][0], [test6][0], [test7][1], [test6][1], [test2][0], [test3][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:19,476][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start 1 more node, check that rebalancing will happen because we set it to always%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:19,481][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Removing half the nodes (13)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:19,490][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [removed nodes]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:19,490][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:19,496][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test5][0], [test4][0], [test8][0], [test7][0], [test6][0], [test9][0], [test8][1], [test9][1], [test5][1], [test4][1]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:19,496][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:19,501][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:19,513][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:19,549][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test0][0], [test1][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexBalance(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
  "startTimestamp": 1474195639364,
  "executionTime": 187
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests",
  "startTimestamp": 1474195639120,
  "executionTime": 434
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
   "children": [
    {
     "id": "ID#testHoltWintersMultiplicativePadPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "displayName": "testHoltWintersMultiplicativePadPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "methodName": "testHoltWintersMultiplicativePadPredictionModel",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
     "children": []
    },
    {
     "id": "ID#testLinearMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "displayName": "testLinearMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "methodName": "testLinearMovAvgModel",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
     "children": []
    },
    {
     "id": "ID#testEWMAPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "displayName": "testEWMAPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "methodName": "testEWMAPredictionModel",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
     "children": []
    },
    {
     "id": "ID#testHoltWintersAdditivePredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "displayName": "testHoltWintersAdditivePredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "methodName": "testHoltWintersAdditivePredictionModel",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
     "children": []
    },
    {
     "id": "ID#testSimpleMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "displayName": "testSimpleMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "methodName": "testSimpleMovAvgModel",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
     "children": []
    },
    {
     "id": "ID#testHoltWintersAdditiveModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "displayName": "testHoltWintersAdditiveModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "methodName": "testHoltWintersAdditiveModel",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
     "children": []
    },
    {
     "id": "ID#testSimplePredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "displayName": "testSimplePredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "methodName": "testSimplePredictionModel",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
     "children": []
    },
    {
     "id": "ID#testHoltLinearPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "displayName": "testHoltLinearPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "methodName": "testHoltLinearPredictionModel",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
     "children": []
    },
    {
     "id": "ID#testEWMAMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "displayName": "testEWMAMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "methodName": "testEWMAMovAvgModel",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
     "children": []
    },
    {
     "id": "ID#testLinearPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "displayName": "testLinearPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "methodName": "testLinearPredictionModel",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
     "children": []
    },
    {
     "id": "ID#testHoltWintersMultiplicativePadModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "displayName": "testHoltWintersMultiplicativePadModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "methodName": "testHoltWintersMultiplicativePadModel",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
     "children": []
    },
    {
     "id": "ID#testHoltLinearMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "displayName": "testHoltLinearMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "methodName": "testHoltLinearMovAvgModel",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
     "children": []
    },
    {
     "id": "ID#testNumericValidation(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "displayName": "testNumericValidation(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "methodName": "testNumericValidation",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195639563
 }
]

[
 "TEST_STARTED",
 "ID#testHoltWintersMultiplicativePadPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHoltWintersMultiplicativePadPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
  "startTimestamp": 1474195639741,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testLinearMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLinearMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
  "startTimestamp": 1474195639746,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEWMAPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEWMAPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
  "startTimestamp": 1474195639749,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHoltWintersAdditivePredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHoltWintersAdditivePredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
  "startTimestamp": 1474195639751,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
  "startTimestamp": 1474195639753,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHoltWintersAdditiveModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHoltWintersAdditiveModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
  "startTimestamp": 1474195639755,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSimplePredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimplePredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
  "startTimestamp": 1474195639757,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testHoltLinearPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHoltLinearPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
  "startTimestamp": 1474195639759,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testEWMAMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEWMAMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
  "startTimestamp": 1474195639760,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testLinearPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLinearPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
  "startTimestamp": 1474195639766,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHoltWintersMultiplicativePadModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHoltWintersMultiplicativePadModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
  "startTimestamp": 1474195639768,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHoltLinearMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHoltLinearMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
  "startTimestamp": 1474195639770,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testNumericValidation(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNumericValidation(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
  "startTimestamp": 1474195639772,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
  "startTimestamp": 1474195639563,
  "executionTime": 215
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.tribe.TribeServiceTests",
   "displayName": "org.elasticsearch.tribe.TribeServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.tribe.TribeServiceTests",
   "children": [
    {
     "id": "ID#testEnvironmentSettings(org.elasticsearch.tribe.TribeServiceTests)",
     "displayName": "testEnvironmentSettings(org.elasticsearch.tribe.TribeServiceTests)",
     "methodName": "testEnvironmentSettings",
     "className": "org.elasticsearch.tribe.TribeServiceTests",
     "children": []
    },
    {
     "id": "ID#testPassthroughSettings(org.elasticsearch.tribe.TribeServiceTests)",
     "displayName": "testPassthroughSettings(org.elasticsearch.tribe.TribeServiceTests)",
     "methodName": "testPassthroughSettings",
     "className": "org.elasticsearch.tribe.TribeServiceTests",
     "children": []
    },
    {
     "id": "ID#testMinimalSettings(org.elasticsearch.tribe.TribeServiceTests)",
     "displayName": "testMinimalSettings(org.elasticsearch.tribe.TribeServiceTests)",
     "methodName": "testMinimalSettings",
     "className": "org.elasticsearch.tribe.TribeServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195639784
 }
]

[
 "TEST_STARTED",
 "ID#testEnvironmentSettings(org.elasticsearch.tribe.TribeServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnvironmentSettings(org.elasticsearch.tribe.TribeServiceTests)",
  "startTimestamp": 1474195639824,
  "executionTime": 93
 }
]

[
 "TEST_STARTED",
 "ID#testPassthroughSettings(org.elasticsearch.tribe.TribeServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPassthroughSettings(org.elasticsearch.tribe.TribeServiceTests)",
  "startTimestamp": 1474195639917,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMinimalSettings(org.elasticsearch.tribe.TribeServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinimalSettings(org.elasticsearch.tribe.TribeServiceTests)",
  "startTimestamp": 1474195639919,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.tribe.TribeServiceTests",
  "startTimestamp": 1474195639784,
  "executionTime": 160
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests",
   "displayName": "org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests",
   "children": [
    {
     "id": "ID#testIndentationWithExplicitDocumentStart(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
     "displayName": "testIndentationWithExplicitDocumentStart(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
     "methodName": "testIndentationWithExplicitDocumentStart",
     "className": "org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests",
     "children": []
    },
    {
     "id": "ID#testSimpleYamlSettings(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
     "displayName": "testSimpleYamlSettings(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
     "methodName": "testSimpleYamlSettings",
     "className": "org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests",
     "children": []
    },
    {
     "id": "ID#testDuplicateKeysThrowsException(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
     "displayName": "testDuplicateKeysThrowsException(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
     "methodName": "testDuplicateKeysThrowsException",
     "className": "org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests",
     "children": []
    },
    {
     "id": "ID#testMissingValue(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
     "displayName": "testMissingValue(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
     "methodName": "testMissingValue",
     "className": "org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests",
     "children": []
    },
    {
     "id": "ID#testIndentation(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
     "displayName": "testIndentation(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
     "methodName": "testIndentation",
     "className": "org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195639950
 }
]

[
 "TEST_STARTED",
 "ID#testIndentationWithExplicitDocumentStart(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndentationWithExplicitDocumentStart(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
  "startTimestamp": 1474195640080,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleYamlSettings(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleYamlSettings(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
  "startTimestamp": 1474195640089,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testDuplicateKeysThrowsException(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuplicateKeysThrowsException(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
  "startTimestamp": 1474195640097,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testMissingValue(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingValue(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
  "startTimestamp": 1474195640101,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testIndentation(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndentation(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
  "startTimestamp": 1474195640113,
  "executionTime": 11
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests",
  "startTimestamp": 1474195639950,
  "executionTime": 222
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
   "displayName": "org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
   "children": [
    {
     "id": "ID#testTaskManagementOptOut(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "displayName": "testTaskManagementOptOut(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "methodName": "testTaskManagementOptOut",
     "className": "org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
     "children": []
    },
    {
     "id": "ID#testTasksToXContentGrouping(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "displayName": "testTasksToXContentGrouping(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "methodName": "testTasksToXContentGrouping",
     "className": "org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
     "children": []
    },
    {
     "id": "ID#testTaskNodeFiltering(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "displayName": "testTaskNodeFiltering(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "methodName": "testTaskNodeFiltering",
     "className": "org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
     "children": []
    },
    {
     "id": "ID#testFailedTasksCount(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "displayName": "testFailedTasksCount(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "methodName": "testFailedTasksCount",
     "className": "org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
     "children": []
    },
    {
     "id": "ID#testFindChildTasks(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "displayName": "testFindChildTasks(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "methodName": "testFindChildTasks",
     "className": "org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
     "children": []
    },
    {
     "id": "ID#testRunningTasksCount(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "displayName": "testRunningTasksCount(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "methodName": "testRunningTasksCount",
     "className": "org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
     "children": []
    },
    {
     "id": "ID#testCancellingTasksThatDontSupportCancellation(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "displayName": "testCancellingTasksThatDontSupportCancellation(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "methodName": "testCancellingTasksThatDontSupportCancellation",
     "className": "org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
     "children": []
    },
    {
     "id": "ID#testTasksDescriptions(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "displayName": "testTasksDescriptions(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "methodName": "testTasksDescriptions",
     "className": "org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
     "children": []
    },
    {
     "id": "ID#testTaskLevelActionFailures(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "displayName": "testTaskLevelActionFailures(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "methodName": "testTaskLevelActionFailures",
     "className": "org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195640189
 }
]

[
 "TEST_STARTED",
 "ID#testTaskManagementOptOut(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,274][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{d0y-kpXDQx-D4yy9G7zmZA}{local}{local[166]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,278][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[41]}, bound_addresses {local[41]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,281][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{ZcRKUUCyTHmxMDdrWrT9FQ}{local}{local[167]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,283][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[42]}, bound_addresses {local[42]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,286][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{cNKHgdewROG7T6Ig_6ebWw}{local}{local[168]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,287][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[43]}, bound_addresses {local[43]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,291][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{foy03WlvTV2JuO_zzacvgQ}{local}{local[169]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,292][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[44]}, bound_addresses {local[44]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,296][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{YR7V2CzWSXqfEbrHO7Ir5Q}{local}{local[170]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,298][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[45]}, bound_addresses {local[45]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,304][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{VFbhcvwwRY6NrUyqhaK9Xg}{local}{local[171]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,307][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[46]}, bound_addresses {local[46]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,310][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{lDVuYDsHRauGCwWgZkbtRw}{local}{local[172]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,312][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[47]}, bound_addresses {local[47]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,317][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{i2UA0TEVTZKgZnkyEcw0sQ}{local}{local[173]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,318][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[48]}, bound_addresses {local[48]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,343][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{cAGstjqeQLCOfwYm4UcywQ}{local}{local[174]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,344][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[49]}, bound_addresses {local[49]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,348][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{L1QL0H74TGuDDcp40ro_HA}{local}{local[41]}, previous {node}{d0y-kpXDQx-D4yy9G7zmZA}{local}{local[166]}}, removed {{node}{d0y-kpXDQx-D4yy9G7zmZA}{local}{local[166]},}, added {{node6}{GpJZ8sYvQBSsWBCQV2NXDA}{local}{local[47]},{node8}{pAOF90k2SuOvnjUGuLN9RQ}{local}{local[49]},{node5}{PJeVlmVxSGaW9_Ph8Qo-0A}{local}{local[46]},{node1}{DQcYxfMDS0qK2x2MWqrnQw}{local}{local[42]},{node2}{rWTo1nBbR0-KhULCXY9l5A}{local}{local[43]},{node4}{3xJgX__jTIqJz9CYUr2lMA}{local}{local[45]},{node3}{1fFVg3rjSh-o1Q31umchRQ}{local}{local[44]},{node7}{yzoznUigSeWvD6gjwN0X3w}{local}{local[48]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,349][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{L1QL0H74TGuDDcp40ro_HA}{local}{local[41]}, previous {node}{ZcRKUUCyTHmxMDdrWrT9FQ}{local}{local[167]}}, removed {{node}{ZcRKUUCyTHmxMDdrWrT9FQ}{local}{local[167]},}, added {{node7}{yzoznUigSeWvD6gjwN0X3w}{local}{local[48]},{node4}{3xJgX__jTIqJz9CYUr2lMA}{local}{local[45]},{node2}{rWTo1nBbR0-KhULCXY9l5A}{local}{local[43]},{node0}{L1QL0H74TGuDDcp40ro_HA}{local}{local[41]},{node6}{GpJZ8sYvQBSsWBCQV2NXDA}{local}{local[47]},{node8}{pAOF90k2SuOvnjUGuLN9RQ}{local}{local[49]},{node5}{PJeVlmVxSGaW9_Ph8Qo-0A}{local}{local[46]},{node3}{1fFVg3rjSh-o1Q31umchRQ}{local}{local[44]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,350][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{L1QL0H74TGuDDcp40ro_HA}{local}{local[41]}, previous {node}{cNKHgdewROG7T6Ig_6ebWw}{local}{local[168]}}, removed {{node}{cNKHgdewROG7T6Ig_6ebWw}{local}{local[168]},}, added {{node3}{1fFVg3rjSh-o1Q31umchRQ}{local}{local[44]},{node7}{yzoznUigSeWvD6gjwN0X3w}{local}{local[48]},{node8}{pAOF90k2SuOvnjUGuLN9RQ}{local}{local[49]},{node4}{3xJgX__jTIqJz9CYUr2lMA}{local}{local[45]},{node0}{L1QL0H74TGuDDcp40ro_HA}{local}{local[41]},{node1}{DQcYxfMDS0qK2x2MWqrnQw}{local}{local[42]},{node5}{PJeVlmVxSGaW9_Ph8Qo-0A}{local}{local[46]},{node6}{GpJZ8sYvQBSsWBCQV2NXDA}{local}{local[47]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,351][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{L1QL0H74TGuDDcp40ro_HA}{local}{local[41]}, previous {node}{foy03WlvTV2JuO_zzacvgQ}{local}{local[169]}}, removed {{node}{foy03WlvTV2JuO_zzacvgQ}{local}{local[169]},}, added {{node2}{rWTo1nBbR0-KhULCXY9l5A}{local}{local[43]},{node8}{pAOF90k2SuOvnjUGuLN9RQ}{local}{local[49]},{node1}{DQcYxfMDS0qK2x2MWqrnQw}{local}{local[42]},{node7}{yzoznUigSeWvD6gjwN0X3w}{local}{local[48]},{node6}{GpJZ8sYvQBSsWBCQV2NXDA}{local}{local[47]},{node0}{L1QL0H74TGuDDcp40ro_HA}{local}{local[41]},{node4}{3xJgX__jTIqJz9CYUr2lMA}{local}{local[45]},{node5}{PJeVlmVxSGaW9_Ph8Qo-0A}{local}{local[46]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,351][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{L1QL0H74TGuDDcp40ro_HA}{local}{local[41]}, previous {node}{YR7V2CzWSXqfEbrHO7Ir5Q}{local}{local[170]}}, removed {{node}{YR7V2CzWSXqfEbrHO7Ir5Q}{local}{local[170]},}, added {{node3}{1fFVg3rjSh-o1Q31umchRQ}{local}{local[44]},{node2}{rWTo1nBbR0-KhULCXY9l5A}{local}{local[43]},{node6}{GpJZ8sYvQBSsWBCQV2NXDA}{local}{local[47]},{node7}{yzoznUigSeWvD6gjwN0X3w}{local}{local[48]},{node8}{pAOF90k2SuOvnjUGuLN9RQ}{local}{local[49]},{node0}{L1QL0H74TGuDDcp40ro_HA}{local}{local[41]},{node1}{DQcYxfMDS0qK2x2MWqrnQw}{local}{local[42]},{node5}{PJeVlmVxSGaW9_Ph8Qo-0A}{local}{local[46]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,352][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{L1QL0H74TGuDDcp40ro_HA}{local}{local[41]}, previous {node}{VFbhcvwwRY6NrUyqhaK9Xg}{local}{local[171]}}, removed {{node}{VFbhcvwwRY6NrUyqhaK9Xg}{local}{local[171]},}, added {{node1}{DQcYxfMDS0qK2x2MWqrnQw}{local}{local[42]},{node3}{1fFVg3rjSh-o1Q31umchRQ}{local}{local[44]},{node2}{rWTo1nBbR0-KhULCXY9l5A}{local}{local[43]},{node4}{3xJgX__jTIqJz9CYUr2lMA}{local}{local[45]},{node8}{pAOF90k2SuOvnjUGuLN9RQ}{local}{local[49]},{node7}{yzoznUigSeWvD6gjwN0X3w}{local}{local[48]},{node6}{GpJZ8sYvQBSsWBCQV2NXDA}{local}{local[47]},{node0}{L1QL0H74TGuDDcp40ro_HA}{local}{local[41]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,352][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{L1QL0H74TGuDDcp40ro_HA}{local}{local[41]}, previous {node}{lDVuYDsHRauGCwWgZkbtRw}{local}{local[172]}}, removed {{node}{lDVuYDsHRauGCwWgZkbtRw}{local}{local[172]},}, added {{node5}{PJeVlmVxSGaW9_Ph8Qo-0A}{local}{local[46]},{node1}{DQcYxfMDS0qK2x2MWqrnQw}{local}{local[42]},{node0}{L1QL0H74TGuDDcp40ro_HA}{local}{local[41]},{node3}{1fFVg3rjSh-o1Q31umchRQ}{local}{local[44]},{node2}{rWTo1nBbR0-KhULCXY9l5A}{local}{local[43]},{node7}{yzoznUigSeWvD6gjwN0X3w}{local}{local[48]},{node8}{pAOF90k2SuOvnjUGuLN9RQ}{local}{local[49]},{node4}{3xJgX__jTIqJz9CYUr2lMA}{local}{local[45]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,353][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{L1QL0H74TGuDDcp40ro_HA}{local}{local[41]}, previous {node}{i2UA0TEVTZKgZnkyEcw0sQ}{local}{local[173]}}, removed {{node}{i2UA0TEVTZKgZnkyEcw0sQ}{local}{local[173]},}, added {{node3}{1fFVg3rjSh-o1Q31umchRQ}{local}{local[44]},{node1}{DQcYxfMDS0qK2x2MWqrnQw}{local}{local[42]},{node6}{GpJZ8sYvQBSsWBCQV2NXDA}{local}{local[47]},{node4}{3xJgX__jTIqJz9CYUr2lMA}{local}{local[45]},{node5}{PJeVlmVxSGaW9_Ph8Qo-0A}{local}{local[46]},{node2}{rWTo1nBbR0-KhULCXY9l5A}{local}{local[43]},{node0}{L1QL0H74TGuDDcp40ro_HA}{local}{local[41]},{node8}{pAOF90k2SuOvnjUGuLN9RQ}{local}{local[49]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,353][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{L1QL0H74TGuDDcp40ro_HA}{local}{local[41]}, previous {node}{cAGstjqeQLCOfwYm4UcywQ}{local}{local[174]}}, removed {{node}{cAGstjqeQLCOfwYm4UcywQ}{local}{local[174]},}, added {{node6}{GpJZ8sYvQBSsWBCQV2NXDA}{local}{local[47]},{node4}{3xJgX__jTIqJz9CYUr2lMA}{local}{local[45]},{node0}{L1QL0H74TGuDDcp40ro_HA}{local}{local[41]},{node5}{PJeVlmVxSGaW9_Ph8Qo-0A}{local}{local[46]},{node1}{DQcYxfMDS0qK2x2MWqrnQw}{local}{local[42]},{node7}{yzoznUigSeWvD6gjwN0X3w}{local}{local[48]},{node2}{rWTo1nBbR0-KhULCXY9l5A}{local}{local[43]},{node3}{1fFVg3rjSh-o1Q31umchRQ}{local}{local[44]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,373][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Awaiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,419][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 7%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,419][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,419][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,419][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,420][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,421][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,421][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 5%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,433][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 8%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,433][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 6%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,442][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Done waiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,505][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 7 finished%0D%0A[2016-09-18T20:17:20,505][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,505][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 4 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,505][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,505][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,506][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,506][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 5 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,506][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 8 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,506][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 6 finished%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTaskManagementOptOut(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
  "startTimestamp": 1474195640258,
  "executionTime": 252
 }
]

[
 "TEST_STARTED",
 "ID#testTasksToXContentGrouping(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,574][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{zwd01_9jT4SQMNj7WKJftA}{local}{local[175]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,575][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[50]}, bound_addresses {local[50]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,658][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{S3IHWzoLRCmlErNu9nNWgw}{local}{local[176]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,665][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[51]}, bound_addresses {local[51]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,701][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{k8q2vncVSh-Hp4kKXEaAEw}{local}{local[177]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,702][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[52]}, bound_addresses {local[52]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,705][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Ke9Ah-leTmqCUOwh4edMXg}{local}{local[178]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,707][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[53]}, bound_addresses {local[53]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,740][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{-82dVPhZRQSu0J5nHSj6lg}{local}{local[179]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,741][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[54]}, bound_addresses {local[54]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,742][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{2-A0TkRTRimwolTbOys7SQ}{local}{local[50]}, previous {node}{zwd01_9jT4SQMNj7WKJftA}{local}{local[175]}}, removed {{node}{zwd01_9jT4SQMNj7WKJftA}{local}{local[175]},}, added {{node4}{ilzMDizUQrKng_V5NowFpw}{local}{local[54]},{node1}{GgPVfTWuTGueKXRrfUG92Q}{local}{local[51]},{node2}{DN7DuzKkSEaui0bq4OlQkQ}{local}{local[52]},{node3}{9eol52zJRY22mmSyOK7VEA}{local}{local[53]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,743][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{2-A0TkRTRimwolTbOys7SQ}{local}{local[50]}, previous {node}{S3IHWzoLRCmlErNu9nNWgw}{local}{local[176]}}, removed {{node}{S3IHWzoLRCmlErNu9nNWgw}{local}{local[176]},}, added {{node0}{2-A0TkRTRimwolTbOys7SQ}{local}{local[50]},{node4}{ilzMDizUQrKng_V5NowFpw}{local}{local[54]},{node2}{DN7DuzKkSEaui0bq4OlQkQ}{local}{local[52]},{node3}{9eol52zJRY22mmSyOK7VEA}{local}{local[53]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,744][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{2-A0TkRTRimwolTbOys7SQ}{local}{local[50]}, previous {node}{k8q2vncVSh-Hp4kKXEaAEw}{local}{local[177]}}, removed {{node}{k8q2vncVSh-Hp4kKXEaAEw}{local}{local[177]},}, added {{node0}{2-A0TkRTRimwolTbOys7SQ}{local}{local[50]},{node4}{ilzMDizUQrKng_V5NowFpw}{local}{local[54]},{node1}{GgPVfTWuTGueKXRrfUG92Q}{local}{local[51]},{node3}{9eol52zJRY22mmSyOK7VEA}{local}{local[53]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,744][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{2-A0TkRTRimwolTbOys7SQ}{local}{local[50]}, previous {node}{Ke9Ah-leTmqCUOwh4edMXg}{local}{local[178]}}, removed {{node}{Ke9Ah-leTmqCUOwh4edMXg}{local}{local[178]},}, added {{node0}{2-A0TkRTRimwolTbOys7SQ}{local}{local[50]},{node4}{ilzMDizUQrKng_V5NowFpw}{local}{local[54]},{node1}{GgPVfTWuTGueKXRrfUG92Q}{local}{local[51]},{node2}{DN7DuzKkSEaui0bq4OlQkQ}{local}{local[52]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,745][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{2-A0TkRTRimwolTbOys7SQ}{local}{local[50]}, previous {node}{-82dVPhZRQSu0J5nHSj6lg}{local}{local[179]}}, removed {{node}{-82dVPhZRQSu0J5nHSj6lg}{local}{local[179]},}, added {{node0}{2-A0TkRTRimwolTbOys7SQ}{local}{local[50]},{node1}{GgPVfTWuTGueKXRrfUG92Q}{local}{local[51]},{node2}{DN7DuzKkSEaui0bq4OlQkQ}{local}{local[52]},{node3}{9eol52zJRY22mmSyOK7VEA}{local}{local[53]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,759][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] {\"nodes\":{\"node4\":{\"name\":\"\",\"transport_address\":\"local[54]\",\"host\":\"local\",\"ip\":\"local[54]\",\"roles\":[],\"tasks\":{\"node4:1\":{\"node\":\"node4\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474195640753,\"running_time_in_nanos\":38256,\"cancellable\":false,\"parent_task_id\":\"node0:1\"}}},\"node2\":{\"name\":\"\",\"transport_address\":\"local[52]\",\"host\":\"local\",\"ip\":\"local[52]\",\"roles\":[],\"tasks\":{\"node2:1\":{\"node\":\"node2\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474195640754,\"running_time_in_nanos\":29392,\"cancellable\":false,\"parent_task_id\":\"node0:1\"}}},\"node3\":{\"name\":\"\",\"transport_address\":\"local[53]\",\"host\":\"local\",\"ip\":\"local[53]\",\"roles\":[],\"tasks\":{\"node3:1\":{\"node\":\"node3\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474195640754,\"running_time_in_nanos\":28925,\"cancellable\":false,\"parent_task_id\":\"node0:1\"}}},\"node0\":{\"name\":\"\",\"transport_address\":\"local[50]\",\"host\":\"local\",\"ip\":\"local[50]\",\"roles\":[],\"tasks\":{\"node0:1\":{\"node\":\"node0\",\"id\":1,\"type\":\"transport\",\"action\":\"cluster:monitor/tasks/lists\",\"start_time_in_millis\":1474195640746,\"running_time_in_nanos\":6761917,\"cancellable\":false},\"node0:2\":{\"node\":\"node0\",\"id\":2,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474195640752,\"running_time_in_nanos\":130629,\"cancellable\":false,\"parent_task_id\":\"node0:1\"}}},\"node1\":{\"name\":\"\",\"transport_address\":\"local[51]\",\"host\":\"local\",\"ip\":\"local[51]\",\"roles\":[],\"tasks\":{\"node1:1\":{\"node\":\"node1\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474195640753,\"running_time_in_nanos\":30791,\"cancellable\":false,\"parent_task_id\":\"node0:1\"}}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,760][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] {\"tasks\":{\"node0:1\":{\"node\":\"node0\",\"id\":1,\"type\":\"transport\",\"action\":\"cluster:monitor/tasks/lists\",\"start_time_in_millis\":1474195640746,\"running_time_in_nanos\":6761917,\"cancellable\":false,\"children\":[{\"node\":\"node3\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474195640754,\"running_time_in_nanos\":28925,\"cancellable\":false,\"parent_task_id\":\"node0:1\"},{\"node\":\"node2\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474195640754,\"running_time_in_nanos\":29392,\"cancellable\":false,\"parent_task_id\":\"node0:1\"},{\"node\":\"node1\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474195640753,\"running_time_in_nanos\":30791,\"cancellable\":false,\"parent_task_id\":\"node0:1\"},{\"node\":\"node0\",\"id\":2,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474195640752,\"running_time_in_nanos\":130629,\"cancellable\":false,\"parent_task_id\":\"node0:1\"},{\"node\":\"node4\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1474195640753,\"running_time_in_nanos\":38256,\"cancellable\":false,\"parent_task_id\":\"node0:1\"}]}}}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTasksToXContentGrouping(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
  "startTimestamp": 1474195640510,
  "executionTime": 253
 }
]

[
 "TEST_STARTED",
 "ID#testTaskNodeFiltering(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,808][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{nJF07PhLQ1qJG84RHBtzSQ}{local}{local[180]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,809][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[55]}, bound_addresses {local[55]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,833][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{n1-NlonQRXCEydqXUiRETw}{local}{local[181]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,835][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[56]}, bound_addresses {local[56]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,845][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Sm6MItcJSAW8yTb6PXbgJg}{local}{local[182]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,849][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[57]}, bound_addresses {local[57]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,860][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Zku92jiIS7W4Pw_mvZGNLw}{local}{local[183]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,862][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[58]}, bound_addresses {local[58]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,900][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{T25Lxa7dRLGXiO2S4xUsMQ}{local}{local[184]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,901][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[59]}, bound_addresses {local[59]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,908][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{ESaGlaGMQyqo-fAUGwjg0A}{local}{local[185]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,909][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[60]}, bound_addresses {local[60]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,913][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{1iCXxJUJTNKJQaWPh2SDSw}{local}{local[186]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,914][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[61]}, bound_addresses {local[61]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,919][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{dfjtxGAgRMWTOQPFFqsqOQ}{local}{local[187]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,921][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[62]}, bound_addresses {local[62]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,924][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{DEe4DSWzTbilxdC9lCed6A}{local}{local[188]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,925][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[63]}, bound_addresses {local[63]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,928][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{FMzvAtMrSn61J5Z7ycCYcg}{local}{local[55]}, previous {node}{nJF07PhLQ1qJG84RHBtzSQ}{local}{local[180]}}, removed {{node}{nJF07PhLQ1qJG84RHBtzSQ}{local}{local[180]},}, added {{node7}{fJk82Jg3RoOHWOgj_Y9CmQ}{local}{local[62]},{node8}{BdFWe2U1SPa-hu7HV6TeXQ}{local}{local[63]},{node5}{S0x4Cv_sTMW7pVmn5vRnPQ}{local}{local[60]},{node2}{f6HTTYEcSuWQqu_Q9aZtbw}{local}{local[57]},{node3}{xxsXNaPoQN-M80z1sK6_Kw}{local}{local[58]},{node4}{9h-qOME5T32DEQiCscTzBA}{local}{local[59]},{node6}{6jm3TV3pReqzuAy6cHInng}{local}{local[61]},{node1}{kihonGEhS4q_ZG8l4AOWfg}{local}{local[56]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,929][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{FMzvAtMrSn61J5Z7ycCYcg}{local}{local[55]}, previous {node}{n1-NlonQRXCEydqXUiRETw}{local}{local[181]}}, removed {{node}{n1-NlonQRXCEydqXUiRETw}{local}{local[181]},}, added {{node6}{6jm3TV3pReqzuAy6cHInng}{local}{local[61]},{node5}{S0x4Cv_sTMW7pVmn5vRnPQ}{local}{local[60]},{node7}{fJk82Jg3RoOHWOgj_Y9CmQ}{local}{local[62]},{node4}{9h-qOME5T32DEQiCscTzBA}{local}{local[59]},{node2}{f6HTTYEcSuWQqu_Q9aZtbw}{local}{local[57]},{node0}{FMzvAtMrSn61J5Z7ycCYcg}{local}{local[55]},{node3}{xxsXNaPoQN-M80z1sK6_Kw}{local}{local[58]},{node8}{BdFWe2U1SPa-hu7HV6TeXQ}{local}{local[63]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,930][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{FMzvAtMrSn61J5Z7ycCYcg}{local}{local[55]}, previous {node}{Sm6MItcJSAW8yTb6PXbgJg}{local}{local[182]}}, removed {{node}{Sm6MItcJSAW8yTb6PXbgJg}{local}{local[182]},}, added {{node8}{BdFWe2U1SPa-hu7HV6TeXQ}{local}{local[63]},{node6}{6jm3TV3pReqzuAy6cHInng}{local}{local[61]},{node4}{9h-qOME5T32DEQiCscTzBA}{local}{local[59]},{node0}{FMzvAtMrSn61J5Z7ycCYcg}{local}{local[55]},{node5}{S0x4Cv_sTMW7pVmn5vRnPQ}{local}{local[60]},{node1}{kihonGEhS4q_ZG8l4AOWfg}{local}{local[56]},{node7}{fJk82Jg3RoOHWOgj_Y9CmQ}{local}{local[62]},{node3}{xxsXNaPoQN-M80z1sK6_Kw}{local}{local[58]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,934][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{FMzvAtMrSn61J5Z7ycCYcg}{local}{local[55]}, previous {node}{Zku92jiIS7W4Pw_mvZGNLw}{local}{local[183]}}, removed {{node}{Zku92jiIS7W4Pw_mvZGNLw}{local}{local[183]},}, added {{node1}{kihonGEhS4q_ZG8l4AOWfg}{local}{local[56]},{node6}{6jm3TV3pReqzuAy6cHInng}{local}{local[61]},{node2}{f6HTTYEcSuWQqu_Q9aZtbw}{local}{local[57]},{node4}{9h-qOME5T32DEQiCscTzBA}{local}{local[59]},{node0}{FMzvAtMrSn61J5Z7ycCYcg}{local}{local[55]},{node7}{fJk82Jg3RoOHWOgj_Y9CmQ}{local}{local[62]},{node8}{BdFWe2U1SPa-hu7HV6TeXQ}{local}{local[63]},{node5}{S0x4Cv_sTMW7pVmn5vRnPQ}{local}{local[60]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,941][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{FMzvAtMrSn61J5Z7ycCYcg}{local}{local[55]}, previous {node}{T25Lxa7dRLGXiO2S4xUsMQ}{local}{local[184]}}, removed {{node}{T25Lxa7dRLGXiO2S4xUsMQ}{local}{local[184]},}, added {{node6}{6jm3TV3pReqzuAy6cHInng}{local}{local[61]},{node0}{FMzvAtMrSn61J5Z7ycCYcg}{local}{local[55]},{node5}{S0x4Cv_sTMW7pVmn5vRnPQ}{local}{local[60]},{node7}{fJk82Jg3RoOHWOgj_Y9CmQ}{local}{local[62]},{node2}{f6HTTYEcSuWQqu_Q9aZtbw}{local}{local[57]},{node1}{kihonGEhS4q_ZG8l4AOWfg}{local}{local[56]},{node8}{BdFWe2U1SPa-hu7HV6TeXQ}{local}{local[63]},{node3}{xxsXNaPoQN-M80z1sK6_Kw}{local}{local[58]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,942][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{FMzvAtMrSn61J5Z7ycCYcg}{local}{local[55]}, previous {node}{ESaGlaGMQyqo-fAUGwjg0A}{local}{local[185]}}, removed {{node}{ESaGlaGMQyqo-fAUGwjg0A}{local}{local[185]},}, added {{node3}{xxsXNaPoQN-M80z1sK6_Kw}{local}{local[58]},{node2}{f6HTTYEcSuWQqu_Q9aZtbw}{local}{local[57]},{node6}{6jm3TV3pReqzuAy6cHInng}{local}{local[61]},{node4}{9h-qOME5T32DEQiCscTzBA}{local}{local[59]},{node8}{BdFWe2U1SPa-hu7HV6TeXQ}{local}{local[63]},{node1}{kihonGEhS4q_ZG8l4AOWfg}{local}{local[56]},{node0}{FMzvAtMrSn61J5Z7ycCYcg}{local}{local[55]},{node7}{fJk82Jg3RoOHWOgj_Y9CmQ}{local}{local[62]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,943][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{FMzvAtMrSn61J5Z7ycCYcg}{local}{local[55]}, previous {node}{1iCXxJUJTNKJQaWPh2SDSw}{local}{local[186]}}, removed {{node}{1iCXxJUJTNKJQaWPh2SDSw}{local}{local[186]},}, added {{node2}{f6HTTYEcSuWQqu_Q9aZtbw}{local}{local[57]},{node4}{9h-qOME5T32DEQiCscTzBA}{local}{local[59]},{node3}{xxsXNaPoQN-M80z1sK6_Kw}{local}{local[58]},{node0}{FMzvAtMrSn61J5Z7ycCYcg}{local}{local[55]},{node1}{kihonGEhS4q_ZG8l4AOWfg}{local}{local[56]},{node7}{fJk82Jg3RoOHWOgj_Y9CmQ}{local}{local[62]},{node5}{S0x4Cv_sTMW7pVmn5vRnPQ}{local}{local[60]},{node8}{BdFWe2U1SPa-hu7HV6TeXQ}{local}{local[63]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,945][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{FMzvAtMrSn61J5Z7ycCYcg}{local}{local[55]}, previous {node}{dfjtxGAgRMWTOQPFFqsqOQ}{local}{local[187]}}, removed {{node}{dfjtxGAgRMWTOQPFFqsqOQ}{local}{local[187]},}, added {{node3}{xxsXNaPoQN-M80z1sK6_Kw}{local}{local[58]},{node2}{f6HTTYEcSuWQqu_Q9aZtbw}{local}{local[57]},{node1}{kihonGEhS4q_ZG8l4AOWfg}{local}{local[56]},{node0}{FMzvAtMrSn61J5Z7ycCYcg}{local}{local[55]},{node8}{BdFWe2U1SPa-hu7HV6TeXQ}{local}{local[63]},{node4}{9h-qOME5T32DEQiCscTzBA}{local}{local[59]},{node6}{6jm3TV3pReqzuAy6cHInng}{local}{local[61]},{node5}{S0x4Cv_sTMW7pVmn5vRnPQ}{local}{local[60]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,947][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{FMzvAtMrSn61J5Z7ycCYcg}{local}{local[55]}, previous {node}{DEe4DSWzTbilxdC9lCed6A}{local}{local[188]}}, removed {{node}{DEe4DSWzTbilxdC9lCed6A}{local}{local[188]},}, added {{node3}{xxsXNaPoQN-M80z1sK6_Kw}{local}{local[58]},{node2}{f6HTTYEcSuWQqu_Q9aZtbw}{local}{local[57]},{node6}{6jm3TV3pReqzuAy6cHInng}{local}{local[61]},{node0}{FMzvAtMrSn61J5Z7ycCYcg}{local}{local[55]},{node7}{fJk82Jg3RoOHWOgj_Y9CmQ}{local}{local[62]},{node4}{9h-qOME5T32DEQiCscTzBA}{local}{local[59]},{node5}{S0x4Cv_sTMW7pVmn5vRnPQ}{local}{local[60]},{node1}{kihonGEhS4q_ZG8l4AOWfg}{local}{local[56]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,953][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Awaiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,957][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 7%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,958][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 8%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,959][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 5%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,959][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,960][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,961][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,961][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 6%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,962][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,962][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,962][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Done waiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,963][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Filtering out nodes [node5, node2, node3, node8, node6, node7, node0, node1] size: 8%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,973][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 8 finished%0D%0A[2016-09-18T20:17:20,973][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 7 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,973][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,973][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,973][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 4 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,973][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 5 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,973][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 6 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,973][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:20,973][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1 finished%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTaskNodeFiltering(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
  "startTimestamp": 1474195640763,
  "executionTime": 215
 }
]

[
 "TEST_STARTED",
 "ID#testFailedTasksCount(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,003][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{-7Pb4YIHTWKuxtAqEUPKWQ}{local}{local[189]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,005][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[64]}, bound_addresses {local[64]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,125][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{bzk7oQyPSyC84aCJ2cUv0A}{local}{local[190]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,126][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[65]}, bound_addresses {local[65]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,139][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{iUZGOLiSRmq7rIkRr0X4Eg}{local}{local[191]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,140][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[66]}, bound_addresses {local[66]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,145][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{G3PQtJVMTEO4fyXQh4DkSQ}{local}{local[192]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,146][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[67]}, bound_addresses {local[67]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,161][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Uq9-reboSzmT2wnOlqmtSA}{local}{local[193]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,163][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[68]}, bound_addresses {local[68]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,209][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{IuYO2OqtTMCAimVdNtlWWQ}{local}{local[194]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,210][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[69]}, bound_addresses {local[69]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,238][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{6joDfNbeSNyAWits-4wBzg}{local}{local[195]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,239][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[70]}, bound_addresses {local[70]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,240][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{I1nKCYBfR46XDLPAz8Kmlg}{local}{local[64]}, previous {node}{-7Pb4YIHTWKuxtAqEUPKWQ}{local}{local[189]}}, removed {{node}{-7Pb4YIHTWKuxtAqEUPKWQ}{local}{local[189]},}, added {{node3}{rfWlZcOEQquAsxaENQS7rQ}{local}{local[67]},{node6}{e2uoMIMESFCBUP7h9bY-wA}{local}{local[70]},{node4}{1OkrQn6tSbyAMkumia_SNw}{local}{local[68]},{node1}{wDniAXmZSAGm_a76ePCdUA}{local}{local[65]},{node2}{DAUXv4FSS9qW5JsnVOFGhA}{local}{local[66]},{node5}{mN2XB-4-SXO3TwhZvQDWDQ}{local}{local[69]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,241][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{I1nKCYBfR46XDLPAz8Kmlg}{local}{local[64]}, previous {node}{bzk7oQyPSyC84aCJ2cUv0A}{local}{local[190]}}, removed {{node}{bzk7oQyPSyC84aCJ2cUv0A}{local}{local[190]},}, added {{node3}{rfWlZcOEQquAsxaENQS7rQ}{local}{local[67]},{node5}{mN2XB-4-SXO3TwhZvQDWDQ}{local}{local[69]},{node0}{I1nKCYBfR46XDLPAz8Kmlg}{local}{local[64]},{node2}{DAUXv4FSS9qW5JsnVOFGhA}{local}{local[66]},{node6}{e2uoMIMESFCBUP7h9bY-wA}{local}{local[70]},{node4}{1OkrQn6tSbyAMkumia_SNw}{local}{local[68]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,242][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{I1nKCYBfR46XDLPAz8Kmlg}{local}{local[64]}, previous {node}{iUZGOLiSRmq7rIkRr0X4Eg}{local}{local[191]}}, removed {{node}{iUZGOLiSRmq7rIkRr0X4Eg}{local}{local[191]},}, added {{node1}{wDniAXmZSAGm_a76ePCdUA}{local}{local[65]},{node0}{I1nKCYBfR46XDLPAz8Kmlg}{local}{local[64]},{node5}{mN2XB-4-SXO3TwhZvQDWDQ}{local}{local[69]},{node6}{e2uoMIMESFCBUP7h9bY-wA}{local}{local[70]},{node3}{rfWlZcOEQquAsxaENQS7rQ}{local}{local[67]},{node4}{1OkrQn6tSbyAMkumia_SNw}{local}{local[68]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,245][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{I1nKCYBfR46XDLPAz8Kmlg}{local}{local[64]}, previous {node}{G3PQtJVMTEO4fyXQh4DkSQ}{local}{local[192]}}, removed {{node}{G3PQtJVMTEO4fyXQh4DkSQ}{local}{local[192]},}, added {{node1}{wDniAXmZSAGm_a76ePCdUA}{local}{local[65]},{node5}{mN2XB-4-SXO3TwhZvQDWDQ}{local}{local[69]},{node2}{DAUXv4FSS9qW5JsnVOFGhA}{local}{local[66]},{node0}{I1nKCYBfR46XDLPAz8Kmlg}{local}{local[64]},{node4}{1OkrQn6tSbyAMkumia_SNw}{local}{local[68]},{node6}{e2uoMIMESFCBUP7h9bY-wA}{local}{local[70]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,246][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{I1nKCYBfR46XDLPAz8Kmlg}{local}{local[64]}, previous {node}{Uq9-reboSzmT2wnOlqmtSA}{local}{local[193]}}, removed {{node}{Uq9-reboSzmT2wnOlqmtSA}{local}{local[193]},}, added {{node0}{I1nKCYBfR46XDLPAz8Kmlg}{local}{local[64]},{node3}{rfWlZcOEQquAsxaENQS7rQ}{local}{local[67]},{node6}{e2uoMIMESFCBUP7h9bY-wA}{local}{local[70]},{node2}{DAUXv4FSS9qW5JsnVOFGhA}{local}{local[66]},{node1}{wDniAXmZSAGm_a76ePCdUA}{local}{local[65]},{node5}{mN2XB-4-SXO3TwhZvQDWDQ}{local}{local[69]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,247][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{I1nKCYBfR46XDLPAz8Kmlg}{local}{local[64]}, previous {node}{IuYO2OqtTMCAimVdNtlWWQ}{local}{local[194]}}, removed {{node}{IuYO2OqtTMCAimVdNtlWWQ}{local}{local[194]},}, added {{node3}{rfWlZcOEQquAsxaENQS7rQ}{local}{local[67]},{node4}{1OkrQn6tSbyAMkumia_SNw}{local}{local[68]},{node0}{I1nKCYBfR46XDLPAz8Kmlg}{local}{local[64]},{node6}{e2uoMIMESFCBUP7h9bY-wA}{local}{local[70]},{node2}{DAUXv4FSS9qW5JsnVOFGhA}{local}{local[66]},{node1}{wDniAXmZSAGm_a76ePCdUA}{local}{local[65]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,248][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{I1nKCYBfR46XDLPAz8Kmlg}{local}{local[64]}, previous {node}{6joDfNbeSNyAWits-4wBzg}{local}{local[195]}}, removed {{node}{6joDfNbeSNyAWits-4wBzg}{local}{local[195]},}, added {{node2}{DAUXv4FSS9qW5JsnVOFGhA}{local}{local[66]},{node5}{mN2XB-4-SXO3TwhZvQDWDQ}{local}{local[69]},{node3}{rfWlZcOEQquAsxaENQS7rQ}{local}{local[67]},{node1}{wDniAXmZSAGm_a76ePCdUA}{local}{local[65]},{node4}{1OkrQn6tSbyAMkumia_SNw}{local}{local[68]},{node0}{I1nKCYBfR46XDLPAz8Kmlg}{local}{local[64]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,267][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,269][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 6%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,270][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,271][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,273][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,273][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 5%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,273][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailedTasksCount(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
  "startTimestamp": 1474195640978,
  "executionTime": 302
 }
]

[
 "TEST_STARTED",
 "ID#testFindChildTasks(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,307][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{npyhi45UTiyiEzGIfxSwzw}{local}{local[196]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,308][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[71]}, bound_addresses {local[71]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,326][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{NfgoaueDTuWYnKOKBVnOmQ}{local}{local[197]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,334][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[72]}, bound_addresses {local[72]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,349][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{OA8ws_3fTJ-H3L6OQiD7sg}{local}{local[198]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,351][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[73]}, bound_addresses {local[73]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,354][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{kmdoR8pZTTCG4EG8Sln7jg}{local}{local[199]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,355][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[74]}, bound_addresses {local[74]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,359][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{gHFNNiPEQNKFvtWUs8pszg}{local}{local[200]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,360][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[75]}, bound_addresses {local[75]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,363][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{vUo-PCP0Qyar0jzRZss2Xw}{local}{local[201]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,364][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[76]}, bound_addresses {local[76]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,366][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{SELBnhtTR2-3nKLOLKyjuA}{local}{local[71]}, previous {node}{npyhi45UTiyiEzGIfxSwzw}{local}{local[196]}}, removed {{node}{npyhi45UTiyiEzGIfxSwzw}{local}{local[196]},}, added {{node4}{5zEwFlP0QyivMgVivg8i2Q}{local}{local[75]},{node1}{dZFY-j7TRpCJ1t-HVXKdYA}{local}{local[72]},{node2}{wouvtuPASdquD2O7aXqTQg}{local}{local[73]},{node3}{n1bGlhfoQCiluvmRnFI-DA}{local}{local[74]},{node5}{wszSBRxGRFWU7hS_MtfSaA}{local}{local[76]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,366][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{SELBnhtTR2-3nKLOLKyjuA}{local}{local[71]}, previous {node}{NfgoaueDTuWYnKOKBVnOmQ}{local}{local[197]}}, removed {{node}{NfgoaueDTuWYnKOKBVnOmQ}{local}{local[197]},}, added {{node0}{SELBnhtTR2-3nKLOLKyjuA}{local}{local[71]},{node4}{5zEwFlP0QyivMgVivg8i2Q}{local}{local[75]},{node2}{wouvtuPASdquD2O7aXqTQg}{local}{local[73]},{node3}{n1bGlhfoQCiluvmRnFI-DA}{local}{local[74]},{node5}{wszSBRxGRFWU7hS_MtfSaA}{local}{local[76]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,368][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{SELBnhtTR2-3nKLOLKyjuA}{local}{local[71]}, previous {node}{OA8ws_3fTJ-H3L6OQiD7sg}{local}{local[198]}}, removed {{node}{OA8ws_3fTJ-H3L6OQiD7sg}{local}{local[198]},}, added {{node0}{SELBnhtTR2-3nKLOLKyjuA}{local}{local[71]},{node4}{5zEwFlP0QyivMgVivg8i2Q}{local}{local[75]},{node1}{dZFY-j7TRpCJ1t-HVXKdYA}{local}{local[72]},{node3}{n1bGlhfoQCiluvmRnFI-DA}{local}{local[74]},{node5}{wszSBRxGRFWU7hS_MtfSaA}{local}{local[76]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,368][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{SELBnhtTR2-3nKLOLKyjuA}{local}{local[71]}, previous {node}{kmdoR8pZTTCG4EG8Sln7jg}{local}{local[199]}}, removed {{node}{kmdoR8pZTTCG4EG8Sln7jg}{local}{local[199]},}, added {{node0}{SELBnhtTR2-3nKLOLKyjuA}{local}{local[71]},{node4}{5zEwFlP0QyivMgVivg8i2Q}{local}{local[75]},{node1}{dZFY-j7TRpCJ1t-HVXKdYA}{local}{local[72]},{node2}{wouvtuPASdquD2O7aXqTQg}{local}{local[73]},{node5}{wszSBRxGRFWU7hS_MtfSaA}{local}{local[76]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,368][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{SELBnhtTR2-3nKLOLKyjuA}{local}{local[71]}, previous {node}{gHFNNiPEQNKFvtWUs8pszg}{local}{local[200]}}, removed {{node}{gHFNNiPEQNKFvtWUs8pszg}{local}{local[200]},}, added {{node0}{SELBnhtTR2-3nKLOLKyjuA}{local}{local[71]},{node1}{dZFY-j7TRpCJ1t-HVXKdYA}{local}{local[72]},{node2}{wouvtuPASdquD2O7aXqTQg}{local}{local[73]},{node3}{n1bGlhfoQCiluvmRnFI-DA}{local}{local[74]},{node5}{wszSBRxGRFWU7hS_MtfSaA}{local}{local[76]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,369][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{SELBnhtTR2-3nKLOLKyjuA}{local}{local[71]}, previous {node}{vUo-PCP0Qyar0jzRZss2Xw}{local}{local[201]}}, removed {{node}{vUo-PCP0Qyar0jzRZss2Xw}{local}{local[201]},}, added {{node0}{SELBnhtTR2-3nKLOLKyjuA}{local}{local[71]},{node4}{5zEwFlP0QyivMgVivg8i2Q}{local}{local[75]},{node1}{dZFY-j7TRpCJ1t-HVXKdYA}{local}{local[72]},{node2}{wouvtuPASdquD2O7aXqTQg}{local}{local[73]},{node3}{n1bGlhfoQCiluvmRnFI-DA}{local}{local[74]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,373][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Awaiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,374][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,375][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,376][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,377][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,378][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,378][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 5%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,378][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Done waiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,454][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0 finished%0D%0A[2016-09-18T20:17:21,454][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 4 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,455][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,455][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,455][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,455][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 5 finished%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFindChildTasks(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
  "startTimestamp": 1474195641280,
  "executionTime": 181
 }
]

[
 "TEST_STARTED",
 "ID#testRunningTasksCount(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,501][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{WZNk26QZR_us_LVqWGe5uQ}{local}{local[202]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,502][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[77]}, bound_addresses {local[77]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,512][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{YAyP3saYSAChOtkOkZW2sw}{local}{local[203]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,513][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[78]}, bound_addresses {local[78]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,543][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{hwkLluX9TUCpSTAlnCTjVQ}{local}{local[204]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,544][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[79]}, bound_addresses {local[79]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,554][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{qH_6gCE-Td6SS0OoblDAkg}{local}{local[205]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,556][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[80]}, bound_addresses {local[80]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,569][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{8QObA774QOSW-gCUAx4j5A}{local}{local[206]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,570][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[81]}, bound_addresses {local[81]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,572][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{bfP-6QynS-eQCuykhb-dOw}{local}{local[77]}, previous {node}{WZNk26QZR_us_LVqWGe5uQ}{local}{local[202]}}, removed {{node}{WZNk26QZR_us_LVqWGe5uQ}{local}{local[202]},}, added {{node4}{8kIfssUvS_en-0rV4QbgTA}{local}{local[81]},{node1}{odjDmezjT9OdbazA4C9paQ}{local}{local[78]},{node2}{uel-cT4QRHKnVEbXCiaHLg}{local}{local[79]},{node3}{-rQTGNHdS5Sp_Jcvi2-Akg}{local}{local[80]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,572][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{bfP-6QynS-eQCuykhb-dOw}{local}{local[77]}, previous {node}{YAyP3saYSAChOtkOkZW2sw}{local}{local[203]}}, removed {{node}{YAyP3saYSAChOtkOkZW2sw}{local}{local[203]},}, added {{node0}{bfP-6QynS-eQCuykhb-dOw}{local}{local[77]},{node4}{8kIfssUvS_en-0rV4QbgTA}{local}{local[81]},{node2}{uel-cT4QRHKnVEbXCiaHLg}{local}{local[79]},{node3}{-rQTGNHdS5Sp_Jcvi2-Akg}{local}{local[80]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,572][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{bfP-6QynS-eQCuykhb-dOw}{local}{local[77]}, previous {node}{hwkLluX9TUCpSTAlnCTjVQ}{local}{local[204]}}, removed {{node}{hwkLluX9TUCpSTAlnCTjVQ}{local}{local[204]},}, added {{node0}{bfP-6QynS-eQCuykhb-dOw}{local}{local[77]},{node4}{8kIfssUvS_en-0rV4QbgTA}{local}{local[81]},{node1}{odjDmezjT9OdbazA4C9paQ}{local}{local[78]},{node3}{-rQTGNHdS5Sp_Jcvi2-Akg}{local}{local[80]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,573][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{bfP-6QynS-eQCuykhb-dOw}{local}{local[77]}, previous {node}{qH_6gCE-Td6SS0OoblDAkg}{local}{local[205]}}, removed {{node}{qH_6gCE-Td6SS0OoblDAkg}{local}{local[205]},}, added {{node0}{bfP-6QynS-eQCuykhb-dOw}{local}{local[77]},{node4}{8kIfssUvS_en-0rV4QbgTA}{local}{local[81]},{node1}{odjDmezjT9OdbazA4C9paQ}{local}{local[78]},{node2}{uel-cT4QRHKnVEbXCiaHLg}{local}{local[79]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,573][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{bfP-6QynS-eQCuykhb-dOw}{local}{local[77]}, previous {node}{8QObA774QOSW-gCUAx4j5A}{local}{local[206]}}, removed {{node}{8QObA774QOSW-gCUAx4j5A}{local}{local[206]},}, added {{node0}{bfP-6QynS-eQCuykhb-dOw}{local}{local[77]},{node1}{odjDmezjT9OdbazA4C9paQ}{local}{local[78]},{node2}{uel-cT4QRHKnVEbXCiaHLg}{local}{local[79]},{node3}{-rQTGNHdS5Sp_Jcvi2-Akg}{local}{local[80]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,577][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Awaiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,581][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,581][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,581][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,581][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,582][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,582][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Done waiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,586][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Listing currently running tasks using node [4]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,595][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Checking currently running tasks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,600][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,600][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 4 finished%0D%0A[2016-09-18T20:17:21,600][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,600][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,600][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3 finished%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRunningTasksCount(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
  "startTimestamp": 1474195641462,
  "executionTime": 143
 }
]

[
 "TEST_STARTED",
 "ID#testCancellingTasksThatDontSupportCancellation(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,629][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Rci5s0aBTI2Ku4IsctcNgw}{local}{local[207]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,630][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[82]}, bound_addresses {local[82]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,633][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{XatAs9EPRW-AQfo2Tk-MlA}{local}{local[208]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,634][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[83]}, bound_addresses {local[83]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,639][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{-OnMeRXxS6iSXpOsmF1fVQ}{local}{local[209]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,640][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[84]}, bound_addresses {local[84]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,643][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{r-C50Al_SJmOAzn6rVo8zg}{local}{local[210]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,644][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[85]}, bound_addresses {local[85]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,653][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{cz-RlkrJRO-MUX1cF3Qgig}{local}{local[211]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,654][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[86]}, bound_addresses {local[86]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,662][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{ooUa2wL0QhO4w23ghsbkcg}{local}{local[212]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,664][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[87]}, bound_addresses {local[87]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,667][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{_rdMzqQGQMe7dZNOkrvdWQ}{local}{local[213]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,668][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[88]}, bound_addresses {local[88]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,671][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{RFvU4SuZSGqnLIYfMubHwA}{local}{local[214]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,673][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[89]}, bound_addresses {local[89]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,675][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{FPrfvmhqT3Gr29EG0jQa2w}{local}{local[215]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,676][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[90]}, bound_addresses {local[90]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,677][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{36WJouXTRrioJTffXWevrA}{local}{local[82]}, previous {node}{Rci5s0aBTI2Ku4IsctcNgw}{local}{local[207]}}, removed {{node}{Rci5s0aBTI2Ku4IsctcNgw}{local}{local[207]},}, added {{node7}{0cPGq5d2SWGyES435CH2CQ}{local}{local[89]},{node8}{ZEuti5x-Qei312HAwvj-9Q}{local}{local[90]},{node4}{Y7GhvCgsQie7I48KEGshLg}{local}{local[86]},{node2}{G0E_S8BjS4SJz24O4iHEZw}{local}{local[84]},{node5}{3vtq-Ys9QVaWOzldQ-DnqQ}{local}{local[87]},{node6}{7iT21oiWR4KFLJLZOILYnw}{local}{local[88]},{node3}{ZUu01v8XTQeCWmkgYutQJQ}{local}{local[85]},{node1}{FJkQwTe2RbaBLQCliS48Xw}{local}{local[83]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,677][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{36WJouXTRrioJTffXWevrA}{local}{local[82]}, previous {node}{XatAs9EPRW-AQfo2Tk-MlA}{local}{local[208]}}, removed {{node}{XatAs9EPRW-AQfo2Tk-MlA}{local}{local[208]},}, added {{node7}{0cPGq5d2SWGyES435CH2CQ}{local}{local[89]},{node3}{ZUu01v8XTQeCWmkgYutQJQ}{local}{local[85]},{node2}{G0E_S8BjS4SJz24O4iHEZw}{local}{local[84]},{node4}{Y7GhvCgsQie7I48KEGshLg}{local}{local[86]},{node8}{ZEuti5x-Qei312HAwvj-9Q}{local}{local[90]},{node6}{7iT21oiWR4KFLJLZOILYnw}{local}{local[88]},{node5}{3vtq-Ys9QVaWOzldQ-DnqQ}{local}{local[87]},{node0}{36WJouXTRrioJTffXWevrA}{local}{local[82]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,678][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{36WJouXTRrioJTffXWevrA}{local}{local[82]}, previous {node}{-OnMeRXxS6iSXpOsmF1fVQ}{local}{local[209]}}, removed {{node}{-OnMeRXxS6iSXpOsmF1fVQ}{local}{local[209]},}, added {{node0}{36WJouXTRrioJTffXWevrA}{local}{local[82]},{node7}{0cPGq5d2SWGyES435CH2CQ}{local}{local[89]},{node1}{FJkQwTe2RbaBLQCliS48Xw}{local}{local[83]},{node6}{7iT21oiWR4KFLJLZOILYnw}{local}{local[88]},{node8}{ZEuti5x-Qei312HAwvj-9Q}{local}{local[90]},{node3}{ZUu01v8XTQeCWmkgYutQJQ}{local}{local[85]},{node5}{3vtq-Ys9QVaWOzldQ-DnqQ}{local}{local[87]},{node4}{Y7GhvCgsQie7I48KEGshLg}{local}{local[86]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,678][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{36WJouXTRrioJTffXWevrA}{local}{local[82]}, previous {node}{r-C50Al_SJmOAzn6rVo8zg}{local}{local[210]}}, removed {{node}{r-C50Al_SJmOAzn6rVo8zg}{local}{local[210]},}, added {{node5}{3vtq-Ys9QVaWOzldQ-DnqQ}{local}{local[87]},{node2}{G0E_S8BjS4SJz24O4iHEZw}{local}{local[84]},{node6}{7iT21oiWR4KFLJLZOILYnw}{local}{local[88]},{node7}{0cPGq5d2SWGyES435CH2CQ}{local}{local[89]},{node1}{FJkQwTe2RbaBLQCliS48Xw}{local}{local[83]},{node0}{36WJouXTRrioJTffXWevrA}{local}{local[82]},{node8}{ZEuti5x-Qei312HAwvj-9Q}{local}{local[90]},{node4}{Y7GhvCgsQie7I48KEGshLg}{local}{local[86]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,678][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{36WJouXTRrioJTffXWevrA}{local}{local[82]}, previous {node}{cz-RlkrJRO-MUX1cF3Qgig}{local}{local[211]}}, removed {{node}{cz-RlkrJRO-MUX1cF3Qgig}{local}{local[211]},}, added {{node5}{3vtq-Ys9QVaWOzldQ-DnqQ}{local}{local[87]},{node3}{ZUu01v8XTQeCWmkgYutQJQ}{local}{local[85]},{node8}{ZEuti5x-Qei312HAwvj-9Q}{local}{local[90]},{node2}{G0E_S8BjS4SJz24O4iHEZw}{local}{local[84]},{node0}{36WJouXTRrioJTffXWevrA}{local}{local[82]},{node7}{0cPGq5d2SWGyES435CH2CQ}{local}{local[89]},{node1}{FJkQwTe2RbaBLQCliS48Xw}{local}{local[83]},{node6}{7iT21oiWR4KFLJLZOILYnw}{local}{local[88]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,679][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{36WJouXTRrioJTffXWevrA}{local}{local[82]}, previous {node}{ooUa2wL0QhO4w23ghsbkcg}{local}{local[212]}}, removed {{node}{ooUa2wL0QhO4w23ghsbkcg}{local}{local[212]},}, added {{node7}{0cPGq5d2SWGyES435CH2CQ}{local}{local[89]},{node0}{36WJouXTRrioJTffXWevrA}{local}{local[82]},{node3}{ZUu01v8XTQeCWmkgYutQJQ}{local}{local[85]},{node1}{FJkQwTe2RbaBLQCliS48Xw}{local}{local[83]},{node2}{G0E_S8BjS4SJz24O4iHEZw}{local}{local[84]},{node6}{7iT21oiWR4KFLJLZOILYnw}{local}{local[88]},{node4}{Y7GhvCgsQie7I48KEGshLg}{local}{local[86]},{node8}{ZEuti5x-Qei312HAwvj-9Q}{local}{local[90]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,679][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{36WJouXTRrioJTffXWevrA}{local}{local[82]}, previous {node}{_rdMzqQGQMe7dZNOkrvdWQ}{local}{local[213]}}, removed {{node}{_rdMzqQGQMe7dZNOkrvdWQ}{local}{local[213]},}, added {{node7}{0cPGq5d2SWGyES435CH2CQ}{local}{local[89]},{node3}{ZUu01v8XTQeCWmkgYutQJQ}{local}{local[85]},{node5}{3vtq-Ys9QVaWOzldQ-DnqQ}{local}{local[87]},{node0}{36WJouXTRrioJTffXWevrA}{local}{local[82]},{node2}{G0E_S8BjS4SJz24O4iHEZw}{local}{local[84]},{node8}{ZEuti5x-Qei312HAwvj-9Q}{local}{local[90]},{node4}{Y7GhvCgsQie7I48KEGshLg}{local}{local[86]},{node1}{FJkQwTe2RbaBLQCliS48Xw}{local}{local[83]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,679][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{36WJouXTRrioJTffXWevrA}{local}{local[82]}, previous {node}{RFvU4SuZSGqnLIYfMubHwA}{local}{local[214]}}, removed {{node}{RFvU4SuZSGqnLIYfMubHwA}{local}{local[214]},}, added {{node1}{FJkQwTe2RbaBLQCliS48Xw}{local}{local[83]},{node8}{ZEuti5x-Qei312HAwvj-9Q}{local}{local[90]},{node2}{G0E_S8BjS4SJz24O4iHEZw}{local}{local[84]},{node3}{ZUu01v8XTQeCWmkgYutQJQ}{local}{local[85]},{node0}{36WJouXTRrioJTffXWevrA}{local}{local[82]},{node6}{7iT21oiWR4KFLJLZOILYnw}{local}{local[88]},{node5}{3vtq-Ys9QVaWOzldQ-DnqQ}{local}{local[87]},{node4}{Y7GhvCgsQie7I48KEGshLg}{local}{local[86]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,680][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{36WJouXTRrioJTffXWevrA}{local}{local[82]}, previous {node}{FPrfvmhqT3Gr29EG0jQa2w}{local}{local[215]}}, removed {{node}{FPrfvmhqT3Gr29EG0jQa2w}{local}{local[215]},}, added {{node6}{7iT21oiWR4KFLJLZOILYnw}{local}{local[88]},{node7}{0cPGq5d2SWGyES435CH2CQ}{local}{local[89]},{node5}{3vtq-Ys9QVaWOzldQ-DnqQ}{local}{local[87]},{node0}{36WJouXTRrioJTffXWevrA}{local}{local[82]},{node1}{FJkQwTe2RbaBLQCliS48Xw}{local}{local[83]},{node4}{Y7GhvCgsQie7I48KEGshLg}{local}{local[86]},{node3}{ZUu01v8XTQeCWmkgYutQJQ}{local}{local[85]},{node2}{G0E_S8BjS4SJz24O4iHEZw}{local}{local[84]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,687][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Awaiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,688][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 7%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,689][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 8%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,690][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,690][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2%0D%0A[2016-09-18T20:17:21,690][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 5%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,690][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0%0D%0A[2016-09-18T20:17:21,690][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,690][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 6%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,690][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,690][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Done waiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,703][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 7 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,703][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 8 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,704][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 4 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,704][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,704][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 5 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,704][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,704][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,704][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 6 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,704][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1 finished%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCancellingTasksThatDontSupportCancellation(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
  "startTimestamp": 1474195641605,
  "executionTime": 102
 }
]

[
 "TEST_STARTED",
 "ID#testTasksDescriptions(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,731][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{xJX2S51AS-yL39ChLQ_dAQ}{local}{local[216]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,732][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[91]}, bound_addresses {local[91]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,736][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{FZUK3RdgRkyubpS-F-sUpg}{local}{local[217]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,737][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[92]}, bound_addresses {local[92]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,740][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{cPYzSdg8QRe059HSlW5YVQ}{local}{local[218]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,741][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[93]}, bound_addresses {local[93]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,744][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{69MPzD7WTvW5X-qhPlSyfQ}{local}{local[219]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,746][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[94]}, bound_addresses {local[94]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,758][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{9KL5B6vNSviSq_puyU3HhA}{local}{local[220]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,762][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[95]}, bound_addresses {local[95]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,763][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{9n3zBG4JTry80pEW9ad5gw}{local}{local[91]}, previous {node}{xJX2S51AS-yL39ChLQ_dAQ}{local}{local[216]}}, removed {{node}{xJX2S51AS-yL39ChLQ_dAQ}{local}{local[216]},}, added {{node4}{Nxjm-TH2Rzmi801nSEDjSQ}{local}{local[95]},{node1}{htHUdZeYR-OqaQKtY8EvSw}{local}{local[92]},{node2}{wPbLR4alQAu66JiV5gw2WQ}{local}{local[93]},{node3}{eRkbJhGiQEqXl1HWp4gxyQ}{local}{local[94]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,763][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{9n3zBG4JTry80pEW9ad5gw}{local}{local[91]}, previous {node}{FZUK3RdgRkyubpS-F-sUpg}{local}{local[217]}}, removed {{node}{FZUK3RdgRkyubpS-F-sUpg}{local}{local[217]},}, added {{node0}{9n3zBG4JTry80pEW9ad5gw}{local}{local[91]},{node4}{Nxjm-TH2Rzmi801nSEDjSQ}{local}{local[95]},{node2}{wPbLR4alQAu66JiV5gw2WQ}{local}{local[93]},{node3}{eRkbJhGiQEqXl1HWp4gxyQ}{local}{local[94]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,763][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{9n3zBG4JTry80pEW9ad5gw}{local}{local[91]}, previous {node}{cPYzSdg8QRe059HSlW5YVQ}{local}{local[218]}}, removed {{node}{cPYzSdg8QRe059HSlW5YVQ}{local}{local[218]},}, added {{node0}{9n3zBG4JTry80pEW9ad5gw}{local}{local[91]},{node4}{Nxjm-TH2Rzmi801nSEDjSQ}{local}{local[95]},{node1}{htHUdZeYR-OqaQKtY8EvSw}{local}{local[92]},{node3}{eRkbJhGiQEqXl1HWp4gxyQ}{local}{local[94]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,764][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{9n3zBG4JTry80pEW9ad5gw}{local}{local[91]}, previous {node}{69MPzD7WTvW5X-qhPlSyfQ}{local}{local[219]}}, removed {{node}{69MPzD7WTvW5X-qhPlSyfQ}{local}{local[219]},}, added {{node0}{9n3zBG4JTry80pEW9ad5gw}{local}{local[91]},{node4}{Nxjm-TH2Rzmi801nSEDjSQ}{local}{local[95]},{node1}{htHUdZeYR-OqaQKtY8EvSw}{local}{local[92]},{node2}{wPbLR4alQAu66JiV5gw2WQ}{local}{local[93]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,764][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{9n3zBG4JTry80pEW9ad5gw}{local}{local[91]}, previous {node}{9KL5B6vNSviSq_puyU3HhA}{local}{local[220]}}, removed {{node}{9KL5B6vNSviSq_puyU3HhA}{local}{local[220]},}, added {{node0}{9n3zBG4JTry80pEW9ad5gw}{local}{local[91]},{node1}{htHUdZeYR-OqaQKtY8EvSw}{local}{local[92]},{node2}{wPbLR4alQAu66JiV5gw2WQ}{local}{local[93]},{node3}{eRkbJhGiQEqXl1HWp4gxyQ}{local}{local[94]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,767][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Awaiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,769][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,769][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,770][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,770][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,771][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,771][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Done waiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,784][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,784][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 4 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,784][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,784][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,784][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1 finished%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTasksDescriptions(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
  "startTimestamp": 1474195641707,
  "executionTime": 85
 }
]

[
 "TEST_STARTED",
 "ID#testTaskLevelActionFailures(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,820][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{oBmD53ErRT6p68IxOuKeEQ}{local}{local[221]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,821][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[96]}, bound_addresses {local[96]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,837][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{39UyYJXaR7KBCpVtYBx5Sw}{local}{local[222]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,838][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[97]}, bound_addresses {local[97]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,842][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{lH1xls7uRe-iD0WA99IhMA}{local}{local[223]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,844][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[98]}, bound_addresses {local[98]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,846][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{5MToio-TQEmiJrRaXpSbUw}{local}{local[224]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,847][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[99]}, bound_addresses {local[99]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,848][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{tmafdEGXTL6bsKL0exugLw}{local}{local[96]}, previous {node}{oBmD53ErRT6p68IxOuKeEQ}{local}{local[221]}}, removed {{node}{oBmD53ErRT6p68IxOuKeEQ}{local}{local[221]},}, added {{node1}{cJamlRmZSz2tyynDvemFGg}{local}{local[97]},{node2}{ZNsk4xleQwWhatXC__kovw}{local}{local[98]},{node3}{p3qb2Kn6QrK7mXqo9t6cQg}{local}{local[99]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,849][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{tmafdEGXTL6bsKL0exugLw}{local}{local[96]}, previous {node}{39UyYJXaR7KBCpVtYBx5Sw}{local}{local[222]}}, removed {{node}{39UyYJXaR7KBCpVtYBx5Sw}{local}{local[222]},}, added {{node0}{tmafdEGXTL6bsKL0exugLw}{local}{local[96]},{node2}{ZNsk4xleQwWhatXC__kovw}{local}{local[98]},{node3}{p3qb2Kn6QrK7mXqo9t6cQg}{local}{local[99]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,849][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{tmafdEGXTL6bsKL0exugLw}{local}{local[96]}, previous {node}{lH1xls7uRe-iD0WA99IhMA}{local}{local[223]}}, removed {{node}{lH1xls7uRe-iD0WA99IhMA}{local}{local[223]},}, added {{node0}{tmafdEGXTL6bsKL0exugLw}{local}{local[96]},{node1}{cJamlRmZSz2tyynDvemFGg}{local}{local[97]},{node3}{p3qb2Kn6QrK7mXqo9t6cQg}{local}{local[99]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,849][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{tmafdEGXTL6bsKL0exugLw}{local}{local[96]}, previous {node}{5MToio-TQEmiJrRaXpSbUw}{local}{local[224]}}, removed {{node}{5MToio-TQEmiJrRaXpSbUw}{local}{local[224]},}, added {{node0}{tmafdEGXTL6bsKL0exugLw}{local}{local[96]},{node1}{cJamlRmZSz2tyynDvemFGg}{local}{local[97]},{node2}{ZNsk4xleQwWhatXC__kovw}{local}{local[98]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,852][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,852][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Awaiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,853][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,853][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,853][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,853][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Done waiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,856][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Task action on node 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,857][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Task action on node 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,857][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Task action on node 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,857][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Failing on node 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:21,860][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Task action on node 3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:22,035][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:22,035][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:22,035][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:22,035][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1 finished%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTaskLevelActionFailures(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
  "startTimestamp": 1474195641792,
  "executionTime": 249
 }
]

[
 "APPEND_STDERR",
 {
  "chunk": "Sep 18, 2016 12:47:22 PM com.carrotsearch.randomizedtesting.ThreadLeakControl checkThreadLeaks%0D%0AWARNING: Will linger awaiting termination of 32 leaked thread(s).%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
  "startTimestamp": 1474195640189,
  "executionTime": 2131
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.PriorityTests",
   "displayName": "org.elasticsearch.common.PriorityTests",
   "methodName": null,
   "className": "org.elasticsearch.common.PriorityTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.common.PriorityTests)",
     "displayName": "testSerialization(org.elasticsearch.common.PriorityTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.common.PriorityTests",
     "children": []
    },
    {
     "id": "ID#testValueOf(org.elasticsearch.common.PriorityTests)",
     "displayName": "testValueOf(org.elasticsearch.common.PriorityTests)",
     "methodName": "testValueOf",
     "className": "org.elasticsearch.common.PriorityTests",
     "children": []
    },
    {
     "id": "ID#testToString(org.elasticsearch.common.PriorityTests)",
     "displayName": "testToString(org.elasticsearch.common.PriorityTests)",
     "methodName": "testToString",
     "className": "org.elasticsearch.common.PriorityTests",
     "children": []
    },
    {
     "id": "ID#testCompareTo(org.elasticsearch.common.PriorityTests)",
     "displayName": "testCompareTo(org.elasticsearch.common.PriorityTests)",
     "methodName": "testCompareTo",
     "className": "org.elasticsearch.common.PriorityTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195642327
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.common.PriorityTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.common.PriorityTests)",
  "startTimestamp": 1474195642384,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValueOf(org.elasticsearch.common.PriorityTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueOf(org.elasticsearch.common.PriorityTests)",
  "startTimestamp": 1474195642386,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToString(org.elasticsearch.common.PriorityTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToString(org.elasticsearch.common.PriorityTests)",
  "startTimestamp": 1474195642389,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testCompareTo(org.elasticsearch.common.PriorityTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompareTo(org.elasticsearch.common.PriorityTests)",
  "startTimestamp": 1474195642391,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.PriorityTests",
  "startTimestamp": 1474195642327,
  "executionTime": 68
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.ingest.SimulatePipelineResponseTests",
   "displayName": "org.elasticsearch.action.ingest.SimulatePipelineResponseTests",
   "methodName": null,
   "className": "org.elasticsearch.action.ingest.SimulatePipelineResponseTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.action.ingest.SimulatePipelineResponseTests)",
     "displayName": "testSerialization(org.elasticsearch.action.ingest.SimulatePipelineResponseTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.action.ingest.SimulatePipelineResponseTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195642401
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.action.ingest.SimulatePipelineResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.action.ingest.SimulatePipelineResponseTests)",
  "startTimestamp": 1474195642416,
  "executionTime": 45
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.ingest.SimulatePipelineResponseTests",
  "startTimestamp": 1474195642401,
  "executionTime": 64
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.RangeTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.RangeTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.RangeTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.RangeTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.RangeTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.RangeTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.RangeTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.RangeTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.RangeTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.RangeTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.RangeTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.RangeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195642471
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:22,522][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{bNFlYvBdRka_ASU7-pcTtA}{local}{local[225]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.RangeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.RangeTests)",
  "startTimestamp": 1474195642540,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.RangeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.RangeTests)",
  "startTimestamp": 1474195642553,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.RangeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.RangeTests)",
  "startTimestamp": 1474195642555,
  "executionTime": 19
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.RangeTests",
  "startTimestamp": 1474195642471,
  "executionTime": 108
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.BinaryFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.BinaryFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.BinaryFieldTypeTests",
   "children": [
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.BinaryFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.BinaryFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.BinaryFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.BinaryFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.BinaryFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195642628
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.BinaryFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
  "startTimestamp": 1474195642798,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.BinaryFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
  "startTimestamp": 1474195642801,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.BinaryFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
  "startTimestamp": 1474195642803,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.BinaryFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
  "startTimestamp": 1474195642805,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.BinaryFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
  "startTimestamp": 1474195642809,
  "executionTime": 13
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.BinaryFieldTypeTests",
  "startTimestamp": 1474195642628,
  "executionTime": 195
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.LegacyShortFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.LegacyShortFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.LegacyShortFieldTypeTests",
   "children": [
    {
     "id": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
     "displayName": "testValueForSearch(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
     "methodName": "testValueForSearch",
     "className": "org.elasticsearch.index.mapper.LegacyShortFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.LegacyShortFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.LegacyShortFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.LegacyShortFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.LegacyShortFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.LegacyShortFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195642837
 }
]

[
 "TEST_STARTED",
 "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
  "startTimestamp": 1474195642911,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
  "startTimestamp": 1474195642914,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
  "startTimestamp": 1474195642916,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
  "startTimestamp": 1474195642918,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
  "startTimestamp": 1474195642920,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
  "startTimestamp": 1474195642950,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.LegacyShortFieldTypeTests",
  "startTimestamp": 1474195642837,
  "executionTime": 118
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.controller.SearchPhaseControllerTests",
   "displayName": "org.elasticsearch.search.controller.SearchPhaseControllerTests",
   "methodName": null,
   "className": "org.elasticsearch.search.controller.SearchPhaseControllerTests",
   "children": [
    {
     "id": "ID#testSort(org.elasticsearch.search.controller.SearchPhaseControllerTests)",
     "displayName": "testSort(org.elasticsearch.search.controller.SearchPhaseControllerTests)",
     "methodName": "testSort",
     "className": "org.elasticsearch.search.controller.SearchPhaseControllerTests",
     "children": []
    },
    {
     "id": "ID#testMerge(org.elasticsearch.search.controller.SearchPhaseControllerTests)",
     "displayName": "testMerge(org.elasticsearch.search.controller.SearchPhaseControllerTests)",
     "methodName": "testMerge",
     "className": "org.elasticsearch.search.controller.SearchPhaseControllerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195642961
 }
]

[
 "TEST_STARTED",
 "ID#testSort(org.elasticsearch.search.controller.SearchPhaseControllerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSort(org.elasticsearch.search.controller.SearchPhaseControllerTests)",
  "startTimestamp": 1474195642981,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testMerge(org.elasticsearch.search.controller.SearchPhaseControllerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMerge(org.elasticsearch.search.controller.SearchPhaseControllerTests)",
  "startTimestamp": 1474195643003,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.controller.SearchPhaseControllerTests",
  "startTimestamp": 1474195642961,
  "executionTime": 49
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.cbor.CborXContentTests",
   "displayName": "org.elasticsearch.common.xcontent.cbor.CborXContentTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.cbor.CborXContentTests",
   "children": [
    {
     "id": "ID#testBigInteger(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "displayName": "testBigInteger(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "methodName": "testBigInteger",
     "className": "org.elasticsearch.common.xcontent.cbor.CborXContentTests",
     "children": []
    },
    {
     "id": "ID#testMissingEndObject(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "displayName": "testMissingEndObject(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "methodName": "testMissingEndObject",
     "className": "org.elasticsearch.common.xcontent.cbor.CborXContentTests",
     "children": []
    },
    {
     "id": "ID#testRawField(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "displayName": "testRawField(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "methodName": "testRawField",
     "className": "org.elasticsearch.common.xcontent.cbor.CborXContentTests",
     "children": []
    },
    {
     "id": "ID#testBasics(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "displayName": "testBasics(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "methodName": "testBasics",
     "className": "org.elasticsearch.common.xcontent.cbor.CborXContentTests",
     "children": []
    },
    {
     "id": "ID#testMissingEndArray(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "displayName": "testMissingEndArray(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "methodName": "testMissingEndArray",
     "className": "org.elasticsearch.common.xcontent.cbor.CborXContentTests",
     "children": []
    },
    {
     "id": "ID#testRawValue(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "displayName": "testRawValue(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "methodName": "testRawValue",
     "className": "org.elasticsearch.common.xcontent.cbor.CborXContentTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195643019
 }
]

[
 "TEST_STARTED",
 "ID#testBigInteger(org.elasticsearch.common.xcontent.cbor.CborXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBigInteger(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
  "startTimestamp": 1474195643115,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMissingEndObject(org.elasticsearch.common.xcontent.cbor.CborXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingEndObject(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
  "startTimestamp": 1474195643117,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRawField(org.elasticsearch.common.xcontent.cbor.CborXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawField(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
  "startTimestamp": 1474195643119,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testBasics(org.elasticsearch.common.xcontent.cbor.CborXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasics(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
  "startTimestamp": 1474195643123,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMissingEndArray(org.elasticsearch.common.xcontent.cbor.CborXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingEndArray(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
  "startTimestamp": 1474195643125,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRawValue(org.elasticsearch.common.xcontent.cbor.CborXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawValue(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
  "startTimestamp": 1474195643127,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.cbor.CborXContentTests",
  "startTimestamp": 1474195643019,
  "executionTime": 113
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.hashing.MurmurHash3Tests",
   "displayName": "org.elasticsearch.common.hashing.MurmurHash3Tests",
   "methodName": null,
   "className": "org.elasticsearch.common.hashing.MurmurHash3Tests",
   "children": [
    {
     "id": "ID#testKnownValues(org.elasticsearch.common.hashing.MurmurHash3Tests)",
     "displayName": "testKnownValues(org.elasticsearch.common.hashing.MurmurHash3Tests)",
     "methodName": "testKnownValues",
     "className": "org.elasticsearch.common.hashing.MurmurHash3Tests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195643138
 }
]

[
 "TEST_STARTED",
 "ID#testKnownValues(org.elasticsearch.common.hashing.MurmurHash3Tests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testKnownValues(org.elasticsearch.common.hashing.MurmurHash3Tests)",
  "startTimestamp": 1474195643154,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.hashing.MurmurHash3Tests",
  "startTimestamp": 1474195643138,
  "executionTime": 19
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.rest.action.cat.RestTableTests",
   "displayName": "org.elasticsearch.rest.action.cat.RestTableTests",
   "methodName": null,
   "className": "org.elasticsearch.rest.action.cat.RestTableTests",
   "children": [
    {
     "id": "ID#testThatWeUseTheAcceptHeaderJson(org.elasticsearch.rest.action.cat.RestTableTests)",
     "displayName": "testThatWeUseTheAcceptHeaderJson(org.elasticsearch.rest.action.cat.RestTableTests)",
     "methodName": "testThatWeUseTheAcceptHeaderJson",
     "className": "org.elasticsearch.rest.action.cat.RestTableTests",
     "children": []
    },
    {
     "id": "ID#testThatWeUseTheAcceptHeaderYaml(org.elasticsearch.rest.action.cat.RestTableTests)",
     "displayName": "testThatWeUseTheAcceptHeaderYaml(org.elasticsearch.rest.action.cat.RestTableTests)",
     "methodName": "testThatWeUseTheAcceptHeaderYaml",
     "className": "org.elasticsearch.rest.action.cat.RestTableTests",
     "children": []
    },
    {
     "id": "ID#testThatWeUseTheAcceptHeaderSmile(org.elasticsearch.rest.action.cat.RestTableTests)",
     "displayName": "testThatWeUseTheAcceptHeaderSmile(org.elasticsearch.rest.action.cat.RestTableTests)",
     "methodName": "testThatWeUseTheAcceptHeaderSmile",
     "className": "org.elasticsearch.rest.action.cat.RestTableTests",
     "children": []
    },
    {
     "id": "ID#testThatDisplayHeadersAreNotAddedTwice(org.elasticsearch.rest.action.cat.RestTableTests)",
     "displayName": "testThatDisplayHeadersAreNotAddedTwice(org.elasticsearch.rest.action.cat.RestTableTests)",
     "methodName": "testThatDisplayHeadersAreNotAddedTwice",
     "className": "org.elasticsearch.rest.action.cat.RestTableTests",
     "children": []
    },
    {
     "id": "ID#testThatDisplayHeadersSupportWildcards(org.elasticsearch.rest.action.cat.RestTableTests)",
     "displayName": "testThatDisplayHeadersSupportWildcards(org.elasticsearch.rest.action.cat.RestTableTests)",
     "methodName": "testThatDisplayHeadersSupportWildcards",
     "className": "org.elasticsearch.rest.action.cat.RestTableTests",
     "children": []
    },
    {
     "id": "ID#testThatDisplayHeadersWithoutTimestamp(org.elasticsearch.rest.action.cat.RestTableTests)",
     "displayName": "testThatDisplayHeadersWithoutTimestamp(org.elasticsearch.rest.action.cat.RestTableTests)",
     "methodName": "testThatDisplayHeadersWithoutTimestamp",
     "className": "org.elasticsearch.rest.action.cat.RestTableTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreContentType(org.elasticsearch.rest.action.cat.RestTableTests)",
     "displayName": "testIgnoreContentType(org.elasticsearch.rest.action.cat.RestTableTests)",
     "methodName": "testIgnoreContentType",
     "className": "org.elasticsearch.rest.action.cat.RestTableTests",
     "children": []
    },
    {
     "id": "ID#testThatWeUseTheAcceptHeaderText(org.elasticsearch.rest.action.cat.RestTableTests)",
     "displayName": "testThatWeUseTheAcceptHeaderText(org.elasticsearch.rest.action.cat.RestTableTests)",
     "methodName": "testThatWeUseTheAcceptHeaderText",
     "className": "org.elasticsearch.rest.action.cat.RestTableTests",
     "children": []
    },
    {
     "id": "ID#testThatWeUseTheAcceptHeaderCbor(org.elasticsearch.rest.action.cat.RestTableTests)",
     "displayName": "testThatWeUseTheAcceptHeaderCbor(org.elasticsearch.rest.action.cat.RestTableTests)",
     "methodName": "testThatWeUseTheAcceptHeaderCbor",
     "className": "org.elasticsearch.rest.action.cat.RestTableTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195643186
 }
]

[
 "TEST_STARTED",
 "ID#testThatWeUseTheAcceptHeaderJson(org.elasticsearch.rest.action.cat.RestTableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatWeUseTheAcceptHeaderJson(org.elasticsearch.rest.action.cat.RestTableTests)",
  "startTimestamp": 1474195643219,
  "executionTime": 32
 }
]

[
 "TEST_STARTED",
 "ID#testThatWeUseTheAcceptHeaderYaml(org.elasticsearch.rest.action.cat.RestTableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatWeUseTheAcceptHeaderYaml(org.elasticsearch.rest.action.cat.RestTableTests)",
  "startTimestamp": 1474195643251,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatWeUseTheAcceptHeaderSmile(org.elasticsearch.rest.action.cat.RestTableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatWeUseTheAcceptHeaderSmile(org.elasticsearch.rest.action.cat.RestTableTests)",
  "startTimestamp": 1474195643254,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testThatDisplayHeadersAreNotAddedTwice(org.elasticsearch.rest.action.cat.RestTableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatDisplayHeadersAreNotAddedTwice(org.elasticsearch.rest.action.cat.RestTableTests)",
  "startTimestamp": 1474195643256,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testThatDisplayHeadersSupportWildcards(org.elasticsearch.rest.action.cat.RestTableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatDisplayHeadersSupportWildcards(org.elasticsearch.rest.action.cat.RestTableTests)",
  "startTimestamp": 1474195643269,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatDisplayHeadersWithoutTimestamp(org.elasticsearch.rest.action.cat.RestTableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatDisplayHeadersWithoutTimestamp(org.elasticsearch.rest.action.cat.RestTableTests)",
  "startTimestamp": 1474195643271,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreContentType(org.elasticsearch.rest.action.cat.RestTableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreContentType(org.elasticsearch.rest.action.cat.RestTableTests)",
  "startTimestamp": 1474195643273,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testThatWeUseTheAcceptHeaderText(org.elasticsearch.rest.action.cat.RestTableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatWeUseTheAcceptHeaderText(org.elasticsearch.rest.action.cat.RestTableTests)",
  "startTimestamp": 1474195643279,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testThatWeUseTheAcceptHeaderCbor(org.elasticsearch.rest.action.cat.RestTableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatWeUseTheAcceptHeaderCbor(org.elasticsearch.rest.action.cat.RestTableTests)",
  "startTimestamp": 1474195643281,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.rest.action.cat.RestTableTests",
  "startTimestamp": 1474195643186,
  "executionTime": 98
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests",
   "children": [
    {
     "id": "ID#testEnableClusterBalance(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
     "displayName": "testEnableClusterBalance(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
     "methodName": "testEnableClusterBalance",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests",
     "children": []
    },
    {
     "id": "ID#testIndexEnableNone(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
     "displayName": "testIndexEnableNone(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
     "methodName": "testIndexEnableNone",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests",
     "children": []
    },
    {
     "id": "ID#testClusterEnableNone(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
     "displayName": "testClusterEnableNone(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
     "methodName": "testClusterEnableNone",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests",
     "children": []
    },
    {
     "id": "ID#testEnableClusterBalanceNoReplicas(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
     "displayName": "testEnableClusterBalanceNoReplicas(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
     "methodName": "testEnableClusterBalanceNoReplicas",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests",
     "children": []
    },
    {
     "id": "ID#testClusterEnableOnlyPrimaries(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
     "displayName": "testClusterEnableOnlyPrimaries(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
     "methodName": "testClusterEnableOnlyPrimaries",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195643292
 }
]

[
 "TEST_STARTED",
 "ID#testEnableClusterBalance(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:23,320][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:23,322][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> adding one nodes and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:23,323][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:23,325][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][1], [always_disabled][0], [test][2], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:23,325][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> adding one nodes and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:23,326][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [cluster.routing.rebalance.enable] from [NONE] to [REPLICAS]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnableClusterBalance(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
  "startTimestamp": 1474195643312,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testIndexEnableNone(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:23,357][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> adding two nodes and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:23,360][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:23,360][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:23,361][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> start the shards (replicas)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:23,362][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> verify only enabled index has been routed%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexEnableNone(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
  "startTimestamp": 1474195643328,
  "executionTime": 34
 }
]

[
 "TEST_STARTED",
 "ID#testClusterEnableNone(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:23,368][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:23,369][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> adding two nodes and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:23,369][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterEnableNone(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
  "startTimestamp": 1474195643362,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testEnableClusterBalanceNoReplicas(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:23,376][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:23,377][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> adding one nodes and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:23,377][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:23,378][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][4], [test][2], [test][0], [test][1], [test][5], [test][3]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:23,378][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> adding one nodes and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:23,379][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [cluster.routing.rebalance.enable] from [NONE] to [ALL]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnableClusterBalanceNoReplicas(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
  "startTimestamp": 1474195643370,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testClusterEnableOnlyPrimaries(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:23,387][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:23,387][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> adding two nodes do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:23,387][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterEnableOnlyPrimaries(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
  "startTimestamp": 1474195643380,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests",
  "startTimestamp": 1474195643292,
  "executionTime": 110
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.unit.ByteSizeValueTests",
   "displayName": "org.elasticsearch.common.unit.ByteSizeValueTests",
   "methodName": null,
   "className": "org.elasticsearch.common.unit.ByteSizeValueTests",
   "children": [
    {
     "id": "ID#testSimple(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "displayName": "testSimple(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.common.unit.ByteSizeValueTests",
     "children": []
    },
    {
     "id": "ID#testActualTera(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "displayName": "testActualTera(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "methodName": "testActualTera",
     "className": "org.elasticsearch.common.unit.ByteSizeValueTests",
     "children": []
    },
    {
     "id": "ID#testFailOnMissingUnits(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "displayName": "testFailOnMissingUnits(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "methodName": "testFailOnMissingUnits",
     "className": "org.elasticsearch.common.unit.ByteSizeValueTests",
     "children": []
    },
    {
     "id": "ID#testActualPeta(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "displayName": "testActualPeta(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "methodName": "testActualPeta",
     "className": "org.elasticsearch.common.unit.ByteSizeValueTests",
     "children": []
    },
    {
     "id": "ID#testFailOnUnknownUnits(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "displayName": "testFailOnUnknownUnits(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "methodName": "testFailOnUnknownUnits",
     "className": "org.elasticsearch.common.unit.ByteSizeValueTests",
     "children": []
    },
    {
     "id": "ID#testNoDotsAllowed(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "displayName": "testNoDotsAllowed(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "methodName": "testNoDotsAllowed",
     "className": "org.elasticsearch.common.unit.ByteSizeValueTests",
     "children": []
    },
    {
     "id": "ID#testToString(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "displayName": "testToString(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "methodName": "testToString",
     "className": "org.elasticsearch.common.unit.ByteSizeValueTests",
     "children": []
    },
    {
     "id": "ID#testEquality(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "displayName": "testEquality(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "methodName": "testEquality",
     "className": "org.elasticsearch.common.unit.ByteSizeValueTests",
     "children": []
    },
    {
     "id": "ID#testActual(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "displayName": "testActual(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "methodName": "testActual",
     "className": "org.elasticsearch.common.unit.ByteSizeValueTests",
     "children": []
    },
    {
     "id": "ID#testParsing(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "displayName": "testParsing(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "methodName": "testParsing",
     "className": "org.elasticsearch.common.unit.ByteSizeValueTests",
     "children": []
    },
    {
     "id": "ID#testFailOnEmptyParsing(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "displayName": "testFailOnEmptyParsing(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "methodName": "testFailOnEmptyParsing",
     "className": "org.elasticsearch.common.unit.ByteSizeValueTests",
     "children": []
    },
    {
     "id": "ID#testFailOnEmptyNumberParsing(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "displayName": "testFailOnEmptyNumberParsing(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "methodName": "testFailOnEmptyNumberParsing",
     "className": "org.elasticsearch.common.unit.ByteSizeValueTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195643409
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.common.unit.ByteSizeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.common.unit.ByteSizeValueTests)",
  "startTimestamp": 1474195643444,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testActualTera(org.elasticsearch.common.unit.ByteSizeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActualTera(org.elasticsearch.common.unit.ByteSizeValueTests)",
  "startTimestamp": 1474195643446,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnMissingUnits(org.elasticsearch.common.unit.ByteSizeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnMissingUnits(org.elasticsearch.common.unit.ByteSizeValueTests)",
  "startTimestamp": 1474195643448,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testActualPeta(org.elasticsearch.common.unit.ByteSizeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActualPeta(org.elasticsearch.common.unit.ByteSizeValueTests)",
  "startTimestamp": 1474195643450,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnUnknownUnits(org.elasticsearch.common.unit.ByteSizeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnUnknownUnits(org.elasticsearch.common.unit.ByteSizeValueTests)",
  "startTimestamp": 1474195643451,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNoDotsAllowed(org.elasticsearch.common.unit.ByteSizeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoDotsAllowed(org.elasticsearch.common.unit.ByteSizeValueTests)",
  "startTimestamp": 1474195643453,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToString(org.elasticsearch.common.unit.ByteSizeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToString(org.elasticsearch.common.unit.ByteSizeValueTests)",
  "startTimestamp": 1474195643455,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testEquality(org.elasticsearch.common.unit.ByteSizeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquality(org.elasticsearch.common.unit.ByteSizeValueTests)",
  "startTimestamp": 1474195643457,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testActual(org.elasticsearch.common.unit.ByteSizeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActual(org.elasticsearch.common.unit.ByteSizeValueTests)",
  "startTimestamp": 1474195643459,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParsing(org.elasticsearch.common.unit.ByteSizeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsing(org.elasticsearch.common.unit.ByteSizeValueTests)",
  "startTimestamp": 1474195643460,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnEmptyParsing(org.elasticsearch.common.unit.ByteSizeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnEmptyParsing(org.elasticsearch.common.unit.ByteSizeValueTests)",
  "startTimestamp": 1474195643463,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnEmptyNumberParsing(org.elasticsearch.common.unit.ByteSizeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnEmptyNumberParsing(org.elasticsearch.common.unit.ByteSizeValueTests)",
  "startTimestamp": 1474195643464,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.unit.ByteSizeValueTests",
  "startTimestamp": 1474195643409,
  "executionTime": 63
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.rounding.DateTimeUnitTests",
   "displayName": "org.elasticsearch.common.rounding.DateTimeUnitTests",
   "methodName": null,
   "className": "org.elasticsearch.common.rounding.DateTimeUnitTests",
   "children": [
    {
     "id": "ID#testEnumIds(org.elasticsearch.common.rounding.DateTimeUnitTests)",
     "displayName": "testEnumIds(org.elasticsearch.common.rounding.DateTimeUnitTests)",
     "methodName": "testEnumIds",
     "className": "org.elasticsearch.common.rounding.DateTimeUnitTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195643478
 }
]

[
 "TEST_STARTED",
 "ID#testEnumIds(org.elasticsearch.common.rounding.DateTimeUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnumIds(org.elasticsearch.common.rounding.DateTimeUnitTests)",
  "startTimestamp": 1474195643682,
  "executionTime": 42
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.rounding.DateTimeUnitTests",
  "startTimestamp": 1474195643478,
  "executionTime": 249
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.concurrent.CountDownTests",
   "displayName": "org.elasticsearch.common.util.concurrent.CountDownTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.concurrent.CountDownTests",
   "children": [
    {
     "id": "ID#testSingleThreaded(org.elasticsearch.common.util.concurrent.CountDownTests)",
     "displayName": "testSingleThreaded(org.elasticsearch.common.util.concurrent.CountDownTests)",
     "methodName": "testSingleThreaded",
     "className": "org.elasticsearch.common.util.concurrent.CountDownTests",
     "children": []
    },
    {
     "id": "ID#testConcurrent(org.elasticsearch.common.util.concurrent.CountDownTests)",
     "displayName": "testConcurrent(org.elasticsearch.common.util.concurrent.CountDownTests)",
     "methodName": "testConcurrent",
     "className": "org.elasticsearch.common.util.concurrent.CountDownTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195643733
 }
]

[
 "TEST_STARTED",
 "ID#testSingleThreaded(org.elasticsearch.common.util.concurrent.CountDownTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleThreaded(org.elasticsearch.common.util.concurrent.CountDownTests)",
  "startTimestamp": 1474195643753,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testConcurrent(org.elasticsearch.common.util.concurrent.CountDownTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcurrent(org.elasticsearch.common.util.concurrent.CountDownTests)",
  "startTimestamp": 1474195643755,
  "executionTime": 18
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.concurrent.CountDownTests",
  "startTimestamp": 1474195643733,
  "executionTime": 41
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.ToAndFromJsonMetaDataTests",
   "displayName": "org.elasticsearch.cluster.metadata.ToAndFromJsonMetaDataTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.ToAndFromJsonMetaDataTests",
   "children": [
    {
     "id": "ID#testSimpleJsonFromAndTo(org.elasticsearch.cluster.metadata.ToAndFromJsonMetaDataTests)",
     "displayName": "testSimpleJsonFromAndTo(org.elasticsearch.cluster.metadata.ToAndFromJsonMetaDataTests)",
     "methodName": "testSimpleJsonFromAndTo",
     "className": "org.elasticsearch.cluster.metadata.ToAndFromJsonMetaDataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195643782
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleJsonFromAndTo(org.elasticsearch.cluster.metadata.ToAndFromJsonMetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleJsonFromAndTo(org.elasticsearch.cluster.metadata.ToAndFromJsonMetaDataTests)",
  "startTimestamp": 1474195643806,
  "executionTime": 98
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.ToAndFromJsonMetaDataTests",
  "startTimestamp": 1474195643782,
  "executionTime": 130
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
   "children": [
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryFieldsWildcard(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testToQueryFieldsWildcard(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testToQueryFieldsWildcard",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryParameterArrayException(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testQueryParameterArrayException(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testQueryParameterArrayException",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryMultipleFieldsDisMaxQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testToQueryMultipleFieldsDisMaxQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testToQueryMultipleFieldsDisMaxQuery",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegaArguments(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testIllegaArguments(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testIllegaArguments",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryBoost(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testToQueryBoost(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testToQueryBoost",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFuzzinessNotAllowedTypes(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testFuzzinessNotAllowedTypes(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testFuzzinessNotAllowedTypes",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryMultipleFieldsBooleanQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testToQueryMultipleFieldsBooleanQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testToQueryMultipleFieldsBooleanQuery",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFuzzinessOnNonStringField(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testFuzzinessOnNonStringField(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testFuzzinessOnNonStringField",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryMultipleTermsBooleanQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testToQueryMultipleTermsBooleanQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testToQueryMultipleTermsBooleanQuery",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryFieldMissing(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testToQueryFieldMissing(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testToQueryFieldMissing",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195643920
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:23,972][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{dU7ZWGvTTwGHOvhktom0ew}{local}{local[242]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:23,979][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:23,979][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474195643966,
  "executionTime": 30
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474195643996,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryFieldsWildcard(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testToQueryFieldsWildcard(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "message": "test runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered\r\n\tat __randomizedtesting.SeedInfo.seed([FD13852EF36FC81C:51FCE23902A483FD]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.MultiMatchQueryBuilderTests.testToQueryFieldsWildcard(MultiMatchQueryBuilderTests.java:214)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryFieldsWildcard(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474195644001,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "message": "test with date fields runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test with date fields runs only when at least a type is registered\r\n\tat __randomizedtesting.SeedInfo.seed([FD13852EF36FC81C:550D746FCE61071E]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.MultiMatchQueryBuilderTests.doCreateTestQueryBuilder(MultiMatchQueryBuilderTests.java:64)\r\n\tat org.elasticsearch.index.query.MultiMatchQueryBuilderTests.doCreateTestQueryBuilder(MultiMatchQueryBuilderTests.java:54)\r\n\tat org.elasticsearch.test.AbstractQueryTestCase.createTestQueryBuilder(AbstractQueryTestCase.java:240)\r\n\tat org.elasticsearch.test.AbstractQueryTestCase.testUnknownObjectException(AbstractQueryTestCase.java:328)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test with date fields runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474195644004,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testQueryParameterArrayException(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryParameterArrayException(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474195644008,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryMultipleFieldsDisMaxQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testToQueryMultipleFieldsDisMaxQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "message": "test runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered\r\n\tat __randomizedtesting.SeedInfo.seed([FD13852EF36FC81C:7F4523DA6DB10FAF]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.MultiMatchQueryBuilderTests.testToQueryMultipleFieldsDisMaxQuery(MultiMatchQueryBuilderTests.java:202)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryMultipleFieldsDisMaxQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474195644011,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIllegaArguments(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegaArguments(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474195644014,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474195644019,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryBoost(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testToQueryBoost(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "message": "test runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered\r\n\tat __randomizedtesting.SeedInfo.seed([FD13852EF36FC81C:F9A850D5F970EA5]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.MultiMatchQueryBuilderTests.testToQueryBoost(MultiMatchQueryBuilderTests.java:164)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryBoost(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474195644031,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474195644035,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testFuzzinessNotAllowedTypes(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFuzzinessNotAllowedTypes(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474195644059,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "message": "test with date fields runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test with date fields runs only when at least a type is registered\r\n\tat __randomizedtesting.SeedInfo.seed([FD13852EF36FC81C:8C1CFDE33C888133]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.MultiMatchQueryBuilderTests.doCreateTestQueryBuilder(MultiMatchQueryBuilderTests.java:64)\r\n\tat org.elasticsearch.index.query.MultiMatchQueryBuilderTests.doCreateTestQueryBuilder(MultiMatchQueryBuilderTests.java:54)\r\n\tat org.elasticsearch.test.AbstractQueryTestCase.createTestQueryBuilder(AbstractQueryTestCase.java:240)\r\n\tat org.elasticsearch.test.AbstractQueryTestCase.testEqualsAndHashcode(AbstractQueryTestCase.java:732)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test with date fields runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474195644062,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryMultipleFieldsBooleanQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testToQueryMultipleFieldsBooleanQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "message": "test runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered\r\n\tat __randomizedtesting.SeedInfo.seed([FD13852EF36FC81C:D247224CBBE25D00]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.MultiMatchQueryBuilderTests.testToQueryMultipleFieldsBooleanQuery(MultiMatchQueryBuilderTests.java:192)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryMultipleFieldsBooleanQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474195644066,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFuzzinessOnNonStringField(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testFuzzinessOnNonStringField(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "message": "test runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered\r\n\tat __randomizedtesting.SeedInfo.seed([FD13852EF36FC81C:ECAFE79105874871]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.MultiMatchQueryBuilderTests.testFuzzinessOnNonStringField(MultiMatchQueryBuilderTests.java:291)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFuzzinessOnNonStringField(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474195644068,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryMultipleTermsBooleanQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testToQueryMultipleTermsBooleanQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "message": "test runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered\r\n\tat __randomizedtesting.SeedInfo.seed([FD13852EF36FC81C:824A9101562C743B]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.MultiMatchQueryBuilderTests.testToQueryMultipleTermsBooleanQuery(MultiMatchQueryBuilderTests.java:182)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryMultipleTermsBooleanQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474195644071,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "message": "test with date fields runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test with date fields runs only when at least a type is registered\r\n\tat __randomizedtesting.SeedInfo.seed([FD13852EF36FC81C:AE8871082EC0DF6]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.MultiMatchQueryBuilderTests.doCreateTestQueryBuilder(MultiMatchQueryBuilderTests.java:64)\r\n\tat org.elasticsearch.index.query.MultiMatchQueryBuilderTests.doCreateTestQueryBuilder(MultiMatchQueryBuilderTests.java:54)\r\n\tat org.elasticsearch.test.AbstractQueryTestCase.createTestQueryBuilder(AbstractQueryTestCase.java:240)\r\n\tat org.elasticsearch.test.AbstractQueryTestCase.testToQuery(AbstractQueryTestCase.java:589)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test with date fields runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474195644074,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "message": "test with date fields runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test with date fields runs only when at least a type is registered\r\n\tat __randomizedtesting.SeedInfo.seed([FD13852EF36FC81C:DC7BB0367AC828C6]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.MultiMatchQueryBuilderTests.doCreateTestQueryBuilder(MultiMatchQueryBuilderTests.java:64)\r\n\tat org.elasticsearch.index.query.MultiMatchQueryBuilderTests.doCreateTestQueryBuilder(MultiMatchQueryBuilderTests.java:54)\r\n\tat org.elasticsearch.test.AbstractQueryTestCase.createTestQueryBuilder(AbstractQueryTestCase.java:240)\r\n\tat org.elasticsearch.test.AbstractQueryTestCase.testFromXContent(AbstractQueryTestCase.java:273)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test with date fields runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474195644104,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "message": "test with date fields runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test with date fields runs only when at least a type is registered\r\n\tat __randomizedtesting.SeedInfo.seed([FD13852EF36FC81C:881FA591E7A23937]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.MultiMatchQueryBuilderTests.doCreateTestQueryBuilder(MultiMatchQueryBuilderTests.java:64)\r\n\tat org.elasticsearch.index.query.MultiMatchQueryBuilderTests.doCreateTestQueryBuilder(MultiMatchQueryBuilderTests.java:54)\r\n\tat org.elasticsearch.test.AbstractQueryTestCase.createTestQueryBuilder(AbstractQueryTestCase.java:240)\r\n\tat org.elasticsearch.test.AbstractQueryTestCase.testUnknownField(AbstractQueryTestCase.java:311)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test with date fields runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474195644109,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryFieldMissing(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testToQueryFieldMissing(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "message": "test runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered\r\n\tat __randomizedtesting.SeedInfo.seed([FD13852EF36FC81C:77875C929464B893]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.MultiMatchQueryBuilderTests.testToQueryFieldMissing(MultiMatchQueryBuilderTests.java:224)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryFieldMissing(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1474195644112,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
  "startTimestamp": 1474195643920,
  "executionTime": 199
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.GlobalTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.GlobalTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.GlobalTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.GlobalTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.GlobalTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.GlobalTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.GlobalTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.GlobalTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.GlobalTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.GlobalTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.GlobalTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.GlobalTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195644124
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:24,185][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{i_S68hizTNSjmPV0Fwb3sA}{local}{local[243]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.GlobalTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.GlobalTests)",
  "startTimestamp": 1474195644195,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.GlobalTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.GlobalTests)",
  "startTimestamp": 1474195644197,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.GlobalTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.GlobalTests)",
  "startTimestamp": 1474195644199,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.GlobalTests",
  "startTimestamp": 1474195644124,
  "executionTime": 85
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.RoutingBackwardCompatibilityTests",
   "displayName": "org.elasticsearch.cluster.routing.RoutingBackwardCompatibilityTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.RoutingBackwardCompatibilityTests",
   "children": [
    {
     "id": "ID#testBackwardCompatibility(org.elasticsearch.cluster.routing.RoutingBackwardCompatibilityTests)",
     "displayName": "testBackwardCompatibility(org.elasticsearch.cluster.routing.RoutingBackwardCompatibilityTests)",
     "methodName": "testBackwardCompatibility",
     "className": "org.elasticsearch.cluster.routing.RoutingBackwardCompatibilityTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195644215
 }
]

[
 "TEST_STARTED",
 "ID#testBackwardCompatibility(org.elasticsearch.cluster.routing.RoutingBackwardCompatibilityTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBackwardCompatibility(org.elasticsearch.cluster.routing.RoutingBackwardCompatibilityTests)",
  "startTimestamp": 1474195644232,
  "executionTime": 938
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.RoutingBackwardCompatibilityTests",
  "startTimestamp": 1474195644215,
  "executionTime": 958
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.ConcurrentRebalanceRoutingTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.ConcurrentRebalanceRoutingTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.ConcurrentRebalanceRoutingTests",
   "children": [
    {
     "id": "ID#testClusterConcurrentRebalance(org.elasticsearch.cluster.routing.allocation.ConcurrentRebalanceRoutingTests)",
     "displayName": "testClusterConcurrentRebalance(org.elasticsearch.cluster.routing.allocation.ConcurrentRebalanceRoutingTests)",
     "methodName": "testClusterConcurrentRebalance",
     "className": "org.elasticsearch.cluster.routing.allocation.ConcurrentRebalanceRoutingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195645180
 }
]

[
 "TEST_STARTED",
 "ID#testClusterConcurrentRebalance(org.elasticsearch.cluster.routing.allocation.ConcurrentRebalanceRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:25,231][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:25,236][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start two nodes and fully start the shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:25,237][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:25,238][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start 8 more nodes, and check that no rebalancing/relocation have happened%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:25,248][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards, rebalancing should start, but, only 3 should be rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:25,255][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][1], [test][3], [test][4], [test][2], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:25,255][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] finalize this session relocation, 3 more should relocate now%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:25,256][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] finalize this session relocation, 2 more should relocate now%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:25,257][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] finalize this session relocation, no more relocation%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterConcurrentRebalance(org.elasticsearch.cluster.routing.allocation.ConcurrentRebalanceRoutingTests)",
  "startTimestamp": 1474195645221,
  "executionTime": 36
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.ConcurrentRebalanceRoutingTests",
  "startTimestamp": 1474195645180,
  "executionTime": 119
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.SpanOrQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.SpanOrQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.SpanOrQueryBuilderTests",
   "children": [
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.SpanOrQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.SpanOrQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.SpanOrQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.SpanOrQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.SpanOrQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.SpanOrQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.SpanOrQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.SpanOrQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.SpanOrQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.SpanOrQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testClausesUnmodifiable(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "displayName": "testClausesUnmodifiable(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "methodName": "testClausesUnmodifiable",
     "className": "org.elasticsearch.index.query.SpanOrQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195645306
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.SpanOrQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:25,368][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Pjww85HAQPSf54zZyscIsg}{local}{local[254]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:25,376][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:25,376][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
  "startTimestamp": 1474195645334,
  "executionTime": 106
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanOrQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
  "startTimestamp": 1474195645441,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanOrQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
  "startTimestamp": 1474195645448,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.SpanOrQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
  "startTimestamp": 1474195645457,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.SpanOrQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
  "startTimestamp": 1474195645459,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.SpanOrQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
  "startTimestamp": 1474195645465,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.SpanOrQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
  "startTimestamp": 1474195645469,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.SpanOrQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
  "startTimestamp": 1474195645471,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanOrQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
  "startTimestamp": 1474195645474,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.SpanOrQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
  "startTimestamp": 1474195645477,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testClausesUnmodifiable(org.elasticsearch.index.query.SpanOrQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClausesUnmodifiable(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
  "startTimestamp": 1474195645504,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.SpanOrQueryBuilderTests",
  "startTimestamp": 1474195645306,
  "executionTime": 205
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
   "children": [
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArgument(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testIllegalArgument(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testIllegalArgument",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnsupportedInnerQueryType(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testUnsupportedInnerQueryType(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testUnsupportedInnerQueryType",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryInnerSpanMultiTerm(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testToQueryInnerSpanMultiTerm(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testToQueryInnerSpanMultiTerm",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195645518
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:47:25,642][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{92DauPQYT0qxrfdNvQVxGA}{local}{local[255]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:47:25,649][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:47:25,649][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:47:25,674][WARN ][org.elasticsearch.deprecation.index.mapper]  [FyRntt] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:47:25,674][WARN ][org.elasticsearch.deprecation.index.mapper]  [FyRntt] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:47:25,674][WARN ][org.elasticsearch.deprecation.index.mapper]  [FyRntt] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:47:25,676][WARN ][org.elasticsearch.deprecation.index.mapper]  [FyRntt] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:47:25,676][WARN ][org.elasticsearch.deprecation.index.mapper]  [FyRntt] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:47:25,679][WARN ][org.elasticsearch.deprecation.index.mapper]  [FyRntt] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:47:25,683][WARN ][org.elasticsearch.deprecation.index.mapper]  [FyRntt] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:47:25,684][WARN ][org.elasticsearch.deprecation.index.mapper]  [FyRntt] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:47:25,684][WARN ][org.elasticsearch.deprecation.index.mapper]  [FyRntt] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:47:25,685][WARN ][org.elasticsearch.deprecation.index.mapper]  [FyRntt] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:47:25,686][WARN ][org.elasticsearch.deprecation.index.mapper]  [FyRntt] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:47:25,686][WARN ][org.elasticsearch.deprecation.index.mapper]  [FyRntt] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:47:25,688][WARN ][org.elasticsearch.deprecation.index.mapper]  [FyRntt] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:47:25,688][WARN ][org.elasticsearch.deprecation.index.mapper]  [FyRntt] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:47:25,688][WARN ][org.elasticsearch.deprecation.index.mapper]  [FyRntt] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:47:25,691][WARN ][org.elasticsearch.deprecation.index.mapper]  [FyRntt] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:47:25,691][WARN ][org.elasticsearch.deprecation.index.mapper]  [FyRntt] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:47:25,691][WARN ][org.elasticsearch.deprecation.index.mapper]  [FyRntt] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:47:25,693][WARN ][org.elasticsearch.deprecation.index.mapper]  [FyRntt] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:47:25,693][WARN ][org.elasticsearch.deprecation.index.mapper]  [FyRntt] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:47:25,693][WARN ][org.elasticsearch.deprecation.index.mapper]  [FyRntt] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:47:25,696][WARN ][org.elasticsearch.deprecation.index.mapper]  [FyRntt] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:47:25,697][WARN ][org.elasticsearch.deprecation.index.mapper]  [FyRntt] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:47:25,697][WARN ][org.elasticsearch.deprecation.index.mapper]  [FyRntt] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:47:25,701][WARN ][org.elasticsearch.deprecation.index.mapper]  [FyRntt] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:47:25,701][WARN ][org.elasticsearch.deprecation.index.mapper]  [FyRntt] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:47:25,701][WARN ][org.elasticsearch.deprecation.index.mapper]  [FyRntt] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1474195645634,
  "executionTime": 133
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1474195645767,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1474195645770,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1474195645778,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1474195645783,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1474195645798,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1474195645801,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArgument(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArgument(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1474195645803,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1474195645807,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1474195645809,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testUnsupportedInnerQueryType(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnsupportedInnerQueryType(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1474195645814,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryInnerSpanMultiTerm(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryInnerSpanMultiTerm(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1474195645817,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
  "startTimestamp": 1474195645518,
  "executionTime": 307
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.nested.NestedAggregatorTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.nested.NestedAggregatorTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.nested.NestedAggregatorTests",
   "children": [
    {
     "id": "ID#testResetRootDocId(org.elasticsearch.search.aggregations.bucket.nested.NestedAggregatorTests)",
     "displayName": "testResetRootDocId(org.elasticsearch.search.aggregations.bucket.nested.NestedAggregatorTests)",
     "methodName": "testResetRootDocId",
     "className": "org.elasticsearch.search.aggregations.bucket.nested.NestedAggregatorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195645830
 }
]

[
 "TEST_STARTED",
 "ID#testResetRootDocId(org.elasticsearch.search.aggregations.bucket.nested.NestedAggregatorTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:25,862][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:25,921][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:25,922][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:25,926][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[8784], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:25,929][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:25,929][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:26,041][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:26,041][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:26,042][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[100]}, bound_addresses {local[100]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:26,046][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{l6sYNvNORI2jFXwhsH6Fog}{MDsu-OXtTyuqMHDiCJ1TuA}{local}{local[100]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:26,047][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:26,074][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:26,101][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:26,159][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:26,602][INFO ][org.elasticsearch.search.aggregations.bucket.nested] [NestedAggregatorTests#testResetRootDocId]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResetRootDocId(org.elasticsearch.search.aggregations.bucket.nested.NestedAggregatorTests)",
  "startTimestamp": 1474195645852,
  "executionTime": 779
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:26,632][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:26,632][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:26,633][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:17:26,634][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.nested.NestedAggregatorTests",
  "startTimestamp": 1474195645830,
  "executionTime": 812
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.GeoHashTests",
   "displayName": "org.elasticsearch.common.geo.GeoHashTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.GeoHashTests",
   "children": [
    {
     "id": "ID#testGeohashAsLongRoutines(org.elasticsearch.common.geo.GeoHashTests)",
     "displayName": "testGeohashAsLongRoutines(org.elasticsearch.common.geo.GeoHashTests)",
     "methodName": "testGeohashAsLongRoutines",
     "className": "org.elasticsearch.common.geo.GeoHashTests",
     "children": []
    },
    {
     "id": "ID#testBboxFromHash(org.elasticsearch.common.geo.GeoHashTests)",
     "displayName": "testBboxFromHash(org.elasticsearch.common.geo.GeoHashTests)",
     "methodName": "testBboxFromHash",
     "className": "org.elasticsearch.common.geo.GeoHashTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195646647
 }
]

[
 "TEST_STARTED",
 "ID#testGeohashAsLongRoutines(org.elasticsearch.common.geo.GeoHashTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeohashAsLongRoutines(org.elasticsearch.common.geo.GeoHashTests)",
  "startTimestamp": 1474195646659,
  "executionTime": 458
 }
]

[
 "TEST_STARTED",
 "ID#testBboxFromHash(org.elasticsearch.common.geo.GeoHashTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBboxFromHash(org.elasticsearch.common.geo.GeoHashTests)",
  "startTimestamp": 1474195647117,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.GeoHashTests",
  "startTimestamp": 1474195646647,
  "executionTime": 498
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.ingest.IngestActionFilterTests",
   "displayName": "org.elasticsearch.action.ingest.IngestActionFilterTests",
   "methodName": null,
   "className": "org.elasticsearch.action.ingest.IngestActionFilterTests",
   "children": [
    {
     "id": "ID#testApplyExecuted(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "displayName": "testApplyExecuted(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "methodName": "testApplyExecuted",
     "className": "org.elasticsearch.action.ingest.IngestActionFilterTests",
     "children": []
    },
    {
     "id": "ID#testApplyIngestIdViaRequestParam(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "displayName": "testApplyIngestIdViaRequestParam(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "methodName": "testApplyIngestIdViaRequestParam",
     "className": "org.elasticsearch.action.ingest.IngestActionFilterTests",
     "children": []
    },
    {
     "id": "ID#testApplyBulkNoPipelineId(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "displayName": "testApplyBulkNoPipelineId(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "methodName": "testApplyBulkNoPipelineId",
     "className": "org.elasticsearch.action.ingest.IngestActionFilterTests",
     "children": []
    },
    {
     "id": "ID#testApplyWithBulkRequest(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "displayName": "testApplyWithBulkRequest(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "methodName": "testApplyWithBulkRequest",
     "className": "org.elasticsearch.action.ingest.IngestActionFilterTests",
     "children": []
    },
    {
     "id": "ID#testApplyNoPipelineId(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "displayName": "testApplyNoPipelineId(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "methodName": "testApplyNoPipelineId",
     "className": "org.elasticsearch.action.ingest.IngestActionFilterTests",
     "children": []
    },
    {
     "id": "ID#testIndexApiSinglePipelineExecution(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "displayName": "testIndexApiSinglePipelineExecution(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "methodName": "testIndexApiSinglePipelineExecution",
     "className": "org.elasticsearch.action.ingest.IngestActionFilterTests",
     "children": []
    },
    {
     "id": "ID#testApplyFailed(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "displayName": "testApplyFailed(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "methodName": "testApplyFailed",
     "className": "org.elasticsearch.action.ingest.IngestActionFilterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195647153
 }
]

[
 "TEST_STARTED",
 "ID#testApplyExecuted(org.elasticsearch.action.ingest.IngestActionFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testApplyExecuted(org.elasticsearch.action.ingest.IngestActionFilterTests)",
  "startTimestamp": 1474195647174,
  "executionTime": 142
 }
]

[
 "TEST_STARTED",
 "ID#testApplyIngestIdViaRequestParam(org.elasticsearch.action.ingest.IngestActionFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testApplyIngestIdViaRequestParam(org.elasticsearch.action.ingest.IngestActionFilterTests)",
  "startTimestamp": 1474195647316,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testApplyBulkNoPipelineId(org.elasticsearch.action.ingest.IngestActionFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testApplyBulkNoPipelineId(org.elasticsearch.action.ingest.IngestActionFilterTests)",
  "startTimestamp": 1474195647320,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testApplyWithBulkRequest(org.elasticsearch.action.ingest.IngestActionFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testApplyWithBulkRequest(org.elasticsearch.action.ingest.IngestActionFilterTests)",
  "startTimestamp": 1474195647325,
  "executionTime": 111
 }
]

[
 "TEST_STARTED",
 "ID#testApplyNoPipelineId(org.elasticsearch.action.ingest.IngestActionFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testApplyNoPipelineId(org.elasticsearch.action.ingest.IngestActionFilterTests)",
  "startTimestamp": 1474195647437,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testIndexApiSinglePipelineExecution(org.elasticsearch.action.ingest.IngestActionFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexApiSinglePipelineExecution(org.elasticsearch.action.ingest.IngestActionFilterTests)",
  "startTimestamp": 1474195647450,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testApplyFailed(org.elasticsearch.action.ingest.IngestActionFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testApplyFailed(org.elasticsearch.action.ingest.IngestActionFilterTests)",
  "startTimestamp": 1474195647459,
  "executionTime": 11
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.ingest.IngestActionFilterTests",
  "startTimestamp": 1474195647153,
  "executionTime": 319
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.sort.SortBuilderTests",
   "displayName": "org.elasticsearch.search.sort.SortBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.sort.SortBuilderTests",
   "children": [
    {
     "id": "ID#testMultiFieldSort(org.elasticsearch.search.sort.SortBuilderTests)",
     "displayName": "testMultiFieldSort(org.elasticsearch.search.sort.SortBuilderTests)",
     "methodName": "testMultiFieldSort",
     "className": "org.elasticsearch.search.sort.SortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSingleFieldSort(org.elasticsearch.search.sort.SortBuilderTests)",
     "displayName": "testSingleFieldSort(org.elasticsearch.search.sort.SortBuilderTests)",
     "methodName": "testSingleFieldSort",
     "className": "org.elasticsearch.search.sort.SortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRandomSortBuilders(org.elasticsearch.search.sort.SortBuilderTests)",
     "displayName": "testRandomSortBuilders(org.elasticsearch.search.sort.SortBuilderTests)",
     "methodName": "testRandomSortBuilders",
     "className": "org.elasticsearch.search.sort.SortBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195647479
 }
]

[
 "TEST_STARTED",
 "ID#testMultiFieldSort(org.elasticsearch.search.sort.SortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiFieldSort(org.elasticsearch.search.sort.SortBuilderTests)",
  "startTimestamp": 1474195647497,
  "executionTime": 31
 }
]

[
 "TEST_STARTED",
 "ID#testSingleFieldSort(org.elasticsearch.search.sort.SortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleFieldSort(org.elasticsearch.search.sort.SortBuilderTests)",
  "startTimestamp": 1474195647529,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testRandomSortBuilders(org.elasticsearch.search.sort.SortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomSortBuilders(org.elasticsearch.search.sort.SortBuilderTests)",
  "startTimestamp": 1474195647531,
  "executionTime": 34
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.sort.SortBuilderTests",
  "startTimestamp": 1474195647479,
  "executionTime": 88
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.monitor.os.OsProbeTests",
   "displayName": "org.elasticsearch.monitor.os.OsProbeTests",
   "methodName": null,
   "className": "org.elasticsearch.monitor.os.OsProbeTests",
   "children": [
    {
     "id": "ID#testOsStats(org.elasticsearch.monitor.os.OsProbeTests)",
     "displayName": "testOsStats(org.elasticsearch.monitor.os.OsProbeTests)",
     "methodName": "testOsStats",
     "className": "org.elasticsearch.monitor.os.OsProbeTests",
     "children": []
    },
    {
     "id": "ID#testOsInfo(org.elasticsearch.monitor.os.OsProbeTests)",
     "displayName": "testOsInfo(org.elasticsearch.monitor.os.OsProbeTests)",
     "methodName": "testOsInfo",
     "className": "org.elasticsearch.monitor.os.OsProbeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195647574
 }
]

[
 "TEST_STARTED",
 "ID#testOsStats(org.elasticsearch.monitor.os.OsProbeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOsStats(org.elasticsearch.monitor.os.OsProbeTests)",
  "startTimestamp": 1474195647604,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testOsInfo(org.elasticsearch.monitor.os.OsProbeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOsInfo(org.elasticsearch.monitor.os.OsProbeTests)",
  "startTimestamp": 1474195647607,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.monitor.os.OsProbeTests",
  "startTimestamp": 1474195647574,
  "executionTime": 37
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.snapshots.SnapshotRequestsTests",
   "displayName": "org.elasticsearch.snapshots.SnapshotRequestsTests",
   "methodName": null,
   "className": "org.elasticsearch.snapshots.SnapshotRequestsTests",
   "children": [
    {
     "id": "ID#testRestoreSnapshotRequestParsing(org.elasticsearch.snapshots.SnapshotRequestsTests)",
     "displayName": "testRestoreSnapshotRequestParsing(org.elasticsearch.snapshots.SnapshotRequestsTests)",
     "methodName": "testRestoreSnapshotRequestParsing",
     "className": "org.elasticsearch.snapshots.SnapshotRequestsTests",
     "children": []
    },
    {
     "id": "ID#testCreateSnapshotRequestParsing(org.elasticsearch.snapshots.SnapshotRequestsTests)",
     "displayName": "testCreateSnapshotRequestParsing(org.elasticsearch.snapshots.SnapshotRequestsTests)",
     "methodName": "testCreateSnapshotRequestParsing",
     "className": "org.elasticsearch.snapshots.SnapshotRequestsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195647617
 }
]

[
 "TEST_STARTED",
 "ID#testRestoreSnapshotRequestParsing(org.elasticsearch.snapshots.SnapshotRequestsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestoreSnapshotRequestParsing(org.elasticsearch.snapshots.SnapshotRequestsTests)",
  "startTimestamp": 1474195647650,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testCreateSnapshotRequestParsing(org.elasticsearch.snapshots.SnapshotRequestsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateSnapshotRequestParsing(org.elasticsearch.snapshots.SnapshotRequestsTests)",
  "startTimestamp": 1474195647658,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.snapshots.SnapshotRequestsTests",
  "startTimestamp": 1474195647617,
  "executionTime": 45
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests",
   "displayName": "org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests",
   "children": [
    {
     "id": "ID#testMinScoreAllExcluded(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)",
     "displayName": "testMinScoreAllExcluded(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)",
     "methodName": "testMinScoreAllExcluded",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests",
     "children": []
    },
    {
     "id": "ID#testTwoPhaseMinScore(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)",
     "displayName": "testTwoPhaseMinScore(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)",
     "methodName": "testTwoPhaseMinScore",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests",
     "children": []
    },
    {
     "id": "ID#testMinScoreAllIncluded(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)",
     "displayName": "testMinScoreAllIncluded(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)",
     "methodName": "testMinScoreAllIncluded",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195647674
 }
]

[
 "TEST_STARTED",
 "ID#testMinScoreAllExcluded(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinScoreAllExcluded(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)",
  "startTimestamp": 1474195648205,
  "executionTime": 396
 }
]

[
 "TEST_STARTED",
 "ID#testTwoPhaseMinScore(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTwoPhaseMinScore(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)",
  "startTimestamp": 1474195648602,
  "executionTime": 212
 }
]

[
 "TEST_STARTED",
 "ID#testMinScoreAllIncluded(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinScoreAllIncluded(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)",
  "startTimestamp": 1474195648814,
  "executionTime": 134
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests",
  "startTimestamp": 1474195647674,
  "executionTime": 1312
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.repositories.IndexIdTests",
   "displayName": "org.elasticsearch.repositories.IndexIdTests",
   "methodName": null,
   "className": "org.elasticsearch.repositories.IndexIdTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashCode(org.elasticsearch.repositories.IndexIdTests)",
     "displayName": "testEqualsAndHashCode(org.elasticsearch.repositories.IndexIdTests)",
     "methodName": "testEqualsAndHashCode",
     "className": "org.elasticsearch.repositories.IndexIdTests",
     "children": []
    },
    {
     "id": "ID#testXContent(org.elasticsearch.repositories.IndexIdTests)",
     "displayName": "testXContent(org.elasticsearch.repositories.IndexIdTests)",
     "methodName": "testXContent",
     "className": "org.elasticsearch.repositories.IndexIdTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.repositories.IndexIdTests)",
     "displayName": "testSerialization(org.elasticsearch.repositories.IndexIdTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.repositories.IndexIdTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195648992
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashCode(org.elasticsearch.repositories.IndexIdTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashCode(org.elasticsearch.repositories.IndexIdTests)",
  "startTimestamp": 1474195649082,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testXContent(org.elasticsearch.repositories.IndexIdTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testXContent(org.elasticsearch.repositories.IndexIdTests)",
  "startTimestamp": 1474195649086,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.repositories.IndexIdTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.repositories.IndexIdTests)",
  "startTimestamp": 1474195649088,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.repositories.IndexIdTests",
  "startTimestamp": 1474195648992,
  "executionTime": 100
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
   "displayName": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
   "children": [
    {
     "id": "ID#testNestedRangeQuery(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testNestedRangeQuery(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testNestedRangeQuery",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonCoerceFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testFromJsonCoerceFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testFromJsonCoerceFails",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonOptimizeBboxFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testFromJsonOptimizeBboxFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testFromJsonOptimizeBboxFails",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testInvalidTo(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testInvalidTo(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testInvalidTo",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonIgnoreMalformedFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testFromJsonIgnoreMalformedFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testFromJsonIgnoreMalformedFails",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testNullFieldName(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testNullFieldName(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testNullFieldName",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testInvalidFrom(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testInvalidFrom(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testInvalidFrom",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testIgnoreUnmapped(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testIgnoreUnmapped",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testInvalidDistanceUnit(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testInvalidDistanceUnit(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testInvalidDistanceUnit",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testInvalidGeoDistance(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testInvalidGeoDistance(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testInvalidGeoDistance",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testNoPoint(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testNoPoint(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testNoPoint",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195649108
 }
]

[
 "TEST_STARTED",
 "ID#testNestedRangeQuery(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:29,189][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{yzQ1NUjeRo6VJpnKUUsBoA}{local}{local[256]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:29,196][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:29,196][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:29,218][WARN ][org.elasticsearch.deprecation.index.mapper]  [IDsOWJA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:29,219][WARN ][org.elasticsearch.deprecation.index.mapper]  [IDsOWJA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:29,226][WARN ][org.elasticsearch.deprecation.index.mapper]  [IDsOWJA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:29,237][WARN ][org.elasticsearch.deprecation.index.mapper]  [IDsOWJA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:29,237][WARN ][org.elasticsearch.deprecation.index.mapper]  [IDsOWJA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:29,238][WARN ][org.elasticsearch.deprecation.index.mapper]  [IDsOWJA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:29,244][WARN ][org.elasticsearch.deprecation.index.mapper]  [IDsOWJA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:29,244][WARN ][org.elasticsearch.deprecation.index.mapper]  [IDsOWJA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:29,244][WARN ][org.elasticsearch.deprecation.index.mapper]  [IDsOWJA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:29,251][WARN ][org.elasticsearch.deprecation.index.mapper]  [IDsOWJA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:29,251][WARN ][org.elasticsearch.deprecation.index.mapper]  [IDsOWJA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:29,251][WARN ][org.elasticsearch.deprecation.index.mapper]  [IDsOWJA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:29,254][WARN ][org.elasticsearch.deprecation.index.mapper]  [IDsOWJA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:29,254][WARN ][org.elasticsearch.deprecation.index.mapper]  [IDsOWJA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:29,254][WARN ][org.elasticsearch.deprecation.index.mapper]  [IDsOWJA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:29,257][WARN ][org.elasticsearch.deprecation.index.mapper]  [IDsOWJA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:29,257][WARN ][org.elasticsearch.deprecation.index.mapper]  [IDsOWJA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:29,257][WARN ][org.elasticsearch.deprecation.index.mapper]  [IDsOWJA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedRangeQuery(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474195649165,
  "executionTime": 355
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474195649521,
  "executionTime": 53
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonCoerceFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonCoerceFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474195649575,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474195649578,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonOptimizeBboxFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonOptimizeBboxFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474195649582,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidTo(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidTo(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474195649586,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonIgnoreMalformedFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonIgnoreMalformedFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474195649589,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474195649599,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474195649605,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNullFieldName(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullFieldName(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474195649608,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474195649611,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidFrom(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidFrom(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474195649613,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474195649616,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474195649620,
  "executionTime": 67
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474195649687,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474195649690,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidDistanceUnit(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidDistanceUnit(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474195649694,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidGeoDistance(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidGeoDistance(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474195649698,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testNoPoint(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoPoint(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474195649702,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1474195649705,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
  "startTimestamp": 1474195649108,
  "executionTime": 607
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests",
   "children": [
    {
     "id": "ID#testReadFrom(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
     "displayName": "testReadFrom(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests",
     "children": []
    },
    {
     "id": "ID#testwriteTo(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
     "displayName": "testwriteTo(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
     "methodName": "testwriteTo",
     "className": "org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests",
     "children": []
    },
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests",
     "children": []
    },
    {
     "id": "ID#testInvalidReadFrom(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
     "displayName": "testInvalidReadFrom(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
     "methodName": "testInvalidReadFrom",
     "className": "org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195649723
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
  "startTimestamp": 1474195649940,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testwriteTo(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testwriteTo(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
  "startTimestamp": 1474195649942,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
  "startTimestamp": 1474195649944,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidReadFrom(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidReadFrom(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
  "startTimestamp": 1474195649946,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests",
  "startTimestamp": 1474195649723,
  "executionTime": 230
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.completion.GeoQueryContextTests",
   "displayName": "org.elasticsearch.search.suggest.completion.GeoQueryContextTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.completion.GeoQueryContextTests",
   "children": [
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.search.suggest.completion.GeoQueryContextTests",
     "children": []
    },
    {
     "id": "ID#testToXContext(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)",
     "displayName": "testToXContext(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)",
     "methodName": "testToXContext",
     "className": "org.elasticsearch.search.suggest.completion.GeoQueryContextTests",
     "children": []
    },
    {
     "id": "ID#testNullGeoPointIsIllegal(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)",
     "displayName": "testNullGeoPointIsIllegal(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)",
     "methodName": "testNullGeoPointIsIllegal",
     "className": "org.elasticsearch.search.suggest.completion.GeoQueryContextTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195649962
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)",
  "startTimestamp": 1474195650045,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testToXContext(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToXContext(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)",
  "startTimestamp": 1474195650053,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testNullGeoPointIsIllegal(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullGeoPointIsIllegal(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)",
  "startTimestamp": 1474195650061,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.completion.GeoQueryContextTests",
  "startTimestamp": 1474195649962,
  "executionTime": 104
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests",
   "displayName": "org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests",
   "children": [
    {
     "id": "ID#testDoRunOnlyRunsWhenNotStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)",
     "displayName": "testDoRunOnlyRunsWhenNotStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)",
     "methodName": "testDoRunOnlyRunsWhenNotStoppedOrClosed",
     "className": "org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests",
     "children": []
    },
    {
     "id": "ID#testOnAfterOnlyWhenNotStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)",
     "displayName": "testOnAfterOnlyWhenNotStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)",
     "methodName": "testOnAfterOnlyWhenNotStoppedOrClosed",
     "className": "org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests",
     "children": []
    },
    {
     "id": "ID#testOnAfterDoesNotHappenWhenStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)",
     "displayName": "testOnAfterDoesNotHappenWhenStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)",
     "methodName": "testOnAfterDoesNotHappenWhenStoppedOrClosed",
     "className": "org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests",
     "children": []
    },
    {
     "id": "ID#testDoRunDoesNotRunWhenStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)",
     "displayName": "testDoRunDoesNotRunWhenStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)",
     "methodName": "testDoRunDoesNotRunWhenStoppedOrClosed",
     "className": "org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195650104
 }
]

[
 "TEST_STARTED",
 "ID#testDoRunOnlyRunsWhenNotStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoRunOnlyRunsWhenNotStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)",
  "startTimestamp": 1474195650185,
  "executionTime": 164
 }
]

[
 "TEST_STARTED",
 "ID#testOnAfterOnlyWhenNotStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOnAfterOnlyWhenNotStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)",
  "startTimestamp": 1474195650349,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testOnAfterDoesNotHappenWhenStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOnAfterDoesNotHappenWhenStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)",
  "startTimestamp": 1474195650353,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDoRunDoesNotRunWhenStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoRunDoesNotRunWhenStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)",
  "startTimestamp": 1474195650356,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests",
  "startTimestamp": 1474195650104,
  "executionTime": 258
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.nodesinfo.NodeInfoStreamingTests",
   "displayName": "org.elasticsearch.nodesinfo.NodeInfoStreamingTests",
   "methodName": null,
   "className": "org.elasticsearch.nodesinfo.NodeInfoStreamingTests",
   "children": [
    {
     "id": "ID#testNodeInfoStreaming(org.elasticsearch.nodesinfo.NodeInfoStreamingTests)",
     "displayName": "testNodeInfoStreaming(org.elasticsearch.nodesinfo.NodeInfoStreamingTests)",
     "methodName": "testNodeInfoStreaming",
     "className": "org.elasticsearch.nodesinfo.NodeInfoStreamingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195650398
 }
]

[
 "TEST_STARTED",
 "ID#testNodeInfoStreaming(org.elasticsearch.nodesinfo.NodeInfoStreamingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNodeInfoStreaming(org.elasticsearch.nodesinfo.NodeInfoStreamingTests)",
  "startTimestamp": 1474195650426,
  "executionTime": 36
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.nodesinfo.NodeInfoStreamingTests",
  "startTimestamp": 1474195650398,
  "executionTime": 69
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.CJKFilterFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.CJKFilterFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.CJKFilterFactoryTests",
   "children": [
    {
     "id": "ID#testHanOnly(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
     "displayName": "testHanOnly(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
     "methodName": "testHanOnly",
     "className": "org.elasticsearch.index.analysis.CJKFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testNoFlags(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
     "displayName": "testNoFlags(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
     "methodName": "testNoFlags",
     "className": "org.elasticsearch.index.analysis.CJKFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testHanUnigramOnly(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
     "displayName": "testHanUnigramOnly(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
     "methodName": "testHanUnigramOnly",
     "className": "org.elasticsearch.index.analysis.CJKFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testDefault(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
     "displayName": "testDefault(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
     "methodName": "testDefault",
     "className": "org.elasticsearch.index.analysis.CJKFilterFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195650473
 }
]

[
 "TEST_STARTED",
 "ID#testHanOnly(org.elasticsearch.index.analysis.CJKFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHanOnly(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
  "startTimestamp": 1474195650560,
  "executionTime": 30
 }
]

[
 "TEST_STARTED",
 "ID#testNoFlags(org.elasticsearch.index.analysis.CJKFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoFlags(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
  "startTimestamp": 1474195650590,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testHanUnigramOnly(org.elasticsearch.index.analysis.CJKFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHanUnigramOnly(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
  "startTimestamp": 1474195650614,
  "executionTime": 37
 }
]

[
 "TEST_STARTED",
 "ID#testDefault(org.elasticsearch.index.analysis.CJKFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefault(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
  "startTimestamp": 1474195650651,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.CJKFilterFactoryTests",
  "startTimestamp": 1474195650473,
  "executionTime": 194
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
   "children": [
    {
     "id": "ID#testMoveShardCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "displayName": "testMoveShardCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "methodName": "testMoveShardCommand",
     "className": "org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
     "children": []
    },
    {
     "id": "ID#testXContent(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "displayName": "testXContent(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "methodName": "testXContent",
     "className": "org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
     "children": []
    },
    {
     "id": "ID#testAllocateCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "displayName": "testAllocateCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "methodName": "testAllocateCommand",
     "className": "org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "displayName": "testSerialization(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
     "children": []
    },
    {
     "id": "ID#testCancelCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "displayName": "testCancelCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "methodName": "testCancelCommand",
     "className": "org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195650696
 }
]

[
 "TEST_STARTED",
 "ID#testMoveShardCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,734][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] creating an index with 1 shard, no replica%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,735][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding two nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,736][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start primary shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,737][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,737][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] move the shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,740][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] finish moving the shard%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMoveShardCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
  "startTimestamp": 1474195650728,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testXContent(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testXContent(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
  "startTimestamp": 1474195650741,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testAllocateCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,780][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,781][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding 3 nodes on same rack and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,786][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocating to non-existent node, should fail%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,787][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocating to non-data node, should fail%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,787][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocating non-existing shard, should fail%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,787][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocating non-existing index, should fail%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,789][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocating empty primary with acceptDataLoss flag set to false%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,790][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocating stale primary with acceptDataLoss flag set to false%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,790][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocating empty primary with acceptDataLoss flag set to true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,795][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the primary shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,795][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,796][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocate the replica shard on the primary shard node, should fail%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,796][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocate the replica shard on on the second node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,800][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the replica shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,801][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,801][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> verify that we fail when there are no unassigned shards%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllocateCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
  "startTimestamp": 1474195650765,
  "executionTime": 36
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
  "startTimestamp": 1474195650802,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCancelCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,810][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,810][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding 3 nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,810][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,811][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocating empty primary shard with accept_data_loss flag set to true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,812][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> cancel primary allocation, make sure it fails...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,812][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the primary shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,813][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,813][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> cancel primary allocation, make sure it fails...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,814][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocate the replica shard on on the second node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,814][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> cancel the relocation allocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,814][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocate the replica shard on on the second node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,815][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> cancel the primary being replicated, make sure it fails%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,815][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the replica shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,816][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,816][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> cancel allocation of the replica shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,818][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute commands]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,818][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocate the replica shard on on the second node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,819][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the replica shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,820][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,820][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> move the replica shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,820][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> cancel the move of the replica shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,821][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> move the replica shard again%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,822][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> cancel the source replica shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,823][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute commands]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,823][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the former target replica shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,823][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,824][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> cancel the primary allocation (with allow_primary set to true)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,825][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute commands]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCancelCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
  "startTimestamp": 1474195650804,
  "executionTime": 21
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
  "startTimestamp": 1474195650696,
  "executionTime": 134
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.rescore.QueryRescoreModeTests",
   "displayName": "org.elasticsearch.search.rescore.QueryRescoreModeTests",
   "methodName": null,
   "className": "org.elasticsearch.search.rescore.QueryRescoreModeTests",
   "children": [
    {
     "id": "ID#testQueryRescoreMode(org.elasticsearch.search.rescore.QueryRescoreModeTests)",
     "displayName": "testQueryRescoreMode(org.elasticsearch.search.rescore.QueryRescoreModeTests)",
     "methodName": "testQueryRescoreMode",
     "className": "org.elasticsearch.search.rescore.QueryRescoreModeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195650837
 }
]

[
 "TEST_STARTED",
 "ID#testQueryRescoreMode(org.elasticsearch.search.rescore.QueryRescoreModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryRescoreMode(org.elasticsearch.search.rescore.QueryRescoreModeTests)",
  "startTimestamp": 1474195650962,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.rescore.QueryRescoreModeTests",
  "startTimestamp": 1474195650837,
  "executionTime": 129
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.bootstrap.MaxMapCountCheckTests",
   "displayName": "org.elasticsearch.bootstrap.MaxMapCountCheckTests",
   "methodName": null,
   "className": "org.elasticsearch.bootstrap.MaxMapCountCheckTests",
   "children": [
    {
     "id": "ID#testGetMaxMapCountOnLinux(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
     "displayName": "testGetMaxMapCountOnLinux(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
     "methodName": "testGetMaxMapCountOnLinux",
     "className": "org.elasticsearch.bootstrap.MaxMapCountCheckTests",
     "children": []
    },
    {
     "id": "ID#testMaxMapCountCheckRead(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
     "displayName": "testMaxMapCountCheckRead(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
     "methodName": "testMaxMapCountCheckRead",
     "className": "org.elasticsearch.bootstrap.MaxMapCountCheckTests",
     "children": []
    },
    {
     "id": "ID#testMaxMapCountCheckParse(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
     "displayName": "testMaxMapCountCheckParse(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
     "methodName": "testMaxMapCountCheckParse",
     "className": "org.elasticsearch.bootstrap.MaxMapCountCheckTests",
     "children": []
    },
    {
     "id": "ID#testGetMaxMapCount(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
     "displayName": "testGetMaxMapCount(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
     "methodName": "testGetMaxMapCount",
     "className": "org.elasticsearch.bootstrap.MaxMapCountCheckTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195651045
 }
]

[
 "TEST_STARTED",
 "ID#testGetMaxMapCountOnLinux(org.elasticsearch.bootstrap.MaxMapCountCheckTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetMaxMapCountOnLinux(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
  "startTimestamp": 1474195651061,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testMaxMapCountCheckRead(org.elasticsearch.bootstrap.MaxMapCountCheckTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMaxMapCountCheckRead(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
  "startTimestamp": 1474195651065,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testMaxMapCountCheckParse(org.elasticsearch.bootstrap.MaxMapCountCheckTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMaxMapCountCheckParse(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
  "startTimestamp": 1474195651087,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testGetMaxMapCount(org.elasticsearch.bootstrap.MaxMapCountCheckTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 03:47:31,124 TEST-MaxMapCountCheckTests.testGetMaxMapCount-seed#[FD13852EF36FC81C] ERROR Attempted to append to non-started appender mock"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 03:47:31,129 TEST-MaxMapCountCheckTests.testGetMaxMapCount-seed#[FD13852EF36FC81C] ERROR Attempted to append to non-started appender mock"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetMaxMapCount(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
  "startTimestamp": 1474195651089,
  "executionTime": 42
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.bootstrap.MaxMapCountCheckTests",
  "startTimestamp": 1474195651045,
  "executionTime": 93
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests",
   "children": [
    {
     "id": "ID#testSortedBinaryRangeLeafCollectorSingleValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
     "displayName": "testSortedBinaryRangeLeafCollectorSingleValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
     "methodName": "testSortedBinaryRangeLeafCollectorSingleValued",
     "className": "org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests",
     "children": []
    },
    {
     "id": "ID#testSortedSetRangeLeafCollectorSingleValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
     "displayName": "testSortedSetRangeLeafCollectorSingleValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
     "methodName": "testSortedSetRangeLeafCollectorSingleValued",
     "className": "org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests",
     "children": []
    },
    {
     "id": "ID#testSortedSetRangeLeafCollectorMultiValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
     "displayName": "testSortedSetRangeLeafCollectorMultiValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
     "methodName": "testSortedSetRangeLeafCollectorMultiValued",
     "className": "org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests",
     "children": []
    },
    {
     "id": "ID#testSortedBinaryRangeLeafCollectorMultiValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
     "displayName": "testSortedBinaryRangeLeafCollectorMultiValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
     "methodName": "testSortedBinaryRangeLeafCollectorMultiValued",
     "className": "org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195651241
 }
]

[
 "TEST_STARTED",
 "ID#testSortedBinaryRangeLeafCollectorSingleValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortedBinaryRangeLeafCollectorSingleValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
  "startTimestamp": 1474195651281,
  "executionTime": 58
 }
]

[
 "TEST_STARTED",
 "ID#testSortedSetRangeLeafCollectorSingleValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortedSetRangeLeafCollectorSingleValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
  "startTimestamp": 1474195651340,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSortedSetRangeLeafCollectorMultiValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortedSetRangeLeafCollectorMultiValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
  "startTimestamp": 1474195651346,
  "executionTime": 33
 }
]

[
 "TEST_STARTED",
 "ID#testSortedBinaryRangeLeafCollectorMultiValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortedBinaryRangeLeafCollectorMultiValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
  "startTimestamp": 1474195651379,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests",
  "startTimestamp": 1474195651241,
  "executionTime": 148
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.search.nested.DoubleNestedSortingTests",
   "displayName": "org.elasticsearch.index.search.nested.DoubleNestedSortingTests",
   "methodName": null,
   "className": "org.elasticsearch.index.search.nested.DoubleNestedSortingTests",
   "children": [
    {
     "id": "ID#testNestedSorting(org.elasticsearch.index.search.nested.DoubleNestedSortingTests)",
     "displayName": "testNestedSorting(org.elasticsearch.index.search.nested.DoubleNestedSortingTests)",
     "methodName": "testNestedSorting",
     "className": "org.elasticsearch.index.search.nested.DoubleNestedSortingTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.index.search.nested.DoubleNestedSortingTests)",
     "displayName": "testEmpty(org.elasticsearch.index.search.nested.DoubleNestedSortingTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.index.search.nested.DoubleNestedSortingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195651403
 }
]

[
 "TEST_STARTED",
 "ID#testNestedSorting(org.elasticsearch.index.search.nested.DoubleNestedSortingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,451][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,477][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,477][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,495][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[8784], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,497][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,497][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,619][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,619][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,619][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[101]}, bound_addresses {local[101]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,725][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{Mgh3P-3IQj-13SALJMm0HA}{xCOKQ8nzSO-XYbubXvhVew}{local}{local[101]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,726][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,797][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,818][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,974][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:32,154][INFO ][org.elasticsearch.index.search.nested] [DoubleNestedSortingTests#testNestedSorting]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedSorting(org.elasticsearch.index.search.nested.DoubleNestedSortingTests)",
  "startTimestamp": 1474195651427,
  "executionTime": 760
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.index.search.nested.DoubleNestedSortingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:32,193][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:32,272][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:32,297][INFO ][org.elasticsearch.index.search.nested] [DoubleNestedSortingTests#testEmpty]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.index.search.nested.DoubleNestedSortingTests)",
  "startTimestamp": 1474195652187,
  "executionTime": 142
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:32,329][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:32,330][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:32,330][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:32,331][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.search.nested.DoubleNestedSortingTests",
  "startTimestamp": 1474195651403,
  "executionTime": 945
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.ExternalFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.ExternalFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.ExternalFieldMapperTests",
   "children": [
    {
     "id": "ID#testExternalValues(org.elasticsearch.index.mapper.ExternalFieldMapperTests)",
     "displayName": "testExternalValues(org.elasticsearch.index.mapper.ExternalFieldMapperTests)",
     "methodName": "testExternalValues",
     "className": "org.elasticsearch.index.mapper.ExternalFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testExternalValuesWithMultifieldTwoLevels(org.elasticsearch.index.mapper.ExternalFieldMapperTests)",
     "displayName": "testExternalValuesWithMultifieldTwoLevels(org.elasticsearch.index.mapper.ExternalFieldMapperTests)",
     "methodName": "testExternalValuesWithMultifieldTwoLevels",
     "className": "org.elasticsearch.index.mapper.ExternalFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testExternalValuesWithMultifield(org.elasticsearch.index.mapper.ExternalFieldMapperTests)",
     "displayName": "testExternalValuesWithMultifield(org.elasticsearch.index.mapper.ExternalFieldMapperTests)",
     "methodName": "testExternalValuesWithMultifield",
     "className": "org.elasticsearch.index.mapper.ExternalFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195652354
 }
]

[
 "TEST_STARTED",
 "ID#testExternalValues(org.elasticsearch.index.mapper.ExternalFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:32,422][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:32,461][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:32,462][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:32,478][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[8784], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:32,480][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:32,481][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:32,631][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:32,631][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:32,632][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[102]}, bound_addresses {local[102]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:32,633][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{KRXB9zxhRlix3OrAg2Tgnw}{zp6bD89bQwKBtA08afJMSw}{local}{local[102]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:32,634][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:32,649][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:32,667][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:32,713][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:32,756][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ExternalFieldMapperTests#testExternalValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExternalValues(org.elasticsearch.index.mapper.ExternalFieldMapperTests)",
  "startTimestamp": 1474195652383,
  "executionTime": 428
 }
]

[
 "TEST_STARTED",
 "ID#testExternalValuesWithMultifieldTwoLevels(org.elasticsearch.index.mapper.ExternalFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:32,818][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:32,863][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:32,880][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ExternalFieldMapperTests#testExternalValuesWithMultifieldTwoLevels]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExternalValuesWithMultifieldTwoLevels(org.elasticsearch.index.mapper.ExternalFieldMapperTests)",
  "startTimestamp": 1474195652811,
  "executionTime": 106
 }
]

[
 "TEST_STARTED",
 "ID#testExternalValuesWithMultifield(org.elasticsearch.index.mapper.ExternalFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:32,924][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:32,993][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:33,009][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ExternalFieldMapperTests#testExternalValuesWithMultifield]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExternalValuesWithMultifield(org.elasticsearch.index.mapper.ExternalFieldMapperTests)",
  "startTimestamp": 1474195652918,
  "executionTime": 125
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:33,043][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:33,044][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:33,044][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:33,046][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.ExternalFieldMapperTests",
  "startTimestamp": 1474195652354,
  "executionTime": 698
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
   "children": [
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBadAnalyzer(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testBadAnalyzer(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testBadAnalyzer",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalValues(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testIllegalValues(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testIllegalValues",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testPhraseMatchQuery(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testPhraseMatchQuery(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testPhraseMatchQuery",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testParseFailsWithMultipleFields(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testParseFailsWithMultipleFields",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195653059
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:47:33,088][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{B2oM81gQTDaeQM1DToXGbg}{local}{local[269]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:47:33,095][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:47:33,095][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:47:33,112][WARN ][org.elasticsearch.deprecation.index.mapper]  [WXrq] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:47:33,112][WARN ][org.elasticsearch.deprecation.index.mapper]  [WXrq] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:47:33,112][WARN ][org.elasticsearch.deprecation.index.mapper]  [WXrq] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:47:33,114][WARN ][org.elasticsearch.deprecation.index.mapper]  [WXrq] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:47:33,114][WARN ][org.elasticsearch.deprecation.index.mapper]  [WXrq] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:47:33,114][WARN ][org.elasticsearch.deprecation.index.mapper]  [WXrq] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:47:33,117][WARN ][org.elasticsearch.deprecation.index.mapper]  [WXrq] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:47:33,117][WARN ][org.elasticsearch.deprecation.index.mapper]  [WXrq] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:47:33,117][WARN ][org.elasticsearch.deprecation.index.mapper]  [WXrq] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1474195653080,
  "executionTime": 73
 }
]

[
 "TEST_STARTED",
 "ID#testBadAnalyzer(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBadAnalyzer(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1474195653153,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1474195653156,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1474195653159,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1474195653162,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1474195653186,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1474195653201,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalValues(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalValues(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1474195653204,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1474195653206,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1474195653209,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testPhraseMatchQuery(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPhraseMatchQuery(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1474195653211,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1474195653214,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
  "startTimestamp": 1474195653059,
  "executionTime": 165
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.RangeQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.RangeQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
   "children": [
    {
     "id": "ID#testToQueryUnmappedWithTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testToQueryUnmappedWithTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testToQueryUnmappedWithTimezone",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDateRangeQueryFormat(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testDateRangeQueryFormat(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testDateRangeQueryFormat",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNamedQueryParsing(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testNamedQueryParsing(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testNamedQueryParsing",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDateRangeQueryTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testDateRangeQueryTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testDateRangeQueryTimezone",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRewriteOpenBoundsToSame(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testRewriteOpenBoundsToSame(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testRewriteOpenBoundsToSame",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testParseFailsWithMultipleFields(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testParseFailsWithMultipleFields",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRewriteDateToMatchNone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testRewriteDateToMatchNone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testRewriteDateToMatchNone",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRewriteDateToMatchAll(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testRewriteDateToMatchAll(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testRewriteDateToMatchAll",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryNonDateWithTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testToQueryNonDateWithTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testToQueryNonDateWithTimezone",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryNumericField(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testToQueryNumericField(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testToQueryNumericField",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRewriteDateToSame(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testRewriteDateToSame(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testRewriteDateToSame",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDateRangeBoundaries(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testDateRangeBoundaries(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testDateRangeBoundaries",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195653235
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryUnmappedWithTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:17:33,262][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{ez43ttEiQt-gTgbUq--XnA}{local}{local[270]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:17:33,268][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:17:33,269][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:17:33,284][WARN ][org.elasticsearch.deprecation.index.mapper]  [APVBalYoiu] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:17:33,284][WARN ][org.elasticsearch.deprecation.index.mapper]  [APVBalYoiu] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:17:33,284][WARN ][org.elasticsearch.deprecation.index.mapper]  [APVBalYoiu] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:17:33,285][WARN ][org.elasticsearch.deprecation.index.mapper]  [APVBalYoiu] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:17:33,286][WARN ][org.elasticsearch.deprecation.index.mapper]  [APVBalYoiu] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:17:33,286][WARN ][org.elasticsearch.deprecation.index.mapper]  [APVBalYoiu] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:17:33,288][WARN ][org.elasticsearch.deprecation.index.mapper]  [APVBalYoiu] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:17:33,288][WARN ][org.elasticsearch.deprecation.index.mapper]  [APVBalYoiu] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:17:33,288][WARN ][org.elasticsearch.deprecation.index.mapper]  [APVBalYoiu] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:17:33,289][WARN ][org.elasticsearch.deprecation.index.mapper]  [APVBalYoiu] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:17:33,289][WARN ][org.elasticsearch.deprecation.index.mapper]  [APVBalYoiu] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:17:33,290][WARN ][org.elasticsearch.deprecation.index.mapper]  [APVBalYoiu] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:17:33,291][WARN ][org.elasticsearch.deprecation.index.mapper]  [APVBalYoiu] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:17:33,292][WARN ][org.elasticsearch.deprecation.index.mapper]  [APVBalYoiu] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:17:33,292][WARN ][org.elasticsearch.deprecation.index.mapper]  [APVBalYoiu] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:17:33,295][WARN ][org.elasticsearch.deprecation.index.mapper]  [APVBalYoiu] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:17:33,295][WARN ][org.elasticsearch.deprecation.index.mapper]  [APVBalYoiu] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:17:33,295][WARN ][org.elasticsearch.deprecation.index.mapper]  [APVBalYoiu] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:17:33,297][WARN ][org.elasticsearch.deprecation.index.mapper]  [APVBalYoiu] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:17:33,297][WARN ][org.elasticsearch.deprecation.index.mapper]  [APVBalYoiu] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:17:33,297][WARN ][org.elasticsearch.deprecation.index.mapper]  [APVBalYoiu] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:17:33,299][WARN ][org.elasticsearch.deprecation.index.mapper]  [APVBalYoiu] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:17:33,299][WARN ][org.elasticsearch.deprecation.index.mapper]  [APVBalYoiu] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:17:33,299][WARN ][org.elasticsearch.deprecation.index.mapper]  [APVBalYoiu] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:17:33,302][WARN ][org.elasticsearch.deprecation.index.mapper]  [APVBalYoiu] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:17:33,302][WARN ][org.elasticsearch.deprecation.index.mapper]  [APVBalYoiu] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:17:33,302][WARN ][org.elasticsearch.deprecation.index.mapper]  [APVBalYoiu] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryUnmappedWithTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474195653257,
  "executionTime": 47
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474195653304,
  "executionTime": 75
 }
]

[
 "TEST_STARTED",
 "ID#testDateRangeQueryFormat(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDateRangeQueryFormat(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474195653379,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testNamedQueryParsing(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNamedQueryParsing(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474195653399,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474195653402,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testDateRangeQueryTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDateRangeQueryTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474195653412,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474195653425,
  "executionTime": 41
 }
]

[
 "TEST_STARTED",
 "ID#testRewriteOpenBoundsToSame(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRewriteOpenBoundsToSame(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474195653467,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474195653469,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474195653472,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474195653474,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRewriteDateToMatchNone(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRewriteDateToMatchNone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474195653477,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRewriteDateToMatchAll(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRewriteDateToMatchAll(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474195653479,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474195653482,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryNonDateWithTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryNonDateWithTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474195653486,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryNumericField(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryNumericField(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474195653488,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474195653491,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474195653514,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474195653517,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474195653520,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testRewriteDateToSame(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRewriteDateToSame(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474195653538,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDateRangeBoundaries(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDateRangeBoundaries(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1474195653540,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.RangeQueryBuilderTests",
  "startTimestamp": 1474195653235,
  "executionTime": 321
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.ObjectParserTests",
   "displayName": "org.elasticsearch.common.xcontent.ObjectParserTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
   "children": [
    {
     "id": "ID#testFailOnValueType(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testFailOnValueType(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testFailOnValueType",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testAllVariants(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testAllVariants(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testAllVariants",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testParseNamedObjectNoFieldsInArray(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testParseNamedObjectNoFieldsInArray(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testParseNamedObjectNoFieldsInArray",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testParseNamedObjectInOrderNotSupported(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testParseNamedObjectInOrderNotSupported(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testParseNamedObjectInOrderNotSupported",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testExceptions(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testExceptions(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testExceptions",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testParseNamedObjectInOrder(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testParseNamedObjectInOrder(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testParseNamedObjectInOrder",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testObjectOrDefault(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testObjectOrDefault(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testObjectOrDefault",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testParseNamedObjectJunkInArray(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testParseNamedObjectJunkInArray(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testParseNamedObjectJunkInArray",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testParseNamedObjectTwoFieldsInArray(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testParseNamedObjectTwoFieldsInArray(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testParseNamedObjectTwoFieldsInArray",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testParseNestedShortcut(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testParseNestedShortcut(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testParseNestedShortcut",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testEmptyObject(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testEmptyObject(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testEmptyObject",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testDeprecationFail(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testDeprecationFail(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testDeprecationFail",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testEmptyObjectInArray(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testEmptyObjectInArray(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testEmptyObjectInArray",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testBasics(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testBasics(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testBasics",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testParseNamedObject(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testParseNamedObject(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testParseNamedObject",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testParseNested(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testParseNested(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testParseNested",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testParseEnumFromString(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testParseEnumFromString(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testParseEnumFromString",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195653567
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnValueType(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnValueType(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1474195653585,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testAllVariants(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllVariants(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1474195653588,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testParseNamedObjectNoFieldsInArray(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseNamedObjectNoFieldsInArray(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1474195653601,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testParseNamedObjectInOrderNotSupported(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseNamedObjectInOrderNotSupported(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1474195653607,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testExceptions(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExceptions(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1474195653609,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseNamedObjectInOrder(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseNamedObjectInOrder(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1474195653613,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testObjectOrDefault(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testObjectOrDefault(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1474195653615,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParseNamedObjectJunkInArray(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseNamedObjectJunkInArray(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1474195653619,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseNamedObjectTwoFieldsInArray(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseNamedObjectTwoFieldsInArray(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1474195653622,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseNestedShortcut(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseNestedShortcut(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1474195653624,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyObject(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyObject(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1474195653627,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDeprecationFail(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:33,631][WARN ][org.elasticsearch.deprecation.common] Deprecated field [old_test] used, expected [test] instead%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeprecationFail(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1474195653629,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyObjectInArray(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyObjectInArray(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1474195653632,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testBasics(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasics(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1474195653635,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseNamedObject(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseNamedObject(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1474195653638,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParseNested(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseNested(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1474195653643,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testParseEnumFromString(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseEnumFromString(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1474195653654,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.ObjectParserTests",
  "startTimestamp": 1474195653567,
  "executionTime": 92
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.update.UpdateRequestTests",
   "displayName": "org.elasticsearch.action.update.UpdateRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.update.UpdateRequestTests",
   "children": [
    {
     "id": "ID#testInvalidBodyThrowsParseException(org.elasticsearch.action.update.UpdateRequestTests)",
     "displayName": "testInvalidBodyThrowsParseException(org.elasticsearch.action.update.UpdateRequestTests)",
     "methodName": "testInvalidBodyThrowsParseException",
     "className": "org.elasticsearch.action.update.UpdateRequestTests",
     "children": []
    },
    {
     "id": "ID#testUpdateRequestWithTTL(org.elasticsearch.action.update.UpdateRequestTests)",
     "displayName": "testUpdateRequestWithTTL(org.elasticsearch.action.update.UpdateRequestTests)",
     "methodName": "testUpdateRequestWithTTL",
     "className": "org.elasticsearch.action.update.UpdateRequestTests",
     "children": []
    },
    {
     "id": "ID#testUpdateRequest(org.elasticsearch.action.update.UpdateRequestTests)",
     "displayName": "testUpdateRequest(org.elasticsearch.action.update.UpdateRequestTests)",
     "methodName": "testUpdateRequest",
     "className": "org.elasticsearch.action.update.UpdateRequestTests",
     "children": []
    },
    {
     "id": "ID#testFieldsParsing(org.elasticsearch.action.update.UpdateRequestTests)",
     "displayName": "testFieldsParsing(org.elasticsearch.action.update.UpdateRequestTests)",
     "methodName": "testFieldsParsing",
     "className": "org.elasticsearch.action.update.UpdateRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195653665
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidBodyThrowsParseException(org.elasticsearch.action.update.UpdateRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidBodyThrowsParseException(org.elasticsearch.action.update.UpdateRequestTests)",
  "startTimestamp": 1474195653696,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUpdateRequestWithTTL(org.elasticsearch.action.update.UpdateRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdateRequestWithTTL(org.elasticsearch.action.update.UpdateRequestTests)",
  "startTimestamp": 1474195653698,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testUpdateRequest(org.elasticsearch.action.update.UpdateRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdateRequest(org.elasticsearch.action.update.UpdateRequestTests)",
  "startTimestamp": 1474195653702,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFieldsParsing(org.elasticsearch.action.update.UpdateRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldsParsing(org.elasticsearch.action.update.UpdateRequestTests)",
  "startTimestamp": 1474195653704,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.update.UpdateRequestTests",
  "startTimestamp": 1474195653665,
  "executionTime": 46
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.ArrayUtilsTests",
   "displayName": "org.elasticsearch.common.util.ArrayUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.ArrayUtilsTests",
   "children": [
    {
     "id": "ID#testConcat(org.elasticsearch.common.util.ArrayUtilsTests)",
     "displayName": "testConcat(org.elasticsearch.common.util.ArrayUtilsTests)",
     "methodName": "testConcat",
     "className": "org.elasticsearch.common.util.ArrayUtilsTests",
     "children": []
    },
    {
     "id": "ID#testBinarySearch(org.elasticsearch.common.util.ArrayUtilsTests)",
     "displayName": "testBinarySearch(org.elasticsearch.common.util.ArrayUtilsTests)",
     "methodName": "testBinarySearch",
     "className": "org.elasticsearch.common.util.ArrayUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195653717
 }
]

[
 "TEST_STARTED",
 "ID#testConcat(org.elasticsearch.common.util.ArrayUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcat(org.elasticsearch.common.util.ArrayUtilsTests)",
  "startTimestamp": 1474195653756,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testBinarySearch(org.elasticsearch.common.util.ArrayUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBinarySearch(org.elasticsearch.common.util.ArrayUtilsTests)",
  "startTimestamp": 1474195653786,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.ArrayUtilsTests",
  "startTimestamp": 1474195653717,
  "executionTime": 74
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.BytesRefHashTests",
   "displayName": "org.elasticsearch.common.util.BytesRefHashTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.BytesRefHashTests",
   "children": [
    {
     "id": "ID#testFind(org.elasticsearch.common.util.BytesRefHashTests)",
     "displayName": "testFind(org.elasticsearch.common.util.BytesRefHashTests)",
     "methodName": "testFind",
     "className": "org.elasticsearch.common.util.BytesRefHashTests",
     "children": []
    },
    {
     "id": "ID#testSize(org.elasticsearch.common.util.BytesRefHashTests)",
     "displayName": "testSize(org.elasticsearch.common.util.BytesRefHashTests)",
     "methodName": "testSize",
     "className": "org.elasticsearch.common.util.BytesRefHashTests",
     "children": []
    },
    {
     "id": "ID#testAdd(org.elasticsearch.common.util.BytesRefHashTests)",
     "displayName": "testAdd(org.elasticsearch.common.util.BytesRefHashTests)",
     "methodName": "testAdd",
     "className": "org.elasticsearch.common.util.BytesRefHashTests",
     "children": []
    },
    {
     "id": "ID#testGet(org.elasticsearch.common.util.BytesRefHashTests)",
     "displayName": "testGet(org.elasticsearch.common.util.BytesRefHashTests)",
     "methodName": "testGet",
     "className": "org.elasticsearch.common.util.BytesRefHashTests",
     "children": []
    },
    {
     "id": "ID#testDuell(org.elasticsearch.common.util.BytesRefHashTests)",
     "displayName": "testDuell(org.elasticsearch.common.util.BytesRefHashTests)",
     "methodName": "testDuell",
     "className": "org.elasticsearch.common.util.BytesRefHashTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195653802
 }
]

[
 "TEST_STARTED",
 "ID#testFind(org.elasticsearch.common.util.BytesRefHashTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:33,828][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:33,851][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:33,851][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:33,864][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[8784], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:33,867][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:33,867][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:33,968][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:33,968][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:33,969][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[103]}, bound_addresses {local[103]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:33,973][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{Eoh7OJr0R8uKBx7tY9zf-A}{vR8ZAra_Qe2T4DJiZB3mvA}{local}{local[103]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:33,974][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:33,989][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:34,335][INFO ][org.elasticsearch.common.util] [node_s_0] [BytesRefHashTests#testFind]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFind(org.elasticsearch.common.util.BytesRefHashTests)",
  "startTimestamp": 1474195653820,
  "executionTime": 516
 }
]

[
 "TEST_STARTED",
 "ID#testSize(org.elasticsearch.common.util.BytesRefHashTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:35,204][INFO ][org.elasticsearch.common.util] [node_s_0] [BytesRefHashTests#testSize]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSize(org.elasticsearch.common.util.BytesRefHashTests)",
  "startTimestamp": 1474195654337,
  "executionTime": 868
 }
]

[
 "TEST_STARTED",
 "ID#testAdd(org.elasticsearch.common.util.BytesRefHashTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:35,848][INFO ][org.elasticsearch.common.util] [node_s_0] [BytesRefHashTests#testAdd]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAdd(org.elasticsearch.common.util.BytesRefHashTests)",
  "startTimestamp": 1474195655205,
  "executionTime": 644
 }
]

[
 "TEST_STARTED",
 "ID#testGet(org.elasticsearch.common.util.BytesRefHashTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:36,351][INFO ][org.elasticsearch.common.util] [node_s_0] [BytesRefHashTests#testGet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGet(org.elasticsearch.common.util.BytesRefHashTests)",
  "startTimestamp": 1474195655849,
  "executionTime": 503
 }
]

[
 "TEST_STARTED",
 "ID#testDuell(org.elasticsearch.common.util.BytesRefHashTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:37,664][INFO ][org.elasticsearch.common.util] [node_s_0] [BytesRefHashTests#testDuell]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuell(org.elasticsearch.common.util.BytesRefHashTests)",
  "startTimestamp": 1474195656352,
  "executionTime": 1313
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:37,666][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:37,668][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:37,668][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:37,669][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.BytesRefHashTests",
  "startTimestamp": 1474195653802,
  "executionTime": 3959
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.ingest.SimulateExecutionServiceTests",
   "displayName": "org.elasticsearch.action.ingest.SimulateExecutionServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.action.ingest.SimulateExecutionServiceTests",
   "children": [
    {
     "id": "ID#testExecuteItemWithFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
     "displayName": "testExecuteItemWithFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
     "methodName": "testExecuteItemWithFailure",
     "className": "org.elasticsearch.action.ingest.SimulateExecutionServiceTests",
     "children": []
    },
    {
     "id": "ID#testExecuteVerboseItemExceptionWithIgnoreFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
     "displayName": "testExecuteVerboseItemExceptionWithIgnoreFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
     "methodName": "testExecuteVerboseItemExceptionWithIgnoreFailure",
     "className": "org.elasticsearch.action.ingest.SimulateExecutionServiceTests",
     "children": []
    },
    {
     "id": "ID#testExecuteItem(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
     "displayName": "testExecuteItem(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
     "methodName": "testExecuteItem",
     "className": "org.elasticsearch.action.ingest.SimulateExecutionServiceTests",
     "children": []
    },
    {
     "id": "ID#testExecuteVerboseItemWithOnFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
     "displayName": "testExecuteVerboseItemWithOnFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
     "methodName": "testExecuteVerboseItemWithOnFailure",
     "className": "org.elasticsearch.action.ingest.SimulateExecutionServiceTests",
     "children": []
    },
    {
     "id": "ID#testExecuteVerboseItemExceptionWithoutOnFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
     "displayName": "testExecuteVerboseItemExceptionWithoutOnFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
     "methodName": "testExecuteVerboseItemExceptionWithoutOnFailure",
     "className": "org.elasticsearch.action.ingest.SimulateExecutionServiceTests",
     "children": []
    },
    {
     "id": "ID#testExecuteVerboseItemWithoutExceptionAndWithIgnoreFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
     "displayName": "testExecuteVerboseItemWithoutExceptionAndWithIgnoreFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
     "methodName": "testExecuteVerboseItemWithoutExceptionAndWithIgnoreFailure",
     "className": "org.elasticsearch.action.ingest.SimulateExecutionServiceTests",
     "children": []
    },
    {
     "id": "ID#testExecuteVerboseItem(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
     "displayName": "testExecuteVerboseItem(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
     "methodName": "testExecuteVerboseItem",
     "className": "org.elasticsearch.action.ingest.SimulateExecutionServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195657768
 }
]

[
 "TEST_STARTED",
 "ID#testExecuteItemWithFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExecuteItemWithFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
  "startTimestamp": 1474195657782,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testExecuteVerboseItemExceptionWithIgnoreFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExecuteVerboseItemExceptionWithIgnoreFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
  "startTimestamp": 1474195657788,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testExecuteItem(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExecuteItem(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
  "startTimestamp": 1474195657794,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testExecuteVerboseItemWithOnFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExecuteVerboseItemWithOnFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
  "startTimestamp": 1474195657797,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testExecuteVerboseItemExceptionWithoutOnFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExecuteVerboseItemExceptionWithoutOnFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
  "startTimestamp": 1474195657806,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testExecuteVerboseItemWithoutExceptionAndWithIgnoreFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExecuteVerboseItemWithoutExceptionAndWithIgnoreFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
  "startTimestamp": 1474195657822,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testExecuteVerboseItem(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExecuteVerboseItem(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
  "startTimestamp": 1474195657826,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.ingest.SimulateExecutionServiceTests",
  "startTimestamp": 1474195657768,
  "executionTime": 69
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.search.TransportMultiSearchActionTests",
   "displayName": "org.elasticsearch.action.search.TransportMultiSearchActionTests",
   "methodName": null,
   "className": "org.elasticsearch.action.search.TransportMultiSearchActionTests",
   "children": [
    {
     "id": "ID#testDefaultMaxConcurrentSearches(org.elasticsearch.action.search.TransportMultiSearchActionTests)",
     "displayName": "testDefaultMaxConcurrentSearches(org.elasticsearch.action.search.TransportMultiSearchActionTests)",
     "methodName": "testDefaultMaxConcurrentSearches",
     "className": "org.elasticsearch.action.search.TransportMultiSearchActionTests",
     "children": []
    },
    {
     "id": "ID#testBatchExecute(org.elasticsearch.action.search.TransportMultiSearchActionTests)",
     "displayName": "testBatchExecute(org.elasticsearch.action.search.TransportMultiSearchActionTests)",
     "methodName": "testBatchExecute",
     "className": "org.elasticsearch.action.search.TransportMultiSearchActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195657844
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultMaxConcurrentSearches(org.elasticsearch.action.search.TransportMultiSearchActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultMaxConcurrentSearches(org.elasticsearch.action.search.TransportMultiSearchActionTests)",
  "startTimestamp": 1474195657874,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBatchExecute(org.elasticsearch.action.search.TransportMultiSearchActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBatchExecute(org.elasticsearch.action.search.TransportMultiSearchActionTests)",
  "startTimestamp": 1474195657877,
  "executionTime": 6265
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.search.TransportMultiSearchActionTests",
  "startTimestamp": 1474195657844,
  "executionTime": 6300
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.VersionTests",
   "displayName": "org.elasticsearch.VersionTests",
   "methodName": null,
   "className": "org.elasticsearch.VersionTests",
   "children": [
    {
     "id": "ID#testMinCompatVersion(org.elasticsearch.VersionTests)",
     "displayName": "testMinCompatVersion(org.elasticsearch.VersionTests)",
     "methodName": "testMinCompatVersion",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testAllVersionsMatchId(org.elasticsearch.VersionTests)",
     "displayName": "testAllVersionsMatchId(org.elasticsearch.VersionTests)",
     "methodName": "testAllVersionsMatchId",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testVersionConstantPresent(org.elasticsearch.VersionTests)",
     "displayName": "testVersionConstantPresent(org.elasticsearch.VersionTests)",
     "methodName": "testVersionConstantPresent",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testTooShortVersionFromString(org.elasticsearch.VersionTests)",
     "displayName": "testTooShortVersionFromString(org.elasticsearch.VersionTests)",
     "methodName": "testTooShortVersionFromString",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testLuceneVersionIsSameOnMinorRelease(org.elasticsearch.VersionTests)",
     "displayName": "testLuceneVersionIsSameOnMinorRelease(org.elasticsearch.VersionTests)",
     "methodName": "testLuceneVersionIsSameOnMinorRelease",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testTooLongVersionFromString(org.elasticsearch.VersionTests)",
     "displayName": "testTooLongVersionFromString(org.elasticsearch.VersionTests)",
     "methodName": "testTooLongVersionFromString",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testParseLenient(org.elasticsearch.VersionTests)",
     "displayName": "testParseLenient(org.elasticsearch.VersionTests)",
     "methodName": "testParseLenient",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testVersionComparison(org.elasticsearch.VersionTests)",
     "displayName": "testVersionComparison(org.elasticsearch.VersionTests)",
     "methodName": "testVersionComparison",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testVersionFromString(org.elasticsearch.VersionTests)",
     "displayName": "testVersionFromString(org.elasticsearch.VersionTests)",
     "methodName": "testVersionFromString",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testWrongVersionFromString(org.elasticsearch.VersionTests)",
     "displayName": "testWrongVersionFromString(org.elasticsearch.VersionTests)",
     "methodName": "testWrongVersionFromString",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testIsAlpha(org.elasticsearch.VersionTests)",
     "displayName": "testIsAlpha(org.elasticsearch.VersionTests)",
     "methodName": "testIsAlpha",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testIndexCreatedVersion(org.elasticsearch.VersionTests)",
     "displayName": "testIndexCreatedVersion(org.elasticsearch.VersionTests)",
     "methodName": "testIndexCreatedVersion",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testIsBeta(org.elasticsearch.VersionTests)",
     "displayName": "testIsBeta(org.elasticsearch.VersionTests)",
     "methodName": "testIsBeta",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testCURRENTIsLatest(org.elasticsearch.VersionTests)",
     "displayName": "testCURRENTIsLatest(org.elasticsearch.VersionTests)",
     "methodName": "testCURRENTIsLatest",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testToString(org.elasticsearch.VersionTests)",
     "displayName": "testToString(org.elasticsearch.VersionTests)",
     "methodName": "testToString",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testVersionNoPresentInSettings(org.elasticsearch.VersionTests)",
     "displayName": "testVersionNoPresentInSettings(org.elasticsearch.VersionTests)",
     "methodName": "testVersionNoPresentInSettings",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testParseVersion(org.elasticsearch.VersionTests)",
     "displayName": "testParseVersion(org.elasticsearch.VersionTests)",
     "methodName": "testParseVersion",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195664152
 }
]

[
 "TEST_STARTED",
 "ID#testMinCompatVersion(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinCompatVersion(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474195664193,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAllVersionsMatchId(org.elasticsearch.VersionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:44,197][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.0.0-beta1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:44,210][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.0.0-beta2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:44,210][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.0.0-rc1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:44,210][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.0.0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:44,210][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.0.1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:44,211][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.0.2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:44,211][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.1.0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:44,211][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.1.1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:44,211][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.1.2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:44,211][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.2.0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:44,211][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.2.1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:44,211][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.2.2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:44,211][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.3.0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:44,211][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.3.1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:44,211][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.3.2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:44,211][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.3.3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:44,211][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.3.4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:44,211][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.3.5%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:44,211][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.4.0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:44,211][INFO ][org.elasticsearch.org.elasticsearch] Checking 5.0.0-alpha1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:44,211][INFO ][org.elasticsearch.org.elasticsearch] Checking 5.0.0-alpha2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:44,212][INFO ][org.elasticsearch.org.elasticsearch] Checking 5.0.0-alpha3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:44,212][INFO ][org.elasticsearch.org.elasticsearch] Checking 5.0.0-alpha4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:44,212][INFO ][org.elasticsearch.org.elasticsearch] Checking 5.0.0-alpha5%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:44,212][INFO ][org.elasticsearch.org.elasticsearch] Checking 5.0.0-alpha6%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllVersionsMatchId(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474195664195,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testVersionConstantPresent(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionConstantPresent(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474195664212,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTooShortVersionFromString(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTooShortVersionFromString(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474195664214,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testLuceneVersionIsSameOnMinorRelease(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLuceneVersionIsSameOnMinorRelease(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474195664216,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTooLongVersionFromString(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTooLongVersionFromString(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474195664218,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseLenient(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseLenient(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474195664220,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testVersionComparison(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionComparison(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474195664224,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testVersionFromString(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionFromString(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474195664232,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testWrongVersionFromString(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWrongVersionFromString(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474195664237,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsAlpha(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsAlpha(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474195664239,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIndexCreatedVersion(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexCreatedVersion(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474195664241,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsBeta(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsBeta(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474195664243,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCURRENTIsLatest(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCURRENTIsLatest(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474195664245,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToString(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToString(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474195664247,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testVersionNoPresentInSettings(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionNoPresentInSettings(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474195664249,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseVersion(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseVersion(org.elasticsearch.VersionTests)",
  "startTimestamp": 1474195664252,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.VersionTests",
  "startTimestamp": 1474195664152,
  "executionTime": 105
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests",
   "displayName": "org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests",
   "methodName": null,
   "className": "org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests",
   "children": [
    {
     "id": "ID#testShouldIgnoreNewClusterState(org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests)",
     "displayName": "testShouldIgnoreNewClusterState(org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests)",
     "methodName": "testShouldIgnoreNewClusterState",
     "className": "org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests",
     "children": []
    },
    {
     "id": "ID#testFilterNonMasterPingResponse(org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests)",
     "displayName": "testFilterNonMasterPingResponse(org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests)",
     "methodName": "testFilterNonMasterPingResponse",
     "className": "org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195664264
 }
]

[
 "TEST_STARTED",
 "ID#testShouldIgnoreNewClusterState(org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:47:44,358][WARN ][org.elasticsearch.discovery.zen] received a cluster state from a different master than the current one, rejecting (received {a}{UdjOmhRvQpSJ-E3xSLOnnw}{local}{local[272]}, current {b}{4VHSNOJHT4uedkBCkXQt6A}{local}{local[273]})%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShouldIgnoreNewClusterState(org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests)",
  "startTimestamp": 1474195664356,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFilterNonMasterPingResponse(org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterNonMasterPingResponse(org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests)",
  "startTimestamp": 1474195664360,
  "executionTime": 20
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests",
  "startTimestamp": 1474195664264,
  "executionTime": 118
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.FieldDataTests",
   "displayName": "org.elasticsearch.index.fielddata.FieldDataTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.FieldDataTests",
   "children": [
    {
     "id": "ID#testSortableLongBitsToDoubles(org.elasticsearch.index.fielddata.FieldDataTests)",
     "displayName": "testSortableLongBitsToDoubles(org.elasticsearch.index.fielddata.FieldDataTests)",
     "methodName": "testSortableLongBitsToDoubles",
     "className": "org.elasticsearch.index.fielddata.FieldDataTests",
     "children": []
    },
    {
     "id": "ID#testDoublesToSortableLongBits(org.elasticsearch.index.fielddata.FieldDataTests)",
     "displayName": "testDoublesToSortableLongBits(org.elasticsearch.index.fielddata.FieldDataTests)",
     "methodName": "testDoublesToSortableLongBits",
     "className": "org.elasticsearch.index.fielddata.FieldDataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195664398
 }
]

[
 "TEST_STARTED",
 "ID#testSortableLongBitsToDoubles(org.elasticsearch.index.fielddata.FieldDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortableLongBitsToDoubles(org.elasticsearch.index.fielddata.FieldDataTests)",
  "startTimestamp": 1474195664418,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDoublesToSortableLongBits(org.elasticsearch.index.fielddata.FieldDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoublesToSortableLongBits(org.elasticsearch.index.fielddata.FieldDataTests)",
  "startTimestamp": 1474195664421,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.FieldDataTests",
  "startTimestamp": 1474195664398,
  "executionTime": 26
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests",
   "displayName": "org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests",
   "methodName": null,
   "className": "org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests",
   "children": [
    {
     "id": "ID#testConcurrentAccess(org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests)",
     "displayName": "testConcurrentAccess(org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests)",
     "methodName": "testConcurrentAccess",
     "className": "org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195664429
 }
]

[
 "TEST_STARTED",
 "ID#testConcurrentAccess(org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcurrentAccess(org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests)",
  "startTimestamp": 1474195664456,
  "executionTime": 27
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests",
  "startTimestamp": 1474195664429,
  "executionTime": 56
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.discovery.zen.ElectMasterServiceTests",
   "displayName": "org.elasticsearch.discovery.zen.ElectMasterServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.discovery.zen.ElectMasterServiceTests",
   "children": [
    {
     "id": "ID#testSortByMasterLikelihood(org.elasticsearch.discovery.zen.ElectMasterServiceTests)",
     "displayName": "testSortByMasterLikelihood(org.elasticsearch.discovery.zen.ElectMasterServiceTests)",
     "methodName": "testSortByMasterLikelihood",
     "className": "org.elasticsearch.discovery.zen.ElectMasterServiceTests",
     "children": []
    },
    {
     "id": "ID#testElectMaster(org.elasticsearch.discovery.zen.ElectMasterServiceTests)",
     "displayName": "testElectMaster(org.elasticsearch.discovery.zen.ElectMasterServiceTests)",
     "methodName": "testElectMaster",
     "className": "org.elasticsearch.discovery.zen.ElectMasterServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195664490
 }
]

[
 "TEST_STARTED",
 "ID#testSortByMasterLikelihood(org.elasticsearch.discovery.zen.ElectMasterServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortByMasterLikelihood(org.elasticsearch.discovery.zen.ElectMasterServiceTests)",
  "startTimestamp": 1474195664514,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testElectMaster(org.elasticsearch.discovery.zen.ElectMasterServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testElectMaster(org.elasticsearch.discovery.zen.ElectMasterServiceTests)",
  "startTimestamp": 1474195664520,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.discovery.zen.ElectMasterServiceTests",
  "startTimestamp": 1474195664490,
  "executionTime": 34
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.shard.NewPathForShardTests",
   "displayName": "org.elasticsearch.index.shard.NewPathForShardTests",
   "methodName": null,
   "className": "org.elasticsearch.index.shard.NewPathForShardTests",
   "children": [
    {
     "id": "ID#testSelectNewPathForShard(org.elasticsearch.index.shard.NewPathForShardTests)",
     "displayName": "testSelectNewPathForShard(org.elasticsearch.index.shard.NewPathForShardTests)",
     "methodName": "testSelectNewPathForShard",
     "className": "org.elasticsearch.index.shard.NewPathForShardTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195664532
 }
]

[
 "TEST_STARTED",
 "ID#testSelectNewPathForShard(org.elasticsearch.index.shard.NewPathForShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:47:44,599][INFO ][org.elasticsearch.env    ] [hDvn4dI] using [2] data paths, mounts [[mocka, mockb]], net usable_space [0b], net total_space [0b], spins? [unknown], types [mock]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:47:44,601][INFO ][org.elasticsearch.env    ] [hDvn4dI] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSelectNewPathForShard(org.elasticsearch.index.shard.NewPathForShardTests)",
  "startTimestamp": 1474195664563,
  "executionTime": 46
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.shard.NewPathForShardTests",
  "startTimestamp": 1474195664532,
  "executionTime": 85
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.LongObjectHashMapTests",
   "displayName": "org.elasticsearch.common.util.LongObjectHashMapTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.LongObjectHashMapTests",
   "children": [
    {
     "id": "ID#testDuel(org.elasticsearch.common.util.LongObjectHashMapTests)",
     "displayName": "testDuel(org.elasticsearch.common.util.LongObjectHashMapTests)",
     "methodName": "testDuel",
     "className": "org.elasticsearch.common.util.LongObjectHashMapTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195664622
 }
]

[
 "TEST_STARTED",
 "ID#testDuel(org.elasticsearch.common.util.LongObjectHashMapTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:44,661][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:44,712][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:44,713][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:44,720][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[8784], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:44,723][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:44,723][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:44,838][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:44,838][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:44,839][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[104]}, bound_addresses {local[104]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:44,840][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{GNpZYz7OSHmMn-f4AkNcDw}{1e2xsZpORPaHzMOsDFiEeQ}{local}{local[104]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:44,841][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:44,853][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:45,984][INFO ][org.elasticsearch.common.util] [node_s_0] [LongObjectHashMapTests#testDuel]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuel(org.elasticsearch.common.util.LongObjectHashMapTests)",
  "startTimestamp": 1474195664645,
  "executionTime": 1340
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:45,985][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:45,986][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:45,986][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:45,987][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.LongObjectHashMapTests",
  "startTimestamp": 1474195664622,
  "executionTime": 1374
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
   "children": [
    {
     "id": "ID#testStemEnglishPossessive(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testStemEnglishPossessive(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testStemEnglishPossessive",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testPreserveOriginal(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testPreserveOriginal(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testPreserveOriginal",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCatenateWords(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testCatenateWords(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testCatenateWords",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCatenateNumbers(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testCatenateNumbers(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testCatenateNumbers",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testSplitOnCaseChange(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testSplitOnCaseChange(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testSplitOnCaseChange",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testDefault(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testDefault(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testDefault",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testPartsAndCatenate(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testPartsAndCatenate(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testPartsAndCatenate",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCatenateAll(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testCatenateAll(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testCatenateAll",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195666000
 }
]

[
 "TEST_STARTED",
 "ID#testStemEnglishPossessive(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStemEnglishPossessive(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1474195666012,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testPreserveOriginal(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreserveOriginal(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1474195666020,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testCatenateWords(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCatenateWords(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1474195666026,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testCatenateNumbers(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCatenateNumbers(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1474195666032,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testSplitOnCaseChange(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSplitOnCaseChange(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1474195666039,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testDefault(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefault(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1474195666046,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testPartsAndCatenate(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPartsAndCatenate(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1474195666055,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testCatenateAll(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCatenateAll(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1474195666062,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
  "startTimestamp": 1474195666000,
  "executionTime": 77
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.recovery.RecoveryStatusTests",
   "displayName": "org.elasticsearch.indices.recovery.RecoveryStatusTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.recovery.RecoveryStatusTests",
   "children": [
    {
     "id": "ID#testRenameTempFiles(org.elasticsearch.indices.recovery.RecoveryStatusTests)",
     "displayName": "testRenameTempFiles(org.elasticsearch.indices.recovery.RecoveryStatusTests)",
     "methodName": "testRenameTempFiles",
     "className": "org.elasticsearch.indices.recovery.RecoveryStatusTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195666083
 }
]

[
 "TEST_STARTED",
 "ID#testRenameTempFiles(org.elasticsearch.indices.recovery.RecoveryStatusTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:46,105][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:46,133][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:46,133][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:46,137][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[8784], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:46,139][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:46,139][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:46,226][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:46,226][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:46,227][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[105]}, bound_addresses {local[105]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:46,227][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{Xwxbsn7-Rb6G1tc97vBLiA}{fBSjrZT3S5-3PX1bt3Irhg}{local}{local[105]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:46,228][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:46,240][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:46,257][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [foo] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:46,331][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[foo][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:46,378][INFO ][org.elasticsearch.indices.recovery] [node_s_0] [foo][0] [RecoveryStatusTests#testRenameTempFiles]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRenameTempFiles(org.elasticsearch.indices.recovery.RecoveryStatusTests)",
  "startTimestamp": 1474195666098,
  "executionTime": 304
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:46,403][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:46,403][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:46,403][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:46,405][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.recovery.RecoveryStatusTests",
  "startTimestamp": 1474195666083,
  "executionTime": 328
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.FiltersTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.FiltersTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.FiltersTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.FiltersTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.FiltersTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.FiltersTests",
     "children": []
    },
    {
     "id": "ID#testFiltersSortedByKey(org.elasticsearch.search.aggregations.metrics.FiltersTests)",
     "displayName": "testFiltersSortedByKey(org.elasticsearch.search.aggregations.metrics.FiltersTests)",
     "methodName": "testFiltersSortedByKey",
     "className": "org.elasticsearch.search.aggregations.metrics.FiltersTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.FiltersTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.FiltersTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.FiltersTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.FiltersTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.FiltersTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.FiltersTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195666417
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:46,447][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Gl4Q2ccjT_Ga1KjaSqbG4Q}{local}{local[354]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.FiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.FiltersTests)",
  "startTimestamp": 1474195666459,
  "executionTime": 30
 }
]

[
 "TEST_STARTED",
 "ID#testFiltersSortedByKey(org.elasticsearch.search.aggregations.metrics.FiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFiltersSortedByKey(org.elasticsearch.search.aggregations.metrics.FiltersTests)",
  "startTimestamp": 1474195666489,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.FiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.FiltersTests)",
  "startTimestamp": 1474195666492,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.FiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.FiltersTests)",
  "startTimestamp": 1474195666494,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.FiltersTests",
  "startTimestamp": 1474195666417,
  "executionTime": 85
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.GeoShapeFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.GeoShapeFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.GeoShapeFieldMapperTests",
   "children": [
    {
     "id": "ID#testEmptyName(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "displayName": "testEmptyName(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "methodName": "testEmptyName",
     "className": "org.elasticsearch.index.mapper.GeoShapeFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLevelDefaults(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "displayName": "testLevelDefaults(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "methodName": "testLevelDefaults",
     "className": "org.elasticsearch.index.mapper.GeoShapeFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testGeohashConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "displayName": "testGeohashConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "methodName": "testGeohashConfiguration",
     "className": "org.elasticsearch.index.mapper.GeoShapeFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testGeoShapeMapperMerge(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "displayName": "testGeoShapeMapperMerge(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "methodName": "testGeoShapeMapperMerge",
     "className": "org.elasticsearch.index.mapper.GeoShapeFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testQuadtreeConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "displayName": "testQuadtreeConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "methodName": "testQuadtreeConfiguration",
     "className": "org.elasticsearch.index.mapper.GeoShapeFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testOrientationParsing(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "displayName": "testOrientationParsing(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "methodName": "testOrientationParsing",
     "className": "org.elasticsearch.index.mapper.GeoShapeFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaultConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "displayName": "testDefaultConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "methodName": "testDefaultConfiguration",
     "className": "org.elasticsearch.index.mapper.GeoShapeFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testCoerceParsing(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "displayName": "testCoerceParsing(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "methodName": "testCoerceParsing",
     "className": "org.elasticsearch.index.mapper.GeoShapeFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testPointsOnlyOption(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "displayName": "testPointsOnlyOption(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "methodName": "testPointsOnlyOption",
     "className": "org.elasticsearch.index.mapper.GeoShapeFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLevelPrecisionConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "displayName": "testLevelPrecisionConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "methodName": "testLevelPrecisionConfiguration",
     "className": "org.elasticsearch.index.mapper.GeoShapeFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195666509
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyName(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:46,541][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:46,583][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:46,583][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:46,587][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[8784], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:46,589][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:46,589][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:46,690][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:46,690][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:46,691][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[106]}, bound_addresses {local[106]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:46,699][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{wIgdHlcDRYKE7K42sl4oRg}{dnm9U62IRv2CPETDv2vdew}{local}{local[106]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:46,701][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:46,724][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:46,742][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:46,820][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:46,838][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_old] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:46,902][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_old][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:46,915][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test_old] [GeoShapeFieldMapperTests#testEmptyName]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyName(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
  "startTimestamp": 1474195666530,
  "executionTime": 442
 }
]

[
 "TEST_STARTED",
 "ID#testLevelDefaults(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:46,978][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:47,046][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:47,072][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoShapeFieldMapperTests#testLevelDefaults]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLevelDefaults(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
  "startTimestamp": 1474195666972,
  "executionTime": 136
 }
]

[
 "TEST_STARTED",
 "ID#testGeohashConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:47,114][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:47,169][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:47,183][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoShapeFieldMapperTests#testGeohashConfiguration]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeohashConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
  "startTimestamp": 1474195667108,
  "executionTime": 109
 }
]

[
 "TEST_STARTED",
 "ID#testGeoShapeMapperMerge(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:47,223][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:47,301][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:47,321][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoShapeFieldMapperTests#testGeoShapeMapperMerge]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoShapeMapperMerge(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
  "startTimestamp": 1474195667217,
  "executionTime": 153
 }
]

[
 "TEST_STARTED",
 "ID#testQuadtreeConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:47,376][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:47,459][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:47,588][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoShapeFieldMapperTests#testQuadtreeConfiguration]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQuadtreeConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
  "startTimestamp": 1474195667370,
  "executionTime": 260
 }
]

[
 "TEST_STARTED",
 "ID#testOrientationParsing(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:47,636][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:47,784][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:47,800][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:47,860][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:47,875][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test2] [GeoShapeFieldMapperTests#testOrientationParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOrientationParsing(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
  "startTimestamp": 1474195667631,
  "executionTime": 304
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:47,941][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:48,004][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:48,018][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoShapeFieldMapperTests#testDefaultConfiguration]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
  "startTimestamp": 1474195667936,
  "executionTime": 131
 }
]

[
 "TEST_STARTED",
 "ID#testCoerceParsing(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:48,073][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:48,122][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:48,139][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:48,201][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:48,216][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test2] [GeoShapeFieldMapperTests#testCoerceParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCoerceParsing(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
  "startTimestamp": 1474195668067,
  "executionTime": 197
 }
]

[
 "TEST_STARTED",
 "ID#testPointsOnlyOption(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:48,271][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:48,338][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:48,351][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoShapeFieldMapperTests#testPointsOnlyOption]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPointsOnlyOption(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
  "startTimestamp": 1474195668265,
  "executionTime": 116
 }
]

[
 "TEST_STARTED",
 "ID#testLevelPrecisionConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:48,387][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:48,441][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:48,460][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoShapeFieldMapperTests#testLevelPrecisionConfiguration]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLevelPrecisionConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
  "startTimestamp": 1474195668381,
  "executionTime": 125
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:48,507][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:48,507][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:48,508][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:48,510][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.GeoShapeFieldMapperTests",
  "startTimestamp": 1474195666509,
  "executionTime": 2018
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.fieldcomparator.ReplaceMissingTests",
   "displayName": "org.elasticsearch.index.fielddata.fieldcomparator.ReplaceMissingTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.fieldcomparator.ReplaceMissingTests",
   "children": [
    {
     "id": "ID#test(org.elasticsearch.index.fielddata.fieldcomparator.ReplaceMissingTests)",
     "displayName": "test(org.elasticsearch.index.fielddata.fieldcomparator.ReplaceMissingTests)",
     "methodName": "test",
     "className": "org.elasticsearch.index.fielddata.fieldcomparator.ReplaceMissingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195668560
 }
]

[
 "TEST_STARTED",
 "ID#test(org.elasticsearch.index.fielddata.fieldcomparator.ReplaceMissingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#test(org.elasticsearch.index.fielddata.fieldcomparator.ReplaceMissingTests)",
  "startTimestamp": 1474195668582,
  "executionTime": 50
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.fieldcomparator.ReplaceMissingTests",
  "startTimestamp": 1474195668560,
  "executionTime": 74
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.ScoreModeTests",
   "displayName": "org.elasticsearch.index.query.ScoreModeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.ScoreModeTests",
   "children": [
    {
     "id": "ID#testReadFrom(org.elasticsearch.index.query.ScoreModeTests)",
     "displayName": "testReadFrom(org.elasticsearch.index.query.ScoreModeTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.index.query.ScoreModeTests",
     "children": []
    },
    {
     "id": "ID#testWriteTo(org.elasticsearch.index.query.ScoreModeTests)",
     "displayName": "testWriteTo(org.elasticsearch.index.query.ScoreModeTests)",
     "methodName": "testWriteTo",
     "className": "org.elasticsearch.index.query.ScoreModeTests",
     "children": []
    },
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.index.query.ScoreModeTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.index.query.ScoreModeTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.index.query.ScoreModeTests",
     "children": []
    },
    {
     "id": "ID#testFromString(org.elasticsearch.index.query.ScoreModeTests)",
     "displayName": "testFromString(org.elasticsearch.index.query.ScoreModeTests)",
     "methodName": "testFromString",
     "className": "org.elasticsearch.index.query.ScoreModeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195668645
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.index.query.ScoreModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.index.query.ScoreModeTests)",
  "startTimestamp": 1474195668669,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWriteTo(org.elasticsearch.index.query.ScoreModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteTo(org.elasticsearch.index.query.ScoreModeTests)",
  "startTimestamp": 1474195668671,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.index.query.ScoreModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.index.query.ScoreModeTests)",
  "startTimestamp": 1474195668673,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFromString(org.elasticsearch.index.query.ScoreModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromString(org.elasticsearch.index.query.ScoreModeTests)",
  "startTimestamp": 1474195668674,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.ScoreModeTests",
  "startTimestamp": 1474195668645,
  "executionTime": 33
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.FuzzyQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
   "children": [
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testParseFailsWithMultipleFields(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testParseFailsWithMultipleFields",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryWithNumericField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testToQueryWithNumericField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testToQueryWithNumericField",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryWithStringField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testToQueryWithStringField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testToQueryWithStringField",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnsupportedFuzzinessForStringType(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testUnsupportedFuzzinessForStringType(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testUnsupportedFuzzinessForStringType",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195668685
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:48,710][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{W0l6ForVSbWJ3rOjXlbo0w}{local}{local[355]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:48,717][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:48,717][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:48,734][WARN ][org.elasticsearch.deprecation.index.mapper]  [JobbIOoqli] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:48,734][WARN ][org.elasticsearch.deprecation.index.mapper]  [JobbIOoqli] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:48,734][WARN ][org.elasticsearch.deprecation.index.mapper]  [JobbIOoqli] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:48,736][WARN ][org.elasticsearch.deprecation.index.mapper]  [JobbIOoqli] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:48,736][WARN ][org.elasticsearch.deprecation.index.mapper]  [JobbIOoqli] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:48,736][WARN ][org.elasticsearch.deprecation.index.mapper]  [JobbIOoqli] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:48,739][WARN ][org.elasticsearch.deprecation.index.mapper]  [JobbIOoqli] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:48,739][WARN ][org.elasticsearch.deprecation.index.mapper]  [JobbIOoqli] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:48,739][WARN ][org.elasticsearch.deprecation.index.mapper]  [JobbIOoqli] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1474195668704,
  "executionTime": 39
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1474195668743,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1474195668746,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryWithNumericField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryWithNumericField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1474195668748,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryWithStringField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryWithStringField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1474195668751,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1474195668754,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1474195668774,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnsupportedFuzzinessForStringType(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnsupportedFuzzinessForStringType(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1474195668776,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1474195668780,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1474195668783,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1474195668792,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1474195668794,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1474195668804,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1474195668807,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.FuzzyQueryBuilderTests",
  "startTimestamp": 1474195668685,
  "executionTime": 139
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.DocumentFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.DocumentFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.DocumentFieldMapperTests",
   "children": [
    {
     "id": "ID#testAnalyzers(org.elasticsearch.index.mapper.DocumentFieldMapperTests)",
     "displayName": "testAnalyzers(org.elasticsearch.index.mapper.DocumentFieldMapperTests)",
     "methodName": "testAnalyzers",
     "className": "org.elasticsearch.index.mapper.DocumentFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195668829
 }
]

[
 "TEST_STARTED",
 "ID#testAnalyzers(org.elasticsearch.index.mapper.DocumentFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAnalyzers(org.elasticsearch.index.mapper.DocumentFieldMapperTests)",
  "startTimestamp": 1474195668861,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.DocumentFieldMapperTests",
  "startTimestamp": 1474195668829,
  "executionTime": 37
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.TypeFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.TypeFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.TypeFieldMapperTests",
   "children": [
    {
     "id": "ID#testDocValuesPre21(org.elasticsearch.index.mapper.TypeFieldMapperTests)",
     "displayName": "testDocValuesPre21(org.elasticsearch.index.mapper.TypeFieldMapperTests)",
     "methodName": "testDocValuesPre21",
     "className": "org.elasticsearch.index.mapper.TypeFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDocValues(org.elasticsearch.index.mapper.TypeFieldMapperTests)",
     "displayName": "testDocValues(org.elasticsearch.index.mapper.TypeFieldMapperTests)",
     "methodName": "testDocValues",
     "className": "org.elasticsearch.index.mapper.TypeFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195668872
 }
]

[
 "TEST_STARTED",
 "ID#testDocValuesPre21(org.elasticsearch.index.mapper.TypeFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:48,928][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:48,956][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:48,956][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:48,960][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[8784], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:48,962][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:48,962][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:49,071][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:49,071][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:49,072][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[107]}, bound_addresses {local[107]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:49,073][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{avZI4V6xRDCrw7rWL1fY5w}{rjiGjz8TSAWgUeIIxxFK-A}{local}{local[107]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:49,074][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:49,090][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:49,110][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:49,194][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:49,255][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TypeFieldMapperTests#testDocValuesPre21]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDocValuesPre21(org.elasticsearch.index.mapper.TypeFieldMapperTests)",
  "startTimestamp": 1474195668919,
  "executionTime": 377
 }
]

[
 "TEST_STARTED",
 "ID#testDocValues(org.elasticsearch.index.mapper.TypeFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:49,305][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:49,406][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:49,423][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TypeFieldMapperTests#testDocValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDocValues(org.elasticsearch.index.mapper.TypeFieldMapperTests)",
  "startTimestamp": 1474195669296,
  "executionTime": 186
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:49,482][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:49,483][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:49,483][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:49,485][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.TypeFieldMapperTests",
  "startTimestamp": 1474195668872,
  "executionTime": 620
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.ChannelsTests",
   "displayName": "org.elasticsearch.common.ChannelsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.ChannelsTests",
   "children": [
    {
     "id": "ID#testReadWriteThroughBuffers(org.elasticsearch.common.ChannelsTests)",
     "displayName": "testReadWriteThroughBuffers(org.elasticsearch.common.ChannelsTests)",
     "methodName": "testReadWriteThroughBuffers",
     "className": "org.elasticsearch.common.ChannelsTests",
     "children": []
    },
    {
     "id": "ID#testPartialReadWriteThroughArrays(org.elasticsearch.common.ChannelsTests)",
     "displayName": "testPartialReadWriteThroughArrays(org.elasticsearch.common.ChannelsTests)",
     "methodName": "testPartialReadWriteThroughArrays",
     "className": "org.elasticsearch.common.ChannelsTests",
     "children": []
    },
    {
     "id": "ID#testPartialReadWriteThroughBuffers(org.elasticsearch.common.ChannelsTests)",
     "displayName": "testPartialReadWriteThroughBuffers(org.elasticsearch.common.ChannelsTests)",
     "methodName": "testPartialReadWriteThroughBuffers",
     "className": "org.elasticsearch.common.ChannelsTests",
     "children": []
    },
    {
     "id": "ID#testBufferReadPastEOFWithException(org.elasticsearch.common.ChannelsTests)",
     "displayName": "testBufferReadPastEOFWithException(org.elasticsearch.common.ChannelsTests)",
     "methodName": "testBufferReadPastEOFWithException",
     "className": "org.elasticsearch.common.ChannelsTests",
     "children": []
    },
    {
     "id": "ID#testBufferReadPastEOFWithoutException(org.elasticsearch.common.ChannelsTests)",
     "displayName": "testBufferReadPastEOFWithoutException(org.elasticsearch.common.ChannelsTests)",
     "methodName": "testBufferReadPastEOFWithoutException",
     "className": "org.elasticsearch.common.ChannelsTests",
     "children": []
    },
    {
     "id": "ID#testReadWriteThoughArrays(org.elasticsearch.common.ChannelsTests)",
     "displayName": "testReadWriteThoughArrays(org.elasticsearch.common.ChannelsTests)",
     "methodName": "testReadWriteThoughArrays",
     "className": "org.elasticsearch.common.ChannelsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195669498
 }
]

[
 "TEST_STARTED",
 "ID#testReadWriteThroughBuffers(org.elasticsearch.common.ChannelsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadWriteThroughBuffers(org.elasticsearch.common.ChannelsTests)",
  "startTimestamp": 1474195669544,
  "executionTime": 71
 }
]

[
 "TEST_STARTED",
 "ID#testPartialReadWriteThroughArrays(org.elasticsearch.common.ChannelsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPartialReadWriteThroughArrays(org.elasticsearch.common.ChannelsTests)",
  "startTimestamp": 1474195669616,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testPartialReadWriteThroughBuffers(org.elasticsearch.common.ChannelsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPartialReadWriteThroughBuffers(org.elasticsearch.common.ChannelsTests)",
  "startTimestamp": 1474195669627,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testBufferReadPastEOFWithException(org.elasticsearch.common.ChannelsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBufferReadPastEOFWithException(org.elasticsearch.common.ChannelsTests)",
  "startTimestamp": 1474195669640,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testBufferReadPastEOFWithoutException(org.elasticsearch.common.ChannelsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBufferReadPastEOFWithoutException(org.elasticsearch.common.ChannelsTests)",
  "startTimestamp": 1474195669655,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testReadWriteThoughArrays(org.elasticsearch.common.ChannelsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadWriteThoughArrays(org.elasticsearch.common.ChannelsTests)",
  "startTimestamp": 1474195669666,
  "executionTime": 47
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.ChannelsTests",
  "startTimestamp": 1474195669498,
  "executionTime": 221
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.functionscore.ScoreFunctionBuilderTests",
   "displayName": "org.elasticsearch.index.query.functionscore.ScoreFunctionBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.functionscore.ScoreFunctionBuilderTests",
   "children": [
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.functionscore.ScoreFunctionBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.functionscore.ScoreFunctionBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.functionscore.ScoreFunctionBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195669724
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.functionscore.ScoreFunctionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.functionscore.ScoreFunctionBuilderTests)",
  "startTimestamp": 1474195669746,
  "executionTime": 30
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.functionscore.ScoreFunctionBuilderTests",
  "startTimestamp": 1474195669724,
  "executionTime": 53
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.AggregatorParsingTests",
   "displayName": "org.elasticsearch.search.aggregations.AggregatorParsingTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.AggregatorParsingTests",
   "children": [
    {
     "id": "ID#testTwoTypes(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "displayName": "testTwoTypes(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "methodName": "testTwoTypes",
     "className": "org.elasticsearch.search.aggregations.AggregatorParsingTests",
     "children": []
    },
    {
     "id": "ID#testMissingType(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "displayName": "testMissingType(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "methodName": "testMissingType",
     "className": "org.elasticsearch.search.aggregations.AggregatorParsingTests",
     "children": []
    },
    {
     "id": "ID#testSameAggregationName(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "displayName": "testSameAggregationName(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "methodName": "testSameAggregationName",
     "className": "org.elasticsearch.search.aggregations.AggregatorParsingTests",
     "children": []
    },
    {
     "id": "ID#testInvalidAggregationName(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "displayName": "testInvalidAggregationName(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "methodName": "testInvalidAggregationName",
     "className": "org.elasticsearch.search.aggregations.AggregatorParsingTests",
     "children": []
    },
    {
     "id": "ID#testMissingName(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "displayName": "testMissingName(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "methodName": "testMissingName",
     "className": "org.elasticsearch.search.aggregations.AggregatorParsingTests",
     "children": []
    },
    {
     "id": "ID#testTwoAggs(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "displayName": "testTwoAggs(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "methodName": "testTwoAggs",
     "className": "org.elasticsearch.search.aggregations.AggregatorParsingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195669786
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:49,813][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{oeU6crrwQN67ESsQ0FJgGg}{local}{local[356]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testTwoTypes(org.elasticsearch.search.aggregations.AggregatorParsingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTwoTypes(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
  "startTimestamp": 1474195669824,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMissingType(org.elasticsearch.search.aggregations.AggregatorParsingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingType(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
  "startTimestamp": 1474195669827,
  "executionTime": 39
 }
]

[
 "TEST_STARTED",
 "ID#testSameAggregationName(org.elasticsearch.search.aggregations.AggregatorParsingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSameAggregationName(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
  "startTimestamp": 1474195669867,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidAggregationName(org.elasticsearch.search.aggregations.AggregatorParsingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidAggregationName(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
  "startTimestamp": 1474195669869,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMissingName(org.elasticsearch.search.aggregations.AggregatorParsingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingName(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
  "startTimestamp": 1474195669871,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTwoAggs(org.elasticsearch.search.aggregations.AggregatorParsingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTwoAggs(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
  "startTimestamp": 1474195669873,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.AggregatorParsingTests",
  "startTimestamp": 1474195669786,
  "executionTime": 94
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.PathMatchDynamicTemplateTests",
   "displayName": "org.elasticsearch.index.mapper.PathMatchDynamicTemplateTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.PathMatchDynamicTemplateTests",
   "children": [
    {
     "id": "ID#testSimple(org.elasticsearch.index.mapper.PathMatchDynamicTemplateTests)",
     "displayName": "testSimple(org.elasticsearch.index.mapper.PathMatchDynamicTemplateTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.index.mapper.PathMatchDynamicTemplateTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195669885
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.index.mapper.PathMatchDynamicTemplateTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:49,931][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:50,033][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:50,034][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:50,066][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[8784], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:50,069][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:50,069][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:50,336][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:50,336][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:50,337][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[108]}, bound_addresses {local[108]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:50,339][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{UiC5ssaFSZywEYjTaiTYVQ}{lttSownTTpqKfHPH1-vV9Q}{local}{local[108]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:50,340][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:50,352][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:50,408][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:50,495][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:50,516][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/1GbXXD0SQ_aSW46L7aE7ug] create_mapping [person]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:50,538][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/1GbXXD0SQ_aSW46L7aE7ug] update_mapping [person]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:50,551][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [PathMatchDynamicTemplateTests#testSimple]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.index.mapper.PathMatchDynamicTemplateTests)",
  "startTimestamp": 1474195669923,
  "executionTime": 660
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:50,584][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:50,585][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:50,585][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:50,587][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.PathMatchDynamicTemplateTests",
  "startTimestamp": 1474195669885,
  "executionTime": 708
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.RoutingFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.RoutingFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.RoutingFieldTypeTests",
   "children": [
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.RoutingFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.RoutingFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.RoutingFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.RoutingFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.RoutingFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195670598
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.RoutingFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
  "startTimestamp": 1474195670619,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.RoutingFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
  "startTimestamp": 1474195670621,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.RoutingFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
  "startTimestamp": 1474195670623,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.RoutingFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
  "startTimestamp": 1474195670626,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.RoutingFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
  "startTimestamp": 1474195670630,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.RoutingFieldTypeTests",
  "startTimestamp": 1474195670598,
  "executionTime": 36
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests",
   "children": [
    {
     "id": "ID#testBalanceAllNodesStarted(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)",
     "displayName": "testBalanceAllNodesStarted(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)",
     "methodName": "testBalanceAllNodesStarted",
     "className": "org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests",
     "children": []
    },
    {
     "id": "ID#testBalanceIncrementallyStartNodes(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)",
     "displayName": "testBalanceIncrementallyStartNodes(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)",
     "methodName": "testBalanceIncrementallyStartNodes",
     "className": "org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests",
     "children": []
    },
    {
     "id": "ID#testBalanceAllNodesStartedAddIndex(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)",
     "displayName": "testBalanceAllNodesStartedAddIndex(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)",
     "methodName": "testBalanceAllNodesStartedAddIndex",
     "className": "org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195670642
 }
]

[
 "TEST_STARTED",
 "ID#testBalanceAllNodesStarted(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:50,667][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:50,670][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding three node and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:50,671][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Another round of rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:50,673][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, nothing should change%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:50,673][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the more shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:50,674][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][2], [test][2], [test1][0], [test][0], [test1][1], [test][1]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBalanceAllNodesStarted(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)",
  "startTimestamp": 1474195670658,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testBalanceIncrementallyStartNodes(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:50,680][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:50,680][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding one node and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:50,681][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Add another node and perform rerouting, nothing will happen since primary not started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:50,681][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the primary shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:50,682][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, nothing should change%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:50,683][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the backup shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:50,686][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][1], [test1][2], [test1][0], [test][1], [test][2], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:50,686][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Add another node and perform rerouting, nothing will happen since primary not started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:50,689][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, nothing should change%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:50,689][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the backup shard%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBalanceIncrementallyStartNodes(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)",
  "startTimestamp": 1474195670674,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testBalanceAllNodesStartedAddIndex(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:50,696][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:50,696][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding three node and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:50,697][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Another round of rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:50,697][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, nothing should change%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:50,698][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the more shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:50,698][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][2], [test][0], [test][1]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:50,698][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Add new index 3 shards 1 replica%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:50,699][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, assign%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:50,699][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, start the primaries%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:50,699][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, start the replicas%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:50,700][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][2], [test1][0], [test1][1]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:50,700][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] kill one node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:50,701][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:50,701][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start Recovering shards round 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:50,702][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start Recovering shards round 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:50,703][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][2], [test][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBalanceAllNodesStartedAddIndex(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)",
  "startTimestamp": 1474195670690,
  "executionTime": 13
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests",
  "startTimestamp": 1474195670642,
  "executionTime": 63
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests",
   "displayName": "org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests",
   "children": [
    {
     "id": "ID#testParsingWithIndexSettings(org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests)",
     "displayName": "testParsingWithIndexSettings(org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests)",
     "methodName": "testParsingWithIndexSettings",
     "className": "org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests",
     "children": []
    },
    {
     "id": "ID#testConditionsParsing(org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests)",
     "displayName": "testConditionsParsing(org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests)",
     "methodName": "testConditionsParsing",
     "className": "org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195670710
 }
]

[
 "TEST_STARTED",
 "ID#testParsingWithIndexSettings(org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingWithIndexSettings(org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests)",
  "startTimestamp": 1474195670732,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testConditionsParsing(org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConditionsParsing(org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests)",
  "startTimestamp": 1474195670737,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests",
  "startTimestamp": 1474195670710,
  "executionTime": 30
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.compress.DeflateCompressTests",
   "displayName": "org.elasticsearch.common.compress.DeflateCompressTests",
   "methodName": null,
   "className": "org.elasticsearch.common.compress.DeflateCompressTests",
   "children": [
    {
     "id": "ID#testRepetitionsS(org.elasticsearch.common.compress.DeflateCompressTests)",
     "displayName": "testRepetitionsS(org.elasticsearch.common.compress.DeflateCompressTests)",
     "methodName": "testRepetitionsS",
     "className": "org.elasticsearch.common.compress.DeflateCompressTests",
     "children": []
    },
    {
     "id": "ID#testLineDocsThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
     "displayName": "testLineDocsThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
     "methodName": "testLineDocsThreads",
     "className": "org.elasticsearch.common.compress.DeflateCompressTests",
     "children": []
    },
    {
     "id": "ID#testRepetitionsI(org.elasticsearch.common.compress.DeflateCompressTests)",
     "displayName": "testRepetitionsI(org.elasticsearch.common.compress.DeflateCompressTests)",
     "methodName": "testRepetitionsI",
     "className": "org.elasticsearch.common.compress.DeflateCompressTests",
     "children": []
    },
    {
     "id": "ID#testRepetitionsL(org.elasticsearch.common.compress.DeflateCompressTests)",
     "displayName": "testRepetitionsL(org.elasticsearch.common.compress.DeflateCompressTests)",
     "methodName": "testRepetitionsL",
     "className": "org.elasticsearch.common.compress.DeflateCompressTests",
     "children": []
    },
    {
     "id": "ID#testRepetitionsLThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
     "displayName": "testRepetitionsLThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
     "methodName": "testRepetitionsLThreads",
     "className": "org.elasticsearch.common.compress.DeflateCompressTests",
     "children": []
    },
    {
     "id": "ID#testRepetitionsSThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
     "displayName": "testRepetitionsSThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
     "methodName": "testRepetitionsSThreads",
     "className": "org.elasticsearch.common.compress.DeflateCompressTests",
     "children": []
    },
    {
     "id": "ID#testRandom(org.elasticsearch.common.compress.DeflateCompressTests)",
     "displayName": "testRandom(org.elasticsearch.common.compress.DeflateCompressTests)",
     "methodName": "testRandom",
     "className": "org.elasticsearch.common.compress.DeflateCompressTests",
     "children": []
    },
    {
     "id": "ID#testRandomThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
     "displayName": "testRandomThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
     "methodName": "testRandomThreads",
     "className": "org.elasticsearch.common.compress.DeflateCompressTests",
     "children": []
    },
    {
     "id": "ID#testLineDocs(org.elasticsearch.common.compress.DeflateCompressTests)",
     "displayName": "testLineDocs(org.elasticsearch.common.compress.DeflateCompressTests)",
     "methodName": "testLineDocs",
     "className": "org.elasticsearch.common.compress.DeflateCompressTests",
     "children": []
    },
    {
     "id": "ID#testRepetitionsIThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
     "displayName": "testRepetitionsIThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
     "methodName": "testRepetitionsIThreads",
     "className": "org.elasticsearch.common.compress.DeflateCompressTests",
     "children": []
    },
    {
     "id": "ID#testMixed(org.elasticsearch.common.compress.DeflateCompressTests)",
     "displayName": "testMixed(org.elasticsearch.common.compress.DeflateCompressTests)",
     "methodName": "testMixed",
     "className": "org.elasticsearch.common.compress.DeflateCompressTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195670746
 }
]

[
 "TEST_STARTED",
 "ID#testRepetitionsS(org.elasticsearch.common.compress.DeflateCompressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRepetitionsS(org.elasticsearch.common.compress.DeflateCompressTests)",
  "startTimestamp": 1474195670810,
  "executionTime": 316
 }
]

[
 "TEST_STARTED",
 "ID#testLineDocsThreads(org.elasticsearch.common.compress.DeflateCompressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLineDocsThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
  "startTimestamp": 1474195671127,
  "executionTime": 1886
 }
]

[
 "TEST_STARTED",
 "ID#testRepetitionsI(org.elasticsearch.common.compress.DeflateCompressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRepetitionsI(org.elasticsearch.common.compress.DeflateCompressTests)",
  "startTimestamp": 1474195673014,
  "executionTime": 241
 }
]

[
 "TEST_STARTED",
 "ID#testRepetitionsL(org.elasticsearch.common.compress.DeflateCompressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRepetitionsL(org.elasticsearch.common.compress.DeflateCompressTests)",
  "startTimestamp": 1474195673255,
  "executionTime": 188
 }
]

[
 "TEST_STARTED",
 "ID#testRepetitionsLThreads(org.elasticsearch.common.compress.DeflateCompressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRepetitionsLThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
  "startTimestamp": 1474195673443,
  "executionTime": 300
 }
]

[
 "TEST_STARTED",
 "ID#testRepetitionsSThreads(org.elasticsearch.common.compress.DeflateCompressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRepetitionsSThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
  "startTimestamp": 1474195673743,
  "executionTime": 511
 }
]

[
 "TEST_STARTED",
 "ID#testRandom(org.elasticsearch.common.compress.DeflateCompressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandom(org.elasticsearch.common.compress.DeflateCompressTests)",
  "startTimestamp": 1474195674254,
  "executionTime": 237
 }
]

[
 "TEST_STARTED",
 "ID#testRandomThreads(org.elasticsearch.common.compress.DeflateCompressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
  "startTimestamp": 1474195674491,
  "executionTime": 281
 }
]

[
 "TEST_STARTED",
 "ID#testLineDocs(org.elasticsearch.common.compress.DeflateCompressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLineDocs(org.elasticsearch.common.compress.DeflateCompressTests)",
  "startTimestamp": 1474195674772,
  "executionTime": 1107
 }
]

[
 "TEST_STARTED",
 "ID#testRepetitionsIThreads(org.elasticsearch.common.compress.DeflateCompressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRepetitionsIThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
  "startTimestamp": 1474195675879,
  "executionTime": 269
 }
]

[
 "TEST_STARTED",
 "ID#testMixed(org.elasticsearch.common.compress.DeflateCompressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMixed(org.elasticsearch.common.compress.DeflateCompressTests)",
  "startTimestamp": 1474195676149,
  "executionTime": 371
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.compress.DeflateCompressTests",
  "startTimestamp": 1474195670746,
  "executionTime": 5776
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests",
   "displayName": "org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests",
   "children": [
    {
     "id": "ID#testAllOrNothing(org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests)",
     "displayName": "testAllOrNothing(org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests)",
     "methodName": "testAllOrNothing",
     "className": "org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests",
     "children": []
    },
    {
     "id": "ID#testUpdateSetting(org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests)",
     "displayName": "testUpdateSetting(org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests)",
     "methodName": "testUpdateSetting",
     "className": "org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests",
     "children": []
    },
    {
     "id": "ID#testClusterBlock(org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests)",
     "displayName": "testClusterBlock(org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests)",
     "methodName": "testClusterBlock",
     "className": "org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195676528
 }
]

[
 "TEST_STARTED",
 "ID#testAllOrNothing(org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllOrNothing(org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests)",
  "startTimestamp": 1474195676545,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testUpdateSetting(org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdateSetting(org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests)",
  "startTimestamp": 1474195676552,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testClusterBlock(org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterBlock(org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests)",
  "startTimestamp": 1474195676556,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests",
  "startTimestamp": 1474195676528,
  "executionTime": 33
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.transport.TransportModuleTests",
   "displayName": "org.elasticsearch.transport.TransportModuleTests",
   "methodName": null,
   "className": "org.elasticsearch.transport.TransportModuleTests",
   "children": []
  },
  "startTimestamp": 1474195676566
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.transport.TransportModuleTests",
  "startTimestamp": 1474195676566,
  "executionTime": 5
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.ingest.WritePipelineResponseTests",
   "displayName": "org.elasticsearch.action.ingest.WritePipelineResponseTests",
   "methodName": null,
   "className": "org.elasticsearch.action.ingest.WritePipelineResponseTests",
   "children": [
    {
     "id": "ID#testSerializationWithoutError(org.elasticsearch.action.ingest.WritePipelineResponseTests)",
     "displayName": "testSerializationWithoutError(org.elasticsearch.action.ingest.WritePipelineResponseTests)",
     "methodName": "testSerializationWithoutError",
     "className": "org.elasticsearch.action.ingest.WritePipelineResponseTests",
     "children": []
    },
    {
     "id": "ID#testSerializationWithError(org.elasticsearch.action.ingest.WritePipelineResponseTests)",
     "displayName": "testSerializationWithError(org.elasticsearch.action.ingest.WritePipelineResponseTests)",
     "methodName": "testSerializationWithError",
     "className": "org.elasticsearch.action.ingest.WritePipelineResponseTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195676577
 }
]

[
 "TEST_STARTED",
 "ID#testSerializationWithoutError(org.elasticsearch.action.ingest.WritePipelineResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerializationWithoutError(org.elasticsearch.action.ingest.WritePipelineResponseTests)",
  "startTimestamp": 1474195676591,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerializationWithError(org.elasticsearch.action.ingest.WritePipelineResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerializationWithError(org.elasticsearch.action.ingest.WritePipelineResponseTests)",
  "startTimestamp": 1474195676593,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.ingest.WritePipelineResponseTests",
  "startTimestamp": 1474195676577,
  "executionTime": 21
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.internal.DefaultSearchContextTests",
   "displayName": "org.elasticsearch.search.internal.DefaultSearchContextTests",
   "methodName": null,
   "className": "org.elasticsearch.search.internal.DefaultSearchContextTests",
   "children": [
    {
     "id": "ID#testCreateSearchFilter(org.elasticsearch.search.internal.DefaultSearchContextTests)",
     "displayName": "testCreateSearchFilter(org.elasticsearch.search.internal.DefaultSearchContextTests)",
     "methodName": "testCreateSearchFilter",
     "className": "org.elasticsearch.search.internal.DefaultSearchContextTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195676604
 }
]

[
 "TEST_STARTED",
 "ID#testCreateSearchFilter(org.elasticsearch.search.internal.DefaultSearchContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateSearchFilter(org.elasticsearch.search.internal.DefaultSearchContextTests)",
  "startTimestamp": 1474195676620,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.internal.DefaultSearchContextTests",
  "startTimestamp": 1474195676604,
  "executionTime": 20
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.SourceFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.SourceFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.SourceFieldMapperTests",
   "children": [
    {
     "id": "ID#testExcludesNotUpdateable(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "displayName": "testExcludesNotUpdateable(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "methodName": "testExcludesNotUpdateable",
     "className": "org.elasticsearch.index.mapper.SourceFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testFormatBackCompat(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "displayName": "testFormatBackCompat(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "methodName": "testFormatBackCompat",
     "className": "org.elasticsearch.index.mapper.SourceFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaultMappingAndNoMapping(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "displayName": "testDefaultMappingAndNoMapping(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "methodName": "testDefaultMappingAndNoMapping",
     "className": "org.elasticsearch.index.mapper.SourceFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testEnabledNotUpdateable(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "displayName": "testEnabledNotUpdateable(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "methodName": "testEnabledNotUpdateable",
     "className": "org.elasticsearch.index.mapper.SourceFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNoFormat(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "displayName": "testNoFormat(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "methodName": "testNoFormat",
     "className": "org.elasticsearch.index.mapper.SourceFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaultMappingAndWithMappingOverrideWithMapperService(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "displayName": "testDefaultMappingAndWithMappingOverrideWithMapperService(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "methodName": "testDefaultMappingAndWithMappingOverrideWithMapperService",
     "className": "org.elasticsearch.index.mapper.SourceFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testSourceObjectContainsExtraTokens(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "displayName": "testSourceObjectContainsExtraTokens(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "methodName": "testSourceObjectContainsExtraTokens",
     "className": "org.elasticsearch.index.mapper.SourceFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaultMappingAndWithMappingOverride(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "displayName": "testDefaultMappingAndWithMappingOverride(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "methodName": "testDefaultMappingAndWithMappingOverride",
     "className": "org.elasticsearch.index.mapper.SourceFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testComplete(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "displayName": "testComplete(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "methodName": "testComplete",
     "className": "org.elasticsearch.index.mapper.SourceFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIncludes(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "displayName": "testIncludes(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "methodName": "testIncludes",
     "className": "org.elasticsearch.index.mapper.SourceFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testExcludes(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "displayName": "testExcludes(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "methodName": "testExcludes",
     "className": "org.elasticsearch.index.mapper.SourceFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaultMappingAndNoMappingWithMapperService(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "displayName": "testDefaultMappingAndNoMappingWithMapperService(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "methodName": "testDefaultMappingAndNoMappingWithMapperService",
     "className": "org.elasticsearch.index.mapper.SourceFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIncludesNotUpdateable(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "displayName": "testIncludesNotUpdateable(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "methodName": "testIncludesNotUpdateable",
     "className": "org.elasticsearch.index.mapper.SourceFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195676632
 }
]

[
 "TEST_STARTED",
 "ID#testExcludesNotUpdateable(org.elasticsearch.index.mapper.SourceFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:56,673][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:56,701][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:56,701][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:56,705][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[8784], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:56,707][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:56,707][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:56,849][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:56,849][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:56,850][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[109]}, bound_addresses {local[109]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:56,875][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{KFiLZtBmREC1cEZMnY03Og}{KdebEu84TZqPZx1-1k1oKQ}{local}{local[109]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:56,876][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:56,973][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:56,990][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:57,204][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:57,223][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [SourceFieldMapperTests#testExcludesNotUpdateable]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExcludesNotUpdateable(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
  "startTimestamp": 1474195676665,
  "executionTime": 615
 }
]

[
 "TEST_STARTED",
 "ID#testFormatBackCompat(org.elasticsearch.index.mapper.SourceFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:57,289][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:57,342][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:57,390][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [SourceFieldMapperTests#testFormatBackCompat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFormatBackCompat(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
  "startTimestamp": 1474195677280,
  "executionTime": 137
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultMappingAndNoMapping(org.elasticsearch.index.mapper.SourceFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:57,423][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:57,474][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:57,487][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [SourceFieldMapperTests#testDefaultMappingAndNoMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultMappingAndNoMapping(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
  "startTimestamp": 1474195677418,
  "executionTime": 108
 }
]

[
 "TEST_STARTED",
 "ID#testEnabledNotUpdateable(org.elasticsearch.index.mapper.SourceFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:57,532][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:57,579][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:57,594][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [SourceFieldMapperTests#testEnabledNotUpdateable]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnabledNotUpdateable(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
  "startTimestamp": 1474195677526,
  "executionTime": 100
 }
]

[
 "TEST_STARTED",
 "ID#testNoFormat(org.elasticsearch.index.mapper.SourceFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:57,632][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:57,688][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:57,701][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [SourceFieldMapperTests#testNoFormat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoFormat(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
  "startTimestamp": 1474195677626,
  "executionTime": 102
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultMappingAndWithMappingOverrideWithMapperService(org.elasticsearch.index.mapper.SourceFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:57,734][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:57,817][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:57,831][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [SourceFieldMapperTests#testDefaultMappingAndWithMappingOverrideWithMapperService]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultMappingAndWithMappingOverrideWithMapperService(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
  "startTimestamp": 1474195677729,
  "executionTime": 140
 }
]

[
 "TEST_STARTED",
 "ID#testSourceObjectContainsExtraTokens(org.elasticsearch.index.mapper.SourceFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:57,874][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:57,919][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:57,931][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [SourceFieldMapperTests#testSourceObjectContainsExtraTokens]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSourceObjectContainsExtraTokens(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
  "startTimestamp": 1474195677869,
  "executionTime": 91
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultMappingAndWithMappingOverride(org.elasticsearch.index.mapper.SourceFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:57,966][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:58,015][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:58,032][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [SourceFieldMapperTests#testDefaultMappingAndWithMappingOverride]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultMappingAndWithMappingOverride(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
  "startTimestamp": 1474195677960,
  "executionTime": 103
 }
]

[
 "TEST_STARTED",
 "ID#testComplete(org.elasticsearch.index.mapper.SourceFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:58,071][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:58,113][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:58,128][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [SourceFieldMapperTests#testComplete]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testComplete(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
  "startTimestamp": 1474195678063,
  "executionTime": 92
 }
]

[
 "TEST_STARTED",
 "ID#testIncludes(org.elasticsearch.index.mapper.SourceFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:58,161][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:58,208][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:58,223][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [SourceFieldMapperTests#testIncludes]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludes(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
  "startTimestamp": 1474195678155,
  "executionTime": 101
 }
]

[
 "TEST_STARTED",
 "ID#testExcludes(org.elasticsearch.index.mapper.SourceFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:58,262][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:58,320][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:58,333][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [SourceFieldMapperTests#testExcludes]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExcludes(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
  "startTimestamp": 1474195678257,
  "executionTime": 105
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultMappingAndNoMappingWithMapperService(org.elasticsearch.index.mapper.SourceFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:58,368][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:58,414][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:58,427][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [SourceFieldMapperTests#testDefaultMappingAndNoMappingWithMapperService]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultMappingAndNoMappingWithMapperService(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
  "startTimestamp": 1474195678362,
  "executionTime": 126
 }
]

[
 "TEST_STARTED",
 "ID#testIncludesNotUpdateable(org.elasticsearch.index.mapper.SourceFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:58,494][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:58,540][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:58,565][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [SourceFieldMapperTests#testIncludesNotUpdateable]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludesNotUpdateable(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
  "startTimestamp": 1474195678488,
  "executionTime": 178
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:58,666][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:58,667][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:58,667][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:58,669][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.SourceFieldMapperTests",
  "startTimestamp": 1474195676632,
  "executionTime": 2047
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
   "children": [
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInvalidPrecision(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testInvalidPrecision(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testInvalidPrecision",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testLocationParsing(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testLocationParsing(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testLocationParsing",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNullField(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testNullField(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testNullField",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNullGeoPoint(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testNullGeoPoint(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testNullGeoPoint",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testIgnoreUnmapped(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testIgnoreUnmapped",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195678686
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,754][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{rZL8RxHpRCOW_tz8RwIjaA}{local}{local[366]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,761][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,761][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,775][WARN ][org.elasticsearch.deprecation.index.mapper]  [doCFLEzrT] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,775][WARN ][org.elasticsearch.deprecation.index.mapper]  [doCFLEzrT] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,775][WARN ][org.elasticsearch.deprecation.index.mapper]  [doCFLEzrT] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,777][WARN ][org.elasticsearch.deprecation.index.mapper]  [doCFLEzrT] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,778][WARN ][org.elasticsearch.deprecation.index.mapper]  [doCFLEzrT] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,778][WARN ][org.elasticsearch.deprecation.index.mapper]  [doCFLEzrT] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,780][WARN ][org.elasticsearch.deprecation.index.mapper]  [doCFLEzrT] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,780][WARN ][org.elasticsearch.deprecation.index.mapper]  [doCFLEzrT] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,780][WARN ][org.elasticsearch.deprecation.index.mapper]  [doCFLEzrT] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,782][WARN ][org.elasticsearch.deprecation.index.mapper]  [doCFLEzrT] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,782][WARN ][org.elasticsearch.deprecation.index.mapper]  [doCFLEzrT] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,782][WARN ][org.elasticsearch.deprecation.index.mapper]  [doCFLEzrT] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,784][WARN ][org.elasticsearch.deprecation.index.mapper]  [doCFLEzrT] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,784][WARN ][org.elasticsearch.deprecation.index.mapper]  [doCFLEzrT] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,784][WARN ][org.elasticsearch.deprecation.index.mapper]  [doCFLEzrT] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,787][WARN ][org.elasticsearch.deprecation.index.mapper]  [doCFLEzrT] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,787][WARN ][org.elasticsearch.deprecation.index.mapper]  [doCFLEzrT] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,787][WARN ][org.elasticsearch.deprecation.index.mapper]  [doCFLEzrT] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,789][WARN ][org.elasticsearch.deprecation.index.mapper]  [doCFLEzrT] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,789][WARN ][org.elasticsearch.deprecation.index.mapper]  [doCFLEzrT] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,789][WARN ][org.elasticsearch.deprecation.index.mapper]  [doCFLEzrT] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,791][WARN ][org.elasticsearch.deprecation.index.mapper]  [doCFLEzrT] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,791][WARN ][org.elasticsearch.deprecation.index.mapper]  [doCFLEzrT] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,791][WARN ][org.elasticsearch.deprecation.index.mapper]  [doCFLEzrT] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,795][WARN ][org.elasticsearch.deprecation.index.mapper]  [doCFLEzrT] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,795][WARN ][org.elasticsearch.deprecation.index.mapper]  [doCFLEzrT] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,795][WARN ][org.elasticsearch.deprecation.index.mapper]  [doCFLEzrT] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,796][WARN ][org.elasticsearch.deprecation.index.mapper]  [doCFLEzrT] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,796][WARN ][org.elasticsearch.deprecation.index.mapper]  [doCFLEzrT] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,796][WARN ][org.elasticsearch.deprecation.index.mapper]  [doCFLEzrT] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,798][WARN ][org.elasticsearch.deprecation.index.mapper]  [doCFLEzrT] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,798][WARN ][org.elasticsearch.deprecation.index.mapper]  [doCFLEzrT] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,798][WARN ][org.elasticsearch.deprecation.index.mapper]  [doCFLEzrT] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,812][WARN ][org.elasticsearch.deprecation.index.mapper]  [doCFLEzrT] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,812][WARN ][org.elasticsearch.deprecation.index.mapper]  [doCFLEzrT] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,812][WARN ][org.elasticsearch.deprecation.index.mapper]  [doCFLEzrT] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,816][WARN ][org.elasticsearch.deprecation.index.mapper]  [doCFLEzrT] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,816][WARN ][org.elasticsearch.deprecation.index.mapper]  [doCFLEzrT] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,816][WARN ][org.elasticsearch.deprecation.index.mapper]  [doCFLEzrT] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,826][WARN ][org.elasticsearch.deprecation.index.mapper]  [doCFLEzrT] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,826][WARN ][org.elasticsearch.deprecation.index.mapper]  [doCFLEzrT] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,826][WARN ][org.elasticsearch.deprecation.index.mapper]  [doCFLEzrT] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,829][WARN ][org.elasticsearch.deprecation.index.mapper]  [doCFLEzrT] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,829][WARN ][org.elasticsearch.deprecation.index.mapper]  [doCFLEzrT] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:58,830][WARN ][org.elasticsearch.deprecation.index.mapper]  [doCFLEzrT] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1474195678747,
  "executionTime": 101
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidPrecision(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidPrecision(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1474195678848,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1474195678853,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testLocationParsing(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLocationParsing(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1474195678855,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1474195678858,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1474195678860,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1474195678884,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNullField(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullField(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1474195678887,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNullGeoPoint(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullGeoPoint(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1474195678890,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1474195678892,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1474195678895,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1474195678902,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1474195678904,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1474195678907,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
  "startTimestamp": 1474195678686,
  "executionTime": 227
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.replication.BroadcastReplicationTests",
   "displayName": "org.elasticsearch.action.support.replication.BroadcastReplicationTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.replication.BroadcastReplicationTests",
   "children": [
    {
     "id": "ID#testResultCombine(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "displayName": "testResultCombine(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "methodName": "testResultCombine",
     "className": "org.elasticsearch.action.support.replication.BroadcastReplicationTests",
     "children": []
    },
    {
     "id": "ID#testStartedPrimary(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "displayName": "testStartedPrimary(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "methodName": "testStartedPrimary",
     "className": "org.elasticsearch.action.support.replication.BroadcastReplicationTests",
     "children": []
    },
    {
     "id": "ID#testNoShards(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "displayName": "testNoShards(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "methodName": "testNoShards",
     "className": "org.elasticsearch.action.support.replication.BroadcastReplicationTests",
     "children": []
    },
    {
     "id": "ID#testShardsList(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "displayName": "testShardsList(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "methodName": "testShardsList",
     "className": "org.elasticsearch.action.support.replication.BroadcastReplicationTests",
     "children": []
    },
    {
     "id": "ID#testNotStartedPrimary(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "displayName": "testNotStartedPrimary(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "methodName": "testNotStartedPrimary",
     "className": "org.elasticsearch.action.support.replication.BroadcastReplicationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195678921
 }
]

[
 "TEST_STARTED",
 "ID#testResultCombine(org.elasticsearch.action.support.replication.BroadcastReplicationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:59,026][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{b7FktMJZTUmS0BgQw9-LOQ}{local}{local[367]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:59,029][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[110]}, bound_addresses {local[110]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:59,030][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{KNetckDrSciABLMA9fRQNA}{local}{local[369]}, previous {node}{b7FktMJZTUmS0BgQw9-LOQ}{local}{local[367]}}, removed {{node}{b7FktMJZTUmS0BgQw9-LOQ}{local}{local[367]},}, added {{node_1}{KNetckDrSciABLMA9fRQNA}{local}{local[369]},{node_2}{kMy-ercHTL28E9AuJQ_u-Q}{local}{local[370]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResultCombine(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
  "startTimestamp": 1474195679012,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testStartedPrimary(org.elasticsearch.action.support.replication.BroadcastReplicationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:59,040][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{_0n05pz3RHyEw5-mD421kA}{local}{local[375]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:59,041][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[111]}, bound_addresses {local[111]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:59,042][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{74bXTLWXTLeImymOuOuetg}{local}{local[377]}, previous {node}{_0n05pz3RHyEw5-mD421kA}{local}{local[375]}}, removed {{node}{_0n05pz3RHyEw5-mD421kA}{local}{local[375]},}, added {{node_1}{74bXTLWXTLeImymOuOuetg}{local}{local[377]},{node_2}{uRzSYj_TQ9eGfBvaNSaGfA}{local}{local[378]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:59,043][INFO ][org.elasticsearch.action.support.replication] total shards: 1, %0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStartedPrimary(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
  "startTimestamp": 1474195679033,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testNoShards(org.elasticsearch.action.support.replication.BroadcastReplicationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:59,054][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{gR5L6m-XSYuuJz9wxbaTuw}{local}{local[382]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:59,055][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[112]}, bound_addresses {local[112]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:59,056][INFO ][org.elasticsearch.cluster.service] [node_s_0] removed {{node}{gR5L6m-XSYuuJz9wxbaTuw}{local}{local[382]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoShards(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
  "startTimestamp": 1474195679043,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testShardsList(org.elasticsearch.action.support.replication.BroadcastReplicationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:59,067][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{9uZkQ2OhTBWRkyH5fS8Quw}{local}{local[385]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:59,068][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[113]}, bound_addresses {local[113]}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardsList(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
  "startTimestamp": 1474195679057,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testNotStartedPrimary(org.elasticsearch.action.support.replication.BroadcastReplicationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:59,075][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{hb0YTpKTSheSfrofRFsfkw}{local}{local[391]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:59,076][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[114]}, bound_addresses {local[114]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:59,077][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{n-hk7gCVRBixIPJuMYVIvw}{local}{local[393]}, previous {node}{hb0YTpKTSheSfrofRFsfkw}{local}{local[391]}}, removed {{node}{hb0YTpKTSheSfrofRFsfkw}{local}{local[391]},}, added {{node_1}{n-hk7gCVRBixIPJuMYVIvw}{local}{local[393]},{node_2}{sZXlhUrqRYaLh2db2CztrA}{local}{local[394]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:59,077][INFO ][org.elasticsearch.action.support.replication] total shards: 2, %0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotStartedPrimary(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
  "startTimestamp": 1474195679070,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.replication.BroadcastReplicationTests",
  "startTimestamp": 1474195678921,
  "executionTime": 158
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.LegacyIpFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.LegacyIpFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.LegacyIpFieldMapperTests",
   "children": [
    {
     "id": "ID#testThatInvalidIpThrowsException(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)",
     "displayName": "testThatInvalidIpThrowsException(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)",
     "methodName": "testThatInvalidIpThrowsException",
     "className": "org.elasticsearch.index.mapper.LegacyIpFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testThatValidIpCanBeConvertedToLong(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)",
     "displayName": "testThatValidIpCanBeConvertedToLong(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)",
     "methodName": "testThatValidIpCanBeConvertedToLong",
     "className": "org.elasticsearch.index.mapper.LegacyIpFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreMalformedOption(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)",
     "displayName": "testIgnoreMalformedOption(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)",
     "methodName": "testIgnoreMalformedOption",
     "className": "org.elasticsearch.index.mapper.LegacyIpFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testThatIpv6AddressThrowsException(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)",
     "displayName": "testThatIpv6AddressThrowsException(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)",
     "methodName": "testThatIpv6AddressThrowsException",
     "className": "org.elasticsearch.index.mapper.LegacyIpFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testSimpleMapping(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)",
     "displayName": "testSimpleMapping(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)",
     "methodName": "testSimpleMapping",
     "className": "org.elasticsearch.index.mapper.LegacyIpFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195679085
 }
]

[
 "TEST_STARTED",
 "ID#testThatInvalidIpThrowsException(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:59,121][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:59,149][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:59,149][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:59,153][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[8784], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:59,155][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:59,155][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:59,260][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:59,260][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:59,260][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[115]}, bound_addresses {local[115]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:59,263][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{_kq9NciPR6igZhtIjLJSzg}{BLylfkHfTce5WjtzqTKnDw}{local}{local[115]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:59,266][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:59,278][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:59,297][INFO ][org.elasticsearch.index.mapper] [node_s_0] [uuxC5KfQTZODSeNweFcB7A] [LegacyIpFieldMapperTests#testThatInvalidIpThrowsException]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatInvalidIpThrowsException(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)",
  "startTimestamp": 1474195679109,
  "executionTime": 189
 }
]

[
 "TEST_STARTED",
 "ID#testThatValidIpCanBeConvertedToLong(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:59,301][INFO ][org.elasticsearch.index.mapper] [node_s_0] [uuxC5KfQTZODSeNweFcB7A] [LegacyIpFieldMapperTests#testThatValidIpCanBeConvertedToLong]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatValidIpCanBeConvertedToLong(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)",
  "startTimestamp": 1474195679298,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreMalformedOption(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:59,308][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:59,384][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:59,423][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:59,492][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:59,505][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test2] [LegacyIpFieldMapperTests#testIgnoreMalformedOption]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreMalformedOption(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)",
  "startTimestamp": 1474195679303,
  "executionTime": 258
 }
]

[
 "TEST_STARTED",
 "ID#testThatIpv6AddressThrowsException(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:59,564][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test2] [LegacyIpFieldMapperTests#testThatIpv6AddressThrowsException]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatIpv6AddressThrowsException(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)",
  "startTimestamp": 1474195679561,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleMapping(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:59,588][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:59,684][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:59,697][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyIpFieldMapperTests#testSimpleMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleMapping(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)",
  "startTimestamp": 1474195679565,
  "executionTime": 165
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:59,730][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:59,731][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:59,731][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:59,734][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.LegacyIpFieldMapperTests",
  "startTimestamp": 1474195679085,
  "executionTime": 658
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.SearchSlowLogTests",
   "displayName": "org.elasticsearch.index.SearchSlowLogTests",
   "methodName": null,
   "className": "org.elasticsearch.index.SearchSlowLogTests",
   "children": [
    {
     "id": "ID#testSetFetchLevels(org.elasticsearch.index.SearchSlowLogTests)",
     "displayName": "testSetFetchLevels(org.elasticsearch.index.SearchSlowLogTests)",
     "methodName": "testSetFetchLevels",
     "className": "org.elasticsearch.index.SearchSlowLogTests",
     "children": []
    },
    {
     "id": "ID#testSlowLogSearchContextPrinterToLog(org.elasticsearch.index.SearchSlowLogTests)",
     "displayName": "testSlowLogSearchContextPrinterToLog(org.elasticsearch.index.SearchSlowLogTests)",
     "methodName": "testSlowLogSearchContextPrinterToLog",
     "className": "org.elasticsearch.index.SearchSlowLogTests",
     "children": []
    },
    {
     "id": "ID#testLevelSetting(org.elasticsearch.index.SearchSlowLogTests)",
     "displayName": "testLevelSetting(org.elasticsearch.index.SearchSlowLogTests)",
     "methodName": "testLevelSetting",
     "className": "org.elasticsearch.index.SearchSlowLogTests",
     "children": []
    },
    {
     "id": "ID#testSetQueryLevels(org.elasticsearch.index.SearchSlowLogTests)",
     "displayName": "testSetQueryLevels(org.elasticsearch.index.SearchSlowLogTests)",
     "methodName": "testSetQueryLevels",
     "className": "org.elasticsearch.index.SearchSlowLogTests",
     "children": []
    },
    {
     "id": "ID#testReformatSetting(org.elasticsearch.index.SearchSlowLogTests)",
     "displayName": "testReformatSetting(org.elasticsearch.index.SearchSlowLogTests)",
     "methodName": "testReformatSetting",
     "className": "org.elasticsearch.index.SearchSlowLogTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195679751
 }
]

[
 "TEST_STARTED",
 "ID#testSetFetchLevels(org.elasticsearch.index.SearchSlowLogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:59,791][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:59,824][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:59,824][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:59,827][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[8784], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:59,830][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:59,830][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:59,926][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:59,926][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:59,926][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[116]}, bound_addresses {local[116]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:59,927][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{4ULTE57uRK2zrozaXXnE_w}{5cMC_Z1QRfuHmWF4yO69BA}{local}{local[116]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:59,928][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:59,939][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:59,954][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.fetch.warn] from [400ms] to [420ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:59,955][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.fetch.info] from [300ms] to [320ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:59,955][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.fetch.debug] from [200ms] to [220ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:59,955][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.fetch.trace] from [100ms] to [120ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:59,955][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.fetch.warn] from [420ms] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:59,955][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.fetch.info] from [320ms] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:59,955][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.fetch.debug] from [220ms] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:59,955][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.fetch.trace] from [120ms] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:59,965][INFO ][org.elasticsearch.index  ]  [index] [SearchSlowLogTests#testSetFetchLevels]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetFetchLevels(org.elasticsearch.index.SearchSlowLogTests)",
  "startTimestamp": 1474195679781,
  "executionTime": 185
 }
]

[
 "TEST_STARTED",
 "ID#testSlowLogSearchContextPrinterToLog(org.elasticsearch.index.SearchSlowLogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:59,972][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [foo] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:00,025][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[foo][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:00,056][INFO ][org.elasticsearch.index  ] [node_s_0] [SearchSlowLogTests#testSlowLogSearchContextPrinterToLog]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSlowLogSearchContextPrinterToLog(org.elasticsearch.index.SearchSlowLogTests)",
  "startTimestamp": 1474195679966,
  "executionTime": 120
 }
]

[
 "TEST_STARTED",
 "ID#testLevelSetting(org.elasticsearch.index.SearchSlowLogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:00,090][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.level] from [TRACE] to [DEBUG]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:00,091][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.level] from [DEBUG] to [TRACE]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:00,096][INFO ][org.elasticsearch.index  ]  [index] [SearchSlowLogTests#testLevelSetting]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLevelSetting(org.elasticsearch.index.SearchSlowLogTests)",
  "startTimestamp": 1474195680087,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testSetQueryLevels(org.elasticsearch.index.SearchSlowLogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:00,101][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.query.warn] from [400ms] to [420ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:00,101][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.query.info] from [300ms] to [320ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:00,101][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.query.debug] from [200ms] to [220ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:00,101][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.query.trace] from [100ms] to [120ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:00,102][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.query.warn] from [420ms] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:00,102][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.query.info] from [320ms] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:00,102][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.query.debug] from [220ms] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:00,102][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.query.trace] from [120ms] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:00,112][INFO ][org.elasticsearch.index  ]  [index] [SearchSlowLogTests#testSetQueryLevels]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetQueryLevels(org.elasticsearch.index.SearchSlowLogTests)",
  "startTimestamp": 1474195680097,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testReformatSetting(org.elasticsearch.index.SearchSlowLogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:00,117][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.reformat] from [false] to [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:00,118][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.reformat] from [true] to [false]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:00,118][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.reformat] from [false] to [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:00,121][INFO ][org.elasticsearch.index  ]  [index] [SearchSlowLogTests#testReformatSetting]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReformatSetting(org.elasticsearch.index.SearchSlowLogTests)",
  "startTimestamp": 1474195680113,
  "executionTime": 12
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:00,126][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:00,126][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:00,127][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:00,129][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.SearchSlowLogTests",
  "startTimestamp": 1474195679751,
  "executionTime": 445
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.FilterRoutingTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.FilterRoutingTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.FilterRoutingTests",
   "children": [
    {
     "id": "ID#testClusterFilters(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)",
     "displayName": "testClusterFilters(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)",
     "methodName": "testClusterFilters",
     "className": "org.elasticsearch.cluster.routing.allocation.FilterRoutingTests",
     "children": []
    },
    {
     "id": "ID#testIndexFilters(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)",
     "displayName": "testIndexFilters(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)",
     "methodName": "testIndexFilters",
     "className": "org.elasticsearch.cluster.routing.allocation.FilterRoutingTests",
     "children": []
    },
    {
     "id": "ID#testConcurrentRecoveriesAfterShardsCannotRemainOnNode(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)",
     "displayName": "testConcurrentRecoveriesAfterShardsCannotRemainOnNode(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)",
     "methodName": "testConcurrentRecoveriesAfterShardsCannotRemainOnNode",
     "className": "org.elasticsearch.cluster.routing.allocation.FilterRoutingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195680202
 }
]

[
 "TEST_STARTED",
 "ID#testClusterFilters(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:48:00,225][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:48:00,227][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding four nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:48:00,228][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:48:00,228][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (replicas)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:48:00,229][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][1], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:48:00,229][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> make sure shards are only allocated on tag1 with value1 and value2%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterFilters(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)",
  "startTimestamp": 1474195680219,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testIndexFilters(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:48:00,236][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:48:00,236][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:48:00,237][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:48:00,238][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (replicas)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:48:00,238][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][1], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:48:00,238][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> make sure shards are only allocated on tag1 with value1 and value2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:48:00,238][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> switch between value2 and value4, shards should be relocating%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:48:00,242][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> finish relocation%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexFilters(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)",
  "startTimestamp": 1474195680230,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testConcurrentRecoveriesAfterShardsCannotRemainOnNode(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:48:00,250][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:48:00,250][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:48:00,251][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (only primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:48:00,252][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0], [test1][0], [test2][1], [test1][1]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:48:00,252][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> make sure all shards are started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:48:00,252][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> disable allocation for node1 and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:48:00,256][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> move shards from node1 to node2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:48:00,257][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> check that concurrent recoveries only allows 1 shard to move%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:48:00,257][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (only primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:48:00,257][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> move second shard from node1 to node2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:48:00,258][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (only primaries)%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcurrentRecoveriesAfterShardsCannotRemainOnNode(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)",
  "startTimestamp": 1474195680243,
  "executionTime": 15
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.FilterRoutingTests",
  "startTimestamp": 1474195680202,
  "executionTime": 61
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.AvgTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.AvgTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.AvgTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.AvgTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.AvgTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.AvgTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.AvgTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.AvgTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.AvgTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.AvgTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.AvgTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.AvgTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195680278
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:00,307][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Ie-dzCiPRgSN6oMxU5yuew}{local}{local[407]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.AvgTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.AvgTests)",
  "startTimestamp": 1474195680316,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.AvgTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.AvgTests)",
  "startTimestamp": 1474195680318,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.AvgTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.AvgTests)",
  "startTimestamp": 1474195680320,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.AvgTests",
  "startTimestamp": 1474195680278,
  "executionTime": 47
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.term.StringDistanceImplTests",
   "displayName": "org.elasticsearch.search.suggest.term.StringDistanceImplTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.term.StringDistanceImplTests",
   "children": [
    {
     "id": "ID#testReadFrom(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
     "displayName": "testReadFrom(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.search.suggest.term.StringDistanceImplTests",
     "children": []
    },
    {
     "id": "ID#testWriteTo(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
     "displayName": "testWriteTo(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
     "methodName": "testWriteTo",
     "className": "org.elasticsearch.search.suggest.term.StringDistanceImplTests",
     "children": []
    },
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.search.suggest.term.StringDistanceImplTests",
     "children": []
    },
    {
     "id": "ID#testFromString(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
     "displayName": "testFromString(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
     "methodName": "testFromString",
     "className": "org.elasticsearch.search.suggest.term.StringDistanceImplTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195680333
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.search.suggest.term.StringDistanceImplTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
  "startTimestamp": 1474195680393,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testWriteTo(org.elasticsearch.search.suggest.term.StringDistanceImplTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteTo(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
  "startTimestamp": 1474195680412,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.search.suggest.term.StringDistanceImplTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
  "startTimestamp": 1474195680413,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromString(org.elasticsearch.search.suggest.term.StringDistanceImplTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromString(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
  "startTimestamp": 1474195680415,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.term.StringDistanceImplTests",
  "startTimestamp": 1474195680333,
  "executionTime": 86
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests",
   "children": [
    {
     "id": "ID#testClusterLevelShardsLimitAllocate(org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests)",
     "displayName": "testClusterLevelShardsLimitAllocate(org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests)",
     "methodName": "testClusterLevelShardsLimitAllocate",
     "className": "org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests",
     "children": []
    },
    {
     "id": "ID#testIndexLevelShardsLimitRemain(org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests)",
     "displayName": "testIndexLevelShardsLimitRemain(org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests)",
     "methodName": "testIndexLevelShardsLimitRemain",
     "className": "org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests",
     "children": []
    },
    {
     "id": "ID#testIndexLevelShardsLimitAllocate(org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests)",
     "displayName": "testIndexLevelShardsLimitAllocate(org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests)",
     "methodName": "testIndexLevelShardsLimitAllocate",
     "className": "org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195680425
 }
]

[
 "TEST_STARTED",
 "ID#testClusterLevelShardsLimitAllocate(org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:00,453][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:00,455][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding two nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:00,456][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:00,456][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the primary shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:00,462][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Do another reroute, make sure shards are now allocated%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:00,465][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test][2], [test][3]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterLevelShardsLimitAllocate(org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests)",
  "startTimestamp": 1474195680447,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testIndexLevelShardsLimitRemain(org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:00,486][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:00,487][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding one node and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:00,495][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the primary shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:00,496][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][1], [test][4], [test][2], [test][3], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:00,497][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] add another index with 5 shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:00,497][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Add another one node and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:00,498][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][1], [test1][4], [test1][2], [test1][3], [test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:00,499][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] update index.routing.allocation.total_shards_per_node for test, see that things move%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:00,499][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] reroute after setting%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexLevelShardsLimitRemain(org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests)",
  "startTimestamp": 1474195680465,
  "executionTime": 36
 }
]

[
 "TEST_STARTED",
 "ID#testIndexLevelShardsLimitAllocate(org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:00,507][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:00,507][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding two nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:00,508][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the primary shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:00,508][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Do another reroute, make sure its still not allocated%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexLevelShardsLimitAllocate(org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests)",
  "startTimestamp": 1474195680501,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests",
  "startTimestamp": 1474195680425,
  "executionTime": 85
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.index.IndexRequestBuilderTests",
   "displayName": "org.elasticsearch.action.index.IndexRequestBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.action.index.IndexRequestBuilderTests",
   "children": [
    {
     "id": "ID#testSetSource(org.elasticsearch.action.index.IndexRequestBuilderTests)",
     "displayName": "testSetSource(org.elasticsearch.action.index.IndexRequestBuilderTests)",
     "methodName": "testSetSource",
     "className": "org.elasticsearch.action.index.IndexRequestBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195680519
 }
]

[
 "TEST_STARTED",
 "ID#testSetSource(org.elasticsearch.action.index.IndexRequestBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetSource(org.elasticsearch.action.index.IndexRequestBuilderTests)",
  "startTimestamp": 1474195680541,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.index.IndexRequestBuilderTests",
  "startTimestamp": 1474195680519,
  "executionTime": 28
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.IndexFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.IndexFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.IndexFieldTypeTests",
   "children": [
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.IndexFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.IndexFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.IndexFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.IndexFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.IndexFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195680553
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.IndexFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
  "startTimestamp": 1474195680581,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.IndexFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
  "startTimestamp": 1474195680583,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.IndexFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
  "startTimestamp": 1474195680586,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.IndexFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
  "startTimestamp": 1474195680588,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.IndexFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
  "startTimestamp": 1474195680594,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.IndexFieldTypeTests",
  "startTimestamp": 1474195680553,
  "executionTime": 44
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
   "displayName": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
   "children": [
    {
     "id": "ID#testIndexingWithNoContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testIndexingWithNoContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testIndexingWithNoContexts",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testQueryContextParsingArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testQueryContextParsingArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testQueryContextParsingArray",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testParsingContextFromDocument(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testParsingContextFromDocument(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testParsingContextFromDocument",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testIndexingWithSimpleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testIndexingWithSimpleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testIndexingWithSimpleContexts",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testQueryContextParsingObjectArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testQueryContextParsingObjectArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testQueryContextParsingObjectArray",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testQueryContextParsingMixed(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testQueryContextParsingMixed(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testQueryContextParsingMixed",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testIndexingWithMultipleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testIndexingWithMultipleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testIndexingWithMultipleContexts",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testIndexingWithContextList(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testIndexingWithContextList(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testIndexingWithContextList",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testQueryContextParsingObject(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testQueryContextParsingObject(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testQueryContextParsingObject",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testQueryContextParsingBasic(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testQueryContextParsingBasic(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testQueryContextParsingBasic",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195680605
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingWithNoContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:00,628][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:00,710][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:00,710][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:00,714][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[8784], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:00,716][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:00,716][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:01,030][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:01,030][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:01,031][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[117]}, bound_addresses {local[117]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:01,047][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{M1k3jnOyTyagpLj_vB7M5g}{f9Q7woQASiWTsCX3hbkSzA}{local}{local[117]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:01,048][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:01,098][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:01,230][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:02,197][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:02,427][INFO ][org.elasticsearch.search.suggest.completion] [CategoryContextMappingTests#testIndexingWithNoContexts]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingWithNoContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1474195680619,
  "executionTime": 1922
 }
]

[
 "TEST_STARTED",
 "ID#testQueryContextParsingArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:02,551][INFO ][org.elasticsearch.search.suggest.completion] [CategoryContextMappingTests#testQueryContextParsingArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryContextParsingArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1474195682541,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testParsingContextFromDocument(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:02,555][INFO ][org.elasticsearch.search.suggest.completion] [CategoryContextMappingTests#testParsingContextFromDocument]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingContextFromDocument(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1474195682552,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingWithSimpleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:02,562][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:03,102][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:03,165][INFO ][org.elasticsearch.search.suggest.completion] [CategoryContextMappingTests#testIndexingWithSimpleContexts]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingWithSimpleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1474195682556,
  "executionTime": 1090
 }
]

[
 "TEST_STARTED",
 "ID#testQueryContextParsingObjectArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:03,649][INFO ][org.elasticsearch.search.suggest.completion] [CategoryContextMappingTests#testQueryContextParsingObjectArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryContextParsingObjectArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1474195683646,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testQueryContextParsingMixed(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:03,653][INFO ][org.elasticsearch.search.suggest.completion] [CategoryContextMappingTests#testQueryContextParsingMixed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryContextParsingMixed(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1474195683651,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingWithMultipleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:03,674][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:05,144][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:05,303][INFO ][org.elasticsearch.search.suggest.completion] [CategoryContextMappingTests#testIndexingWithMultipleContexts]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingWithMultipleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1474195683655,
  "executionTime": 2048
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingWithContextList(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:05,709][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:06,490][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:06,569][INFO ][org.elasticsearch.search.suggest.completion] [CategoryContextMappingTests#testIndexingWithContextList]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingWithContextList(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1474195685703,
  "executionTime": 921
 }
]

[
 "TEST_STARTED",
 "ID#testQueryContextParsingObject(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:06,626][INFO ][org.elasticsearch.search.suggest.completion] [CategoryContextMappingTests#testQueryContextParsingObject]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryContextParsingObject(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1474195686624,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQueryContextParsingBasic(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:06,630][INFO ][org.elasticsearch.search.suggest.completion] [CategoryContextMappingTests#testQueryContextParsingBasic]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryContextParsingBasic(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1474195686627,
  "executionTime": 4
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:06,631][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:06,631][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:06,632][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:06,633][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
  "startTimestamp": 1474195680605,
  "executionTime": 6033
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.NumberFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
   "children": [
    {
     "id": "ID#testEmptyName(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "displayName": "testEmptyName(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "methodName": "testEmptyName",
     "className": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNoDocValues(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "displayName": "testNoDocValues(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "methodName": "testNoDocValues",
     "className": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIncludeInAll(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "displayName": "testIncludeInAll(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "methodName": "testIncludeInAll",
     "className": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreMalformed(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "displayName": "testIgnoreMalformed(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "methodName": "testIgnoreMalformed",
     "className": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testStore(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "displayName": "testStore(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "methodName": "testStore",
     "className": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNullValue(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "displayName": "testNullValue(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "methodName": "testNullValue",
     "className": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaults(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "displayName": "testDefaults(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "methodName": "testDefaults",
     "className": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testCoerce(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "displayName": "testCoerce(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "methodName": "testCoerce",
     "className": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testRejectNorms(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "displayName": "testRejectNorms(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "methodName": "testRejectNorms",
     "className": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNotIndexed(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "displayName": "testNotIndexed(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "methodName": "testNotIndexed",
     "className": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195686646
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyName(org.elasticsearch.index.mapper.NumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:06,667][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:06,686][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:06,686][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:06,690][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[8784], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:06,692][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:06,692][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:06,787][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:06,787][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:06,788][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[118]}, bound_addresses {local[118]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:06,789][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{wIgdHlcDRYKE7K42sl4oRg}{4jJ9Kv82RRm9ey1ZLbhk-Q}{local}{local[118]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:06,789][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:06,800][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:06,815][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:06,858][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:06,872][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_old] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:06,913][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_old][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:06,947][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test_old] [NumberFieldMapperTests#testEmptyName]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyName(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
  "startTimestamp": 1474195686659,
  "executionTime": 327
 }
]

[
 "TEST_STARTED",
 "ID#testNoDocValues(org.elasticsearch.index.mapper.NumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:06,992][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:07,039][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:07,057][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NumberFieldMapperTests#testNoDocValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoDocValues(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
  "startTimestamp": 1474195686986,
  "executionTime": 133
 }
]

[
 "TEST_STARTED",
 "ID#testIncludeInAll(org.elasticsearch.index.mapper.NumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:07,124][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:07,170][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:07,219][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NumberFieldMapperTests#testIncludeInAll]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludeInAll(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
  "startTimestamp": 1474195687119,
  "executionTime": 126
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreMalformed(org.elasticsearch.index.mapper.NumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:07,251][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:07,290][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:07,309][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NumberFieldMapperTests#testIgnoreMalformed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreMalformed(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
  "startTimestamp": 1474195687245,
  "executionTime": 87
 }
]

[
 "TEST_STARTED",
 "ID#testStore(org.elasticsearch.index.mapper.NumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:07,337][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:07,378][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:07,393][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NumberFieldMapperTests#testStore]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStore(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
  "startTimestamp": 1474195687333,
  "executionTime": 87
 }
]

[
 "TEST_STARTED",
 "ID#testNullValue(org.elasticsearch.index.mapper.NumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:07,426][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:07,473][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:07,493][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NumberFieldMapperTests#testNullValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullValue(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
  "startTimestamp": 1474195687420,
  "executionTime": 107
 }
]

[
 "TEST_STARTED",
 "ID#testDefaults(org.elasticsearch.index.mapper.NumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:07,533][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:07,582][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:07,611][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NumberFieldMapperTests#testDefaults]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaults(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
  "startTimestamp": 1474195687527,
  "executionTime": 114
 }
]

[
 "TEST_STARTED",
 "ID#testCoerce(org.elasticsearch.index.mapper.NumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:07,647][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:07,698][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:07,718][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NumberFieldMapperTests#testCoerce]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCoerce(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
  "startTimestamp": 1474195687641,
  "executionTime": 126
 }
]

[
 "TEST_STARTED",
 "ID#testRejectNorms(org.elasticsearch.index.mapper.NumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:07,773][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:07,821][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:07,840][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-byte] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:07,909][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-byte][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:07,925][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-short] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:08,010][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-short][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:08,029][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-integer] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:08,082][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-integer][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:08,097][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-long] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:08,147][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-long][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:08,163][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-float] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:08,235][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-float][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:08,251][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-double] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:08,328][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-double][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:08,398][INFO ][org.elasticsearch.index.mapper] [node_s_0] [index-double] [NumberFieldMapperTests#testRejectNorms]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRejectNorms(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
  "startTimestamp": 1474195687767,
  "executionTime": 752
 }
]

[
 "TEST_STARTED",
 "ID#testNotIndexed(org.elasticsearch.index.mapper.NumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:08,525][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:08,593][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:08,623][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NumberFieldMapperTests#testNotIndexed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotIndexed(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
  "startTimestamp": 1474195688519,
  "executionTime": 129
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:08,649][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:08,650][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:08,650][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:08,652][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.NumberFieldMapperTests",
  "startTimestamp": 1474195686646,
  "executionTime": 2016
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.ESExceptionTests",
   "displayName": "org.elasticsearch.ESExceptionTests",
   "methodName": null,
   "className": "org.elasticsearch.ESExceptionTests",
   "children": [
    {
     "id": "ID#testStatus(org.elasticsearch.ESExceptionTests)",
     "displayName": "testStatus(org.elasticsearch.ESExceptionTests)",
     "methodName": "testStatus",
     "className": "org.elasticsearch.ESExceptionTests",
     "children": []
    },
    {
     "id": "ID#testWriteThrowable(org.elasticsearch.ESExceptionTests)",
     "displayName": "testWriteThrowable(org.elasticsearch.ESExceptionTests)",
     "methodName": "testWriteThrowable",
     "className": "org.elasticsearch.ESExceptionTests",
     "children": []
    },
    {
     "id": "ID#testToString(org.elasticsearch.ESExceptionTests)",
     "displayName": "testToString(org.elasticsearch.ESExceptionTests)",
     "methodName": "testToString",
     "className": "org.elasticsearch.ESExceptionTests",
     "children": []
    },
    {
     "id": "ID#testGetRootCause(org.elasticsearch.ESExceptionTests)",
     "displayName": "testGetRootCause(org.elasticsearch.ESExceptionTests)",
     "methodName": "testGetRootCause",
     "className": "org.elasticsearch.ESExceptionTests",
     "children": []
    },
    {
     "id": "ID#testGuessRootCause(org.elasticsearch.ESExceptionTests)",
     "displayName": "testGuessRootCause(org.elasticsearch.ESExceptionTests)",
     "methodName": "testGuessRootCause",
     "className": "org.elasticsearch.ESExceptionTests",
     "children": []
    },
    {
     "id": "ID#testSerializeElasticsearchException(org.elasticsearch.ESExceptionTests)",
     "displayName": "testSerializeElasticsearchException(org.elasticsearch.ESExceptionTests)",
     "methodName": "testSerializeElasticsearchException",
     "className": "org.elasticsearch.ESExceptionTests",
     "children": []
    },
    {
     "id": "ID#testDeduplicate(org.elasticsearch.ESExceptionTests)",
     "displayName": "testDeduplicate(org.elasticsearch.ESExceptionTests)",
     "methodName": "testDeduplicate",
     "className": "org.elasticsearch.ESExceptionTests",
     "children": []
    },
    {
     "id": "ID#testToXContent(org.elasticsearch.ESExceptionTests)",
     "displayName": "testToXContent(org.elasticsearch.ESExceptionTests)",
     "methodName": "testToXContent",
     "className": "org.elasticsearch.ESExceptionTests",
     "children": []
    },
    {
     "id": "ID#testSerializeUnknownException(org.elasticsearch.ESExceptionTests)",
     "displayName": "testSerializeUnknownException(org.elasticsearch.ESExceptionTests)",
     "methodName": "testSerializeUnknownException",
     "className": "org.elasticsearch.ESExceptionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195688670
 }
]

[
 "TEST_STARTED",
 "ID#testStatus(org.elasticsearch.ESExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStatus(org.elasticsearch.ESExceptionTests)",
  "startTimestamp": 1474195688717,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWriteThrowable(org.elasticsearch.ESExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteThrowable(org.elasticsearch.ESExceptionTests)",
  "startTimestamp": 1474195688719,
  "executionTime": 83
 }
]

[
 "TEST_STARTED",
 "ID#testToString(org.elasticsearch.ESExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToString(org.elasticsearch.ESExceptionTests)",
  "startTimestamp": 1474195688802,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGetRootCause(org.elasticsearch.ESExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetRootCause(org.elasticsearch.ESExceptionTests)",
  "startTimestamp": 1474195688804,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testGuessRootCause(org.elasticsearch.ESExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGuessRootCause(org.elasticsearch.ESExceptionTests)",
  "startTimestamp": 1474195688806,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSerializeElasticsearchException(org.elasticsearch.ESExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerializeElasticsearchException(org.elasticsearch.ESExceptionTests)",
  "startTimestamp": 1474195688811,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDeduplicate(org.elasticsearch.ESExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeduplicate(org.elasticsearch.ESExceptionTests)",
  "startTimestamp": 1474195688813,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToXContent(org.elasticsearch.ESExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToXContent(org.elasticsearch.ESExceptionTests)",
  "startTimestamp": 1474195688815,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerializeUnknownException(org.elasticsearch.ESExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerializeUnknownException(org.elasticsearch.ESExceptionTests)",
  "startTimestamp": 1474195688817,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.ESExceptionTests",
  "startTimestamp": 1474195688670,
  "executionTime": 151
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.DynamicMappingTests",
   "displayName": "org.elasticsearch.index.mapper.DynamicMappingTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
   "children": [
    {
     "id": "ID#testDynamicMappingOnEmptyString(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicMappingOnEmptyString(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicMappingOnEmptyString",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDynamicStrictWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicStrictWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicStrictWithInnerObjectButDynamicSetOnRoot",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testComplexArray(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testComplexArray(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testComplexArray",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testTypeNotCreatedOnIndexFailure(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testTypeNotCreatedOnIndexFailure(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testTypeNotCreatedOnIndexFailure",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testIncremental(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testIncremental(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testIncremental",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testIntroduceTwoFields(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testIntroduceTwoFields(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testIntroduceTwoFields",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testNumericDetectionEnabled(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testNumericDetectionEnabled(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testNumericDetectionEnabled",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testField(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testField(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testField",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testInnerDynamicMapping(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testInnerDynamicMapping(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testInnerDynamicMapping",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDynamicFalse(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicFalse(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicFalse",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDefaultFloatingPointMappings(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDefaultFloatingPointMappings(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDefaultFloatingPointMappings",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDynamicFalseWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicFalseWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicFalseWithInnerObjectButDynamicSetOnRoot",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testObject(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testObject(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testObject",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDynamicTrue(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicTrue(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicTrue",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testArray(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testArray(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testArray",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testReuseExistingMappings(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testReuseExistingMappings(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testReuseExistingMappings",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDynamicStrict(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicStrict(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicStrict",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDynamicTemplateOrder(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicTemplateOrder(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicTemplateOrder",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testMixTemplateMultiFieldAndMappingReuse(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testMixTemplateMultiFieldAndMappingReuse(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testMixTemplateMultiFieldAndMappingReuse",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDynamicMappingsNotNeeded(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicMappingsNotNeeded(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicMappingsNotNeeded",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testNumericDetectionDefault(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testNumericDetectionDefault(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testNumericDetectionDefault",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195688830
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicMappingOnEmptyString(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:08,928][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:08,955][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:08,955][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:08,958][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[8784], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:08,960][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:08,960][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:09,106][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:09,106][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:09,106][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[119]}, bound_addresses {local[119]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:09,107][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{F9P9-9ToStGG2MAjTuXZWQ}{lrb-gwp6SqiqioUrweWB2A}{local}{local[119]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:09,108][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:09,119][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:09,135][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:09,190][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:09,389][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/u9-XV9x_SMSDdwmq4fvAQw] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:09,410][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testDynamicMappingOnEmptyString]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicMappingOnEmptyString(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474195688882,
  "executionTime": 564
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicStrictWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:09,452][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:09,501][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:09,519][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testDynamicStrictWithInnerObjectButDynamicSetOnRoot]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicStrictWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474195689447,
  "executionTime": 111
 }
]

[
 "TEST_STARTED",
 "ID#testComplexArray(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:09,564][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:09,605][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:09,617][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testComplexArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testComplexArray(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474195689559,
  "executionTime": 85
 }
]

[
 "TEST_STARTED",
 "ID#testTypeNotCreatedOnIndexFailure(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:09,651][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [_default_]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:09,689][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:09,708][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testTypeNotCreatedOnIndexFailure]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeNotCreatedOnIndexFailure(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474195689644,
  "executionTime": 96
 }
]

[
 "TEST_STARTED",
 "ID#testIncremental(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:09,745][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:09,795][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:09,811][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testIncremental]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncremental(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474195689740,
  "executionTime": 99
 }
]

[
 "TEST_STARTED",
 "ID#testIntroduceTwoFields(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:09,845][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:09,942][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:09,957][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testIntroduceTwoFields]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIntroduceTwoFields(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474195689840,
  "executionTime": 166
 }
]

[
 "TEST_STARTED",
 "ID#testNumericDetectionEnabled(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:10,012][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:10,128][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:10,184][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/xDNy4EARRZaE9mLBrAk29w] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:10,220][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/xDNy4EARRZaE9mLBrAk29w] update_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:10,239][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testNumericDetectionEnabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNumericDetectionEnabled(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474195690006,
  "executionTime": 260
 }
]

[
 "TEST_STARTED",
 "ID#testField(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:10,274][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:10,502][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:10,528][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testField]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testField(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474195690266,
  "executionTime": 304
 }
]

[
 "TEST_STARTED",
 "ID#testInnerDynamicMapping(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:10,579][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:10,726][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:10,741][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testInnerDynamicMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInnerDynamicMapping(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474195690570,
  "executionTime": 230
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicFalse(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:10,806][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:10,889][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:10,909][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testDynamicFalse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicFalse(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474195690801,
  "executionTime": 134
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultFloatingPointMappings(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:10,940][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:11,029][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:11,043][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testDefaultFloatingPointMappings]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultFloatingPointMappings(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474195690935,
  "executionTime": 160
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicFalseWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:11,101][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:11,147][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:11,160][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testDynamicFalseWithInnerObjectButDynamicSetOnRoot]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicFalseWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474195691095,
  "executionTime": 98
 }
]

[
 "TEST_STARTED",
 "ID#testObject(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:11,203][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:11,263][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:11,274][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testObject]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testObject(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474195691193,
  "executionTime": 164
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicTrue(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:11,363][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:11,411][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:11,425][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testDynamicTrue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicTrue(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474195691357,
  "executionTime": 92
 }
]

[
 "TEST_STARTED",
 "ID#testArray(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:11,455][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:11,496][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:11,507][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArray(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474195691449,
  "executionTime": 82
 }
]

[
 "TEST_STARTED",
 "ID#testReuseExistingMappings(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:11,540][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:11,582][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:11,595][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testReuseExistingMappings]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReuseExistingMappings(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474195691532,
  "executionTime": 112
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicStrict(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:11,649][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:11,688][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:11,712][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testDynamicStrict]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicStrict(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474195691644,
  "executionTime": 91
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicTemplateOrder(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:11,743][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:11,798][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:11,826][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/ifJIGD-PSkWkUx2MJHLOpA] update_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:11,862][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testDynamicTemplateOrder]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicTemplateOrder(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474195691735,
  "executionTime": 168
 }
]

[
 "TEST_STARTED",
 "ID#testMixTemplateMultiFieldAndMappingReuse(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:11,909][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:11,993][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:12,023][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testMixTemplateMultiFieldAndMappingReuse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMixTemplateMultiFieldAndMappingReuse(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474195691903,
  "executionTime": 158
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicMappingsNotNeeded(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:12,068][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:12,114][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:12,172][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testDynamicMappingsNotNeeded]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicMappingsNotNeeded(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474195692061,
  "executionTime": 192
 }
]

[
 "TEST_STARTED",
 "ID#testNumericDetectionDefault(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:12,259][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:12,323][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:12,346][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/iVOJFmRMSbWUndOPQG-NLA] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:12,365][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/iVOJFmRMSbWUndOPQG-NLA] update_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:12,395][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testNumericDetectionDefault]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNumericDetectionDefault(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1474195692253,
  "executionTime": 208
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:12,462][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:12,462][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:12,462][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:12,466][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.DynamicMappingTests",
  "startTimestamp": 1474195688830,
  "executionTime": 3674
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests",
   "displayName": "org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests",
   "children": [
    {
     "id": "ID#testDecisionEquality(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
     "displayName": "testDecisionEquality(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
     "methodName": "testDecisionEquality",
     "className": "org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests",
     "children": []
    },
    {
     "id": "ID#testExplanationToXContent(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
     "displayName": "testExplanationToXContent(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
     "methodName": "testExplanationToXContent",
     "className": "org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests",
     "children": []
    },
    {
     "id": "ID#testExplanationSerialization(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
     "displayName": "testExplanationSerialization(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
     "methodName": "testExplanationSerialization",
     "className": "org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests",
     "children": []
    },
    {
     "id": "ID#testDecisionAndExplanation(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
     "displayName": "testDecisionAndExplanation(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
     "methodName": "testDecisionAndExplanation",
     "className": "org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195692555
 }
]

[
 "TEST_STARTED",
 "ID#testDecisionEquality(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDecisionEquality(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
  "startTimestamp": 1474195692614,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testExplanationToXContent(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExplanationToXContent(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
  "startTimestamp": 1474195692616,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testExplanationSerialization(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExplanationSerialization(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
  "startTimestamp": 1474195692630,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testDecisionAndExplanation(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDecisionAndExplanation(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
  "startTimestamp": 1474195692635,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests",
  "startTimestamp": 1474195692555,
  "executionTime": 85
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.ParentChildFieldDataTests",
   "displayName": "org.elasticsearch.index.fielddata.ParentChildFieldDataTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.ParentChildFieldDataTests",
   "children": [
    {
     "id": "ID#testGetBytesValues(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
     "displayName": "testGetBytesValues(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
     "methodName": "testGetBytesValues",
     "className": "org.elasticsearch.index.fielddata.ParentChildFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testThreads(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
     "displayName": "testThreads(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
     "methodName": "testThreads",
     "className": "org.elasticsearch.index.fielddata.ParentChildFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSorting(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
     "displayName": "testSorting(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
     "methodName": "testSorting",
     "className": "org.elasticsearch.index.fielddata.ParentChildFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
     "displayName": "testEmpty(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.index.fielddata.ParentChildFieldDataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195692647
 }
]

[
 "TEST_STARTED",
 "ID#testGetBytesValues(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:12,681][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:12,705][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:12,705][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:12,709][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[8784], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:12,711][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:12,711][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:12,846][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:12,847][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:12,847][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[120]}, bound_addresses {local[120]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:12,859][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{WPgiWMKLQmeg4JMEZj3UcA}{n6HxTXp0RiieTeugM9ZMpA}{local}{local[120]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:12,859][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:12,921][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:12,950][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:13,011][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:13,074][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [ParentChildFieldDataTests#testGetBytesValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetBytesValues(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
  "startTimestamp": 1474195692673,
  "executionTime": 435
 }
]

[
 "TEST_STARTED",
 "ID#testThreads(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:13,114][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:13,191][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:13,928][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [ParentChildFieldDataTests#testThreads]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThreads(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
  "startTimestamp": 1474195693108,
  "executionTime": 865
 }
]

[
 "TEST_STARTED",
 "ID#testSorting(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:13,978][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:14,041][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:14,089][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [ParentChildFieldDataTests#testSorting]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSorting(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
  "startTimestamp": 1474195693973,
  "executionTime": 230
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:14,212][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:14,264][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:14,292][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [ParentChildFieldDataTests#testEmpty]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
  "startTimestamp": 1474195694203,
  "executionTime": 138
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:14,342][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:14,342][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:14,342][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:14,344][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.ParentChildFieldDataTests",
  "startTimestamp": 1474195692647,
  "executionTime": 1703
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
   "displayName": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
   "children": [
    {
     "id": "ID#testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSimpleArrayExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSimpleFieldExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSingleFieldWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRawField(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRawField",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testWithLfAtEnd",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSingleFieldObject",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testObjectsInArrayWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testArrays(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testArrays",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsPropertyExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRecurseField4Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testNoFiltering",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRecursiveObjectsPropertiesWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testNoMatch(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testNoMatch",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRecursiveObjectsInArrayWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRecurseField4Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRecursiveSameObjectWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSimpleFieldWithWildcardInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsPropertyInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRecurseField1Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRecurseField3Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testMultipleFieldsExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRecurseField2Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSimpleArrayInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRecurseField3Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSimpleFieldWithWildcardExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSimpleFieldInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRecurseField2Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testEmptyObject",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testRecurseField1Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "displayName": "testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
     "methodName": "testMultipleFieldsInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195694363
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474195694403,
  "executionTime": 34
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474195694438,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474195694443,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474195694448,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474195694456,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474195694461,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474195694465,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474195694469,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474195694472,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474195694476,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474195694478,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474195694482,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474195694485,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474195694487,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474195694494,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474195694497,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474195694499,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474195694503,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474195694508,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474195694510,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474195694513,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474195694516,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474195694520,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474195694530,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474195694532,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474195694535,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474195694537,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474195694548,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474195694552,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474195694554,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474195694557,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests)",
  "startTimestamp": 1474195694560,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.support.filtering.YamlFilteringGeneratorTests",
  "startTimestamp": 1474195694363,
  "executionTime": 203
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.MaxTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.MaxTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.MaxTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.MaxTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.MaxTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.MaxTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.MaxTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.MaxTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.MaxTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.MaxTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.MaxTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.MaxTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195694573
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:14,609][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{LWygjchOQ7GxRX4YoX_2-g}{local}{local[418]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.MaxTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.MaxTests)",
  "startTimestamp": 1474195694618,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.MaxTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.MaxTests)",
  "startTimestamp": 1474195694620,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.MaxTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.MaxTests)",
  "startTimestamp": 1474195694624,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.MaxTests",
  "startTimestamp": 1474195694573,
  "executionTime": 62
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.ingest.IngestDocumentTests",
   "displayName": "org.elasticsearch.ingest.IngestDocumentTests",
   "methodName": null,
   "className": "org.elasticsearch.ingest.IngestDocumentTests",
   "children": [
    {
     "id": "ID#testRemoveExistingParentTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testRemoveExistingParentTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testRemoveExistingParentTypeMismatch",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testIngestMetadataTimestamp(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testIngestMetadataTimestamp(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testIngestMetadataTimestamp",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testRemoveIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testRemoveIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testRemoveIngestObject",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValuesConvertStringToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValuesConvertStringToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValuesConvertStringToList",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListSetFieldValueNoIndexProvided(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListSetFieldValueNoIndexProvided(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListSetFieldValueNoIndexProvided",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValueToListOfMaps(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValueToListOfMaps(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValueToListOfMaps",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testGetSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testGetSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testGetSourceObject",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListRemoveFieldIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListRemoveFieldIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListRemoveFieldIndexNotNumeric",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListGetFieldValueNull(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListGetFieldValueNull(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListGetFieldValueNull",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetFieldValueOnExistingField(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetFieldValueOnExistingField(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetFieldValueOnExistingField",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListHasFieldIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListHasFieldIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListHasFieldIndexNotNumeric",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListGetFieldValue",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testGetFieldValueNotFound(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testGetFieldValueNotFound(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testGetFieldValueNotFound",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testNestedGetFieldValueTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testNestedGetFieldValueTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testNestedGetFieldValueTypeMismatch",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetIngestSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetIngestSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetIngestSourceObject",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testGetFieldValueNullValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testGetFieldValueNullValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testGetFieldValueNullValue",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testHasFieldNotFound(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testHasFieldNotFound(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testHasFieldNotFound",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValueToListElement(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValueToListElement(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValueToListElement",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSimpleGetFieldValueTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSimpleGetFieldValueTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSimpleGetFieldValueTypeMismatch",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetIngestObject",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetFieldValueListAsPartOfPath(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetFieldValueListAsPartOfPath(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetFieldValueListAsPartOfPath",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValueConvertIntegerToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValueConvertIntegerToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValueConvertIntegerToList",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testRemoveInnerField(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testRemoveInnerField(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testRemoveInnerField",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListHasFieldIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListHasFieldIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListHasFieldIndexOutOfBounds",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testRemoveNullField(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testRemoveNullField(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testRemoveNullField",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSimpleGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSimpleGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSimpleGetFieldValue",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValueConvertStringToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValueConvertStringToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValueConvertStringToList",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValueConvertStringListElementToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValueConvertStringListElementToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValueConvertStringListElementToList",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testCopyConstructor(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testCopyConstructor(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testCopyConstructor",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListGetFieldValueIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListGetFieldValueIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListGetFieldValueIndexNotNumeric",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testNestedRemoveFieldTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testNestedRemoveFieldTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testNestedRemoveFieldTypeMismatch",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSimpleSetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSimpleSetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSimpleSetFieldValue",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListHasFieldIndexOutOfBounds_fail(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListHasFieldIndexOutOfBounds_fail(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListHasFieldIndexOutOfBounds_fail",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetEmptyPathAfterStrippingOutPrefix",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListRemoveFieldIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListRemoveFieldIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListRemoveFieldIndexOutOfBounds",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testHasFieldNested(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testHasFieldNested(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testHasFieldNested",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetFieldValueEmptyName(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetFieldValueEmptyName(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetFieldValueEmptyName",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValuesToNonExistingList(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValuesToNonExistingList(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValuesToNonExistingList",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testHasFieldNullValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testHasFieldNullValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testHasFieldNullValue",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testNestedHasFieldTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testNestedHasFieldTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testNestedHasFieldTypeMismatch",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testRemoveSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testRemoveSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testRemoveSourceObject",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testNestedSetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testNestedSetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testNestedSetFieldValue",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListHasField(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListHasField(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListHasField",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValuesToListElement(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValuesToListElement(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValuesToListElement",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValueToNullListElement(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValueToNullListElement(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValueToNullListElement",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValueToNonExistingList(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValueToNonExistingList(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValueToNonExistingList",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testRemoveEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testRemoveEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testRemoveEmptyPathAfterStrippingOutPrefix",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testGetFieldValueNull(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testGetFieldValueNull(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testGetFieldValueNull",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testNestedGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testNestedGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testNestedGetFieldValue",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testGetFieldValueEmpty(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testGetFieldValueEmpty(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testGetFieldValueEmpty",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testHasFieldNull(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testHasFieldNull(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testHasFieldNull",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListSetFieldValueIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListSetFieldValueIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListSetFieldValueIndexNotNumeric",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListGetFieldValueIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListGetFieldValueIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListGetFieldValueIndexOutOfBounds",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValuesConvertIntegerToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValuesConvertIntegerToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValuesConvertIntegerToList",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetFieldValueOnExistingParentTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetFieldValueOnExistingParentTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetFieldValueOnExistingParentTypeMismatch",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testHasFieldSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testHasFieldSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testHasFieldSourceObject",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListAppendFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListAppendFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListAppendFieldValue",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testHasFieldEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testHasFieldEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testHasFieldEmptyPathAfterStrippingOutPrefix",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testHasField(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testHasField(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testHasField",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testRemoveEmptyField(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testRemoveEmptyField(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testRemoveEmptyField",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetFieldValueNullName(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetFieldValueNullName(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetFieldValueNullName",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetFieldValueOnExistingParent(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetFieldValueOnExistingParent(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetFieldValueOnExistingParent",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListSetFieldValueIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListSetFieldValueIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListSetFieldValueIndexOutOfBounds",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetSourceObject",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValueConvertMapToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValueConvertMapToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValueConvertMapToList",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testHasFieldIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testHasFieldIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testHasFieldIngestObject",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testGetEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testGetEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testGetEmptyPathAfterStrippingOutPrefix",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListHasFieldNull(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListHasFieldNull(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListHasFieldNull",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValueToNull(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValueToNull(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValueToNull",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListAppendFieldValues(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListAppendFieldValues(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListAppendFieldValues",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testRemoveNonExistingField(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testRemoveNonExistingField(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testRemoveNonExistingField",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetFieldValueOnExistingNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetFieldValueOnExistingNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetFieldValueOnExistingNullParent",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testHasFieldEmpty(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testHasFieldEmpty(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testHasFieldEmpty",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetInvalidSourceField(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetInvalidSourceField(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetInvalidSourceField",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testHasFieldNestedNotFound(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testHasFieldNestedNotFound(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testHasFieldNestedNotFound",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testGetIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testGetIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testGetIngestObject",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testHasFieldNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testHasFieldNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testHasFieldNotFoundNullParent",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetFieldValueNullValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetFieldValueNullValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetFieldValueNullValue",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testGetFieldValueNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testGetFieldValueNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testGetFieldValueNotFoundNullParent",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListSetFieldValueIndexProvided(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListSetFieldValueIndexProvided(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListSetFieldValueIndexProvided",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListRemoveField(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListRemoveField(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListRemoveField",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValueListElementConvertMapToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValueListElementConvertMapToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValueListElementConvertMapToList",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testRemoveField(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testRemoveField(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testRemoveField",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValuesConvertStringListElementToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValuesConvertStringListElementToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValuesConvertStringListElementToList",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testRemoveFieldValueNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testRemoveFieldValueNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testRemoveFieldValueNotFoundNullParent",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195694646
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveExistingParentTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveExistingParentTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694663,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIngestMetadataTimestamp(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIngestMetadataTimestamp(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694666,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveIngestObject(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694669,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValuesConvertStringToList(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValuesConvertStringToList(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694671,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListSetFieldValueNoIndexProvided(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListSetFieldValueNoIndexProvided(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694673,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValueToListOfMaps(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValueToListOfMaps(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694675,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGetSourceObject(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694678,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testListRemoveFieldIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListRemoveFieldIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694680,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListGetFieldValueNull(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListGetFieldValueNull(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694682,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSetFieldValueOnExistingField(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetFieldValueOnExistingField(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694684,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListHasFieldIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListHasFieldIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694686,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694688,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGetFieldValueNotFound(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetFieldValueNotFound(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694690,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNestedGetFieldValueTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedGetFieldValueTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694692,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSetIngestSourceObject(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetIngestSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694694,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGetFieldValueNullValue(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetFieldValueNullValue(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694696,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testHasFieldNotFound(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasFieldNotFound(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694699,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValueToListElement(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValueToListElement(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694701,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleGetFieldValueTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleGetFieldValueTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694703,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSetIngestObject(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694705,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSetFieldValueListAsPartOfPath(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetFieldValueListAsPartOfPath(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694707,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValueConvertIntegerToList(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValueConvertIntegerToList(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694710,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveInnerField(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveInnerField(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694712,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListHasFieldIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListHasFieldIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694714,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveNullField(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveNullField(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694716,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694718,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValueConvertStringToList(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValueConvertStringToList(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694722,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValueConvertStringListElementToList(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValueConvertStringListElementToList(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694724,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCopyConstructor(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyConstructor(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694726,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListGetFieldValueIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListGetFieldValueIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694728,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNestedRemoveFieldTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedRemoveFieldTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694730,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694732,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleSetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleSetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694734,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListHasFieldIndexOutOfBounds_fail(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListHasFieldIndexOutOfBounds_fail(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694736,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSetEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694739,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testListRemoveFieldIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListRemoveFieldIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694740,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHasFieldNested(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasFieldNested(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694742,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSetFieldValueEmptyName(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetFieldValueEmptyName(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694744,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValuesToNonExistingList(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValuesToNonExistingList(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694746,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHasFieldNullValue(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasFieldNullValue(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694748,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testNestedHasFieldTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedHasFieldTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694755,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveSourceObject(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694756,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNestedSetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedSetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694759,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testListHasField(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListHasField(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694761,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValuesToListElement(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValuesToListElement(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694762,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValueToNullListElement(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValueToNullListElement(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694764,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValueToNonExistingList(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValueToNonExistingList(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694766,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694768,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGetFieldValueNull(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetFieldValueNull(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694770,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNestedGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694772,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGetFieldValueEmpty(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetFieldValueEmpty(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694774,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHasFieldNull(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasFieldNull(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694776,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testListSetFieldValueIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListSetFieldValueIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694777,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListGetFieldValueIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListGetFieldValueIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694779,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValuesConvertIntegerToList(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValuesConvertIntegerToList(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694781,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSetFieldValueOnExistingParentTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetFieldValueOnExistingParentTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694782,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHasFieldSourceObject(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasFieldSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694784,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testListAppendFieldValue(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListAppendFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694786,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testHasFieldEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasFieldEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694787,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHasField(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasField(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694789,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveEmptyField(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveEmptyField(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694791,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSetFieldValueNullName(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetFieldValueNullName(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694793,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSetFieldValueOnExistingParent(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetFieldValueOnExistingParent(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694795,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListSetFieldValueIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListSetFieldValueIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694797,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSetSourceObject(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694799,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValueConvertMapToList(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValueConvertMapToList(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694801,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHasFieldIngestObject(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasFieldIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694803,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGetEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694805,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListHasFieldNull(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListHasFieldNull(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694807,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValueToNull(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValueToNull(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694809,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListAppendFieldValues(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListAppendFieldValues(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694811,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveNonExistingField(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveNonExistingField(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694814,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSetFieldValueOnExistingNullParent(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetFieldValueOnExistingNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694816,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHasFieldEmpty(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasFieldEmpty(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694818,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSetInvalidSourceField(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetInvalidSourceField(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694821,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHasFieldNestedNotFound(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasFieldNestedNotFound(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694823,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGetIngestObject(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694825,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHasFieldNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasFieldNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694827,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSetFieldValueNullValue(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetFieldValueNullValue(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694830,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGetFieldValueNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetFieldValueNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694832,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListSetFieldValueIndexProvided(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListSetFieldValueIndexProvided(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694834,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListRemoveField(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListRemoveField(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694836,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValueListElementConvertMapToList(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValueListElementConvertMapToList(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694838,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveField(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveField(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694840,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValuesConvertStringListElementToList(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValuesConvertStringListElementToList(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694842,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveFieldValueNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveFieldValueNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1474195694844,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.ingest.IngestDocumentTests",
  "startTimestamp": 1474195694646,
  "executionTime": 201
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.io.stream.StreamTests",
   "displayName": "org.elasticsearch.common.io.stream.StreamTests",
   "methodName": null,
   "className": "org.elasticsearch.common.io.stream.StreamTests",
   "children": [
    {
     "id": "ID#testWritableArrays(org.elasticsearch.common.io.stream.StreamTests)",
     "displayName": "testWritableArrays(org.elasticsearch.common.io.stream.StreamTests)",
     "methodName": "testWritableArrays",
     "className": "org.elasticsearch.common.io.stream.StreamTests",
     "children": []
    },
    {
     "id": "ID#testLinkedHashMap(org.elasticsearch.common.io.stream.StreamTests)",
     "displayName": "testLinkedHashMap(org.elasticsearch.common.io.stream.StreamTests)",
     "methodName": "testLinkedHashMap",
     "className": "org.elasticsearch.common.io.stream.StreamTests",
     "children": []
    },
    {
     "id": "ID#testRandomVLongSerialization(org.elasticsearch.common.io.stream.StreamTests)",
     "displayName": "testRandomVLongSerialization(org.elasticsearch.common.io.stream.StreamTests)",
     "methodName": "testRandomVLongSerialization",
     "className": "org.elasticsearch.common.io.stream.StreamTests",
     "children": []
    },
    {
     "id": "ID#testFilterStreamInputDelegatesAvailable(org.elasticsearch.common.io.stream.StreamTests)",
     "displayName": "testFilterStreamInputDelegatesAvailable(org.elasticsearch.common.io.stream.StreamTests)",
     "methodName": "testFilterStreamInputDelegatesAvailable",
     "className": "org.elasticsearch.common.io.stream.StreamTests",
     "children": []
    },
    {
     "id": "ID#testInputStreamStreamInputDelegatesAvailable(org.elasticsearch.common.io.stream.StreamTests)",
     "displayName": "testInputStreamStreamInputDelegatesAvailable(org.elasticsearch.common.io.stream.StreamTests)",
     "methodName": "testInputStreamStreamInputDelegatesAvailable",
     "className": "org.elasticsearch.common.io.stream.StreamTests",
     "children": []
    },
    {
     "id": "ID#testSpecificVLongSerialization(org.elasticsearch.common.io.stream.StreamTests)",
     "displayName": "testSpecificVLongSerialization(org.elasticsearch.common.io.stream.StreamTests)",
     "methodName": "testSpecificVLongSerialization",
     "className": "org.elasticsearch.common.io.stream.StreamTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195694855
 }
]

[
 "TEST_STARTED",
 "ID#testWritableArrays(org.elasticsearch.common.io.stream.StreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWritableArrays(org.elasticsearch.common.io.stream.StreamTests)",
  "startTimestamp": 1474195694873,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testLinkedHashMap(org.elasticsearch.common.io.stream.StreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLinkedHashMap(org.elasticsearch.common.io.stream.StreamTests)",
  "startTimestamp": 1474195694876,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRandomVLongSerialization(org.elasticsearch.common.io.stream.StreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomVLongSerialization(org.elasticsearch.common.io.stream.StreamTests)",
  "startTimestamp": 1474195694879,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testFilterStreamInputDelegatesAvailable(org.elasticsearch.common.io.stream.StreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterStreamInputDelegatesAvailable(org.elasticsearch.common.io.stream.StreamTests)",
  "startTimestamp": 1474195694885,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInputStreamStreamInputDelegatesAvailable(org.elasticsearch.common.io.stream.StreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInputStreamStreamInputDelegatesAvailable(org.elasticsearch.common.io.stream.StreamTests)",
  "startTimestamp": 1474195694887,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSpecificVLongSerialization(org.elasticsearch.common.io.stream.StreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSpecificVLongSerialization(org.elasticsearch.common.io.stream.StreamTests)",
  "startTimestamp": 1474195694889,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.io.stream.StreamTests",
  "startTimestamp": 1474195694855,
  "executionTime": 38
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.node.DiscoveryNodesTests",
   "displayName": "org.elasticsearch.cluster.node.DiscoveryNodesTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.node.DiscoveryNodesTests",
   "children": [
    {
     "id": "ID#testResolveNodeByAttribute(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
     "displayName": "testResolveNodeByAttribute(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
     "methodName": "testResolveNodeByAttribute",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodesTests",
     "children": []
    },
    {
     "id": "ID#testResolveNodesIds(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
     "displayName": "testResolveNodesIds(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
     "methodName": "testResolveNodesIds",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodesTests",
     "children": []
    },
    {
     "id": "ID#testResolveNodeByIdOrName(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
     "displayName": "testResolveNodeByIdOrName(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
     "methodName": "testResolveNodeByIdOrName",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodesTests",
     "children": []
    },
    {
     "id": "ID#testDeltas(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
     "displayName": "testDeltas(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
     "methodName": "testDeltas",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195694899
 }
]

[
 "TEST_STARTED",
 "ID#testResolveNodeByAttribute(org.elasticsearch.cluster.node.DiscoveryNodesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResolveNodeByAttribute(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
  "startTimestamp": 1474195694922,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testResolveNodesIds(org.elasticsearch.cluster.node.DiscoveryNodesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResolveNodesIds(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
  "startTimestamp": 1474195694930,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testResolveNodeByIdOrName(org.elasticsearch.cluster.node.DiscoveryNodesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResolveNodeByIdOrName(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
  "startTimestamp": 1474195694933,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testDeltas(org.elasticsearch.cluster.node.DiscoveryNodesTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:48:14,938][INFO ][org.elasticsearch.cluster.node] nodes A: nodes: %0A   {name_14}{node_14}{ACJdLbbcRz6FFX4jkwl79g}{local}{local[433]}{custom=match}, local%0A   {name_15}{node_15}{Wcs5GCvDRY21Ug2IjyaZnw}{local}{local[434]}{custom=tTH}, master%0A   {name_13}{node_13}{MgC2PqlBRRWvf3RGj8BkyA}{local}{local[432]}{custom=CkkE}%0A%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:48:14,939][INFO ][org.elasticsearch.cluster.node] nodes B: nodes: %0A   {name_16}{node_16}{cEMm-Zo9RQumtunp9YjNkw}{local}{local[435]}{custom=match}%0A   {name_13}{node_13}{MgC2PqlBRRWvf3RGj8BkyA}{local}{local[432]}{custom=CkkE}%0A   {name_14}{node_14}{4AANbW4vT2yCj0WutY0EVA}{local}{local[433]}{new=new, custom=match}%0A   {name_20}{node_20}{0AjZbyLxTIiZ4z_OCtW3TQ}{local}{local[439]}{custom=kKB}, local%0A   {name_17}{node_17}{MF3S17miScK4UnfExhKXYQ}{local}{local[436]}{custom=TFiQo}%0A   {name_18}{node_18}{pX2XNFjUT3aIapCT5J5ljw}{local}{local[437]}{custom=match}%0A   {name_19}{node_19}{z6LXakc9RfGEFMnex8vDyA}{local}{local[438]}{custom=oBbZf}%0A%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeltas(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
  "startTimestamp": 1474195694934,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.node.DiscoveryNodesTests",
  "startTimestamp": 1474195694899,
  "executionTime": 47
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
   "displayName": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
   "methodName": null,
   "className": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
   "children": [
    {
     "id": "ID#testSliceStart(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "displayName": "testSliceStart(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "methodName": "testSliceStart",
     "className": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
     "children": []
    },
    {
     "id": "ID#testSingleSentences(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "displayName": "testSingleSentences(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "methodName": "testSingleSentences",
     "className": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
     "children": []
    },
    {
     "id": "ID#testSliceEnd(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "displayName": "testSliceEnd(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "methodName": "testSliceEnd",
     "className": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
     "children": []
    },
    {
     "id": "ID#testBreakOnCustomSeparator(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "displayName": "testBreakOnCustomSeparator(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "methodName": "testBreakOnCustomSeparator",
     "className": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
     "children": []
    },
    {
     "id": "ID#testFirstPosition(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "displayName": "testFirstPosition(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "methodName": "testFirstPosition",
     "className": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
     "children": []
    },
    {
     "id": "ID#testSliceMiddle(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "displayName": "testSliceMiddle(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "methodName": "testSliceMiddle",
     "className": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195694953
 }
]

[
 "TEST_STARTED",
 "ID#testSliceStart(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceStart(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
  "startTimestamp": 1474195694982,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testSingleSentences(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleSentences(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
  "startTimestamp": 1474195694991,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSliceEnd(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceEnd(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
  "startTimestamp": 1474195694994,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testBreakOnCustomSeparator(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBreakOnCustomSeparator(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
  "startTimestamp": 1474195694995,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFirstPosition(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFirstPosition(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
  "startTimestamp": 1474195694998,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSliceMiddle(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceMiddle(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
  "startTimestamp": 1474195695002,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
  "startTimestamp": 1474195694953,
  "executionTime": 53
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.smile.JsonVsSmileTests",
   "displayName": "org.elasticsearch.common.xcontent.smile.JsonVsSmileTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.smile.JsonVsSmileTests",
   "children": [
    {
     "id": "ID#testCompareParsingTokens(org.elasticsearch.common.xcontent.smile.JsonVsSmileTests)",
     "displayName": "testCompareParsingTokens(org.elasticsearch.common.xcontent.smile.JsonVsSmileTests)",
     "methodName": "testCompareParsingTokens",
     "className": "org.elasticsearch.common.xcontent.smile.JsonVsSmileTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195695012
 }
]

[
 "TEST_STARTED",
 "ID#testCompareParsingTokens(org.elasticsearch.common.xcontent.smile.JsonVsSmileTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompareParsingTokens(org.elasticsearch.common.xcontent.smile.JsonVsSmileTests)",
  "startTimestamp": 1474195695042,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.smile.JsonVsSmileTests",
  "startTimestamp": 1474195695012,
  "executionTime": 34
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.deps.joda.SimpleJodaTests",
   "displayName": "org.elasticsearch.deps.joda.SimpleJodaTests",
   "methodName": null,
   "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
   "children": [
    {
     "id": "ID#testThatEpochParserIsPrinter(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testThatEpochParserIsPrinter(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testThatEpochParserIsPrinter",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testThatEpochTimePrinterWorks(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testThatEpochTimePrinterWorks(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testThatEpochTimePrinterWorks",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testIsoDateFormatDateOptionalTimeUTC(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testIsoDateFormatDateOptionalTimeUTC(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testIsoDateFormatDateOptionalTimeUTC",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testMultipleDifferentFormats(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testMultipleDifferentFormats(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testMultipleDifferentFormats",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testIsoVsCustom(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testIsoVsCustom(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testIsoVsCustom",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testIsoDateFormatDateTimeNoMillisUTC(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testIsoDateFormatDateTimeNoMillisUTC(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testIsoDateFormatDateTimeNoMillisUTC",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testThatEpochsCanBeParsed(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testThatEpochsCanBeParsed(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testThatEpochsCanBeParsed",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testSlashInFormat(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testSlashInFormat(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testSlashInFormat",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testThatNegativeEpochsCanBeParsed(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testThatNegativeEpochsCanBeParsed(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testThatNegativeEpochsCanBeParsed",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testMultipleFormats(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testMultipleFormats(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testMultipleFormats",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testWriteAndParse(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testWriteAndParse(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testWriteAndParse",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testRoundingSetOnTime(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testRoundingSetOnTime(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testRoundingSetOnTime",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testRounding(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testRounding(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testRounding",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testMultiParsers(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testMultiParsers(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testMultiParsers",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testThatDefaultFormatterChecksForCorrectYearLength(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testThatDefaultFormatterChecksForCorrectYearLength(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testThatDefaultFormatterChecksForCorrectYearLength",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testThatEpochParserIsIdempotent(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testThatEpochParserIsIdempotent(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testThatEpochParserIsIdempotent",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testUpperBound(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testUpperBound(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testUpperBound",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testForInvalidDatesInEpochMillis(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testForInvalidDatesInEpochMillis(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testForInvalidDatesInEpochMillis",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testForInvalidDatesInEpochSecond(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testForInvalidDatesInEpochSecond(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testForInvalidDatesInEpochSecond",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testThatRootObjectParsingIsStrict(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testThatRootObjectParsingIsStrict(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testThatRootObjectParsingIsStrict",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testRoundingWithTimeZone(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testRoundingWithTimeZone(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testRoundingWithTimeZone",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testInvalidPatterns(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testInvalidPatterns(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testInvalidPatterns",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195695063
 }
]

[
 "TEST_STARTED",
 "ID#testThatEpochParserIsPrinter(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatEpochParserIsPrinter(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474195695118,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatEpochTimePrinterWorks(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatEpochTimePrinterWorks(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474195695120,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testIsoDateFormatDateOptionalTimeUTC(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsoDateFormatDateOptionalTimeUTC(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474195695149,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleDifferentFormats(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleDifferentFormats(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474195695156,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsoVsCustom(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsoVsCustom(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474195695158,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIsoDateFormatDateTimeNoMillisUTC(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsoDateFormatDateTimeNoMillisUTC(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474195695162,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatEpochsCanBeParsed(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatEpochsCanBeParsed(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474195695164,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testSlashInFormat(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSlashInFormat(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474195695174,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testThatNegativeEpochsCanBeParsed(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatNegativeEpochsCanBeParsed(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474195695177,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleFormats(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleFormats(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474195695180,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testWriteAndParse(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteAndParse(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474195695183,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRoundingSetOnTime(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoundingSetOnTime(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474195695185,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRounding(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRounding(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474195695189,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMultiParsers(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiParsers(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474195695192,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatDefaultFormatterChecksForCorrectYearLength(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatDefaultFormatterChecksForCorrectYearLength(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474195695194,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testThatEpochParserIsIdempotent(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatEpochParserIsIdempotent(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474195695216,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testUpperBound(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpperBound(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474195695222,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testForInvalidDatesInEpochMillis(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForInvalidDatesInEpochMillis(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474195695224,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testForInvalidDatesInEpochSecond(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForInvalidDatesInEpochSecond(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474195695241,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatRootObjectParsingIsStrict(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatRootObjectParsingIsStrict(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474195695243,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRoundingWithTimeZone(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoundingWithTimeZone(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474195695247,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidPatterns(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidPatterns(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474195695255,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.deps.joda.SimpleJodaTests",
  "startTimestamp": 1474195695063,
  "executionTime": 200
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.shard.IndexShardOperationsLockTests",
   "displayName": "org.elasticsearch.index.shard.IndexShardOperationsLockTests",
   "methodName": null,
   "className": "org.elasticsearch.index.shard.IndexShardOperationsLockTests",
   "children": [
    {
     "id": "ID#testOperationsInvokedImmediatelyIfNoBlock(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "displayName": "testOperationsInvokedImmediatelyIfNoBlock(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "methodName": "testOperationsInvokedImmediatelyIfNoBlock",
     "className": "org.elasticsearch.index.shard.IndexShardOperationsLockTests",
     "children": []
    },
    {
     "id": "ID#testBlockIfClosed(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "displayName": "testBlockIfClosed(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "methodName": "testBlockIfClosed",
     "className": "org.elasticsearch.index.shard.IndexShardOperationsLockTests",
     "children": []
    },
    {
     "id": "ID#testOperationsDelayedIfBlock(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "displayName": "testOperationsDelayedIfBlock(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "methodName": "testOperationsDelayedIfBlock",
     "className": "org.elasticsearch.index.shard.IndexShardOperationsLockTests",
     "children": []
    },
    {
     "id": "ID#testActiveOperationsCount(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "displayName": "testActiveOperationsCount(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "methodName": "testActiveOperationsCount",
     "className": "org.elasticsearch.index.shard.IndexShardOperationsLockTests",
     "children": []
    },
    {
     "id": "ID#testAllOperationsInvoked(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "displayName": "testAllOperationsInvoked(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "methodName": "testAllOperationsInvoked",
     "className": "org.elasticsearch.index.shard.IndexShardOperationsLockTests",
     "children": []
    },
    {
     "id": "ID#testOperationsIfClosed(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "displayName": "testOperationsIfClosed(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "methodName": "testOperationsIfClosed",
     "className": "org.elasticsearch.index.shard.IndexShardOperationsLockTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195695271
 }
]

[
 "TEST_STARTED",
 "ID#testOperationsInvokedImmediatelyIfNoBlock(org.elasticsearch.index.shard.IndexShardOperationsLockTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOperationsInvokedImmediatelyIfNoBlock(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
  "startTimestamp": 1474195695346,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testBlockIfClosed(org.elasticsearch.index.shard.IndexShardOperationsLockTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBlockIfClosed(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
  "startTimestamp": 1474195695351,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testOperationsDelayedIfBlock(org.elasticsearch.index.shard.IndexShardOperationsLockTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOperationsDelayedIfBlock(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
  "startTimestamp": 1474195695354,
  "executionTime": 107
 }
]

[
 "TEST_STARTED",
 "ID#testActiveOperationsCount(org.elasticsearch.index.shard.IndexShardOperationsLockTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActiveOperationsCount(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
  "startTimestamp": 1474195695461,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testAllOperationsInvoked(org.elasticsearch.index.shard.IndexShardOperationsLockTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllOperationsInvoked(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
  "startTimestamp": 1474195695474,
  "executionTime": 75
 }
]

[
 "TEST_STARTED",
 "ID#testOperationsIfClosed(org.elasticsearch.index.shard.IndexShardOperationsLockTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOperationsIfClosed(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
  "startTimestamp": 1474195695549,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.shard.IndexShardOperationsLockTests",
  "startTimestamp": 1474195695271,
  "executionTime": 283
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.gateway.MetaDataStateFormatTests",
   "displayName": "org.elasticsearch.gateway.MetaDataStateFormatTests",
   "methodName": null,
   "className": "org.elasticsearch.gateway.MetaDataStateFormatTests",
   "children": [
    {
     "id": "ID#testReadClusterState(org.elasticsearch.gateway.MetaDataStateFormatTests)",
     "displayName": "testReadClusterState(org.elasticsearch.gateway.MetaDataStateFormatTests)",
     "methodName": "testReadClusterState",
     "className": "org.elasticsearch.gateway.MetaDataStateFormatTests",
     "children": []
    },
    {
     "id": "ID#testVersionMismatch(org.elasticsearch.gateway.MetaDataStateFormatTests)",
     "displayName": "testVersionMismatch(org.elasticsearch.gateway.MetaDataStateFormatTests)",
     "methodName": "testVersionMismatch",
     "className": "org.elasticsearch.gateway.MetaDataStateFormatTests",
     "children": []
    },
    {
     "id": "ID#testCorruption(org.elasticsearch.gateway.MetaDataStateFormatTests)",
     "displayName": "testCorruption(org.elasticsearch.gateway.MetaDataStateFormatTests)",
     "methodName": "testCorruption",
     "className": "org.elasticsearch.gateway.MetaDataStateFormatTests",
     "children": []
    },
    {
     "id": "ID#testReadWriteState(org.elasticsearch.gateway.MetaDataStateFormatTests)",
     "displayName": "testReadWriteState(org.elasticsearch.gateway.MetaDataStateFormatTests)",
     "methodName": "testReadWriteState",
     "className": "org.elasticsearch.gateway.MetaDataStateFormatTests",
     "children": []
    },
    {
     "id": "ID#testLoadState(org.elasticsearch.gateway.MetaDataStateFormatTests)",
     "displayName": "testLoadState(org.elasticsearch.gateway.MetaDataStateFormatTests)",
     "methodName": "testLoadState",
     "className": "org.elasticsearch.gateway.MetaDataStateFormatTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195695564
 }
]

[
 "TEST_STARTED",
 "ID#testReadClusterState(org.elasticsearch.gateway.MetaDataStateFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadClusterState(org.elasticsearch.gateway.MetaDataStateFormatTests)",
  "startTimestamp": 1474195695590,
  "executionTime": 76
 }
]

[
 "TEST_STARTED",
 "ID#testVersionMismatch(org.elasticsearch.gateway.MetaDataStateFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionMismatch(org.elasticsearch.gateway.MetaDataStateFormatTests)",
  "startTimestamp": 1474195695666,
  "executionTime": 249
 }
]

[
 "TEST_STARTED",
 "ID#testCorruption(org.elasticsearch.gateway.MetaDataStateFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCorruption(org.elasticsearch.gateway.MetaDataStateFormatTests)",
  "startTimestamp": 1474195695916,
  "executionTime": 309
 }
]

[
 "TEST_STARTED",
 "ID#testReadWriteState(org.elasticsearch.gateway.MetaDataStateFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadWriteState(org.elasticsearch.gateway.MetaDataStateFormatTests)",
  "startTimestamp": 1474195696226,
  "executionTime": 280
 }
]

[
 "TEST_STARTED",
 "ID#testLoadState(org.elasticsearch.gateway.MetaDataStateFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLoadState(org.elasticsearch.gateway.MetaDataStateFormatTests)",
  "startTimestamp": 1474195696506,
  "executionTime": 644
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.gateway.MetaDataStateFormatTests",
  "startTimestamp": 1474195695564,
  "executionTime": 1690
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.store.InputStreamIndexInputTests",
   "displayName": "org.elasticsearch.common.lucene.store.InputStreamIndexInputTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.store.InputStreamIndexInputTests",
   "children": [
    {
     "id": "ID#testSingleReadTwoBytesLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "displayName": "testSingleReadTwoBytesLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "methodName": "testSingleReadTwoBytesLimit",
     "className": "org.elasticsearch.common.lucene.store.InputStreamIndexInputTests",
     "children": []
    },
    {
     "id": "ID#testReadMultiSingleByteLimit1(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "displayName": "testReadMultiSingleByteLimit1(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "methodName": "testReadMultiSingleByteLimit1",
     "className": "org.elasticsearch.common.lucene.store.InputStreamIndexInputTests",
     "children": []
    },
    {
     "id": "ID#testReadMultiTwoBytesLimit1(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "displayName": "testReadMultiTwoBytesLimit1(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "methodName": "testReadMultiTwoBytesLimit1",
     "className": "org.elasticsearch.common.lucene.store.InputStreamIndexInputTests",
     "children": []
    },
    {
     "id": "ID#testMarkRest(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "displayName": "testMarkRest(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "methodName": "testMarkRest",
     "className": "org.elasticsearch.common.lucene.store.InputStreamIndexInputTests",
     "children": []
    },
    {
     "id": "ID#testReadMultiFourBytesLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "displayName": "testReadMultiFourBytesLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "methodName": "testReadMultiFourBytesLimit",
     "className": "org.elasticsearch.common.lucene.store.InputStreamIndexInputTests",
     "children": []
    },
    {
     "id": "ID#testSingleReadSingleByteLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "displayName": "testSingleReadSingleByteLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "methodName": "testSingleReadSingleByteLimit",
     "className": "org.elasticsearch.common.lucene.store.InputStreamIndexInputTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195697261
 }
]

[
 "TEST_STARTED",
 "ID#testSingleReadTwoBytesLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleReadTwoBytesLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
  "startTimestamp": 1474195697356,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReadMultiSingleByteLimit1(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadMultiSingleByteLimit1(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
  "startTimestamp": 1474195697358,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testReadMultiTwoBytesLimit1(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadMultiTwoBytesLimit1(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
  "startTimestamp": 1474195697360,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testMarkRest(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMarkRest(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
  "startTimestamp": 1474195697362,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testReadMultiFourBytesLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadMultiFourBytesLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
  "startTimestamp": 1474195697364,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSingleReadSingleByteLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleReadSingleByteLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
  "startTimestamp": 1474195697365,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.store.InputStreamIndexInputTests",
  "startTimestamp": 1474195697261,
  "executionTime": 109
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.store.IndicesStoreTests",
   "displayName": "org.elasticsearch.indices.store.IndicesStoreTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.store.IndicesStoreTests",
   "children": [
    {
     "id": "ID#testShardCanBeDeletedShardExistsLocally(org.elasticsearch.indices.store.IndicesStoreTests)",
     "displayName": "testShardCanBeDeletedShardExistsLocally(org.elasticsearch.indices.store.IndicesStoreTests)",
     "methodName": "testShardCanBeDeletedShardExistsLocally",
     "className": "org.elasticsearch.indices.store.IndicesStoreTests",
     "children": []
    },
    {
     "id": "ID#testShardCanBeDeletedNodeNotInList(org.elasticsearch.indices.store.IndicesStoreTests)",
     "displayName": "testShardCanBeDeletedNodeNotInList(org.elasticsearch.indices.store.IndicesStoreTests)",
     "methodName": "testShardCanBeDeletedNodeNotInList",
     "className": "org.elasticsearch.indices.store.IndicesStoreTests",
     "children": []
    },
    {
     "id": "ID#testShardCanBeDeletedNodeVersion(org.elasticsearch.indices.store.IndicesStoreTests)",
     "displayName": "testShardCanBeDeletedNodeVersion(org.elasticsearch.indices.store.IndicesStoreTests)",
     "methodName": "testShardCanBeDeletedNodeVersion",
     "className": "org.elasticsearch.indices.store.IndicesStoreTests",
     "children": []
    },
    {
     "id": "ID#testShardCanBeDeletedNoShardRouting(org.elasticsearch.indices.store.IndicesStoreTests)",
     "displayName": "testShardCanBeDeletedNoShardRouting(org.elasticsearch.indices.store.IndicesStoreTests)",
     "methodName": "testShardCanBeDeletedNoShardRouting",
     "className": "org.elasticsearch.indices.store.IndicesStoreTests",
     "children": []
    },
    {
     "id": "ID#testShardCanBeDeletedNoShardStarted(org.elasticsearch.indices.store.IndicesStoreTests)",
     "displayName": "testShardCanBeDeletedNoShardStarted(org.elasticsearch.indices.store.IndicesStoreTests)",
     "methodName": "testShardCanBeDeletedNoShardStarted",
     "className": "org.elasticsearch.indices.store.IndicesStoreTests",
     "children": []
    },
    {
     "id": "ID#testShardCanBeDeletedRelocatingNode(org.elasticsearch.indices.store.IndicesStoreTests)",
     "displayName": "testShardCanBeDeletedRelocatingNode(org.elasticsearch.indices.store.IndicesStoreTests)",
     "methodName": "testShardCanBeDeletedRelocatingNode",
     "className": "org.elasticsearch.indices.store.IndicesStoreTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195697377
 }
]

[
 "TEST_STARTED",
 "ID#testShardCanBeDeletedShardExistsLocally(org.elasticsearch.indices.store.IndicesStoreTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:17,514][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{FyULd-TmRWGx852yWF3ZOg}{local}{local[440]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardCanBeDeletedShardExistsLocally(org.elasticsearch.indices.store.IndicesStoreTests)",
  "startTimestamp": 1474195697405,
  "executionTime": 111
 }
]

[
 "TEST_STARTED",
 "ID#testShardCanBeDeletedNodeNotInList(org.elasticsearch.indices.store.IndicesStoreTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:17,592][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{lsP_VhuWSTimljfOnUtpFA}{local}{local[441]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardCanBeDeletedNodeNotInList(org.elasticsearch.indices.store.IndicesStoreTests)",
  "startTimestamp": 1474195697516,
  "executionTime": 77
 }
]

[
 "TEST_STARTED",
 "ID#testShardCanBeDeletedNodeVersion(org.elasticsearch.indices.store.IndicesStoreTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:17,627][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{3Sr5teK0QRijGU1tpv_Z7g}{local}{local[442]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardCanBeDeletedNodeVersion(org.elasticsearch.indices.store.IndicesStoreTests)",
  "startTimestamp": 1474195697594,
  "executionTime": 35
 }
]

[
 "TEST_STARTED",
 "ID#testShardCanBeDeletedNoShardRouting(org.elasticsearch.indices.store.IndicesStoreTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:17,635][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{w-BP1JlLSnGnyDIRVq4Cfg}{local}{local[443]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardCanBeDeletedNoShardRouting(org.elasticsearch.indices.store.IndicesStoreTests)",
  "startTimestamp": 1474195697629,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testShardCanBeDeletedNoShardStarted(org.elasticsearch.indices.store.IndicesStoreTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:17,671][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{d1aru1lbRSSvs1O5cSVVUA}{local}{local[444]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardCanBeDeletedNoShardStarted(org.elasticsearch.indices.store.IndicesStoreTests)",
  "startTimestamp": 1474195697636,
  "executionTime": 36
 }
]

[
 "TEST_STARTED",
 "ID#testShardCanBeDeletedRelocatingNode(org.elasticsearch.indices.store.IndicesStoreTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:17,683][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{PVBcA2l-Rj--kCvDu20Snw}{local}{local[445]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardCanBeDeletedRelocatingNode(org.elasticsearch.indices.store.IndicesStoreTests)",
  "startTimestamp": 1474195697673,
  "executionTime": 12
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.store.IndicesStoreTests",
  "startTimestamp": 1474195697377,
  "executionTime": 310
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.apache.lucene.analysis.miscellaneous.TruncateTokenFilterTests",
   "displayName": "org.apache.lucene.analysis.miscellaneous.TruncateTokenFilterTests",
   "methodName": null,
   "className": "org.apache.lucene.analysis.miscellaneous.TruncateTokenFilterTests",
   "children": [
    {
     "id": "ID#testSimple(org.apache.lucene.analysis.miscellaneous.TruncateTokenFilterTests)",
     "displayName": "testSimple(org.apache.lucene.analysis.miscellaneous.TruncateTokenFilterTests)",
     "methodName": "testSimple",
     "className": "org.apache.lucene.analysis.miscellaneous.TruncateTokenFilterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195697693
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.apache.lucene.analysis.miscellaneous.TruncateTokenFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.apache.lucene.analysis.miscellaneous.TruncateTokenFilterTests)",
  "startTimestamp": 1474195697722,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.apache.lucene.analysis.miscellaneous.TruncateTokenFilterTests",
  "startTimestamp": 1474195697693,
  "executionTime": 32
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests",
   "displayName": "org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests",
   "children": [
    {
     "id": "ID#testShutdownNowInterrupts(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "displayName": "testShutdownNowInterrupts(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "methodName": "testShutdownNowInterrupts",
     "className": "org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests",
     "children": []
    },
    {
     "id": "ID#testFixedExecutorType(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "displayName": "testFixedExecutorType(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "methodName": "testFixedExecutorType",
     "className": "org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests",
     "children": []
    },
    {
     "id": "ID#testIndexingThreadPoolsMaxSize(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "displayName": "testIndexingThreadPoolsMaxSize(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "methodName": "testIndexingThreadPoolsMaxSize",
     "className": "org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests",
     "children": []
    },
    {
     "id": "ID#testCorrectThreadPoolTypePermittedInSettings(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "displayName": "testCorrectThreadPoolTypePermittedInSettings(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "methodName": "testCorrectThreadPoolTypePermittedInSettings",
     "className": "org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests",
     "children": []
    },
    {
     "id": "ID#testCustomThreadPool(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "displayName": "testCustomThreadPool(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "methodName": "testCustomThreadPool",
     "className": "org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests",
     "children": []
    },
    {
     "id": "ID#testScalingExecutorType(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "displayName": "testScalingExecutorType(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "methodName": "testScalingExecutorType",
     "className": "org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195697762
 }
]

[
 "TEST_STARTED",
 "ID#testShutdownNowInterrupts(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShutdownNowInterrupts(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
  "startTimestamp": 1474195697792,
  "executionTime": 38
 }
]

[
 "TEST_STARTED",
 "ID#testFixedExecutorType(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFixedExecutorType(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
  "startTimestamp": 1474195697830,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingThreadPoolsMaxSize(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingThreadPoolsMaxSize(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
  "startTimestamp": 1474195697842,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testCorrectThreadPoolTypePermittedInSettings(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCorrectThreadPoolTypePermittedInSettings(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
  "startTimestamp": 1474195697847,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testCustomThreadPool(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCustomThreadPool(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
  "startTimestamp": 1474195697853,
  "executionTime": 37
 }
]

[
 "TEST_STARTED",
 "ID#testScalingExecutorType(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScalingExecutorType(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
  "startTimestamp": 1474195697890,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests",
  "startTimestamp": 1474195697762,
  "executionTime": 137
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.io.StreamsTests",
   "displayName": "org.elasticsearch.common.io.StreamsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.io.StreamsTests",
   "children": [
    {
     "id": "ID#testCopyToString(org.elasticsearch.common.io.StreamsTests)",
     "displayName": "testCopyToString(org.elasticsearch.common.io.StreamsTests)",
     "methodName": "testCopyToString",
     "className": "org.elasticsearch.common.io.StreamsTests",
     "children": []
    },
    {
     "id": "ID#testCopyFromInputStream(org.elasticsearch.common.io.StreamsTests)",
     "displayName": "testCopyFromInputStream(org.elasticsearch.common.io.StreamsTests)",
     "methodName": "testCopyFromInputStream",
     "className": "org.elasticsearch.common.io.StreamsTests",
     "children": []
    },
    {
     "id": "ID#testCopyFromReader(org.elasticsearch.common.io.StreamsTests)",
     "displayName": "testCopyFromReader(org.elasticsearch.common.io.StreamsTests)",
     "methodName": "testCopyFromReader",
     "className": "org.elasticsearch.common.io.StreamsTests",
     "children": []
    },
    {
     "id": "ID#testBytesStreamInput(org.elasticsearch.common.io.StreamsTests)",
     "displayName": "testBytesStreamInput(org.elasticsearch.common.io.StreamsTests)",
     "methodName": "testBytesStreamInput",
     "className": "org.elasticsearch.common.io.StreamsTests",
     "children": []
    },
    {
     "id": "ID#testCopyFromByteArray(org.elasticsearch.common.io.StreamsTests)",
     "displayName": "testCopyFromByteArray(org.elasticsearch.common.io.StreamsTests)",
     "methodName": "testCopyFromByteArray",
     "className": "org.elasticsearch.common.io.StreamsTests",
     "children": []
    },
    {
     "id": "ID#testCopyFromString(org.elasticsearch.common.io.StreamsTests)",
     "displayName": "testCopyFromString(org.elasticsearch.common.io.StreamsTests)",
     "methodName": "testCopyFromString",
     "className": "org.elasticsearch.common.io.StreamsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195697905
 }
]

[
 "TEST_STARTED",
 "ID#testCopyToString(org.elasticsearch.common.io.StreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyToString(org.elasticsearch.common.io.StreamsTests)",
  "startTimestamp": 1474195697926,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCopyFromInputStream(org.elasticsearch.common.io.StreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyFromInputStream(org.elasticsearch.common.io.StreamsTests)",
  "startTimestamp": 1474195697928,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCopyFromReader(org.elasticsearch.common.io.StreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyFromReader(org.elasticsearch.common.io.StreamsTests)",
  "startTimestamp": 1474195697930,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBytesStreamInput(org.elasticsearch.common.io.StreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBytesStreamInput(org.elasticsearch.common.io.StreamsTests)",
  "startTimestamp": 1474195697932,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testCopyFromByteArray(org.elasticsearch.common.io.StreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyFromByteArray(org.elasticsearch.common.io.StreamsTests)",
  "startTimestamp": 1474195697934,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCopyFromString(org.elasticsearch.common.io.StreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyFromString(org.elasticsearch.common.io.StreamsTests)",
  "startTimestamp": 1474195697936,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.io.StreamsTests",
  "startTimestamp": 1474195697905,
  "executionTime": 38
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.profile.query.QueryProfilerTests",
   "displayName": "org.elasticsearch.search.profile.query.QueryProfilerTests",
   "methodName": null,
   "className": "org.elasticsearch.search.profile.query.QueryProfilerTests",
   "children": [
    {
     "id": "ID#testCollector(org.elasticsearch.search.profile.query.QueryProfilerTests)",
     "displayName": "testCollector(org.elasticsearch.search.profile.query.QueryProfilerTests)",
     "methodName": "testCollector",
     "className": "org.elasticsearch.search.profile.query.QueryProfilerTests",
     "children": []
    },
    {
     "id": "ID#testUseIndexStats(org.elasticsearch.search.profile.query.QueryProfilerTests)",
     "displayName": "testUseIndexStats(org.elasticsearch.search.profile.query.QueryProfilerTests)",
     "methodName": "testUseIndexStats",
     "className": "org.elasticsearch.search.profile.query.QueryProfilerTests",
     "children": []
    },
    {
     "id": "ID#testApproximations(org.elasticsearch.search.profile.query.QueryProfilerTests)",
     "displayName": "testApproximations(org.elasticsearch.search.profile.query.QueryProfilerTests)",
     "methodName": "testApproximations",
     "className": "org.elasticsearch.search.profile.query.QueryProfilerTests",
     "children": []
    },
    {
     "id": "ID#testNoScoring(org.elasticsearch.search.profile.query.QueryProfilerTests)",
     "displayName": "testNoScoring(org.elasticsearch.search.profile.query.QueryProfilerTests)",
     "methodName": "testNoScoring",
     "className": "org.elasticsearch.search.profile.query.QueryProfilerTests",
     "children": []
    },
    {
     "id": "ID#testBasic(org.elasticsearch.search.profile.query.QueryProfilerTests)",
     "displayName": "testBasic(org.elasticsearch.search.profile.query.QueryProfilerTests)",
     "methodName": "testBasic",
     "className": "org.elasticsearch.search.profile.query.QueryProfilerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195697950
 }
]

[
 "TEST_STARTED",
 "ID#testCollector(org.elasticsearch.search.profile.query.QueryProfilerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCollector(org.elasticsearch.search.profile.query.QueryProfilerTests)",
  "startTimestamp": 1474195698006,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testUseIndexStats(org.elasticsearch.search.profile.query.QueryProfilerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUseIndexStats(org.elasticsearch.search.profile.query.QueryProfilerTests)",
  "startTimestamp": 1474195698027,
  "executionTime": 35
 }
]

[
 "TEST_STARTED",
 "ID#testApproximations(org.elasticsearch.search.profile.query.QueryProfilerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testApproximations(org.elasticsearch.search.profile.query.QueryProfilerTests)",
  "startTimestamp": 1474195698063,
  "executionTime": 36
 }
]

[
 "TEST_STARTED",
 "ID#testNoScoring(org.elasticsearch.search.profile.query.QueryProfilerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoScoring(org.elasticsearch.search.profile.query.QueryProfilerTests)",
  "startTimestamp": 1474195698100,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testBasic(org.elasticsearch.search.profile.query.QueryProfilerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasic(org.elasticsearch.search.profile.query.QueryProfilerTests)",
  "startTimestamp": 1474195698104,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.profile.query.QueryProfilerTests",
  "startTimestamp": 1474195697950,
  "executionTime": 336
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
   "displayName": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
   "children": [
    {
     "id": "ID#testDefaultNullLocale(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testDefaultNullLocale(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testDefaultNullLocale",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryBoost(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testToQueryBoost(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testToQueryBoost",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalConstructorArg(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testIllegalConstructorArg(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testIllegalConstructorArg",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDefaultNullComplainFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testDefaultNullComplainFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testDefaultNullComplainFlags",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFieldCannotBeEmpty(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testFieldCannotBeEmpty(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testFieldCannotBeEmpty",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDefaultEmptyComplainFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testDefaultEmptyComplainFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testDefaultEmptyComplainFlags",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDefaultNullComplainOp(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testDefaultNullComplainOp(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testDefaultNullComplainOp",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMinimumShouldMatch(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testMinimumShouldMatch(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testMinimumShouldMatch",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFieldsCannotBeSetToNull(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testFieldsCannotBeSetToNull(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testFieldsCannotBeSetToNull",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDefaultOperatorHandling(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testDefaultOperatorHandling(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testDefaultOperatorHandling",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFieldCannotBeNullAndWeighted(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testFieldCannotBeNullAndWeighted(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testFieldCannotBeNullAndWeighted",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDefaults(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testDefaults(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testDefaults",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNegativeFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testNegativeFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testNegativeFlags",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFieldCannotBeNull(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testFieldCannotBeNull(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testFieldCannotBeNull",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDefaultFieldParsing(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testDefaultFieldParsing(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testDefaultFieldParsing",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIndexMetaField(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testIndexMetaField(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testIndexMetaField",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFieldCannotBeEmptyAndWeighted(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testFieldCannotBeEmptyAndWeighted(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testFieldCannotBeEmptyAndWeighted",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195698295
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultNullLocale(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:18,395][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{nthno4bSRPm4-mXYhhTIWw}{local}{local[446]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:18,404][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:18,405][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:18,424][WARN ][org.elasticsearch.deprecation.index.mapper]  [CZDow] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:18,424][WARN ][org.elasticsearch.deprecation.index.mapper]  [CZDow] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:18,425][WARN ][org.elasticsearch.deprecation.index.mapper]  [CZDow] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:18,427][WARN ][org.elasticsearch.deprecation.index.mapper]  [CZDow] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:18,427][WARN ][org.elasticsearch.deprecation.index.mapper]  [CZDow] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:18,427][WARN ][org.elasticsearch.deprecation.index.mapper]  [CZDow] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:18,464][WARN ][org.elasticsearch.deprecation.index.mapper]  [CZDow] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:18,464][WARN ][org.elasticsearch.deprecation.index.mapper]  [CZDow] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:18,464][WARN ][org.elasticsearch.deprecation.index.mapper]  [CZDow] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:18,471][WARN ][org.elasticsearch.deprecation.index.mapper]  [CZDow] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:18,472][WARN ][org.elasticsearch.deprecation.index.mapper]  [CZDow] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:18,472][WARN ][org.elasticsearch.deprecation.index.mapper]  [CZDow] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:18,473][WARN ][org.elasticsearch.deprecation.index.mapper]  [CZDow] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:18,473][WARN ][org.elasticsearch.deprecation.index.mapper]  [CZDow] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:18,473][WARN ][org.elasticsearch.deprecation.index.mapper]  [CZDow] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:18,477][WARN ][org.elasticsearch.deprecation.index.mapper]  [CZDow] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:18,477][WARN ][org.elasticsearch.deprecation.index.mapper]  [CZDow] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:18,477][WARN ][org.elasticsearch.deprecation.index.mapper]  [CZDow] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultNullLocale(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474195698390,
  "executionTime": 97
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryBoost(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryBoost(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474195698487,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474195698501,
  "executionTime": 35
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalConstructorArg(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalConstructorArg(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474195698536,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultNullComplainFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultNullComplainFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474195698539,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474195698541,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFieldCannotBeEmpty(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldCannotBeEmpty(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474195698544,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultEmptyComplainFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultEmptyComplainFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474195698547,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultNullComplainOp(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultNullComplainOp(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474195698549,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMinimumShouldMatch(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinimumShouldMatch(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474195698551,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474195698554,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testFieldsCannotBeSetToNull(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldsCannotBeSetToNull(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474195698562,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultOperatorHandling(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultOperatorHandling(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474195698570,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testFieldCannotBeNullAndWeighted(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldCannotBeNullAndWeighted(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474195698578,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474195698581,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474195698586,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474195698590,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474195698594,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testDefaults(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaults(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474195698616,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474195698619,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474195698621,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNegativeFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNegativeFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474195698624,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFieldCannotBeNull(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldCannotBeNull(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474195698627,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultFieldParsing(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultFieldParsing(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474195698630,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIndexMetaField(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexMetaField(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474195698633,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFieldCannotBeEmptyAndWeighted(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldCannotBeEmptyAndWeighted(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474195698635,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
  "startTimestamp": 1474195698295,
  "executionTime": 353
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.bulk.BulkRequestTests",
   "displayName": "org.elasticsearch.action.bulk.BulkRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.bulk.BulkRequestTests",
   "children": [
    {
     "id": "ID#testBulkAllowExplicitIndex(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testBulkAllowExplicitIndex(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testBulkAllowExplicitIndex",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testCannotAddNullRequests(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testCannotAddNullRequests(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testCannotAddNullRequests",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testBulkAddIterable(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testBulkAddIterable(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testBulkAddIterable",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleBulk1(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testSimpleBulk1(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testSimpleBulk1",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleBulk10(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testSimpleBulk10(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testSimpleBulk10",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleBulk4(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testSimpleBulk4(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testSimpleBulk4",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleBulk6(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testSimpleBulk6(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testSimpleBulk6",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleBulk2(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testSimpleBulk2(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testSimpleBulk2",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleBulk3(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testSimpleBulk3(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testSimpleBulk3",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleBulk9(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testSimpleBulk9(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testSimpleBulk9",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleBulk7(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testSimpleBulk7(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testSimpleBulk7",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleBulk8(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testSimpleBulk8(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testSimpleBulk8",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testBulkRequestWithRefresh(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testBulkRequestWithRefresh(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testBulkRequestWithRefresh",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testBulkNoSource(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testBulkNoSource(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testBulkNoSource",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195698656
 }
]

[
 "TEST_STARTED",
 "ID#testBulkAllowExplicitIndex(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBulkAllowExplicitIndex(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1474195698698,
  "executionTime": 50
 }
]

[
 "TEST_STARTED",
 "ID#testCannotAddNullRequests(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCannotAddNullRequests(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1474195698748,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testBulkAddIterable(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBulkAddIterable(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1474195698751,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleBulk1(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleBulk1(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1474195698753,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleBulk10(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleBulk10(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1474195698755,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleBulk4(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleBulk4(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1474195698771,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleBulk6(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleBulk6(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1474195698783,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleBulk2(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleBulk2(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1474195698795,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleBulk3(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleBulk3(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1474195698806,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleBulk9(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleBulk9(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1474195698810,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleBulk7(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleBulk7(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1474195698817,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleBulk8(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleBulk8(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1474195698826,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testBulkRequestWithRefresh(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBulkRequestWithRefresh(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1474195698845,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testBulkNoSource(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBulkNoSource(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1474195698855,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.bulk.BulkRequestTests",
  "startTimestamp": 1474195698656,
  "executionTime": 204
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.UidTests",
   "displayName": "org.elasticsearch.index.mapper.UidTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.UidTests",
   "children": [
    {
     "id": "ID#testCreateAndSplitId(org.elasticsearch.index.mapper.UidTests)",
     "displayName": "testCreateAndSplitId(org.elasticsearch.index.mapper.UidTests)",
     "methodName": "testCreateAndSplitId",
     "className": "org.elasticsearch.index.mapper.UidTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195698865
 }
]

[
 "TEST_STARTED",
 "ID#testCreateAndSplitId(org.elasticsearch.index.mapper.UidTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateAndSplitId(org.elasticsearch.index.mapper.UidTests)",
  "startTimestamp": 1474195698898,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.UidTests",
  "startTimestamp": 1474195698865,
  "executionTime": 39
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195698913
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:18,948][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Sv0aRNtsS4OgQumEkwqfZw}{local}{local[447]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)",
  "startTimestamp": 1474195698957,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)",
  "startTimestamp": 1474195698963,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:18,977][INFO ][org.elasticsearch.search.aggregations.pipeline.bucketmetrics] Content string: {%0A  \"WojciOEBiPq\" : {%0A    \"max_bucket\" : {%0A      \"buckets_path\" : [%0A        \"CqPKBSBHLEeH\"%0A      ],%0A      \"gap_policy\" : \"skip\"%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:18,978][INFO ][org.elasticsearch.search.aggregations.pipeline.bucketmetrics] Content string: {%0A  \"WojciOEBiPq\" : {%0A    \"max_bucket\" : {%0A      \"buckets_path\" : [%0A        \"CqPKBSBHLEeH\"%0A      ],%0A      \"gap_policy\" : \"skip\"%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)",
  "startTimestamp": 1474195698967,
  "executionTime": 12
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests",
  "startTimestamp": 1474195698913,
  "executionTime": 69
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.IndexModuleTests",
   "displayName": "org.elasticsearch.index.IndexModuleTests",
   "methodName": null,
   "className": "org.elasticsearch.index.IndexModuleTests",
   "children": [
    {
     "id": "ID#testListener(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testListener(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testListener",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testOtherServiceBound(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testOtherServiceBound(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testOtherServiceBound",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testAddSearchOperationListener(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testAddSearchOperationListener(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testAddSearchOperationListener",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testForceCustomQueryCache(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testForceCustomQueryCache(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testForceCustomQueryCache",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testSetupWithoutType(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testSetupWithoutType(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testSetupWithoutType",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testDisableQueryCacheHasPrecedenceOverForceQueryCache(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testDisableQueryCacheHasPrecedenceOverForceQueryCache(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testDisableQueryCacheHasPrecedenceOverForceQueryCache",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testWrapperIsBound(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testWrapperIsBound(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testWrapperIsBound",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testDefaultQueryCacheImplIsSelected(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testDefaultQueryCacheImplIsSelected(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testDefaultQueryCacheImplIsSelected",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testAddIndexOperationListener(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testAddIndexOperationListener(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testAddIndexOperationListener",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterIndexStore(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testRegisterIndexStore(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testRegisterIndexStore",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testFrozen(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testFrozen(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testFrozen",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testAddSimilarity(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testAddSimilarity(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testAddSimilarity",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testSetupUnknownSimilarity(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testSetupUnknownSimilarity(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testSetupUnknownSimilarity",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195698992
 }
]

[
 "TEST_STARTED",
 "ID#testListener(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:19,029][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{sG4pF-SYSeGRttGfy1cIcw}{local}{local[448]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:19,057][INFO ][org.elasticsearch.env    ] [e8O6xAL] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:19,057][INFO ][org.elasticsearch.env    ] [e8O6xAL] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListener(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1474195699015,
  "executionTime": 56
 }
]

[
 "TEST_STARTED",
 "ID#testOtherServiceBound(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:19,086][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{9WOd2omASlCQ_bTL3E_9iA}{local}{local[449]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:19,114][INFO ][org.elasticsearch.env    ] [09vqQuP] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:19,114][INFO ][org.elasticsearch.env    ] [09vqQuP] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOtherServiceBound(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1474195699071,
  "executionTime": 63
 }
]

[
 "TEST_STARTED",
 "ID#testAddSearchOperationListener(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:19,146][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{EluKZn05RjG8LkZ-LZdPaw}{local}{local[450]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:19,172][INFO ][org.elasticsearch.env    ] [64f5T2e] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:19,173][INFO ][org.elasticsearch.env    ] [64f5T2e] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddSearchOperationListener(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1474195699134,
  "executionTime": 48
 }
]

[
 "TEST_STARTED",
 "ID#testForceCustomQueryCache(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:19,193][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{rZVM56d4SwKJP8sdpaGXmw}{local}{local[451]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:19,230][INFO ][org.elasticsearch.env    ] [BW4jGGV] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:19,230][INFO ][org.elasticsearch.env    ] [BW4jGGV] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForceCustomQueryCache(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1474195699182,
  "executionTime": 60
 }
]

[
 "TEST_STARTED",
 "ID#testSetupWithoutType(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:19,253][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{xaQBnvUNSYKURr9C68BTXQ}{local}{local[452]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:19,280][INFO ][org.elasticsearch.env    ] [nC628qt] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:19,280][INFO ][org.elasticsearch.env    ] [nC628qt] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetupWithoutType(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1474195699242,
  "executionTime": 49
 }
]

[
 "TEST_STARTED",
 "ID#testDisableQueryCacheHasPrecedenceOverForceQueryCache(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:19,302][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{QwKZWP4hScaqSei6V6jp5w}{local}{local[453]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:19,387][INFO ][org.elasticsearch.env    ] [gbuiEgQ] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:19,387][INFO ][org.elasticsearch.env    ] [gbuiEgQ] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDisableQueryCacheHasPrecedenceOverForceQueryCache(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1474195699291,
  "executionTime": 111
 }
]

[
 "TEST_STARTED",
 "ID#testWrapperIsBound(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:19,413][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Tfwid_nYQrSYjZeXR73SFg}{local}{local[454]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:19,442][INFO ][org.elasticsearch.env    ] [Rk34afv] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:19,442][INFO ][org.elasticsearch.env    ] [Rk34afv] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWrapperIsBound(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1474195699402,
  "executionTime": 59
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultQueryCacheImplIsSelected(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:19,473][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{0V6nfblvSMKMDtMoIMcqEQ}{local}{local[455]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:19,497][INFO ][org.elasticsearch.env    ] [tjsnsJd] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:19,497][INFO ][org.elasticsearch.env    ] [tjsnsJd] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultQueryCacheImplIsSelected(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1474195699462,
  "executionTime": 60
 }
]

[
 "TEST_STARTED",
 "ID#testAddIndexOperationListener(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:19,536][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{ER5wHNATSzq-C616ajB_sw}{local}{local[456]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:19,574][INFO ][org.elasticsearch.env    ] [droNC1V] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:19,574][INFO ][org.elasticsearch.env    ] [droNC1V] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddIndexOperationListener(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1474195699522,
  "executionTime": 95
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterIndexStore(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:19,643][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Y-i6rYjHTZ24TEpPJSj6Sw}{local}{local[457]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:19,682][INFO ][org.elasticsearch.env    ] [IH3zKG2] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:19,682][INFO ][org.elasticsearch.env    ] [IH3zKG2] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterIndexStore(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1474195699617,
  "executionTime": 83
 }
]

[
 "TEST_STARTED",
 "ID#testFrozen(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:19,714][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{de6-TYt0RqCvGXjEazvQUA}{local}{local[458]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:19,741][INFO ][org.elasticsearch.env    ] [MJc20vx] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:19,741][INFO ][org.elasticsearch.env    ] [MJc20vx] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFrozen(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1474195699700,
  "executionTime": 49
 }
]

[
 "TEST_STARTED",
 "ID#testAddSimilarity(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:19,764][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{xBVszoT4TxeUXTnPF5qBzg}{local}{local[459]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:19,794][INFO ][org.elasticsearch.env    ] [i0A00wf] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:19,794][INFO ][org.elasticsearch.env    ] [i0A00wf] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddSimilarity(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1474195699749,
  "executionTime": 93
 }
]

[
 "TEST_STARTED",
 "ID#testSetupUnknownSimilarity(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:19,858][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{dbsKBR-QRKyVEikmM3XZEg}{local}{local[460]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:19,901][INFO ][org.elasticsearch.env    ] [SNrPSRG] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:19,901][INFO ][org.elasticsearch.env    ] [SNrPSRG] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetupUnknownSimilarity(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1474195699843,
  "executionTime": 70
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.IndexModuleTests",
  "startTimestamp": 1474195698992,
  "executionTime": 1098
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests",
   "children": [
    {
     "id": "ID#testSingleRetryOnIgnore(org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests)",
     "displayName": "testSingleRetryOnIgnore(org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests)",
     "methodName": "testSingleRetryOnIgnore",
     "className": "org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests",
     "children": []
    },
    {
     "id": "ID#testFailedAllocation(org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests)",
     "displayName": "testFailedAllocation(org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests)",
     "methodName": "testFailedAllocation",
     "className": "org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195700096
 }
]

[
 "TEST_STARTED",
 "ID#testSingleRetryOnIgnore(org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:20,123][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [shards failed [[idx][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleRetryOnIgnore(org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests)",
  "startTimestamp": 1474195700112,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testFailedAllocation(org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:20,133][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [shards failed [[idx][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:20,142][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[idx][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:20,142][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [shards failed [[idx][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailedAllocation(org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests)",
  "startTimestamp": 1474195700127,
  "executionTime": 16
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests",
  "startTimestamp": 1474195700096,
  "executionTime": 68
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.phrase.LaplaceModelTests",
   "displayName": "org.elasticsearch.search.suggest.phrase.LaplaceModelTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.phrase.LaplaceModelTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.suggest.phrase.LaplaceModelTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)",
     "displayName": "testSerialization(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.suggest.phrase.LaplaceModelTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.suggest.phrase.LaplaceModelTests",
     "children": []
    },
    {
     "id": "ID#testBuildWordScorer(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)",
     "displayName": "testBuildWordScorer(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)",
     "methodName": "testBuildWordScorer",
     "className": "org.elasticsearch.search.suggest.phrase.LaplaceModelTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195700169
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)",
  "startTimestamp": 1474195700186,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)",
  "startTimestamp": 1474195700188,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)",
  "startTimestamp": 1474195700190,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBuildWordScorer(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuildWordScorer(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)",
  "startTimestamp": 1474195700192,
  "executionTime": 23
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.phrase.LaplaceModelTests",
  "startTimestamp": 1474195700169,
  "executionTime": 49
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.client.transport.TransportClientTests",
   "displayName": "org.elasticsearch.client.transport.TransportClientTests",
   "methodName": null,
   "className": "org.elasticsearch.client.transport.TransportClientTests",
   "children": [
    {
     "id": "ID#testThatUsingAClosedClientThrowsAnException(org.elasticsearch.client.transport.TransportClientTests)",
     "displayName": "testThatUsingAClosedClientThrowsAnException(org.elasticsearch.client.transport.TransportClientTests)",
     "methodName": "testThatUsingAClosedClientThrowsAnException",
     "className": "org.elasticsearch.client.transport.TransportClientTests",
     "children": []
    },
    {
     "id": "ID#testPluginNamedWriteablesRegistered(org.elasticsearch.client.transport.TransportClientTests)",
     "displayName": "testPluginNamedWriteablesRegistered(org.elasticsearch.client.transport.TransportClientTests)",
     "methodName": "testPluginNamedWriteablesRegistered",
     "className": "org.elasticsearch.client.transport.TransportClientTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195700228
 }
]

[
 "TEST_STARTED",
 "ID#testThatUsingAClosedClientThrowsAnException(org.elasticsearch.client.transport.TransportClientTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:20,253][INFO ][org.elasticsearch.plugins] [_client_] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:20,253][INFO ][org.elasticsearch.plugins] [_client_] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:20,294][INFO ][org.elasticsearch.transport] [_client_] publish_address {local[121]}, bound_addresses {local[121]}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatUsingAClosedClientThrowsAnException(org.elasticsearch.client.transport.TransportClientTests)",
  "startTimestamp": 1474195700249,
  "executionTime": 51
 }
]

[
 "TEST_STARTED",
 "ID#testPluginNamedWriteablesRegistered(org.elasticsearch.client.transport.TransportClientTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:20,310][INFO ][org.elasticsearch.plugins] [_client_] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:20,310][INFO ][org.elasticsearch.plugins] [_client_] loaded plugin [org.elasticsearch.client.transport.TransportClientTests$MockPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:20,338][INFO ][org.elasticsearch.transport] [_client_] publish_address {local[122]}, bound_addresses {local[122]}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPluginNamedWriteablesRegistered(org.elasticsearch.client.transport.TransportClientTests)",
  "startTimestamp": 1474195700300,
  "executionTime": 39
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.client.transport.TransportClientTests",
  "startTimestamp": 1474195700228,
  "executionTime": 118
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.gateway.DanglingIndicesStateTests",
   "displayName": "org.elasticsearch.gateway.DanglingIndicesStateTests",
   "methodName": null,
   "className": "org.elasticsearch.gateway.DanglingIndicesStateTests",
   "children": [
    {
     "id": "ID#testDanglingIndicesNotImportedWhenTombstonePresent(org.elasticsearch.gateway.DanglingIndicesStateTests)",
     "displayName": "testDanglingIndicesNotImportedWhenTombstonePresent(org.elasticsearch.gateway.DanglingIndicesStateTests)",
     "methodName": "testDanglingIndicesNotImportedWhenTombstonePresent",
     "className": "org.elasticsearch.gateway.DanglingIndicesStateTests",
     "children": []
    },
    {
     "id": "ID#testInvalidIndexFolder(org.elasticsearch.gateway.DanglingIndicesStateTests)",
     "displayName": "testInvalidIndexFolder(org.elasticsearch.gateway.DanglingIndicesStateTests)",
     "methodName": "testInvalidIndexFolder",
     "className": "org.elasticsearch.gateway.DanglingIndicesStateTests",
     "children": []
    },
    {
     "id": "ID#testCleanupWhenEmpty(org.elasticsearch.gateway.DanglingIndicesStateTests)",
     "displayName": "testCleanupWhenEmpty(org.elasticsearch.gateway.DanglingIndicesStateTests)",
     "methodName": "testCleanupWhenEmpty",
     "className": "org.elasticsearch.gateway.DanglingIndicesStateTests",
     "children": []
    },
    {
     "id": "ID#testDanglingProcessing(org.elasticsearch.gateway.DanglingIndicesStateTests)",
     "displayName": "testDanglingProcessing(org.elasticsearch.gateway.DanglingIndicesStateTests)",
     "methodName": "testDanglingProcessing",
     "className": "org.elasticsearch.gateway.DanglingIndicesStateTests",
     "children": []
    },
    {
     "id": "ID#testDanglingIndicesDiscovery(org.elasticsearch.gateway.DanglingIndicesStateTests)",
     "displayName": "testDanglingIndicesDiscovery(org.elasticsearch.gateway.DanglingIndicesStateTests)",
     "methodName": "testDanglingIndicesDiscovery",
     "className": "org.elasticsearch.gateway.DanglingIndicesStateTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195700355
 }
]

[
 "TEST_STARTED",
 "ID#testDanglingIndicesNotImportedWhenTombstonePresent(org.elasticsearch.gateway.DanglingIndicesStateTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:18:20,524][INFO ][org.elasticsearch.env    ] [Hyk2LTs] using [3] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:18:20,527][INFO ][org.elasticsearch.env    ] [Hyk2LTs] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:18:20,592][WARN ][org.elasticsearch.gateway] [node_s_0] [[test1/test1UUID]] can not be imported as a dangling index, as an index with the same name and UUID exist in the index tombstones.  This situation is likely caused by copying over the data directory for an index that was previously deleted.%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDanglingIndicesNotImportedWhenTombstonePresent(org.elasticsearch.gateway.DanglingIndicesStateTests)",
  "startTimestamp": 1474195700393,
  "executionTime": 199
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidIndexFolder(org.elasticsearch.gateway.DanglingIndicesStateTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:18:20,665][INFO ][org.elasticsearch.env    ] [nDKcIqT] using [2] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:18:20,665][INFO ][org.elasticsearch.env    ] [nDKcIqT] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidIndexFolder(org.elasticsearch.gateway.DanglingIndicesStateTests)",
  "startTimestamp": 1474195700592,
  "executionTime": 149
 }
]

[
 "TEST_STARTED",
 "ID#testCleanupWhenEmpty(org.elasticsearch.gateway.DanglingIndicesStateTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:18:20,802][INFO ][org.elasticsearch.env    ] [uTtlVSn] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:18:20,802][INFO ][org.elasticsearch.env    ] [uTtlVSn] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCleanupWhenEmpty(org.elasticsearch.gateway.DanglingIndicesStateTests)",
  "startTimestamp": 1474195700741,
  "executionTime": 65
 }
]

[
 "TEST_STARTED",
 "ID#testDanglingProcessing(org.elasticsearch.gateway.DanglingIndicesStateTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:18:20,849][INFO ][org.elasticsearch.env    ] [2bW3bik] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:18:20,849][INFO ][org.elasticsearch.env    ] [2bW3bik] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:18:20,869][INFO ][org.elasticsearch.gateway] [node_s_0] [[test1/test1UUID]] dangling index exists on local file system, but not in cluster metadata, auto import to cluster state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:18:20,872][INFO ][org.elasticsearch.gateway] [node_s_0] [[test1/test1UUID]] dangling index exists on local file system, but not in cluster metadata, auto import to cluster state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:18:20,874][INFO ][org.elasticsearch.gateway] [node_s_0] [[test1/test1UUID]] dangling index exists on local file system, but not in cluster metadata, auto import to cluster state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDanglingProcessing(org.elasticsearch.gateway.DanglingIndicesStateTests)",
  "startTimestamp": 1474195700806,
  "executionTime": 70
 }
]

[
 "TEST_STARTED",
 "ID#testDanglingIndicesDiscovery(org.elasticsearch.gateway.DanglingIndicesStateTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:18:20,930][INFO ][org.elasticsearch.env    ] [BhYpREy] using [2] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:18:20,930][INFO ][org.elasticsearch.env    ] [BhYpREy] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:18:21,099][INFO ][org.elasticsearch.gateway] [node_s_0] [[test1/test1UUID]] dangling index exists on local file system, but not in cluster metadata, auto import to cluster state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDanglingIndicesDiscovery(org.elasticsearch.gateway.DanglingIndicesStateTests)",
  "startTimestamp": 1474195700876,
  "executionTime": 224
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.gateway.DanglingIndicesStateTests",
  "startTimestamp": 1474195700355,
  "executionTime": 1093
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.similarity.SimilarityServiceTests",
   "displayName": "org.elasticsearch.index.similarity.SimilarityServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.index.similarity.SimilarityServiceTests",
   "children": [
    {
     "id": "ID#testOverrideBuiltInSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)",
     "displayName": "testOverrideBuiltInSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)",
     "methodName": "testOverrideBuiltInSimilarity",
     "className": "org.elasticsearch.index.similarity.SimilarityServiceTests",
     "children": []
    },
    {
     "id": "ID#testOverrideDefaultSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)",
     "displayName": "testOverrideDefaultSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)",
     "methodName": "testOverrideDefaultSimilarity",
     "className": "org.elasticsearch.index.similarity.SimilarityServiceTests",
     "children": []
    },
    {
     "id": "ID#testOverrideBuiltInSimilarityPreV3(org.elasticsearch.index.similarity.SimilarityServiceTests)",
     "displayName": "testOverrideBuiltInSimilarityPreV3(org.elasticsearch.index.similarity.SimilarityServiceTests)",
     "methodName": "testOverrideBuiltInSimilarityPreV3",
     "className": "org.elasticsearch.index.similarity.SimilarityServiceTests",
     "children": []
    },
    {
     "id": "ID#testDefaultSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)",
     "displayName": "testDefaultSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)",
     "methodName": "testDefaultSimilarity",
     "className": "org.elasticsearch.index.similarity.SimilarityServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195701454
 }
]

[
 "TEST_STARTED",
 "ID#testOverrideBuiltInSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOverrideBuiltInSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)",
  "startTimestamp": 1474195701483,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testOverrideDefaultSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOverrideDefaultSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)",
  "startTimestamp": 1474195701487,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testOverrideBuiltInSimilarityPreV3(org.elasticsearch.index.similarity.SimilarityServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOverrideBuiltInSimilarityPreV3(org.elasticsearch.index.similarity.SimilarityServiceTests)",
  "startTimestamp": 1474195701499,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)",
  "startTimestamp": 1474195701502,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.similarity.SimilarityServiceTests",
  "startTimestamp": 1474195701454,
  "executionTime": 54
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests",
   "displayName": "org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests",
   "children": [
    {
     "id": "ID#testResponseStreaming(org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests)",
     "displayName": "testResponseStreaming(org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests)",
     "methodName": "testResponseStreaming",
     "className": "org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests",
     "children": []
    },
    {
     "id": "ID#testIndicesSyncedFlushResult(org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests)",
     "displayName": "testIndicesSyncedFlushResult(org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests)",
     "methodName": "testIndicesSyncedFlushResult",
     "className": "org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195701546
 }
]

[
 "TEST_STARTED",
 "ID#testResponseStreaming(org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResponseStreaming(org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests)",
  "startTimestamp": 1474195701614,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testIndicesSyncedFlushResult(org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndicesSyncedFlushResult(org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests)",
  "startTimestamp": 1474195701619,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests",
  "startTimestamp": 1474195701546,
  "executionTime": 84
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.threadpool.FixedThreadPoolTests",
   "displayName": "org.elasticsearch.threadpool.FixedThreadPoolTests",
   "methodName": null,
   "className": "org.elasticsearch.threadpool.FixedThreadPoolTests",
   "children": [
    {
     "id": "ID#testRejectedExecutionCounter(org.elasticsearch.threadpool.FixedThreadPoolTests)",
     "displayName": "testRejectedExecutionCounter(org.elasticsearch.threadpool.FixedThreadPoolTests)",
     "methodName": "testRejectedExecutionCounter",
     "className": "org.elasticsearch.threadpool.FixedThreadPoolTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195701635
 }
]

[
 "TEST_STARTED",
 "ID#testRejectedExecutionCounter(org.elasticsearch.threadpool.FixedThreadPoolTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRejectedExecutionCounter(org.elasticsearch.threadpool.FixedThreadPoolTests)",
  "startTimestamp": 1474195701660,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.threadpool.FixedThreadPoolTests",
  "startTimestamp": 1474195701635,
  "executionTime": 35
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.UUIDTests",
   "displayName": "org.elasticsearch.common.UUIDTests",
   "methodName": null,
   "className": "org.elasticsearch.common.UUIDTests",
   "children": [
    {
     "id": "ID#testThreadedRandomUUID(org.elasticsearch.common.UUIDTests)",
     "displayName": "testThreadedRandomUUID(org.elasticsearch.common.UUIDTests)",
     "methodName": "testThreadedRandomUUID",
     "className": "org.elasticsearch.common.UUIDTests",
     "children": []
    },
    {
     "id": "ID#testTimeUUID(org.elasticsearch.common.UUIDTests)",
     "displayName": "testTimeUUID(org.elasticsearch.common.UUIDTests)",
     "methodName": "testTimeUUID",
     "className": "org.elasticsearch.common.UUIDTests",
     "children": []
    },
    {
     "id": "ID#testThreadedTimeUUID(org.elasticsearch.common.UUIDTests)",
     "displayName": "testThreadedTimeUUID(org.elasticsearch.common.UUIDTests)",
     "methodName": "testThreadedTimeUUID",
     "className": "org.elasticsearch.common.UUIDTests",
     "children": []
    },
    {
     "id": "ID#testRandomUUID(org.elasticsearch.common.UUIDTests)",
     "displayName": "testRandomUUID(org.elasticsearch.common.UUIDTests)",
     "methodName": "testRandomUUID",
     "className": "org.elasticsearch.common.UUIDTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195701676
 }
]

[
 "TEST_STARTED",
 "ID#testThreadedRandomUUID(org.elasticsearch.common.UUIDTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThreadedRandomUUID(org.elasticsearch.common.UUIDTests)",
  "startTimestamp": 1474195701703,
  "executionTime": 305
 }
]

[
 "TEST_STARTED",
 "ID#testTimeUUID(org.elasticsearch.common.UUIDTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeUUID(org.elasticsearch.common.UUIDTests)",
  "startTimestamp": 1474195702008,
  "executionTime": 91
 }
]

[
 "TEST_STARTED",
 "ID#testThreadedTimeUUID(org.elasticsearch.common.UUIDTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThreadedTimeUUID(org.elasticsearch.common.UUIDTests)",
  "startTimestamp": 1474195702099,
  "executionTime": 226
 }
]

[
 "TEST_STARTED",
 "ID#testRandomUUID(org.elasticsearch.common.UUIDTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomUUID(org.elasticsearch.common.UUIDTests)",
  "startTimestamp": 1474195702325,
  "executionTime": 164
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.UUIDTests",
  "startTimestamp": 1474195701676,
  "executionTime": 815
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195702496
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:22,520][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{2Apmc241TfW4fhzV_L8v-Q}{local}{local[465]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)",
  "startTimestamp": 1474195702530,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)",
  "startTimestamp": 1474195702532,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:22,537][INFO ][org.elasticsearch.search.aggregations.pipeline.bucketmetrics] Content string: {%0A  \"WojciOEBiPq\" : {%0A    \"stats_bucket\" : {%0A      \"buckets_path\" : [%0A        \"CqPKBSBHLEeH\"%0A      ],%0A      \"gap_policy\" : \"skip\"%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:22,538][INFO ][org.elasticsearch.search.aggregations.pipeline.bucketmetrics] Content string: {%0A  \"WojciOEBiPq\" : {%0A    \"stats_bucket\" : {%0A      \"buckets_path\" : [%0A        \"CqPKBSBHLEeH\"%0A      ],%0A      \"gap_policy\" : \"skip\"%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)",
  "startTimestamp": 1474195702534,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests",
  "startTimestamp": 1474195702496,
  "executionTime": 50
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.block.ClusterBlockTests",
   "displayName": "org.elasticsearch.cluster.block.ClusterBlockTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.block.ClusterBlockTests",
   "children": [
    {
     "id": "ID#testGlobalBlocksCheckedIfNoIndicesSpecified(org.elasticsearch.cluster.block.ClusterBlockTests)",
     "displayName": "testGlobalBlocksCheckedIfNoIndicesSpecified(org.elasticsearch.cluster.block.ClusterBlockTests)",
     "methodName": "testGlobalBlocksCheckedIfNoIndicesSpecified",
     "className": "org.elasticsearch.cluster.block.ClusterBlockTests",
     "children": []
    },
    {
     "id": "ID#testToStringDanglingComma(org.elasticsearch.cluster.block.ClusterBlockTests)",
     "displayName": "testToStringDanglingComma(org.elasticsearch.cluster.block.ClusterBlockTests)",
     "methodName": "testToStringDanglingComma",
     "className": "org.elasticsearch.cluster.block.ClusterBlockTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.cluster.block.ClusterBlockTests)",
     "displayName": "testSerialization(org.elasticsearch.cluster.block.ClusterBlockTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.cluster.block.ClusterBlockTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195702553
 }
]

[
 "TEST_STARTED",
 "ID#testGlobalBlocksCheckedIfNoIndicesSpecified(org.elasticsearch.cluster.block.ClusterBlockTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGlobalBlocksCheckedIfNoIndicesSpecified(org.elasticsearch.cluster.block.ClusterBlockTests)",
  "startTimestamp": 1474195702602,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToStringDanglingComma(org.elasticsearch.cluster.block.ClusterBlockTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToStringDanglingComma(org.elasticsearch.cluster.block.ClusterBlockTests)",
  "startTimestamp": 1474195702606,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.cluster.block.ClusterBlockTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.cluster.block.ClusterBlockTests)",
  "startTimestamp": 1474195702610,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.block.ClusterBlockTests",
  "startTimestamp": 1474195702553,
  "executionTime": 68
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.monitor.jvm.JvmInfoTests",
   "displayName": "org.elasticsearch.monitor.jvm.JvmInfoTests",
   "methodName": null,
   "className": "org.elasticsearch.monitor.jvm.JvmInfoTests",
   "children": [
    {
     "id": "ID#testUseG1GC(org.elasticsearch.monitor.jvm.JvmInfoTests)",
     "displayName": "testUseG1GC(org.elasticsearch.monitor.jvm.JvmInfoTests)",
     "methodName": "testUseG1GC",
     "className": "org.elasticsearch.monitor.jvm.JvmInfoTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195702627
 }
]

[
 "TEST_STARTED",
 "ID#testUseG1GC(org.elasticsearch.monitor.jvm.JvmInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUseG1GC(org.elasticsearch.monitor.jvm.JvmInfoTests)",
  "startTimestamp": 1474195702650,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.monitor.jvm.JvmInfoTests",
  "startTimestamp": 1474195702627,
  "executionTime": 28
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.client.node.NodeClientHeadersTests",
   "displayName": "org.elasticsearch.client.node.NodeClientHeadersTests",
   "methodName": null,
   "className": "org.elasticsearch.client.node.NodeClientHeadersTests",
   "children": [
    {
     "id": "ID#testOverrideHeader(org.elasticsearch.client.node.NodeClientHeadersTests)",
     "displayName": "testOverrideHeader(org.elasticsearch.client.node.NodeClientHeadersTests)",
     "methodName": "testOverrideHeader",
     "className": "org.elasticsearch.client.node.NodeClientHeadersTests",
     "children": []
    },
    {
     "id": "ID#testActions(org.elasticsearch.client.node.NodeClientHeadersTests)",
     "displayName": "testActions(org.elasticsearch.client.node.NodeClientHeadersTests)",
     "methodName": "testActions",
     "className": "org.elasticsearch.client.node.NodeClientHeadersTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195702663
 }
]

[
 "TEST_STARTED",
 "ID#testOverrideHeader(org.elasticsearch.client.node.NodeClientHeadersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOverrideHeader(org.elasticsearch.client.node.NodeClientHeadersTests)",
  "startTimestamp": 1474195702777,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testActions(org.elasticsearch.client.node.NodeClientHeadersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActions(org.elasticsearch.client.node.NodeClientHeadersTests)",
  "startTimestamp": 1474195702796,
  "executionTime": 42
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.client.node.NodeClientHeadersTests",
  "startTimestamp": 1474195702663,
  "executionTime": 179
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.ShapeRelationTests",
   "displayName": "org.elasticsearch.common.geo.ShapeRelationTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.ShapeRelationTests",
   "children": [
    {
     "id": "ID#testReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)",
     "displayName": "testReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.common.geo.ShapeRelationTests",
     "children": []
    },
    {
     "id": "ID#testwriteTo(org.elasticsearch.common.geo.ShapeRelationTests)",
     "displayName": "testwriteTo(org.elasticsearch.common.geo.ShapeRelationTests)",
     "methodName": "testwriteTo",
     "className": "org.elasticsearch.common.geo.ShapeRelationTests",
     "children": []
    },
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.common.geo.ShapeRelationTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.common.geo.ShapeRelationTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.common.geo.ShapeRelationTests",
     "children": []
    },
    {
     "id": "ID#testInvalidReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)",
     "displayName": "testInvalidReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)",
     "methodName": "testInvalidReadFrom",
     "className": "org.elasticsearch.common.geo.ShapeRelationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195702853
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)",
  "startTimestamp": 1474195702900,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testwriteTo(org.elasticsearch.common.geo.ShapeRelationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testwriteTo(org.elasticsearch.common.geo.ShapeRelationTests)",
  "startTimestamp": 1474195702904,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.common.geo.ShapeRelationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.common.geo.ShapeRelationTests)",
  "startTimestamp": 1474195702906,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)",
  "startTimestamp": 1474195702908,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.ShapeRelationTests",
  "startTimestamp": 1474195702853,
  "executionTime": 58
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195702917
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:22,940][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{JD1iQJqlQwyJ3WAK2bZn6Q}{local}{local[466]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)",
  "startTimestamp": 1474195702967,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)",
  "startTimestamp": 1474195702969,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:22,973][INFO ][org.elasticsearch.search.aggregations.pipeline] Content string: {%0A  \"WojciOEBiPq\" : {%0A    \"serial_diff\" : {%0A      \"buckets_path\" : [%0A        \"CqPKBSBHLEeH\"%0A      ],%0A      \"gap_policy\" : \"skip\",%0A      \"lag\" : 1%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:22,974][INFO ][org.elasticsearch.search.aggregations.pipeline] Content string: {%0A  \"WojciOEBiPq\" : {%0A    \"serial_diff\" : {%0A      \"buckets_path\" : [%0A        \"CqPKBSBHLEeH\"%0A      ],%0A      \"gap_policy\" : \"skip\",%0A      \"lag\" : 1%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)",
  "startTimestamp": 1474195702971,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests",
  "startTimestamp": 1474195702917,
  "executionTime": 79
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
   "displayName": "org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
   "children": [
    {
     "id": "ID#testSetCacheListenerTwice(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "displayName": "testSetCacheListenerTwice(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "methodName": "testSetCacheListenerTwice",
     "className": "org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
     "children": []
    },
    {
     "id": "ID#testRequireDocValuesOnBools(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "displayName": "testRequireDocValuesOnBools(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "methodName": "testRequireDocValuesOnBools",
     "className": "org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
     "children": []
    },
    {
     "id": "ID#testRequireDocValuesOnDoubles(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "displayName": "testRequireDocValuesOnDoubles(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "methodName": "testRequireDocValuesOnDoubles",
     "className": "org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
     "children": []
    },
    {
     "id": "ID#testFieldDataCacheListener(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "displayName": "testFieldDataCacheListener(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "methodName": "testFieldDataCacheListener",
     "className": "org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
     "children": []
    },
    {
     "id": "ID#testGetForFieldDefaults(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "displayName": "testGetForFieldDefaults(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "methodName": "testGetForFieldDefaults",
     "className": "org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
     "children": []
    },
    {
     "id": "ID#testRequireDocValuesOnLongs(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "displayName": "testRequireDocValuesOnLongs(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "methodName": "testRequireDocValuesOnLongs",
     "className": "org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195703002
 }
]

[
 "TEST_STARTED",
 "ID#testSetCacheListenerTwice(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:23,033][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:23,064][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:23,064][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:23,068][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[8784], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:23,070][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:23,070][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:23,169][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:23,169][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:23,170][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[123]}, bound_addresses {local[123]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:23,172][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{jcwFH8BHSEa14X6vo-bQ-Q}{8FiWeelhRESlUVXNQRjZNQ}{local}{local[123]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:23,173][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:23,185][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:23,203][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:23,275][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:23,290][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [IndexFieldDataServiceTests#testSetCacheListenerTwice]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetCacheListenerTwice(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
  "startTimestamp": 1474195703023,
  "executionTime": 306
 }
]

[
 "TEST_STARTED",
 "ID#testRequireDocValuesOnBools(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:23,336][INFO ][org.elasticsearch.index.fielddata]  [test] [IndexFieldDataServiceTests#testRequireDocValuesOnBools]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRequireDocValuesOnBools(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
  "startTimestamp": 1474195703329,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testRequireDocValuesOnDoubles(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:23,346][INFO ][org.elasticsearch.index.fielddata]  [test] [IndexFieldDataServiceTests#testRequireDocValuesOnDoubles]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRequireDocValuesOnDoubles(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
  "startTimestamp": 1474195703337,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testFieldDataCacheListener(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:23,354][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:23,455][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:23,553][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [IndexFieldDataServiceTests#testFieldDataCacheListener]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldDataCacheListener(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
  "startTimestamp": 1474195703347,
  "executionTime": 249
 }
]

[
 "TEST_STARTED",
 "ID#testGetForFieldDefaults(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:23,603][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:23,666][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:23,682][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [IndexFieldDataServiceTests#testGetForFieldDefaults]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetForFieldDefaults(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
  "startTimestamp": 1474195703597,
  "executionTime": 129
 }
]

[
 "TEST_STARTED",
 "ID#testRequireDocValuesOnLongs(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:23,731][INFO ][org.elasticsearch.index.fielddata]  [test] [IndexFieldDataServiceTests#testRequireDocValuesOnLongs]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRequireDocValuesOnLongs(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
  "startTimestamp": 1474195703726,
  "executionTime": 6
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:23,733][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:23,733][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:23,733][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:23,735][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
  "startTimestamp": 1474195703002,
  "executionTime": 744
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.OperationRoutingTests",
   "displayName": "org.elasticsearch.cluster.routing.OperationRoutingTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.OperationRoutingTests",
   "children": [
    {
     "id": "ID#testGenerateShardId(org.elasticsearch.cluster.routing.OperationRoutingTests)",
     "displayName": "testGenerateShardId(org.elasticsearch.cluster.routing.OperationRoutingTests)",
     "methodName": "testGenerateShardId",
     "className": "org.elasticsearch.cluster.routing.OperationRoutingTests",
     "children": []
    },
    {
     "id": "ID#testThatOnlyNodesSupportNodeIds(org.elasticsearch.cluster.routing.OperationRoutingTests)",
     "displayName": "testThatOnlyNodesSupportNodeIds(org.elasticsearch.cluster.routing.OperationRoutingTests)",
     "methodName": "testThatOnlyNodesSupportNodeIds",
     "className": "org.elasticsearch.cluster.routing.OperationRoutingTests",
     "children": []
    },
    {
     "id": "ID#testPreferNodes(org.elasticsearch.cluster.routing.OperationRoutingTests)",
     "displayName": "testPreferNodes(org.elasticsearch.cluster.routing.OperationRoutingTests)",
     "methodName": "testPreferNodes",
     "className": "org.elasticsearch.cluster.routing.OperationRoutingTests",
     "children": []
    },
    {
     "id": "ID#testBWC(org.elasticsearch.cluster.routing.OperationRoutingTests)",
     "displayName": "testBWC(org.elasticsearch.cluster.routing.OperationRoutingTests)",
     "methodName": "testBWC",
     "className": "org.elasticsearch.cluster.routing.OperationRoutingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195703753
 }
]

[
 "TEST_STARTED",
 "ID#testGenerateShardId(org.elasticsearch.cluster.routing.OperationRoutingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGenerateShardId(org.elasticsearch.cluster.routing.OperationRoutingTests)",
  "startTimestamp": 1474195703769,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testThatOnlyNodesSupportNodeIds(org.elasticsearch.cluster.routing.OperationRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:23,779][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{ebywmqwnS8GIl4qRlXN-Pw}{local}{local[467]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:23,780][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{4kNSiFptRYaEKxjykgyC3A}{local}{local[469]}, previous {node}{ebywmqwnS8GIl4qRlXN-Pw}{local}{local[467]}}, removed {{node}{ebywmqwnS8GIl4qRlXN-Pw}{local}{local[467]},}, added {{node_1}{4kNSiFptRYaEKxjykgyC3A}{local}{local[469]},{node_2}{bTyVcckDQIiPwQ_0NUVZgw}{local}{local[470]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatOnlyNodesSupportNodeIds(org.elasticsearch.cluster.routing.OperationRoutingTests)",
  "startTimestamp": 1474195703773,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testPreferNodes(org.elasticsearch.cluster.routing.OperationRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:23,787][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{_qBgBv43R2GtS3le1XO0YQ}{local}{local[474]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:23,788][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{M7FH0WR1SIKIWgpnopNT_w}{local}{local[476]}, previous {node}{_qBgBv43R2GtS3le1XO0YQ}{local}{local[474]}}, removed {{node}{_qBgBv43R2GtS3le1XO0YQ}{local}{local[474]},}, added {{node_3}{WzNH6DGtSAG8sBIudYQhFw}{local}{local[478]},{node_5}{spfIK4xMSB65DKxOyEZPnQ}{local}{local[480]},{node_7}{-U2HIRYESbKUcV22pyL-EQ}{local}{local[482]},{node_8}{m0GYlUi5SPmnIRE2m1uSrw}{local}{local[483]},{node_1}{M7FH0WR1SIKIWgpnopNT_w}{local}{local[476]},{node_2}{q8Oe8G7fRXeiYlABF2pRDQ}{local}{local[477]},{node_6}{bStO2vlTSaG-TkPTKGnboA}{local}{local[481]},{node_4}{T8JG-j1oR0OBNUsLOvtPBQ}{local}{local[479]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreferNodes(org.elasticsearch.cluster.routing.OperationRoutingTests)",
  "startTimestamp": 1474195703783,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testBWC(org.elasticsearch.cluster.routing.OperationRoutingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBWC(org.elasticsearch.cluster.routing.OperationRoutingTests)",
  "startTimestamp": 1474195703792,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.OperationRoutingTests",
  "startTimestamp": 1474195703753,
  "executionTime": 44
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.stats.SearchStatsUnitTests",
   "displayName": "org.elasticsearch.search.stats.SearchStatsUnitTests",
   "methodName": null,
   "className": "org.elasticsearch.search.stats.SearchStatsUnitTests",
   "children": [
    {
     "id": "ID#testShardLevelSearchGroupStats(org.elasticsearch.search.stats.SearchStatsUnitTests)",
     "displayName": "testShardLevelSearchGroupStats(org.elasticsearch.search.stats.SearchStatsUnitTests)",
     "methodName": "testShardLevelSearchGroupStats",
     "className": "org.elasticsearch.search.stats.SearchStatsUnitTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195703803
 }
]

[
 "TEST_STARTED",
 "ID#testShardLevelSearchGroupStats(org.elasticsearch.search.stats.SearchStatsUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardLevelSearchGroupStats(org.elasticsearch.search.stats.SearchStatsUnitTests)",
  "startTimestamp": 1474195703819,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.stats.SearchStatsUnitTests",
  "startTimestamp": 1474195703803,
  "executionTime": 20
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.ListenableActionFutureTests",
   "displayName": "org.elasticsearch.action.support.ListenableActionFutureTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.ListenableActionFutureTests",
   "children": [
    {
     "id": "ID#testListenerIsCallableFromNetworkThreads(org.elasticsearch.action.support.ListenableActionFutureTests)",
     "displayName": "testListenerIsCallableFromNetworkThreads(org.elasticsearch.action.support.ListenableActionFutureTests)",
     "methodName": "testListenerIsCallableFromNetworkThreads",
     "className": "org.elasticsearch.action.support.ListenableActionFutureTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195704014
 }
]

[
 "TEST_STARTED",
 "ID#testListenerIsCallableFromNetworkThreads(org.elasticsearch.action.support.ListenableActionFutureTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListenerIsCallableFromNetworkThreads(org.elasticsearch.action.support.ListenableActionFutureTests)",
  "startTimestamp": 1474195704028,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.ListenableActionFutureTests",
  "startTimestamp": 1474195704014,
  "executionTime": 22
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests",
   "displayName": "org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests",
   "children": [
    {
     "id": "ID#testResultAggregation(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "displayName": "testResultAggregation(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "methodName": "testResultAggregation",
     "className": "org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testOperationExecution(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "displayName": "testOperationExecution(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "methodName": "testOperationExecution",
     "className": "org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testRequestBlock(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "displayName": "testRequestBlock(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "methodName": "testRequestBlock",
     "className": "org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testGlobalBlock(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "displayName": "testGlobalBlock(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "methodName": "testGlobalBlock",
     "className": "org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testOneRequestIsSentToEachNodeHoldingAShard(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "displayName": "testOneRequestIsSentToEachNodeHoldingAShard(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "methodName": "testOneRequestIsSentToEachNodeHoldingAShard",
     "className": "org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testRequestsAreNotSentToFailedMaster(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "displayName": "testRequestsAreNotSentToFailedMaster(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "methodName": "testRequestsAreNotSentToFailedMaster",
     "className": "org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195704298
 }
]

[
 "TEST_STARTED",
 "ID#testResultAggregation(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:18:24,350][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{7M5dX0X4R8Glbu33OdK9sg}{local}{local[487]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:18:24,353][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_2}{vHwtBqoyQYap2XrR7Jm5tA}{local}{local[490]}, previous {node}{7M5dX0X4R8Glbu33OdK9sg}{local}{local[487]}}, removed {{node}{7M5dX0X4R8Glbu33OdK9sg}{local}{local[487]},}, added {{node_1}{Vqvf-EPGQJSQDpXBaXQFFw}{local}{local[489]},{node_2}{vHwtBqoyQYap2XrR7Jm5tA}{local}{local[490]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResultAggregation(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
  "startTimestamp": 1474195704346,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testOperationExecution(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:18:24,377][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{ERHuFKUzS8-3Ym8crMB-sg}{local}{local[493]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:18:24,380][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_2}{0gW2GuWWRvqnfUpxwCiBow}{local}{local[496]}, previous {node}{ERHuFKUzS8-3Ym8crMB-sg}{local}{local[493]}}, removed {{node}{ERHuFKUzS8-3Ym8crMB-sg}{local}{local[493]},}, added {{node_1}{Gsyxlej5T3-srBFS3moBTw}{local}{local[495]},{node_2}{0gW2GuWWRvqnfUpxwCiBow}{local}{local[496]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOperationExecution(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
  "startTimestamp": 1474195704366,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testRequestBlock(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:18:24,388][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{FWmrHBe1Sf6L3V21ishBZA}{local}{local[499]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:18:24,392][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_3}{u-ndZLOSRr25sPCEiGmpWQ}{local}{local[503]}, previous {node}{FWmrHBe1Sf6L3V21ishBZA}{local}{local[499]}}, removed {{node}{FWmrHBe1Sf6L3V21ishBZA}{local}{local[499]},}, added {{node_1}{PO104EOKSs2NKIs_pNFz6A}{local}{local[501]},{node_3}{u-ndZLOSRr25sPCEiGmpWQ}{local}{local[503]},{node_2}{EY31d9mzSnuuNG1JAZy7Ig}{local}{local[502]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRequestBlock(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
  "startTimestamp": 1474195704383,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testGlobalBlock(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:18:24,397][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{daoynvP0RwyfvNxC38BoYA}{local}{local[506]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:18:24,399][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_2}{ZYRiq8R-TdeURlx6xi8Z6w}{local}{local[509]}, previous {node}{daoynvP0RwyfvNxC38BoYA}{local}{local[506]}}, removed {{node}{daoynvP0RwyfvNxC38BoYA}{local}{local[506]},}, added {{node_1}{NZbJsE60QYyokmVIZzuvqw}{local}{local[508]},{node_2}{ZYRiq8R-TdeURlx6xi8Z6w}{local}{local[509]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGlobalBlock(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
  "startTimestamp": 1474195704393,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testOneRequestIsSentToEachNodeHoldingAShard(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:18:24,404][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{HmXYftR-R3KxC6RtVxSyNw}{local}{local[512]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:18:24,405][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_3}{k8IhgjajSJeHN00GDXC2Yw}{local}{local[516]}, previous {node}{HmXYftR-R3KxC6RtVxSyNw}{local}{local[512]}}, removed {{node}{HmXYftR-R3KxC6RtVxSyNw}{local}{local[512]},}, added {{node_1}{kLFYwL5jQVCUPn2wASMWZA}{local}{local[514]},{node_3}{k8IhgjajSJeHN00GDXC2Yw}{local}{local[516]},{node_2}{1Rznso6oQ6O8Ztnw3lMSWQ}{local}{local[515]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOneRequestIsSentToEachNodeHoldingAShard(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
  "startTimestamp": 1474195704400,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testRequestsAreNotSentToFailedMaster(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:18:24,410][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{fAlSHRYVQnmgnWi6Y4DViQ}{local}{local[519]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:18:24,411][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_3}{y53x_PPtQyWdMhU9QnDJew}{local}{local[523]}, previous {node}{fAlSHRYVQnmgnWi6Y4DViQ}{local}{local[519]}}, removed {{node}{fAlSHRYVQnmgnWi6Y4DViQ}{local}{local[519]},}, added {{node_1}{PhfD03IjSUCHpM3q_4Qh5A}{local}{local[521]},{node_3}{y53x_PPtQyWdMhU9QnDJew}{local}{local[523]},{node_2}{DDCyCV30Qa-Vn4_lQ73I2w}{local}{local[522]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:18:24,412][INFO ][org.elasticsearch.cluster.service] [node_s_0] removed {{node_3}{y53x_PPtQyWdMhU9QnDJew}{local}{local[523]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRequestsAreNotSentToFailedMaster(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
  "startTimestamp": 1474195704406,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests",
  "startTimestamp": 1474195704298,
  "executionTime": 117
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.nodes.TransportNodesActionTests",
   "displayName": "org.elasticsearch.action.support.nodes.TransportNodesActionTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.nodes.TransportNodesActionTests",
   "children": [
    {
     "id": "ID#testNewResponseNullArray(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
     "displayName": "testNewResponseNullArray(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
     "methodName": "testNewResponseNullArray",
     "className": "org.elasticsearch.action.support.nodes.TransportNodesActionTests",
     "children": []
    },
    {
     "id": "ID#testRequestIsSentToEachNode(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
     "displayName": "testRequestIsSentToEachNode(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
     "methodName": "testRequestIsSentToEachNode",
     "className": "org.elasticsearch.action.support.nodes.TransportNodesActionTests",
     "children": []
    },
    {
     "id": "ID#testCustomResolving(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
     "displayName": "testCustomResolving(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
     "methodName": "testCustomResolving",
     "className": "org.elasticsearch.action.support.nodes.TransportNodesActionTests",
     "children": []
    },
    {
     "id": "ID#testNodesSelectors(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
     "displayName": "testNodesSelectors(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
     "methodName": "testNodesSelectors",
     "className": "org.elasticsearch.action.support.nodes.TransportNodesActionTests",
     "children": []
    },
    {
     "id": "ID#testNewResponse(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
     "displayName": "testNewResponse(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
     "methodName": "testNewResponse",
     "className": "org.elasticsearch.action.support.nodes.TransportNodesActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195704573
 }
]

[
 "TEST_STARTED",
 "ID#testNewResponseNullArray(org.elasticsearch.action.support.nodes.TransportNodesActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:24,634][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{n_uqiY0QQWOLu4z-CmsepQ}{local}{local[526]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:24,637][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_5}{node_5}{xQJRkCj2SHKggja7Tqde0A}{local}{local[532]}{custom=LUMV}, previous {node}{n_uqiY0QQWOLu4z-CmsepQ}{local}{local[526]}}, removed {{node}{n_uqiY0QQWOLu4z-CmsepQ}{local}{local[526]},}, added {{node_2}{node_2}{ZCg8xdyxRha20n7zY2ZUYg}{local}{local[529]}{custom=hjFMa},{node_0}{node_0}{HsgQmlrGQ5Spy-LxXLOL0A}{local}{local[527]}{custom=match},{node_7}{node_7}{mhcOvgiIQ2yBwH91W6gpZA}{local}{local[534]}{custom=DQEER},{node_4}{node_4}{pe2fIHwDR8iZifPUFXGNdw}{local}{local[531]}{custom=kRWvZ},{node_5}{node_5}{xQJRkCj2SHKggja7Tqde0A}{local}{local[532]}{custom=LUMV},{node_3}{node_3}{oUzKXxrgQZy_8RZ_p9c0Vg}{local}{local[530]}{custom=aYkj},{node_1}{node_1}{DZpuWbsDTe24GKYEYgSROw}{local}{local[528]}{custom=cEf},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNewResponseNullArray(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
  "startTimestamp": 1474195704602,
  "executionTime": 39
 }
]

[
 "TEST_STARTED",
 "ID#testRequestIsSentToEachNode(org.elasticsearch.action.support.nodes.TransportNodesActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:24,663][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{yhcKxFxBTFiOYFiz0BS7Zg}{local}{local[535]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:24,664][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_9}{node_9}{qcb6r0QdSVGRetchNreT2Q}{local}{local[545]}{custom=obEOB}, previous {node}{yhcKxFxBTFiOYFiz0BS7Zg}{local}{local[535]}}, removed {{node}{yhcKxFxBTFiOYFiz0BS7Zg}{local}{local[535]},}, added {{node_0}{node_0}{8YAVJHzKQjinWTJ3AQveDA}{local}{local[536]}{custom=BMeOM},{node_2}{node_2}{8XcuZ2BKQPeUKlmcndEMDA}{local}{local[538]}{custom=ypAq},{node_8}{node_8}{GrXk8QHWQRetysbUTFuRqQ}{local}{local[544]}{custom=match},{node_1}{node_1}{Nkralt_VQCGSvXiPM9wQRA}{local}{local[537]}{custom=aCu},{node_3}{node_3}{_cUwUdbXRWuqy3JY4Mvo5w}{local}{local[539]}{custom=match},{node_9}{node_9}{qcb6r0QdSVGRetchNreT2Q}{local}{local[545]}{custom=obEOB},{node_5}{node_5}{uMu_xQ9fShSP4LJoOJEMMg}{local}{local[541]}{custom=hhoQw},{node_4}{node_4}{8sKWycUHTVG0ptcWwm2klw}{local}{local[540]}{custom=match},{node_6}{node_6}{2sZFEiYDTaGwPdhWWes5tw}{local}{local[542]}{custom=match},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRequestIsSentToEachNode(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
  "startTimestamp": 1474195704641,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testCustomResolving(org.elasticsearch.action.support.nodes.TransportNodesActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:24,672][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{0-hyAxAXSfaFy5_CAb94lg}{local}{local[546]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:24,675][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_6}{node_6}{s5TuGsmeSg6UeJpErtUHAg}{local}{local[553]}{custom=UUS}, previous {node}{0-hyAxAXSfaFy5_CAb94lg}{local}{local[546]}}, removed {{node}{0-hyAxAXSfaFy5_CAb94lg}{local}{local[546]},}, added {{node_3}{node_3}{gAXyLM4jTfqhKBimABC_7Q}{local}{local[550]}{custom=VFK},{node_7}{node_7}{BH8DhHWyQNqmk90lhBWAJw}{local}{local[554]},{node_1}{node_1}{TfZ1ug60ThmbE00KKxryqA}{local}{local[548]}{custom=ZkpDb},{node_6}{node_6}{s5TuGsmeSg6UeJpErtUHAg}{local}{local[553]}{custom=UUS},{node_5}{node_5}{27CZRYq9SyKKTKyDOy-SHw}{local}{local[552]}{custom=match},{node_0}{node_0}{H9asL8aMT0GdsmG-8UuzVg}{local}{local[547]}{custom=zfg},{node_2}{node_2}{XyLa89zZR1etvgUEyfypYw}{local}{local[549]}{custom=match},{node_8}{node_8}{Ti1vItRxQjqO1vz9XCO0Ig}{local}{local[555]}{custom=match},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCustomResolving(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
  "startTimestamp": 1474195704666,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testNodesSelectors(org.elasticsearch.action.support.nodes.TransportNodesActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:24,696][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{yJ-YUG0RQtOPkxTMi3CUZA}{local}{local[556]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:24,709][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_4}{node_4}{u6_WdUHSQPe_dy__oeSCBQ}{local}{local[561]}{custom=tbrY}, previous {node}{yJ-YUG0RQtOPkxTMi3CUZA}{local}{local[556]}}, removed {{node}{yJ-YUG0RQtOPkxTMi3CUZA}{local}{local[556]},}, added {{node_0}{node_0}{2vkbFkq_S-2hTe29RT5ljQ}{local}{local[557]},{node_5}{node_5}{K4_uS0DMQ1uHzDXi2TFlyg}{local}{local[562]}{custom=bmn},{node_1}{node_1}{o9uwDFKASvyBP-LAs12gFA}{local}{local[558]},{node_3}{node_3}{HIrtCjTZTxmvmJN73HvyHw}{local}{local[560]}{custom=match},{node_2}{node_2}{c5NMxAlNRyK2V6N8sl1bcg}{local}{local[559]}{custom=match},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNodesSelectors(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
  "startTimestamp": 1474195704678,
  "executionTime": 33
 }
]

[
 "TEST_STARTED",
 "ID#testNewResponse(org.elasticsearch.action.support.nodes.TransportNodesActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:24,716][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{BT1puFu1Sd2_sLnZP41TYg}{local}{local[563]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:24,717][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{node_1}{1-rDC22FSZa-m0SPvOZUKQ}{local}{local[565]}{custom=NKF}, previous {node}{BT1puFu1Sd2_sLnZP41TYg}{local}{local[563]}}, removed {{node}{BT1puFu1Sd2_sLnZP41TYg}{local}{local[563]},}, added {{node_0}{node_0}{k_Xc28yTQWGwqfpTZeNW3w}{local}{local[564]}{custom=match},{node_1}{node_1}{1-rDC22FSZa-m0SPvOZUKQ}{local}{local[565]}{custom=NKF},{node_2}{node_2}{MaMG1xdOSxOE3so5N7_8dA}{local}{local[566]}{custom=match},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNewResponse(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
  "startTimestamp": 1474195704711,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.nodes.TransportNodesActionTests",
  "startTimestamp": 1474195704573,
  "executionTime": 152
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests",
   "displayName": "org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests",
   "children": [
    {
     "id": "ID#testFailureWithoutRetry(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
     "displayName": "testFailureWithoutRetry(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
     "methodName": "testFailureWithoutRetry",
     "className": "org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests",
     "children": []
    },
    {
     "id": "ID#testRetryOfAnAlreadyTimedOutRequest(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
     "displayName": "testRetryOfAnAlreadyTimedOutRequest(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
     "methodName": "testRetryOfAnAlreadyTimedOutRequest",
     "className": "org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests",
     "children": []
    },
    {
     "id": "ID#testBasicRequestWorks(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
     "displayName": "testBasicRequestWorks(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
     "methodName": "testBasicRequestWorks",
     "className": "org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests",
     "children": []
    },
    {
     "id": "ID#testSuccessAfterRetryWithExceptionFromTransport(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
     "displayName": "testSuccessAfterRetryWithExceptionFromTransport(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
     "methodName": "testSuccessAfterRetryWithExceptionFromTransport",
     "className": "org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests",
     "children": []
    },
    {
     "id": "ID#testSuccessAfterRetryWithClusterStateUpdate(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
     "displayName": "testSuccessAfterRetryWithClusterStateUpdate(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
     "methodName": "testSuccessAfterRetryWithClusterStateUpdate",
     "className": "org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests",
     "children": []
    },
    {
     "id": "ID#testUnresolvableRequestDoesNotHang(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
     "displayName": "testUnresolvableRequestDoesNotHang(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
     "methodName": "testUnresolvableRequestDoesNotHang",
     "className": "org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests",
     "children": []
    },
    {
     "id": "ID#testGlobalBlock(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
     "displayName": "testGlobalBlock(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
     "methodName": "testGlobalBlock",
     "className": "org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195704856
 }
]

[
 "TEST_STARTED",
 "ID#testFailureWithoutRetry(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:24,874][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{pq6YO4dRRTKWKTkVx9ZEow}{local}{local[568]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:24,877][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{IhOpYx3cTx6qbAhI2YdE4Q}{local}{local[570]}, previous {node}{pq6YO4dRRTKWKTkVx9ZEow}{local}{local[568]}}, removed {{node}{pq6YO4dRRTKWKTkVx9ZEow}{local}{local[568]},}, added {{node_1}{IhOpYx3cTx6qbAhI2YdE4Q}{local}{local[570]},{node_2}{FVHKfWzuSjO4mSR3H2XptQ}{local}{local[571]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailureWithoutRetry(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
  "startTimestamp": 1474195704871,
  "executionTime": 36
 }
]

[
 "TEST_STARTED",
 "ID#testRetryOfAnAlreadyTimedOutRequest(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:24,911][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{lMjvWOJoQXaYc1l9Zbf_gg}{local}{local[575]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:24,913][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{pyzVpVOcSk6K5Xpb_9rHBw}{local}{local[577]}, previous {node}{lMjvWOJoQXaYc1l9Zbf_gg}{local}{local[575]}}, removed {{node}{lMjvWOJoQXaYc1l9Zbf_gg}{local}{local[575]},}, added {{node_1}{pyzVpVOcSk6K5Xpb_9rHBw}{local}{local[577]},{node_2}{RRZeEYBUS0C02gnAheylVA}{local}{local[578]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRetryOfAnAlreadyTimedOutRequest(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
  "startTimestamp": 1474195704908,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testBasicRequestWorks(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:24,922][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{WYR6KM1ISnaoHR1zFNalvw}{local}{local[582]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:24,924][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{OHBhWeQZTautMG03xRDH3g}{local}{local[584]}, previous {node}{WYR6KM1ISnaoHR1zFNalvw}{local}{local[582]}}, removed {{node}{WYR6KM1ISnaoHR1zFNalvw}{local}{local[582]},}, added {{node_1}{OHBhWeQZTautMG03xRDH3g}{local}{local[584]},{node_2}{Dp8l6oReTQSXsJzUqJQ9NQ}{local}{local[585]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicRequestWorks(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
  "startTimestamp": 1474195704918,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testSuccessAfterRetryWithExceptionFromTransport(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:24,929][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{CAwvsO9BRC2cLrVoL8Cu1g}{local}{local[589]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:24,932][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{k0WKPpggRnW8RVxP43Kw4w}{local}{local[591]}, previous {node}{CAwvsO9BRC2cLrVoL8Cu1g}{local}{local[589]}}, removed {{node}{CAwvsO9BRC2cLrVoL8Cu1g}{local}{local[589]},}, added {{node_1}{k0WKPpggRnW8RVxP43Kw4w}{local}{local[591]},{node_2}{TsQdBa4JQJajRdFJBc3cBw}{local}{local[592]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:24,933][INFO ][org.elasticsearch.cluster.service] [node_s_0] removed {{node_0}{O-lLDnYNTg25DoGBMH4DXQ}{local}{local[590]},{node_1}{k0WKPpggRnW8RVxP43Kw4w}{local}{local[591]},{node_2}{TsQdBa4JQJajRdFJBc3cBw}{local}{local[592]},}, added {{node_1}{RF86cLZ4RjCIhBoR8_B4hw}{local}{local[597]},{node_2}{1grnWFMvQgiQdLrC-JQs0w}{local}{local[598]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSuccessAfterRetryWithExceptionFromTransport(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
  "startTimestamp": 1474195704925,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testSuccessAfterRetryWithClusterStateUpdate(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:24,946][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{PPXXnnEFT1eRPq8rvFgH7w}{local}{local[602]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:24,948][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{qeOYwKmuQSC9pXdW1nKwJw}{local}{local[604]}, previous {node}{PPXXnnEFT1eRPq8rvFgH7w}{local}{local[602]}}, removed {{node}{PPXXnnEFT1eRPq8rvFgH7w}{local}{local[602]},}, added {{node_1}{qeOYwKmuQSC9pXdW1nKwJw}{local}{local[604]},{node_2}{6tJz0wG1S6CPuw4VtLnLtQ}{local}{local[605]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:24,948][INFO ][org.elasticsearch.cluster.service] [node_s_0] removed {{node_0}{NlZ902AmS-Kng4zY677bIw}{local}{local[603]},{node_1}{qeOYwKmuQSC9pXdW1nKwJw}{local}{local[604]},{node_2}{6tJz0wG1S6CPuw4VtLnLtQ}{local}{local[605]},}, added {{node_1}{RaUys0hrTCaDdRsJOaBT-g}{local}{local[610]},{node_2}{j33I63n6RlqNdXhnuY3Aig}{local}{local[611]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSuccessAfterRetryWithClusterStateUpdate(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
  "startTimestamp": 1474195704933,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testUnresolvableRequestDoesNotHang(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:24,969][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{seAAundtSui6eBshIsN1Qw}{local}{local[615]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:24,976][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{6nvU2EQQSlOPt8eCR8saeg}{local}{local[617]}, previous {node}{seAAundtSui6eBshIsN1Qw}{local}{local[615]}}, removed {{node}{seAAundtSui6eBshIsN1Qw}{local}{local[615]},}, added {{node_1}{6nvU2EQQSlOPt8eCR8saeg}{local}{local[617]},{node_2}{UXf50j5KQaud6lzxU-tBdg}{local}{local[618]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnresolvableRequestDoesNotHang(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
  "startTimestamp": 1474195704949,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testGlobalBlock(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:24,981][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{i0D21lMhTdCf7mLEn90l-g}{local}{local[622]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGlobalBlock(org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests)",
  "startTimestamp": 1474195704977,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationActionTests",
  "startTimestamp": 1474195704856,
  "executionTime": 130
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.bootstrap.ESPolicyTests",
   "displayName": "org.elasticsearch.bootstrap.ESPolicyTests",
   "methodName": null,
   "className": "org.elasticsearch.bootstrap.ESPolicyTests",
   "children": [
    {
     "id": "ID#testRestrictPrivileges(org.elasticsearch.bootstrap.ESPolicyTests)",
     "displayName": "testRestrictPrivileges(org.elasticsearch.bootstrap.ESPolicyTests)",
     "methodName": "testRestrictPrivileges",
     "className": "org.elasticsearch.bootstrap.ESPolicyTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195705130
 }
]

[
 "TEST_STARTED",
 "ID#testRestrictPrivileges(org.elasticsearch.bootstrap.ESPolicyTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestrictPrivileges(org.elasticsearch.bootstrap.ESPolicyTests)",
  "startTimestamp": 1474195705144,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.bootstrap.ESPolicyTests",
  "startTimestamp": 1474195705130,
  "executionTime": 26
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests",
   "displayName": "org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests",
   "methodName": null,
   "className": "org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests",
   "children": [
    {
     "id": "ID#testIsFatalCause(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)",
     "displayName": "testIsFatalCause(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)",
     "methodName": "testIsFatalCause",
     "className": "org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests",
     "children": []
    },
    {
     "id": "ID#testUncaughtException(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)",
     "displayName": "testUncaughtException(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)",
     "methodName": "testUncaughtException",
     "className": "org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests",
     "children": []
    },
    {
     "id": "ID#testUncaughtError(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)",
     "displayName": "testUncaughtError(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)",
     "methodName": "testUncaughtError",
     "className": "org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195705389
 }
]

[
 "TEST_STARTED",
 "ID#testIsFatalCause(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsFatalCause(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)",
  "startTimestamp": 1474195705399,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testUncaughtException(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUncaughtException(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)",
  "startTimestamp": 1474195705417,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUncaughtError(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUncaughtError(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)",
  "startTimestamp": 1474195705420,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests",
  "startTimestamp": 1474195705389,
  "executionTime": 36
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cli.TerminalTests",
   "displayName": "org.elasticsearch.cli.TerminalTests",
   "methodName": null,
   "className": "org.elasticsearch.cli.TerminalTests",
   "children": [
    {
     "id": "ID#testVerbosity(org.elasticsearch.cli.TerminalTests)",
     "displayName": "testVerbosity(org.elasticsearch.cli.TerminalTests)",
     "methodName": "testVerbosity",
     "className": "org.elasticsearch.cli.TerminalTests",
     "children": []
    },
    {
     "id": "ID#testEscaping(org.elasticsearch.cli.TerminalTests)",
     "displayName": "testEscaping(org.elasticsearch.cli.TerminalTests)",
     "methodName": "testEscaping",
     "className": "org.elasticsearch.cli.TerminalTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195705661
 }
]

[
 "TEST_STARTED",
 "ID#testVerbosity(org.elasticsearch.cli.TerminalTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVerbosity(org.elasticsearch.cli.TerminalTests)",
  "startTimestamp": 1474195705677,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testEscaping(org.elasticsearch.cli.TerminalTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEscaping(org.elasticsearch.cli.TerminalTests)",
  "startTimestamp": 1474195705687,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cli.TerminalTests",
  "startTimestamp": 1474195705661,
  "executionTime": 29
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.IndexGraveyardTests",
   "displayName": "org.elasticsearch.cluster.metadata.IndexGraveyardTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.IndexGraveyardTests",
   "children": [
    {
     "id": "ID#testContains(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
     "displayName": "testContains(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
     "methodName": "testContains",
     "className": "org.elasticsearch.cluster.metadata.IndexGraveyardTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
     "displayName": "testEquals(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.cluster.metadata.IndexGraveyardTests",
     "children": []
    },
    {
     "id": "ID#testAddTombstones(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
     "displayName": "testAddTombstones(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
     "methodName": "testAddTombstones",
     "className": "org.elasticsearch.cluster.metadata.IndexGraveyardTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
     "displayName": "testSerialization(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.cluster.metadata.IndexGraveyardTests",
     "children": []
    },
    {
     "id": "ID#testPurge(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
     "displayName": "testPurge(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
     "methodName": "testPurge",
     "className": "org.elasticsearch.cluster.metadata.IndexGraveyardTests",
     "children": []
    },
    {
     "id": "ID#testXContent(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
     "displayName": "testXContent(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
     "methodName": "testXContent",
     "className": "org.elasticsearch.cluster.metadata.IndexGraveyardTests",
     "children": []
    },
    {
     "id": "ID#testDiffs(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
     "displayName": "testDiffs(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
     "methodName": "testDiffs",
     "className": "org.elasticsearch.cluster.metadata.IndexGraveyardTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195705919
 }
]

[
 "TEST_STARTED",
 "ID#testContains(org.elasticsearch.cluster.metadata.IndexGraveyardTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testContains(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
  "startTimestamp": 1474195705933,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.cluster.metadata.IndexGraveyardTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
  "startTimestamp": 1474195705935,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAddTombstones(org.elasticsearch.cluster.metadata.IndexGraveyardTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddTombstones(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
  "startTimestamp": 1474195705937,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.cluster.metadata.IndexGraveyardTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
  "startTimestamp": 1474195705939,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testPurge(org.elasticsearch.cluster.metadata.IndexGraveyardTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPurge(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
  "startTimestamp": 1474195705940,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testXContent(org.elasticsearch.cluster.metadata.IndexGraveyardTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testXContent(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
  "startTimestamp": 1474195705952,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDiffs(org.elasticsearch.cluster.metadata.IndexGraveyardTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDiffs(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
  "startTimestamp": 1474195705955,
  "executionTime": 45
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.IndexGraveyardTests",
  "startTimestamp": 1474195705919,
  "executionTime": 87
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
   "displayName": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
   "children": [
    {
     "id": "ID#testIndexOptionsAllowUnavailableDisallowEmpty(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIndexOptionsAllowUnavailableDisallowEmpty(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIndexOptionsAllowUnavailableDisallowEmpty",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testConcreteIndicesIgnoreIndicesOneMissingIndex(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testConcreteIndicesIgnoreIndicesOneMissingIndex(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testConcreteIndicesIgnoreIndicesOneMissingIndex",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testConcreteIndicesAllPatternRandom(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testConcreteIndicesAllPatternRandom(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testConcreteIndicesAllPatternRandom",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIndexOptionsSingleIndexNoExpandWildcards(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIndexOptionsSingleIndexNoExpandWildcards(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIndexOptionsSingleIndexNoExpandWildcards",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsAllIndicesNormalIndexes(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsAllIndicesNormalIndexes(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsAllIndicesNormalIndexes",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testConcreteIndicesWildcardNoMatch(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testConcreteIndicesWildcardNoMatch(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testConcreteIndicesWildcardNoMatch",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsAllIndicesNull(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsAllIndicesNull(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsAllIndicesNull",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIndexOptionsStrict(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIndexOptionsStrict(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIndexOptionsStrict",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsAllIndicesWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsAllIndicesWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsAllIndicesWildcard",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIndexOptionsFailClosedIndicesAndAliases(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIndexOptionsFailClosedIndicesAndAliases(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIndexOptionsFailClosedIndicesAndAliases",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsPatternMatchingAllIndicesNonMatchingTrailingWildcardAndExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsPatternMatchingAllIndicesNonMatchingTrailingWildcardAndExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsPatternMatchingAllIndicesNonMatchingTrailingWildcardAndExclusion",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testConcreteIndicesIgnoreIndicesAllMissing(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testConcreteIndicesIgnoreIndicesAllMissing(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testConcreteIndicesIgnoreIndicesAllMissing",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testConcreteIndicesWildcardExpansion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testConcreteIndicesWildcardExpansion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testConcreteIndicesWildcardExpansion",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testConcreteIndicesIgnoreIndicesOneMissingIndexOtherFound(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testConcreteIndicesIgnoreIndicesOneMissingIndexOtherFound(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testConcreteIndicesIgnoreIndicesOneMissingIndexOtherFound",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsExplicitAllIndicesExplicitAll(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsExplicitAllIndicesExplicitAll(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsExplicitAllIndicesExplicitAll",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIndexOptionsLenient(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIndexOptionsLenient(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIndexOptionsLenient",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsPatternMatchingAllIndicesMatchingTrailingWildcardAndExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsPatternMatchingAllIndicesMatchingTrailingWildcardAndExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsPatternMatchingAllIndicesMatchingTrailingWildcardAndExclusion",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testDedupConcreteIndices(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testDedupConcreteIndices(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testDedupConcreteIndices",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsExplicitAllIndicesExplicitAllPlusOther(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsExplicitAllIndicesExplicitAllPlusOther(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsExplicitAllIndicesExplicitAllPlusOther",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testFilteringAliases(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testFilteringAliases(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testFilteringAliases",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsPatternMatchingAllIndicesOnlyWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsPatternMatchingAllIndicesOnlyWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsPatternMatchingAllIndicesOnlyWildcard",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIndexOptionsNoExpandWildcards(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIndexOptionsNoExpandWildcards(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIndexOptionsNoExpandWildcards",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsPatternMatchingAllIndicesExplicitList(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsPatternMatchingAllIndicesExplicitList(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsPatternMatchingAllIndicesExplicitList",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsAllIndicesExplicitAll(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsAllIndicesExplicitAll(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsAllIndicesExplicitAll",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIndexOptionsEmptyCluster(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIndexOptionsEmptyCluster(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIndexOptionsEmptyCluster",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsPatternMatchingAllIndicesMatchingSingleExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsPatternMatchingAllIndicesMatchingSingleExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsPatternMatchingAllIndicesMatchingSingleExclusion",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsPatternMatchingAllIndicesNonMatchingTrailingWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsPatternMatchingAllIndicesNonMatchingTrailingWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsPatternMatchingAllIndicesNonMatchingTrailingWildcard",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsAllIndicesEmpty(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsAllIndicesEmpty(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsAllIndicesEmpty",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsAllIndicesExplicitAllPlusOther(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsAllIndicesExplicitAllPlusOther(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsAllIndicesExplicitAllPlusOther",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testConcreteIndicesIgnoreIndicesEmptyRequest(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testConcreteIndicesIgnoreIndicesEmptyRequest(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testConcreteIndicesIgnoreIndicesEmptyRequest",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsExplicitAllIndicesNull(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsExplicitAllIndicesNull(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsExplicitAllIndicesNull",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsPatternMatchingAllIndicesNonMatchingSingleExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsPatternMatchingAllIndicesNonMatchingSingleExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsPatternMatchingAllIndicesNonMatchingSingleExclusion",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIndexOptionsWildcardExpansion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIndexOptionsWildcardExpansion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIndexOptionsWildcardExpansion",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsExplicitAllIndicesEmpty(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsExplicitAllIndicesEmpty(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsExplicitAllIndicesEmpty",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsExplicitAllIndicesWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsExplicitAllIndicesWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsExplicitAllIndicesWildcard",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsExplicitAllIndicesNormalIndexes(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsExplicitAllIndicesNormalIndexes(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsExplicitAllIndicesNormalIndexes",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testIsPatternMatchingAllIndicesMatchingTrailingWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testIsPatternMatchingAllIndicesMatchingTrailingWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testIsPatternMatchingAllIndicesMatchingTrailingWildcard",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    },
    {
     "id": "ID#testFilterClosedIndicesOnAliases(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "displayName": "testFilterClosedIndicesOnAliases(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
     "methodName": "testFilterClosedIndicesOnAliases",
     "className": "org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195706203
 }
]

[
 "TEST_STARTED",
 "ID#testIndexOptionsAllowUnavailableDisallowEmpty(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexOptionsAllowUnavailableDisallowEmpty(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474195706223,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testConcreteIndicesIgnoreIndicesOneMissingIndex(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcreteIndicesIgnoreIndicesOneMissingIndex(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474195706228,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testConcreteIndicesAllPatternRandom(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcreteIndicesAllPatternRandom(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474195706230,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testIndexOptionsSingleIndexNoExpandWildcards(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexOptionsSingleIndexNoExpandWildcards(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474195706245,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testIsAllIndicesNormalIndexes(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsAllIndicesNormalIndexes(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474195706251,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConcreteIndicesWildcardNoMatch(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcreteIndicesWildcardNoMatch(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474195706253,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIsAllIndicesNull(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsAllIndicesNull(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474195706257,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testIndexOptionsStrict(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexOptionsStrict(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474195706258,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testIsAllIndicesWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsAllIndicesWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474195706264,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIndexOptionsFailClosedIndicesAndAliases(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexOptionsFailClosedIndicesAndAliases(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474195706266,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsPatternMatchingAllIndicesNonMatchingTrailingWildcardAndExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsPatternMatchingAllIndicesNonMatchingTrailingWildcardAndExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474195706268,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConcreteIndicesIgnoreIndicesAllMissing(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcreteIndicesIgnoreIndicesAllMissing(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474195706270,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConcreteIndicesWildcardExpansion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcreteIndicesWildcardExpansion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474195706272,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConcreteIndicesIgnoreIndicesOneMissingIndexOtherFound(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcreteIndicesIgnoreIndicesOneMissingIndexOtherFound(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474195706274,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsExplicitAllIndicesExplicitAll(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsExplicitAllIndicesExplicitAll(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474195706276,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIndexOptionsLenient(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexOptionsLenient(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474195706278,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIsPatternMatchingAllIndicesMatchingTrailingWildcardAndExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsPatternMatchingAllIndicesMatchingTrailingWildcardAndExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474195706281,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDedupConcreteIndices(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDedupConcreteIndices(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474195706283,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsExplicitAllIndicesExplicitAllPlusOther(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsExplicitAllIndicesExplicitAllPlusOther(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474195706285,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFilteringAliases(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilteringAliases(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474195706287,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIsPatternMatchingAllIndicesOnlyWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsPatternMatchingAllIndicesOnlyWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474195706291,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIndexOptionsNoExpandWildcards(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexOptionsNoExpandWildcards(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474195706293,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsPatternMatchingAllIndicesExplicitList(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsPatternMatchingAllIndicesExplicitList(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474195706295,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsAllIndicesExplicitAll(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsAllIndicesExplicitAll(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474195706297,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIndexOptionsEmptyCluster(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexOptionsEmptyCluster(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474195706299,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsPatternMatchingAllIndicesMatchingSingleExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsPatternMatchingAllIndicesMatchingSingleExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474195706302,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testIsPatternMatchingAllIndicesNonMatchingTrailingWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsPatternMatchingAllIndicesNonMatchingTrailingWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474195706303,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsAllIndicesEmpty(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsAllIndicesEmpty(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474195706305,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsAllIndicesExplicitAllPlusOther(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsAllIndicesExplicitAllPlusOther(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474195706307,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConcreteIndicesIgnoreIndicesEmptyRequest(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcreteIndicesIgnoreIndicesEmptyRequest(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474195706309,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsExplicitAllIndicesNull(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsExplicitAllIndicesNull(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474195706311,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsPatternMatchingAllIndicesNonMatchingSingleExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsPatternMatchingAllIndicesNonMatchingSingleExclusion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474195706313,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testIndexOptionsWildcardExpansion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexOptionsWildcardExpansion(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474195706315,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsExplicitAllIndicesEmpty(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsExplicitAllIndicesEmpty(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474195706317,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsExplicitAllIndicesWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsExplicitAllIndicesWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474195706319,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsExplicitAllIndicesNormalIndexes(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsExplicitAllIndicesNormalIndexes(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474195706321,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsPatternMatchingAllIndicesMatchingTrailingWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsPatternMatchingAllIndicesMatchingTrailingWildcard(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474195706323,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFilterClosedIndicesOnAliases(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterClosedIndicesOnAliases(org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests)",
  "startTimestamp": 1474195706326,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.IndexNameExpressionResolverTests",
  "startTimestamp": 1474195706203,
  "executionTime": 127
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.MetaDataDeleteIndexServiceTests",
   "displayName": "org.elasticsearch.cluster.metadata.MetaDataDeleteIndexServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.MetaDataDeleteIndexServiceTests",
   "children": [
    {
     "id": "ID#testDeleteMissing(org.elasticsearch.cluster.metadata.MetaDataDeleteIndexServiceTests)",
     "displayName": "testDeleteMissing(org.elasticsearch.cluster.metadata.MetaDataDeleteIndexServiceTests)",
     "methodName": "testDeleteMissing",
     "className": "org.elasticsearch.cluster.metadata.MetaDataDeleteIndexServiceTests",
     "children": []
    },
    {
     "id": "ID#testDeleteUnassigned(org.elasticsearch.cluster.metadata.MetaDataDeleteIndexServiceTests)",
     "displayName": "testDeleteUnassigned(org.elasticsearch.cluster.metadata.MetaDataDeleteIndexServiceTests)",
     "methodName": "testDeleteUnassigned",
     "className": "org.elasticsearch.cluster.metadata.MetaDataDeleteIndexServiceTests",
     "children": []
    },
    {
     "id": "ID#testDeleteSnapshotting(org.elasticsearch.cluster.metadata.MetaDataDeleteIndexServiceTests)",
     "displayName": "testDeleteSnapshotting(org.elasticsearch.cluster.metadata.MetaDataDeleteIndexServiceTests)",
     "methodName": "testDeleteSnapshotting",
     "className": "org.elasticsearch.cluster.metadata.MetaDataDeleteIndexServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195706483
 }
]

[
 "TEST_STARTED",
 "ID#testDeleteMissing(org.elasticsearch.cluster.metadata.MetaDataDeleteIndexServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeleteMissing(org.elasticsearch.cluster.metadata.MetaDataDeleteIndexServiceTests)",
  "startTimestamp": 1474195706509,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testDeleteUnassigned(org.elasticsearch.cluster.metadata.MetaDataDeleteIndexServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeleteUnassigned(org.elasticsearch.cluster.metadata.MetaDataDeleteIndexServiceTests)",
  "startTimestamp": 1474195706523,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDeleteSnapshotting(org.elasticsearch.cluster.metadata.MetaDataDeleteIndexServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeleteSnapshotting(org.elasticsearch.cluster.metadata.MetaDataDeleteIndexServiceTests)",
  "startTimestamp": 1474195706526,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.MetaDataDeleteIndexServiceTests",
  "startTimestamp": 1474195706483,
  "executionTime": 51
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests",
   "displayName": "org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests",
   "children": [
    {
     "id": "ID#testArchiveBrokenIndexSettings(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)",
     "displayName": "testArchiveBrokenIndexSettings(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)",
     "methodName": "testArchiveBrokenIndexSettings",
     "className": "org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests",
     "children": []
    },
    {
     "id": "ID#testUpgrade(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)",
     "displayName": "testUpgrade(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)",
     "methodName": "testUpgrade",
     "className": "org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests",
     "children": []
    },
    {
     "id": "ID#testIsUpgraded(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)",
     "displayName": "testIsUpgraded(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)",
     "methodName": "testIsUpgraded",
     "className": "org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195706753
 }
]

[
 "TEST_STARTED",
 "ID#testArchiveBrokenIndexSettings(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:48:26,773][WARN ][org.elasticsearch.common.settings] [node_s_0] found unknown setting: index.refresh.interval value: -1 - archiving%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArchiveBrokenIndexSettings(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)",
  "startTimestamp": 1474195706767,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testUpgrade(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgrade(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)",
  "startTimestamp": 1474195706773,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testIsUpgraded(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsUpgraded(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)",
  "startTimestamp": 1474195706780,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests",
  "startTimestamp": 1474195706753,
  "executionTime": 31
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.MetaDataTests",
   "displayName": "org.elasticsearch.cluster.metadata.MetaDataTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.MetaDataTests",
   "children": [
    {
     "id": "ID#testMetaDataGlobalStateChangesOnIndexDeletions(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "displayName": "testMetaDataGlobalStateChangesOnIndexDeletions(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "methodName": "testMetaDataGlobalStateChangesOnIndexDeletions",
     "className": "org.elasticsearch.cluster.metadata.MetaDataTests",
     "children": []
    },
    {
     "id": "ID#testSerializationWithIndexGraveyard(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "displayName": "testSerializationWithIndexGraveyard(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "methodName": "testSerializationWithIndexGraveyard",
     "className": "org.elasticsearch.cluster.metadata.MetaDataTests",
     "children": []
    },
    {
     "id": "ID#testIndexAndAliasWithSameName(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "displayName": "testIndexAndAliasWithSameName(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "methodName": "testIndexAndAliasWithSameName",
     "className": "org.elasticsearch.cluster.metadata.MetaDataTests",
     "children": []
    },
    {
     "id": "ID#testUnknownFieldIndexMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "displayName": "testUnknownFieldIndexMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "methodName": "testUnknownFieldIndexMetaData",
     "className": "org.elasticsearch.cluster.metadata.MetaDataTests",
     "children": []
    },
    {
     "id": "ID#testUnknownFieldClusterMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "displayName": "testUnknownFieldClusterMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "methodName": "testUnknownFieldClusterMetaData",
     "className": "org.elasticsearch.cluster.metadata.MetaDataTests",
     "children": []
    },
    {
     "id": "ID#testXContentWithIndexGraveyard(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "displayName": "testXContentWithIndexGraveyard(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "methodName": "testXContentWithIndexGraveyard",
     "className": "org.elasticsearch.cluster.metadata.MetaDataTests",
     "children": []
    },
    {
     "id": "ID#testResolveIndexRouting(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "displayName": "testResolveIndexRouting(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "methodName": "testResolveIndexRouting",
     "className": "org.elasticsearch.cluster.metadata.MetaDataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195707055
 }
]

[
 "TEST_STARTED",
 "ID#testMetaDataGlobalStateChangesOnIndexDeletions(org.elasticsearch.cluster.metadata.MetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMetaDataGlobalStateChangesOnIndexDeletions(org.elasticsearch.cluster.metadata.MetaDataTests)",
  "startTimestamp": 1474195707129,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerializationWithIndexGraveyard(org.elasticsearch.cluster.metadata.MetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerializationWithIndexGraveyard(org.elasticsearch.cluster.metadata.MetaDataTests)",
  "startTimestamp": 1474195707131,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIndexAndAliasWithSameName(org.elasticsearch.cluster.metadata.MetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexAndAliasWithSameName(org.elasticsearch.cluster.metadata.MetaDataTests)",
  "startTimestamp": 1474195707133,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownFieldIndexMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownFieldIndexMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)",
  "startTimestamp": 1474195707135,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownFieldClusterMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownFieldClusterMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)",
  "startTimestamp": 1474195707137,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testXContentWithIndexGraveyard(org.elasticsearch.cluster.metadata.MetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testXContentWithIndexGraveyard(org.elasticsearch.cluster.metadata.MetaDataTests)",
  "startTimestamp": 1474195707139,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testResolveIndexRouting(org.elasticsearch.cluster.metadata.MetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResolveIndexRouting(org.elasticsearch.cluster.metadata.MetaDataTests)",
  "startTimestamp": 1474195707141,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.MetaDataTests",
  "startTimestamp": 1474195707055,
  "executionTime": 91
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests",
   "children": [
    {
     "id": "ID#testPreferPrimaryAllocationOverReplicas(org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests)",
     "displayName": "testPreferPrimaryAllocationOverReplicas(org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests)",
     "methodName": "testPreferPrimaryAllocationOverReplicas",
     "className": "org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195707332
 }
]

[
 "TEST_STARTED",
 "ID#testPreferPrimaryAllocationOverReplicas(org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:27,356][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] create an allocation with 1 initial recoveries%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:27,361][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] create several indices with no replicas, and wait till all are allocated%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:27,361][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding two nodes and performing rerouting till all are allocated%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:27,374][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][8], [test1][9]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:27,374][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] increasing the number of replicas to 1, and perform a reroute (to get the replicas allocation going)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:27,375][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] 2 replicas should be initializing now for the existing indices (we throttle to 1)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:27,376][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] create a new index%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:27,376][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] reroute, verify that primaries for the new index primary shards are allocated%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreferPrimaryAllocationOverReplicas(org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests)",
  "startTimestamp": 1474195707354,
  "executionTime": 23
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests",
  "startTimestamp": 1474195707332,
  "executionTime": 51
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.PrimaryElectionRoutingTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.PrimaryElectionRoutingTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.PrimaryElectionRoutingTests",
   "children": [
    {
     "id": "ID#testRemovingInitializingReplicasIfPrimariesFails(org.elasticsearch.cluster.routing.allocation.PrimaryElectionRoutingTests)",
     "displayName": "testRemovingInitializingReplicasIfPrimariesFails(org.elasticsearch.cluster.routing.allocation.PrimaryElectionRoutingTests)",
     "methodName": "testRemovingInitializingReplicasIfPrimariesFails",
     "className": "org.elasticsearch.cluster.routing.allocation.PrimaryElectionRoutingTests",
     "children": []
    },
    {
     "id": "ID#testBackupElectionToPrimaryWhenPrimaryCanBeAllocatedToAnotherNode(org.elasticsearch.cluster.routing.allocation.PrimaryElectionRoutingTests)",
     "displayName": "testBackupElectionToPrimaryWhenPrimaryCanBeAllocatedToAnotherNode(org.elasticsearch.cluster.routing.allocation.PrimaryElectionRoutingTests)",
     "methodName": "testBackupElectionToPrimaryWhenPrimaryCanBeAllocatedToAnotherNode",
     "className": "org.elasticsearch.cluster.routing.allocation.PrimaryElectionRoutingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195707645
 }
]

[
 "TEST_STARTED",
 "ID#testRemovingInitializingReplicasIfPrimariesFails(org.elasticsearch.cluster.routing.allocation.PrimaryElectionRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:27,674][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:27,676][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding two nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:27,676][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the primary shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:27,677][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> fail node with primary%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:27,678][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemovingInitializingReplicasIfPrimariesFails(org.elasticsearch.cluster.routing.allocation.PrimaryElectionRoutingTests)",
  "startTimestamp": 1474195707667,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testBackupElectionToPrimaryWhenPrimaryCanBeAllocatedToAnotherNode(org.elasticsearch.cluster.routing.allocation.PrimaryElectionRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:27,684][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:27,684][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding two nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:27,685][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the primary shard (on node1)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:27,685][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the backup shard (on node2)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:27,686][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:27,686][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding third node and reroute and kill first node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:27,686][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBackupElectionToPrimaryWhenPrimaryCanBeAllocatedToAnotherNode(org.elasticsearch.cluster.routing.allocation.PrimaryElectionRoutingTests)",
  "startTimestamp": 1474195707678,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.PrimaryElectionRoutingTests",
  "startTimestamp": 1474195707645,
  "executionTime": 44
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.StartedShardsRoutingTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.StartedShardsRoutingTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.StartedShardsRoutingTests",
   "children": [
    {
     "id": "ID#testStartedShardsMatching(org.elasticsearch.cluster.routing.allocation.StartedShardsRoutingTests)",
     "displayName": "testStartedShardsMatching(org.elasticsearch.cluster.routing.allocation.StartedShardsRoutingTests)",
     "methodName": "testStartedShardsMatching",
     "className": "org.elasticsearch.cluster.routing.allocation.StartedShardsRoutingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195707930
 }
]

[
 "TEST_STARTED",
 "ID#testStartedShardsMatching(org.elasticsearch.cluster.routing.allocation.StartedShardsRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:27,963][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> building initial cluster state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:27,964][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> test starting of shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:27,965][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:48:27,965][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> testing starting of relocating shards%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStartedShardsMatching(org.elasticsearch.cluster.routing.allocation.StartedShardsRoutingTests)",
  "startTimestamp": 1474195707957,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.StartedShardsRoutingTests",
  "startTimestamp": 1474195707930,
  "executionTime": 39
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests",
   "children": [
    {
     "id": "ID#testPrimaryRecoveryThrottling(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)",
     "displayName": "testPrimaryRecoveryThrottling(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)",
     "methodName": "testPrimaryRecoveryThrottling",
     "className": "org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests",
     "children": []
    },
    {
     "id": "ID#testThrottleIncomingAndOutgoing(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)",
     "displayName": "testThrottleIncomingAndOutgoing(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)",
     "methodName": "testThrottleIncomingAndOutgoing",
     "className": "org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests",
     "children": []
    },
    {
     "id": "ID#testReplicaAndPrimaryRecoveryThrottling(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)",
     "displayName": "testReplicaAndPrimaryRecoveryThrottling(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)",
     "methodName": "testReplicaAndPrimaryRecoveryThrottling",
     "className": "org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests",
     "children": []
    },
    {
     "id": "ID#testOutgoingThrottlesAllocation(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)",
     "displayName": "testOutgoingThrottlesAllocation(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)",
     "methodName": "testOutgoingThrottlesAllocation",
     "className": "org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195708270
 }
]

[
 "TEST_STARTED",
 "ID#testPrimaryRecoveryThrottling(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:28,334][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:28,335][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start one node, do reroute, only 3 should initialize%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:28,337][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start initializing, another 3 should initialize%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:28,354][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start initializing, another 3 should initialize%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:28,354][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start initializing, another 1 should initialize%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:28,358][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start initializing, all primaries should be started%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrimaryRecoveryThrottling(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)",
  "startTimestamp": 1474195708329,
  "executionTime": 32
 }
]

[
 "TEST_STARTED",
 "ID#testThrottleIncomingAndOutgoing(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:28,372][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:28,373][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start one node, do reroute, only 5 should initialize%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:28,382][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start initializing, all primaries should be started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:28,382][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][7], [test][6], [test][8], [test][5]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:28,395][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start another 2 nodes, 5 shards should be relocating - at most 5 are allowed per node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:28,400][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the relocating shards, one more shard should relocate away from node1%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThrottleIncomingAndOutgoing(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)",
  "startTimestamp": 1474195708362,
  "executionTime": 38
 }
]

[
 "TEST_STARTED",
 "ID#testReplicaAndPrimaryRecoveryThrottling(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:28,408][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:28,412][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start one node, do reroute, only 3 should initialize%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:28,412][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start initializing, another 2 should initialize%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:28,413][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start initializing, all primaries should be started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:28,413][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start another node, replicas should start being allocated%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:28,414][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start initializing replicas%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:28,414][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start initializing replicas, all should be started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:28,415][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][4], [test][3]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplicaAndPrimaryRecoveryThrottling(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)",
  "startTimestamp": 1474195708401,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testOutgoingThrottlesAllocation(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:28,421][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:28,422][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start one node, do reroute, only 1 should initialize%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:28,422][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:28,437][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start one more node, first non-primary should start being allocated%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:28,437][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start initializing non-primary%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:28,437][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start one more node, initializing second non-primary%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:28,438][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start one more node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:28,438][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] move started non-primary to new node%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOutgoingThrottlesAllocation(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)",
  "startTimestamp": 1474195708415,
  "executionTime": 23
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests",
  "startTimestamp": 1474195708270,
  "executionTime": 179
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.breaker.MemoryCircuitBreakerTests",
   "displayName": "org.elasticsearch.common.breaker.MemoryCircuitBreakerTests",
   "methodName": null,
   "className": "org.elasticsearch.common.breaker.MemoryCircuitBreakerTests",
   "children": [
    {
     "id": "ID#testThreadedUpdatesToBreaker(org.elasticsearch.common.breaker.MemoryCircuitBreakerTests)",
     "displayName": "testThreadedUpdatesToBreaker(org.elasticsearch.common.breaker.MemoryCircuitBreakerTests)",
     "methodName": "testThreadedUpdatesToBreaker",
     "className": "org.elasticsearch.common.breaker.MemoryCircuitBreakerTests",
     "children": []
    },
    {
     "id": "ID#testThreadedUpdatesToChildBreakerWithParentLimit(org.elasticsearch.common.breaker.MemoryCircuitBreakerTests)",
     "displayName": "testThreadedUpdatesToChildBreakerWithParentLimit(org.elasticsearch.common.breaker.MemoryCircuitBreakerTests)",
     "methodName": "testThreadedUpdatesToChildBreakerWithParentLimit",
     "className": "org.elasticsearch.common.breaker.MemoryCircuitBreakerTests",
     "children": []
    },
    {
     "id": "ID#testThreadedUpdatesToChildBreaker(org.elasticsearch.common.breaker.MemoryCircuitBreakerTests)",
     "displayName": "testThreadedUpdatesToChildBreaker(org.elasticsearch.common.breaker.MemoryCircuitBreakerTests)",
     "methodName": "testThreadedUpdatesToChildBreaker",
     "className": "org.elasticsearch.common.breaker.MemoryCircuitBreakerTests",
     "children": []
    },
    {
     "id": "ID#testConstantFactor(org.elasticsearch.common.breaker.MemoryCircuitBreakerTests)",
     "displayName": "testConstantFactor(org.elasticsearch.common.breaker.MemoryCircuitBreakerTests)",
     "methodName": "testConstantFactor",
     "className": "org.elasticsearch.common.breaker.MemoryCircuitBreakerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195708584
 }
]

[
 "TEST_STARTED",
 "ID#testThreadedUpdatesToBreaker(org.elasticsearch.common.breaker.MemoryCircuitBreakerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:28,707][WARN ][org.elasticsearch.common.breaker] New used memory 10572 [10.3kb] from field [test] would be larger than configured breaker: 10571 [10.3kb], breaking%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThreadedUpdatesToBreaker(org.elasticsearch.common.breaker.MemoryCircuitBreakerTests)",
  "startTimestamp": 1474195708625,
  "executionTime": 82
 }
]

[
 "TEST_STARTED",
 "ID#testThreadedUpdatesToChildBreakerWithParentLimit(org.elasticsearch.common.breaker.MemoryCircuitBreakerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:28,713][INFO ][org.elasticsearch.common.breaker] --> NUM_THREADS: [9], BYTES_PER_THREAD: [1848], TOTAL_BYTES: [16632], PARENT_LIMIT: [16630], CHILD_LIMIT: [16640]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:28,713][INFO ][org.elasticsearch.common.breaker] --> starting threads...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:28,823][INFO ][org.elasticsearch.common.breaker] --> parent tripped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:28,823][INFO ][org.elasticsearch.common.breaker] --> parent tripped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:28,823][INFO ][org.elasticsearch.common.breaker] --> child breaker: used: 16630, limit: 16640%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:28,823][INFO ][org.elasticsearch.common.breaker] --> parent tripped: 2, total trip count: 2 (expecting 1-2 for each)%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThreadedUpdatesToChildBreakerWithParentLimit(org.elasticsearch.common.breaker.MemoryCircuitBreakerTests)",
  "startTimestamp": 1474195708708,
  "executionTime": 116
 }
]

[
 "TEST_STARTED",
 "ID#testThreadedUpdatesToChildBreaker(org.elasticsearch.common.breaker.MemoryCircuitBreakerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:28,838][WARN ][org.elasticsearch.common.breaker] [request] New used memory 3360 [3.2kb] for data of [test] would be larger than configured breaker: 3359 [3.2kb], breaking%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThreadedUpdatesToChildBreaker(org.elasticsearch.common.breaker.MemoryCircuitBreakerTests)",
  "startTimestamp": 1474195708824,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testConstantFactor(org.elasticsearch.common.breaker.MemoryCircuitBreakerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:28,840][WARN ][org.elasticsearch.common.breaker] New used memory 16 [16b] from field [myfield] would be larger than configured breaker: 15 [15b], breaking%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:28,840][WARN ][org.elasticsearch.common.breaker] New used memory 19 [19b] from field [myfield] would be larger than configured breaker: 15 [15b], breaking%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConstantFactor(org.elasticsearch.common.breaker.MemoryCircuitBreakerTests)",
  "startTimestamp": 1474195708839,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.breaker.MemoryCircuitBreakerTests",
  "startTimestamp": 1474195708584,
  "executionTime": 709
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
   "displayName": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
   "methodName": null,
   "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
   "children": [
    {
     "id": "ID#testToBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testToBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testToBytesRef",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testLength(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testLength(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testLength",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testSliceEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testSliceEquals",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testCompareTo(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testCompareTo(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testCompareTo",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testInputStreamSkip(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testInputStreamSkip(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testInputStreamSkip",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testGet(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testGet(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testGet",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceToBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testSliceToBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testSliceToBytesRef",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testCopyBytesRefSharesBytes(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testCopyBytesRefSharesBytes(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testCopyBytesRefSharesBytes",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testArrayOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testArrayOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testArrayOffset",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testStreamInputBulkReadWithOffset",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceCopyBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testSliceCopyBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testSliceCopyBytesRef",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testHashCode(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testHashCode(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testHashCode",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testToBytes(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testToBytes(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testToBytes",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceWriteToOutputStream(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testSliceWriteToOutputStream(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testSliceWriteToOutputStream",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testStreamInput(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testStreamInput(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testStreamInput",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testToBytesRefMaterializedPages(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testToBytesRefMaterializedPages(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testToBytesRefMaterializedPages",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testStreamInputMarkAndReset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testStreamInputMarkAndReset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testStreamInputMarkAndReset",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceArrayOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testSliceArrayOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testSliceArrayOffset",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testCompositeBuffer(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testCompositeBuffer(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testCompositeBuffer",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSlice(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testSlice(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testSlice",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testEmptyToBytesRefIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testEmptyToBytesRefIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testEmptyToBytesRefIterator",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testRandomReads(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testRandomReads(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testRandomReads",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testToBytesRefSharedPage(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testToBytesRefSharedPage(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testToBytesRefSharedPage",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testSliceIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testSliceIterator",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testIteratorRandom(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testIteratorRandom(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testIteratorRandom",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testIterator",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testBasicEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testBasicEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testBasicEquals",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testToUtf8(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testToUtf8(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testToUtf8",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testWriteToOutputStream(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testWriteToOutputStream(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testWriteToOutputStream",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceStreamInput(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testSliceStreamInput(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testSliceStreamInput",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195709503
 }
]

[
 "TEST_STARTED",
 "ID#testToBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474195709544,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testLength(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLength(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474195709557,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testSliceEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474195709578,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCompareTo(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompareTo(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474195709581,
  "executionTime": 295
 }
]

[
 "TEST_STARTED",
 "ID#testInputStreamSkip(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInputStreamSkip(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474195709876,
  "executionTime": 50
 }
]

[
 "TEST_STARTED",
 "ID#testGet(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGet(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474195709926,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testSliceToBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceToBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474195709933,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testCopyBytesRefSharesBytes(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyBytesRefSharesBytes(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474195709934,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testArrayOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArrayOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474195709938,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474195709942,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testSliceCopyBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceCopyBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474195709953,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testHashCode(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHashCode(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474195709968,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testToBytes(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytes(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474195709974,
  "executionTime": 41
 }
]

[
 "TEST_STARTED",
 "ID#testSliceWriteToOutputStream(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceWriteToOutputStream(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474195710015,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testStreamInput(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamInput(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474195710018,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testToBytesRefMaterializedPages(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytesRefMaterializedPages(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474195710039,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testStreamInputMarkAndReset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamInputMarkAndReset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474195710046,
  "executionTime": 143
 }
]

[
 "TEST_STARTED",
 "ID#testSliceArrayOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceArrayOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474195710190,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCompositeBuffer(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompositeBuffer(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474195710194,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testSlice(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSlice(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474195710209,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyToBytesRefIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyToBytesRefIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474195710219,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRandomReads(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomReads(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474195710222,
  "executionTime": 50
 }
]

[
 "TEST_STARTED",
 "ID#testToBytesRefSharedPage(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytesRefSharedPage(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474195710273,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSliceIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474195710275,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474195710282,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testIteratorRandom(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIteratorRandom(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474195710287,
  "executionTime": 39
 }
]

[
 "TEST_STARTED",
 "ID#testIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474195710326,
  "executionTime": 62
 }
]

[
 "TEST_STARTED",
 "ID#testBasicEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474195710388,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToUtf8(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToUtf8(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474195710391,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWriteToOutputStream(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteToOutputStream(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474195710393,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testSliceStreamInput(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceStreamInput(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1474195710406,
  "executionTime": 80
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
  "startTimestamp": 1474195709503,
  "executionTime": 987
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.cache.CacheTests",
   "displayName": "org.elasticsearch.common.cache.CacheTests",
   "methodName": null,
   "className": "org.elasticsearch.common.cache.CacheTests",
   "children": [
    {
     "id": "ID#testNotificationOnInvalidate(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testNotificationOnInvalidate(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testNotificationOnInvalidate",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testTorture(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testTorture(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testTorture",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testComputeIfAbsentCallsOnce(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testComputeIfAbsentCallsOnce(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testComputeIfAbsentCallsOnce",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testWeight(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testWeight(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testWeight",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testComputeIfAbsentThrowsExceptionIfLoaderReturnsANullValue(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testComputeIfAbsentThrowsExceptionIfLoaderReturnsANullValue(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testComputeIfAbsentThrowsExceptionIfLoaderReturnsANullValue",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testInvalidate(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testInvalidate(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testInvalidate",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testComputeIfAbsentLoadsSuccessfully(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testComputeIfAbsentLoadsSuccessfully(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testComputeIfAbsentLoadsSuccessfully",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testCacheStats(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testCacheStats(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testCacheStats",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testCacheEvictions(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testCacheEvictions(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testCacheEvictions",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testNotificationOnReplace(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testNotificationOnReplace(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testNotificationOnReplace",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testCachePollution(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testCachePollution(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testCachePollution",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testExpirationAfterAccess(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testExpirationAfterAccess(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testExpirationAfterAccess",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testWeigher(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testWeigher(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testWeigher",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testPromotion(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testPromotion(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testPromotion",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testInvalidateAll(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testInvalidateAll(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testInvalidateAll",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testCount(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testCount(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testCount",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testDependentKeyDeadlock(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testDependentKeyDeadlock(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testDependentKeyDeadlock",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testExpirationAfterWrite(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testExpirationAfterWrite(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testExpirationAfterWrite",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testNotificationOnInvalidateAll(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testNotificationOnInvalidateAll(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testNotificationOnInvalidateAll",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testReplaceRecomputesSize(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testReplaceRecomputesSize(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testReplaceRecomputesSize",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195710555
 }
]

[
 "TEST_STARTED",
 "ID#testNotificationOnInvalidate(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotificationOnInvalidate(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474195710573,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testTorture(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTorture(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474195710593,
  "executionTime": 172
 }
]

[
 "TEST_STARTED",
 "ID#testComputeIfAbsentCallsOnce(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testComputeIfAbsentCallsOnce(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474195710765,
  "executionTime": 219
 }
]

[
 "TEST_STARTED",
 "ID#testWeight(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWeight(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474195710985,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testComputeIfAbsentThrowsExceptionIfLoaderReturnsANullValue(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testComputeIfAbsentThrowsExceptionIfLoaderReturnsANullValue(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474195710995,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidate(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidate(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474195710998,
  "executionTime": 50
 }
]

[
 "TEST_STARTED",
 "ID#testComputeIfAbsentLoadsSuccessfully(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testComputeIfAbsentLoadsSuccessfully(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474195711048,
  "executionTime": 52
 }
]

[
 "TEST_STARTED",
 "ID#testCacheStats(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCacheStats(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474195711101,
  "executionTime": 66
 }
]

[
 "TEST_STARTED",
 "ID#testCacheEvictions(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCacheEvictions(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474195711167,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testNotificationOnReplace(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotificationOnReplace(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474195711188,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testCachePollution(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCachePollution(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474195711204,
  "executionTime": 413
 }
]

[
 "TEST_STARTED",
 "ID#testExpirationAfterAccess(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExpirationAfterAccess(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474195711617,
  "executionTime": 39
 }
]

[
 "TEST_STARTED",
 "ID#testWeigher(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWeigher(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474195711656,
  "executionTime": 30
 }
]

[
 "TEST_STARTED",
 "ID#testPromotion(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPromotion(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474195711686,
  "executionTime": 38
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidateAll(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidateAll(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474195711724,
  "executionTime": 47
 }
]

[
 "TEST_STARTED",
 "ID#testCount(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCount(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474195711771,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testDependentKeyDeadlock(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDependentKeyDeadlock(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474195711790,
  "executionTime": 987
 }
]

[
 "TEST_STARTED",
 "ID#testExpirationAfterWrite(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExpirationAfterWrite(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474195712777,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testNotificationOnInvalidateAll(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotificationOnInvalidateAll(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474195712802,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testReplaceRecomputesSize(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplaceRecomputesSize(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474195712828,
  "executionTime": 11
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.cache.CacheTests",
  "startTimestamp": 1474195710555,
  "executionTime": 2288
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests",
   "displayName": "org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests",
   "children": [
    {
     "id": "ID#testRandomOverflow(org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests)",
     "displayName": "testRandomOverflow(org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests)",
     "methodName": "testRandomOverflow",
     "className": "org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests",
     "children": []
    },
    {
     "id": "ID#testSeekOverflow(org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests)",
     "displayName": "testSeekOverflow(org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests)",
     "methodName": "testSeekOverflow",
     "className": "org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests",
     "children": []
    },
    {
     "id": "ID#testRandomReads(org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests)",
     "displayName": "testRandomReads(org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests)",
     "methodName": "testRandomReads",
     "className": "org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195712924
 }
]

[
 "TEST_STARTED",
 "ID#testRandomOverflow(org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomOverflow(org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests)",
  "startTimestamp": 1474195712967,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testSeekOverflow(org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSeekOverflow(org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests)",
  "startTimestamp": 1474195712979,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testRandomReads(org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomReads(org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests)",
  "startTimestamp": 1474195712992,
  "executionTime": 50
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests",
  "startTimestamp": 1474195712924,
  "executionTime": 121
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.network.CidrsTests",
   "displayName": "org.elasticsearch.common.network.CidrsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.network.CidrsTests",
   "children": [
    {
     "id": "ID#testSplittingDot(org.elasticsearch.common.network.CidrsTests)",
     "displayName": "testSplittingDot(org.elasticsearch.common.network.CidrsTests)",
     "methodName": "testSplittingDot",
     "className": "org.elasticsearch.common.network.CidrsTests",
     "children": []
    },
    {
     "id": "ID#testValidSpecificCases(org.elasticsearch.common.network.CidrsTests)",
     "displayName": "testValidSpecificCases(org.elasticsearch.common.network.CidrsTests)",
     "methodName": "testValidSpecificCases",
     "className": "org.elasticsearch.common.network.CidrsTests",
     "children": []
    },
    {
     "id": "ID#testSplittingSlash(org.elasticsearch.common.network.CidrsTests)",
     "displayName": "testSplittingSlash(org.elasticsearch.common.network.CidrsTests)",
     "methodName": "testSplittingSlash",
     "className": "org.elasticsearch.common.network.CidrsTests",
     "children": []
    },
    {
     "id": "ID#testInvalidSpecificNetworkMaskCases(org.elasticsearch.common.network.CidrsTests)",
     "displayName": "testInvalidSpecificNetworkMaskCases(org.elasticsearch.common.network.CidrsTests)",
     "methodName": "testInvalidSpecificNetworkMaskCases",
     "className": "org.elasticsearch.common.network.CidrsTests",
     "children": []
    },
    {
     "id": "ID#testInvalidSpecificOctetCases(org.elasticsearch.common.network.CidrsTests)",
     "displayName": "testInvalidSpecificOctetCases(org.elasticsearch.common.network.CidrsTests)",
     "methodName": "testInvalidSpecificOctetCases",
     "className": "org.elasticsearch.common.network.CidrsTests",
     "children": []
    },
    {
     "id": "ID#testNullCidr(org.elasticsearch.common.network.CidrsTests)",
     "displayName": "testNullCidr(org.elasticsearch.common.network.CidrsTests)",
     "methodName": "testNullCidr",
     "className": "org.elasticsearch.common.network.CidrsTests",
     "children": []
    },
    {
     "id": "ID#testInvalidCombinations(org.elasticsearch.common.network.CidrsTests)",
     "displayName": "testInvalidCombinations(org.elasticsearch.common.network.CidrsTests)",
     "methodName": "testInvalidCombinations",
     "className": "org.elasticsearch.common.network.CidrsTests",
     "children": []
    },
    {
     "id": "ID#testValidCombinations(org.elasticsearch.common.network.CidrsTests)",
     "displayName": "testValidCombinations(org.elasticsearch.common.network.CidrsTests)",
     "methodName": "testValidCombinations",
     "className": "org.elasticsearch.common.network.CidrsTests",
     "children": []
    },
    {
     "id": "ID#testRandomValidCombinations(org.elasticsearch.common.network.CidrsTests)",
     "displayName": "testRandomValidCombinations(org.elasticsearch.common.network.CidrsTests)",
     "methodName": "testRandomValidCombinations",
     "className": "org.elasticsearch.common.network.CidrsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195713199
 }
]

[
 "TEST_STARTED",
 "ID#testSplittingDot(org.elasticsearch.common.network.CidrsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSplittingDot(org.elasticsearch.common.network.CidrsTests)",
  "startTimestamp": 1474195713215,
  "executionTime": 49
 }
]

[
 "TEST_STARTED",
 "ID#testValidSpecificCases(org.elasticsearch.common.network.CidrsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidSpecificCases(org.elasticsearch.common.network.CidrsTests)",
  "startTimestamp": 1474195713264,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSplittingSlash(org.elasticsearch.common.network.CidrsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSplittingSlash(org.elasticsearch.common.network.CidrsTests)",
  "startTimestamp": 1474195713266,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidSpecificNetworkMaskCases(org.elasticsearch.common.network.CidrsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidSpecificNetworkMaskCases(org.elasticsearch.common.network.CidrsTests)",
  "startTimestamp": 1474195713268,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidSpecificOctetCases(org.elasticsearch.common.network.CidrsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidSpecificOctetCases(org.elasticsearch.common.network.CidrsTests)",
  "startTimestamp": 1474195713270,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNullCidr(org.elasticsearch.common.network.CidrsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullCidr(org.elasticsearch.common.network.CidrsTests)",
  "startTimestamp": 1474195713273,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidCombinations(org.elasticsearch.common.network.CidrsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidCombinations(org.elasticsearch.common.network.CidrsTests)",
  "startTimestamp": 1474195713279,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testValidCombinations(org.elasticsearch.common.network.CidrsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidCombinations(org.elasticsearch.common.network.CidrsTests)",
  "startTimestamp": 1474195713282,
  "executionTime": 1983
 }
]

[
 "TEST_STARTED",
 "ID#testRandomValidCombinations(org.elasticsearch.common.network.CidrsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomValidCombinations(org.elasticsearch.common.network.CidrsTests)",
  "startTimestamp": 1474195715265,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.network.CidrsTests",
  "startTimestamp": 1474195713199,
  "executionTime": 2071
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.unit.TimeValueTests",
   "displayName": "org.elasticsearch.common.unit.TimeValueTests",
   "methodName": null,
   "className": "org.elasticsearch.common.unit.TimeValueTests",
   "children": [
    {
     "id": "ID#testParseTimeValue(org.elasticsearch.common.unit.TimeValueTests)",
     "displayName": "testParseTimeValue(org.elasticsearch.common.unit.TimeValueTests)",
     "methodName": "testParseTimeValue",
     "className": "org.elasticsearch.common.unit.TimeValueTests",
     "children": []
    },
    {
     "id": "ID#testRoundTrip(org.elasticsearch.common.unit.TimeValueTests)",
     "displayName": "testRoundTrip(org.elasticsearch.common.unit.TimeValueTests)",
     "methodName": "testRoundTrip",
     "className": "org.elasticsearch.common.unit.TimeValueTests",
     "children": []
    },
    {
     "id": "ID#testFailOnUnknownUnits(org.elasticsearch.common.unit.TimeValueTests)",
     "displayName": "testFailOnUnknownUnits(org.elasticsearch.common.unit.TimeValueTests)",
     "methodName": "testFailOnUnknownUnits",
     "className": "org.elasticsearch.common.unit.TimeValueTests",
     "children": []
    },
    {
     "id": "ID#testNoDotsAllowed(org.elasticsearch.common.unit.TimeValueTests)",
     "displayName": "testNoDotsAllowed(org.elasticsearch.common.unit.TimeValueTests)",
     "methodName": "testNoDotsAllowed",
     "className": "org.elasticsearch.common.unit.TimeValueTests",
     "children": []
    },
    {
     "id": "ID#testToString(org.elasticsearch.common.unit.TimeValueTests)",
     "displayName": "testToString(org.elasticsearch.common.unit.TimeValueTests)",
     "methodName": "testToString",
     "className": "org.elasticsearch.common.unit.TimeValueTests",
     "children": []
    },
    {
     "id": "ID#testMinusOne(org.elasticsearch.common.unit.TimeValueTests)",
     "displayName": "testMinusOne(org.elasticsearch.common.unit.TimeValueTests)",
     "methodName": "testMinusOne",
     "className": "org.elasticsearch.common.unit.TimeValueTests",
     "children": []
    },
    {
     "id": "ID#testToStringRep(org.elasticsearch.common.unit.TimeValueTests)",
     "displayName": "testToStringRep(org.elasticsearch.common.unit.TimeValueTests)",
     "methodName": "testToStringRep",
     "className": "org.elasticsearch.common.unit.TimeValueTests",
     "children": []
    },
    {
     "id": "ID#testFractionalTimeValues(org.elasticsearch.common.unit.TimeValueTests)",
     "displayName": "testFractionalTimeValues(org.elasticsearch.common.unit.TimeValueTests)",
     "methodName": "testFractionalTimeValues",
     "className": "org.elasticsearch.common.unit.TimeValueTests",
     "children": []
    },
    {
     "id": "ID#testFailOnMissingUnits(org.elasticsearch.common.unit.TimeValueTests)",
     "displayName": "testFailOnMissingUnits(org.elasticsearch.common.unit.TimeValueTests)",
     "methodName": "testFailOnMissingUnits",
     "className": "org.elasticsearch.common.unit.TimeValueTests",
     "children": []
    },
    {
     "id": "ID#testSerialize(org.elasticsearch.common.unit.TimeValueTests)",
     "displayName": "testSerialize(org.elasticsearch.common.unit.TimeValueTests)",
     "methodName": "testSerialize",
     "className": "org.elasticsearch.common.unit.TimeValueTests",
     "children": []
    },
    {
     "id": "ID#testNonFractionalTimeValues(org.elasticsearch.common.unit.TimeValueTests)",
     "displayName": "testNonFractionalTimeValues(org.elasticsearch.common.unit.TimeValueTests)",
     "methodName": "testNonFractionalTimeValues",
     "className": "org.elasticsearch.common.unit.TimeValueTests",
     "children": []
    },
    {
     "id": "ID#testFormat(org.elasticsearch.common.unit.TimeValueTests)",
     "displayName": "testFormat(org.elasticsearch.common.unit.TimeValueTests)",
     "methodName": "testFormat",
     "className": "org.elasticsearch.common.unit.TimeValueTests",
     "children": []
    },
    {
     "id": "ID#testSimple(org.elasticsearch.common.unit.TimeValueTests)",
     "displayName": "testSimple(org.elasticsearch.common.unit.TimeValueTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.common.unit.TimeValueTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195715361
 }
]

[
 "TEST_STARTED",
 "ID#testParseTimeValue(org.elasticsearch.common.unit.TimeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseTimeValue(org.elasticsearch.common.unit.TimeValueTests)",
  "startTimestamp": 1474195715381,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRoundTrip(org.elasticsearch.common.unit.TimeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoundTrip(org.elasticsearch.common.unit.TimeValueTests)",
  "startTimestamp": 1474195715384,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnUnknownUnits(org.elasticsearch.common.unit.TimeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnUnknownUnits(org.elasticsearch.common.unit.TimeValueTests)",
  "startTimestamp": 1474195715385,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNoDotsAllowed(org.elasticsearch.common.unit.TimeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoDotsAllowed(org.elasticsearch.common.unit.TimeValueTests)",
  "startTimestamp": 1474195715387,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testToString(org.elasticsearch.common.unit.TimeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToString(org.elasticsearch.common.unit.TimeValueTests)",
  "startTimestamp": 1474195715388,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testMinusOne(org.elasticsearch.common.unit.TimeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinusOne(org.elasticsearch.common.unit.TimeValueTests)",
  "startTimestamp": 1474195715389,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testToStringRep(org.elasticsearch.common.unit.TimeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToStringRep(org.elasticsearch.common.unit.TimeValueTests)",
  "startTimestamp": 1474195715390,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFractionalTimeValues(org.elasticsearch.common.unit.TimeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFractionalTimeValues(org.elasticsearch.common.unit.TimeValueTests)",
  "startTimestamp": 1474195715391,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnMissingUnits(org.elasticsearch.common.unit.TimeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnMissingUnits(org.elasticsearch.common.unit.TimeValueTests)",
  "startTimestamp": 1474195715393,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSerialize(org.elasticsearch.common.unit.TimeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialize(org.elasticsearch.common.unit.TimeValueTests)",
  "startTimestamp": 1474195715394,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testNonFractionalTimeValues(org.elasticsearch.common.unit.TimeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNonFractionalTimeValues(org.elasticsearch.common.unit.TimeValueTests)",
  "startTimestamp": 1474195715395,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFormat(org.elasticsearch.common.unit.TimeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFormat(org.elasticsearch.common.unit.TimeValueTests)",
  "startTimestamp": 1474195715397,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.common.unit.TimeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.common.unit.TimeValueTests)",
  "startTimestamp": 1474195715413,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.unit.TimeValueTests",
  "startTimestamp": 1474195715361,
  "executionTime": 56
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.IndexFolderUpgraderTests",
   "displayName": "org.elasticsearch.common.util.IndexFolderUpgraderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.IndexFolderUpgraderTests",
   "children": [
    {
     "id": "ID#testUpgradeRealIndex(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
     "displayName": "testUpgradeRealIndex(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
     "methodName": "testUpgradeRealIndex",
     "className": "org.elasticsearch.common.util.IndexFolderUpgraderTests",
     "children": []
    },
    {
     "id": "ID#testUpgrade(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
     "displayName": "testUpgrade(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
     "methodName": "testUpgrade",
     "className": "org.elasticsearch.common.util.IndexFolderUpgraderTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeCustomDataPath(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
     "displayName": "testUpgradeCustomDataPath(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
     "methodName": "testUpgradeCustomDataPath",
     "className": "org.elasticsearch.common.util.IndexFolderUpgraderTests",
     "children": []
    },
    {
     "id": "ID#testNeedsUpgrade(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
     "displayName": "testNeedsUpgrade(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
     "methodName": "testNeedsUpgrade",
     "className": "org.elasticsearch.common.util.IndexFolderUpgraderTests",
     "children": []
    },
    {
     "id": "ID#testPartialUpgradeCustomDataPath(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
     "displayName": "testPartialUpgradeCustomDataPath(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
     "methodName": "testPartialUpgradeCustomDataPath",
     "className": "org.elasticsearch.common.util.IndexFolderUpgraderTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeIndices(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
     "displayName": "testUpgradeIndices(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
     "methodName": "testUpgradeIndices",
     "className": "org.elasticsearch.common.util.IndexFolderUpgraderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195715650
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeRealIndex(org.elasticsearch.common.util.IndexFolderUpgraderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:35,726][INFO ][org.elasticsearch.env    ] [-bZ_PpA] using [3] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:35,727][INFO ][org.elasticsearch.env    ] [-bZ_PpA] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:36,309][INFO ][org.elasticsearch.common.util] [node_s_0] --> injecting index [index-2.2.0] into [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-004\\nodes\\0\\indices]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:36,529][WARN ][org.elasticsearch.common.util] [node_s_0] [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-002\\nodes\\0\\indices\\index-2.2.0] no index state found - ignoring%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:36,530][WARN ][org.elasticsearch.common.util] [node_s_0] [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-003\\nodes\\0\\indices\\index-2.2.0] no index state found - ignoring%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:36,533][INFO ][org.elasticsearch.common.util] [node_s_0] [index-2.2.0/5xxjcIKDSxym6G0Upai92Q] upgrading [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-004\\nodes\\0\\indices\\index-2.2.0] to new naming convention%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:36,540][INFO ][org.elasticsearch.common.util] [node_s_0] [index-2.2.0/5xxjcIKDSxym6G0Upai92Q] moved from [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-004\\nodes\\0\\indices\\index-2.2.0] to [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-004\\nodes\\0\\indices\\5xxjcIKDSxym6G0Upai92Q]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeRealIndex(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
  "startTimestamp": 1474195715664,
  "executionTime": 935
 }
]

[
 "TEST_STARTED",
 "ID#testUpgrade(org.elasticsearch.common.util.IndexFolderUpgraderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:37,074][INFO ][org.elasticsearch.env    ] [H41UT2r] using [3] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:37,074][INFO ][org.elasticsearch.env    ] [H41UT2r] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:37,307][INFO ][org.elasticsearch.common.util] [node_s_0] [RUXBYOaTIp/YafllsjxS-CZDoqFD_JdXQ] upgrading [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-007\\nodes\\0\\indices\\RUXBYOaTIp] to new naming convention%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:37,309][INFO ][org.elasticsearch.common.util] [node_s_0] [RUXBYOaTIp/YafllsjxS-CZDoqFD_JdXQ] moved from [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-007\\nodes\\0\\indices\\RUXBYOaTIp] to [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-007\\nodes\\0\\indices\\YafllsjxS-CZDoqFD_JdXQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:37,315][INFO ][org.elasticsearch.common.util] [node_s_0] [RUXBYOaTIp/YafllsjxS-CZDoqFD_JdXQ] upgrading [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-008\\nodes\\0\\indices\\RUXBYOaTIp] to new naming convention%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:37,317][INFO ][org.elasticsearch.common.util] [node_s_0] [RUXBYOaTIp/YafllsjxS-CZDoqFD_JdXQ] moved from [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-008\\nodes\\0\\indices\\RUXBYOaTIp] to [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-008\\nodes\\0\\indices\\YafllsjxS-CZDoqFD_JdXQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:37,320][INFO ][org.elasticsearch.common.util] [node_s_0] [RUXBYOaTIp/YafllsjxS-CZDoqFD_JdXQ] upgrading [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-009\\nodes\\0\\indices\\RUXBYOaTIp] to new naming convention%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:37,322][INFO ][org.elasticsearch.common.util] [node_s_0] [RUXBYOaTIp/YafllsjxS-CZDoqFD_JdXQ] moved from [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-009\\nodes\\0\\indices\\RUXBYOaTIp] to [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-009\\nodes\\0\\indices\\YafllsjxS-CZDoqFD_JdXQ]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgrade(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
  "startTimestamp": 1474195716600,
  "executionTime": 787
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeCustomDataPath(org.elasticsearch.common.util.IndexFolderUpgraderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:37,444][INFO ][org.elasticsearch.env    ] [NfjVSBD] using [2] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:37,445][INFO ][org.elasticsearch.env    ] [NfjVSBD] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:37,583][INFO ][org.elasticsearch.common.util] [node_s_0] [WVgajUBAWw/4ueFysvYS-2KVY-3SNJ2wg] upgrading [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-012\\nodes\\0\\indices\\WVgajUBAWw] to new naming convention%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:37,586][INFO ][org.elasticsearch.common.util] [node_s_0] [WVgajUBAWw/4ueFysvYS-2KVY-3SNJ2wg] moved from [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-010\\WVgajUBAWw] to [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-010\\4ueFysvYS-2KVY-3SNJ2wg]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:37,587][INFO ][org.elasticsearch.common.util] [node_s_0] [WVgajUBAWw/4ueFysvYS-2KVY-3SNJ2wg] moved from [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-012\\nodes\\0\\indices\\WVgajUBAWw] to [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-012\\nodes\\0\\indices\\4ueFysvYS-2KVY-3SNJ2wg]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:37,590][INFO ][org.elasticsearch.common.util] [node_s_0] [WVgajUBAWw/4ueFysvYS-2KVY-3SNJ2wg] upgrading [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-013\\nodes\\0\\indices\\WVgajUBAWw] to new naming convention%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:37,591][INFO ][org.elasticsearch.common.util] [node_s_0] [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-010\\4ueFysvYS-2KVY-3SNJ2wg] no upgrade needed - already upgraded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:37,594][INFO ][org.elasticsearch.common.util] [node_s_0] [WVgajUBAWw/4ueFysvYS-2KVY-3SNJ2wg] moved from [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-013\\nodes\\0\\indices\\WVgajUBAWw] to [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-013\\nodes\\0\\indices\\4ueFysvYS-2KVY-3SNJ2wg]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeCustomDataPath(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
  "startTimestamp": 1474195717388,
  "executionTime": 222
 }
]

[
 "TEST_STARTED",
 "ID#testNeedsUpgrade(org.elasticsearch.common.util.IndexFolderUpgraderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:37,640][INFO ][org.elasticsearch.env    ] [yRQROj0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:37,641][INFO ][org.elasticsearch.env    ] [yRQROj0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNeedsUpgrade(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
  "startTimestamp": 1474195717610,
  "executionTime": 52
 }
]

[
 "TEST_STARTED",
 "ID#testPartialUpgradeCustomDataPath(org.elasticsearch.common.util.IndexFolderUpgraderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:37,705][INFO ][org.elasticsearch.env    ] [4BbHFpd] using [2] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:37,705][INFO ][org.elasticsearch.env    ] [4BbHFpd] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:37,751][INFO ][org.elasticsearch.common.util] [node_s_0] [sluzpvUvTv/wXqMgW6ZQISsnzCuOQH9Ag] upgrading [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-018\\nodes\\0\\indices\\sluzpvUvTv] to new naming convention%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:37,755][INFO ][org.elasticsearch.common.util] [node_s_0] [sluzpvUvTv/wXqMgW6ZQISsnzCuOQH9Ag] upgrading [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-018\\nodes\\0\\indices\\sluzpvUvTv] to new naming convention%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:37,756][INFO ][org.elasticsearch.common.util] [node_s_0] [sluzpvUvTv/wXqMgW6ZQISsnzCuOQH9Ag] moved from [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-016\\0\\sluzpvUvTv] to [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-016\\0\\wXqMgW6ZQISsnzCuOQH9Ag]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:37,762][INFO ][org.elasticsearch.common.util] [node_s_0] [sluzpvUvTv/wXqMgW6ZQISsnzCuOQH9Ag] moved from [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-018\\nodes\\0\\indices\\sluzpvUvTv] to [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-018\\nodes\\0\\indices\\wXqMgW6ZQISsnzCuOQH9Ag]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:37,764][INFO ][org.elasticsearch.common.util] [node_s_0] [sluzpvUvTv/wXqMgW6ZQISsnzCuOQH9Ag] upgrading [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-019\\nodes\\0\\indices\\sluzpvUvTv] to new naming convention%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:37,765][INFO ][org.elasticsearch.common.util] [node_s_0] [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-016\\0\\wXqMgW6ZQISsnzCuOQH9Ag] no upgrade needed - already upgraded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:37,767][INFO ][org.elasticsearch.common.util] [node_s_0] [sluzpvUvTv/wXqMgW6ZQISsnzCuOQH9Ag] moved from [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-019\\nodes\\0\\indices\\sluzpvUvTv] to [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-019\\nodes\\0\\indices\\wXqMgW6ZQISsnzCuOQH9Ag]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPartialUpgradeCustomDataPath(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
  "startTimestamp": 1474195717662,
  "executionTime": 121
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeIndices(org.elasticsearch.common.util.IndexFolderUpgraderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:37,827][INFO ][org.elasticsearch.env    ] [IoHcXXg] using [2] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:37,827][INFO ][org.elasticsearch.env    ] [IoHcXXg] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:38,162][INFO ][org.elasticsearch.common.util] [node_s_0] [NFPhSsHxTT/yAcXAq8ASd6_4663QqqZCw] upgrading [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-021\\nodes\\0\\indices\\NFPhSsHxTT] to new naming convention%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:38,164][INFO ][org.elasticsearch.common.util] [node_s_0] [NFPhSsHxTT/yAcXAq8ASd6_4663QqqZCw] moved from [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-021\\nodes\\0\\indices\\NFPhSsHxTT] to [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-021\\nodes\\0\\indices\\yAcXAq8ASd6_4663QqqZCw]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:38,167][INFO ][org.elasticsearch.common.util] [node_s_0] [NFPhSsHxTT/yAcXAq8ASd6_4663QqqZCw] upgrading [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-022\\nodes\\0\\indices\\NFPhSsHxTT] to new naming convention%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:38,171][INFO ][org.elasticsearch.common.util] [node_s_0] [NFPhSsHxTT/yAcXAq8ASd6_4663QqqZCw] moved from [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-022\\nodes\\0\\indices\\NFPhSsHxTT] to [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-022\\nodes\\0\\indices\\yAcXAq8ASd6_4663QqqZCw]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:38,173][INFO ][org.elasticsearch.common.util] [node_s_0] [srPhRTpINr/BTe0CcO_SgOBDxiFCVEgcA] upgrading [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-021\\nodes\\0\\indices\\srPhRTpINr] to new naming convention%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:38,175][INFO ][org.elasticsearch.common.util] [node_s_0] [srPhRTpINr/BTe0CcO_SgOBDxiFCVEgcA] moved from [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-021\\nodes\\0\\indices\\srPhRTpINr] to [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-021\\nodes\\0\\indices\\BTe0CcO_SgOBDxiFCVEgcA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:38,181][INFO ][org.elasticsearch.common.util] [node_s_0] [srPhRTpINr/BTe0CcO_SgOBDxiFCVEgcA] upgrading [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-022\\nodes\\0\\indices\\srPhRTpINr] to new naming convention%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:38,184][INFO ][org.elasticsearch.common.util] [node_s_0] [srPhRTpINr/BTe0CcO_SgOBDxiFCVEgcA] moved from [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-022\\nodes\\0\\indices\\srPhRTpINr] to [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-022\\nodes\\0\\indices\\BTe0CcO_SgOBDxiFCVEgcA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:38,188][INFO ][org.elasticsearch.common.util] [node_s_0] [tkSpkNQcrV/cCm8Mty0RS2GWKIMHTR3Ew] upgrading [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-021\\nodes\\0\\indices\\tkSpkNQcrV] to new naming convention%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:38,197][INFO ][org.elasticsearch.common.util] [node_s_0] [tkSpkNQcrV/cCm8Mty0RS2GWKIMHTR3Ew] moved from [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-021\\nodes\\0\\indices\\tkSpkNQcrV] to [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-021\\nodes\\0\\indices\\cCm8Mty0RS2GWKIMHTR3Ew]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:38,200][INFO ][org.elasticsearch.common.util] [node_s_0] [tkSpkNQcrV/cCm8Mty0RS2GWKIMHTR3Ew] upgrading [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-022\\nodes\\0\\indices\\tkSpkNQcrV] to new naming convention%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:38,215][INFO ][org.elasticsearch.common.util] [node_s_0] [tkSpkNQcrV/cCm8Mty0RS2GWKIMHTR3Ew] moved from [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-022\\nodes\\0\\indices\\tkSpkNQcrV] to [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_FD13852EF36FC81C-001\\tempDir-022\\nodes\\0\\indices\\cCm8Mty0RS2GWKIMHTR3Ew]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeIndices(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
  "startTimestamp": 1474195717783,
  "executionTime": 541
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.IndexFolderUpgraderTests",
  "startTimestamp": 1474195715650,
  "executionTime": 3026
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.concurrent.RefCountedTests",
   "displayName": "org.elasticsearch.common.util.concurrent.RefCountedTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.concurrent.RefCountedTests",
   "children": [
    {
     "id": "ID#testRefCount(org.elasticsearch.common.util.concurrent.RefCountedTests)",
     "displayName": "testRefCount(org.elasticsearch.common.util.concurrent.RefCountedTests)",
     "methodName": "testRefCount",
     "className": "org.elasticsearch.common.util.concurrent.RefCountedTests",
     "children": []
    },
    {
     "id": "ID#testMultiThreaded(org.elasticsearch.common.util.concurrent.RefCountedTests)",
     "displayName": "testMultiThreaded(org.elasticsearch.common.util.concurrent.RefCountedTests)",
     "methodName": "testMultiThreaded",
     "className": "org.elasticsearch.common.util.concurrent.RefCountedTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195718858
 }
]

[
 "TEST_STARTED",
 "ID#testRefCount(org.elasticsearch.common.util.concurrent.RefCountedTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRefCount(org.elasticsearch.common.util.concurrent.RefCountedTests)",
  "startTimestamp": 1474195718877,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMultiThreaded(org.elasticsearch.common.util.concurrent.RefCountedTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiThreaded(org.elasticsearch.common.util.concurrent.RefCountedTests)",
  "startTimestamp": 1474195718880,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.concurrent.RefCountedTests",
  "startTimestamp": 1474195718858,
  "executionTime": 34
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
   "displayName": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
   "children": [
    {
     "id": "ID#testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSimpleArrayExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSimpleFieldExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSingleFieldWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRawField(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRawField",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testWithLfAtEnd",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSingleFieldObject",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testObjectsInArrayWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testArrays(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testArrays",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsPropertyExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRecurseField4Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testNoFiltering",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRecursiveObjectsPropertiesWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testNoMatch(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testNoMatch",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRecursiveObjectsInArrayWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRecurseField4Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRecursiveSameObjectWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSimpleFieldWithWildcardInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsPropertyInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRecurseField1Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRecurseField3Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testMultipleFieldsExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRecurseField2Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSimpleArrayInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRecurseField3Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSimpleFieldWithWildcardExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSimpleFieldInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRecurseField2Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testEmptyObject",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRecurseField1Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testMultipleFieldsInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195719146
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474195719226,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474195719228,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474195719230,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474195719232,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474195719235,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474195719237,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474195719239,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474195719241,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474195719243,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474195719245,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474195719256,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474195719258,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474195719260,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474195719263,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474195719265,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474195719267,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474195719269,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474195719272,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474195719274,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474195719276,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474195719278,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474195719281,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474195719283,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474195719285,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474195719287,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474195719290,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474195719293,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474195719295,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474195719297,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474195719300,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474195719301,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474195719304,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
  "startTimestamp": 1474195719146,
  "executionTime": 161
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.env.NodeEnvironmentTests",
   "displayName": "org.elasticsearch.env.NodeEnvironmentTests",
   "methodName": null,
   "className": "org.elasticsearch.env.NodeEnvironmentTests",
   "children": [
    {
     "id": "ID#testStressShardLock(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testStressShardLock(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testStressShardLock",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    },
    {
     "id": "ID#testDeleteSafe(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testDeleteSafe(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testDeleteSafe",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    },
    {
     "id": "ID#testPersistentNodeId(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testPersistentNodeId(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testPersistentNodeId",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    },
    {
     "id": "ID#testCustomDataPaths(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testCustomDataPaths(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testCustomDataPaths",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    },
    {
     "id": "ID#testResolveIndexFolders(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testResolveIndexFolders(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testResolveIndexFolders",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    },
    {
     "id": "ID#testSegmentInfosTracing(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testSegmentInfosTracing(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testSegmentInfosTracing",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    },
    {
     "id": "ID#testWhetherClusterFolderShouldBeUsed(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testWhetherClusterFolderShouldBeUsed(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testWhetherClusterFolderShouldBeUsed",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    },
    {
     "id": "ID#testNodeLockMultipleEnvironment(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testNodeLockMultipleEnvironment(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testNodeLockMultipleEnvironment",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    },
    {
     "id": "ID#testAvailableIndexFolders(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testAvailableIndexFolders(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testAvailableIndexFolders",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    },
    {
     "id": "ID#testShardLock(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testShardLock(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testShardLock",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    },
    {
     "id": "ID#testNodeLockSingleEnvironment(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testNodeLockSingleEnvironment(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testNodeLockSingleEnvironment",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    },
    {
     "id": "ID#testNodeLockSillySettings(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testNodeLockSillySettings(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testNodeLockSillySettings",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195719455
 }
]

[
 "TEST_STARTED",
 "ID#testStressShardLock(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:39,583][INFO ][org.elasticsearch.env    ] [swyutkk] using [3] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:39,584][INFO ][org.elasticsearch.env    ] [swyutkk] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStressShardLock(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1474195719472,
  "executionTime": 794
 }
]

[
 "TEST_STARTED",
 "ID#testDeleteSafe(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:40,332][INFO ][org.elasticsearch.env    ] [0nQliO8] using [2] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:40,332][INFO ][org.elasticsearch.env    ] [0nQliO8] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeleteSafe(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1474195720267,
  "executionTime": 113
 }
]

[
 "TEST_STARTED",
 "ID#testPersistentNodeId(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:40,462][INFO ][org.elasticsearch.env    ] [RM4yIRM] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:40,462][INFO ][org.elasticsearch.env    ] [RM4yIRM] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:40,481][INFO ][org.elasticsearch.env    ] [RM4yIRM] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:40,482][INFO ][org.elasticsearch.env    ] [RM4yIRM] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:40,539][INFO ][org.elasticsearch.env    ] [yq2isAm] using [2] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:40,539][INFO ][org.elasticsearch.env    ] [yq2isAm] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPersistentNodeId(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1474195720381,
  "executionTime": 207
 }
]

[
 "TEST_STARTED",
 "ID#testCustomDataPaths(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:40,625][INFO ][org.elasticsearch.env    ] [vuEVf0l] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:40,625][INFO ][org.elasticsearch.env    ] [vuEVf0l] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCustomDataPaths(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1474195720589,
  "executionTime": 53
 }
]

[
 "TEST_STARTED",
 "ID#testResolveIndexFolders(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:40,757][INFO ][org.elasticsearch.env    ] [zfZetmS] using [3] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:40,758][INFO ][org.elasticsearch.env    ] [zfZetmS] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResolveIndexFolders(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1474195720642,
  "executionTime": 154
 }
]

[
 "TEST_STARTED",
 "ID#testSegmentInfosTracing(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSegmentInfosTracing(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1474195720796,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testWhetherClusterFolderShouldBeUsed(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:40,852][INFO ][org.elasticsearch.env    ] [TN_EGj4] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:40,852][INFO ][org.elasticsearch.env    ] [TN_EGj4] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:40,945][INFO ][org.elasticsearch.env    ] [vWNMOkq] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:40,945][INFO ][org.elasticsearch.env    ] [vWNMOkq] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:41,012][INFO ][org.elasticsearch.env    ] [q7NBGIz] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:41,012][INFO ][org.elasticsearch.env    ] [q7NBGIz] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWhetherClusterFolderShouldBeUsed(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1474195720799,
  "executionTime": 218
 }
]

[
 "TEST_STARTED",
 "ID#testNodeLockMultipleEnvironment(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:41,082][INFO ][org.elasticsearch.env    ] [hdywEwM] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:41,083][INFO ][org.elasticsearch.env    ] [hdywEwM] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:41,170][INFO ][org.elasticsearch.env    ] [VwMnqG4] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:41,170][INFO ][org.elasticsearch.env    ] [VwMnqG4] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNodeLockMultipleEnvironment(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1474195721017,
  "executionTime": 157
 }
]

[
 "TEST_STARTED",
 "ID#testAvailableIndexFolders(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:41,250][INFO ][org.elasticsearch.env    ] [wzseZP7] using [2] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:41,250][INFO ][org.elasticsearch.env    ] [wzseZP7] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAvailableIndexFolders(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1474195721174,
  "executionTime": 98
 }
]

[
 "TEST_STARTED",
 "ID#testShardLock(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:41,328][INFO ][org.elasticsearch.env    ] [GJfVQcJ] using [2] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:41,328][INFO ][org.elasticsearch.env    ] [GJfVQcJ] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardLock(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1474195721272,
  "executionTime": 83
 }
]

[
 "TEST_STARTED",
 "ID#testNodeLockSingleEnvironment(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:41,423][INFO ][org.elasticsearch.env    ] [dIYcjC4] using [2] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:41,423][INFO ][org.elasticsearch.env    ] [dIYcjC4] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:41,486][INFO ][org.elasticsearch.env    ] [dIYcjC4] using [2] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:41,486][INFO ][org.elasticsearch.env    ] [dIYcjC4] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNodeLockSingleEnvironment(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1474195721355,
  "executionTime": 135
 }
]

[
 "TEST_STARTED",
 "ID#testNodeLockSillySettings(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNodeLockSillySettings(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1474195721490,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.env.NodeEnvironmentTests",
  "startTimestamp": 1474195719455,
  "executionTime": 2294
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.gateway.AsyncShardFetchTests",
   "displayName": "org.elasticsearch.gateway.AsyncShardFetchTests",
   "methodName": null,
   "className": "org.elasticsearch.gateway.AsyncShardFetchTests",
   "children": [
    {
     "id": "ID#testTwoNodesOnSetupAndFailure(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "displayName": "testTwoNodesOnSetupAndFailure(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "methodName": "testTwoNodesOnSetupAndFailure",
     "className": "org.elasticsearch.gateway.AsyncShardFetchTests",
     "children": []
    },
    {
     "id": "ID#testFullCircleSingleNodeSuccess(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "displayName": "testFullCircleSingleNodeSuccess(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "methodName": "testFullCircleSingleNodeSuccess",
     "className": "org.elasticsearch.gateway.AsyncShardFetchTests",
     "children": []
    },
    {
     "id": "ID#testTwoNodesAddedInBetween(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "displayName": "testTwoNodesAddedInBetween(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "methodName": "testTwoNodesAddedInBetween",
     "className": "org.elasticsearch.gateway.AsyncShardFetchTests",
     "children": []
    },
    {
     "id": "ID#testClose(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "displayName": "testClose(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "methodName": "testClose",
     "className": "org.elasticsearch.gateway.AsyncShardFetchTests",
     "children": []
    },
    {
     "id": "ID#testFullCircleSingleNodeFailure(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "displayName": "testFullCircleSingleNodeFailure(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "methodName": "testFullCircleSingleNodeFailure",
     "className": "org.elasticsearch.gateway.AsyncShardFetchTests",
     "children": []
    },
    {
     "id": "ID#testTwoNodesOnSetup(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "displayName": "testTwoNodesOnSetup(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "methodName": "testTwoNodesOnSetup",
     "className": "org.elasticsearch.gateway.AsyncShardFetchTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195721949
 }
]

[
 "TEST_STARTED",
 "ID#testTwoNodesOnSetupAndFailure(org.elasticsearch.gateway.AsyncShardFetchTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTwoNodesOnSetupAndFailure(org.elasticsearch.gateway.AsyncShardFetchTests)",
  "startTimestamp": 1474195721976,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testFullCircleSingleNodeSuccess(org.elasticsearch.gateway.AsyncShardFetchTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFullCircleSingleNodeSuccess(org.elasticsearch.gateway.AsyncShardFetchTests)",
  "startTimestamp": 1474195721991,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testTwoNodesAddedInBetween(org.elasticsearch.gateway.AsyncShardFetchTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTwoNodesAddedInBetween(org.elasticsearch.gateway.AsyncShardFetchTests)",
  "startTimestamp": 1474195722004,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testClose(org.elasticsearch.gateway.AsyncShardFetchTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClose(org.elasticsearch.gateway.AsyncShardFetchTests)",
  "startTimestamp": 1474195722011,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testFullCircleSingleNodeFailure(org.elasticsearch.gateway.AsyncShardFetchTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFullCircleSingleNodeFailure(org.elasticsearch.gateway.AsyncShardFetchTests)",
  "startTimestamp": 1474195722019,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testTwoNodesOnSetup(org.elasticsearch.gateway.AsyncShardFetchTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTwoNodesOnSetup(org.elasticsearch.gateway.AsyncShardFetchTests)",
  "startTimestamp": 1474195722027,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.gateway.AsyncShardFetchTests",
  "startTimestamp": 1474195721949,
  "executionTime": 84
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.IndexTests",
   "displayName": "org.elasticsearch.index.IndexTests",
   "methodName": null,
   "className": "org.elasticsearch.index.IndexTests",
   "children": [
    {
     "id": "ID#testXContent(org.elasticsearch.index.IndexTests)",
     "displayName": "testXContent(org.elasticsearch.index.IndexTests)",
     "methodName": "testXContent",
     "className": "org.elasticsearch.index.IndexTests",
     "children": []
    },
    {
     "id": "ID#testToString(org.elasticsearch.index.IndexTests)",
     "displayName": "testToString(org.elasticsearch.index.IndexTests)",
     "methodName": "testToString",
     "className": "org.elasticsearch.index.IndexTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195722216
 }
]

[
 "TEST_STARTED",
 "ID#testXContent(org.elasticsearch.index.IndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testXContent(org.elasticsearch.index.IndexTests)",
  "startTimestamp": 1474195722236,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToString(org.elasticsearch.index.IndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToString(org.elasticsearch.index.IndexTests)",
  "startTimestamp": 1474195722239,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.IndexTests",
  "startTimestamp": 1474195722216,
  "executionTime": 26
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.IndexingSlowLogTests",
   "displayName": "org.elasticsearch.index.IndexingSlowLogTests",
   "methodName": null,
   "className": "org.elasticsearch.index.IndexingSlowLogTests",
   "children": [
    {
     "id": "ID#testReformatSetting(org.elasticsearch.index.IndexingSlowLogTests)",
     "displayName": "testReformatSetting(org.elasticsearch.index.IndexingSlowLogTests)",
     "methodName": "testReformatSetting",
     "className": "org.elasticsearch.index.IndexingSlowLogTests",
     "children": []
    },
    {
     "id": "ID#testSlowLogParsedDocumentPrinterSourceToLog(org.elasticsearch.index.IndexingSlowLogTests)",
     "displayName": "testSlowLogParsedDocumentPrinterSourceToLog(org.elasticsearch.index.IndexingSlowLogTests)",
     "methodName": "testSlowLogParsedDocumentPrinterSourceToLog",
     "className": "org.elasticsearch.index.IndexingSlowLogTests",
     "children": []
    },
    {
     "id": "ID#testSetLevels(org.elasticsearch.index.IndexingSlowLogTests)",
     "displayName": "testSetLevels(org.elasticsearch.index.IndexingSlowLogTests)",
     "methodName": "testSetLevels",
     "className": "org.elasticsearch.index.IndexingSlowLogTests",
     "children": []
    },
    {
     "id": "ID#testLevelSetting(org.elasticsearch.index.IndexingSlowLogTests)",
     "displayName": "testLevelSetting(org.elasticsearch.index.IndexingSlowLogTests)",
     "methodName": "testLevelSetting",
     "className": "org.elasticsearch.index.IndexingSlowLogTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195722479
 }
]

[
 "TEST_STARTED",
 "ID#testReformatSetting(org.elasticsearch.index.IndexingSlowLogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:42,512][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.indexing.slowlog.reformat] from [false] to [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:42,516][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.indexing.slowlog.reformat] from [true] to [false]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:42,516][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.indexing.slowlog.reformat] from [false] to [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReformatSetting(org.elasticsearch.index.IndexingSlowLogTests)",
  "startTimestamp": 1474195722506,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testSlowLogParsedDocumentPrinterSourceToLog(org.elasticsearch.index.IndexingSlowLogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSlowLogParsedDocumentPrinterSourceToLog(org.elasticsearch.index.IndexingSlowLogTests)",
  "startTimestamp": 1474195722520,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testSetLevels(org.elasticsearch.index.IndexingSlowLogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:42,544][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.indexing.slowlog.threshold.index.warn] from [400ms] to [420ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:42,544][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.indexing.slowlog.threshold.index.info] from [300ms] to [320ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:42,544][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.indexing.slowlog.threshold.index.debug] from [200ms] to [220ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:42,544][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.indexing.slowlog.threshold.index.trace] from [100ms] to [120ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:42,544][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.indexing.slowlog.threshold.index.warn] from [420ms] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:42,544][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.indexing.slowlog.threshold.index.info] from [320ms] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:42,544][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.indexing.slowlog.threshold.index.debug] from [220ms] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:42,544][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.indexing.slowlog.threshold.index.trace] from [120ms] to [-1]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetLevels(org.elasticsearch.index.IndexingSlowLogTests)",
  "startTimestamp": 1474195722541,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testLevelSetting(org.elasticsearch.index.IndexingSlowLogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:42,557][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.indexing.slowlog.level] from [TRACE] to [DEBUG]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:42,558][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.indexing.slowlog.level] from [DEBUG] to [TRACE]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLevelSetting(org.elasticsearch.index.IndexingSlowLogTests)",
  "startTimestamp": 1474195722555,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.IndexingSlowLogTests",
  "startTimestamp": 1474195722479,
  "executionTime": 84
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.MergePolicySettingsTests",
   "displayName": "org.elasticsearch.index.MergePolicySettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.index.MergePolicySettingsTests",
   "children": [
    {
     "id": "ID#testNoMerges(org.elasticsearch.index.MergePolicySettingsTests)",
     "displayName": "testNoMerges(org.elasticsearch.index.MergePolicySettingsTests)",
     "methodName": "testNoMerges",
     "className": "org.elasticsearch.index.MergePolicySettingsTests",
     "children": []
    },
    {
     "id": "ID#testUpdateSettings(org.elasticsearch.index.MergePolicySettingsTests)",
     "displayName": "testUpdateSettings(org.elasticsearch.index.MergePolicySettingsTests)",
     "methodName": "testUpdateSettings",
     "className": "org.elasticsearch.index.MergePolicySettingsTests",
     "children": []
    },
    {
     "id": "ID#testTieredMergePolicySettingsUpdate(org.elasticsearch.index.MergePolicySettingsTests)",
     "displayName": "testTieredMergePolicySettingsUpdate(org.elasticsearch.index.MergePolicySettingsTests)",
     "methodName": "testTieredMergePolicySettingsUpdate",
     "className": "org.elasticsearch.index.MergePolicySettingsTests",
     "children": []
    },
    {
     "id": "ID#testCompoundFileSettings(org.elasticsearch.index.MergePolicySettingsTests)",
     "displayName": "testCompoundFileSettings(org.elasticsearch.index.MergePolicySettingsTests)",
     "methodName": "testCompoundFileSettings",
     "className": "org.elasticsearch.index.MergePolicySettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195722746
 }
]

[
 "TEST_STARTED",
 "ID#testNoMerges(org.elasticsearch.index.MergePolicySettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:48:42,784][WARN ][org.elasticsearch.index  ]  [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:48:42,784][WARN ][org.elasticsearch.index  ]  [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoMerges(org.elasticsearch.index.MergePolicySettingsTests)",
  "startTimestamp": 1474195722779,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testUpdateSettings(org.elasticsearch.index.MergePolicySettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:48:42,788][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.compound_format] from [0.9] to [0.1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:48:42,788][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.compound_format] from [0.1] to [0.0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:48:42,788][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.compound_format] from [0.0] to [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:48:42,788][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.compound_format] from [true] to [false]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdateSettings(org.elasticsearch.index.MergePolicySettingsTests)",
  "startTimestamp": 1474195722785,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testTieredMergePolicySettingsUpdate(org.elasticsearch.index.MergePolicySettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:48:42,791][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.merge.policy.expunge_deletes_allowed] from [10.0] to [11.0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:48:42,791][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.merge.policy.expunge_deletes_allowed] from [11.0] to [10.0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:48:42,791][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.merge.policy.floor_segment] from [2mb] to [3mb]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:48:42,792][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.merge.policy.floor_segment] from [3mb] to [2mb]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:48:42,792][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.merge.policy.max_merge_at_once] from [10] to [9]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:48:42,792][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.merge.policy.max_merge_at_once] from [9] to [10]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:48:42,792][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.merge.policy.max_merge_at_once_explicit] from [30] to [29]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:48:42,792][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.merge.policy.max_merge_at_once_explicit] from [29] to [30]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:48:42,792][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.merge.policy.reclaim_deletes_weight] from [2.0] to [3.0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:48:42,792][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.merge.policy.segments_per_tier] from [10.0] to [11.0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:48:42,792][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.merge.policy.reclaim_deletes_weight] from [3.0] to [2.0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:48:42,793][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.merge.policy.segments_per_tier] from [11.0] to [10.0]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTieredMergePolicySettingsUpdate(org.elasticsearch.index.MergePolicySettingsTests)",
  "startTimestamp": 1474195722789,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testCompoundFileSettings(org.elasticsearch.index.MergePolicySettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompoundFileSettings(org.elasticsearch.index.MergePolicySettingsTests)",
  "startTimestamp": 1474195722793,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.MergePolicySettingsTests",
  "startTimestamp": 1474195722746,
  "executionTime": 57
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.AnalysisFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.AnalysisFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.AnalysisFactoryTests",
   "children": [
    {
     "id": "ID#testMultiTermAware(org.elasticsearch.index.analysis.AnalysisFactoryTests)",
     "displayName": "testMultiTermAware(org.elasticsearch.index.analysis.AnalysisFactoryTests)",
     "methodName": "testMultiTermAware",
     "className": "org.elasticsearch.index.analysis.AnalysisFactoryTests",
     "children": []
    },
    {
     "id": "ID#testTokenizers(org.elasticsearch.index.analysis.AnalysisFactoryTests)",
     "displayName": "testTokenizers(org.elasticsearch.index.analysis.AnalysisFactoryTests)",
     "methodName": "testTokenizers",
     "className": "org.elasticsearch.index.analysis.AnalysisFactoryTests",
     "children": []
    },
    {
     "id": "ID#testTokenFilters(org.elasticsearch.index.analysis.AnalysisFactoryTests)",
     "displayName": "testTokenFilters(org.elasticsearch.index.analysis.AnalysisFactoryTests)",
     "methodName": "testTokenFilters",
     "className": "org.elasticsearch.index.analysis.AnalysisFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCharFilters(org.elasticsearch.index.analysis.AnalysisFactoryTests)",
     "displayName": "testCharFilters(org.elasticsearch.index.analysis.AnalysisFactoryTests)",
     "methodName": "testCharFilters",
     "className": "org.elasticsearch.index.analysis.AnalysisFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195723083
 }
]

[
 "TEST_STARTED",
 "ID#testMultiTermAware(org.elasticsearch.index.analysis.AnalysisFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiTermAware(org.elasticsearch.index.analysis.AnalysisFactoryTests)",
  "startTimestamp": 1474195723108,
  "executionTime": 426
 }
]

[
 "TEST_STARTED",
 "ID#testTokenizers(org.elasticsearch.index.analysis.AnalysisFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTokenizers(org.elasticsearch.index.analysis.AnalysisFactoryTests)",
  "startTimestamp": 1474195723534,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTokenFilters(org.elasticsearch.index.analysis.AnalysisFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTokenFilters(org.elasticsearch.index.analysis.AnalysisFactoryTests)",
  "startTimestamp": 1474195723536,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCharFilters(org.elasticsearch.index.analysis.AnalysisFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCharFilters(org.elasticsearch.index.analysis.AnalysisFactoryTests)",
  "startTimestamp": 1474195723538,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.AnalysisFactoryTests",
  "startTimestamp": 1474195723083,
  "executionTime": 460
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.AnalysisServiceTests",
   "displayName": "org.elasticsearch.index.analysis.AnalysisServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.AnalysisServiceTests",
   "children": [
    {
     "id": "ID#testNoTypeOrTokenizerErrorMessage(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "displayName": "testNoTypeOrTokenizerErrorMessage(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "methodName": "testNoTypeOrTokenizerErrorMessage",
     "className": "org.elasticsearch.index.analysis.AnalysisServiceTests",
     "children": []
    },
    {
     "id": "ID#testOverrideDefaultSearchAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "displayName": "testOverrideDefaultSearchAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "methodName": "testOverrideDefaultSearchAnalyzer",
     "className": "org.elasticsearch.index.analysis.AnalysisServiceTests",
     "children": []
    },
    {
     "id": "ID#testOverrideDefaultAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "displayName": "testOverrideDefaultAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "methodName": "testOverrideDefaultAnalyzer",
     "className": "org.elasticsearch.index.analysis.AnalysisServiceTests",
     "children": []
    },
    {
     "id": "ID#testBackCompatOverrideDefaultIndexAndSearchAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "displayName": "testBackCompatOverrideDefaultIndexAndSearchAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "methodName": "testBackCompatOverrideDefaultIndexAndSearchAnalyzer",
     "className": "org.elasticsearch.index.analysis.AnalysisServiceTests",
     "children": []
    },
    {
     "id": "ID#testBuiltInAnalyzersAreCached(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "displayName": "testBuiltInAnalyzersAreCached(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "methodName": "testBuiltInAnalyzersAreCached",
     "className": "org.elasticsearch.index.analysis.AnalysisServiceTests",
     "children": []
    },
    {
     "id": "ID#testConfigureCamelCaseTokenFilter(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "displayName": "testConfigureCamelCaseTokenFilter(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "methodName": "testConfigureCamelCaseTokenFilter",
     "className": "org.elasticsearch.index.analysis.AnalysisServiceTests",
     "children": []
    },
    {
     "id": "ID#testBackCompatOverrideDefaultIndexAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "displayName": "testBackCompatOverrideDefaultIndexAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "methodName": "testBackCompatOverrideDefaultIndexAnalyzer",
     "className": "org.elasticsearch.index.analysis.AnalysisServiceTests",
     "children": []
    },
    {
     "id": "ID#testOverrideDefaultIndexAnalyzerIsUnsupported(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "displayName": "testOverrideDefaultIndexAnalyzerIsUnsupported(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "methodName": "testOverrideDefaultIndexAnalyzerIsUnsupported",
     "className": "org.elasticsearch.index.analysis.AnalysisServiceTests",
     "children": []
    },
    {
     "id": "ID#testDefaultAnalyzers(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "displayName": "testDefaultAnalyzers(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "methodName": "testDefaultAnalyzers",
     "className": "org.elasticsearch.index.analysis.AnalysisServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195723602
 }
]

[
 "TEST_STARTED",
 "ID#testNoTypeOrTokenizerErrorMessage(org.elasticsearch.index.analysis.AnalysisServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoTypeOrTokenizerErrorMessage(org.elasticsearch.index.analysis.AnalysisServiceTests)",
  "startTimestamp": 1474195723621,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testOverrideDefaultSearchAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOverrideDefaultSearchAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)",
  "startTimestamp": 1474195723626,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testOverrideDefaultAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOverrideDefaultAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)",
  "startTimestamp": 1474195723629,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testBackCompatOverrideDefaultIndexAndSearchAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:43,636][WARN ][org.elasticsearch.deprecation.index.analysis]  [index] setting [index.analysis.analyzer.default_index] is deprecated, use [index.analysis.analyzer.default] instead for index [index]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBackCompatOverrideDefaultIndexAndSearchAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)",
  "startTimestamp": 1474195723632,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testBuiltInAnalyzersAreCached(org.elasticsearch.index.analysis.AnalysisServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuiltInAnalyzersAreCached(org.elasticsearch.index.analysis.AnalysisServiceTests)",
  "startTimestamp": 1474195723637,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testConfigureCamelCaseTokenFilter(org.elasticsearch.index.analysis.AnalysisServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigureCamelCaseTokenFilter(org.elasticsearch.index.analysis.AnalysisServiceTests)",
  "startTimestamp": 1474195723646,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testBackCompatOverrideDefaultIndexAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:43,658][WARN ][org.elasticsearch.deprecation.index.analysis]  [index] setting [index.analysis.analyzer.default_index] is deprecated, use [index.analysis.analyzer.default] instead for index [index]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBackCompatOverrideDefaultIndexAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)",
  "startTimestamp": 1474195723655,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testOverrideDefaultIndexAnalyzerIsUnsupported(org.elasticsearch.index.analysis.AnalysisServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOverrideDefaultIndexAnalyzerIsUnsupported(org.elasticsearch.index.analysis.AnalysisServiceTests)",
  "startTimestamp": 1474195723658,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultAnalyzers(org.elasticsearch.index.analysis.AnalysisServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultAnalyzers(org.elasticsearch.index.analysis.AnalysisServiceTests)",
  "startTimestamp": 1474195723663,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.AnalysisServiceTests",
  "startTimestamp": 1474195723602,
  "executionTime": 69
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.AnalysisTests",
   "displayName": "org.elasticsearch.index.analysis.AnalysisTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.AnalysisTests",
   "children": [
    {
     "id": "ID#testParseNonExistingFile(org.elasticsearch.index.analysis.AnalysisTests)",
     "displayName": "testParseNonExistingFile(org.elasticsearch.index.analysis.AnalysisTests)",
     "methodName": "testParseNonExistingFile",
     "className": "org.elasticsearch.index.analysis.AnalysisTests",
     "children": []
    },
    {
     "id": "ID#testParseWordList(org.elasticsearch.index.analysis.AnalysisTests)",
     "displayName": "testParseWordList(org.elasticsearch.index.analysis.AnalysisTests)",
     "methodName": "testParseWordList",
     "className": "org.elasticsearch.index.analysis.AnalysisTests",
     "children": []
    },
    {
     "id": "ID#testParseStemExclusion(org.elasticsearch.index.analysis.AnalysisTests)",
     "displayName": "testParseStemExclusion(org.elasticsearch.index.analysis.AnalysisTests)",
     "methodName": "testParseStemExclusion",
     "className": "org.elasticsearch.index.analysis.AnalysisTests",
     "children": []
    },
    {
     "id": "ID#testParseFalseEncodedFile(org.elasticsearch.index.analysis.AnalysisTests)",
     "displayName": "testParseFalseEncodedFile(org.elasticsearch.index.analysis.AnalysisTests)",
     "methodName": "testParseFalseEncodedFile",
     "className": "org.elasticsearch.index.analysis.AnalysisTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195723868
 }
]

[
 "TEST_STARTED",
 "ID#testParseNonExistingFile(org.elasticsearch.index.analysis.AnalysisTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseNonExistingFile(org.elasticsearch.index.analysis.AnalysisTests)",
  "startTimestamp": 1474195723884,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testParseWordList(org.elasticsearch.index.analysis.AnalysisTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseWordList(org.elasticsearch.index.analysis.AnalysisTests)",
  "startTimestamp": 1474195723891,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testParseStemExclusion(org.elasticsearch.index.analysis.AnalysisTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseStemExclusion(org.elasticsearch.index.analysis.AnalysisTests)",
  "startTimestamp": 1474195723902,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseFalseEncodedFile(org.elasticsearch.index.analysis.AnalysisTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFalseEncodedFile(org.elasticsearch.index.analysis.AnalysisTests)",
  "startTimestamp": 1474195723905,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.AnalysisTests",
  "startTimestamp": 1474195723868,
  "executionTime": 54
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.KeepFilterFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.KeepFilterFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.KeepFilterFactoryTests",
   "children": [
    {
     "id": "ID#testKeepWordsPathSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
     "displayName": "testKeepWordsPathSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
     "methodName": "testKeepWordsPathSettings",
     "className": "org.elasticsearch.index.analysis.KeepFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testLoadWithoutSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
     "displayName": "testLoadWithoutSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
     "methodName": "testLoadWithoutSettings",
     "className": "org.elasticsearch.index.analysis.KeepFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCaseInsensitiveMapping(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
     "displayName": "testCaseInsensitiveMapping(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
     "methodName": "testCaseInsensitiveMapping",
     "className": "org.elasticsearch.index.analysis.KeepFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testLoadOverConfiguredSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
     "displayName": "testLoadOverConfiguredSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
     "methodName": "testLoadOverConfiguredSettings",
     "className": "org.elasticsearch.index.analysis.KeepFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCaseSensitiveMapping(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
     "displayName": "testCaseSensitiveMapping(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
     "methodName": "testCaseSensitiveMapping",
     "className": "org.elasticsearch.index.analysis.KeepFilterFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195724133
 }
]

[
 "TEST_STARTED",
 "ID#testKeepWordsPathSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testKeepWordsPathSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
  "startTimestamp": 1474195724159,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testLoadWithoutSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLoadWithoutSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
  "startTimestamp": 1474195724172,
  "executionTime": 60
 }
]

[
 "TEST_STARTED",
 "ID#testCaseInsensitiveMapping(org.elasticsearch.index.analysis.KeepFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCaseInsensitiveMapping(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
  "startTimestamp": 1474195724233,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testLoadOverConfiguredSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLoadOverConfiguredSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
  "startTimestamp": 1474195724242,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testCaseSensitiveMapping(org.elasticsearch.index.analysis.KeepFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCaseSensitiveMapping(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
  "startTimestamp": 1474195724249,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.KeepFilterFactoryTests",
  "startTimestamp": 1474195724133,
  "executionTime": 134
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.KeepTypesFilterFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.KeepTypesFilterFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.KeepTypesFilterFactoryTests",
   "children": [
    {
     "id": "ID#testKeepTypes(org.elasticsearch.index.analysis.KeepTypesFilterFactoryTests)",
     "displayName": "testKeepTypes(org.elasticsearch.index.analysis.KeepTypesFilterFactoryTests)",
     "methodName": "testKeepTypes",
     "className": "org.elasticsearch.index.analysis.KeepTypesFilterFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195724429
 }
]

[
 "TEST_STARTED",
 "ID#testKeepTypes(org.elasticsearch.index.analysis.KeepTypesFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testKeepTypes(org.elasticsearch.index.analysis.KeepTypesFilterFactoryTests)",
  "startTimestamp": 1474195724445,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.KeepTypesFilterFactoryTests",
  "startTimestamp": 1474195724429,
  "executionTime": 27
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests",
   "children": [
    {
     "id": "ID#testSettings(org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests)",
     "displayName": "testSettings(org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests)",
     "methodName": "testSettings",
     "className": "org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testDefault(org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests)",
     "displayName": "testDefault(org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests)",
     "methodName": "testDefault",
     "className": "org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195724690
 }
]

[
 "TEST_STARTED",
 "ID#testSettings(org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSettings(org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests)",
  "startTimestamp": 1474195724704,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testDefault(org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefault(org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests)",
  "startTimestamp": 1474195724728,
  "executionTime": 12
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests",
  "startTimestamp": 1474195724690,
  "executionTime": 55
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.NGramTokenizerFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.NGramTokenizerFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.NGramTokenizerFactoryTests",
   "children": [
    {
     "id": "ID#testParseTokenChars(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
     "displayName": "testParseTokenChars(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
     "methodName": "testParseTokenChars",
     "className": "org.elasticsearch.index.analysis.NGramTokenizerFactoryTests",
     "children": []
    },
    {
     "id": "ID#testPreTokenizationEdge(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
     "displayName": "testPreTokenizationEdge(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
     "methodName": "testPreTokenizationEdge",
     "className": "org.elasticsearch.index.analysis.NGramTokenizerFactoryTests",
     "children": []
    },
    {
     "id": "ID#testBackwardsCompatibilityEdgeNgramTokenFilter(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
     "displayName": "testBackwardsCompatibilityEdgeNgramTokenFilter(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
     "methodName": "testBackwardsCompatibilityEdgeNgramTokenFilter",
     "className": "org.elasticsearch.index.analysis.NGramTokenizerFactoryTests",
     "children": []
    },
    {
     "id": "ID#testPreTokenization(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
     "displayName": "testPreTokenization(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
     "methodName": "testPreTokenization",
     "className": "org.elasticsearch.index.analysis.NGramTokenizerFactoryTests",
     "children": []
    },
    {
     "id": "ID#testNoTokenChars(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
     "displayName": "testNoTokenChars(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
     "methodName": "testNoTokenChars",
     "className": "org.elasticsearch.index.analysis.NGramTokenizerFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195724959
 }
]

[
 "TEST_STARTED",
 "ID#testParseTokenChars(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseTokenChars(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
  "startTimestamp": 1474195724973,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testPreTokenizationEdge(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreTokenizationEdge(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
  "startTimestamp": 1474195724984,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testBackwardsCompatibilityEdgeNgramTokenFilter(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBackwardsCompatibilityEdgeNgramTokenFilter(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
  "startTimestamp": 1474195724994,
  "executionTime": 71
 }
]

[
 "TEST_STARTED",
 "ID#testPreTokenization(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreTokenization(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
  "startTimestamp": 1474195725065,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testNoTokenChars(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoTokenChars(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
  "startTimestamp": 1474195725070,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.NGramTokenizerFactoryTests",
  "startTimestamp": 1474195724959,
  "executionTime": 115
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.PatternAnalyzerTests",
   "displayName": "org.elasticsearch.index.analysis.PatternAnalyzerTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.PatternAnalyzerTests",
   "children": [
    {
     "id": "ID#testNonWordPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "displayName": "testNonWordPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "methodName": "testNonWordPattern",
     "className": "org.elasticsearch.index.analysis.PatternAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testWhitespacePattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "displayName": "testWhitespacePattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "methodName": "testWhitespacePattern",
     "className": "org.elasticsearch.index.analysis.PatternAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testCustomPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "displayName": "testCustomPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "methodName": "testCustomPattern",
     "className": "org.elasticsearch.index.analysis.PatternAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testRandomStrings(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "displayName": "testRandomStrings(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "methodName": "testRandomStrings",
     "className": "org.elasticsearch.index.analysis.PatternAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testHugeDocument(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "displayName": "testHugeDocument(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "methodName": "testHugeDocument",
     "className": "org.elasticsearch.index.analysis.PatternAnalyzerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195725227
 }
]

[
 "TEST_STARTED",
 "ID#testNonWordPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNonWordPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
  "startTimestamp": 1474195725266,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testWhitespacePattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWhitespacePattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
  "startTimestamp": 1474195725270,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCustomPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCustomPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
  "startTimestamp": 1474195725272,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRandomStrings(org.elasticsearch.index.analysis.PatternAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomStrings(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
  "startTimestamp": 1474195725275,
  "executionTime": 1256
 }
]

[
 "TEST_STARTED",
 "ID#testHugeDocument(org.elasticsearch.index.analysis.PatternAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHugeDocument(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
  "startTimestamp": 1474195726531,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.PatternAnalyzerTests",
  "startTimestamp": 1474195725227,
  "executionTime": 1308
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests",
   "displayName": "org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests",
   "children": [
    {
     "id": "ID#testPatternCaptureTokenFilter(org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests)",
     "displayName": "testPatternCaptureTokenFilter(org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests)",
     "methodName": "testPatternCaptureTokenFilter",
     "className": "org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests",
     "children": []
    },
    {
     "id": "ID#testNoPatterns(org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests)",
     "displayName": "testNoPatterns(org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests)",
     "methodName": "testNoPatterns",
     "className": "org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195726671
 }
]

[
 "TEST_STARTED",
 "ID#testPatternCaptureTokenFilter(org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPatternCaptureTokenFilter(org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests)",
  "startTimestamp": 1474195726693,
  "executionTime": 38
 }
]

[
 "TEST_STARTED",
 "ID#testNoPatterns(org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoPatterns(org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests)",
  "startTimestamp": 1474195726731,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests",
  "startTimestamp": 1474195726671,
  "executionTime": 67
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.PreBuiltAnalyzerTests",
   "displayName": "org.elasticsearch.index.analysis.PreBuiltAnalyzerTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.PreBuiltAnalyzerTests",
   "children": [
    {
     "id": "ID#testThatDefaultAndStandardAnalyzerAreTheSameInstance(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
     "displayName": "testThatDefaultAndStandardAnalyzerAreTheSameInstance(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
     "methodName": "testThatDefaultAndStandardAnalyzerAreTheSameInstance",
     "className": "org.elasticsearch.index.analysis.PreBuiltAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testThatInstancesAreTheSameAlwaysForKeywordAnalyzer(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
     "displayName": "testThatInstancesAreTheSameAlwaysForKeywordAnalyzer(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
     "methodName": "testThatInstancesAreTheSameAlwaysForKeywordAnalyzer",
     "className": "org.elasticsearch.index.analysis.PreBuiltAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testThatInstancesAreCachedAndReused(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
     "displayName": "testThatInstancesAreCachedAndReused(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
     "methodName": "testThatInstancesAreCachedAndReused",
     "className": "org.elasticsearch.index.analysis.PreBuiltAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testThatAnalyzersAreUsedInMapping(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
     "displayName": "testThatAnalyzersAreUsedInMapping(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
     "methodName": "testThatAnalyzersAreUsedInMapping",
     "className": "org.elasticsearch.index.analysis.PreBuiltAnalyzerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195726982
 }
]

[
 "TEST_STARTED",
 "ID#testThatDefaultAndStandardAnalyzerAreTheSameInstance(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T09:48:47,016][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T09:48:47,053][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T09:48:47,053][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T09:48:47,057][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[8784], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T09:48:47,060][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T09:48:47,060][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T09:48:47,216][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T09:48:47,216][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T09:48:47,217][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[124]}, bound_addresses {local[124]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T09:48:47,223][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{VYBI-3wGR1Ohidfc4ZsCHg}{2-iohA5CT06zCuSBf9Mftg}{local}{local[124]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T09:48:47,223][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T09:48:47,244][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T09:48:47,260][INFO ][org.elasticsearch.index.analysis] [node_s_0] [4vrE0FBsQ_yjD8LZkR4EcA] [PreBuiltAnalyzerTests#testThatDefaultAndStandardAnalyzerAreTheSameInstance]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatDefaultAndStandardAnalyzerAreTheSameInstance(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
  "startTimestamp": 1474195727002,
  "executionTime": 259
 }
]

[
 "TEST_STARTED",
 "ID#testThatInstancesAreTheSameAlwaysForKeywordAnalyzer(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T09:48:47,263][INFO ][org.elasticsearch.index.analysis] [node_s_0] [4vrE0FBsQ_yjD8LZkR4EcA] [PreBuiltAnalyzerTests#testThatInstancesAreTheSameAlwaysForKeywordAnalyzer]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatInstancesAreTheSameAlwaysForKeywordAnalyzer(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
  "startTimestamp": 1474195727261,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testThatInstancesAreCachedAndReused(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T09:48:47,267][INFO ][org.elasticsearch.index.analysis] [node_s_0] [4vrE0FBsQ_yjD8LZkR4EcA] [PreBuiltAnalyzerTests#testThatInstancesAreCachedAndReused]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatInstancesAreCachedAndReused(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
  "startTimestamp": 1474195727265,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testThatAnalyzersAreUsedInMapping(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T09:48:47,274][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T09:48:47,349][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T09:48:47,373][INFO ][org.elasticsearch.index.analysis] [node_s_0] [test] [PreBuiltAnalyzerTests#testThatAnalyzersAreUsedInMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatAnalyzersAreUsedInMapping(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
  "startTimestamp": 1474195727268,
  "executionTime": 132
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T09:48:47,401][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T09:48:47,401][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T09:48:47,402][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T09:48:47,405][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.PreBuiltAnalyzerTests",
  "startTimestamp": 1474195726982,
  "executionTime": 479
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests",
   "children": [
    {
     "id": "ID#testFillerToken(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)",
     "displayName": "testFillerToken(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)",
     "methodName": "testFillerToken",
     "className": "org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testInverseMappingNoShingles(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)",
     "displayName": "testInverseMappingNoShingles(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)",
     "methodName": "testInverseMappingNoShingles",
     "className": "org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testInverseMapping(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)",
     "displayName": "testInverseMapping(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)",
     "methodName": "testInverseMapping",
     "className": "org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testDefault(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)",
     "displayName": "testDefault(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)",
     "methodName": "testDefault",
     "className": "org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195727535
 }
]

[
 "TEST_STARTED",
 "ID#testFillerToken(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFillerToken(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)",
  "startTimestamp": 1474195727551,
  "executionTime": 169
 }
]

[
 "TEST_STARTED",
 "ID#testInverseMappingNoShingles(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInverseMappingNoShingles(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)",
  "startTimestamp": 1474195727721,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testInverseMapping(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInverseMapping(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)",
  "startTimestamp": 1474195727730,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testDefault(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefault(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)",
  "startTimestamp": 1474195727739,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests",
  "startTimestamp": 1474195727535,
  "executionTime": 215
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.SnowballAnalyzerTests",
   "displayName": "org.elasticsearch.index.analysis.SnowballAnalyzerTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.SnowballAnalyzerTests",
   "children": [
    {
     "id": "ID#testReusableTokenStream(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "displayName": "testReusableTokenStream(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "methodName": "testReusableTokenStream",
     "className": "org.elasticsearch.index.analysis.SnowballAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testTurkish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "displayName": "testTurkish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "methodName": "testTurkish",
     "className": "org.elasticsearch.index.analysis.SnowballAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testStopwords(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "displayName": "testStopwords(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "methodName": "testStopwords",
     "className": "org.elasticsearch.index.analysis.SnowballAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testEnglish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "displayName": "testEnglish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "methodName": "testEnglish",
     "className": "org.elasticsearch.index.analysis.SnowballAnalyzerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195727800
 }
]

[
 "TEST_STARTED",
 "ID#testReusableTokenStream(org.elasticsearch.index.analysis.SnowballAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReusableTokenStream(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
  "startTimestamp": 1474195727820,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTurkish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTurkish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
  "startTimestamp": 1474195727823,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testStopwords(org.elasticsearch.index.analysis.SnowballAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStopwords(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
  "startTimestamp": 1474195727828,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEnglish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnglish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
  "startTimestamp": 1474195727831,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.SnowballAnalyzerTests",
  "startTimestamp": 1474195727800,
  "executionTime": 34
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests",
   "displayName": "org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests",
   "methodName": null,
   "className": "org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests",
   "children": [
    {
     "id": "ID#testListener(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
     "displayName": "testListener(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
     "methodName": "testListener",
     "className": "org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests",
     "children": []
    },
    {
     "id": "ID#testSetNullListener(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
     "displayName": "testSetNullListener(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
     "methodName": "testSetNullListener",
     "className": "org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests",
     "children": []
    },
    {
     "id": "ID#testRejectOtherIndex(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
     "displayName": "testRejectOtherIndex(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
     "methodName": "testRejectOtherIndex",
     "className": "org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests",
     "children": []
    },
    {
     "id": "ID#testInvalidateEntries(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
     "displayName": "testInvalidateEntries(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
     "methodName": "testInvalidateEntries",
     "className": "org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195728064
 }
]

[
 "TEST_STARTED",
 "ID#testListener(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListener(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
  "startTimestamp": 1474195728084,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testSetNullListener(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetNullListener(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
  "startTimestamp": 1474195728091,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRejectOtherIndex(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRejectOtherIndex(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
  "startTimestamp": 1474195728093,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidateEntries(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidateEntries(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
  "startTimestamp": 1474195728101,
  "executionTime": 19
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests",
  "startTimestamp": 1474195728064,
  "executionTime": 58
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.codec.CodecTests",
   "displayName": "org.elasticsearch.index.codec.CodecTests",
   "methodName": null,
   "className": "org.elasticsearch.index.codec.CodecTests",
   "children": [
    {
     "id": "ID#testBestCompression(org.elasticsearch.index.codec.CodecTests)",
     "displayName": "testBestCompression(org.elasticsearch.index.codec.CodecTests)",
     "methodName": "testBestCompression",
     "className": "org.elasticsearch.index.codec.CodecTests",
     "children": []
    },
    {
     "id": "ID#testResolveDefaultCodecs(org.elasticsearch.index.codec.CodecTests)",
     "displayName": "testResolveDefaultCodecs(org.elasticsearch.index.codec.CodecTests)",
     "methodName": "testResolveDefaultCodecs",
     "className": "org.elasticsearch.index.codec.CodecTests",
     "children": []
    },
    {
     "id": "ID#testDefault(org.elasticsearch.index.codec.CodecTests)",
     "displayName": "testDefault(org.elasticsearch.index.codec.CodecTests)",
     "methodName": "testDefault",
     "className": "org.elasticsearch.index.codec.CodecTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195728323
 }
]

[
 "TEST_STARTED",
 "ID#testBestCompression(org.elasticsearch.index.codec.CodecTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBestCompression(org.elasticsearch.index.codec.CodecTests)",
  "startTimestamp": 1474195728343,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testResolveDefaultCodecs(org.elasticsearch.index.codec.CodecTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResolveDefaultCodecs(org.elasticsearch.index.codec.CodecTests)",
  "startTimestamp": 1474195728367,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testDefault(org.elasticsearch.index.codec.CodecTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefault(org.elasticsearch.index.codec.CodecTests)",
  "startTimestamp": 1474195728375,
  "executionTime": 18
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.codec.CodecTests",
  "startTimestamp": 1474195728323,
  "executionTime": 75
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.engine.InternalEngineSettingsTests",
   "displayName": "org.elasticsearch.index.engine.InternalEngineSettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.index.engine.InternalEngineSettingsTests",
   "children": [
    {
     "id": "ID#testSettingsUpdate(org.elasticsearch.index.engine.InternalEngineSettingsTests)",
     "displayName": "testSettingsUpdate(org.elasticsearch.index.engine.InternalEngineSettingsTests)",
     "methodName": "testSettingsUpdate",
     "className": "org.elasticsearch.index.engine.InternalEngineSettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195728586
 }
]

[
 "TEST_STARTED",
 "ID#testSettingsUpdate(org.elasticsearch.index.engine.InternalEngineSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:48,612][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:48,637][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:48,638][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:48,645][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[8784], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:48,648][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:48,648][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:48,764][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:48,764][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:48,765][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[125]}, bound_addresses {local[125]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:48,779][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{eQQFnrvVSxqjvMCARgq0xQ}{n1vBMOGHRqKNB1fMdUG6hw}{local}{local[125]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:48,780][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:48,792][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:48,824][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [foo] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:48,898][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[foo][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:48,930][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [60s] to [142774385138887ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:48,931][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [60s] to [142774385138887ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:48,946][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [142774385138887ms] to [717018127094727ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:48,946][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [142774385138887ms] to [717018127094727ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:48,962][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [717018127094727ms] to [1428551795073803ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:48,962][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [717018127094727ms] to [1428551795073803ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:48,986][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [1428551795073803ms] to [2760656734204663ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:48,987][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [1428551795073803ms] to [2760656734204663ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:49,004][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [2760656734204663ms] to [4311553039720169ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:49,005][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [2760656734204663ms] to [4311553039720169ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:49,019][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [4311553039720169ms] to [2846390023686896ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:49,020][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [4311553039720169ms] to [2846390023686896ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:49,036][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [2846390023686896ms] to [1268300158350507ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:49,037][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [2846390023686896ms] to [1268300158350507ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:49,053][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [1268300158350507ms] to [1355860166500084ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:49,054][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [1268300158350507ms] to [1355860166500084ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:49,067][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [1355860166500084ms] to [4364744491620098ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:49,068][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [1355860166500084ms] to [4364744491620098ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:49,083][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [4364744491620098ms] to [1034071287604000ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:49,083][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [4364744491620098ms] to [1034071287604000ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:49,098][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [1034071287604000ms] to [3214816081247802ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:49,099][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [1034071287604000ms] to [3214816081247802ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:49,114][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [3214816081247802ms] to [2548595847817405ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:49,115][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [3214816081247802ms] to [2548595847817405ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:49,129][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [2548595847817405ms] to [1809401257828014ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:49,130][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [2548595847817405ms] to [1809401257828014ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:49,143][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [1809401257828014ms] to [2281124273519574ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:49,143][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [1809401257828014ms] to [2281124273519574ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:49,158][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [2281124273519574ms] to [1082508483089021ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:49,158][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [2281124273519574ms] to [1082508483089021ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:49,173][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [1082508483089021ms] to [3790542732740106ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:49,174][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [1082508483089021ms] to [3790542732740106ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:49,188][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [3790542732740106ms] to [191385322007165ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:49,189][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [3790542732740106ms] to [191385322007165ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:49,203][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [191385322007165ms] to [2103007952046755ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:49,204][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [191385322007165ms] to [2103007952046755ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:49,222][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [2103007952046755ms] to [1000ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:49,222][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [2103007952046755ms] to [1000ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:49,236][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [1000ms] to [0ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:49,238][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [1000ms] to [0ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:49,252][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [0ms] to [1000ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:49,253][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [0ms] to [1000ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:49,265][INFO ][org.elasticsearch.index.engine] [node_s_0] [foo][0] [InternalEngineSettingsTests#testSettingsUpdate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSettingsUpdate(org.elasticsearch.index.engine.InternalEngineSettingsTests)",
  "startTimestamp": 1474195728603,
  "executionTime": 692
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:49,296][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:49,296][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:49,297][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:48:49,298][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.engine.InternalEngineSettingsTests",
  "startTimestamp": 1474195728586,
  "executionTime": 717
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.engine.VersionValueTests",
   "displayName": "org.elasticsearch.index.engine.VersionValueTests",
   "methodName": null,
   "className": "org.elasticsearch.index.engine.VersionValueTests",
   "children": [
    {
     "id": "ID#testRamBytesUsed(org.elasticsearch.index.engine.VersionValueTests)",
     "displayName": "testRamBytesUsed(org.elasticsearch.index.engine.VersionValueTests)",
     "methodName": "testRamBytesUsed",
     "className": "org.elasticsearch.index.engine.VersionValueTests",
     "children": []
    },
    {
     "id": "ID#testDeleteRamBytesUsed(org.elasticsearch.index.engine.VersionValueTests)",
     "displayName": "testDeleteRamBytesUsed(org.elasticsearch.index.engine.VersionValueTests)",
     "methodName": "testDeleteRamBytesUsed",
     "className": "org.elasticsearch.index.engine.VersionValueTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195729356
 }
]

[
 "TEST_STARTED",
 "ID#testRamBytesUsed(org.elasticsearch.index.engine.VersionValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRamBytesUsed(org.elasticsearch.index.engine.VersionValueTests)",
  "startTimestamp": 1474195729373,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testDeleteRamBytesUsed(org.elasticsearch.index.engine.VersionValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeleteRamBytesUsed(org.elasticsearch.index.engine.VersionValueTests)",
  "startTimestamp": 1474195729385,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.engine.VersionValueTests",
  "startTimestamp": 1474195729356,
  "executionTime": 33
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.BinaryDVFieldDataTests",
   "displayName": "org.elasticsearch.index.fielddata.BinaryDVFieldDataTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.BinaryDVFieldDataTests",
   "children": [
    {
     "id": "ID#testDocValue(org.elasticsearch.index.fielddata.BinaryDVFieldDataTests)",
     "displayName": "testDocValue(org.elasticsearch.index.fielddata.BinaryDVFieldDataTests)",
     "methodName": "testDocValue",
     "className": "org.elasticsearch.index.fielddata.BinaryDVFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.index.fielddata.BinaryDVFieldDataTests)",
     "displayName": "testEmpty(org.elasticsearch.index.fielddata.BinaryDVFieldDataTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.index.fielddata.BinaryDVFieldDataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195729631
 }
]

[
 "TEST_STARTED",
 "ID#testDocValue(org.elasticsearch.index.fielddata.BinaryDVFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:49,659][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:49,691][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:49,691][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:49,694][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[8784], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:49,697][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:49,697][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:49,822][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:49,823][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:49,823][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[126]}, bound_addresses {local[126]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:49,825][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{iWiLzp03RPW-VkpFcKjQRQ}{CemLRkOJRQqUWWiA8jl-wQ}{local}{local[126]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:49,826][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:49,838][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:49,855][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:49,916][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:49,968][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [BinaryDVFieldDataTests#testDocValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDocValue(org.elasticsearch.index.fielddata.BinaryDVFieldDataTests)",
  "startTimestamp": 1474195729647,
  "executionTime": 354
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.index.fielddata.BinaryDVFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:50,008][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:50,071][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:50,087][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [BinaryDVFieldDataTests#testEmpty]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.index.fielddata.BinaryDVFieldDataTests)",
  "startTimestamp": 1474195730001,
  "executionTime": 119
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:50,121][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:50,121][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:50,121][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:50,123][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.BinaryDVFieldDataTests",
  "startTimestamp": 1474195729631,
  "executionTime": 501
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.FieldDataCacheTests",
   "displayName": "org.elasticsearch.index.fielddata.FieldDataCacheTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.FieldDataCacheTests",
   "children": [
    {
     "id": "ID#testLoadGlobal_neverCacheIfFieldIsMissing(org.elasticsearch.index.fielddata.FieldDataCacheTests)",
     "displayName": "testLoadGlobal_neverCacheIfFieldIsMissing(org.elasticsearch.index.fielddata.FieldDataCacheTests)",
     "methodName": "testLoadGlobal_neverCacheIfFieldIsMissing",
     "className": "org.elasticsearch.index.fielddata.FieldDataCacheTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195730153
 }
]

[
 "TEST_STARTED",
 "ID#testLoadGlobal_neverCacheIfFieldIsMissing(org.elasticsearch.index.fielddata.FieldDataCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLoadGlobal_neverCacheIfFieldIsMissing(org.elasticsearch.index.fielddata.FieldDataCacheTests)",
  "startTimestamp": 1474195730168,
  "executionTime": 123
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.FieldDataCacheTests",
  "startTimestamp": 1474195730153,
  "executionTime": 141
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests",
   "displayName": "org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests",
   "children": [
    {
     "id": "ID#testSingleValued(org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests)",
     "displayName": "testSingleValued(org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests)",
     "methodName": "testSingleValued",
     "className": "org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests",
     "children": []
    },
    {
     "id": "ID#testMultiValued(org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests)",
     "displayName": "testMultiValued(org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests)",
     "methodName": "testMultiValued",
     "className": "org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195730417
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValued(org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValued(org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests)",
  "startTimestamp": 1474195730452,
  "executionTime": 139
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValued(org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValued(org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests)",
  "startTimestamp": 1474195730591,
  "executionTime": 16
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests",
  "startTimestamp": 1474195730417,
  "executionTime": 192
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fieldstats.FieldStatsProviderRefreshTests",
   "displayName": "org.elasticsearch.index.fieldstats.FieldStatsProviderRefreshTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fieldstats.FieldStatsProviderRefreshTests",
   "children": [
    {
     "id": "ID#testQueryRewriteOnRefresh(org.elasticsearch.index.fieldstats.FieldStatsProviderRefreshTests)",
     "displayName": "testQueryRewriteOnRefresh(org.elasticsearch.index.fieldstats.FieldStatsProviderRefreshTests)",
     "methodName": "testQueryRewriteOnRefresh",
     "className": "org.elasticsearch.index.fieldstats.FieldStatsProviderRefreshTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195730684
 }
]

[
 "TEST_STARTED",
 "ID#testQueryRewriteOnRefresh(org.elasticsearch.index.fieldstats.FieldStatsProviderRefreshTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:48:50,717][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:48:50,747][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:48:50,747][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:48:50,751][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[8784], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:48:50,753][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:48:50,753][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:48:50,845][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:48:50,846][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:48:50,846][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[127]}, bound_addresses {local[127]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:48:50,848][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{jsVrPitxSf6gEWFGyKYgMw}{-UZByBG3Rd6gwnYGP-h4nQ}{local}{local[127]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:48:50,848][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:48:50,860][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:48:50,878][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:48:50,942][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:48:51,425][INFO ][org.elasticsearch.index.fieldstats] [FieldStatsProviderRefreshTests#testQueryRewriteOnRefresh]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryRewriteOnRefresh(org.elasticsearch.index.fieldstats.FieldStatsProviderRefreshTests)",
  "startTimestamp": 1474195730707,
  "executionTime": 753
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:48:51,461][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:48:51,461][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:48:51,462][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:48:51,463][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fieldstats.FieldStatsProviderRefreshTests",
  "startTimestamp": 1474195730684,
  "executionTime": 789
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.AllFieldMapperPositionIncrementGapTests",
   "displayName": "org.elasticsearch.index.mapper.AllFieldMapperPositionIncrementGapTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.AllFieldMapperPositionIncrementGapTests",
   "children": [
    {
     "id": "ID#testDefault(org.elasticsearch.index.mapper.AllFieldMapperPositionIncrementGapTests)",
     "displayName": "testDefault(org.elasticsearch.index.mapper.AllFieldMapperPositionIncrementGapTests)",
     "methodName": "testDefault",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperPositionIncrementGapTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195731704
 }
]

[
 "TEST_STARTED",
 "ID#testDefault(org.elasticsearch.index.mapper.AllFieldMapperPositionIncrementGapTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T09:48:51,748][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T09:48:51,776][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T09:48:51,776][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T09:48:51,780][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[8784], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T09:48:51,782][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T09:48:51,782][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T09:48:51,885][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T09:48:51,885][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T09:48:51,886][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[128]}, bound_addresses {local[128]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T09:48:51,888][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{SLSbkpa7Ss232GjYTgejiA}{DTbqsbFSQ2-mLnh6Ba8pEA}{local}{local[128]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T09:48:51,888][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T09:48:51,899][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T09:48:51,914][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [auto(index api)], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T09:48:51,987][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T09:48:52,006][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/OKt3IAq2TByuJhI4XtCepQ] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T09:48:52,176][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperPositionIncrementGapTests#testDefault]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefault(org.elasticsearch.index.mapper.AllFieldMapperPositionIncrementGapTests)",
  "startTimestamp": 1474195731719,
  "executionTime": 512
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T09:48:52,231][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T09:48:52,232][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T09:48:52,232][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T09:48:52,234][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.AllFieldMapperPositionIncrementGapTests",
  "startTimestamp": 1474195731704,
  "executionTime": 537
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.AllFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.AllFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.AllFieldTypeTests",
   "children": [
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.AllFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.AllFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.AllFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.AllFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.AllFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.AllFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.AllFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.AllFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.AllFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.AllFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.AllFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.AllFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.AllFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.AllFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.AllFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195732497
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.AllFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.AllFieldTypeTests)",
  "startTimestamp": 1474195732507,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.AllFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.AllFieldTypeTests)",
  "startTimestamp": 1474195732508,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.AllFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.AllFieldTypeTests)",
  "startTimestamp": 1474195732509,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.AllFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.AllFieldTypeTests)",
  "startTimestamp": 1474195732511,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.AllFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.AllFieldTypeTests)",
  "startTimestamp": 1474195732512,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.AllFieldTypeTests",
  "startTimestamp": 1474195732497,
  "executionTime": 17
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.BinaryFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.BinaryFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.BinaryFieldMapperTests",
   "children": [
    {
     "id": "ID#testDefaultMapping(org.elasticsearch.index.mapper.BinaryFieldMapperTests)",
     "displayName": "testDefaultMapping(org.elasticsearch.index.mapper.BinaryFieldMapperTests)",
     "methodName": "testDefaultMapping",
     "className": "org.elasticsearch.index.mapper.BinaryFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testStoredValue(org.elasticsearch.index.mapper.BinaryFieldMapperTests)",
     "displayName": "testStoredValue(org.elasticsearch.index.mapper.BinaryFieldMapperTests)",
     "methodName": "testStoredValue",
     "className": "org.elasticsearch.index.mapper.BinaryFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testEmptyName(org.elasticsearch.index.mapper.BinaryFieldMapperTests)",
     "displayName": "testEmptyName(org.elasticsearch.index.mapper.BinaryFieldMapperTests)",
     "methodName": "testEmptyName",
     "className": "org.elasticsearch.index.mapper.BinaryFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195732763
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultMapping(org.elasticsearch.index.mapper.BinaryFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:52,785][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:52,802][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:52,802][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:52,806][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[8784], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:52,808][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:52,809][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:52,921][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:52,921][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:52,922][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[129]}, bound_addresses {local[129]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:52,924][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{Ts3moYo_QuGRbhT8uv6t0g}{JDWddXHkT8OnGQTzO8p_xQ}{local}{local[129]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:52,925][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:52,937][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:52,954][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:53,004][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:53,016][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [BinaryFieldMapperTests#testDefaultMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultMapping(org.elasticsearch.index.mapper.BinaryFieldMapperTests)",
  "startTimestamp": 1474195732780,
  "executionTime": 289
 }
]

[
 "TEST_STARTED",
 "ID#testStoredValue(org.elasticsearch.index.mapper.BinaryFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:53,075][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:53,128][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:53,139][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [BinaryFieldMapperTests#testStoredValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStoredValue(org.elasticsearch.index.mapper.BinaryFieldMapperTests)",
  "startTimestamp": 1474195733069,
  "executionTime": 160
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyName(org.elasticsearch.index.mapper.BinaryFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:53,236][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:53,296][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:53,328][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_old] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:53,387][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_old][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:53,400][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test_old] [BinaryFieldMapperTests#testEmptyName]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyName(org.elasticsearch.index.mapper.BinaryFieldMapperTests)",
  "startTimestamp": 1474195733229,
  "executionTime": 232
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:53,461][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:53,462][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:53,462][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:48:53,463][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.BinaryFieldMapperTests",
  "startTimestamp": 1474195732763,
  "executionTime": 706
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.CompletionFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.CompletionFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.CompletionFieldTypeTests",
   "children": [
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.CompletionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.CompletionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.CompletionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.CompletionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.CompletionFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195733555
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.CompletionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
  "startTimestamp": 1474195733569,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.CompletionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
  "startTimestamp": 1474195733574,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.CompletionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
  "startTimestamp": 1474195733576,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.CompletionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
  "startTimestamp": 1474195733578,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.CompletionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
  "startTimestamp": 1474195733580,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.CompletionFieldTypeTests",
  "startTimestamp": 1474195733555,
  "executionTime": 28
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.CompoundTypesTests",
   "displayName": "org.elasticsearch.index.mapper.CompoundTypesTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.CompoundTypesTests",
   "children": [
    {
     "id": "ID#testBackCompatStringType(org.elasticsearch.index.mapper.CompoundTypesTests)",
     "displayName": "testBackCompatStringType(org.elasticsearch.index.mapper.CompoundTypesTests)",
     "methodName": "testBackCompatStringType",
     "className": "org.elasticsearch.index.mapper.CompoundTypesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195733810
 }
]

[
 "TEST_STARTED",
 "ID#testBackCompatStringType(org.elasticsearch.index.mapper.CompoundTypesTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:53,831][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:53,850][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:53,850][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:53,853][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[8784], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:53,855][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:53,855][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:53,943][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:53,943][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:53,944][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[130]}, bound_addresses {local[130]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:53,944][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{BiTPhxX6RSm-QDmtFqPgIA}{y7nvFiuOSASWdGi69U6g9g}{local}{local[130]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:53,945][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:53,952][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:53,963][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:54,010][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:54,021][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompoundTypesTests#testBackCompatStringType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBackCompatStringType(org.elasticsearch.index.mapper.CompoundTypesTests)",
  "startTimestamp": 1474195733824,
  "executionTime": 223
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:54,048][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:54,049][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:54,049][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:54,050][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.CompoundTypesTests",
  "startTimestamp": 1474195733810,
  "executionTime": 246
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.CopyToMapperTests",
   "displayName": "org.elasticsearch.index.mapper.CopyToMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.CopyToMapperTests",
   "children": [
    {
     "id": "ID#testCopyToFieldsParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "displayName": "testCopyToFieldsParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "methodName": "testCopyToFieldsParsing",
     "className": "org.elasticsearch.index.mapper.CopyToMapperTests",
     "children": []
    },
    {
     "id": "ID#testCopyToStrictDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "displayName": "testCopyToStrictDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "methodName": "testCopyToStrictDynamicInnerObjectParsing",
     "className": "org.elasticsearch.index.mapper.CopyToMapperTests",
     "children": []
    },
    {
     "id": "ID#testCopyToInnerStrictDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "displayName": "testCopyToInnerStrictDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "methodName": "testCopyToInnerStrictDynamicInnerObjectParsing",
     "className": "org.elasticsearch.index.mapper.CopyToMapperTests",
     "children": []
    },
    {
     "id": "ID#testCopyToDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "displayName": "testCopyToDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "methodName": "testCopyToDynamicInnerObjectParsing",
     "className": "org.elasticsearch.index.mapper.CopyToMapperTests",
     "children": []
    },
    {
     "id": "ID#testCopyToDynamicNestedObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "displayName": "testCopyToDynamicNestedObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "methodName": "testCopyToDynamicNestedObjectParsing",
     "className": "org.elasticsearch.index.mapper.CopyToMapperTests",
     "children": []
    },
    {
     "id": "ID#testCopyToFieldMerge(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "displayName": "testCopyToFieldMerge(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "methodName": "testCopyToFieldMerge",
     "className": "org.elasticsearch.index.mapper.CopyToMapperTests",
     "children": []
    },
    {
     "id": "ID#testCopyToDynamicInnerInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "displayName": "testCopyToDynamicInnerInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "methodName": "testCopyToDynamicInnerInnerObjectParsing",
     "className": "org.elasticsearch.index.mapper.CopyToMapperTests",
     "children": []
    },
    {
     "id": "ID#testCopyToNestedField(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "displayName": "testCopyToNestedField(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "methodName": "testCopyToNestedField",
     "className": "org.elasticsearch.index.mapper.CopyToMapperTests",
     "children": []
    },
    {
     "id": "ID#testCopyToFieldsInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "displayName": "testCopyToFieldsInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "methodName": "testCopyToFieldsInnerObjectParsing",
     "className": "org.elasticsearch.index.mapper.CopyToMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195734077
 }
]

[
 "TEST_STARTED",
 "ID#testCopyToFieldsParsing(org.elasticsearch.index.mapper.CopyToMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:54,105][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:54,132][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:54,132][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:54,136][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[8784], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:54,139][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:54,139][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:54,241][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:54,241][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:54,242][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[131]}, bound_addresses {local[131]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:54,243][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{adGT5lKPSY-VCbyZ5TNpug}{1r_e0pxTT7yg9Ru46bubFQ}{local}{local[131]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:54,243][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:54,254][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:54,272][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:54,337][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:54,352][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/dJM-K8czT0yukmfKL0HLGw] create_mapping [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:54,368][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/dJM-K8czT0yukmfKL0HLGw] update_mapping [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:54,379][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CopyToMapperTests#testCopyToFieldsParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyToFieldsParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
  "startTimestamp": 1474195734095,
  "executionTime": 318
 }
]

[
 "TEST_STARTED",
 "ID#testCopyToStrictDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:54,420][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:54,491][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:54,505][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CopyToMapperTests#testCopyToStrictDynamicInnerObjectParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyToStrictDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
  "startTimestamp": 1474195734414,
  "executionTime": 135
 }
]

[
 "TEST_STARTED",
 "ID#testCopyToInnerStrictDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:54,556][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:54,611][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:54,621][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CopyToMapperTests#testCopyToInnerStrictDynamicInnerObjectParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyToInnerStrictDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
  "startTimestamp": 1474195734549,
  "executionTime": 94
 }
]

[
 "TEST_STARTED",
 "ID#testCopyToDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:54,648][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:54,707][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:54,721][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CopyToMapperTests#testCopyToDynamicInnerObjectParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyToDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
  "startTimestamp": 1474195734643,
  "executionTime": 124
 }
]

[
 "TEST_STARTED",
 "ID#testCopyToDynamicNestedObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:54,774][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:54,821][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:54,830][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CopyToMapperTests#testCopyToDynamicNestedObjectParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyToDynamicNestedObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
  "startTimestamp": 1474195734767,
  "executionTime": 91
 }
]

[
 "TEST_STARTED",
 "ID#testCopyToFieldMerge(org.elasticsearch.index.mapper.CopyToMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:54,864][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:54,917][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:54,930][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CopyToMapperTests#testCopyToFieldMerge]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyToFieldMerge(org.elasticsearch.index.mapper.CopyToMapperTests)",
  "startTimestamp": 1474195734859,
  "executionTime": 97
 }
]

[
 "TEST_STARTED",
 "ID#testCopyToDynamicInnerInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:54,962][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:55,023][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:55,038][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CopyToMapperTests#testCopyToDynamicInnerInnerObjectParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyToDynamicInnerInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
  "startTimestamp": 1474195734956,
  "executionTime": 117
 }
]

[
 "TEST_STARTED",
 "ID#testCopyToNestedField(org.elasticsearch.index.mapper.CopyToMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:55,080][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:55,138][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:55,152][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CopyToMapperTests#testCopyToNestedField]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyToNestedField(org.elasticsearch.index.mapper.CopyToMapperTests)",
  "startTimestamp": 1474195735074,
  "executionTime": 112
 }
]

[
 "TEST_STARTED",
 "ID#testCopyToFieldsInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:55,192][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:55,243][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:55,257][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CopyToMapperTests#testCopyToFieldsInnerObjectParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyToFieldsInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
  "startTimestamp": 1474195735186,
  "executionTime": 97
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:55,283][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:55,283][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:55,283][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:55,284][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.CopyToMapperTests",
  "startTimestamp": 1474195734077,
  "executionTime": 1222
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.CustomBoostMappingTests",
   "displayName": "org.elasticsearch.index.mapper.CustomBoostMappingTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.CustomBoostMappingTests",
   "children": [
    {
     "id": "ID#testBackCompatFieldMappingBoostValues(org.elasticsearch.index.mapper.CustomBoostMappingTests)",
     "displayName": "testBackCompatFieldMappingBoostValues(org.elasticsearch.index.mapper.CustomBoostMappingTests)",
     "methodName": "testBackCompatFieldMappingBoostValues",
     "className": "org.elasticsearch.index.mapper.CustomBoostMappingTests",
     "children": []
    },
    {
     "id": "ID#testBackCompatCustomBoostValues(org.elasticsearch.index.mapper.CustomBoostMappingTests)",
     "displayName": "testBackCompatCustomBoostValues(org.elasticsearch.index.mapper.CustomBoostMappingTests)",
     "methodName": "testBackCompatCustomBoostValues",
     "className": "org.elasticsearch.index.mapper.CustomBoostMappingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195735340
 }
]

[
 "TEST_STARTED",
 "ID#testBackCompatFieldMappingBoostValues(org.elasticsearch.index.mapper.CustomBoostMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:55,363][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:55,391][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:55,391][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:55,394][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[8784], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:55,397][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:55,397][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:55,475][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:55,476][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:55,476][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[132]}, bound_addresses {local[132]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:55,476][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{8dhT3WYtQRmVquDHxoYbdQ}{gjkL43VHT8-CdPobu8jlqg}{local}{local[132]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:55,477][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:55,490][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:55,503][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:55,550][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:55,574][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [text] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:55,622][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[text][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:55,636][INFO ][org.elasticsearch.index.mapper] [node_s_0] [text] [CustomBoostMappingTests#testBackCompatFieldMappingBoostValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBackCompatFieldMappingBoostValues(org.elasticsearch.index.mapper.CustomBoostMappingTests)",
  "startTimestamp": 1474195735355,
  "executionTime": 327
 }
]

[
 "TEST_STARTED",
 "ID#testBackCompatCustomBoostValues(org.elasticsearch.index.mapper.CustomBoostMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:55,687][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:55,727][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:55,738][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:55,738][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:55,738][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:55,738][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:55,739][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:55,739][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:55,739][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:55,740][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CustomBoostMappingTests#testBackCompatCustomBoostValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBackCompatCustomBoostValues(org.elasticsearch.index.mapper.CustomBoostMappingTests)",
  "startTimestamp": 1474195735682,
  "executionTime": 82
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:55,764][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:55,764][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:55,765][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:55,766][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.CustomBoostMappingTests",
  "startTimestamp": 1474195735340,
  "executionTime": 434
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.DateFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.DateFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
   "children": [
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testIsFieldWithinQueryEmptyReader(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "displayName": "testIsFieldWithinQueryEmptyReader(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "methodName": "testIsFieldWithinQueryEmptyReader",
     "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueFormat(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "displayName": "testValueFormat(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "methodName": "testValueFormat",
     "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testTermQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "displayName": "testTermQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "methodName": "testTermQuery",
     "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueForSearch(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "displayName": "testValueForSearch(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "methodName": "testValueForSearch",
     "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "displayName": "testIsFieldWithinQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "methodName": "testIsFieldWithinQuery",
     "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testRangeQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "displayName": "testRangeQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "methodName": "testRangeQuery",
     "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195735864
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.DateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.DateFieldTypeTests)",
  "startTimestamp": 1474195735879,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsFieldWithinQueryEmptyReader(org.elasticsearch.index.mapper.DateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsFieldWithinQueryEmptyReader(org.elasticsearch.index.mapper.DateFieldTypeTests)",
  "startTimestamp": 1474195735882,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testValueFormat(org.elasticsearch.index.mapper.DateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueFormat(org.elasticsearch.index.mapper.DateFieldTypeTests)",
  "startTimestamp": 1474195735887,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.DateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.DateFieldTypeTests)",
  "startTimestamp": 1474195735890,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.DateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.DateFieldTypeTests)",
  "startTimestamp": 1474195735892,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.DateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.DateFieldTypeTests)",
  "startTimestamp": 1474195735894,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTermQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)",
  "startTimestamp": 1474195735896,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testValueForSearch(org.elasticsearch.index.mapper.DateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueForSearch(org.elasticsearch.index.mapper.DateFieldTypeTests)",
  "startTimestamp": 1474195735899,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)",
  "startTimestamp": 1474195735901,
  "executionTime": 98
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.DateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.DateFieldTypeTests)",
  "startTimestamp": 1474195735999,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRangeQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRangeQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)",
  "startTimestamp": 1474195736001,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.DateFieldTypeTests",
  "startTimestamp": 1474195735864,
  "executionTime": 142
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.DocumentParserTests",
   "displayName": "org.elasticsearch.index.mapper.DocumentParserTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.DocumentParserTests",
   "children": [
    {
     "id": "ID#testDynamicStrictLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicStrictLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicStrictLongArray",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testMappedLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testMappedLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testMappedLongArray",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testFieldDisabled(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testFieldDisabled(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testFieldDisabled",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameLongArrayWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameLongArrayWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameLongArrayWithExistingParentWrongType",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testSimpleParserNoTypeNoId(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testSimpleParserNoTypeNoId(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testSimpleParserNoTypeNoId",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicStrictValue(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicStrictValue(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicStrictValue",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testSimpleParser(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testSimpleParser(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testSimpleParser",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testNoDocumentSent(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testNoDocumentSent(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testNoDocumentSent",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameLongWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameLongWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameLongWithExistingParentWrongType",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicStrictDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicStrictDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicStrictDottedFieldNameLong",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testNoLevelWithFieldTypeAsValue(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testNoLevelWithFieldTypeAsValue(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testNoLevelWithFieldTypeAsValue",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameObjectWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameObjectWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameObjectWithParentTemplate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicFalseDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicFalseDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicFalseDottedFieldNameLongArray",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameLongWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameLongWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameLongWithParentTemplate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testMappedGeoPointArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testMappedGeoPointArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testMappedGeoPointArray",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicFalseDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicFalseDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicFalseDottedFieldNameLong",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testTypeLevelWithFieldTypeAsValueNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testTypeLevelWithFieldTypeAsValueNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testTypeLevelWithFieldTypeAsValueNotFirst",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testAttributes(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testAttributes(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testAttributes",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testTypeLevelWithFieldTypeAsObjectNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testTypeLevelWithFieldTypeAsObjectNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testTypeLevelWithFieldTypeAsObjectNotFirst",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testTypeDisabled(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testTypeDisabled(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testTypeDisabled",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicFalseDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicFalseDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicFalseDottedFieldNameObject",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicFalseNull(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicFalseNull(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicFalseNull",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testNoLevelWithFieldTypeAsValueNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testNoLevelWithFieldTypeAsValueNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testNoLevelWithFieldTypeAsValueNotFirst",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDocumentContainsMetadataField(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDocumentContainsMetadataField(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDocumentContainsMetadataField",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameLong",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicGeoPointArrayWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicGeoPointArrayWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicGeoPointArrayWithTemplate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameLongArrayWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameLongArrayWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameLongArrayWithParentTemplate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testTypeLevelWithFieldTypeAsValue(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testTypeLevelWithFieldTypeAsValue(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testTypeLevelWithFieldTypeAsValue",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicObjectWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicObjectWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicObjectWithTemplate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicStrictDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicStrictDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicStrictDottedFieldNameLongArray",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testIncludeInAllPropagation(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testIncludeInAllPropagation(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testIncludeInAllPropagation",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testMappedNullValue(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testMappedNullValue(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testMappedNullValue",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameLongWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameLongWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameLongWithExistingParent",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testEmptyMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testEmptyMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testEmptyMappingUpdate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testPropagateDynamicWithExistingMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testPropagateDynamicWithExistingMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testPropagateDynamicWithExistingMapper",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicStrictNull(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicStrictNull(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicStrictNull",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicLongArrayWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicLongArrayWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicLongArrayWithTemplate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testParseToJsonAndParse(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testParseToJsonAndParse(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testParseToJsonAndParse",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicStrictDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicStrictDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicStrictDottedFieldNameObject",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameObjectWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameObjectWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameObjectWithExistingParent",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameObject",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameObjectWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameObjectWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameObjectWithExistingParentWrongType",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testNoLevel(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testNoLevel(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testNoLevel",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testNoLevelWithFieldTypeAsObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testNoLevelWithFieldTypeAsObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testNoLevelWithFieldTypeAsObject",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDotsWithExistingMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDotsWithExistingMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDotsWithExistingMapper",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDeepSubfieldAfterSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDeepSubfieldAfterSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDeepSubfieldAfterSubfieldMappingUpdate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameLongArray",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicFalseObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicFalseObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicFalseObject",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testTypeLevel(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testTypeLevel(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testTypeLevel",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testObjectMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testObjectMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testObjectMappingUpdate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicLongArray",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicRootFallback(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicRootFallback(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicRootFallback",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDeepSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDeepSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDeepSubfieldMappingUpdate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testTypeLevelWithFieldTypeAsObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testTypeLevelWithFieldTypeAsObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testTypeLevelWithFieldTypeAsObject",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicFalseValue(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicFalseValue(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicFalseValue",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicFalseLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicFalseLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicFalseLongArray",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testNoLevelWithFieldTypeAsObjectNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testNoLevelWithFieldTypeAsObjectNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testNoLevelWithFieldTypeAsObjectNotFirst",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testSingleMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testSingleMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testSingleMappingUpdate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testSubfieldMappingUpdate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testMultipleSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testMultipleSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testMultipleSubfieldMappingUpdate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicStrictObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicStrictObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicStrictObject",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testPropagateDynamicWithDynamicMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testPropagateDynamicWithDynamicMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testPropagateDynamicWithDynamicMapper",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testSimpleMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testSimpleMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testSimpleMapper",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameLongArrayWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameLongArrayWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameLongArrayWithExistingParent",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195736143
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicStrictLongArray(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:56,190][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:56,214][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:56,214][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:56,217][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[8784], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:56,220][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:56,220][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:56,312][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:56,312][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:56,313][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[133]}, bound_addresses {local[133]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:56,314][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{V3z5xnZ3SlWN5Kphs1n_tA}{m0rWg2e2Tk-RV6F2JtkmBw}{local}{local[133]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:56,315][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:56,325][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:56,342][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:56,386][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:56,397][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicStrictLongArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicStrictLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195736181,
  "executionTime": 246
 }
]

[
 "TEST_STARTED",
 "ID#testMappedLongArray(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:56,433][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:56,486][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:56,497][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testMappedLongArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMappedLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195736427,
  "executionTime": 105
 }
]

[
 "TEST_STARTED",
 "ID#testFieldDisabled(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:56,538][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:56,569][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:56,577][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testFieldDisabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldDisabled(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195736532,
  "executionTime": 85
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameLongArrayWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:56,624][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:56,683][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:56,695][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameLongArrayWithExistingParentWrongType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameLongArrayWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195736618,
  "executionTime": 101
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleParserNoTypeNoId(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:56,749][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:56,995][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,014][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testSimpleParserNoTypeNoId]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleParserNoTypeNoId(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195736719,
  "executionTime": 318
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicStrictValue(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,042][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,076][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,086][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicStrictValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicStrictValue(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195737038,
  "executionTime": 108
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleParser(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,152][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,194][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,211][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testSimpleParser]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleParser(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195737146,
  "executionTime": 92
 }
]

[
 "TEST_STARTED",
 "ID#testNoDocumentSent(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,243][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,282][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,292][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testNoDocumentSent]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoDocumentSent(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195737238,
  "executionTime": 83
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameLongWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,328][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,369][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,390][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameLongWithExistingParentWrongType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameLongWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195737322,
  "executionTime": 94
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicStrictDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,429][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,527][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,540][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicStrictDottedFieldNameLong]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicStrictDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195737416,
  "executionTime": 155
 }
]

[
 "TEST_STARTED",
 "ID#testNoLevelWithFieldTypeAsValue(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,576][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,624][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,640][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testNoLevelWithFieldTypeAsValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoLevelWithFieldTypeAsValue(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195737571,
  "executionTime": 101
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameObjectWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,678][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,725][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,737][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameObjectWithParentTemplate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameObjectWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195737672,
  "executionTime": 89
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicFalseDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,767][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,810][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,821][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicFalseDottedFieldNameLongArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicFalseDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195737762,
  "executionTime": 79
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameLongWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,846][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,892][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,904][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameLongWithParentTemplate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameLongWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195737841,
  "executionTime": 90
 }
]

[
 "TEST_STARTED",
 "ID#testMappedGeoPointArray(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,938][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:58,011][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:58,025][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testMappedGeoPointArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMappedGeoPointArray(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195737931,
  "executionTime": 119
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicFalseDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:58,057][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:58,113][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:58,131][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicFalseDottedFieldNameLong]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicFalseDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195738050,
  "executionTime": 117
 }
]

[
 "TEST_STARTED",
 "ID#testTypeLevelWithFieldTypeAsValueNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:58,173][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:58,231][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:58,252][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testTypeLevelWithFieldTypeAsValueNotFirst]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeLevelWithFieldTypeAsValueNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195738167,
  "executionTime": 150
 }
]

[
 "TEST_STARTED",
 "ID#testAttributes(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:58,325][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:58,384][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:58,397][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testAttributes]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAttributes(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195738317,
  "executionTime": 134
 }
]

[
 "TEST_STARTED",
 "ID#testTypeLevelWithFieldTypeAsObjectNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:58,457][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:58,504][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:58,517][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testTypeLevelWithFieldTypeAsObjectNotFirst]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeLevelWithFieldTypeAsObjectNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195738452,
  "executionTime": 88
 }
]

[
 "TEST_STARTED",
 "ID#testTypeDisabled(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:58,546][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:58,597][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:58,620][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testTypeDisabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeDisabled(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195738541,
  "executionTime": 105
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicFalseDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:58,654][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:58,716][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:58,730][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicFalseDottedFieldNameObject]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicFalseDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195738647,
  "executionTime": 116
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicFalseNull(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:58,770][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:58,836][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:58,849][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicFalseNull]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicFalseNull(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195738763,
  "executionTime": 116
 }
]

[
 "TEST_STARTED",
 "ID#testNoLevelWithFieldTypeAsValueNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:58,883][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:58,917][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:58,927][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testNoLevelWithFieldTypeAsValueNotFirst]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoLevelWithFieldTypeAsValueNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195738879,
  "executionTime": 69
 }
]

[
 "TEST_STARTED",
 "ID#testDocumentContainsMetadataField(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:58,954][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:58,999][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:59,010][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDocumentContainsMetadataField]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDocumentContainsMetadataField(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195738948,
  "executionTime": 96
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:59,050][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:59,090][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:59,099][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameLong]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195739044,
  "executionTime": 75
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicGeoPointArrayWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:59,123][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:59,163][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:59,174][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicGeoPointArrayWithTemplate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicGeoPointArrayWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195739119,
  "executionTime": 78
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameLongArrayWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:59,201][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:59,242][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:59,255][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameLongArrayWithParentTemplate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameLongArrayWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195739197,
  "executionTime": 170
 }
]

[
 "TEST_STARTED",
 "ID#testTypeLevelWithFieldTypeAsValue(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:59,376][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:59,539][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:59,559][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testTypeLevelWithFieldTypeAsValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeLevelWithFieldTypeAsValue(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195739367,
  "executionTime": 251
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicObjectWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:59,623][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:59,688][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:59,703][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicObjectWithTemplate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicObjectWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195739618,
  "executionTime": 181
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicStrictDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:59,805][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:00,080][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:00,100][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicStrictDottedFieldNameLongArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicStrictDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195739799,
  "executionTime": 398
 }
]

[
 "TEST_STARTED",
 "ID#testIncludeInAllPropagation(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:00,214][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:00,294][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:00,311][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testIncludeInAllPropagation]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludeInAllPropagation(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195740197,
  "executionTime": 194
 }
]

[
 "TEST_STARTED",
 "ID#testMappedNullValue(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:00,397][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:00,562][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:00,580][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testMappedNullValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMappedNullValue(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195740391,
  "executionTime": 220
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameLongWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:00,617][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:01,009][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:01,049][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameLongWithExistingParent]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameLongWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195740611,
  "executionTime": 558
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:01,176][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:01,254][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:01,267][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testEmptyMappingUpdate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195741169,
  "executionTime": 162
 }
]

[
 "TEST_STARTED",
 "ID#testPropagateDynamicWithExistingMapper(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:01,339][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:01,389][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:01,402][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testPropagateDynamicWithExistingMapper]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPropagateDynamicWithExistingMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195741332,
  "executionTime": 102
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicStrictNull(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:01,441][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:01,512][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:01,526][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicStrictNull]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicStrictNull(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195741434,
  "executionTime": 133
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicLongArrayWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:01,573][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:01,790][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:01,803][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicLongArrayWithTemplate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicLongArrayWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195741567,
  "executionTime": 287
 }
]

[
 "TEST_STARTED",
 "ID#testParseToJsonAndParse(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:01,864][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:01,943][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:01,958][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testParseToJsonAndParse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseToJsonAndParse(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195741854,
  "executionTime": 146
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicStrictDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:02,006][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:02,098][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:02,111][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicStrictDottedFieldNameObject]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicStrictDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195742000,
  "executionTime": 149
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameObjectWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:02,156][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:02,212][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:02,234][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameObjectWithExistingParent]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameObjectWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195742149,
  "executionTime": 116
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:02,297][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:02,370][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:02,427][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameObject]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195742265,
  "executionTime": 197
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameObjectWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:02,468][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:02,578][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:02,629][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameObjectWithExistingParentWrongType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameObjectWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195742462,
  "executionTime": 211
 }
]

[
 "TEST_STARTED",
 "ID#testNoLevel(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:02,679][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:02,761][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:02,773][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testNoLevel]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoLevel(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195742673,
  "executionTime": 130
 }
]

[
 "TEST_STARTED",
 "ID#testNoLevelWithFieldTypeAsObject(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:02,810][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:02,884][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:02,902][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testNoLevelWithFieldTypeAsObject]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoLevelWithFieldTypeAsObject(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195742803,
  "executionTime": 135
 }
]

[
 "TEST_STARTED",
 "ID#testDotsWithExistingMapper(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:02,944][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:03,005][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:03,019][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDotsWithExistingMapper]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDotsWithExistingMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195742938,
  "executionTime": 128
 }
]

[
 "TEST_STARTED",
 "ID#testDeepSubfieldAfterSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:03,072][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:03,121][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:03,138][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDeepSubfieldAfterSubfieldMappingUpdate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeepSubfieldAfterSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195743066,
  "executionTime": 114
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:03,187][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:03,765][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:03,881][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameLongArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195743180,
  "executionTime": 1435
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicFalseObject(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:04,621][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:05,288][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:05,474][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicFalseObject]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicFalseObject(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195744615,
  "executionTime": 888
 }
]

[
 "TEST_STARTED",
 "ID#testTypeLevel(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:05,535][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:05,761][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:05,776][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testTypeLevel]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeLevel(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195745503,
  "executionTime": 304
 }
]

[
 "TEST_STARTED",
 "ID#testObjectMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:05,813][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:05,989][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:06,006][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testObjectMappingUpdate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testObjectMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195745807,
  "executionTime": 324
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicLongArray(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:06,137][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:06,197][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:06,211][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicLongArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195746131,
  "executionTime": 118
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicRootFallback(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:06,260][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:06,340][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:06,368][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicRootFallback]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicRootFallback(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195746249,
  "executionTime": 282
 }
]

[
 "TEST_STARTED",
 "ID#testDeepSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:06,538][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:06,649][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:06,666][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDeepSubfieldMappingUpdate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeepSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195746531,
  "executionTime": 170
 }
]

[
 "TEST_STARTED",
 "ID#testTypeLevelWithFieldTypeAsObject(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:06,707][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:06,811][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:06,844][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testTypeLevelWithFieldTypeAsObject]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeLevelWithFieldTypeAsObject(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195746701,
  "executionTime": 212
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicFalseValue(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:06,919][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:07,042][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:07,074][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicFalseValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicFalseValue(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195746913,
  "executionTime": 193
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicFalseLongArray(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:07,112][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:07,188][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:07,208][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicFalseLongArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicFalseLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195747107,
  "executionTime": 127
 }
]

[
 "TEST_STARTED",
 "ID#testNoLevelWithFieldTypeAsObjectNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:07,241][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:07,308][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:07,324][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testNoLevelWithFieldTypeAsObjectNotFirst]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoLevelWithFieldTypeAsObjectNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195747234,
  "executionTime": 146
 }
]

[
 "TEST_STARTED",
 "ID#testSingleMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:07,387][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:07,444][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:07,467][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testSingleMappingUpdate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195747380,
  "executionTime": 112
 }
]

[
 "TEST_STARTED",
 "ID#testSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:07,499][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:07,556][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:07,572][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testSubfieldMappingUpdate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195747492,
  "executionTime": 110
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:07,608][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:07,657][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:07,669][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testMultipleSubfieldMappingUpdate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195747602,
  "executionTime": 119
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicStrictObject(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:07,728][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:07,783][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:07,797][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicStrictObject]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicStrictObject(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195747721,
  "executionTime": 107
 }
]

[
 "TEST_STARTED",
 "ID#testPropagateDynamicWithDynamicMapper(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:07,834][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:07,897][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:07,909][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testPropagateDynamicWithDynamicMapper]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPropagateDynamicWithDynamicMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195747828,
  "executionTime": 118
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleMapper(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:07,953][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:07,995][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:08,010][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testSimpleMapper]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195747946,
  "executionTime": 89
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameLongArrayWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:08,040][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:08,078][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:08,092][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameLongArrayWithExistingParent]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameLongArrayWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1474195748035,
  "executionTime": 83
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:08,118][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:08,118][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:08,119][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:08,120][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.DocumentParserTests",
  "startTimestamp": 1474195736143,
  "executionTime": 11988
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.GeoPointFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.GeoPointFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.GeoPointFieldTypeTests",
   "children": [
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195748346
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)",
  "startTimestamp": 1474195748365,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)",
  "startTimestamp": 1474195748367,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)",
  "startTimestamp": 1474195748369,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)",
  "startTimestamp": 1474195748372,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)",
  "startTimestamp": 1474195748374,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.GeoPointFieldTypeTests",
  "startTimestamp": 1474195748346,
  "executionTime": 31
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.JavaMultiFieldMergeTests",
   "displayName": "org.elasticsearch.index.mapper.JavaMultiFieldMergeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.JavaMultiFieldMergeTests",
   "children": [
    {
     "id": "ID#testUpgradeFromMultiFieldTypeToMultiFields(org.elasticsearch.index.mapper.JavaMultiFieldMergeTests)",
     "displayName": "testUpgradeFromMultiFieldTypeToMultiFields(org.elasticsearch.index.mapper.JavaMultiFieldMergeTests)",
     "methodName": "testUpgradeFromMultiFieldTypeToMultiFields",
     "className": "org.elasticsearch.index.mapper.JavaMultiFieldMergeTests",
     "children": []
    },
    {
     "id": "ID#testMergeMultiField(org.elasticsearch.index.mapper.JavaMultiFieldMergeTests)",
     "displayName": "testMergeMultiField(org.elasticsearch.index.mapper.JavaMultiFieldMergeTests)",
     "methodName": "testMergeMultiField",
     "className": "org.elasticsearch.index.mapper.JavaMultiFieldMergeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195748786
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeFromMultiFieldTypeToMultiFields(org.elasticsearch.index.mapper.JavaMultiFieldMergeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:08,808][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:08,830][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:08,830][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:08,833][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[8784], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:08,836][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:08,836][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:08,933][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:08,933][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:08,934][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[134]}, bound_addresses {local[134]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:08,935][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{bf6qQDxaSfWYoRul17DC_Q}{k7Gol-BWTfaAT4p0vvazbg}{local}{local[134]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:08,935][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:08,948][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:09,003][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:09,077][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:09,138][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [JavaMultiFieldMergeTests#testUpgradeFromMultiFieldTypeToMultiFields]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeFromMultiFieldTypeToMultiFields(org.elasticsearch.index.mapper.JavaMultiFieldMergeTests)",
  "startTimestamp": 1474195748800,
  "executionTime": 362
 }
]

[
 "TEST_STARTED",
 "ID#testMergeMultiField(org.elasticsearch.index.mapper.JavaMultiFieldMergeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:09,169][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:09,220][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:09,262][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [JavaMultiFieldMergeTests#testMergeMultiField]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeMultiField(org.elasticsearch.index.mapper.JavaMultiFieldMergeTests)",
  "startTimestamp": 1474195749163,
  "executionTime": 146
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:09,310][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:09,310][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:09,310][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:09,311][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.JavaMultiFieldMergeTests",
  "startTimestamp": 1474195748786,
  "executionTime": 531
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.KeywordFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.KeywordFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.KeywordFieldMapperTests",
   "children": [
    {
     "id": "ID#testIndexOptions(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
     "displayName": "testIndexOptions(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
     "methodName": "testIndexOptions",
     "className": "org.elasticsearch.index.mapper.KeywordFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testBoostImplicitlyEnablesNormsOnOldIndex(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
     "displayName": "testBoostImplicitlyEnablesNormsOnOldIndex(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
     "methodName": "testBoostImplicitlyEnablesNormsOnOldIndex",
     "className": "org.elasticsearch.index.mapper.KeywordFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testEmptyName(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
     "displayName": "testEmptyName(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
     "methodName": "testEmptyName",
     "className": "org.elasticsearch.index.mapper.KeywordFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testEnableStore(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
     "displayName": "testEnableStore(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
     "methodName": "testEnableStore",
     "className": "org.elasticsearch.index.mapper.KeywordFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreAbove(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
     "displayName": "testIgnoreAbove(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
     "methodName": "testIgnoreAbove",
     "className": "org.elasticsearch.index.mapper.KeywordFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNullValue(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
     "displayName": "testNullValue(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
     "methodName": "testNullValue",
     "className": "org.elasticsearch.index.mapper.KeywordFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDisableDocValues(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
     "displayName": "testDisableDocValues(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
     "methodName": "testDisableDocValues",
     "className": "org.elasticsearch.index.mapper.KeywordFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDisableIndex(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
     "displayName": "testDisableIndex(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
     "methodName": "testDisableIndex",
     "className": "org.elasticsearch.index.mapper.KeywordFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testBoost(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
     "displayName": "testBoost(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
     "methodName": "testBoost",
     "className": "org.elasticsearch.index.mapper.KeywordFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testEnableNorms(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
     "displayName": "testEnableNorms(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
     "methodName": "testEnableNorms",
     "className": "org.elasticsearch.index.mapper.KeywordFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaults(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
     "displayName": "testDefaults(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
     "methodName": "testDefaults",
     "className": "org.elasticsearch.index.mapper.KeywordFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195749337
 }
]

[
 "TEST_STARTED",
 "ID#testIndexOptions(org.elasticsearch.index.mapper.KeywordFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:09,372][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:09,396][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:09,396][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:09,400][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[8784], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:09,403][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:09,403][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:09,545][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:09,545][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:09,546][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[135]}, bound_addresses {local[135]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:09,555][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{Tnp91oNhSQS5txpGrHbVVg}{8HdoZZBrRC68eGsi9xTSmA}{local}{local[135]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:09,555][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:09,583][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:09,607][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:09,706][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:09,722][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [KeywordFieldMapperTests#testIndexOptions]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexOptions(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
  "startTimestamp": 1474195749364,
  "executionTime": 445
 }
]

[
 "TEST_STARTED",
 "ID#testBoostImplicitlyEnablesNormsOnOldIndex(org.elasticsearch.index.mapper.KeywordFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:09,815][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:09,876][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:09,891][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:09,953][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:09,967][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test2] [KeywordFieldMapperTests#testBoostImplicitlyEnablesNormsOnOldIndex]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBoostImplicitlyEnablesNormsOnOldIndex(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
  "startTimestamp": 1474195749809,
  "executionTime": 261
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyName(org.elasticsearch.index.mapper.KeywordFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:10,076][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:10,122][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:10,137][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_old] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:10,180][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_old][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:10,192][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test_old] [KeywordFieldMapperTests#testEmptyName]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyName(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
  "startTimestamp": 1474195750070,
  "executionTime": 157
 }
]

[
 "TEST_STARTED",
 "ID#testEnableStore(org.elasticsearch.index.mapper.KeywordFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:10,233][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:10,287][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:10,299][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [KeywordFieldMapperTests#testEnableStore]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnableStore(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
  "startTimestamp": 1474195750228,
  "executionTime": 98
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreAbove(org.elasticsearch.index.mapper.KeywordFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:10,333][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:10,388][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:10,400][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [KeywordFieldMapperTests#testIgnoreAbove]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreAbove(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
  "startTimestamp": 1474195750326,
  "executionTime": 103
 }
]

[
 "TEST_STARTED",
 "ID#testNullValue(org.elasticsearch.index.mapper.KeywordFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:10,436][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:10,489][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:10,502][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [KeywordFieldMapperTests#testNullValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullValue(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
  "startTimestamp": 1474195750430,
  "executionTime": 103
 }
]

[
 "TEST_STARTED",
 "ID#testDisableDocValues(org.elasticsearch.index.mapper.KeywordFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:10,539][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:10,587][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:10,605][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [KeywordFieldMapperTests#testDisableDocValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDisableDocValues(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
  "startTimestamp": 1474195750533,
  "executionTime": 158
 }
]

[
 "TEST_STARTED",
 "ID#testDisableIndex(org.elasticsearch.index.mapper.KeywordFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:10,697][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:10,767][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:10,854][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [KeywordFieldMapperTests#testDisableIndex]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDisableIndex(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
  "startTimestamp": 1474195750691,
  "executionTime": 191
 }
]

[
 "TEST_STARTED",
 "ID#testBoost(org.elasticsearch.index.mapper.KeywordFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:10,888][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:10,932][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:10,946][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [KeywordFieldMapperTests#testBoost]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBoost(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
  "startTimestamp": 1474195750882,
  "executionTime": 101
 }
]

[
 "TEST_STARTED",
 "ID#testEnableNorms(org.elasticsearch.index.mapper.KeywordFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:10,989][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:11,082][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:11,099][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [KeywordFieldMapperTests#testEnableNorms]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnableNorms(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
  "startTimestamp": 1474195750983,
  "executionTime": 468
 }
]

[
 "TEST_STARTED",
 "ID#testDefaults(org.elasticsearch.index.mapper.KeywordFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:11,460][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:11,540][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:11,629][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [KeywordFieldMapperTests#testDefaults]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaults(org.elasticsearch.index.mapper.KeywordFieldMapperTests)",
  "startTimestamp": 1474195751451,
  "executionTime": 209
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:11,661][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:11,661][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:11,661][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:49:11,662][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.KeywordFieldMapperTests",
  "startTimestamp": 1474195749337,
  "executionTime": 2350
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.LegacyByteFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.LegacyByteFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.LegacyByteFieldTypeTests",
   "children": [
    {
     "id": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "displayName": "testValueForSearch(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "methodName": "testValueForSearch",
     "className": "org.elasticsearch.index.mapper.LegacyByteFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.LegacyByteFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.LegacyByteFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.LegacyByteFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.LegacyByteFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.LegacyByteFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195751817
 }
]

[
 "TEST_STARTED",
 "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
  "startTimestamp": 1474195751972,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
  "startTimestamp": 1474195751974,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
  "startTimestamp": 1474195751977,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
  "startTimestamp": 1474195751979,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
  "startTimestamp": 1474195751981,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
  "startTimestamp": 1474195751983,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.LegacyByteFieldTypeTests",
  "startTimestamp": 1474195751817,
  "executionTime": 170
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
   "children": [
    {
     "id": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "displayName": "testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "methodName": "testIsFieldWithinQuery",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueFormat(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "displayName": "testValueFormat(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "methodName": "testValueFormat",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testIsFieldWithinQueryEmptyReader(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "displayName": "testIsFieldWithinQueryEmptyReader(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "methodName": "testIsFieldWithinQueryEmptyReader",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "displayName": "testValueForSearch(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "methodName": "testValueForSearch",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195752160
 }
]

[
 "TEST_STARTED",
 "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
  "startTimestamp": 1474195752226,
  "executionTime": 143
 }
]

[
 "TEST_STARTED",
 "ID#testValueFormat(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueFormat(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
  "startTimestamp": 1474195752369,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIsFieldWithinQueryEmptyReader(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsFieldWithinQueryEmptyReader(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
  "startTimestamp": 1474195752372,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
  "startTimestamp": 1474195752378,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
  "startTimestamp": 1474195752380,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
  "startTimestamp": 1474195752384,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
  "startTimestamp": 1474195752386,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
  "startTimestamp": 1474195752388,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
  "startTimestamp": 1474195752390,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
  "startTimestamp": 1474195752160,
  "executionTime": 234
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.MapperServiceTests",
   "displayName": "org.elasticsearch.index.mapper.MapperServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.MapperServiceTests",
   "children": [
    {
     "id": "ID#testUnmappedFieldType(org.elasticsearch.index.mapper.MapperServiceTests)",
     "displayName": "testUnmappedFieldType(org.elasticsearch.index.mapper.MapperServiceTests)",
     "methodName": "testUnmappedFieldType",
     "className": "org.elasticsearch.index.mapper.MapperServiceTests",
     "children": []
    },
    {
     "id": "ID#testTypeNameTooLong(org.elasticsearch.index.mapper.MapperServiceTests)",
     "displayName": "testTypeNameTooLong(org.elasticsearch.index.mapper.MapperServiceTests)",
     "methodName": "testTypeNameTooLong",
     "className": "org.elasticsearch.index.mapper.MapperServiceTests",
     "children": []
    },
    {
     "id": "ID#testMergeWithMap(org.elasticsearch.index.mapper.MapperServiceTests)",
     "displayName": "testMergeWithMap(org.elasticsearch.index.mapper.MapperServiceTests)",
     "methodName": "testMergeWithMap",
     "className": "org.elasticsearch.index.mapper.MapperServiceTests",
     "children": []
    },
    {
     "id": "ID#testMappingDepthExceedsLimit(org.elasticsearch.index.mapper.MapperServiceTests)",
     "displayName": "testMappingDepthExceedsLimit(org.elasticsearch.index.mapper.MapperServiceTests)",
     "methodName": "testMappingDepthExceedsLimit",
     "className": "org.elasticsearch.index.mapper.MapperServiceTests",
     "children": []
    },
    {
     "id": "ID#testTypes(org.elasticsearch.index.mapper.MapperServiceTests)",
     "displayName": "testTypes(org.elasticsearch.index.mapper.MapperServiceTests)",
     "methodName": "testTypes",
     "className": "org.elasticsearch.index.mapper.MapperServiceTests",
     "children": []
    },
    {
     "id": "ID#testTotalFieldsExceedsLimit(org.elasticsearch.index.mapper.MapperServiceTests)",
     "displayName": "testTotalFieldsExceedsLimit(org.elasticsearch.index.mapper.MapperServiceTests)",
     "methodName": "testTotalFieldsExceedsLimit",
     "className": "org.elasticsearch.index.mapper.MapperServiceTests",
     "children": []
    },
    {
     "id": "ID#testTypeNameStartsWithIllegalDot(org.elasticsearch.index.mapper.MapperServiceTests)",
     "displayName": "testTypeNameStartsWithIllegalDot(org.elasticsearch.index.mapper.MapperServiceTests)",
     "methodName": "testTypeNameStartsWithIllegalDot",
     "className": "org.elasticsearch.index.mapper.MapperServiceTests",
     "children": []
    },
    {
     "id": "ID#testIndexIntoDefaultMapping(org.elasticsearch.index.mapper.MapperServiceTests)",
     "displayName": "testIndexIntoDefaultMapping(org.elasticsearch.index.mapper.MapperServiceTests)",
     "methodName": "testIndexIntoDefaultMapping",
     "className": "org.elasticsearch.index.mapper.MapperServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195752442
 }
]

[
 "TEST_STARTED",
 "ID#testUnmappedFieldType(org.elasticsearch.index.mapper.MapperServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:12,483][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:12,511][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:12,511][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:12,524][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[8784], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:12,527][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:12,527][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:12,649][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:12,649][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:12,650][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[136]}, bound_addresses {local[136]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:12,651][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{1wfEKQh8TrKEgkiLxnZ9AQ}{3JTl6mwjS3itOz2rGlFcWw}{local}{local[136]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:12,652][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:12,665][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:12,687][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:12,799][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:12,812][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [index] [unmapped_type:string] should be replaced with [unmapped_type:keyword]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:12,812][INFO ][org.elasticsearch.index.mapper] [node_s_0] [index] [MapperServiceTests#testUnmappedFieldType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnmappedFieldType(org.elasticsearch.index.mapper.MapperServiceTests)",
  "startTimestamp": 1474195752471,
  "executionTime": 386
 }
]

[
 "TEST_STARTED",
 "ID#testTypeNameTooLong(org.elasticsearch.index.mapper.MapperServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:12,866][INFO ][org.elasticsearch.index.mapper] [node_s_0] [text-index] [MapperServiceTests#testTypeNameTooLong]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeNameTooLong(org.elasticsearch.index.mapper.MapperServiceTests)",
  "startTimestamp": 1474195752857,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testMergeWithMap(org.elasticsearch.index.mapper.MapperServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:12,873][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:12,956][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:12,969][INFO ][org.elasticsearch.index.mapper] [node_s_0] [index1] [MapperServiceTests#testMergeWithMap]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeWithMap(org.elasticsearch.index.mapper.MapperServiceTests)",
  "startTimestamp": 1474195752867,
  "executionTime": 143
 }
]

[
 "TEST_STARTED",
 "ID#testMappingDepthExceedsLimit(org.elasticsearch.index.mapper.MapperServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:13,016][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:13,083][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:13,099][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:13,533][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:13,550][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test2] [MapperServiceTests#testMappingDepthExceedsLimit]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMappingDepthExceedsLimit(org.elasticsearch.index.mapper.MapperServiceTests)",
  "startTimestamp": 1474195753010,
  "executionTime": 599
 }
]

[
 "TEST_STARTED",
 "ID#testTypes(org.elasticsearch.index.mapper.MapperServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:13,615][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:13,755][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:13,775][INFO ][org.elasticsearch.index.mapper] [node_s_0] [index1] [MapperServiceTests#testTypes]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypes(org.elasticsearch.index.mapper.MapperServiceTests)",
  "startTimestamp": 1474195753609,
  "executionTime": 252
 }
]

[
 "TEST_STARTED",
 "ID#testTotalFieldsExceedsLimit(org.elasticsearch.index.mapper.MapperServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:13,868][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:13,949][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:13,962][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test1] The [string] field is deprecated, please use [text] or [keyword] instead on [field1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:13,966][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:14,052][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:14,064][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test2] The [string] field is deprecated, please use [text] or [keyword] instead on [field1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:14,064][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test2] [MapperServiceTests#testTotalFieldsExceedsLimit]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTotalFieldsExceedsLimit(org.elasticsearch.index.mapper.MapperServiceTests)",
  "startTimestamp": 1474195753861,
  "executionTime": 251
 }
]

[
 "TEST_STARTED",
 "ID#testTypeNameStartsWithIllegalDot(org.elasticsearch.index.mapper.MapperServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:14,118][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test-index] [MapperServiceTests#testTypeNameStartsWithIllegalDot]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeNameStartsWithIllegalDot(org.elasticsearch.index.mapper.MapperServiceTests)",
  "startTimestamp": 1474195754112,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testIndexIntoDefaultMapping(org.elasticsearch.index.mapper.MapperServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:14,130][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index1] creating index, cause [auto(index api)], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:14,189][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:14,208][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:14,258][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:14,271][INFO ][org.elasticsearch.index.mapper] [node_s_0] [index2] [MapperServiceTests#testIndexIntoDefaultMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexIntoDefaultMapping(org.elasticsearch.index.mapper.MapperServiceTests)",
  "startTimestamp": 1474195754118,
  "executionTime": 202
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:14,320][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:14,321][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:14,321][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:14,322][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.MapperServiceTests",
  "startTimestamp": 1474195752442,
  "executionTime": 1904
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.MultiFieldCopyToMapperTests",
   "displayName": "org.elasticsearch.index.mapper.MultiFieldCopyToMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.MultiFieldCopyToMapperTests",
   "children": [
    {
     "id": "ID#testExceptionForCopyToInMultiFields(org.elasticsearch.index.mapper.MultiFieldCopyToMapperTests)",
     "displayName": "testExceptionForCopyToInMultiFields(org.elasticsearch.index.mapper.MultiFieldCopyToMapperTests)",
     "methodName": "testExceptionForCopyToInMultiFields",
     "className": "org.elasticsearch.index.mapper.MultiFieldCopyToMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195754570
 }
]

[
 "TEST_STARTED",
 "ID#testExceptionForCopyToInMultiFields(org.elasticsearch.index.mapper.MultiFieldCopyToMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:14,611][WARN ][mapping [type]           ] Found a copy_to in field [c] which is within a multi field. This feature has been removed and the copy_to will be removed from the mapping.%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExceptionForCopyToInMultiFields(org.elasticsearch.index.mapper.MultiFieldCopyToMapperTests)",
  "startTimestamp": 1474195754590,
  "executionTime": 22
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.MultiFieldCopyToMapperTests",
  "startTimestamp": 1474195754570,
  "executionTime": 46
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.MultiFieldTests",
   "displayName": "org.elasticsearch.index.mapper.MultiFieldTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.MultiFieldTests",
   "children": [
    {
     "id": "ID#testObjectFieldNotAllowed(org.elasticsearch.index.mapper.MultiFieldTests)",
     "displayName": "testObjectFieldNotAllowed(org.elasticsearch.index.mapper.MultiFieldTests)",
     "methodName": "testObjectFieldNotAllowed",
     "className": "org.elasticsearch.index.mapper.MultiFieldTests",
     "children": []
    },
    {
     "id": "ID#testMultiFieldWithDot(org.elasticsearch.index.mapper.MultiFieldTests)",
     "displayName": "testMultiFieldWithDot(org.elasticsearch.index.mapper.MultiFieldTests)",
     "methodName": "testMultiFieldWithDot",
     "className": "org.elasticsearch.index.mapper.MultiFieldTests",
     "children": []
    },
    {
     "id": "ID#testMultiFieldsInConsistentOrder(org.elasticsearch.index.mapper.MultiFieldTests)",
     "displayName": "testMultiFieldsInConsistentOrder(org.elasticsearch.index.mapper.MultiFieldTests)",
     "methodName": "testMultiFieldsInConsistentOrder",
     "className": "org.elasticsearch.index.mapper.MultiFieldTests",
     "children": []
    },
    {
     "id": "ID#testBuildThenParse(org.elasticsearch.index.mapper.MultiFieldTests)",
     "displayName": "testBuildThenParse(org.elasticsearch.index.mapper.MultiFieldTests)",
     "methodName": "testBuildThenParse",
     "className": "org.elasticsearch.index.mapper.MultiFieldTests",
     "children": []
    },
    {
     "id": "ID#testMultiFieldMultiFields(org.elasticsearch.index.mapper.MultiFieldTests)",
     "displayName": "testMultiFieldMultiFields(org.elasticsearch.index.mapper.MultiFieldTests)",
     "methodName": "testMultiFieldMultiFields",
     "className": "org.elasticsearch.index.mapper.MultiFieldTests",
     "children": []
    },
    {
     "id": "ID#testNestedFieldNotAllowed(org.elasticsearch.index.mapper.MultiFieldTests)",
     "displayName": "testNestedFieldNotAllowed(org.elasticsearch.index.mapper.MultiFieldTests)",
     "methodName": "testNestedFieldNotAllowed",
     "className": "org.elasticsearch.index.mapper.MultiFieldTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195754848
 }
]

[
 "TEST_STARTED",
 "ID#testObjectFieldNotAllowed(org.elasticsearch.index.mapper.MultiFieldTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:14,891][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:14,913][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:14,913][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:14,917][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[8784], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:14,919][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:14,919][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:15,008][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:15,008][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:15,008][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[137]}, bound_addresses {local[137]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:15,009][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{xr0W9-InRCaxZ7lc-lUvPQ}{m6qXPcvNQ8uNRyc9DxVoQw}{local}{local[137]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:15,009][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:15,020][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:15,035][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:15,086][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:15,100][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [MultiFieldTests#testObjectFieldNotAllowed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testObjectFieldNotAllowed(org.elasticsearch.index.mapper.MultiFieldTests)",
  "startTimestamp": 1474195754880,
  "executionTime": 252
 }
]

[
 "TEST_STARTED",
 "ID#testMultiFieldWithDot(org.elasticsearch.index.mapper.MultiFieldTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:15,143][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:15,199][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:15,212][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [MultiFieldTests#testMultiFieldWithDot]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiFieldWithDot(org.elasticsearch.index.mapper.MultiFieldTests)",
  "startTimestamp": 1474195755132,
  "executionTime": 107
 }
]

[
 "TEST_STARTED",
 "ID#testMultiFieldsInConsistentOrder(org.elasticsearch.index.mapper.MultiFieldTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:15,245][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:15,322][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:15,337][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [MultiFieldTests#testMultiFieldsInConsistentOrder]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiFieldsInConsistentOrder(org.elasticsearch.index.mapper.MultiFieldTests)",
  "startTimestamp": 1474195755239,
  "executionTime": 125
 }
]

[
 "TEST_STARTED",
 "ID#testBuildThenParse(org.elasticsearch.index.mapper.MultiFieldTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:15,369][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:15,426][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:15,444][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [MultiFieldTests#testBuildThenParse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuildThenParse(org.elasticsearch.index.mapper.MultiFieldTests)",
  "startTimestamp": 1474195755364,
  "executionTime": 106
 }
]

[
 "TEST_STARTED",
 "ID#testMultiFieldMultiFields(org.elasticsearch.index.mapper.MultiFieldTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:15,500][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:15,538][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:15,676][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [MultiFieldTests#testMultiFieldMultiFields]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiFieldMultiFields(org.elasticsearch.index.mapper.MultiFieldTests)",
  "startTimestamp": 1474195755470,
  "executionTime": 258
 }
]

[
 "TEST_STARTED",
 "ID#testNestedFieldNotAllowed(org.elasticsearch.index.mapper.MultiFieldTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:15,733][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:15,805][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:15,822][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [MultiFieldTests#testNestedFieldNotAllowed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedFieldNotAllowed(org.elasticsearch.index.mapper.MultiFieldTests)",
  "startTimestamp": 1474195755728,
  "executionTime": 122
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:15,850][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:15,851][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:15,851][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:15,852][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.MultiFieldTests",
  "startTimestamp": 1474195754848,
  "executionTime": 1010
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.TextFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.TextFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.TextFieldMapperTests",
   "children": [
    {
     "id": "ID#testEmptyName(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "displayName": "testEmptyName(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "methodName": "testEmptyName",
     "className": "org.elasticsearch.index.mapper.TextFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testAnalyzedFieldPositionIncrementWithoutPositions(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "displayName": "testAnalyzedFieldPositionIncrementWithoutPositions(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "methodName": "testAnalyzedFieldPositionIncrementWithoutPositions",
     "className": "org.elasticsearch.index.mapper.TextFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testPositionIncrementGap(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "displayName": "testPositionIncrementGap(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "methodName": "testPositionIncrementGap",
     "className": "org.elasticsearch.index.mapper.TextFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNotIndexedFieldPositionIncrement(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "displayName": "testNotIndexedFieldPositionIncrement(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "methodName": "testNotIndexedFieldPositionIncrement",
     "className": "org.elasticsearch.index.mapper.TextFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testEagerGlobalOrdinals(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "displayName": "testEagerGlobalOrdinals(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "methodName": "testEagerGlobalOrdinals",
     "className": "org.elasticsearch.index.mapper.TextFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIndexOptions(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "displayName": "testIndexOptions(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "methodName": "testIndexOptions",
     "className": "org.elasticsearch.index.mapper.TextFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testEnableStore(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "displayName": "testEnableStore(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "methodName": "testEnableStore",
     "className": "org.elasticsearch.index.mapper.TextFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNullConfigValuesFail(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "displayName": "testNullConfigValuesFail(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "methodName": "testNullConfigValuesFail",
     "className": "org.elasticsearch.index.mapper.TextFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testSearchAnalyzerSerialization(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "displayName": "testSearchAnalyzerSerialization(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "methodName": "testSearchAnalyzerSerialization",
     "className": "org.elasticsearch.index.mapper.TextFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testTermVectors(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "displayName": "testTermVectors(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "methodName": "testTermVectors",
     "className": "org.elasticsearch.index.mapper.TextFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDisableIndex(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "displayName": "testDisableIndex(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "methodName": "testDisableIndex",
     "className": "org.elasticsearch.index.mapper.TextFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaults(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "displayName": "testDefaults(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "methodName": "testDefaults",
     "className": "org.elasticsearch.index.mapper.TextFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDisableNorms(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "displayName": "testDisableNorms(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "methodName": "testDisableNorms",
     "className": "org.elasticsearch.index.mapper.TextFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaultPositionIncrementGap(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "displayName": "testDefaultPositionIncrementGap(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "methodName": "testDefaultPositionIncrementGap",
     "className": "org.elasticsearch.index.mapper.TextFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testFrequencyFilter(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "displayName": "testFrequencyFilter(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "methodName": "testFrequencyFilter",
     "className": "org.elasticsearch.index.mapper.TextFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testSearchQuoteAnalyzerSerialization(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "displayName": "testSearchQuoteAnalyzerSerialization(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "methodName": "testSearchQuoteAnalyzerSerialization",
     "className": "org.elasticsearch.index.mapper.TextFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testFielddata(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "displayName": "testFielddata(org.elasticsearch.index.mapper.TextFieldMapperTests)",
     "methodName": "testFielddata",
     "className": "org.elasticsearch.index.mapper.TextFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195755939
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyName(org.elasticsearch.index.mapper.TextFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:15,983][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:16,015][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:16,015][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:16,018][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[8784], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:16,021][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:16,021][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:16,135][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:16,135][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:16,136][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[138]}, bound_addresses {local[138]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:16,167][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{wIgdHlcDRYKE7K42sl4oRg}{H7tvtCydSIW4r4DAD--k5Q}{local}{local[138]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:16,167][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:16,253][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:16,271][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:16,350][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:16,366][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_old] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:16,429][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_old][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:16,445][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test_old] [TextFieldMapperTests#testEmptyName]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyName(org.elasticsearch.index.mapper.TextFieldMapperTests)",
  "startTimestamp": 1474195755969,
  "executionTime": 536
 }
]

[
 "TEST_STARTED",
 "ID#testAnalyzedFieldPositionIncrementWithoutPositions(org.elasticsearch.index.mapper.TextFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:16,511][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:16,562][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:16,575][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TextFieldMapperTests#testAnalyzedFieldPositionIncrementWithoutPositions]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAnalyzedFieldPositionIncrementWithoutPositions(org.elasticsearch.index.mapper.TextFieldMapperTests)",
  "startTimestamp": 1474195756505,
  "executionTime": 115
 }
]

[
 "TEST_STARTED",
 "ID#testPositionIncrementGap(org.elasticsearch.index.mapper.TextFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:16,626][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:16,717][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:16,864][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TextFieldMapperTests#testPositionIncrementGap]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPositionIncrementGap(org.elasticsearch.index.mapper.TextFieldMapperTests)",
  "startTimestamp": 1474195756620,
  "executionTime": 288
 }
]

[
 "TEST_STARTED",
 "ID#testNotIndexedFieldPositionIncrement(org.elasticsearch.index.mapper.TextFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:16,914][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:16,970][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:16,983][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TextFieldMapperTests#testNotIndexedFieldPositionIncrement]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotIndexedFieldPositionIncrement(org.elasticsearch.index.mapper.TextFieldMapperTests)",
  "startTimestamp": 1474195756908,
  "executionTime": 114
 }
]

[
 "TEST_STARTED",
 "ID#testEagerGlobalOrdinals(org.elasticsearch.index.mapper.TextFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:17,029][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:17,090][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:17,103][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TextFieldMapperTests#testEagerGlobalOrdinals]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEagerGlobalOrdinals(org.elasticsearch.index.mapper.TextFieldMapperTests)",
  "startTimestamp": 1474195757022,
  "executionTime": 123
 }
]

[
 "TEST_STARTED",
 "ID#testIndexOptions(org.elasticsearch.index.mapper.TextFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:17,151][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:17,229][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:17,243][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TextFieldMapperTests#testIndexOptions]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexOptions(org.elasticsearch.index.mapper.TextFieldMapperTests)",
  "startTimestamp": 1474195757145,
  "executionTime": 164
 }
]

[
 "TEST_STARTED",
 "ID#testEnableStore(org.elasticsearch.index.mapper.TextFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:17,316][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:17,413][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:17,431][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TextFieldMapperTests#testEnableStore]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnableStore(org.elasticsearch.index.mapper.TextFieldMapperTests)",
  "startTimestamp": 1474195757309,
  "executionTime": 162
 }
]

[
 "TEST_STARTED",
 "ID#testNullConfigValuesFail(org.elasticsearch.index.mapper.TextFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:17,477][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:17,546][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:17,558][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TextFieldMapperTests#testNullConfigValuesFail]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullConfigValuesFail(org.elasticsearch.index.mapper.TextFieldMapperTests)",
  "startTimestamp": 1474195757471,
  "executionTime": 126
 }
]

[
 "TEST_STARTED",
 "ID#testSearchAnalyzerSerialization(org.elasticsearch.index.mapper.TextFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:17,611][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:17,674][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:17,690][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TextFieldMapperTests#testSearchAnalyzerSerialization]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearchAnalyzerSerialization(org.elasticsearch.index.mapper.TextFieldMapperTests)",
  "startTimestamp": 1474195757598,
  "executionTime": 141
 }
]

[
 "TEST_STARTED",
 "ID#testTermVectors(org.elasticsearch.index.mapper.TextFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:17,745][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:17,803][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:17,815][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TextFieldMapperTests#testTermVectors]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermVectors(org.elasticsearch.index.mapper.TextFieldMapperTests)",
  "startTimestamp": 1474195757739,
  "executionTime": 124
 }
]

[
 "TEST_STARTED",
 "ID#testDisableIndex(org.elasticsearch.index.mapper.TextFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:17,868][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:17,914][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:17,926][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TextFieldMapperTests#testDisableIndex]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDisableIndex(org.elasticsearch.index.mapper.TextFieldMapperTests)",
  "startTimestamp": 1474195757863,
  "executionTime": 99
 }
]

[
 "TEST_STARTED",
 "ID#testDefaults(org.elasticsearch.index.mapper.TextFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:17,968][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:18,027][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:18,040][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TextFieldMapperTests#testDefaults]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaults(org.elasticsearch.index.mapper.TextFieldMapperTests)",
  "startTimestamp": 1474195757962,
  "executionTime": 108
 }
]

[
 "TEST_STARTED",
 "ID#testDisableNorms(org.elasticsearch.index.mapper.TextFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:18,076][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:18,132][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:18,145][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TextFieldMapperTests#testDisableNorms]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDisableNorms(org.elasticsearch.index.mapper.TextFieldMapperTests)",
  "startTimestamp": 1474195758070,
  "executionTime": 104
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultPositionIncrementGap(org.elasticsearch.index.mapper.TextFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:18,180][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:18,266][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:18,446][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TextFieldMapperTests#testDefaultPositionIncrementGap]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultPositionIncrementGap(org.elasticsearch.index.mapper.TextFieldMapperTests)",
  "startTimestamp": 1474195758174,
  "executionTime": 308
 }
]

[
 "TEST_STARTED",
 "ID#testFrequencyFilter(org.elasticsearch.index.mapper.TextFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:18,489][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:18,552][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:18,563][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TextFieldMapperTests#testFrequencyFilter]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFrequencyFilter(org.elasticsearch.index.mapper.TextFieldMapperTests)",
  "startTimestamp": 1474195758482,
  "executionTime": 153
 }
]

[
 "TEST_STARTED",
 "ID#testSearchQuoteAnalyzerSerialization(org.elasticsearch.index.mapper.TextFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:18,642][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:18,699][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:18,718][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TextFieldMapperTests#testSearchQuoteAnalyzerSerialization]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearchQuoteAnalyzerSerialization(org.elasticsearch.index.mapper.TextFieldMapperTests)",
  "startTimestamp": 1474195758635,
  "executionTime": 142
 }
]

[
 "TEST_STARTED",
 "ID#testFielddata(org.elasticsearch.index.mapper.TextFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:18,784][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:18,838][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:18,854][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TextFieldMapperTests#testFielddata]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFielddata(org.elasticsearch.index.mapper.TextFieldMapperTests)",
  "startTimestamp": 1474195758777,
  "executionTime": 134
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:18,911][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:18,912][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:18,912][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:18,913][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.TextFieldMapperTests",
  "startTimestamp": 1474195755939,
  "executionTime": 2994
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.TimestampFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.TimestampFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.TimestampFieldTypeTests",
   "children": [
    {
     "id": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "displayName": "testIsFieldWithinQuery(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "methodName": "testIsFieldWithinQuery",
     "className": "org.elasticsearch.index.mapper.TimestampFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueForSearch(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "displayName": "testValueForSearch(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "methodName": "testValueForSearch",
     "className": "org.elasticsearch.index.mapper.TimestampFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testIsFieldWithinQueryEmptyReader(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "displayName": "testIsFieldWithinQueryEmptyReader(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "methodName": "testIsFieldWithinQueryEmptyReader",
     "className": "org.elasticsearch.index.mapper.TimestampFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.TimestampFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.TimestampFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.TimestampFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.TimestampFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueFormat(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "displayName": "testValueFormat(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "methodName": "testValueFormat",
     "className": "org.elasticsearch.index.mapper.TimestampFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.TimestampFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195758992
 }
]

[
 "TEST_STARTED",
 "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.TimestampFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
  "startTimestamp": 1474195759019,
  "executionTime": 60
 }
]

[
 "TEST_STARTED",
 "ID#testValueForSearch(org.elasticsearch.index.mapper.TimestampFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueForSearch(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
  "startTimestamp": 1474195759080,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testIsFieldWithinQueryEmptyReader(org.elasticsearch.index.mapper.TimestampFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsFieldWithinQueryEmptyReader(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
  "startTimestamp": 1474195759082,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.TimestampFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
  "startTimestamp": 1474195759084,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.TimestampFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
  "startTimestamp": 1474195759085,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.TimestampFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
  "startTimestamp": 1474195759088,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.TimestampFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
  "startTimestamp": 1474195759090,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValueFormat(org.elasticsearch.index.mapper.TimestampFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueFormat(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
  "startTimestamp": 1474195759092,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.TimestampFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.TimestampFieldTypeTests)",
  "startTimestamp": 1474195759094,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.TimestampFieldTypeTests",
  "startTimestamp": 1474195758992,
  "executionTime": 106
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.TokenCountFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.TokenCountFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.TokenCountFieldMapperTests",
   "children": [
    {
     "id": "ID#testCountPositions(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)",
     "displayName": "testCountPositions(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)",
     "methodName": "testCountPositions",
     "className": "org.elasticsearch.index.mapper.TokenCountFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testMerge(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)",
     "displayName": "testMerge(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)",
     "methodName": "testMerge",
     "className": "org.elasticsearch.index.mapper.TokenCountFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testEmptyName(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)",
     "displayName": "testEmptyName(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)",
     "methodName": "testEmptyName",
     "className": "org.elasticsearch.index.mapper.TokenCountFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195759275
 }
]

[
 "TEST_STARTED",
 "ID#testCountPositions(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:49:19,348][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:49:19,386][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:49:19,387][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:49:19,390][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[8784], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:49:19,392][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:49:19,393][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:49:19,579][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:49:19,579][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:49:19,580][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[139]}, bound_addresses {local[139]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:49:19,586][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{9_WDs_5hSjGvDAjZ42djjQ}{E06PbtmoQH-MD3KFwti_EQ}{local}{local[139]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:49:19,586][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:49:19,604][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:49:19,623][INFO ][org.elasticsearch.index.mapper] [node_s_0] [wUNpZNOBTJe9g-1opgXNjg] [TokenCountFieldMapperTests#testCountPositions]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCountPositions(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)",
  "startTimestamp": 1474195759330,
  "executionTime": 293
 }
]

[
 "TEST_STARTED",
 "ID#testMerge(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:49:19,629][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:49:19,915][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:49:19,930][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TokenCountFieldMapperTests#testMerge]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMerge(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)",
  "startTimestamp": 1474195759624,
  "executionTime": 333
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyName(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:49:19,964][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:49:20,040][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:49:20,056][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_old] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:49:20,115][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_old][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:49:20,138][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test_old] [TokenCountFieldMapperTests#testEmptyName]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyName(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)",
  "startTimestamp": 1474195759957,
  "executionTime": 360
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:49:20,317][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:49:20,317][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:49:20,318][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:49:20,319][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.TokenCountFieldMapperTests",
  "startTimestamp": 1474195759275,
  "executionTime": 1052
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.DisMaxQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
   "children": [
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryInnerPrefixQuery(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testToQueryInnerPrefixQuery(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testToQueryInnerPrefixQuery",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInnerQueryEmptyException(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testInnerQueryEmptyException(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testInnerQueryEmptyException",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195760463
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:20,496][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{FFBHKuqIQ2iwaHfZNf5cEA}{local}{local[655]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:20,502][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:20,502][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:20,518][WARN ][org.elasticsearch.deprecation.index.mapper]  [GWmueP] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:20,518][WARN ][org.elasticsearch.deprecation.index.mapper]  [GWmueP] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:20,518][WARN ][org.elasticsearch.deprecation.index.mapper]  [GWmueP] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:20,519][WARN ][org.elasticsearch.deprecation.index.mapper]  [GWmueP] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:20,520][WARN ][org.elasticsearch.deprecation.index.mapper]  [GWmueP] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:20,520][WARN ][org.elasticsearch.deprecation.index.mapper]  [GWmueP] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:20,522][WARN ][org.elasticsearch.deprecation.index.mapper]  [GWmueP] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:20,523][WARN ][org.elasticsearch.deprecation.index.mapper]  [GWmueP] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:20,523][WARN ][org.elasticsearch.deprecation.index.mapper]  [GWmueP] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1474195760491,
  "executionTime": 108
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1474195760599,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1474195760602,
  "executionTime": 32
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1474195760634,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1474195760643,
  "executionTime": 53
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1474195760696,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1474195760707,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1474195760710,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1474195760713,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1474195760718,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryInnerPrefixQuery(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryInnerPrefixQuery(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1474195760733,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testInnerQueryEmptyException(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:20,740][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:78]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInnerQueryEmptyException(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1474195760736,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.DisMaxQueryBuilderTests",
  "startTimestamp": 1474195760463,
  "executionTime": 284
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.ExistsQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.ExistsQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.ExistsQueryBuilderTests",
   "children": [
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.ExistsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.ExistsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.ExistsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.ExistsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.ExistsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.ExistsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.ExistsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.ExistsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.ExistsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.ExistsQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195760940
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.ExistsQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,100][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{RFXvZibMQ4SCyY60IE78Pw}{local}{local[656]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,130][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,130][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,152][WARN ][org.elasticsearch.deprecation.index.mapper]  [rsztJzGwzU] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,152][WARN ][org.elasticsearch.deprecation.index.mapper]  [rsztJzGwzU] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,152][WARN ][org.elasticsearch.deprecation.index.mapper]  [rsztJzGwzU] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,155][WARN ][org.elasticsearch.deprecation.index.mapper]  [rsztJzGwzU] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,155][WARN ][org.elasticsearch.deprecation.index.mapper]  [rsztJzGwzU] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,155][WARN ][org.elasticsearch.deprecation.index.mapper]  [rsztJzGwzU] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,159][WARN ][org.elasticsearch.deprecation.index.mapper]  [rsztJzGwzU] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,159][WARN ][org.elasticsearch.deprecation.index.mapper]  [rsztJzGwzU] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,159][WARN ][org.elasticsearch.deprecation.index.mapper]  [rsztJzGwzU] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,161][WARN ][org.elasticsearch.deprecation.index.mapper]  [rsztJzGwzU] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,161][WARN ][org.elasticsearch.deprecation.index.mapper]  [rsztJzGwzU] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,161][WARN ][org.elasticsearch.deprecation.index.mapper]  [rsztJzGwzU] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,208][WARN ][org.elasticsearch.deprecation.index.mapper]  [rsztJzGwzU] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,208][WARN ][org.elasticsearch.deprecation.index.mapper]  [rsztJzGwzU] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,208][WARN ][org.elasticsearch.deprecation.index.mapper]  [rsztJzGwzU] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,211][WARN ][org.elasticsearch.deprecation.index.mapper]  [rsztJzGwzU] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,211][WARN ][org.elasticsearch.deprecation.index.mapper]  [rsztJzGwzU] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,211][WARN ][org.elasticsearch.deprecation.index.mapper]  [rsztJzGwzU] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,214][WARN ][org.elasticsearch.deprecation.index.mapper]  [rsztJzGwzU] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,214][WARN ][org.elasticsearch.deprecation.index.mapper]  [rsztJzGwzU] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,214][WARN ][org.elasticsearch.deprecation.index.mapper]  [rsztJzGwzU] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,218][WARN ][org.elasticsearch.deprecation.index.mapper]  [rsztJzGwzU] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,218][WARN ][org.elasticsearch.deprecation.index.mapper]  [rsztJzGwzU] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,218][WARN ][org.elasticsearch.deprecation.index.mapper]  [rsztJzGwzU] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,228][WARN ][org.elasticsearch.deprecation.index.mapper]  [rsztJzGwzU] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,228][WARN ][org.elasticsearch.deprecation.index.mapper]  [rsztJzGwzU] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,228][WARN ][org.elasticsearch.deprecation.index.mapper]  [rsztJzGwzU] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,230][WARN ][org.elasticsearch.deprecation.index.mapper]  [rsztJzGwzU] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,230][WARN ][org.elasticsearch.deprecation.index.mapper]  [rsztJzGwzU] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,230][WARN ][org.elasticsearch.deprecation.index.mapper]  [rsztJzGwzU] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,235][WARN ][org.elasticsearch.deprecation.index.mapper]  [rsztJzGwzU] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,235][WARN ][org.elasticsearch.deprecation.index.mapper]  [rsztJzGwzU] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,235][WARN ][org.elasticsearch.deprecation.index.mapper]  [rsztJzGwzU] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,241][WARN ][org.elasticsearch.deprecation.index.mapper]  [rsztJzGwzU] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,242][WARN ][org.elasticsearch.deprecation.index.mapper]  [rsztJzGwzU] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,242][WARN ][org.elasticsearch.deprecation.index.mapper]  [rsztJzGwzU] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,247][WARN ][org.elasticsearch.deprecation.index.mapper]  [rsztJzGwzU] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,247][WARN ][org.elasticsearch.deprecation.index.mapper]  [rsztJzGwzU] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,247][WARN ][org.elasticsearch.deprecation.index.mapper]  [rsztJzGwzU] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,256][WARN ][org.elasticsearch.deprecation.index.mapper]  [rsztJzGwzU] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,256][WARN ][org.elasticsearch.deprecation.index.mapper]  [rsztJzGwzU] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,256][WARN ][org.elasticsearch.deprecation.index.mapper]  [rsztJzGwzU] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,265][WARN ][org.elasticsearch.deprecation.index.mapper]  [rsztJzGwzU] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,265][WARN ][org.elasticsearch.deprecation.index.mapper]  [rsztJzGwzU] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:49:21,266][WARN ][org.elasticsearch.deprecation.index.mapper]  [rsztJzGwzU] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
  "startTimestamp": 1474195761024,
  "executionTime": 252
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.ExistsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
  "startTimestamp": 1474195761276,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.ExistsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
  "startTimestamp": 1474195761282,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.ExistsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
  "startTimestamp": 1474195761285,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.ExistsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
  "startTimestamp": 1474195761290,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.ExistsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
  "startTimestamp": 1474195761293,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.ExistsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
  "startTimestamp": 1474195761296,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.ExistsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
  "startTimestamp": 1474195761299,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.ExistsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
  "startTimestamp": 1474195761302,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.ExistsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.ExistsQueryBuilderTests)",
  "startTimestamp": 1474195761315,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.ExistsQueryBuilderTests",
  "startTimestamp": 1474195760940,
  "executionTime": 429
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests",
   "children": [
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195761624
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:49:21,655][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{XEZNorZEQ4ygMmOuNdv2kg}{local}{local[657]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:49:21,662][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:49:21,662][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
  "startTimestamp": 1474195761648,
  "executionTime": 30
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
  "startTimestamp": 1474195761678,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
  "startTimestamp": 1474195761694,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
  "startTimestamp": 1474195761701,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
  "startTimestamp": 1474195761704,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
  "startTimestamp": 1474195761707,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
  "startTimestamp": 1474195761715,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
  "startTimestamp": 1474195761719,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
  "startTimestamp": 1474195761722,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
  "startTimestamp": 1474195761734,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests",
  "startTimestamp": 1474195761624,
  "executionTime": 117
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.MatchAllQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.MatchAllQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.MatchAllQueryBuilderTests",
   "children": [
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.MatchAllQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.MatchAllQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.MatchAllQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.MatchAllQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.MatchAllQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.MatchAllQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.MatchAllQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.MatchAllQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.MatchAllQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195761905
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.MatchAllQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:21,951][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{BnBfi75ST3-S0CVldKbWiQ}{local}{local[658]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:21,958][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:21,958][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:22,003][WARN ][org.elasticsearch.deprecation.index.mapper]  [xT] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:22,003][WARN ][org.elasticsearch.deprecation.index.mapper]  [xT] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:22,004][WARN ][org.elasticsearch.deprecation.index.mapper]  [xT] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:22,005][WARN ][org.elasticsearch.deprecation.index.mapper]  [xT] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:22,005][WARN ][org.elasticsearch.deprecation.index.mapper]  [xT] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:22,005][WARN ][org.elasticsearch.deprecation.index.mapper]  [xT] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:22,008][WARN ][org.elasticsearch.deprecation.index.mapper]  [xT] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:22,008][WARN ][org.elasticsearch.deprecation.index.mapper]  [xT] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:22,008][WARN ][org.elasticsearch.deprecation.index.mapper]  [xT] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:22,010][WARN ][org.elasticsearch.deprecation.index.mapper]  [xT] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:22,010][WARN ][org.elasticsearch.deprecation.index.mapper]  [xT] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:22,010][WARN ][org.elasticsearch.deprecation.index.mapper]  [xT] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:22,012][WARN ][org.elasticsearch.deprecation.index.mapper]  [xT] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:22,012][WARN ][org.elasticsearch.deprecation.index.mapper]  [xT] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:22,012][WARN ][org.elasticsearch.deprecation.index.mapper]  [xT] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:22,015][WARN ][org.elasticsearch.deprecation.index.mapper]  [xT] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:22,015][WARN ][org.elasticsearch.deprecation.index.mapper]  [xT] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:22,015][WARN ][org.elasticsearch.deprecation.index.mapper]  [xT] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
  "startTimestamp": 1474195761941,
  "executionTime": 75
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.MatchAllQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
  "startTimestamp": 1474195762017,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.MatchAllQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
  "startTimestamp": 1474195762019,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchAllQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
  "startTimestamp": 1474195762021,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.MatchAllQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
  "startTimestamp": 1474195762024,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchAllQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
  "startTimestamp": 1474195762026,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MatchAllQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
  "startTimestamp": 1474195762029,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.MatchAllQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
  "startTimestamp": 1474195762052,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.MatchAllQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
  "startTimestamp": 1474195762057,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.MatchAllQueryBuilderTests",
  "startTimestamp": 1474195761905,
  "executionTime": 160
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
   "children": [
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBadAnalyzer(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testBadAnalyzer(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testBadAnalyzer",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalValues(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testIllegalValues(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testIllegalValues",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testPhrasePrefixMatchQuery(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testPhrasePrefixMatchQuery(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testPhrasePrefixMatchQuery",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testParseFailsWithMultipleFields(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testParseFailsWithMultipleFields",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195762209
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:49:22,254][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{jaTkL5-bSS6tKRuOY65QdQ}{local}{local[659]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:49:22,261][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:49:22,261][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "message": "test runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered\r\n\tat __randomizedtesting.SeedInfo.seed([FD13852EF36FC81C:AE8871082EC0DF6]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests.doCreateTestQueryBuilder(MatchPhrasePrefixQueryBuilderTests.java:46)\r\n\tat org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests.doCreateTestQueryBuilder(MatchPhrasePrefixQueryBuilderTests.java:40)\r\n\tat org.elasticsearch.test.AbstractQueryTestCase.createTestQueryBuilder(AbstractQueryTestCase.java:240)\r\n\tat org.elasticsearch.test.AbstractQueryTestCase.testToQuery(AbstractQueryTestCase.java:589)\r\n\tat sun.reflect.GeneratedMethodAccessor62.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1474195762246,
  "executionTime": 32
 }
]

[
 "TEST_STARTED",
 "ID#testBadAnalyzer(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBadAnalyzer(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1474195762278,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "message": "test runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered\r\n\tat __randomizedtesting.SeedInfo.seed([FD13852EF36FC81C:8C1CFDE33C888133]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests.doCreateTestQueryBuilder(MatchPhrasePrefixQueryBuilderTests.java:46)\r\n\tat org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests.doCreateTestQueryBuilder(MatchPhrasePrefixQueryBuilderTests.java:40)\r\n\tat org.elasticsearch.test.AbstractQueryTestCase.createTestQueryBuilder(AbstractQueryTestCase.java:240)\r\n\tat org.elasticsearch.test.AbstractQueryTestCase.testEqualsAndHashcode(AbstractQueryTestCase.java:732)\r\n\tat sun.reflect.GeneratedMethodAccessor55.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1474195762293,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1474195762298,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "message": "test runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered\r\n\tat __randomizedtesting.SeedInfo.seed([FD13852EF36FC81C:DC7BB0367AC828C6]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests.doCreateTestQueryBuilder(MatchPhrasePrefixQueryBuilderTests.java:46)\r\n\tat org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests.doCreateTestQueryBuilder(MatchPhrasePrefixQueryBuilderTests.java:40)\r\n\tat org.elasticsearch.test.AbstractQueryTestCase.createTestQueryBuilder(AbstractQueryTestCase.java:240)\r\n\tat org.elasticsearch.test.AbstractQueryTestCase.testFromXContent(AbstractQueryTestCase.java:273)\r\n\tat sun.reflect.GeneratedMethodAccessor54.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1474195762301,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "message": "test runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered\r\n\tat __randomizedtesting.SeedInfo.seed([FD13852EF36FC81C:49FCF6138B38CE9C]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests.doCreateTestQueryBuilder(MatchPhrasePrefixQueryBuilderTests.java:46)\r\n\tat org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests.doCreateTestQueryBuilder(MatchPhrasePrefixQueryBuilderTests.java:40)\r\n\tat org.elasticsearch.test.AbstractQueryTestCase.createTestQueryBuilder(AbstractQueryTestCase.java:240)\r\n\tat org.elasticsearch.test.AbstractQueryTestCase.testMustRewrite(AbstractQueryTestCase.java:1006)\r\n\tat sun.reflect.GeneratedMethodAccessor61.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1474195762304,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1474195762307,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalValues(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalValues(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1474195762311,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1474195762314,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "message": "test runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered\r\n\tat __randomizedtesting.SeedInfo.seed([FD13852EF36FC81C:A9CBE466D43DF580]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests.doCreateTestQueryBuilder(MatchPhrasePrefixQueryBuilderTests.java:46)\r\n\tat org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests.doCreateTestQueryBuilder(MatchPhrasePrefixQueryBuilderTests.java:40)\r\n\tat org.elasticsearch.test.AbstractQueryTestCase.createTestQueryBuilder(AbstractQueryTestCase.java:240)\r\n\tat org.elasticsearch.test.AbstractQueryTestCase.testSerialization(AbstractQueryTestCase.java:709)\r\n\tat sun.reflect.GeneratedMethodAccessor57.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1474195762316,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testPhrasePrefixMatchQuery(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPhrasePrefixMatchQuery(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1474195762320,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1474195762324,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
  "startTimestamp": 1474195762209,
  "executionTime": 140
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.QueryShardContextTests",
   "displayName": "org.elasticsearch.index.query.QueryShardContextTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.QueryShardContextTests",
   "children": [
    {
     "id": "ID#testFailIfFieldMappingNotFound(org.elasticsearch.index.query.QueryShardContextTests)",
     "displayName": "testFailIfFieldMappingNotFound(org.elasticsearch.index.query.QueryShardContextTests)",
     "methodName": "testFailIfFieldMappingNotFound",
     "className": "org.elasticsearch.index.query.QueryShardContextTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195762485
 }
]

[
 "TEST_STARTED",
 "ID#testFailIfFieldMappingNotFound(org.elasticsearch.index.query.QueryShardContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailIfFieldMappingNotFound(org.elasticsearch.index.query.QueryShardContextTests)",
  "startTimestamp": 1474195762515,
  "executionTime": 17
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.QueryShardContextTests",
  "startTimestamp": 1474195762485,
  "executionTime": 54
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.TermQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.TermQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.TermQueryBuilderTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.TermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.TermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.TermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "displayName": "testParseFailsWithMultipleFields(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "methodName": "testParseFailsWithMultipleFields",
     "className": "org.elasticsearch.index.query.TermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.TermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testGeo(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "displayName": "testGeo(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "methodName": "testGeo",
     "className": "org.elasticsearch.index.query.TermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.TermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.TermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.TermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.TermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testTermArray(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "displayName": "testTermArray(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "methodName": "testTermArray",
     "className": "org.elasticsearch.index.query.TermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.TermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.TermQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195762907
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.TermQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:23,045][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{3CuEatOsQMS_aUkF0rsX9A}{local}{local[660]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:23,055][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:23,056][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:23,069][WARN ][org.elasticsearch.deprecation.index.mapper]  [xTHLw] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:23,069][WARN ][org.elasticsearch.deprecation.index.mapper]  [xTHLw] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:23,069][WARN ][org.elasticsearch.deprecation.index.mapper]  [xTHLw] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:23,072][WARN ][org.elasticsearch.deprecation.index.mapper]  [xTHLw] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:23,072][WARN ][org.elasticsearch.deprecation.index.mapper]  [xTHLw] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:23,072][WARN ][org.elasticsearch.deprecation.index.mapper]  [xTHLw] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:23,094][WARN ][org.elasticsearch.deprecation.index.mapper]  [xTHLw] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:23,094][WARN ][org.elasticsearch.deprecation.index.mapper]  [xTHLw] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:23,094][WARN ][org.elasticsearch.deprecation.index.mapper]  [xTHLw] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:23,096][WARN ][org.elasticsearch.deprecation.index.mapper]  [xTHLw] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:23,096][WARN ][org.elasticsearch.deprecation.index.mapper]  [xTHLw] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:23,096][WARN ][org.elasticsearch.deprecation.index.mapper]  [xTHLw] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:23,098][WARN ][org.elasticsearch.deprecation.index.mapper]  [xTHLw] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:23,099][WARN ][org.elasticsearch.deprecation.index.mapper]  [xTHLw] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:23,099][WARN ][org.elasticsearch.deprecation.index.mapper]  [xTHLw] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:23,101][WARN ][org.elasticsearch.deprecation.index.mapper]  [xTHLw] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:23,102][WARN ][org.elasticsearch.deprecation.index.mapper]  [xTHLw] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:23,102][WARN ][org.elasticsearch.deprecation.index.mapper]  [xTHLw] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:23,103][WARN ][org.elasticsearch.deprecation.index.mapper]  [xTHLw] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:23,103][WARN ][org.elasticsearch.deprecation.index.mapper]  [xTHLw] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:23,103][WARN ][org.elasticsearch.deprecation.index.mapper]  [xTHLw] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:23,116][WARN ][org.elasticsearch.deprecation.index.mapper]  [xTHLw] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:23,116][WARN ][org.elasticsearch.deprecation.index.mapper]  [xTHLw] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:23,116][WARN ][org.elasticsearch.deprecation.index.mapper]  [xTHLw] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:23,119][WARN ][org.elasticsearch.deprecation.index.mapper]  [xTHLw] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:23,119][WARN ][org.elasticsearch.deprecation.index.mapper]  [xTHLw] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:23,119][WARN ][org.elasticsearch.deprecation.index.mapper]  [xTHLw] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.TermQueryBuilderTests)",
  "startTimestamp": 1474195763009,
  "executionTime": 162
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.TermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.TermQueryBuilderTests)",
  "startTimestamp": 1474195763171,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.TermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.TermQueryBuilderTests)",
  "startTimestamp": 1474195763189,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.TermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.TermQueryBuilderTests)",
  "startTimestamp": 1474195763192,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.TermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.TermQueryBuilderTests)",
  "startTimestamp": 1474195763195,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testGeo(org.elasticsearch.index.query.TermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeo(org.elasticsearch.index.query.TermQueryBuilderTests)",
  "startTimestamp": 1474195763203,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.TermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.TermQueryBuilderTests)",
  "startTimestamp": 1474195763206,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.TermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.TermQueryBuilderTests)",
  "startTimestamp": 1474195763209,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.TermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.TermQueryBuilderTests)",
  "startTimestamp": 1474195763212,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.TermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.TermQueryBuilderTests)",
  "startTimestamp": 1474195763215,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testTermArray(org.elasticsearch.index.query.TermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermArray(org.elasticsearch.index.query.TermQueryBuilderTests)",
  "startTimestamp": 1474195763219,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.TermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.TermQueryBuilderTests)",
  "startTimestamp": 1474195763222,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.TermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.TermQueryBuilderTests)",
  "startTimestamp": 1474195763228,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.TermQueryBuilderTests",
  "startTimestamp": 1474195762907,
  "executionTime": 328
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.TypeQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.TypeQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.TypeQueryBuilderTests",
   "children": [
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.TypeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.TypeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.TypeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArgument(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "displayName": "testIllegalArgument(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "methodName": "testIllegalArgument",
     "className": "org.elasticsearch.index.query.TypeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.TypeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.TypeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.TypeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.TypeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.TypeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.TypeQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195763534
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.TypeQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:49:23,577][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{BWr7j5mCRCu6wNGltEZZLA}{local}{local[661]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:49:23,584][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:49:23,584][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:49:23,599][WARN ][org.elasticsearch.deprecation.index.mapper]  [WfCiQmtCQk] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:49:23,599][WARN ][org.elasticsearch.deprecation.index.mapper]  [WfCiQmtCQk] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:49:23,599][WARN ][org.elasticsearch.deprecation.index.mapper]  [WfCiQmtCQk] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:49:23,601][WARN ][org.elasticsearch.deprecation.index.mapper]  [WfCiQmtCQk] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:49:23,602][WARN ][org.elasticsearch.deprecation.index.mapper]  [WfCiQmtCQk] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:49:23,602][WARN ][org.elasticsearch.deprecation.index.mapper]  [WfCiQmtCQk] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:49:23,605][WARN ][org.elasticsearch.deprecation.index.mapper]  [WfCiQmtCQk] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:49:23,605][WARN ][org.elasticsearch.deprecation.index.mapper]  [WfCiQmtCQk] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:49:23,605][WARN ][org.elasticsearch.deprecation.index.mapper]  [WfCiQmtCQk] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.TypeQueryBuilderTests)",
  "startTimestamp": 1474195763573,
  "executionTime": 33
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.TypeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.TypeQueryBuilderTests)",
  "startTimestamp": 1474195763606,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.TypeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.TypeQueryBuilderTests)",
  "startTimestamp": 1474195763612,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArgument(org.elasticsearch.index.query.TypeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArgument(org.elasticsearch.index.query.TypeQueryBuilderTests)",
  "startTimestamp": 1474195763614,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.TypeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.TypeQueryBuilderTests)",
  "startTimestamp": 1474195763617,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.TypeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.TypeQueryBuilderTests)",
  "startTimestamp": 1474195763621,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.TypeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.TypeQueryBuilderTests)",
  "startTimestamp": 1474195763623,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.TypeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.TypeQueryBuilderTests)",
  "startTimestamp": 1474195763625,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.TypeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.TypeQueryBuilderTests)",
  "startTimestamp": 1474195763627,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.TypeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.TypeQueryBuilderTests)",
  "startTimestamp": 1474195763634,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.TypeQueryBuilderTests",
  "startTimestamp": 1474195763534,
  "executionTime": 107
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.search.geo.GeoPointParsingTests",
   "displayName": "org.elasticsearch.index.search.geo.GeoPointParsingTests",
   "methodName": null,
   "className": "org.elasticsearch.index.search.geo.GeoPointParsingTests",
   "children": [
    {
     "id": "ID#testGeoPointParsing(org.elasticsearch.index.search.geo.GeoPointParsingTests)",
     "displayName": "testGeoPointParsing(org.elasticsearch.index.search.geo.GeoPointParsingTests)",
     "methodName": "testGeoPointParsing",
     "className": "org.elasticsearch.index.search.geo.GeoPointParsingTests",
     "children": []
    },
    {
     "id": "ID#testInvalidField(org.elasticsearch.index.search.geo.GeoPointParsingTests)",
     "displayName": "testInvalidField(org.elasticsearch.index.search.geo.GeoPointParsingTests)",
     "methodName": "testInvalidField",
     "className": "org.elasticsearch.index.search.geo.GeoPointParsingTests",
     "children": []
    },
    {
     "id": "ID#testEqualsHashCodeContract(org.elasticsearch.index.search.geo.GeoPointParsingTests)",
     "displayName": "testEqualsHashCodeContract(org.elasticsearch.index.search.geo.GeoPointParsingTests)",
     "methodName": "testEqualsHashCodeContract",
     "className": "org.elasticsearch.index.search.geo.GeoPointParsingTests",
     "children": []
    },
    {
     "id": "ID#testInvalidPointLatHashMix(org.elasticsearch.index.search.geo.GeoPointParsingTests)",
     "displayName": "testInvalidPointLatHashMix(org.elasticsearch.index.search.geo.GeoPointParsingTests)",
     "methodName": "testInvalidPointLatHashMix",
     "className": "org.elasticsearch.index.search.geo.GeoPointParsingTests",
     "children": []
    },
    {
     "id": "ID#testInvalidPointEmbeddedObject(org.elasticsearch.index.search.geo.GeoPointParsingTests)",
     "displayName": "testInvalidPointEmbeddedObject(org.elasticsearch.index.search.geo.GeoPointParsingTests)",
     "methodName": "testInvalidPointEmbeddedObject",
     "className": "org.elasticsearch.index.search.geo.GeoPointParsingTests",
     "children": []
    },
    {
     "id": "ID#testInvalidPointLonHashMix(org.elasticsearch.index.search.geo.GeoPointParsingTests)",
     "displayName": "testInvalidPointLonHashMix(org.elasticsearch.index.search.geo.GeoPointParsingTests)",
     "methodName": "testInvalidPointLonHashMix",
     "className": "org.elasticsearch.index.search.geo.GeoPointParsingTests",
     "children": []
    },
    {
     "id": "ID#testGeoPointReset(org.elasticsearch.index.search.geo.GeoPointParsingTests)",
     "displayName": "testGeoPointReset(org.elasticsearch.index.search.geo.GeoPointParsingTests)",
     "methodName": "testGeoPointReset",
     "className": "org.elasticsearch.index.search.geo.GeoPointParsingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195763811
 }
]

[
 "TEST_STARTED",
 "ID#testGeoPointParsing(org.elasticsearch.index.search.geo.GeoPointParsingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoPointParsing(org.elasticsearch.index.search.geo.GeoPointParsingTests)",
  "startTimestamp": 1474195763838,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidField(org.elasticsearch.index.search.geo.GeoPointParsingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidField(org.elasticsearch.index.search.geo.GeoPointParsingTests)",
  "startTimestamp": 1474195763840,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsHashCodeContract(org.elasticsearch.index.search.geo.GeoPointParsingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsHashCodeContract(org.elasticsearch.index.search.geo.GeoPointParsingTests)",
  "startTimestamp": 1474195763842,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidPointLatHashMix(org.elasticsearch.index.search.geo.GeoPointParsingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidPointLatHashMix(org.elasticsearch.index.search.geo.GeoPointParsingTests)",
  "startTimestamp": 1474195763844,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidPointEmbeddedObject(org.elasticsearch.index.search.geo.GeoPointParsingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidPointEmbeddedObject(org.elasticsearch.index.search.geo.GeoPointParsingTests)",
  "startTimestamp": 1474195763846,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidPointLonHashMix(org.elasticsearch.index.search.geo.GeoPointParsingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidPointLonHashMix(org.elasticsearch.index.search.geo.GeoPointParsingTests)",
  "startTimestamp": 1474195763848,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testGeoPointReset(org.elasticsearch.index.search.geo.GeoPointParsingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoPointReset(org.elasticsearch.index.search.geo.GeoPointParsingTests)",
  "startTimestamp": 1474195763849,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.search.geo.GeoPointParsingTests",
  "startTimestamp": 1474195763811,
  "executionTime": 44
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.search.geo.GeoUtilsTests",
   "displayName": "org.elasticsearch.index.search.geo.GeoUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
   "children": [
    {
     "id": "ID#testNormalizeLonEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLonEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLonEdgeCases",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testQuadTreeCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testQuadTreeCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testQuadTreeCellSize",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testQuadTreeLevelsForPrecisionString(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testQuadTreeLevelsForPrecisionString(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testQuadTreeLevelsForPrecisionString",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testQuadTreeLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testQuadTreeLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testQuadTreeLevelsForPrecision",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizePointOutsideNormalRange_withOptions(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizePointOutsideNormalRange_withOptions(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizePointOutsideNormalRange_withOptions",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointLatWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointLatWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointLatWrongType",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLonOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLonOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLonOutsideNormalRange",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointLonLatGeoHash(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointLonLatGeoHash(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointLonLatGeoHash",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizePointOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizePointOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizePointOutsideNormalRange",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointArrayTooManyValues(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointArrayTooManyValues(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointArrayTooManyValues",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointLatNoLon(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointLatNoLon(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointLatNoLon",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLonHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLonHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLonHuge",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testGeohashCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testGeohashCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testGeohashCellHeight",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testGeoHashLevelsForPrecision_String(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testGeoHashLevelsForPrecision_String(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testGeoHashLevelsForPrecision_String",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testPrefixTreeCellSizes(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testPrefixTreeCellSizes(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testPrefixTreeCellSizes",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testQuadTreeCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testQuadTreeCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testQuadTreeCellWidth",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizePointInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizePointInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizePointInNormalRange",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLatInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLatInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLatInNormalRange",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointExtraField(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointExtraField(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointExtraField",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPoint(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPoint(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPoint",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointLonWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointLonWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointLonWrongType",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLatEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLatEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLatEdgeCases",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointLonNoLat(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointLonNoLat(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointLonNoLat",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLatOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLatOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLatOutsideNormalRange",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointGeohashWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointGeohashWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointGeohashWrongType",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointInvalidType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointInvalidType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointInvalidType",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointGeohash(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointGeohash(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointGeohash",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointArrayWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointArrayWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointArrayWrongType",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLatHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLatHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLatHuge",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testGeoHashLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testGeoHashLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testGeoHashLevelsForPrecision",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizePointHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizePointHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizePointHuge",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizePointEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizePointEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizePointEdgeCases",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testGeohashCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testGeohashCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testGeohashCellSize",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testQuadTreeCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testQuadTreeCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testQuadTreeCellHeight",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLonInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLonInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLonInNormalRange",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testGeohashCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testGeohashCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testGeohashCellWidth",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195764105
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLonEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLonEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474195764121,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testQuadTreeCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQuadTreeCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474195764122,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testQuadTreeLevelsForPrecisionString(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQuadTreeLevelsForPrecisionString(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474195764124,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQuadTreeLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQuadTreeLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474195764127,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizePointOutsideNormalRange_withOptions(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizePointOutsideNormalRange_withOptions(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474195764129,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointLatWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointLatWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474195764132,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLonOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLonOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474195764134,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointLonLatGeoHash(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointLonLatGeoHash(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474195764136,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizePointOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizePointOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474195764139,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointArrayTooManyValues(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointArrayTooManyValues(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474195764141,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointLatNoLon(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointLatNoLon(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474195764144,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLonHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLonHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474195764146,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGeohashCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeohashCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474195764148,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGeoHashLevelsForPrecision_String(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoHashLevelsForPrecision_String(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474195764150,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testPrefixTreeCellSizes(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrefixTreeCellSizes(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474195764153,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testQuadTreeCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQuadTreeCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474195764166,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizePointInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizePointInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474195764169,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLatInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLatInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474195764172,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointExtraField(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointExtraField(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474195764173,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPoint(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPoint(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474195764175,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointLonWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointLonWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474195764203,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLatEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLatEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474195764205,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointLonNoLat(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointLonNoLat(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474195764207,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLatOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLatOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474195764210,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointGeohashWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointGeohashWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474195764213,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointInvalidType(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointInvalidType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474195764215,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointGeohash(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointGeohash(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474195764217,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointArrayWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointArrayWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474195764230,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLatHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLatHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474195764231,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGeoHashLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoHashLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474195764233,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizePointHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizePointHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474195764235,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizePointEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizePointEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474195764237,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGeohashCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeohashCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474195764239,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testQuadTreeCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQuadTreeCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474195764241,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLonInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLonInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474195764250,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testGeohashCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeohashCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474195764254,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.search.geo.GeoUtilsTests",
  "startTimestamp": 1474195764105,
  "executionTime": 153
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.search.nested.NestedSortingTests",
   "displayName": "org.elasticsearch.index.search.nested.NestedSortingTests",
   "methodName": null,
   "className": "org.elasticsearch.index.search.nested.NestedSortingTests",
   "children": [
    {
     "id": "ID#testEmpty(org.elasticsearch.index.search.nested.NestedSortingTests)",
     "displayName": "testEmpty(org.elasticsearch.index.search.nested.NestedSortingTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.index.search.nested.NestedSortingTests",
     "children": []
    },
    {
     "id": "ID#testNestedSorting(org.elasticsearch.index.search.nested.NestedSortingTests)",
     "displayName": "testNestedSorting(org.elasticsearch.index.search.nested.NestedSortingTests)",
     "methodName": "testNestedSorting",
     "className": "org.elasticsearch.index.search.nested.NestedSortingTests",
     "children": []
    },
    {
     "id": "ID#testDuel(org.elasticsearch.index.search.nested.NestedSortingTests)",
     "displayName": "testDuel(org.elasticsearch.index.search.nested.NestedSortingTests)",
     "methodName": "testDuel",
     "className": "org.elasticsearch.index.search.nested.NestedSortingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195764399
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.index.search.nested.NestedSortingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:24,486][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:24,524][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:24,524][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:24,530][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[8784], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:24,532][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:24,532][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:24,702][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:24,703][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:24,703][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[140]}, bound_addresses {local[140]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:24,712][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{4kw2xcMFQm6EEHHwp5NSxQ}{5RGkHBKWR-WMLNvkTvJNrA}{local}{local[140]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:24,713][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:24,728][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:24,749][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:24,841][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:24,858][INFO ][org.elasticsearch.index.search.nested] [NestedSortingTests#testEmpty]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.index.search.nested.NestedSortingTests)",
  "startTimestamp": 1474195764461,
  "executionTime": 428
 }
]

[
 "TEST_STARTED",
 "ID#testNestedSorting(org.elasticsearch.index.search.nested.NestedSortingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:24,897][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:24,974][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:25,030][INFO ][org.elasticsearch.index.search.nested] [NestedSortingTests#testNestedSorting]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedSorting(org.elasticsearch.index.search.nested.NestedSortingTests)",
  "startTimestamp": 1474195764889,
  "executionTime": 258
 }
]

[
 "TEST_STARTED",
 "ID#testDuel(org.elasticsearch.index.search.nested.NestedSortingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:25,154][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:25,234][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:25,264][INFO ][org.elasticsearch.index.search.nested] [NestedSortingTests#testDuel]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuel(org.elasticsearch.index.search.nested.NestedSortingTests)",
  "startTimestamp": 1474195765148,
  "executionTime": 156
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:25,305][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:25,305][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:25,305][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:25,307][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.search.nested.NestedSortingTests",
  "startTimestamp": 1474195764399,
  "executionTime": 917
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.snapshots.blobstore.SlicedInputStreamTests",
   "displayName": "org.elasticsearch.index.snapshots.blobstore.SlicedInputStreamTests",
   "methodName": null,
   "className": "org.elasticsearch.index.snapshots.blobstore.SlicedInputStreamTests",
   "children": [
    {
     "id": "ID#testReadRandom(org.elasticsearch.index.snapshots.blobstore.SlicedInputStreamTests)",
     "displayName": "testReadRandom(org.elasticsearch.index.snapshots.blobstore.SlicedInputStreamTests)",
     "methodName": "testReadRandom",
     "className": "org.elasticsearch.index.snapshots.blobstore.SlicedInputStreamTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195765564
 }
]

[
 "TEST_STARTED",
 "ID#testReadRandom(org.elasticsearch.index.snapshots.blobstore.SlicedInputStreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadRandom(org.elasticsearch.index.snapshots.blobstore.SlicedInputStreamTests)",
  "startTimestamp": 1474195765591,
  "executionTime": 22
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.snapshots.blobstore.SlicedInputStreamTests",
  "startTimestamp": 1474195765564,
  "executionTime": 51
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.store.DirectoryUtilsTests",
   "displayName": "org.elasticsearch.index.store.DirectoryUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.index.store.DirectoryUtilsTests",
   "children": [
    {
     "id": "ID#testGetLeave(org.elasticsearch.index.store.DirectoryUtilsTests)",
     "displayName": "testGetLeave(org.elasticsearch.index.store.DirectoryUtilsTests)",
     "methodName": "testGetLeave",
     "className": "org.elasticsearch.index.store.DirectoryUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195765852
 }
]

[
 "TEST_STARTED",
 "ID#testGetLeave(org.elasticsearch.index.store.DirectoryUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetLeave(org.elasticsearch.index.store.DirectoryUtilsTests)",
  "startTimestamp": 1474195765894,
  "executionTime": 657
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.store.DirectoryUtilsTests",
  "startTimestamp": 1474195765852,
  "executionTime": 723
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.store.StoreTests",
   "displayName": "org.elasticsearch.index.store.StoreTests",
   "methodName": null,
   "className": "org.elasticsearch.index.store.StoreTests",
   "children": [
    {
     "id": "ID#testCanOpenIndex(org.elasticsearch.index.store.StoreTests)",
     "displayName": "testCanOpenIndex(org.elasticsearch.index.store.StoreTests)",
     "methodName": "testCanOpenIndex",
     "className": "org.elasticsearch.index.store.StoreTests",
     "children": []
    },
    {
     "id": "ID#testCheckIntegrity(org.elasticsearch.index.store.StoreTests)",
     "displayName": "testCheckIntegrity(org.elasticsearch.index.store.StoreTests)",
     "methodName": "testCheckIntegrity",
     "className": "org.elasticsearch.index.store.StoreTests",
     "children": []
    },
    {
     "id": "ID#testOnCloseCallback(org.elasticsearch.index.store.StoreTests)",
     "displayName": "testOnCloseCallback(org.elasticsearch.index.store.StoreTests)",
     "methodName": "testOnCloseCallback",
     "className": "org.elasticsearch.index.store.StoreTests",
     "children": []
    },
    {
     "id": "ID#testCanReadOldCorruptionMarker(org.elasticsearch.index.store.StoreTests)",
     "displayName": "testCanReadOldCorruptionMarker(org.elasticsearch.index.store.StoreTests)",
     "methodName": "testCanReadOldCorruptionMarker",
     "className": "org.elasticsearch.index.store.StoreTests",
     "children": []
    },
    {
     "id": "ID#testMarkCorruptedOnTruncatedSegmentsFile(org.elasticsearch.index.store.StoreTests)",
     "displayName": "testMarkCorruptedOnTruncatedSegmentsFile(org.elasticsearch.index.store.StoreTests)",
     "methodName": "testMarkCorruptedOnTruncatedSegmentsFile",
     "className": "org.elasticsearch.index.store.StoreTests",
     "children": []
    },
    {
     "id": "ID#testRefCount(org.elasticsearch.index.store.StoreTests)",
     "displayName": "testRefCount(org.elasticsearch.index.store.StoreTests)",
     "methodName": "testRefCount",
     "className": "org.elasticsearch.index.store.StoreTests",
     "children": []
    },
    {
     "id": "ID#testDeserializeCorruptionException(org.elasticsearch.index.store.StoreTests)",
     "displayName": "testDeserializeCorruptionException(org.elasticsearch.index.store.StoreTests)",
     "methodName": "testDeserializeCorruptionException",
     "className": "org.elasticsearch.index.store.StoreTests",
     "children": []
    },
    {
     "id": "ID#testVerifyingIndexOutput(org.elasticsearch.index.store.StoreTests)",
     "displayName": "testVerifyingIndexOutput(org.elasticsearch.index.store.StoreTests)",
     "methodName": "testVerifyingIndexOutput",
     "className": "org.elasticsearch.index.store.StoreTests",
     "children": []
    },
    {
     "id": "ID#testMetadataSnapshotStreaming(org.elasticsearch.index.store.StoreTests)",
     "displayName": "testMetadataSnapshotStreaming(org.elasticsearch.index.store.StoreTests)",
     "methodName": "testMetadataSnapshotStreaming",
     "className": "org.elasticsearch.index.store.StoreTests",
     "children": []
    },
    {
     "id": "ID#testVerifyingIndexInput(org.elasticsearch.index.store.StoreTests)",
     "displayName": "testVerifyingIndexInput(org.elasticsearch.index.store.StoreTests)",
     "methodName": "testVerifyingIndexInput",
     "className": "org.elasticsearch.index.store.StoreTests",
     "children": []
    },
    {
     "id": "ID#testChecksumCorrupted(org.elasticsearch.index.store.StoreTests)",
     "displayName": "testChecksumCorrupted(org.elasticsearch.index.store.StoreTests)",
     "methodName": "testChecksumCorrupted",
     "className": "org.elasticsearch.index.store.StoreTests",
     "children": []
    },
    {
     "id": "ID#testStreamStoreFilesMetaData(org.elasticsearch.index.store.StoreTests)",
     "displayName": "testStreamStoreFilesMetaData(org.elasticsearch.index.store.StoreTests)",
     "methodName": "testStreamStoreFilesMetaData",
     "className": "org.elasticsearch.index.store.StoreTests",
     "children": []
    },
    {
     "id": "ID#testRecoveryDiff(org.elasticsearch.index.store.StoreTests)",
     "displayName": "testRecoveryDiff(org.elasticsearch.index.store.StoreTests)",
     "methodName": "testRecoveryDiff",
     "className": "org.elasticsearch.index.store.StoreTests",
     "children": []
    },
    {
     "id": "ID#testCleanupFromSnapshot(org.elasticsearch.index.store.StoreTests)",
     "displayName": "testCleanupFromSnapshot(org.elasticsearch.index.store.StoreTests)",
     "methodName": "testCleanupFromSnapshot",
     "className": "org.elasticsearch.index.store.StoreTests",
     "children": []
    },
    {
     "id": "ID#testStoreStats(org.elasticsearch.index.store.StoreTests)",
     "displayName": "testStoreStats(org.elasticsearch.index.store.StoreTests)",
     "methodName": "testStoreStats",
     "className": "org.elasticsearch.index.store.StoreTests",
     "children": []
    },
    {
     "id": "ID#testVerifyingIndexOutputOnEmptyFile(org.elasticsearch.index.store.StoreTests)",
     "displayName": "testVerifyingIndexOutputOnEmptyFile(org.elasticsearch.index.store.StoreTests)",
     "methodName": "testVerifyingIndexOutputOnEmptyFile",
     "className": "org.elasticsearch.index.store.StoreTests",
     "children": []
    },
    {
     "id": "ID#testUserDataRead(org.elasticsearch.index.store.StoreTests)",
     "displayName": "testUserDataRead(org.elasticsearch.index.store.StoreTests)",
     "methodName": "testUserDataRead",
     "className": "org.elasticsearch.index.store.StoreTests",
     "children": []
    },
    {
     "id": "ID#testVerifyingIndexOutputWithBogusInput(org.elasticsearch.index.store.StoreTests)",
     "displayName": "testVerifyingIndexOutputWithBogusInput(org.elasticsearch.index.store.StoreTests)",
     "methodName": "testVerifyingIndexOutputWithBogusInput",
     "className": "org.elasticsearch.index.store.StoreTests",
     "children": []
    },
    {
     "id": "ID#testNewChecksums(org.elasticsearch.index.store.StoreTests)",
     "displayName": "testNewChecksums(org.elasticsearch.index.store.StoreTests)",
     "methodName": "testNewChecksums",
     "className": "org.elasticsearch.index.store.StoreTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195766641
 }
]

[
 "TEST_STARTED",
 "ID#testCanOpenIndex(org.elasticsearch.index.store.StoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCanOpenIndex(org.elasticsearch.index.store.StoreTests)",
  "startTimestamp": 1474195766656,
  "executionTime": 387
 }
]

[
 "TEST_STARTED",
 "ID#testCheckIntegrity(org.elasticsearch.index.store.StoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckIntegrity(org.elasticsearch.index.store.StoreTests)",
  "startTimestamp": 1474195767043,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testOnCloseCallback(org.elasticsearch.index.store.StoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOnCloseCallback(org.elasticsearch.index.store.StoreTests)",
  "startTimestamp": 1474195767047,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCanReadOldCorruptionMarker(org.elasticsearch.index.store.StoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCanReadOldCorruptionMarker(org.elasticsearch.index.store.StoreTests)",
  "startTimestamp": 1474195767050,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testMarkCorruptedOnTruncatedSegmentsFile(org.elasticsearch.index.store.StoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMarkCorruptedOnTruncatedSegmentsFile(org.elasticsearch.index.store.StoreTests)",
  "startTimestamp": 1474195767070,
  "executionTime": 72
 }
]

[
 "TEST_STARTED",
 "ID#testRefCount(org.elasticsearch.index.store.StoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRefCount(org.elasticsearch.index.store.StoreTests)",
  "startTimestamp": 1474195767142,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testDeserializeCorruptionException(org.elasticsearch.index.store.StoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeserializeCorruptionException(org.elasticsearch.index.store.StoreTests)",
  "startTimestamp": 1474195767147,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testVerifyingIndexOutput(org.elasticsearch.index.store.StoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVerifyingIndexOutput(org.elasticsearch.index.store.StoreTests)",
  "startTimestamp": 1474195767150,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testMetadataSnapshotStreaming(org.elasticsearch.index.store.StoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMetadataSnapshotStreaming(org.elasticsearch.index.store.StoreTests)",
  "startTimestamp": 1474195767155,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testVerifyingIndexInput(org.elasticsearch.index.store.StoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVerifyingIndexInput(org.elasticsearch.index.store.StoreTests)",
  "startTimestamp": 1474195767158,
  "executionTime": 33
 }
]

[
 "TEST_STARTED",
 "ID#testChecksumCorrupted(org.elasticsearch.index.store.StoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testChecksumCorrupted(org.elasticsearch.index.store.StoreTests)",
  "startTimestamp": 1474195767192,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testStreamStoreFilesMetaData(org.elasticsearch.index.store.StoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamStoreFilesMetaData(org.elasticsearch.index.store.StoreTests)",
  "startTimestamp": 1474195767200,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testRecoveryDiff(org.elasticsearch.index.store.StoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoveryDiff(org.elasticsearch.index.store.StoreTests)",
  "startTimestamp": 1474195767206,
  "executionTime": 142
 }
]

[
 "TEST_STARTED",
 "ID#testCleanupFromSnapshot(org.elasticsearch.index.store.StoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCleanupFromSnapshot(org.elasticsearch.index.store.StoreTests)",
  "startTimestamp": 1474195767348,
  "executionTime": 147
 }
]

[
 "TEST_STARTED",
 "ID#testStoreStats(org.elasticsearch.index.store.StoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStoreStats(org.elasticsearch.index.store.StoreTests)",
  "startTimestamp": 1474195767496,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testVerifyingIndexOutputOnEmptyFile(org.elasticsearch.index.store.StoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVerifyingIndexOutputOnEmptyFile(org.elasticsearch.index.store.StoreTests)",
  "startTimestamp": 1474195767500,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUserDataRead(org.elasticsearch.index.store.StoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUserDataRead(org.elasticsearch.index.store.StoreTests)",
  "startTimestamp": 1474195767503,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testVerifyingIndexOutputWithBogusInput(org.elasticsearch.index.store.StoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVerifyingIndexOutputWithBogusInput(org.elasticsearch.index.store.StoreTests)",
  "startTimestamp": 1474195767512,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNewChecksums(org.elasticsearch.index.store.StoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNewChecksums(org.elasticsearch.index.store.StoreTests)",
  "startTimestamp": 1474195767514,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.store.StoreTests",
  "startTimestamp": 1474195766641,
  "executionTime": 885
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.IndicesRequestCacheTests",
   "displayName": "org.elasticsearch.indices.IndicesRequestCacheTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.IndicesRequestCacheTests",
   "children": [
    {
     "id": "ID#testCacheDifferentReaders(org.elasticsearch.indices.IndicesRequestCacheTests)",
     "displayName": "testCacheDifferentReaders(org.elasticsearch.indices.IndicesRequestCacheTests)",
     "methodName": "testCacheDifferentReaders",
     "className": "org.elasticsearch.indices.IndicesRequestCacheTests",
     "children": []
    },
    {
     "id": "ID#testEviction(org.elasticsearch.indices.IndicesRequestCacheTests)",
     "displayName": "testEviction(org.elasticsearch.indices.IndicesRequestCacheTests)",
     "methodName": "testEviction",
     "className": "org.elasticsearch.indices.IndicesRequestCacheTests",
     "children": []
    },
    {
     "id": "ID#testClearAllEntityIdentity(org.elasticsearch.indices.IndicesRequestCacheTests)",
     "displayName": "testClearAllEntityIdentity(org.elasticsearch.indices.IndicesRequestCacheTests)",
     "methodName": "testClearAllEntityIdentity",
     "className": "org.elasticsearch.indices.IndicesRequestCacheTests",
     "children": []
    },
    {
     "id": "ID#testBasicOperationsCache(org.elasticsearch.indices.IndicesRequestCacheTests)",
     "displayName": "testBasicOperationsCache(org.elasticsearch.indices.IndicesRequestCacheTests)",
     "methodName": "testBasicOperationsCache",
     "className": "org.elasticsearch.indices.IndicesRequestCacheTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195767670
 }
]

[
 "TEST_STARTED",
 "ID#testCacheDifferentReaders(org.elasticsearch.indices.IndicesRequestCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCacheDifferentReaders(org.elasticsearch.indices.IndicesRequestCacheTests)",
  "startTimestamp": 1474195767679,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testEviction(org.elasticsearch.indices.IndicesRequestCacheTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:27,777][INFO ][org.elasticsearch.indices] [node_s_0] Memory size: 1.2kb%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEviction(org.elasticsearch.indices.IndicesRequestCacheTests)",
  "startTimestamp": 1474195767706,
  "executionTime": 77
 }
]

[
 "TEST_STARTED",
 "ID#testClearAllEntityIdentity(org.elasticsearch.indices.IndicesRequestCacheTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:27,801][INFO ][org.elasticsearch.indices] [node_s_0] Memory size: 1.2kb%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClearAllEntityIdentity(org.elasticsearch.indices.IndicesRequestCacheTests)",
  "startTimestamp": 1474195767783,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testBasicOperationsCache(org.elasticsearch.indices.IndicesRequestCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicOperationsCache(org.elasticsearch.indices.IndicesRequestCacheTests)",
  "startTimestamp": 1474195767804,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.IndicesRequestCacheTests",
  "startTimestamp": 1474195767670,
  "executionTime": 144
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.TermsLookupTests",
   "displayName": "org.elasticsearch.indices.TermsLookupTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.TermsLookupTests",
   "children": [
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.indices.TermsLookupTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.indices.TermsLookupTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.indices.TermsLookupTests",
     "children": []
    },
    {
     "id": "ID#testTermsLookup(org.elasticsearch.indices.TermsLookupTests)",
     "displayName": "testTermsLookup(org.elasticsearch.indices.TermsLookupTests)",
     "methodName": "testTermsLookup",
     "className": "org.elasticsearch.indices.TermsLookupTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.indices.TermsLookupTests)",
     "displayName": "testSerialization(org.elasticsearch.indices.TermsLookupTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.indices.TermsLookupTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195767942
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.indices.TermsLookupTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.indices.TermsLookupTests)",
  "startTimestamp": 1474195767959,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTermsLookup(org.elasticsearch.indices.TermsLookupTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermsLookup(org.elasticsearch.indices.TermsLookupTests)",
  "startTimestamp": 1474195767961,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.indices.TermsLookupTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.indices.TermsLookupTests)",
  "startTimestamp": 1474195767963,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.TermsLookupTests",
  "startTimestamp": 1474195767942,
  "executionTime": 24
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.rest.BytesRestResponseTests",
   "displayName": "org.elasticsearch.rest.BytesRestResponseTests",
   "methodName": null,
   "className": "org.elasticsearch.rest.BytesRestResponseTests",
   "children": [
    {
     "id": "ID#testErrorTrace(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testErrorTrace(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testErrorTrace",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testNullThrowable(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testNullThrowable(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testNullThrowable",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testNonElasticsearchExceptionIsNotShownAsSimpleMessage(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testNonElasticsearchExceptionIsNotShownAsSimpleMessage(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testNonElasticsearchExceptionIsNotShownAsSimpleMessage",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testGuessRootCause(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testGuessRootCause(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testGuessRootCause",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testWithHeaders(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testWithHeaders(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testWithHeaders",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testResponseWhenPathContainsEncodingError(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testResponseWhenPathContainsEncodingError(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testResponseWhenPathContainsEncodingError",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testDetailedExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testDetailedExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testDetailedExceptionMessage",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testConvert(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testConvert(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testConvert",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testSimpleExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testSimpleExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testSimpleExceptionMessage",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testResponseWhenInternalServerError(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testResponseWhenInternalServerError(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testResponseWhenInternalServerError",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195768219
 }
]

[
 "TEST_STARTED",
 "ID#testErrorTrace(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testErrorTrace(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1474195768237,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testNullThrowable(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullThrowable(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1474195768242,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNonElasticsearchExceptionIsNotShownAsSimpleMessage(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNonElasticsearchExceptionIsNotShownAsSimpleMessage(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1474195768244,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testGuessRootCause(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGuessRootCause(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1474195768246,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testWithHeaders(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithHeaders(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1474195768251,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testResponseWhenPathContainsEncodingError(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResponseWhenPathContainsEncodingError(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1474195768253,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDetailedExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDetailedExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1474195768256,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testConvert(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConvert(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1474195768259,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1474195768261,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testResponseWhenInternalServerError(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResponseWhenInternalServerError(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1474195768263,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.rest.BytesRestResponseTests",
  "startTimestamp": 1474195768219,
  "executionTime": 48
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.rest.DeprecationRestHandlerTests",
   "displayName": "org.elasticsearch.rest.DeprecationRestHandlerTests",
   "methodName": null,
   "className": "org.elasticsearch.rest.DeprecationRestHandlerTests",
   "children": [
    {
     "id": "ID#testValidHeaderValue(org.elasticsearch.rest.DeprecationRestHandlerTests)",
     "displayName": "testValidHeaderValue(org.elasticsearch.rest.DeprecationRestHandlerTests)",
     "methodName": "testValidHeaderValue",
     "className": "org.elasticsearch.rest.DeprecationRestHandlerTests",
     "children": []
    },
    {
     "id": "ID#testNullDeprecationLogger(org.elasticsearch.rest.DeprecationRestHandlerTests)",
     "displayName": "testNullDeprecationLogger(org.elasticsearch.rest.DeprecationRestHandlerTests)",
     "methodName": "testNullDeprecationLogger",
     "className": "org.elasticsearch.rest.DeprecationRestHandlerTests",
     "children": []
    },
    {
     "id": "ID#testInvalidHeaderValue(org.elasticsearch.rest.DeprecationRestHandlerTests)",
     "displayName": "testInvalidHeaderValue(org.elasticsearch.rest.DeprecationRestHandlerTests)",
     "methodName": "testInvalidHeaderValue",
     "className": "org.elasticsearch.rest.DeprecationRestHandlerTests",
     "children": []
    },
    {
     "id": "ID#testInvalidDeprecationMessageThrowsException(org.elasticsearch.rest.DeprecationRestHandlerTests)",
     "displayName": "testInvalidDeprecationMessageThrowsException(org.elasticsearch.rest.DeprecationRestHandlerTests)",
     "methodName": "testInvalidDeprecationMessageThrowsException",
     "className": "org.elasticsearch.rest.DeprecationRestHandlerTests",
     "children": []
    },
    {
     "id": "ID#testNullHandler(org.elasticsearch.rest.DeprecationRestHandlerTests)",
     "displayName": "testNullHandler(org.elasticsearch.rest.DeprecationRestHandlerTests)",
     "methodName": "testNullHandler",
     "className": "org.elasticsearch.rest.DeprecationRestHandlerTests",
     "children": []
    },
    {
     "id": "ID#testInvalidHeaderValueEmpty(org.elasticsearch.rest.DeprecationRestHandlerTests)",
     "displayName": "testInvalidHeaderValueEmpty(org.elasticsearch.rest.DeprecationRestHandlerTests)",
     "methodName": "testInvalidHeaderValueEmpty",
     "className": "org.elasticsearch.rest.DeprecationRestHandlerTests",
     "children": []
    },
    {
     "id": "ID#testInvalidHeaderValueNull(org.elasticsearch.rest.DeprecationRestHandlerTests)",
     "displayName": "testInvalidHeaderValueNull(org.elasticsearch.rest.DeprecationRestHandlerTests)",
     "methodName": "testInvalidHeaderValueNull",
     "className": "org.elasticsearch.rest.DeprecationRestHandlerTests",
     "children": []
    },
    {
     "id": "ID#testHandleRequestLogsWarningThenForwards(org.elasticsearch.rest.DeprecationRestHandlerTests)",
     "displayName": "testHandleRequestLogsWarningThenForwards(org.elasticsearch.rest.DeprecationRestHandlerTests)",
     "methodName": "testHandleRequestLogsWarningThenForwards",
     "className": "org.elasticsearch.rest.DeprecationRestHandlerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195768483
 }
]

[
 "TEST_STARTED",
 "ID#testValidHeaderValue(org.elasticsearch.rest.DeprecationRestHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidHeaderValue(org.elasticsearch.rest.DeprecationRestHandlerTests)",
  "startTimestamp": 1474195768498,
  "executionTime": 30
 }
]

[
 "TEST_STARTED",
 "ID#testNullDeprecationLogger(org.elasticsearch.rest.DeprecationRestHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullDeprecationLogger(org.elasticsearch.rest.DeprecationRestHandlerTests)",
  "startTimestamp": 1474195768528,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidHeaderValue(org.elasticsearch.rest.DeprecationRestHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidHeaderValue(org.elasticsearch.rest.DeprecationRestHandlerTests)",
  "startTimestamp": 1474195768530,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidDeprecationMessageThrowsException(org.elasticsearch.rest.DeprecationRestHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidDeprecationMessageThrowsException(org.elasticsearch.rest.DeprecationRestHandlerTests)",
  "startTimestamp": 1474195768533,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNullHandler(org.elasticsearch.rest.DeprecationRestHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullHandler(org.elasticsearch.rest.DeprecationRestHandlerTests)",
  "startTimestamp": 1474195768535,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidHeaderValueEmpty(org.elasticsearch.rest.DeprecationRestHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidHeaderValueEmpty(org.elasticsearch.rest.DeprecationRestHandlerTests)",
  "startTimestamp": 1474195768538,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidHeaderValueNull(org.elasticsearch.rest.DeprecationRestHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidHeaderValueNull(org.elasticsearch.rest.DeprecationRestHandlerTests)",
  "startTimestamp": 1474195768540,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testHandleRequestLogsWarningThenForwards(org.elasticsearch.rest.DeprecationRestHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHandleRequestLogsWarningThenForwards(org.elasticsearch.rest.DeprecationRestHandlerTests)",
  "startTimestamp": 1474195768543,
  "executionTime": 27
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.rest.DeprecationRestHandlerTests",
  "startTimestamp": 1474195768483,
  "executionTime": 89
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.rest.RestControllerTests",
   "displayName": "org.elasticsearch.rest.RestControllerTests",
   "methodName": null,
   "className": "org.elasticsearch.rest.RestControllerTests",
   "children": [
    {
     "id": "ID#testCanTripCircuitBreaker(org.elasticsearch.rest.RestControllerTests)",
     "displayName": "testCanTripCircuitBreaker(org.elasticsearch.rest.RestControllerTests)",
     "methodName": "testCanTripCircuitBreaker",
     "className": "org.elasticsearch.rest.RestControllerTests",
     "children": []
    },
    {
     "id": "ID#testRegisterWithDeprecatedHandler(org.elasticsearch.rest.RestControllerTests)",
     "displayName": "testRegisterWithDeprecatedHandler(org.elasticsearch.rest.RestControllerTests)",
     "methodName": "testRegisterWithDeprecatedHandler",
     "className": "org.elasticsearch.rest.RestControllerTests",
     "children": []
    },
    {
     "id": "ID#testRegisterAsDeprecatedHandler(org.elasticsearch.rest.RestControllerTests)",
     "displayName": "testRegisterAsDeprecatedHandler(org.elasticsearch.rest.RestControllerTests)",
     "methodName": "testRegisterAsDeprecatedHandler",
     "className": "org.elasticsearch.rest.RestControllerTests",
     "children": []
    },
    {
     "id": "ID#testApplyRelevantHeaders(org.elasticsearch.rest.RestControllerTests)",
     "displayName": "testApplyRelevantHeaders(org.elasticsearch.rest.RestControllerTests)",
     "methodName": "testApplyRelevantHeaders",
     "className": "org.elasticsearch.rest.RestControllerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195768746
 }
]

[
 "TEST_STARTED",
 "ID#testCanTripCircuitBreaker(org.elasticsearch.rest.RestControllerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCanTripCircuitBreaker(org.elasticsearch.rest.RestControllerTests)",
  "startTimestamp": 1474195768761,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterWithDeprecatedHandler(org.elasticsearch.rest.RestControllerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterWithDeprecatedHandler(org.elasticsearch.rest.RestControllerTests)",
  "startTimestamp": 1474195768764,
  "executionTime": 62
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterAsDeprecatedHandler(org.elasticsearch.rest.RestControllerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterAsDeprecatedHandler(org.elasticsearch.rest.RestControllerTests)",
  "startTimestamp": 1474195768826,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testApplyRelevantHeaders(org.elasticsearch.rest.RestControllerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testApplyRelevantHeaders(org.elasticsearch.rest.RestControllerTests)",
  "startTimestamp": 1474195768830,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.rest.RestControllerTests",
  "startTimestamp": 1474195768746,
  "executionTime": 88
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.script.NativeScriptTests",
   "displayName": "org.elasticsearch.script.NativeScriptTests",
   "methodName": null,
   "className": "org.elasticsearch.script.NativeScriptTests",
   "children": [
    {
     "id": "ID#testNativeScript(org.elasticsearch.script.NativeScriptTests)",
     "displayName": "testNativeScript(org.elasticsearch.script.NativeScriptTests)",
     "methodName": "testNativeScript",
     "className": "org.elasticsearch.script.NativeScriptTests",
     "children": []
    },
    {
     "id": "ID#testFineGrainedSettingsDontAffectNativeScripts(org.elasticsearch.script.NativeScriptTests)",
     "displayName": "testFineGrainedSettingsDontAffectNativeScripts(org.elasticsearch.script.NativeScriptTests)",
     "methodName": "testFineGrainedSettingsDontAffectNativeScripts",
     "className": "org.elasticsearch.script.NativeScriptTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195769012
 }
]

[
 "TEST_STARTED",
 "ID#testNativeScript(org.elasticsearch.script.NativeScriptTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNativeScript(org.elasticsearch.script.NativeScriptTests)",
  "startTimestamp": 1474195769028,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testFineGrainedSettingsDontAffectNativeScripts(org.elasticsearch.script.NativeScriptTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFineGrainedSettingsDontAffectNativeScripts(org.elasticsearch.script.NativeScriptTests)",
  "startTimestamp": 1474195769038,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.script.NativeScriptTests",
  "startTimestamp": 1474195769012,
  "executionTime": 36
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.script.ScriptContextRegistryTests",
   "displayName": "org.elasticsearch.script.ScriptContextRegistryTests",
   "methodName": null,
   "className": "org.elasticsearch.script.ScriptContextRegistryTests",
   "children": [
    {
     "id": "ID#testValidateCustomScriptContextsPluginName(org.elasticsearch.script.ScriptContextRegistryTests)",
     "displayName": "testValidateCustomScriptContextsPluginName(org.elasticsearch.script.ScriptContextRegistryTests)",
     "methodName": "testValidateCustomScriptContextsPluginName",
     "className": "org.elasticsearch.script.ScriptContextRegistryTests",
     "children": []
    },
    {
     "id": "ID#testValidateCustomScriptContextsEmptyOperation(org.elasticsearch.script.ScriptContextRegistryTests)",
     "displayName": "testValidateCustomScriptContextsEmptyOperation(org.elasticsearch.script.ScriptContextRegistryTests)",
     "methodName": "testValidateCustomScriptContextsEmptyOperation",
     "className": "org.elasticsearch.script.ScriptContextRegistryTests",
     "children": []
    },
    {
     "id": "ID#testValidateCustomScriptContextsEmptyPluginName(org.elasticsearch.script.ScriptContextRegistryTests)",
     "displayName": "testValidateCustomScriptContextsEmptyPluginName(org.elasticsearch.script.ScriptContextRegistryTests)",
     "methodName": "testValidateCustomScriptContextsEmptyPluginName",
     "className": "org.elasticsearch.script.ScriptContextRegistryTests",
     "children": []
    },
    {
     "id": "ID#testDuplicatedPluginScriptContexts(org.elasticsearch.script.ScriptContextRegistryTests)",
     "displayName": "testDuplicatedPluginScriptContexts(org.elasticsearch.script.ScriptContextRegistryTests)",
     "methodName": "testDuplicatedPluginScriptContexts",
     "className": "org.elasticsearch.script.ScriptContextRegistryTests",
     "children": []
    },
    {
     "id": "ID#testNonDuplicatedPluginScriptContexts(org.elasticsearch.script.ScriptContextRegistryTests)",
     "displayName": "testNonDuplicatedPluginScriptContexts(org.elasticsearch.script.ScriptContextRegistryTests)",
     "methodName": "testNonDuplicatedPluginScriptContexts",
     "className": "org.elasticsearch.script.ScriptContextRegistryTests",
     "children": []
    },
    {
     "id": "ID#testValidateCustomScriptContextsOperation(org.elasticsearch.script.ScriptContextRegistryTests)",
     "displayName": "testValidateCustomScriptContextsOperation(org.elasticsearch.script.ScriptContextRegistryTests)",
     "methodName": "testValidateCustomScriptContextsOperation",
     "className": "org.elasticsearch.script.ScriptContextRegistryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195769274
 }
]

[
 "TEST_STARTED",
 "ID#testValidateCustomScriptContextsPluginName(org.elasticsearch.script.ScriptContextRegistryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidateCustomScriptContextsPluginName(org.elasticsearch.script.ScriptContextRegistryTests)",
  "startTimestamp": 1474195769290,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValidateCustomScriptContextsEmptyOperation(org.elasticsearch.script.ScriptContextRegistryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidateCustomScriptContextsEmptyOperation(org.elasticsearch.script.ScriptContextRegistryTests)",
  "startTimestamp": 1474195769292,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValidateCustomScriptContextsEmptyPluginName(org.elasticsearch.script.ScriptContextRegistryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidateCustomScriptContextsEmptyPluginName(org.elasticsearch.script.ScriptContextRegistryTests)",
  "startTimestamp": 1474195769294,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDuplicatedPluginScriptContexts(org.elasticsearch.script.ScriptContextRegistryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuplicatedPluginScriptContexts(org.elasticsearch.script.ScriptContextRegistryTests)",
  "startTimestamp": 1474195769296,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNonDuplicatedPluginScriptContexts(org.elasticsearch.script.ScriptContextRegistryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNonDuplicatedPluginScriptContexts(org.elasticsearch.script.ScriptContextRegistryTests)",
  "startTimestamp": 1474195769298,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testValidateCustomScriptContextsOperation(org.elasticsearch.script.ScriptContextRegistryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidateCustomScriptContextsOperation(org.elasticsearch.script.ScriptContextRegistryTests)",
  "startTimestamp": 1474195769300,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.script.ScriptContextRegistryTests",
  "startTimestamp": 1474195769274,
  "executionTime": 29
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.script.ScriptContextTests",
   "displayName": "org.elasticsearch.script.ScriptContextTests",
   "methodName": null,
   "className": "org.elasticsearch.script.ScriptContextTests",
   "children": [
    {
     "id": "ID#testCustomScriptContextSettings(org.elasticsearch.script.ScriptContextTests)",
     "displayName": "testCustomScriptContextSettings(org.elasticsearch.script.ScriptContextTests)",
     "methodName": "testCustomScriptContextSettings",
     "className": "org.elasticsearch.script.ScriptContextTests",
     "children": []
    },
    {
     "id": "ID#testUnknownPluginScriptContext(org.elasticsearch.script.ScriptContextTests)",
     "displayName": "testUnknownPluginScriptContext(org.elasticsearch.script.ScriptContextTests)",
     "methodName": "testUnknownPluginScriptContext",
     "className": "org.elasticsearch.script.ScriptContextTests",
     "children": []
    },
    {
     "id": "ID#testUnknownCustomScriptContext(org.elasticsearch.script.ScriptContextTests)",
     "displayName": "testUnknownCustomScriptContext(org.elasticsearch.script.ScriptContextTests)",
     "methodName": "testUnknownCustomScriptContext",
     "className": "org.elasticsearch.script.ScriptContextTests",
     "children": []
    },
    {
     "id": "ID#testCustomGlobalScriptContextSettings(org.elasticsearch.script.ScriptContextTests)",
     "displayName": "testCustomGlobalScriptContextSettings(org.elasticsearch.script.ScriptContextTests)",
     "methodName": "testCustomGlobalScriptContextSettings",
     "className": "org.elasticsearch.script.ScriptContextTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195769548
 }
]

[
 "TEST_STARTED",
 "ID#testCustomScriptContextSettings(org.elasticsearch.script.ScriptContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCustomScriptContextSettings(org.elasticsearch.script.ScriptContextTests)",
  "startTimestamp": 1474195769563,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownPluginScriptContext(org.elasticsearch.script.ScriptContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownPluginScriptContext(org.elasticsearch.script.ScriptContextTests)",
  "startTimestamp": 1474195769572,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownCustomScriptContext(org.elasticsearch.script.ScriptContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownCustomScriptContext(org.elasticsearch.script.ScriptContextTests)",
  "startTimestamp": 1474195769577,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testCustomGlobalScriptContextSettings(org.elasticsearch.script.ScriptContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCustomGlobalScriptContextSettings(org.elasticsearch.script.ScriptContextTests)",
  "startTimestamp": 1474195769583,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.script.ScriptContextTests",
  "startTimestamp": 1474195769548,
  "executionTime": 44
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.script.ScriptExceptionTests",
   "displayName": "org.elasticsearch.script.ScriptExceptionTests",
   "methodName": null,
   "className": "org.elasticsearch.script.ScriptExceptionTests",
   "children": [
    {
     "id": "ID#testJsonOutput(org.elasticsearch.script.ScriptExceptionTests)",
     "displayName": "testJsonOutput(org.elasticsearch.script.ScriptExceptionTests)",
     "methodName": "testJsonOutput",
     "className": "org.elasticsearch.script.ScriptExceptionTests",
     "children": []
    },
    {
     "id": "ID#testRoundTrip(org.elasticsearch.script.ScriptExceptionTests)",
     "displayName": "testRoundTrip(org.elasticsearch.script.ScriptExceptionTests)",
     "methodName": "testRoundTrip",
     "className": "org.elasticsearch.script.ScriptExceptionTests",
     "children": []
    },
    {
     "id": "ID#testNoLeniency(org.elasticsearch.script.ScriptExceptionTests)",
     "displayName": "testNoLeniency(org.elasticsearch.script.ScriptExceptionTests)",
     "methodName": "testNoLeniency",
     "className": "org.elasticsearch.script.ScriptExceptionTests",
     "children": []
    },
    {
     "id": "ID#testImmutableStack(org.elasticsearch.script.ScriptExceptionTests)",
     "displayName": "testImmutableStack(org.elasticsearch.script.ScriptExceptionTests)",
     "methodName": "testImmutableStack",
     "className": "org.elasticsearch.script.ScriptExceptionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195769811
 }
]

[
 "TEST_STARTED",
 "ID#testJsonOutput(org.elasticsearch.script.ScriptExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testJsonOutput(org.elasticsearch.script.ScriptExceptionTests)",
  "startTimestamp": 1474195769826,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRoundTrip(org.elasticsearch.script.ScriptExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoundTrip(org.elasticsearch.script.ScriptExceptionTests)",
  "startTimestamp": 1474195769828,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNoLeniency(org.elasticsearch.script.ScriptExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoLeniency(org.elasticsearch.script.ScriptExceptionTests)",
  "startTimestamp": 1474195769831,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testImmutableStack(org.elasticsearch.script.ScriptExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testImmutableStack(org.elasticsearch.script.ScriptExceptionTests)",
  "startTimestamp": 1474195769835,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.script.ScriptExceptionTests",
  "startTimestamp": 1474195769811,
  "executionTime": 28
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.script.ScriptMetaDataTests",
   "displayName": "org.elasticsearch.script.ScriptMetaDataTests",
   "methodName": null,
   "className": "org.elasticsearch.script.ScriptMetaDataTests",
   "children": [
    {
     "id": "ID#testGetScript(org.elasticsearch.script.ScriptMetaDataTests)",
     "displayName": "testGetScript(org.elasticsearch.script.ScriptMetaDataTests)",
     "methodName": "testGetScript",
     "className": "org.elasticsearch.script.ScriptMetaDataTests",
     "children": []
    },
    {
     "id": "ID#testToAndFromXContent(org.elasticsearch.script.ScriptMetaDataTests)",
     "displayName": "testToAndFromXContent(org.elasticsearch.script.ScriptMetaDataTests)",
     "methodName": "testToAndFromXContent",
     "className": "org.elasticsearch.script.ScriptMetaDataTests",
     "children": []
    },
    {
     "id": "ID#testBuilder(org.elasticsearch.script.ScriptMetaDataTests)",
     "displayName": "testBuilder(org.elasticsearch.script.ScriptMetaDataTests)",
     "methodName": "testBuilder",
     "className": "org.elasticsearch.script.ScriptMetaDataTests",
     "children": []
    },
    {
     "id": "ID#testReadFromWriteTo(org.elasticsearch.script.ScriptMetaDataTests)",
     "displayName": "testReadFromWriteTo(org.elasticsearch.script.ScriptMetaDataTests)",
     "methodName": "testReadFromWriteTo",
     "className": "org.elasticsearch.script.ScriptMetaDataTests",
     "children": []
    },
    {
     "id": "ID#testDiff(org.elasticsearch.script.ScriptMetaDataTests)",
     "displayName": "testDiff(org.elasticsearch.script.ScriptMetaDataTests)",
     "methodName": "testDiff",
     "className": "org.elasticsearch.script.ScriptMetaDataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195770075
 }
]

[
 "TEST_STARTED",
 "ID#testGetScript(org.elasticsearch.script.ScriptMetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetScript(org.elasticsearch.script.ScriptMetaDataTests)",
  "startTimestamp": 1474195770092,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testToAndFromXContent(org.elasticsearch.script.ScriptMetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToAndFromXContent(org.elasticsearch.script.ScriptMetaDataTests)",
  "startTimestamp": 1474195770096,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testBuilder(org.elasticsearch.script.ScriptMetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuilder(org.elasticsearch.script.ScriptMetaDataTests)",
  "startTimestamp": 1474195770100,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testReadFromWriteTo(org.elasticsearch.script.ScriptMetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFromWriteTo(org.elasticsearch.script.ScriptMetaDataTests)",
  "startTimestamp": 1474195770103,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testDiff(org.elasticsearch.script.ScriptMetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDiff(org.elasticsearch.script.ScriptMetaDataTests)",
  "startTimestamp": 1474195770107,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.script.ScriptMetaDataTests",
  "startTimestamp": 1474195770075,
  "executionTime": 38
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.script.ScriptServiceTests",
   "displayName": "org.elasticsearch.script.ScriptServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.script.ScriptServiceTests",
   "children": [
    {
     "id": "ID#testDefaultBehaviourFineGrainedSettings(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testDefaultBehaviourFineGrainedSettings(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testDefaultBehaviourFineGrainedSettings",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testExecutableCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testExecutableCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testExecutableCountedInCompilationStats",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testCompilationCircuitBreaking(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testCompilationCircuitBreaking(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testCompilationCircuitBreaking",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testValidateScriptSize(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testValidateScriptSize(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testValidateScriptSize",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testIndexedScriptCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testIndexedScriptCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testIndexedScriptCountedInCompilationStats",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testMultipleCompilationsCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testMultipleCompilationsCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testMultipleCompilationsCountedInCompilationStats",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testScriptsWithoutExtensions(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testScriptsWithoutExtensions(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testScriptsWithoutExtensions",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testGetStoredScript(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testGetStoredScript(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testGetStoredScript",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testInlineScriptCompiledOnceCache(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testInlineScriptCompiledOnceCache(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testInlineScriptCompiledOnceCache",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testCompileCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testCompileCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testCompileCountedInCompilationStats",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testCompilationStatsOnCacheHit(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testCompilationStatsOnCacheHit(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testCompilationStatsOnCacheHit",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testCompileNonRegisteredContext(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testCompileNonRegisteredContext(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testCompileNonRegisteredContext",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testSearchCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testSearchCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testSearchCountedInCompilationStats",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testFineGrainedSettings(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testFineGrainedSettings(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testFineGrainedSettings",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testCacheEvictionCountedInCacheEvictionsStats(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testCacheEvictionCountedInCacheEvictionsStats(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testCacheEvictionCountedInCacheEvictionsStats",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testStoreScript(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testStoreScript(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testStoreScript",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testDeleteScript(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testDeleteScript(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testDeleteScript",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testFileScriptCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testFileScriptCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testFileScriptCountedInCompilationStats",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testNotSupportedDisableDynamicSetting(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testNotSupportedDisableDynamicSetting(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testNotSupportedDisableDynamicSetting",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testDefaultLanguage(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testDefaultLanguage(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testDefaultLanguage",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testScriptCompiledOnceHiddenFileDetected(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testScriptCompiledOnceHiddenFileDetected(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testScriptCompiledOnceHiddenFileDetected",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195770363
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultBehaviourFineGrainedSettings(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:49:30,396][INFO ][org.elasticsearch.script ] [testNativeScript] --> setup script service%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:49:30,407][INFO ][org.elasticsearch.script ] [testNativeScript] compiling script file [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.script.ScriptServiceTests_FD13852EF36FC81C-001\\tempDir-001\\scripts\\file_script.dtest]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultBehaviourFineGrainedSettings(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474195770381,
  "executionTime": 30
 }
]

[
 "TEST_STARTED",
 "ID#testExecutableCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:49:30,432][INFO ][org.elasticsearch.script ] [testNativeScript] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExecutableCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474195770411,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testCompilationCircuitBreaking(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:49:30,439][INFO ][org.elasticsearch.script ] [testNativeScript] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompilationCircuitBreaking(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474195770435,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testValidateScriptSize(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:49:30,449][INFO ][org.elasticsearch.script ] [testNativeScript] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidateScriptSize(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474195770444,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testIndexedScriptCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:49:30,468][INFO ][org.elasticsearch.script ] [testNativeScript] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexedScriptCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474195770462,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleCompilationsCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:49:30,477][INFO ][org.elasticsearch.script ] [testNativeScript] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleCompilationsCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474195770472,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testScriptsWithoutExtensions(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:49:30,499][INFO ][org.elasticsearch.script ] [testNativeScript] --> setup script service%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:49:30,523][INFO ][org.elasticsearch.script ] [testNativeScript] compiling script file [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.script.ScriptServiceTests_FD13852EF36FC81C-001\\tempDir-013\\scripts\\test_script.test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:49:30,528][INFO ][org.elasticsearch.script ] [testNativeScript] removing script file [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.script.ScriptServiceTests_FD13852EF36FC81C-001\\tempDir-013\\scripts\\test_script.test]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScriptsWithoutExtensions(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474195770492,
  "executionTime": 36
 }
]

[
 "TEST_STARTED",
 "ID#testGetStoredScript(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:49:30,535][INFO ][org.elasticsearch.script ] [testNativeScript] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetStoredScript(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474195770528,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testInlineScriptCompiledOnceCache(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:49:30,546][INFO ][org.elasticsearch.script ] [testNativeScript] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInlineScriptCompiledOnceCache(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474195770539,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testCompileCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:49:30,557][INFO ][org.elasticsearch.script ] [testNativeScript] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompileCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474195770549,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testCompilationStatsOnCacheHit(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:49:30,567][INFO ][org.elasticsearch.script ] [testNativeScript] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompilationStatsOnCacheHit(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474195770559,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testCompileNonRegisteredContext(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:49:30,576][INFO ][org.elasticsearch.script ] [testNativeScript] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompileNonRegisteredContext(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474195770569,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testSearchCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:49:30,592][INFO ][org.elasticsearch.script ] [testNativeScript] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearchCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474195770578,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testFineGrainedSettings(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:49:30,605][INFO ][org.elasticsearch.script ] [testNativeScript] --> setup script service%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:49:30,616][INFO ][org.elasticsearch.script ] [testNativeScript] compiling script file [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.script.ScriptServiceTests_FD13852EF36FC81C-001\\tempDir-027\\scripts\\file_script.dtest]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFineGrainedSettings(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474195770594,
  "executionTime": 30
 }
]

[
 "TEST_STARTED",
 "ID#testCacheEvictionCountedInCacheEvictionsStats(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:49:30,634][INFO ][org.elasticsearch.script ] [testNativeScript] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCacheEvictionCountedInCacheEvictionsStats(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474195770624,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testStoreScript(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:49:30,651][INFO ][org.elasticsearch.script ] [testNativeScript] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStoreScript(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474195770639,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testDeleteScript(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:49:30,662][INFO ][org.elasticsearch.script ] [testNativeScript] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeleteScript(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474195770652,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testFileScriptCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:49:30,673][INFO ][org.elasticsearch.script ] [testNativeScript] --> setup script service%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:49:30,677][INFO ][org.elasticsearch.script ] [testNativeScript] compiling script file [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.script.ScriptServiceTests_FD13852EF36FC81C-001\\tempDir-035\\scripts\\file_script.test]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFileScriptCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474195770663,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testNotSupportedDisableDynamicSetting(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:49:30,685][INFO ][org.elasticsearch.script ] [testNativeScript] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotSupportedDisableDynamicSetting(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474195770677,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultLanguage(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:49:30,708][INFO ][org.elasticsearch.script ] [testNativeScript] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultLanguage(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474195770687,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testScriptCompiledOnceHiddenFileDetected(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:49:30,719][INFO ][org.elasticsearch.script ] [testNativeScript] --> setup script service%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:49:30,732][INFO ][org.elasticsearch.script ] [testNativeScript] compiling script file [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.script.ScriptServiceTests_FD13852EF36FC81C-001\\tempDir-041\\scripts\\file_script.test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:49:30,733][INFO ][org.elasticsearch.script ] [testNativeScript] removing script file [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.script.ScriptServiceTests_FD13852EF36FC81C-001\\tempDir-041\\scripts\\file_script.test]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScriptCompiledOnceHiddenFileDetected(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474195770710,
  "executionTime": 23
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.script.ScriptServiceTests",
  "startTimestamp": 1474195770363,
  "executionTime": 563
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.DocValueFormatTests",
   "displayName": "org.elasticsearch.search.DocValueFormatTests",
   "methodName": null,
   "className": "org.elasticsearch.search.DocValueFormatTests",
   "children": [
    {
     "id": "ID#testBooleanParse(org.elasticsearch.search.DocValueFormatTests)",
     "displayName": "testBooleanParse(org.elasticsearch.search.DocValueFormatTests)",
     "methodName": "testBooleanParse",
     "className": "org.elasticsearch.search.DocValueFormatTests",
     "children": []
    },
    {
     "id": "ID#testIpFormat(org.elasticsearch.search.DocValueFormatTests)",
     "displayName": "testIpFormat(org.elasticsearch.search.DocValueFormatTests)",
     "methodName": "testIpFormat",
     "className": "org.elasticsearch.search.DocValueFormatTests",
     "children": []
    },
    {
     "id": "ID#testBooleanFormat(org.elasticsearch.search.DocValueFormatTests)",
     "displayName": "testBooleanFormat(org.elasticsearch.search.DocValueFormatTests)",
     "methodName": "testBooleanFormat",
     "className": "org.elasticsearch.search.DocValueFormatTests",
     "children": []
    },
    {
     "id": "ID#testRawParse(org.elasticsearch.search.DocValueFormatTests)",
     "displayName": "testRawParse(org.elasticsearch.search.DocValueFormatTests)",
     "methodName": "testRawParse",
     "className": "org.elasticsearch.search.DocValueFormatTests",
     "children": []
    },
    {
     "id": "ID#testRawFormat(org.elasticsearch.search.DocValueFormatTests)",
     "displayName": "testRawFormat(org.elasticsearch.search.DocValueFormatTests)",
     "methodName": "testRawFormat",
     "className": "org.elasticsearch.search.DocValueFormatTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.DocValueFormatTests)",
     "displayName": "testSerialization(org.elasticsearch.search.DocValueFormatTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.DocValueFormatTests",
     "children": []
    },
    {
     "id": "ID#testIPParse(org.elasticsearch.search.DocValueFormatTests)",
     "displayName": "testIPParse(org.elasticsearch.search.DocValueFormatTests)",
     "methodName": "testIPParse",
     "className": "org.elasticsearch.search.DocValueFormatTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195771141
 }
]

[
 "TEST_STARTED",
 "ID#testBooleanParse(org.elasticsearch.search.DocValueFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBooleanParse(org.elasticsearch.search.DocValueFormatTests)",
  "startTimestamp": 1474195771158,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIpFormat(org.elasticsearch.search.DocValueFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIpFormat(org.elasticsearch.search.DocValueFormatTests)",
  "startTimestamp": 1474195771161,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testBooleanFormat(org.elasticsearch.search.DocValueFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBooleanFormat(org.elasticsearch.search.DocValueFormatTests)",
  "startTimestamp": 1474195771183,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testRawParse(org.elasticsearch.search.DocValueFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawParse(org.elasticsearch.search.DocValueFormatTests)",
  "startTimestamp": 1474195771185,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testRawFormat(org.elasticsearch.search.DocValueFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawFormat(org.elasticsearch.search.DocValueFormatTests)",
  "startTimestamp": 1474195771192,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.DocValueFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.DocValueFormatTests)",
  "startTimestamp": 1474195771194,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIPParse(org.elasticsearch.search.DocValueFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIPParse(org.elasticsearch.search.DocValueFormatTests)",
  "startTimestamp": 1474195771198,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.DocValueFormatTests",
  "startTimestamp": 1474195771141,
  "executionTime": 64
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.SearchModuleTests",
   "displayName": "org.elasticsearch.search.SearchModuleTests",
   "methodName": null,
   "className": "org.elasticsearch.search.SearchModuleTests",
   "children": [
    {
     "id": "ID#testRegisteredQueries(org.elasticsearch.search.SearchModuleTests)",
     "displayName": "testRegisteredQueries(org.elasticsearch.search.SearchModuleTests)",
     "methodName": "testRegisteredQueries",
     "className": "org.elasticsearch.search.SearchModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterHighlighter(org.elasticsearch.search.SearchModuleTests)",
     "displayName": "testRegisterHighlighter(org.elasticsearch.search.SearchModuleTests)",
     "methodName": "testRegisterHighlighter",
     "className": "org.elasticsearch.search.SearchModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterPipelineAggregation(org.elasticsearch.search.SearchModuleTests)",
     "displayName": "testRegisterPipelineAggregation(org.elasticsearch.search.SearchModuleTests)",
     "methodName": "testRegisterPipelineAggregation",
     "className": "org.elasticsearch.search.SearchModuleTests",
     "children": []
    },
    {
     "id": "ID#testDoubleRegister(org.elasticsearch.search.SearchModuleTests)",
     "displayName": "testDoubleRegister(org.elasticsearch.search.SearchModuleTests)",
     "methodName": "testDoubleRegister",
     "className": "org.elasticsearch.search.SearchModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterAggregation(org.elasticsearch.search.SearchModuleTests)",
     "displayName": "testRegisterAggregation(org.elasticsearch.search.SearchModuleTests)",
     "methodName": "testRegisterAggregation",
     "className": "org.elasticsearch.search.SearchModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterSuggester(org.elasticsearch.search.SearchModuleTests)",
     "displayName": "testRegisterSuggester(org.elasticsearch.search.SearchModuleTests)",
     "methodName": "testRegisterSuggester",
     "className": "org.elasticsearch.search.SearchModuleTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195771408
 }
]

[
 "TEST_STARTED",
 "ID#testRegisteredQueries(org.elasticsearch.search.SearchModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:31,440][WARN ][org.elasticsearch.deprecation.common] Deprecated field [fuzzy_match] used, expected [match] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:31,440][WARN ][org.elasticsearch.deprecation.common] Deprecated field [geo_bbox] used, expected [geo_bounding_box] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:31,440][WARN ][org.elasticsearch.deprecation.common] Deprecated field [in] used, expected [terms] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:31,440][WARN ][org.elasticsearch.deprecation.common] Deprecated field [match_fuzzy] used, expected [match] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:31,440][WARN ][org.elasticsearch.deprecation.common] Deprecated field [mlt] used, expected [more_like_this] instead%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisteredQueries(org.elasticsearch.search.SearchModuleTests)",
  "startTimestamp": 1474195771428,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterHighlighter(org.elasticsearch.search.SearchModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterHighlighter(org.elasticsearch.search.SearchModuleTests)",
  "startTimestamp": 1474195771441,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterPipelineAggregation(org.elasticsearch.search.SearchModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterPipelineAggregation(org.elasticsearch.search.SearchModuleTests)",
  "startTimestamp": 1474195771446,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testDoubleRegister(org.elasticsearch.search.SearchModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoubleRegister(org.elasticsearch.search.SearchModuleTests)",
  "startTimestamp": 1474195771452,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterAggregation(org.elasticsearch.search.SearchModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterAggregation(org.elasticsearch.search.SearchModuleTests)",
  "startTimestamp": 1474195771474,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterSuggester(org.elasticsearch.search.SearchModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterSuggester(org.elasticsearch.search.SearchModuleTests)",
  "startTimestamp": 1474195771482,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.SearchModuleTests",
  "startTimestamp": 1474195771408,
  "executionTime": 81
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.DateHistogramTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.DateHistogramTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.DateHistogramTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.DateHistogramTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.DateHistogramTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.DateHistogramTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.DateHistogramTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.DateHistogramTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.DateHistogramTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.DateHistogramTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.DateHistogramTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.DateHistogramTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195771674
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:31,689][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{EU5f_Zx9S7mpYnhVXmRSJw}{local}{local[662]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.DateHistogramTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.DateHistogramTests)",
  "startTimestamp": 1474195771702,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.DateHistogramTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.DateHistogramTests)",
  "startTimestamp": 1474195771707,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.DateHistogramTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.DateHistogramTests)",
  "startTimestamp": 1474195771709,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.DateHistogramTests",
  "startTimestamp": 1474195771674,
  "executionTime": 41
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195771936
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:49:31,950][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{bqa2NyinTpOPf7e0_zKe6g}{local}{local[663]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)",
  "startTimestamp": 1474195771964,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)",
  "startTimestamp": 1474195771983,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests)",
  "startTimestamp": 1474195771985,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.DiversifiedSamplerTests",
  "startTimestamp": 1474195771936,
  "executionTime": 59
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.GeoHashGridTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.GeoHashGridTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.GeoHashGridTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.GeoHashGridTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.GeoHashGridTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.GeoHashGridTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195772202
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:49:32,219][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{AgbWDdcdQd2wgC88DdCTRw}{local}{local[664]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)",
  "startTimestamp": 1474195772226,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)",
  "startTimestamp": 1474195772231,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)",
  "startTimestamp": 1474195772233,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.GeoHashGridTests",
  "startTimestamp": 1474195772202,
  "executionTime": 39
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.SumTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.SumTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.SumTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.SumTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.SumTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.SumTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.SumTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.SumTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.SumTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.SumTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.SumTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.SumTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195772470
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:49:32,490][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{pa0qRtV2R1m8J15_0MGVQg}{local}{local[665]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.SumTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.SumTests)",
  "startTimestamp": 1474195772500,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.SumTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.SumTests)",
  "startTimestamp": 1474195772502,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.SumTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.SumTests)",
  "startTimestamp": 1474195772504,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.SumTests",
  "startTimestamp": 1474195772470,
  "executionTime": 44
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.ValueCountTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.ValueCountTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.ValueCountTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.ValueCountTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.ValueCountTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.ValueCountTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.ValueCountTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.ValueCountTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.ValueCountTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.ValueCountTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.ValueCountTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.ValueCountTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195772735
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:32,750][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{sEfxMKUtRdKRcU4u5g4rAw}{local}{local[666]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.ValueCountTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.ValueCountTests)",
  "startTimestamp": 1474195772757,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.ValueCountTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.ValueCountTests)",
  "startTimestamp": 1474195772758,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.ValueCountTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.ValueCountTests)",
  "startTimestamp": 1474195772760,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.ValueCountTests",
  "startTimestamp": 1474195772735,
  "executionTime": 30
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests",
   "children": [
    {
     "id": "ID#testFakeHashes(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
     "displayName": "testFakeHashes(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
     "methodName": "testFakeHashes",
     "className": "org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests",
     "children": []
    },
    {
     "id": "ID#testPrecisionFromThreshold(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
     "displayName": "testPrecisionFromThreshold(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
     "methodName": "testPrecisionFromThreshold",
     "className": "org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests",
     "children": []
    },
    {
     "id": "ID#testAccuracy(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
     "displayName": "testAccuracy(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
     "methodName": "testAccuracy",
     "className": "org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests",
     "children": []
    },
    {
     "id": "ID#testMerge(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
     "displayName": "testMerge(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
     "methodName": "testMerge",
     "className": "org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests",
     "children": []
    },
    {
     "id": "ID#testEncodeDecode(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
     "displayName": "testEncodeDecode(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
     "methodName": "testEncodeDecode",
     "className": "org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195773002
 }
]

[
 "TEST_STARTED",
 "ID#testFakeHashes(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFakeHashes(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
  "startTimestamp": 1474195773013,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testPrecisionFromThreshold(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrecisionFromThreshold(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
  "startTimestamp": 1474195773021,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testAccuracy(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAccuracy(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
  "startTimestamp": 1474195773022,
  "executionTime": 201
 }
]

[
 "TEST_STARTED",
 "ID#testMerge(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMerge(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
  "startTimestamp": 1474195773223,
  "executionTime": 65
 }
]

[
 "TEST_STARTED",
 "ID#testEncodeDecode(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEncodeDecode(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
  "startTimestamp": 1474195773288,
  "executionTime": 189
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests",
  "startTimestamp": 1474195773002,
  "executionTime": 484
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.PipelineAggregationHelperTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.PipelineAggregationHelperTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.PipelineAggregationHelperTests",
   "children": []
  },
  "startTimestamp": 1474195773538
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.PipelineAggregationHelperTests",
  "startTimestamp": 1474195773538,
  "executionTime": 4
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.support.ScriptValuesTests",
   "displayName": "org.elasticsearch.search.aggregations.support.ScriptValuesTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.support.ScriptValuesTests",
   "children": [
    {
     "id": "ID#testBytes(org.elasticsearch.search.aggregations.support.ScriptValuesTests)",
     "displayName": "testBytes(org.elasticsearch.search.aggregations.support.ScriptValuesTests)",
     "methodName": "testBytes",
     "className": "org.elasticsearch.search.aggregations.support.ScriptValuesTests",
     "children": []
    },
    {
     "id": "ID#testLongs(org.elasticsearch.search.aggregations.support.ScriptValuesTests)",
     "displayName": "testLongs(org.elasticsearch.search.aggregations.support.ScriptValuesTests)",
     "methodName": "testLongs",
     "className": "org.elasticsearch.search.aggregations.support.ScriptValuesTests",
     "children": []
    },
    {
     "id": "ID#testDoubles(org.elasticsearch.search.aggregations.support.ScriptValuesTests)",
     "displayName": "testDoubles(org.elasticsearch.search.aggregations.support.ScriptValuesTests)",
     "methodName": "testDoubles",
     "className": "org.elasticsearch.search.aggregations.support.ScriptValuesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195773808
 }
]

[
 "TEST_STARTED",
 "ID#testBytes(org.elasticsearch.search.aggregations.support.ScriptValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBytes(org.elasticsearch.search.aggregations.support.ScriptValuesTests)",
  "startTimestamp": 1474195773823,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testLongs(org.elasticsearch.search.aggregations.support.ScriptValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLongs(org.elasticsearch.search.aggregations.support.ScriptValuesTests)",
  "startTimestamp": 1474195773830,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testDoubles(org.elasticsearch.search.aggregations.support.ScriptValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoubles(org.elasticsearch.search.aggregations.support.ScriptValuesTests)",
  "startTimestamp": 1474195773836,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.support.ScriptValuesTests",
  "startTimestamp": 1474195773808,
  "executionTime": 36
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
   "displayName": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
   "children": [
    {
     "id": "ID#testBuildSearchContextHighlight(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "displayName": "testBuildSearchContextHighlight(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "methodName": "testBuildSearchContextHighlight",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingEmptyStructure(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "displayName": "testParsingEmptyStructure(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "methodName": "testParsingEmptyStructure",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
     "children": []
    },
    {
     "id": "ID#testTwoFieldsInObjectInFieldsArray(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "displayName": "testTwoFieldsInObjectInFieldsArray(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "methodName": "testTwoFieldsInObjectInFieldsArray",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNoFieldsInObjectInFieldsArray(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "displayName": "testNoFieldsInObjectInFieldsArray(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "methodName": "testNoFieldsInObjectInFieldsArray",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectFieldnameExpection(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "displayName": "testUnknownObjectFieldnameExpection(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "methodName": "testUnknownObjectFieldnameExpection",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownFieldnameExpection(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "displayName": "testUnknownFieldnameExpection(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "methodName": "testUnknownFieldnameExpection",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
     "children": []
    },
    {
     "id": "ID#testValidOrderOrdinals(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "displayName": "testValidOrderOrdinals(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "methodName": "testValidOrderOrdinals",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownArrayNameExpection(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "displayName": "testUnknownArrayNameExpection(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "methodName": "testUnknownArrayNameExpection",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingTagsSchema(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "displayName": "testParsingTagsSchema(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "methodName": "testParsingTagsSchema",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
     "children": []
    },
    {
     "id": "ID#testPreTagsWithoutPostTags(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "displayName": "testPreTagsWithoutPostTags(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "methodName": "testPreTagsWithoutPostTags",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
     "children": []
    },
    {
     "id": "ID#testStringInFieldsArray(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "displayName": "testStringInFieldsArray(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "methodName": "testStringInFieldsArray",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
     "children": []
    },
    {
     "id": "ID#testOrderSerialization(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "displayName": "testOrderSerialization(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "methodName": "testOrderSerialization",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195774069
 }
]

[
 "TEST_STARTED",
 "ID#testBuildSearchContextHighlight(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuildSearchContextHighlight(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
  "startTimestamp": 1474195774083,
  "executionTime": 38
 }
]

[
 "TEST_STARTED",
 "ID#testParsingEmptyStructure(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingEmptyStructure(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
  "startTimestamp": 1474195774121,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
  "startTimestamp": 1474195774123,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testTwoFieldsInObjectInFieldsArray(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTwoFieldsInObjectInFieldsArray(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
  "startTimestamp": 1474195774145,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNoFieldsInObjectInFieldsArray(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoFieldsInObjectInFieldsArray(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
  "startTimestamp": 1474195774147,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectFieldnameExpection(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectFieldnameExpection(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
  "startTimestamp": 1474195774149,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownFieldnameExpection(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownFieldnameExpection(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
  "startTimestamp": 1474195774151,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrderOrdinals(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrderOrdinals(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
  "startTimestamp": 1474195774153,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownArrayNameExpection(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownArrayNameExpection(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
  "startTimestamp": 1474195774155,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParsingTagsSchema(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingTagsSchema(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
  "startTimestamp": 1474195774157,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testPreTagsWithoutPostTags(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreTagsWithoutPostTags(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
  "startTimestamp": 1474195774159,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testStringInFieldsArray(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStringInFieldsArray(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
  "startTimestamp": 1474195774161,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
  "startTimestamp": 1474195774163,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testOrderSerialization(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOrderSerialization(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
  "startTimestamp": 1474195774170,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
  "startTimestamp": 1474195774172,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
  "startTimestamp": 1474195774069,
  "executionTime": 114
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.geo.GeoShapeQueryTests",
   "displayName": "org.elasticsearch.search.geo.GeoShapeQueryTests",
   "methodName": null,
   "className": "org.elasticsearch.search.geo.GeoShapeQueryTests",
   "children": [
    {
     "id": "ID#testShapeFilterWithDefinedGeoCollection(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "displayName": "testShapeFilterWithDefinedGeoCollection(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "methodName": "testShapeFilterWithDefinedGeoCollection",
     "className": "org.elasticsearch.search.geo.GeoShapeQueryTests",
     "children": []
    },
    {
     "id": "ID#testEdgeCases(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "displayName": "testEdgeCases(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "methodName": "testEdgeCases",
     "className": "org.elasticsearch.search.geo.GeoShapeQueryTests",
     "children": []
    },
    {
     "id": "ID#testNullShape(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "displayName": "testNullShape(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "methodName": "testNullShape",
     "className": "org.elasticsearch.search.geo.GeoShapeQueryTests",
     "children": []
    },
    {
     "id": "ID#testReusableBuilder(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "displayName": "testReusableBuilder(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "methodName": "testReusableBuilder",
     "className": "org.elasticsearch.search.geo.GeoShapeQueryTests",
     "children": []
    },
    {
     "id": "ID#testShapeFetchingPath(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "displayName": "testShapeFetchingPath(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "methodName": "testShapeFetchingPath",
     "className": "org.elasticsearch.search.geo.GeoShapeQueryTests",
     "children": []
    },
    {
     "id": "ID#testShapeFilterWithRandomGeoCollection(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "displayName": "testShapeFilterWithRandomGeoCollection(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "methodName": "testShapeFilterWithRandomGeoCollection",
     "className": "org.elasticsearch.search.geo.GeoShapeQueryTests",
     "children": []
    },
    {
     "id": "ID#testIndexedShapeReference(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "displayName": "testIndexedShapeReference(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "methodName": "testIndexedShapeReference",
     "className": "org.elasticsearch.search.geo.GeoShapeQueryTests",
     "children": []
    },
    {
     "id": "ID#testIndexedShapeReferenceSourceDisabled(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "displayName": "testIndexedShapeReferenceSourceDisabled(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "methodName": "testIndexedShapeReferenceSourceDisabled",
     "className": "org.elasticsearch.search.geo.GeoShapeQueryTests",
     "children": []
    },
    {
     "id": "ID#testContainsShapeQuery(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "displayName": "testContainsShapeQuery(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "methodName": "testContainsShapeQuery",
     "className": "org.elasticsearch.search.geo.GeoShapeQueryTests",
     "children": []
    },
    {
     "id": "ID#testPointsOnly(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "displayName": "testPointsOnly(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "methodName": "testPointsOnly",
     "className": "org.elasticsearch.search.geo.GeoShapeQueryTests",
     "children": []
    },
    {
     "id": "ID#testIndexPointsFilterRectangle(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "displayName": "testIndexPointsFilterRectangle(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "methodName": "testIndexPointsFilterRectangle",
     "className": "org.elasticsearch.search.geo.GeoShapeQueryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195774357
 }
]

[
 "TEST_STARTED",
 "ID#testShapeFilterWithDefinedGeoCollection(org.elasticsearch.search.geo.GeoShapeQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:34,460][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:34,484][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:34,484][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:34,493][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[8784], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:34,496][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:34,496][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:34,857][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:34,858][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:34,858][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[141]}, bound_addresses {local[141]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:34,860][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{lTpbDDIsQ-6aVivBLH-Jpw}{K_44yvQaT_eeciIIzD7btw}{local}{local[141]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:34,860][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:34,872][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:34,927][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [shapes] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:35,115][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[shapes][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:35,133][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:35,187][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:35,943][INFO ][org.elasticsearch.search.geo] [GeoShapeQueryTests#testShapeFilterWithDefinedGeoCollection]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShapeFilterWithDefinedGeoCollection(org.elasticsearch.search.geo.GeoShapeQueryTests)",
  "startTimestamp": 1474195774402,
  "executionTime": 1595
 }
]

[
 "TEST_STARTED",
 "ID#testEdgeCases(org.elasticsearch.search.geo.GeoShapeQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:36,009][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:36,074][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:36,114][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/Af9ITxM_Q8G0rfUufwWopg] update_mapping [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:36,611][INFO ][org.elasticsearch.search.geo] [GeoShapeQueryTests#testEdgeCases]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEdgeCases(org.elasticsearch.search.geo.GeoShapeQueryTests)",
  "startTimestamp": 1474195775997,
  "executionTime": 765
 }
]

[
 "TEST_STARTED",
 "ID#testNullShape(org.elasticsearch.search.geo.GeoShapeQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:36,771][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:36,907][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:37,022][INFO ][org.elasticsearch.search.geo] [GeoShapeQueryTests#testNullShape]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullShape(org.elasticsearch.search.geo.GeoShapeQueryTests)",
  "startTimestamp": 1474195776762,
  "executionTime": 287
 }
]

[
 "TEST_STARTED",
 "ID#testReusableBuilder(org.elasticsearch.search.geo.GeoShapeQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:37,061][INFO ][org.elasticsearch.search.geo] [GeoShapeQueryTests#testReusableBuilder]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReusableBuilder(org.elasticsearch.search.geo.GeoShapeQueryTests)",
  "startTimestamp": 1474195777049,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testShapeFetchingPath(org.elasticsearch.search.geo.GeoShapeQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:37,070][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [shapes] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:37,146][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[shapes][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:37,165][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:37,238][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:37,258][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [shapes/jtjroBSAQBOZqTjNKidNgQ] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:37,786][INFO ][org.elasticsearch.search.geo] [GeoShapeQueryTests#testShapeFetchingPath]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShapeFetchingPath(org.elasticsearch.search.geo.GeoShapeQueryTests)",
  "startTimestamp": 1474195777062,
  "executionTime": 1677
 }
]

[
 "TEST_STARTED",
 "ID#testShapeFilterWithRandomGeoCollection(org.elasticsearch.search.geo.GeoShapeQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:38,756][INFO ][org.elasticsearch.search.geo] Created Random GeometryCollection containing 4 shapes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:38,760][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:38,838][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:50:07,311][INFO ][org.elasticsearch.search.geo] [GeoShapeQueryTests#testShapeFilterWithRandomGeoCollection]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShapeFilterWithRandomGeoCollection(org.elasticsearch.search.geo.GeoShapeQueryTests)",
  "startTimestamp": 1474195778739,
  "executionTime": 28598
 }
]

[
 "TEST_STARTED",
 "ID#testIndexedShapeReference(org.elasticsearch.search.geo.GeoShapeQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:50:07,342][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:50:07,384][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:50:07,397][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [shapes] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:50:08,110][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[shapes][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:50:08,121][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [shapes/9fYBcmVoRE67VUgTFrmimw] create_mapping [shape_type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:50:08,273][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/EmoYCYvdRX6Fu84YDHv-0A] update_mapping [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:50:08,385][INFO ][org.elasticsearch.search.geo] [GeoShapeQueryTests#testIndexedShapeReference]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexedShapeReference(org.elasticsearch.search.geo.GeoShapeQueryTests)",
  "startTimestamp": 1474195807337,
  "executionTime": 1086
 }
]

[
 "TEST_STARTED",
 "ID#testIndexedShapeReferenceSourceDisabled(org.elasticsearch.search.geo.GeoShapeQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:50:08,429][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:50:08,468][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:50:08,479][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [shapes] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [shape_type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:50:08,521][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[shapes][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:50:08,536][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [shapes/hFhb8H75TAqtodo87IQWFg] update_mapping [shape_type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:50:08,930][INFO ][org.elasticsearch.search.geo] [GeoShapeQueryTests#testIndexedShapeReferenceSourceDisabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexedShapeReferenceSourceDisabled(org.elasticsearch.search.geo.GeoShapeQueryTests)",
  "startTimestamp": 1474195808423,
  "executionTime": 539
 }
]

[
 "TEST_STARTED",
 "ID#testContainsShapeQuery(org.elasticsearch.search.geo.GeoShapeQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:50:08,968][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:50:09,004][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:50:28,198][INFO ][org.elasticsearch.search.geo] [GeoShapeQueryTests#testContainsShapeQuery]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testContainsShapeQuery(org.elasticsearch.search.geo.GeoShapeQueryTests)",
  "startTimestamp": 1474195808962,
  "executionTime": 19263
 }
]

[
 "TEST_STARTED",
 "ID#testPointsOnly(org.elasticsearch.search.geo.GeoShapeQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:50:28,232][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [geo_points_only] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:50:28,275][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[geo_points_only][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:50:28,284][INFO ][org.elasticsearch.search.geo] [GeoShapeQueryTests#testPointsOnly]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPointsOnly(org.elasticsearch.search.geo.GeoShapeQueryTests)",
  "startTimestamp": 1474195828225,
  "executionTime": 78
 }
]

[
 "TEST_STARTED",
 "ID#testIndexPointsFilterRectangle(org.elasticsearch.search.geo.GeoShapeQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:50:28,309][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:50:28,352][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:50:28,365][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/Bk6_kaE7Sbm8JydF6rZquw] update_mapping [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:50:28,541][INFO ][org.elasticsearch.search.geo] [GeoShapeQueryTests#testIndexPointsFilterRectangle]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexPointsFilterRectangle(org.elasticsearch.search.geo.GeoShapeQueryTests)",
  "startTimestamp": 1474195828303,
  "executionTime": 268
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:50:28,572][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:50:28,572][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:50:28,572][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:50:28,573][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.geo.GeoShapeQueryTests",
  "startTimestamp": 1474195774357,
  "executionTime": 54225
 }
]

[
 "IDLE",
 {}
]

[
 "QUIT",
 {}
]

