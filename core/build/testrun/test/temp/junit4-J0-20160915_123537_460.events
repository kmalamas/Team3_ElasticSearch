[
 "BOOTSTRAP",
 {
  "defaultCharset": "windows-1252",
  "pidString": "15428@LAPTOP-LKSM26S6",
  "systemProperties": {
   "awt.toolkit": "sun.awt.windows.WToolkit",
   "file.encoding": "Cp1252",
   "file.encoding.pkg": "sun.io",
   "file.separator": "\\",
   "java.awt.graphicsenv": "sun.awt.Win32GraphicsEnvironment",
   "java.awt.headless": "true",
   "java.awt.printerjob": "sun.awt.windows.WPrinterJob",
   "java.class.path": "C:\\projects\\team3\\core\\build\\classes\\test;C:\\projects\\team3\\core\\build\\resources\\test;C:\\projects\\team3\\core\\build\\classes\\main;C:\\projects\\team3\\core\\build\\resources\\main;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-core\\6.2.0\\849ee62525a294416802be2cacc66c80352f6f13\\lucene-core-6.2.0.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-analyzers-common\\6.2.0\\d254d52dd394b5079129f3d5f3bf4f2d44a5936e\\lucene-analyzers-common-6.2.0.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-backward-codecs\\6.2.0\\b625bb21456b3c0d1e5e431bced125cb060c1abd\\lucene-backward-codecs-6.2.0.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-grouping\\6.2.0\\9527fedfd5acc624b2bb3f862bd99fb8f470b053\\lucene-grouping-6.2.0.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-highlighter\\6.2.0\\7ca342372a3f45e32bbd21cecaa757e38eccb8a5\\lucene-highlighter-6.2.0.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-join\\6.2.0\\da0b8de98511abd4fe9c7d48a353d17854c5ed46\\lucene-join-6.2.0.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-memory\\6.2.0\\bc9e075b1ee051c8e5246c237c38d8e71dab8a66\\lucene-memory-6.2.0.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-misc\\6.2.0\\94ddde6312566a4da4a50a88e453b6c82c759b41\\lucene-misc-6.2.0.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-queries\\6.2.0\\dce47238f78e3e97d91dc6fefa9f46f07866bc2b\\lucene-queries-6.2.0.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-queryparser\\6.2.0\\17ef728ac15e668bfa1105321611548424637645\\lucene-queryparser-6.2.0.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-sandbox\\6.2.0\\520183f7b9aba77a26e224760c420a3844b0631a\\lucene-sandbox-6.2.0.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-spatial\\6.2.0\\8dba929b66927b936fbc76103b109ad6c824daee\\lucene-spatial-6.2.0.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-spatial-extras\\6.2.0\\3b5a6ef5cd90c0218a72e9e2f7e60104be2447da\\lucene-spatial-extras-6.2.0.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-spatial3d\\6.2.0\\fcdb0567725722c5145149d1502848b6a96ec18d\\lucene-spatial3d-6.2.0.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-suggest\\6.2.0\\3d9d526c51f483d27f425c75d7e56bc0849242d6\\lucene-suggest-6.2.0.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.elasticsearch\\securesm\\1.1\\1e423447d020041534be94c0f31a49fbdc1f2950\\securesm-1.1.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\net.sf.jopt-simple\\jopt-simple\\5.0.2\\98cafc6081d5632b61be2c9e60650b64ddbc637c\\jopt-simple-5.0.2.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\com.carrotsearch\\hppc\\0.7.1\\8b5057f74ea378c0150a1860874a3ebdcb713767\\hppc-0.7.1.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\joda-time\\joda-time\\2.9.4\\1c295b462f16702ebe720bbb08f62e1ba80da41b\\joda-time-2.9.4.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.joda\\joda-convert\\1.2\\35ec554f0cd00c956cc69051514d9488b1374dec\\joda-convert-1.2.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.yaml\\snakeyaml\\1.15\\3b132bea69e8ee099f416044970997bde80f4ea6\\snakeyaml-1.15.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.8.1\\fd13b1c033741d48291315c6370f7d475a42dccf\\jackson-core-2.8.1.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.dataformat\\jackson-dataformat-smile\\2.8.1\\5b73867bc12224946fc67fc8d49d9f5e698d7f\\jackson-dataformat-smile-2.8.1.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.dataformat\\jackson-dataformat-yaml\\2.8.1\\eb63166c723b0b4b9fb5298fca232a2f6612ec34\\jackson-dataformat-yaml-2.8.1.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.dataformat\\jackson-dataformat-cbor\\2.8.1\\3a6fb7e75c9972559a78cf5cfc5a48a41a13ea40\\jackson-dataformat-cbor-2.8.1.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\com.tdunning\\t-digest\\3.0\\84ccf145ac2215e6bfa63baa3101c0af41017cfc\\t-digest-3.0.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.hdrhistogram\\HdrHistogram\\2.1.6\\7495feb7f71ee124bd2a7e7d83590e296d71d80e\\HdrHistogram-2.1.6.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.locationtech.spatial4j\\spatial4j\\0.6\\21b15310bddcfd8c72611c180f20cf23279809a3\\spatial4j-0.6.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\com.vividsolutions\\jts\\1.13\\3ccfb9b60f04d71add996a666ceb8902904fd805\\jts-1.13.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.logging.log4j\\log4j-api\\2.6.2\\bd1b74a5d170686362091c7cf596bbc3adf5c09b\\log4j-api-2.6.2.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.logging.log4j\\log4j-core\\2.6.2\\a91369f655eb1639c6aece5c5eb5108db18306\\log4j-core-2.6.2.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.logging.log4j\\log4j-1.2-api\\2.6.2\\3b4c5a8b734b6a29b2f03380535a48da6284b210\\log4j-1.2-api-2.6.2.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\net.java.dev.jna\\jna\\4.2.2\\5012450aee579c3118ff09461d5ce210e0cdc2a9\\jna-4.2.2.jar;C:\\projects\\team3\\test\\framework\\build\\distributions\\framework-5.0.0-alpha6-SNAPSHOT.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\com.carrotsearch.randomizedtesting\\randomizedtesting-runner\\2.3.2\\307965917fe8a22b7ee72deba39ef4b8e6ebc069\\randomizedtesting-runner-2.3.2.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\junit\\junit\\4.11\\4e031bb61df09069aeb2bffb4019e7a5034a4ee0\\junit-4.11.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.hamcrest\\hamcrest-all\\1.3\\63a21ebc981131004ad02e0434e799fd7f3a8d5a\\hamcrest-all-1.3.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-test-framework\\6.2.0\\f5026be3983acfb40d4092dbfbc015ec6e6addab\\lucene-test-framework-6.2.0.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-codecs\\6.2.0\\99f887266b0ad9f2c286b3976c5bc48c8cd36624\\lucene-codecs-6.2.0.jar;C:\\projects\\team3\\client\\rest\\build\\distributions\\rest-5.0.0-alpha6-SNAPSHOT.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.httpcomponents\\httpclient\\4.5.2\\733db77aa8d9b2d68015189df76ab06304406e50\\httpclient-4.5.2.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.httpcomponents\\httpcore\\4.4.5\\e7501a1b34325abb00d17dde96150604a0658b54\\httpcore-4.4.5.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\commons-logging\\commons-logging\\1.1.3\\f6f66e966c70a83ffbdb6f17a0919eaf7c8aca7f\\commons-logging-1.1.3.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.10\\4b95f4897fa13f2cd904aee711aeafc0c5295cd8\\commons-codec-1.10.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.elasticsearch\\securemock\\1.2\\98201d4ad5ac93f6b415ae9172d52b5e7cda490e\\securemock-1.2.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.httpcomponents\\httpasyncclient\\4.1.2\\95aa3e6fb520191a0970a73cf09f62948ee614be\\httpasyncclient-4.1.2.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.httpcomponents\\httpcore-nio\\4.4.5\\f4be009e7505f6ceddf21e7960c759f413f15056\\httpcore-nio-4.4.5.jar;C:\\Users\\domin\\.gradle\\caches\\modules-2\\files-2.1\\com.carrotsearch.randomizedtesting\\junit4-ant\\2.3.2\\dc8f03f6111974092491f35b8269eb0fc57f52f7\\junit4-ant-2.3.2.jar",
   "java.class.version": "52.0",
   "java.endorsed.dirs": "C:\\Program Files\\Java\\jdk1.8.0_65\\jre\\lib\\endorsed",
   "java.ext.dirs": "C:\\Program Files\\Java\\jdk1.8.0_65\\jre\\lib\\ext;C:\\WINDOWS\\Sun\\Java\\lib\\ext",
   "java.home": "C:\\Program Files\\Java\\jdk1.8.0_65\\jre",
   "java.io.tmpdir": "./temp",
   "java.library.path": "C:\\Program Files\\Java\\jdk1.8.0_65\\bin;C:\\WINDOWS\\Sun\\Java\\bin;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\Ruby22-x64\\bin;C:\\Imagick;C:\\ProgramData\\Oracle\\Java\\javapath;C:\\Program Files (x86)\\Intel\\iCLS Client\\;C:\\Program Files\\Intel\\iCLS Client\\;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\Intel\\Intel(R) Management Engine Components\\DAL;C:\\Program Files\\Intel\\Intel(R) Management Engine Components\\DAL;C:\\Program Files (x86)\\Intel\\Intel(R) Management Engine Components\\IPT;C:\\Program Files\\Intel\\Intel(R) Management Engine Components\\IPT;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Program Files (x86)\\Skype\\Phone\\;C:\\xampp\\php;C:\\ProgramData\\ComposerSetup\\bin;C:\\Program Files\\Git\\cmd;C:\\Program Files\\OpenVPN\\bin;C:\\Program Files\\nodejs\\;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files\\cURL\\bin;C:\\Program Files\\gradle\\2.13\\bin;C:\\Program Files\\CMake\\bin;C:\\Program Files\\flex_bison;C:\\Program Files\\doxygen\\bin;C:\\SonarQube\\SonarQubeScanner\\bin;C:\\Users\\domin\\AppData\\Local\\Programs\\Python\\Python35-32\\Scripts\\;C:\\Users\\domin\\AppData\\Local\\Programs\\Python\\Python35-32\\;C:\\Users\\domin\\AppData\\Roaming\\npm;C:\\Users\\domin\\AppData\\Local\\Microsoft\\WindowsApps;;.",
   "java.runtime.name": "Java(TM) SE Runtime Environment",
   "java.runtime.version": "1.8.0_65-b17",
   "java.specification.name": "Java Platform API Specification",
   "java.specification.vendor": "Oracle Corporation",
   "java.specification.version": "1.8",
   "java.vendor": "Oracle Corporation",
   "java.vendor.url": "http://java.oracle.com/",
   "java.vendor.url.bug": "http://bugreport.sun.com/bugreport/",
   "java.version": "1.8.0_65",
   "java.vm.info": "mixed mode",
   "java.vm.name": "Java HotSpot(TM) 64-Bit Server VM",
   "java.vm.specification.name": "Java Virtual Machine Specification",
   "java.vm.specification.vendor": "Oracle Corporation",
   "java.vm.specification.version": "1.8",
   "java.vm.vendor": "Oracle Corporation",
   "java.vm.version": "25.65-b01",
   "jna.nosys": "true",
   "junit4.childvm.count": "3",
   "junit4.childvm.cwd": "C:\\projects\\team3\\core\\build\\testrun\\test\\J0",
   "junit4.childvm.id": "0",
   "junit4.memory.total": "514850816",
   "junit4.pidString": "15428@LAPTOP-LKSM26S6",
   "junit4.processors": "4",
   "line.separator": "\r\n",
   "os.arch": "amd64",
   "os.name": "Windows 10",
   "os.version": "10.0",
   "path.separator": ";",
   "sun.arch.data.model": "64",
   "sun.boot.class.path": "C:\\Program Files\\Java\\jdk1.8.0_65\\jre\\lib\\resources.jar;C:\\Program Files\\Java\\jdk1.8.0_65\\jre\\lib\\rt.jar;C:\\Program Files\\Java\\jdk1.8.0_65\\jre\\lib\\sunrsasign.jar;C:\\Program Files\\Java\\jdk1.8.0_65\\jre\\lib\\jsse.jar;C:\\Program Files\\Java\\jdk1.8.0_65\\jre\\lib\\jce.jar;C:\\Program Files\\Java\\jdk1.8.0_65\\jre\\lib\\charsets.jar;C:\\Program Files\\Java\\jdk1.8.0_65\\jre\\lib\\jfr.jar;C:\\Program Files\\Java\\jdk1.8.0_65\\jre\\classes",
   "sun.boot.library.path": "C:\\Program Files\\Java\\jdk1.8.0_65\\jre\\bin",
   "sun.cpu.endian": "little",
   "sun.cpu.isalist": "amd64",
   "sun.desktop": "windows",
   "sun.io.unicode.encoding": "UnicodeLittle",
   "sun.java.command": "com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe -eventsfile C:\\projects\\team3\\core\\build\\testrun\\test\\temp\\junit4-J0-20160915_123537_460.events @C:\\projects\\team3\\core\\build\\testrun\\test\\temp\\junit4-J0-20160915_123537_460.suites -stdin",
   "sun.java.launcher": "SUN_STANDARD",
   "sun.jnu.encoding": "Cp1252",
   "sun.management.compiler": "HotSpot 64-Bit Tiered Compilers",
   "sun.os.patch.level": "",
   "tests.artifact": "core",
   "tests.gradle": "true",
   "tests.ifNoTests": "fail",
   "tests.logger.level": "WARN",
   "tests.prefix": "tests",
   "tests.security.manager": "true",
   "tests.seed": "9CF13790D965C5A7",
   "tests.task": ":core:test",
   "user.country": "AT",
   "user.dir": "C:\\projects\\team3\\core\\build\\testrun\\test\\J0",
   "user.home": "C:\\Users\\domin",
   "user.language": "de",
   "user.name": "domin",
   "user.script": "",
   "user.timezone": "",
   "user.variant": ""
  }
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.WildcardQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
   "children": [
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEmptyValue(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testEmptyValue(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testEmptyValue",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testParseFailsWithMultipleFields(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testParseFailsWithMultipleFields",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.WildcardQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935739042
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:35:54,951][INFO ][org.elasticsearch.cluster.service] new_master {node}{ZN0MlhmcRN6vHUrYty8KoA}{local}{local[1]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:35:55,189][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:35:55,191][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:36:14,161][WARN ][org.elasticsearch.deprecation.index.mapper]  [CDyeUmFf] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:36:14,165][WARN ][org.elasticsearch.deprecation.index.mapper]  [CDyeUmFf] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:36:14,165][WARN ][org.elasticsearch.deprecation.index.mapper]  [CDyeUmFf] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:36:15,766][WARN ][org.elasticsearch.deprecation.index.mapper]  [CDyeUmFf] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:36:15,767][WARN ][org.elasticsearch.deprecation.index.mapper]  [CDyeUmFf] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:36:15,768][WARN ][org.elasticsearch.deprecation.index.mapper]  [CDyeUmFf] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:36:15,795][WARN ][org.elasticsearch.deprecation.index.mapper]  [CDyeUmFf] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:36:15,796][WARN ][org.elasticsearch.deprecation.index.mapper]  [CDyeUmFf] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:36:15,796][WARN ][org.elasticsearch.deprecation.index.mapper]  [CDyeUmFf] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:36:15,805][WARN ][org.elasticsearch.deprecation.index.mapper]  [CDyeUmFf] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:36:15,805][WARN ][org.elasticsearch.deprecation.index.mapper]  [CDyeUmFf] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:36:15,806][WARN ][org.elasticsearch.deprecation.index.mapper]  [CDyeUmFf] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:36:15,813][WARN ][org.elasticsearch.deprecation.index.mapper]  [CDyeUmFf] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:36:15,813][WARN ][org.elasticsearch.deprecation.index.mapper]  [CDyeUmFf] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:36:15,813][WARN ][org.elasticsearch.deprecation.index.mapper]  [CDyeUmFf] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:36:15,822][WARN ][org.elasticsearch.deprecation.index.mapper]  [CDyeUmFf] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:36:15,822][WARN ][org.elasticsearch.deprecation.index.mapper]  [CDyeUmFf] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:36:15,822][WARN ][org.elasticsearch.deprecation.index.mapper]  [CDyeUmFf] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:36:15,827][WARN ][org.elasticsearch.deprecation.index.mapper]  [CDyeUmFf] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:36:15,827][WARN ][org.elasticsearch.deprecation.index.mapper]  [CDyeUmFf] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:36:15,828][WARN ][org.elasticsearch.deprecation.index.mapper]  [CDyeUmFf] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:36:15,839][WARN ][org.elasticsearch.deprecation.index.mapper]  [CDyeUmFf] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:36:15,839][WARN ][org.elasticsearch.deprecation.index.mapper]  [CDyeUmFf] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:36:15,839][WARN ][org.elasticsearch.deprecation.index.mapper]  [CDyeUmFf] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:36:15,857][WARN ][org.elasticsearch.deprecation.index.mapper]  [CDyeUmFf] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:36:15,858][WARN ][org.elasticsearch.deprecation.index.mapper]  [CDyeUmFf] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:36:15,858][WARN ][org.elasticsearch.deprecation.index.mapper]  [CDyeUmFf] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1473935747090,
  "executionTime": 29280
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyValue(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyValue(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1473935776371,
  "executionTime": 120
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1473935776491,
  "executionTime": 122
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1473935776614,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1473935776634,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1473935776646,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1473935776665,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1473935776683,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1473935776692,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1473935776697,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1473935776705,
  "executionTime": 801
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.WildcardQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.WildcardQueryBuilderTests)",
  "startTimestamp": 1473935777507,
  "executionTime": 11
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.WildcardQueryBuilderTests",
  "startTimestamp": 1473935739042,
  "executionTime": 38582
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.KeepFilterFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.KeepFilterFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.KeepFilterFactoryTests",
   "children": [
    {
     "id": "ID#testCaseInsensitiveMapping(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
     "displayName": "testCaseInsensitiveMapping(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
     "methodName": "testCaseInsensitiveMapping",
     "className": "org.elasticsearch.index.analysis.KeepFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testLoadWithoutSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
     "displayName": "testLoadWithoutSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
     "methodName": "testLoadWithoutSettings",
     "className": "org.elasticsearch.index.analysis.KeepFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testKeepWordsPathSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
     "displayName": "testKeepWordsPathSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
     "methodName": "testKeepWordsPathSettings",
     "className": "org.elasticsearch.index.analysis.KeepFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testLoadOverConfiguredSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
     "displayName": "testLoadOverConfiguredSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
     "methodName": "testLoadOverConfiguredSettings",
     "className": "org.elasticsearch.index.analysis.KeepFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCaseSensitiveMapping(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
     "displayName": "testCaseSensitiveMapping(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
     "methodName": "testCaseSensitiveMapping",
     "className": "org.elasticsearch.index.analysis.KeepFilterFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935777710
 }
]

[
 "TEST_STARTED",
 "ID#testCaseInsensitiveMapping(org.elasticsearch.index.analysis.KeepFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCaseInsensitiveMapping(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
  "startTimestamp": 1473935777776,
  "executionTime": 197
 }
]

[
 "TEST_STARTED",
 "ID#testLoadWithoutSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLoadWithoutSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
  "startTimestamp": 1473935777974,
  "executionTime": 41
 }
]

[
 "TEST_STARTED",
 "ID#testKeepWordsPathSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testKeepWordsPathSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
  "startTimestamp": 1473935778019,
  "executionTime": 32
 }
]

[
 "TEST_STARTED",
 "ID#testLoadOverConfiguredSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLoadOverConfiguredSettings(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
  "startTimestamp": 1473935778051,
  "executionTime": 54
 }
]

[
 "TEST_STARTED",
 "ID#testCaseSensitiveMapping(org.elasticsearch.index.analysis.KeepFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCaseSensitiveMapping(org.elasticsearch.index.analysis.KeepFilterFactoryTests)",
  "startTimestamp": 1473935778106,
  "executionTime": 22
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.KeepFilterFactoryTests",
  "startTimestamp": 1473935777710,
  "executionTime": 443
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.recovery.RecoveryStatusTests",
   "displayName": "org.elasticsearch.indices.recovery.RecoveryStatusTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.recovery.RecoveryStatusTests",
   "children": [
    {
     "id": "ID#testRenameTempFiles(org.elasticsearch.indices.recovery.RecoveryStatusTests)",
     "displayName": "testRenameTempFiles(org.elasticsearch.indices.recovery.RecoveryStatusTests)",
     "methodName": "testRenameTempFiles",
     "className": "org.elasticsearch.indices.recovery.RecoveryStatusTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935778387
 }
]

[
 "TEST_STARTED",
 "ID#testRenameTempFiles(org.elasticsearch.indices.recovery.RecoveryStatusTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:18,541][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:18,992][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [790.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:18,993][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:19,016][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[15428], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:19,019][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:19,019][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:37,150][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:37,150][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:37,260][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[1]}, bound_addresses {local[1]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:37,289][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{QF5xEl7WQ5iEkLLBo9VAGQ}{GFMbRJ4aTUaIGFQFy6p-0A}{local}{local[1]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:37,372][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:38,060][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:38,719][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [foo] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:41,134][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[foo][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:41,566][INFO ][org.elasticsearch.indices.recovery] [node_s_0] [foo][0] [RecoveryStatusTests#testRenameTempFiles]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRenameTempFiles(org.elasticsearch.indices.recovery.RecoveryStatusTests)",
  "startTimestamp": 1473935778506,
  "executionTime": 23165
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:41,671][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:41,674][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:41,675][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:36:41,748][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.recovery.RecoveryStatusTests",
  "startTimestamp": 1473935778387,
  "executionTime": 23376
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.index.ESDirectoryReaderTests",
   "displayName": "org.elasticsearch.common.lucene.index.ESDirectoryReaderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.index.ESDirectoryReaderTests",
   "children": [
    {
     "id": "ID#testCoreCacheKey(org.elasticsearch.common.lucene.index.ESDirectoryReaderTests)",
     "displayName": "testCoreCacheKey(org.elasticsearch.common.lucene.index.ESDirectoryReaderTests)",
     "methodName": "testCoreCacheKey",
     "className": "org.elasticsearch.common.lucene.index.ESDirectoryReaderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935801801
 }
]

[
 "TEST_STARTED",
 "ID#testCoreCacheKey(org.elasticsearch.common.lucene.index.ESDirectoryReaderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCoreCacheKey(org.elasticsearch.common.lucene.index.ESDirectoryReaderTests)",
  "startTimestamp": 1473935801850,
  "executionTime": 869
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.index.ESDirectoryReaderTests",
  "startTimestamp": 1473935801801,
  "executionTime": 921
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.RangeTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.RangeTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.RangeTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.RangeTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.RangeTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.RangeTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.RangeTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.RangeTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.RangeTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.RangeTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.RangeTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.RangeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935802903
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:36:43,224][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{tPBWgOeET9aEEpM4dpLmCg}{local}{local[2]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.RangeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.RangeTests)",
  "startTimestamp": 1473935803320,
  "executionTime": 457
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.RangeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.RangeTests)",
  "startTimestamp": 1473935803777,
  "executionTime": 239
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.RangeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.RangeTests)",
  "startTimestamp": 1473935804017,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.RangeTests",
  "startTimestamp": 1473935802903,
  "executionTime": 1130
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
   "children": [
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBadAnalyzer(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testBadAnalyzer(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testBadAnalyzer",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testPhraseMatchQuery(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testPhraseMatchQuery(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testPhraseMatchQuery",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testParseFailsWithMultipleFields(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testParseFailsWithMultipleFields",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalValues(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testIllegalValues(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testIllegalValues",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935804076
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:36:44,287][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{A_3KOhPvRIKtput2xCzYDQ}{local}{local[3]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:36:44,299][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:36:44,299][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:36:44,851][WARN ][org.elasticsearch.deprecation.index.mapper]  [pHA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:36:44,851][WARN ][org.elasticsearch.deprecation.index.mapper]  [pHA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:36:44,851][WARN ][org.elasticsearch.deprecation.index.mapper]  [pHA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:36:44,862][WARN ][org.elasticsearch.deprecation.index.mapper]  [pHA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:36:44,863][WARN ][org.elasticsearch.deprecation.index.mapper]  [pHA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:36:44,863][WARN ][org.elasticsearch.deprecation.index.mapper]  [pHA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:36:44,874][WARN ][org.elasticsearch.deprecation.index.mapper]  [pHA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:36:44,874][WARN ][org.elasticsearch.deprecation.index.mapper]  [pHA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:36:44,875][WARN ][org.elasticsearch.deprecation.index.mapper]  [pHA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:36:44,879][WARN ][org.elasticsearch.deprecation.index.mapper]  [pHA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:36:44,880][WARN ][org.elasticsearch.deprecation.index.mapper]  [pHA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:36:44,880][WARN ][org.elasticsearch.deprecation.index.mapper]  [pHA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:36:44,887][WARN ][org.elasticsearch.deprecation.index.mapper]  [pHA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:36:44,887][WARN ][org.elasticsearch.deprecation.index.mapper]  [pHA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:36:44,887][WARN ][org.elasticsearch.deprecation.index.mapper]  [pHA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:36:44,904][WARN ][org.elasticsearch.deprecation.index.mapper]  [pHA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:36:44,904][WARN ][org.elasticsearch.deprecation.index.mapper]  [pHA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:36:44,904][WARN ][org.elasticsearch.deprecation.index.mapper]  [pHA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1473935804247,
  "executionTime": 710
 }
]

[
 "TEST_STARTED",
 "ID#testBadAnalyzer(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBadAnalyzer(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1473935804958,
  "executionTime": 67
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1473935805025,
  "executionTime": 800
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1473935805825,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1473935805835,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testPhraseMatchQuery(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPhraseMatchQuery(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1473935805838,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1473935805843,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1473935805852,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1473935805856,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalValues(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalValues(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1473935805860,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1473935805864,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.MatchPhraseQueryBuilderTests)",
  "startTimestamp": 1473935805893,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.MatchPhraseQueryBuilderTests",
  "startTimestamp": 1473935804076,
  "executionTime": 1828
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.rescore.QueryRescoreModeTests",
   "displayName": "org.elasticsearch.search.rescore.QueryRescoreModeTests",
   "methodName": null,
   "className": "org.elasticsearch.search.rescore.QueryRescoreModeTests",
   "children": [
    {
     "id": "ID#testQueryRescoreMode(org.elasticsearch.search.rescore.QueryRescoreModeTests)",
     "displayName": "testQueryRescoreMode(org.elasticsearch.search.rescore.QueryRescoreModeTests)",
     "methodName": "testQueryRescoreMode",
     "className": "org.elasticsearch.search.rescore.QueryRescoreModeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935805942
 }
]

[
 "TEST_STARTED",
 "ID#testQueryRescoreMode(org.elasticsearch.search.rescore.QueryRescoreModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryRescoreMode(org.elasticsearch.search.rescore.QueryRescoreModeTests)",
  "startTimestamp": 1473935805971,
  "executionTime": 96
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.rescore.QueryRescoreModeTests",
  "startTimestamp": 1473935805942,
  "executionTime": 127
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests",
   "displayName": "org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests",
   "methodName": null,
   "className": "org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests",
   "children": [
    {
     "id": "ID#testSetNullListener(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
     "displayName": "testSetNullListener(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
     "methodName": "testSetNullListener",
     "className": "org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests",
     "children": []
    },
    {
     "id": "ID#testRejectOtherIndex(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
     "displayName": "testRejectOtherIndex(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
     "methodName": "testRejectOtherIndex",
     "className": "org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests",
     "children": []
    },
    {
     "id": "ID#testListener(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
     "displayName": "testListener(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
     "methodName": "testListener",
     "className": "org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests",
     "children": []
    },
    {
     "id": "ID#testInvalidateEntries(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
     "displayName": "testInvalidateEntries(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
     "methodName": "testInvalidateEntries",
     "className": "org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935806131
 }
]

[
 "TEST_STARTED",
 "ID#testSetNullListener(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetNullListener(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
  "startTimestamp": 1473935806186,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRejectOtherIndex(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRejectOtherIndex(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
  "startTimestamp": 1473935806190,
  "executionTime": 387
 }
]

[
 "TEST_STARTED",
 "ID#testListener(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListener(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
  "startTimestamp": 1473935806578,
  "executionTime": 896
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidateEntries(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidateEntries(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
  "startTimestamp": 1473935807475,
  "executionTime": 627
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests",
  "startTimestamp": 1473935806131,
  "executionTime": 1974
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests",
   "displayName": "org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests",
   "children": [
    {
     "id": "ID#testExplanationToXContent(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
     "displayName": "testExplanationToXContent(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
     "methodName": "testExplanationToXContent",
     "className": "org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests",
     "children": []
    },
    {
     "id": "ID#testExplanationSerialization(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
     "displayName": "testExplanationSerialization(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
     "methodName": "testExplanationSerialization",
     "className": "org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests",
     "children": []
    },
    {
     "id": "ID#testDecisionEquality(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
     "displayName": "testDecisionEquality(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
     "methodName": "testDecisionEquality",
     "className": "org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests",
     "children": []
    },
    {
     "id": "ID#testDecisionAndExplanation(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
     "displayName": "testDecisionAndExplanation(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
     "methodName": "testDecisionAndExplanation",
     "className": "org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935808177
 }
]

[
 "TEST_STARTED",
 "ID#testExplanationToXContent(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExplanationToXContent(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
  "startTimestamp": 1473935808417,
  "executionTime": 163
 }
]

[
 "TEST_STARTED",
 "ID#testExplanationSerialization(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExplanationSerialization(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
  "startTimestamp": 1473935808580,
  "executionTime": 149
 }
]

[
 "TEST_STARTED",
 "ID#testDecisionEquality(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDecisionEquality(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
  "startTimestamp": 1473935808729,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testDecisionAndExplanation(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDecisionAndExplanation(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests)",
  "startTimestamp": 1473935808757,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplanationTests",
  "startTimestamp": 1473935808177,
  "executionTime": 592
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cli.MultiCommandTests",
   "displayName": "org.elasticsearch.cli.MultiCommandTests",
   "methodName": null,
   "className": "org.elasticsearch.cli.MultiCommandTests",
   "children": [
    {
     "id": "ID#testHelp(org.elasticsearch.cli.MultiCommandTests)",
     "displayName": "testHelp(org.elasticsearch.cli.MultiCommandTests)",
     "methodName": "testHelp",
     "className": "org.elasticsearch.cli.MultiCommandTests",
     "children": []
    },
    {
     "id": "ID#testUnknownCommand(org.elasticsearch.cli.MultiCommandTests)",
     "displayName": "testUnknownCommand(org.elasticsearch.cli.MultiCommandTests)",
     "methodName": "testUnknownCommand",
     "className": "org.elasticsearch.cli.MultiCommandTests",
     "children": []
    },
    {
     "id": "ID#testMissingCommand(org.elasticsearch.cli.MultiCommandTests)",
     "displayName": "testMissingCommand(org.elasticsearch.cli.MultiCommandTests)",
     "methodName": "testMissingCommand",
     "className": "org.elasticsearch.cli.MultiCommandTests",
     "children": []
    },
    {
     "id": "ID#testSubcommandHelp(org.elasticsearch.cli.MultiCommandTests)",
     "displayName": "testSubcommandHelp(org.elasticsearch.cli.MultiCommandTests)",
     "methodName": "testSubcommandHelp",
     "className": "org.elasticsearch.cli.MultiCommandTests",
     "children": []
    },
    {
     "id": "ID#testNoCommandsConfigured(org.elasticsearch.cli.MultiCommandTests)",
     "displayName": "testNoCommandsConfigured(org.elasticsearch.cli.MultiCommandTests)",
     "methodName": "testNoCommandsConfigured",
     "className": "org.elasticsearch.cli.MultiCommandTests",
     "children": []
    },
    {
     "id": "ID#testSubcommandArguments(org.elasticsearch.cli.MultiCommandTests)",
     "displayName": "testSubcommandArguments(org.elasticsearch.cli.MultiCommandTests)",
     "methodName": "testSubcommandArguments",
     "className": "org.elasticsearch.cli.MultiCommandTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935808926
 }
]

[
 "TEST_STARTED",
 "ID#testHelp(org.elasticsearch.cli.MultiCommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHelp(org.elasticsearch.cli.MultiCommandTests)",
  "startTimestamp": 1473935809020,
  "executionTime": 347
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownCommand(org.elasticsearch.cli.MultiCommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownCommand(org.elasticsearch.cli.MultiCommandTests)",
  "startTimestamp": 1473935809367,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testMissingCommand(org.elasticsearch.cli.MultiCommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingCommand(org.elasticsearch.cli.MultiCommandTests)",
  "startTimestamp": 1473935809378,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testSubcommandHelp(org.elasticsearch.cli.MultiCommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSubcommandHelp(org.elasticsearch.cli.MultiCommandTests)",
  "startTimestamp": 1473935809387,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testNoCommandsConfigured(org.elasticsearch.cli.MultiCommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoCommandsConfigured(org.elasticsearch.cli.MultiCommandTests)",
  "startTimestamp": 1473935809393,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSubcommandArguments(org.elasticsearch.cli.MultiCommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSubcommandArguments(org.elasticsearch.cli.MultiCommandTests)",
  "startTimestamp": 1473935809397,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cli.MultiCommandTests",
  "startTimestamp": 1473935808926,
  "executionTime": 480
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.IndicesLifecycleListenerSingleNodeTests",
   "displayName": "org.elasticsearch.indices.IndicesLifecycleListenerSingleNodeTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.IndicesLifecycleListenerSingleNodeTests",
   "children": [
    {
     "id": "ID#testCloseDeleteCallback(org.elasticsearch.indices.IndicesLifecycleListenerSingleNodeTests)",
     "displayName": "testCloseDeleteCallback(org.elasticsearch.indices.IndicesLifecycleListenerSingleNodeTests)",
     "methodName": "testCloseDeleteCallback",
     "className": "org.elasticsearch.indices.IndicesLifecycleListenerSingleNodeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935809448
 }
]

[
 "TEST_STARTED",
 "ID#testCloseDeleteCallback(org.elasticsearch.indices.IndicesLifecycleListenerSingleNodeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:36:49,505][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:36:49,561][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [790.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:36:49,561][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:36:49,566][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[15428], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:36:49,570][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:36:49,570][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:36:50,155][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:36:50,156][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:36:50,157][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[2]}, bound_addresses {local[2]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:36:50,230][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{yeCGQJ63TQymAaJ6pxIixw}{hKzetSC2TtmZDpyrQWp2MQ}{local}{local[2]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:36:50,232][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:36:50,303][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:36:50,361][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:36:50,664][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:36:51,888][INFO ][org.elasticsearch.indices] [node_s_0] [IndicesLifecycleListenerSingleNodeTests#testCloseDeleteCallback]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCloseDeleteCallback(org.elasticsearch.indices.IndicesLifecycleListenerSingleNodeTests)",
  "startTimestamp": 1473935809492,
  "executionTime": 2417
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:36:51,910][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:36:51,913][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:36:51,913][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:36:51,916][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.IndicesLifecycleListenerSingleNodeTests",
  "startTimestamp": 1473935809448,
  "executionTime": 2476
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.monitor.os.OsProbeTests",
   "displayName": "org.elasticsearch.monitor.os.OsProbeTests",
   "methodName": null,
   "className": "org.elasticsearch.monitor.os.OsProbeTests",
   "children": [
    {
     "id": "ID#testOsStats(org.elasticsearch.monitor.os.OsProbeTests)",
     "displayName": "testOsStats(org.elasticsearch.monitor.os.OsProbeTests)",
     "methodName": "testOsStats",
     "className": "org.elasticsearch.monitor.os.OsProbeTests",
     "children": []
    },
    {
     "id": "ID#testOsInfo(org.elasticsearch.monitor.os.OsProbeTests)",
     "displayName": "testOsInfo(org.elasticsearch.monitor.os.OsProbeTests)",
     "methodName": "testOsInfo",
     "className": "org.elasticsearch.monitor.os.OsProbeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935811955
 }
]

[
 "TEST_STARTED",
 "ID#testOsStats(org.elasticsearch.monitor.os.OsProbeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOsStats(org.elasticsearch.monitor.os.OsProbeTests)",
  "startTimestamp": 1473935812031,
  "executionTime": 33
 }
]

[
 "TEST_STARTED",
 "ID#testOsInfo(org.elasticsearch.monitor.os.OsProbeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOsInfo(org.elasticsearch.monitor.os.OsProbeTests)",
  "startTimestamp": 1473935812065,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.monitor.os.OsProbeTests",
  "startTimestamp": 1473935811955,
  "executionTime": 115
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.ParentChildFieldDataTests",
   "displayName": "org.elasticsearch.index.fielddata.ParentChildFieldDataTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.ParentChildFieldDataTests",
   "children": [
    {
     "id": "ID#testThreads(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
     "displayName": "testThreads(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
     "methodName": "testThreads",
     "className": "org.elasticsearch.index.fielddata.ParentChildFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSorting(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
     "displayName": "testSorting(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
     "methodName": "testSorting",
     "className": "org.elasticsearch.index.fielddata.ParentChildFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testGetBytesValues(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
     "displayName": "testGetBytesValues(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
     "methodName": "testGetBytesValues",
     "className": "org.elasticsearch.index.fielddata.ParentChildFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
     "displayName": "testEmpty(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.index.fielddata.ParentChildFieldDataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935812202
 }
]

[
 "TEST_STARTED",
 "ID#testThreads(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:36:52,359][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:36:52,419][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:36:52,420][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:36:52,427][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[15428], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:36:52,431][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:36:52,432][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:36:52,741][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:36:52,742][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:36:52,742][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[3]}, bound_addresses {local[3]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:36:52,814][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{wdUWvp-fSKaO6hITRzzHAg}{fY3rgaD6Q32eHa9BVLN4dA}{local}{local[3]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:36:52,816][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:36:52,992][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:36:53,030][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:36:53,188][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:36:54,558][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [ParentChildFieldDataTests#testThreads]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThreads(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
  "startTimestamp": 1473935812347,
  "executionTime": 2468
 }
]

[
 "TEST_STARTED",
 "ID#testSorting(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:36:54,826][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:36:54,922][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:36:55,160][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [ParentChildFieldDataTests#testSorting]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSorting(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
  "startTimestamp": 1473935814815,
  "executionTime": 430
 }
]

[
 "TEST_STARTED",
 "ID#testGetBytesValues(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:36:55,258][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:36:55,373][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:36:55,454][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [ParentChildFieldDataTests#testGetBytesValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetBytesValues(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
  "startTimestamp": 1473935815246,
  "executionTime": 245
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:36:55,534][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:36:56,355][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:36:56,461][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [ParentChildFieldDataTests#testEmpty]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.index.fielddata.ParentChildFieldDataTests)",
  "startTimestamp": 1473935815492,
  "executionTime": 1028
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:36:56,520][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:36:56,521][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:36:56,522][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:36:56,524][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.ParentChildFieldDataTests",
  "startTimestamp": 1473935812202,
  "executionTime": 4336
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.unit.ByteSizeValueTests",
   "displayName": "org.elasticsearch.common.unit.ByteSizeValueTests",
   "methodName": null,
   "className": "org.elasticsearch.common.unit.ByteSizeValueTests",
   "children": [
    {
     "id": "ID#testActual(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "displayName": "testActual(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "methodName": "testActual",
     "className": "org.elasticsearch.common.unit.ByteSizeValueTests",
     "children": []
    },
    {
     "id": "ID#testActualTera(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "displayName": "testActualTera(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "methodName": "testActualTera",
     "className": "org.elasticsearch.common.unit.ByteSizeValueTests",
     "children": []
    },
    {
     "id": "ID#testSimple(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "displayName": "testSimple(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.common.unit.ByteSizeValueTests",
     "children": []
    },
    {
     "id": "ID#testActualPeta(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "displayName": "testActualPeta(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "methodName": "testActualPeta",
     "className": "org.elasticsearch.common.unit.ByteSizeValueTests",
     "children": []
    },
    {
     "id": "ID#testToString(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "displayName": "testToString(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "methodName": "testToString",
     "className": "org.elasticsearch.common.unit.ByteSizeValueTests",
     "children": []
    },
    {
     "id": "ID#testFailOnEmptyParsing(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "displayName": "testFailOnEmptyParsing(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "methodName": "testFailOnEmptyParsing",
     "className": "org.elasticsearch.common.unit.ByteSizeValueTests",
     "children": []
    },
    {
     "id": "ID#testFailOnMissingUnits(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "displayName": "testFailOnMissingUnits(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "methodName": "testFailOnMissingUnits",
     "className": "org.elasticsearch.common.unit.ByteSizeValueTests",
     "children": []
    },
    {
     "id": "ID#testNoDotsAllowed(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "displayName": "testNoDotsAllowed(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "methodName": "testNoDotsAllowed",
     "className": "org.elasticsearch.common.unit.ByteSizeValueTests",
     "children": []
    },
    {
     "id": "ID#testFailOnEmptyNumberParsing(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "displayName": "testFailOnEmptyNumberParsing(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "methodName": "testFailOnEmptyNumberParsing",
     "className": "org.elasticsearch.common.unit.ByteSizeValueTests",
     "children": []
    },
    {
     "id": "ID#testEquality(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "displayName": "testEquality(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "methodName": "testEquality",
     "className": "org.elasticsearch.common.unit.ByteSizeValueTests",
     "children": []
    },
    {
     "id": "ID#testFailOnUnknownUnits(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "displayName": "testFailOnUnknownUnits(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "methodName": "testFailOnUnknownUnits",
     "className": "org.elasticsearch.common.unit.ByteSizeValueTests",
     "children": []
    },
    {
     "id": "ID#testParsing(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "displayName": "testParsing(org.elasticsearch.common.unit.ByteSizeValueTests)",
     "methodName": "testParsing",
     "className": "org.elasticsearch.common.unit.ByteSizeValueTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935816654
 }
]

[
 "TEST_STARTED",
 "ID#testActual(org.elasticsearch.common.unit.ByteSizeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActual(org.elasticsearch.common.unit.ByteSizeValueTests)",
  "startTimestamp": 1473935817109,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testActualTera(org.elasticsearch.common.unit.ByteSizeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActualTera(org.elasticsearch.common.unit.ByteSizeValueTests)",
  "startTimestamp": 1473935817112,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.common.unit.ByteSizeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.common.unit.ByteSizeValueTests)",
  "startTimestamp": 1473935817116,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testActualPeta(org.elasticsearch.common.unit.ByteSizeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActualPeta(org.elasticsearch.common.unit.ByteSizeValueTests)",
  "startTimestamp": 1473935817121,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testToString(org.elasticsearch.common.unit.ByteSizeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToString(org.elasticsearch.common.unit.ByteSizeValueTests)",
  "startTimestamp": 1473935817126,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnEmptyParsing(org.elasticsearch.common.unit.ByteSizeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnEmptyParsing(org.elasticsearch.common.unit.ByteSizeValueTests)",
  "startTimestamp": 1473935817129,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnMissingUnits(org.elasticsearch.common.unit.ByteSizeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnMissingUnits(org.elasticsearch.common.unit.ByteSizeValueTests)",
  "startTimestamp": 1473935817131,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testNoDotsAllowed(org.elasticsearch.common.unit.ByteSizeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoDotsAllowed(org.elasticsearch.common.unit.ByteSizeValueTests)",
  "startTimestamp": 1473935817135,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnEmptyNumberParsing(org.elasticsearch.common.unit.ByteSizeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnEmptyNumberParsing(org.elasticsearch.common.unit.ByteSizeValueTests)",
  "startTimestamp": 1473935817138,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testEquality(org.elasticsearch.common.unit.ByteSizeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquality(org.elasticsearch.common.unit.ByteSizeValueTests)",
  "startTimestamp": 1473935817163,
  "executionTime": 89
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnUnknownUnits(org.elasticsearch.common.unit.ByteSizeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnUnknownUnits(org.elasticsearch.common.unit.ByteSizeValueTests)",
  "startTimestamp": 1473935817252,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParsing(org.elasticsearch.common.unit.ByteSizeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsing(org.elasticsearch.common.unit.ByteSizeValueTests)",
  "startTimestamp": 1473935817255,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.unit.ByteSizeValueTests",
  "startTimestamp": 1473935816654,
  "executionTime": 611
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.shard.ShardPathTests",
   "displayName": "org.elasticsearch.index.shard.ShardPathTests",
   "methodName": null,
   "className": "org.elasticsearch.index.shard.ShardPathTests",
   "children": [
    {
     "id": "ID#testFailLoadShardPathIndexUUIDMissmatch(org.elasticsearch.index.shard.ShardPathTests)",
     "displayName": "testFailLoadShardPathIndexUUIDMissmatch(org.elasticsearch.index.shard.ShardPathTests)",
     "methodName": "testFailLoadShardPathIndexUUIDMissmatch",
     "className": "org.elasticsearch.index.shard.ShardPathTests",
     "children": []
    },
    {
     "id": "ID#testValidCtor(org.elasticsearch.index.shard.ShardPathTests)",
     "displayName": "testValidCtor(org.elasticsearch.index.shard.ShardPathTests)",
     "methodName": "testValidCtor",
     "className": "org.elasticsearch.index.shard.ShardPathTests",
     "children": []
    },
    {
     "id": "ID#testFailLoadShardPathOnMultiState(org.elasticsearch.index.shard.ShardPathTests)",
     "displayName": "testFailLoadShardPathOnMultiState(org.elasticsearch.index.shard.ShardPathTests)",
     "methodName": "testFailLoadShardPathOnMultiState",
     "className": "org.elasticsearch.index.shard.ShardPathTests",
     "children": []
    },
    {
     "id": "ID#testLoadShardPath(org.elasticsearch.index.shard.ShardPathTests)",
     "displayName": "testLoadShardPath(org.elasticsearch.index.shard.ShardPathTests)",
     "methodName": "testLoadShardPath",
     "className": "org.elasticsearch.index.shard.ShardPathTests",
     "children": []
    },
    {
     "id": "ID#testGetRootPaths(org.elasticsearch.index.shard.ShardPathTests)",
     "displayName": "testGetRootPaths(org.elasticsearch.index.shard.ShardPathTests)",
     "methodName": "testGetRootPaths",
     "className": "org.elasticsearch.index.shard.ShardPathTests",
     "children": []
    },
    {
     "id": "ID#testIllegalCustomDataPath(org.elasticsearch.index.shard.ShardPathTests)",
     "displayName": "testIllegalCustomDataPath(org.elasticsearch.index.shard.ShardPathTests)",
     "methodName": "testIllegalCustomDataPath",
     "className": "org.elasticsearch.index.shard.ShardPathTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935817295
 }
]

[
 "TEST_STARTED",
 "ID#testFailLoadShardPathIndexUUIDMissmatch(org.elasticsearch.index.shard.ShardPathTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:36:57,962][INFO ][org.elasticsearch.env    ] [1hTFx4q] using [2] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:36:57,966][INFO ][org.elasticsearch.env    ] [1hTFx4q] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:36:58,180][WARN ][org.elasticsearch.index.shard] [node_s_0] [test][0] [foo][0] found shard on path: [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.index.shard.ShardPathTests_9CF13790D965C5A7-001\\tempDir-003\\nodes\\0\\indices\\foobar\\0] with a different index UUID - this shard seems to be leftover from a different index with the same name. Remove the leftover shard in order to reuse the path with the current index%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailLoadShardPathIndexUUIDMissmatch(org.elasticsearch.index.shard.ShardPathTests)",
  "startTimestamp": 1473935817763,
  "executionTime": 420
 }
]

[
 "TEST_STARTED",
 "ID#testValidCtor(org.elasticsearch.index.shard.ShardPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidCtor(org.elasticsearch.index.shard.ShardPathTests)",
  "startTimestamp": 1473935818183,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testFailLoadShardPathOnMultiState(org.elasticsearch.index.shard.ShardPathTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:36:58,354][INFO ][org.elasticsearch.env    ] [S2OdNZh] using [2] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:36:58,355][INFO ][org.elasticsearch.env    ] [S2OdNZh] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailLoadShardPathOnMultiState(org.elasticsearch.index.shard.ShardPathTests)",
  "startTimestamp": 1473935818197,
  "executionTime": 207
 }
]

[
 "TEST_STARTED",
 "ID#testLoadShardPath(org.elasticsearch.index.shard.ShardPathTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:36:58,555][INFO ][org.elasticsearch.env    ] [_EsETyY] using [3] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:36:58,556][INFO ][org.elasticsearch.env    ] [_EsETyY] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLoadShardPath(org.elasticsearch.index.shard.ShardPathTests)",
  "startTimestamp": 1473935818405,
  "executionTime": 211
 }
]

[
 "TEST_STARTED",
 "ID#testGetRootPaths(org.elasticsearch.index.shard.ShardPathTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:36:58,728][INFO ][org.elasticsearch.env    ] [v19VxM1] using [2] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:36:58,728][INFO ][org.elasticsearch.env    ] [v19VxM1] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetRootPaths(org.elasticsearch.index.shard.ShardPathTests)",
  "startTimestamp": 1473935818616,
  "executionTime": 208
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalCustomDataPath(org.elasticsearch.index.shard.ShardPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalCustomDataPath(org.elasticsearch.index.shard.ShardPathTests)",
  "startTimestamp": 1473935818826,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.shard.ShardPathTests",
  "startTimestamp": 1473935817295,
  "executionTime": 1641
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
   "children": [
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnsupportedInnerQueryType(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testUnsupportedInnerQueryType(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testUnsupportedInnerQueryType",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryInnerSpanMultiTerm(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testToQueryInnerSpanMultiTerm(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testToQueryInnerSpanMultiTerm",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArgument(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testIllegalArgument(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testIllegalArgument",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935819059
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:36:59,237][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{bzYaP5TCRdyS71g8BxdVJA}{local}{local[9]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:36:59,248][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:36:59,249][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:36:59,280][WARN ][org.elasticsearch.deprecation.index.mapper]  [xCuDrU] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:36:59,280][WARN ][org.elasticsearch.deprecation.index.mapper]  [xCuDrU] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:36:59,280][WARN ][org.elasticsearch.deprecation.index.mapper]  [xCuDrU] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:36:59,284][WARN ][org.elasticsearch.deprecation.index.mapper]  [xCuDrU] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:36:59,284][WARN ][org.elasticsearch.deprecation.index.mapper]  [xCuDrU] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:36:59,284][WARN ][org.elasticsearch.deprecation.index.mapper]  [xCuDrU] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:36:59,290][WARN ][org.elasticsearch.deprecation.index.mapper]  [xCuDrU] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:36:59,290][WARN ][org.elasticsearch.deprecation.index.mapper]  [xCuDrU] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:36:59,290][WARN ][org.elasticsearch.deprecation.index.mapper]  [xCuDrU] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:36:59,294][WARN ][org.elasticsearch.deprecation.index.mapper]  [xCuDrU] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:36:59,294][WARN ][org.elasticsearch.deprecation.index.mapper]  [xCuDrU] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:36:59,294][WARN ][org.elasticsearch.deprecation.index.mapper]  [xCuDrU] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:36:59,300][WARN ][org.elasticsearch.deprecation.index.mapper]  [xCuDrU] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:36:59,300][WARN ][org.elasticsearch.deprecation.index.mapper]  [xCuDrU] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:36:59,300][WARN ][org.elasticsearch.deprecation.index.mapper]  [xCuDrU] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:36:59,306][WARN ][org.elasticsearch.deprecation.index.mapper]  [xCuDrU] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:36:59,306][WARN ][org.elasticsearch.deprecation.index.mapper]  [xCuDrU] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:36:59,306][WARN ][org.elasticsearch.deprecation.index.mapper]  [xCuDrU] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1473935819186,
  "executionTime": 159
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1473935819345,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1473935819360,
  "executionTime": 241
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1473935819601,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1473935819608,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testUnsupportedInnerQueryType(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnsupportedInnerQueryType(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1473935819617,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1473935819621,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1473935819633,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryInnerSpanMultiTerm(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryInnerSpanMultiTerm(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1473935819660,
  "executionTime": 64
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArgument(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArgument(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1473935819724,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1473935819728,
  "executionTime": 296
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1473935820024,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
  "startTimestamp": 1473935819059,
  "executionTime": 985
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.NestedObjectMapperTests",
   "displayName": "org.elasticsearch.index.mapper.NestedObjectMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.NestedObjectMapperTests",
   "children": [
    {
     "id": "ID#testNestedArrayStrict(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "displayName": "testNestedArrayStrict(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "methodName": "testNestedArrayStrict",
     "className": "org.elasticsearch.index.mapper.NestedObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testSingleNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "displayName": "testSingleNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "methodName": "testSingleNested",
     "className": "org.elasticsearch.index.mapper.NestedObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testMultiObjectAndNested2(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "displayName": "testMultiObjectAndNested2(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "methodName": "testMultiObjectAndNested2",
     "className": "org.elasticsearch.index.mapper.NestedObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testMultiNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "displayName": "testMultiNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "methodName": "testMultiNested",
     "className": "org.elasticsearch.index.mapper.NestedObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testEmptyNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "displayName": "testEmptyNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "methodName": "testEmptyNested",
     "className": "org.elasticsearch.index.mapper.NestedObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testMultiRootAndNested1(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "displayName": "testMultiRootAndNested1(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "methodName": "testMultiRootAndNested1",
     "className": "org.elasticsearch.index.mapper.NestedObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testMultiObjectAndNested1(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "displayName": "testMultiObjectAndNested1(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "methodName": "testMultiObjectAndNested1",
     "className": "org.elasticsearch.index.mapper.NestedObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testLimitOfNestedFieldsPerIndex(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "displayName": "testLimitOfNestedFieldsPerIndex(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
     "methodName": "testLimitOfNestedFieldsPerIndex",
     "className": "org.elasticsearch.index.mapper.NestedObjectMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935820199
 }
]

[
 "TEST_STARTED",
 "ID#testNestedArrayStrict(org.elasticsearch.index.mapper.NestedObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:00,380][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:03,570][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:03,570][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:03,575][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[15428], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:03,579][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:03,579][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:03,829][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:03,830][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:03,830][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[4]}, bound_addresses {local[4]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:03,833][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{biYIG2dPTAyM74ehN2I9EA}{Dl1rcUV1T-2F6l7oKVXeeA}{local}{local[4]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:03,834][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:03,850][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:03,878][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:03,955][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:04,546][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NestedObjectMapperTests#testNestedArrayStrict]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedArrayStrict(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
  "startTimestamp": 1473935820369,
  "executionTime": 4218
 }
]

[
 "TEST_STARTED",
 "ID#testSingleNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:04,600][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:04,775][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:04,794][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NestedObjectMapperTests#testSingleNested]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
  "startTimestamp": 1473935824588,
  "executionTime": 241
 }
]

[
 "TEST_STARTED",
 "ID#testMultiObjectAndNested2(org.elasticsearch.index.mapper.NestedObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:04,839][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:04,895][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:04,915][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NestedObjectMapperTests#testMultiObjectAndNested2]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiObjectAndNested2(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
  "startTimestamp": 1473935824829,
  "executionTime": 126
 }
]

[
 "TEST_STARTED",
 "ID#testMultiNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:04,966][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:05,038][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:05,057][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NestedObjectMapperTests#testMultiNested]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
  "startTimestamp": 1473935824955,
  "executionTime": 140
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:05,105][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:05,177][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:05,202][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NestedObjectMapperTests#testEmptyNested]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyNested(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
  "startTimestamp": 1473935825095,
  "executionTime": 155
 }
]

[
 "TEST_STARTED",
 "ID#testMultiRootAndNested1(org.elasticsearch.index.mapper.NestedObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:05,260][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:05,392][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:05,418][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NestedObjectMapperTests#testMultiRootAndNested1]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiRootAndNested1(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
  "startTimestamp": 1473935825251,
  "executionTime": 227
 }
]

[
 "TEST_STARTED",
 "ID#testMultiObjectAndNested1(org.elasticsearch.index.mapper.NestedObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:05,488][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:05,590][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:05,637][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NestedObjectMapperTests#testMultiObjectAndNested1]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiObjectAndNested1(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
  "startTimestamp": 1473935825478,
  "executionTime": 221
 }
]

[
 "TEST_STARTED",
 "ID#testLimitOfNestedFieldsPerIndex(org.elasticsearch.index.mapper.NestedObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:05,709][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:05,920][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:05,988][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:06,061][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:06,112][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test3] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:06,192][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test3][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:06,241][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test4] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:06,387][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test4][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:06,466][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test5] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:06,540][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test5][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:06,561][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test5] [NestedObjectMapperTests#testLimitOfNestedFieldsPerIndex]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLimitOfNestedFieldsPerIndex(org.elasticsearch.index.mapper.NestedObjectMapperTests)",
  "startTimestamp": 1473935825700,
  "executionTime": 978
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:06,678][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:06,679][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:06,679][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:06,681][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.NestedObjectMapperTests",
  "startTimestamp": 1473935820199,
  "executionTime": 6506
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.rest.action.cat.RestTableTests",
   "displayName": "org.elasticsearch.rest.action.cat.RestTableTests",
   "methodName": null,
   "className": "org.elasticsearch.rest.action.cat.RestTableTests",
   "children": [
    {
     "id": "ID#testIgnoreContentType(org.elasticsearch.rest.action.cat.RestTableTests)",
     "displayName": "testIgnoreContentType(org.elasticsearch.rest.action.cat.RestTableTests)",
     "methodName": "testIgnoreContentType",
     "className": "org.elasticsearch.rest.action.cat.RestTableTests",
     "children": []
    },
    {
     "id": "ID#testThatWeUseTheAcceptHeaderYaml(org.elasticsearch.rest.action.cat.RestTableTests)",
     "displayName": "testThatWeUseTheAcceptHeaderYaml(org.elasticsearch.rest.action.cat.RestTableTests)",
     "methodName": "testThatWeUseTheAcceptHeaderYaml",
     "className": "org.elasticsearch.rest.action.cat.RestTableTests",
     "children": []
    },
    {
     "id": "ID#testThatDisplayHeadersSupportWildcards(org.elasticsearch.rest.action.cat.RestTableTests)",
     "displayName": "testThatDisplayHeadersSupportWildcards(org.elasticsearch.rest.action.cat.RestTableTests)",
     "methodName": "testThatDisplayHeadersSupportWildcards",
     "className": "org.elasticsearch.rest.action.cat.RestTableTests",
     "children": []
    },
    {
     "id": "ID#testThatWeUseTheAcceptHeaderSmile(org.elasticsearch.rest.action.cat.RestTableTests)",
     "displayName": "testThatWeUseTheAcceptHeaderSmile(org.elasticsearch.rest.action.cat.RestTableTests)",
     "methodName": "testThatWeUseTheAcceptHeaderSmile",
     "className": "org.elasticsearch.rest.action.cat.RestTableTests",
     "children": []
    },
    {
     "id": "ID#testThatWeUseTheAcceptHeaderJson(org.elasticsearch.rest.action.cat.RestTableTests)",
     "displayName": "testThatWeUseTheAcceptHeaderJson(org.elasticsearch.rest.action.cat.RestTableTests)",
     "methodName": "testThatWeUseTheAcceptHeaderJson",
     "className": "org.elasticsearch.rest.action.cat.RestTableTests",
     "children": []
    },
    {
     "id": "ID#testThatWeUseTheAcceptHeaderCbor(org.elasticsearch.rest.action.cat.RestTableTests)",
     "displayName": "testThatWeUseTheAcceptHeaderCbor(org.elasticsearch.rest.action.cat.RestTableTests)",
     "methodName": "testThatWeUseTheAcceptHeaderCbor",
     "className": "org.elasticsearch.rest.action.cat.RestTableTests",
     "children": []
    },
    {
     "id": "ID#testThatDisplayHeadersAreNotAddedTwice(org.elasticsearch.rest.action.cat.RestTableTests)",
     "displayName": "testThatDisplayHeadersAreNotAddedTwice(org.elasticsearch.rest.action.cat.RestTableTests)",
     "methodName": "testThatDisplayHeadersAreNotAddedTwice",
     "className": "org.elasticsearch.rest.action.cat.RestTableTests",
     "children": []
    },
    {
     "id": "ID#testThatWeUseTheAcceptHeaderText(org.elasticsearch.rest.action.cat.RestTableTests)",
     "displayName": "testThatWeUseTheAcceptHeaderText(org.elasticsearch.rest.action.cat.RestTableTests)",
     "methodName": "testThatWeUseTheAcceptHeaderText",
     "className": "org.elasticsearch.rest.action.cat.RestTableTests",
     "children": []
    },
    {
     "id": "ID#testThatDisplayHeadersWithoutTimestamp(org.elasticsearch.rest.action.cat.RestTableTests)",
     "displayName": "testThatDisplayHeadersWithoutTimestamp(org.elasticsearch.rest.action.cat.RestTableTests)",
     "methodName": "testThatDisplayHeadersWithoutTimestamp",
     "className": "org.elasticsearch.rest.action.cat.RestTableTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935826801
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreContentType(org.elasticsearch.rest.action.cat.RestTableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreContentType(org.elasticsearch.rest.action.cat.RestTableTests)",
  "startTimestamp": 1473935826848,
  "executionTime": 210
 }
]

[
 "TEST_STARTED",
 "ID#testThatWeUseTheAcceptHeaderYaml(org.elasticsearch.rest.action.cat.RestTableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatWeUseTheAcceptHeaderYaml(org.elasticsearch.rest.action.cat.RestTableTests)",
  "startTimestamp": 1473935827058,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testThatDisplayHeadersSupportWildcards(org.elasticsearch.rest.action.cat.RestTableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatDisplayHeadersSupportWildcards(org.elasticsearch.rest.action.cat.RestTableTests)",
  "startTimestamp": 1473935827066,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testThatWeUseTheAcceptHeaderSmile(org.elasticsearch.rest.action.cat.RestTableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatWeUseTheAcceptHeaderSmile(org.elasticsearch.rest.action.cat.RestTableTests)",
  "startTimestamp": 1473935827078,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatWeUseTheAcceptHeaderJson(org.elasticsearch.rest.action.cat.RestTableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatWeUseTheAcceptHeaderJson(org.elasticsearch.rest.action.cat.RestTableTests)",
  "startTimestamp": 1473935827080,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testThatWeUseTheAcceptHeaderCbor(org.elasticsearch.rest.action.cat.RestTableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatWeUseTheAcceptHeaderCbor(org.elasticsearch.rest.action.cat.RestTableTests)",
  "startTimestamp": 1473935827083,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatDisplayHeadersAreNotAddedTwice(org.elasticsearch.rest.action.cat.RestTableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatDisplayHeadersAreNotAddedTwice(org.elasticsearch.rest.action.cat.RestTableTests)",
  "startTimestamp": 1473935827086,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatWeUseTheAcceptHeaderText(org.elasticsearch.rest.action.cat.RestTableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatWeUseTheAcceptHeaderText(org.elasticsearch.rest.action.cat.RestTableTests)",
  "startTimestamp": 1473935827088,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatDisplayHeadersWithoutTimestamp(org.elasticsearch.rest.action.cat.RestTableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatDisplayHeadersWithoutTimestamp(org.elasticsearch.rest.action.cat.RestTableTests)",
  "startTimestamp": 1473935827090,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.rest.action.cat.RestTableTests",
  "startTimestamp": 1473935826801,
  "executionTime": 295
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.script.ScriptServiceTests",
   "displayName": "org.elasticsearch.script.ScriptServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.script.ScriptServiceTests",
   "children": [
    {
     "id": "ID#testScriptCompiledOnceHiddenFileDetected(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testScriptCompiledOnceHiddenFileDetected(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testScriptCompiledOnceHiddenFileDetected",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testGetStoredScript(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testGetStoredScript(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testGetStoredScript",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testCacheEvictionCountedInCacheEvictionsStats(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testCacheEvictionCountedInCacheEvictionsStats(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testCacheEvictionCountedInCacheEvictionsStats",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testNotSupportedDisableDynamicSetting(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testNotSupportedDisableDynamicSetting(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testNotSupportedDisableDynamicSetting",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testStoreScript(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testStoreScript(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testStoreScript",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testDefaultBehaviourFineGrainedSettings(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testDefaultBehaviourFineGrainedSettings(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testDefaultBehaviourFineGrainedSettings",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testValidateScriptSize(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testValidateScriptSize(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testValidateScriptSize",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testDefaultLanguage(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testDefaultLanguage(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testDefaultLanguage",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testCompilationStatsOnCacheHit(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testCompilationStatsOnCacheHit(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testCompilationStatsOnCacheHit",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testIndexedScriptCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testIndexedScriptCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testIndexedScriptCountedInCompilationStats",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testCompilationCircuitBreaking(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testCompilationCircuitBreaking(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testCompilationCircuitBreaking",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testFineGrainedSettings(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testFineGrainedSettings(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testFineGrainedSettings",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testCompileCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testCompileCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testCompileCountedInCompilationStats",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testExecutableCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testExecutableCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testExecutableCountedInCompilationStats",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testSearchCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testSearchCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testSearchCountedInCompilationStats",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testDeleteScript(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testDeleteScript(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testDeleteScript",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testInlineScriptCompiledOnceCache(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testInlineScriptCompiledOnceCache(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testInlineScriptCompiledOnceCache",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testCompileNonRegisteredContext(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testCompileNonRegisteredContext(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testCompileNonRegisteredContext",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testMultipleCompilationsCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testMultipleCompilationsCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testMultipleCompilationsCountedInCompilationStats",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testScriptsWithoutExtensions(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testScriptsWithoutExtensions(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testScriptsWithoutExtensions",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testFileScriptCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testFileScriptCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testFileScriptCountedInCompilationStats",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935827149
 }
]

[
 "TEST_STARTED",
 "ID#testScriptCompiledOnceHiddenFileDetected(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:37:07,256][INFO ][org.elasticsearch.script ] [node_s_0] --> setup script service%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:37:07,291][INFO ][org.elasticsearch.script ] [node_s_0] compiling script file [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.script.ScriptServiceTests_9CF13790D965C5A7-001\\tempDir-001\\scripts\\file_script.test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:37:07,322][INFO ][org.elasticsearch.script ] [node_s_0] removing script file [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.script.ScriptServiceTests_9CF13790D965C5A7-001\\tempDir-001\\scripts\\file_script.test]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScriptCompiledOnceHiddenFileDetected(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1473935827220,
  "executionTime": 102
 }
]

[
 "TEST_STARTED",
 "ID#testGetStoredScript(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:37:07,329][INFO ][org.elasticsearch.script ] [node_s_0] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetStoredScript(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1473935827322,
  "executionTime": 32
 }
]

[
 "TEST_STARTED",
 "ID#testCacheEvictionCountedInCacheEvictionsStats(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:37:07,361][INFO ][org.elasticsearch.script ] [node_s_0] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCacheEvictionCountedInCacheEvictionsStats(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1473935827355,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testNotSupportedDisableDynamicSetting(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:37:07,377][INFO ][org.elasticsearch.script ] [node_s_0] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotSupportedDisableDynamicSetting(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1473935827366,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testStoreScript(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:37:07,390][INFO ][org.elasticsearch.script ] [node_s_0] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStoreScript(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1473935827382,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultBehaviourFineGrainedSettings(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:37:07,404][INFO ][org.elasticsearch.script ] [node_s_0] --> setup script service%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:37:07,418][INFO ][org.elasticsearch.script ] [node_s_0] compiling script file [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.script.ScriptServiceTests_9CF13790D965C5A7-001\\tempDir-011\\scripts\\file_script.dtest]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-15 02:37:07,443 TEST-ScriptServiceTests.testDefaultBehaviourFineGrainedSettings-seed#[9CF13790D965C5A7] ERROR An exception occurred processing Appender console java.security.AccessControlException: access denied (\"java.lang.RuntimePermission\" \"accessClassInPackage.sun.reflect\")%0D%0A%09at java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)%0D%0A%09at java.security.AccessController.checkPermission(AccessController.java:884)%0D%0A%09at java.lang.SecurityManager.checkPermission(SecurityManager.java:549)%0D%0A%09at java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1564)%0D%0A%09at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:311)%0D%0A%09at java.lang.ClassLoader.loadClass(ClassLoader.java:357)%0D%0A%09at java.lang.Class.forName0(Native Method)%0D%0A%09at java.lang.Class.forName(Class.java:264)%0D%0A%09at org.apache.logging.log4j.util.LoaderUtil.loadClass(LoaderUtil.java:122)%0D%0A%09at org.apache.logging.log4j.core.util.Loader.loadClass(Loader.java:228)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.loadClass(ThrowableProxy.java:496)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.toExtendedStackTrace(ThrowableProxy.java:617)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:135)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:117)%0D%0A%09at org.apache.logging.log4j.core.impl.MutableLogEvent.getThrownProxy(MutableLogEvent.java:314)%0D%0A%09at org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter.format(ExtendedThrowablePatternConverter.java:61)%0D%0A%09at org.apache.logging.log4j.core.pattern.PatternFormatter.format(PatternFormatter.java:38)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout$PatternSerializer.toSerializable(PatternLayout.java:294)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.toText(PatternLayout.java:195)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:180)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:57)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.directEncodeEvent(AbstractOutputStreamAppender.java:120)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.tryAppend(AbstractOutputStreamAppender.java:113)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.append(AbstractOutputStreamAppender.java:104)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.tryCallAppender(AppenderControl.java:155)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender0(AppenderControl.java:128)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppenderPreventRecursion(AppenderControl.java:119)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender(AppenderControl.java:84)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.callAppenders(LoggerConfig.java:390)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:375)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:359)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:349)%0D%0A%09at org.apache.logging.log4j.core.config.AwaitCompletionReliabilityStrategy.log(AwaitCompletionReliabilityStrategy.java:63)%0D%0A%09at org.apache.logging.log4j.core.Logger.logMessage(Logger.java:146)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logMessage(AbstractLogger.java:1988)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled(AbstractLogger.java:1960)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.warn(AbstractLogger.java:2526)%0D%0A%09at org.elasticsearch.watcher.FileWatcher$FileObserver.onFileCreated(FileWatcher.java:261)%0D%0A%09at org.elasticsearch.watcher.FileWatcher$FileObserver.init(FileWatcher.java:166)%0D%0A%09at org.elasticsearch.watcher.FileWatcher$FileObserver.createChild(FileWatcher.java:173)%0D%0A%09at org.elasticsearch.watcher.FileWatcher$FileObserver.updateChildren(FileWatcher.java:222)%0D%0A%09at org.elasticsearch.watcher.FileWatcher$FileObserver.checkAndNotify(FileWatcher.java:117)%0D%0A%09at org.elasticsearch.watcher.FileWatcher.doCheckAndNotify(FileWatcher.java:70)%0D%0A%09at org.elasticsearch.watcher.AbstractResourceWatcher.checkAndNotify(AbstractResourceWatcher.java:44)%0D%0A%09at org.elasticsearch.watcher.ResourceWatcherService$ResourceMonitor.run(ResourceWatcherService.java:197)%0D%0A%09at org.elasticsearch.watcher.ResourceWatcherService.notifyNow(ResourceWatcherService.java:166)%0D%0A%09at org.elasticsearch.watcher.ResourceWatcherService.notifyNow(ResourceWatcherService.java:157)%0D%0A%09at org.elasticsearch.script.ScriptServiceTests.createFileScripts(ScriptServiceTests.java:489)%0D%0A%09at org.elasticsearch.script.ScriptServiceTests.testDefaultBehaviourFineGrainedSettings(ScriptServiceTests.java:221)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0D%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0D%0A%09at java.lang.reflect.Method.invoke(Method.java:497)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.random"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "izedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at java.lang.Thread.run(Thread.java:745)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-15 02:37:07,470 TEST-ScriptServiceTests.testDefaultBehaviourFineGrainedSettings-seed#[9CF13790D965C5A7] ERROR An exception occurred processing Appender console java.security.AccessControlException: access denied (\"java.lang.RuntimePermission\" \"accessClassInPackage.sun.reflect\")%0D%0A%09at java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)%0D%0A%09at java.security.AccessController.checkPermission(AccessController.java:884)%0D%0A%09at java.lang.SecurityManager.checkPermission(SecurityManager.java:549)%0D%0A%09at java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1564)%0D%0A%09at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:311)%0D%0A%09at java.lang.ClassLoader.loadClass(ClassLoader.java:357)%0D%0A%09at java.lang.Class.forName0(Native Method)%0D%0A%09at java.lang.Class.forName(Class.java:264)%0D%0A%09at org.apache.logging.log4j.util.LoaderUtil.loadClass(LoaderUtil.java:122)%0D%0A%09at org.apache.logging.log4j.core.util.Loader.loadClass(Loader.java:228)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.loadClass(ThrowableProxy.java:496)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.toExtendedStackTrace(ThrowableProxy.java:617)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:135)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:117)%0D%0A%09at org.apache.logging.log4j.core.impl.MutableLogEvent.getThrownProxy(MutableLogEvent.java:314)%0D%0A%09at org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter.format(ExtendedThrowablePatternConverter.java:61)%0D%0A%09at org.apache.logging.log4j.core.pattern.PatternFormatter.format(PatternFormatter.java:38)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout$PatternSerializer.toSerializable(PatternLayout.java:294)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.toText(PatternLayout.java:195)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:180)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:57)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.directEncodeEvent(AbstractOutputStreamAppender.java:120)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.tryAppend(AbstractOutputStreamAppender.java:113)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.append(AbstractOutputStreamAppender.java:104)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.tryCallAppender(AppenderControl.java:155)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender0(AppenderControl.java:128)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppenderPreventRecursion(AppenderControl.java:119)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender(AppenderControl.java:84)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.callAppenders(LoggerConfig.java:390)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:375)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:359)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:349)%0D%0A%09at org.apache.logging.log4j.core.config.AwaitCompletionReliabilityStrategy.log(AwaitCompletionReliabilityStrategy.java:63)%0D%0A%09at org.apache.logging.log4j.core.Logger.logMessage(Logger.java:146)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logMessage(AbstractLogger.java:1988)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled(AbstractLogger.java:1960)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.warn(AbstractLogger.java:2526)%0D%0A%09at org.elasticsearch.watcher.FileWatcher$FileObserver.onFileCreated(FileWatcher.java:261)%0D%0A%09at org.elasticsearch.watcher.FileWatcher$FileObserver.init(FileWatcher.java:166)%0D%0A%09at org.elasticsearch.watcher.FileWatcher$FileObserver.createChild(FileWatcher.java:173)%0D%0A%09at org.elasticsearch.watcher.FileWatcher$FileObserver.updateChildren(FileWatcher.java:222)%0D%0A%09at org.elasticsearch.watcher.FileWatcher$FileObserver.checkAndNotify(FileWatcher.java:117)%0D%0A%09at org.elasticsearch.watcher.FileWatcher.doCheckAndNotify(FileWatcher.java:70)%0D%0A%09at org.elasticsearch.watcher.AbstractResourceWatcher.checkAndNotify(AbstractResourceWatcher.java:44)%0D%0A%09at org.elasticsearch.watcher.ResourceWatcherService$ResourceMonitor.run(ResourceWatcherService.java:197)%0D%0A%09at org.elasticsearch.watcher.ResourceWatcherService.notifyNow(ResourceWatcherService.java:166)%0D%0A%09at org.elasticsearch.watcher.ResourceWatcherService.notifyNow(ResourceWatcherService.java:157)%0D%0A%09at org.elasticsearch.script.ScriptServiceTests.createFileScripts(ScriptServiceTests.java:489)%0D%0A%09at org.elasticsearch.script.ScriptServiceTests.testDefaultBehaviourFineGrainedSettings(ScriptServiceTests.java:221)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0D%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0D%0A%09at java.lang.reflect.Method.invoke(Method.java:497)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.random"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "izedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at java.lang.Thread.run(Thread.java:745)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultBehaviourFineGrainedSettings(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1473935827392,
  "executionTime": 86
 }
]

[
 "TEST_STARTED",
 "ID#testValidateScriptSize(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:37:07,499][INFO ][org.elasticsearch.script ] [node_s_0] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidateScriptSize(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1473935827482,
  "executionTime": 141
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultLanguage(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:37:07,633][INFO ][org.elasticsearch.script ] [node_s_0] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultLanguage(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1473935827623,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testCompilationStatsOnCacheHit(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:37:07,698][INFO ][org.elasticsearch.script ] [node_s_0] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompilationStatsOnCacheHit(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1473935827638,
  "executionTime": 64
 }
]

[
 "TEST_STARTED",
 "ID#testIndexedScriptCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:37:07,725][INFO ][org.elasticsearch.script ] [node_s_0] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexedScriptCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1473935827706,
  "executionTime": 89
 }
]

[
 "TEST_STARTED",
 "ID#testCompilationCircuitBreaking(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:37:07,808][INFO ][org.elasticsearch.script ] [node_s_0] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompilationCircuitBreaking(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1473935827795,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testFineGrainedSettings(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:37:07,835][INFO ][org.elasticsearch.script ] [node_s_0] --> setup script service%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:37:07,848][INFO ][org.elasticsearch.script ] [node_s_0] compiling script file [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.script.ScriptServiceTests_9CF13790D965C5A7-001\\tempDir-023\\scripts\\file_script.dtest]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-15 02:37:07,850 TEST-ScriptServiceTests.testFineGrainedSettings-seed#[9CF13790D965C5A7] ERROR An exception occurred processing Appender console java.security.AccessControlException: access denied (\"java.lang.RuntimePermission\" \"accessClassInPackage.sun.reflect\")%0D%0A%09at java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)%0D%0A%09at java.security.AccessController.checkPermission(AccessController.java:884)%0D%0A%09at java.lang.SecurityManager.checkPermission(SecurityManager.java:549)%0D%0A%09at java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1564)%0D%0A%09at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:311)%0D%0A%09at java.lang.ClassLoader.loadClass(ClassLoader.java:357)%0D%0A%09at java.lang.Class.forName0(Native Method)%0D%0A%09at java.lang.Class.forName(Class.java:264)%0D%0A%09at org.apache.logging.log4j.util.LoaderUtil.loadClass(LoaderUtil.java:122)%0D%0A%09at org.apache.logging.log4j.core.util.Loader.loadClass(Loader.java:228)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.loadClass(ThrowableProxy.java:496)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.toExtendedStackTrace(ThrowableProxy.java:617)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:135)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:117)%0D%0A%09at org.apache.logging.log4j.core.impl.MutableLogEvent.getThrownProxy(MutableLogEvent.java:314)%0D%0A%09at org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter.format(ExtendedThrowablePatternConverter.java:61)%0D%0A%09at org.apache.logging.log4j.core.pattern.PatternFormatter.format(PatternFormatter.java:38)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout$PatternSerializer.toSerializable(PatternLayout.java:294)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.toText(PatternLayout.java:195)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:180)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:57)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.directEncodeEvent(AbstractOutputStreamAppender.java:120)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.tryAppend(AbstractOutputStreamAppender.java:113)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.append(AbstractOutputStreamAppender.java:104)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.tryCallAppender(AppenderControl.java:155)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender0(AppenderControl.java:128)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppenderPreventRecursion(AppenderControl.java:119)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender(AppenderControl.java:84)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.callAppenders(LoggerConfig.java:390)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:375)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:359)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:349)%0D%0A%09at org.apache.logging.log4j.core.config.AwaitCompletionReliabilityStrategy.log(AwaitCompletionReliabilityStrategy.java:63)%0D%0A%09at org.apache.logging.log4j.core.Logger.logMessage(Logger.java:146)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logMessage(AbstractLogger.java:1988)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled(AbstractLogger.java:1960)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.warn(AbstractLogger.java:2526)%0D%0A%09at org.elasticsearch.watcher.FileWatcher$FileObserver.onFileCreated(FileWatcher.java:261)%0D%0A%09at org.elasticsearch.watcher.FileWatcher$FileObserver.init(FileWatcher.java:166)%0D%0A%09at org.elasticsearch.watcher.FileWatcher$FileObserver.createChild(FileWatcher.java:173)%0D%0A%09at org.elasticsearch.watcher.FileWatcher$FileObserver.updateChildren(FileWatcher.java:222)%0D%0A%09at org.elasticsearch.watcher.FileWatcher$FileObserver.checkAndNotify(FileWatcher.java:117)%0D%0A%09at org.elasticsearch.watcher.FileWatcher.doCheckAndNotify(FileWatcher.java:70)%0D%0A%09at org.elasticsearch.watcher.AbstractResourceWatcher.checkAndNotify(AbstractResourceWatcher.java:44)%0D%0A%09at org.elasticsearch.watcher.ResourceWatcherService$ResourceMonitor.run(ResourceWatcherService.java:197)%0D%0A%09at org.elasticsearch.watcher.ResourceWatcherService.notifyNow(ResourceWatcherService.java:166)%0D%0A%09at org.elasticsearch.watcher.ResourceWatcherService.notifyNow(ResourceWatcherService.java:157)%0D%0A%09at org.elasticsearch.script.ScriptServiceTests.createFileScripts(ScriptServiceTests.java:489)%0D%0A%09at org.elasticsearch.script.ScriptServiceTests.testFineGrainedSettings(ScriptServiceTests.java:292)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0D%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0D%0A%09at java.lang.reflect.Method.invoke(Method.java:497)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$St"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "atementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at java.lang.Thread.run(Thread.java:745)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-15 02:37:07,866 TEST-ScriptServiceTests.testFineGrainedSettings-seed#[9CF13790D965C5A7] ERROR An exception occurred processing Appender console java.security.AccessControlException: access denied (\"java.lang.RuntimePermission\" \"accessClassInPackage.sun.reflect\")%0D%0A%09at java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)%0D%0A%09at java.security.AccessController.checkPermission(AccessController.java:884)%0D%0A%09at java.lang.SecurityManager.checkPermission(SecurityManager.java:549)%0D%0A%09at java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1564)%0D%0A%09at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:311)%0D%0A%09at java.lang.ClassLoader.loadClass(ClassLoader.java:357)%0D%0A%09at java.lang.Class.forName0(Native Method)%0D%0A%09at java.lang.Class.forName(Class.java:264)%0D%0A%09at org.apache.logging.log4j.util.LoaderUtil.loadClass(LoaderUtil.java:122)%0D%0A%09at org.apache.logging.log4j.core.util.Loader.loadClass(Loader.java:228)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.loadClass(ThrowableProxy.java:496)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.toExtendedStackTrace(ThrowableProxy.java:617)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:135)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:117)%0D%0A%09at org.apache.logging.log4j.core.impl.MutableLogEvent.getThrownProxy(MutableLogEvent.java:314)%0D%0A%09at org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter.format(ExtendedThrowablePatternConverter.java:61)%0D%0A%09at org.apache.logging.log4j.core.pattern.PatternFormatter.format(PatternFormatter.java:38)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout$PatternSerializer.toSerializable(PatternLayout.java:294)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.toText(PatternLayout.java:195)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:180)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:57)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.directEncodeEvent(AbstractOutputStreamAppender.java:120)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.tryAppend(AbstractOutputStreamAppender.java:113)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.append(AbstractOutputStreamAppender.java:104)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.tryCallAppender(AppenderControl.java:155)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender0(AppenderControl.java:128)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppenderPreventRecursion(AppenderControl.java:119)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender(AppenderControl.java:84)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.callAppenders(LoggerConfig.java:390)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:375)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:359)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:349)%0D%0A%09at org.apache.logging.log4j.core.config.AwaitCompletionReliabilityStrategy.log(AwaitCompletionReliabilityStrategy.java:63)%0D%0A%09at org.apache.logging.log4j.core.Logger.logMessage(Logger.java:146)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logMessage(AbstractLogger.java:1988)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled(AbstractLogger.java:1960)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.warn(AbstractLogger.java:2526)%0D%0A%09at org.elasticsearch.watcher.FileWatcher$FileObserver.onFileCreated(FileWatcher.java:261)%0D%0A%09at org.elasticsearch.watcher.FileWatcher$FileObserver.init(FileWatcher.java:166)%0D%0A%09at org.elasticsearch.watcher.FileWatcher$FileObserver.createChild(FileWatcher.java:173)%0D%0A%09at org.elasticsearch.watcher.FileWatcher$FileObserver.updateChildren(FileWatcher.java:222)%0D%0A%09at org.elasticsearch.watcher.FileWatcher$FileObserver.checkAndNotify(FileWatcher.java:117)%0D%0A%09at org.elasticsearch.watcher.FileWatcher.doCheckAndNotify(FileWatcher.java:70)%0D%0A%09at org.elasticsearch.watcher.AbstractResourceWatcher.checkAndNotify(AbstractResourceWatcher.java:44)%0D%0A%09at org.elasticsearch.watcher.ResourceWatcherService$ResourceMonitor.run(ResourceWatcherService.java:197)%0D%0A%09at org.elasticsearch.watcher.ResourceWatcherService.notifyNow(ResourceWatcherService.java:166)%0D%0A%09at org.elasticsearch.watcher.ResourceWatcherService.notifyNow(ResourceWatcherService.java:157)%0D%0A%09at org.elasticsearch.script.ScriptServiceTests.createFileScripts(ScriptServiceTests.java:489)%0D%0A%09at org.elasticsearch.script.ScriptServiceTests.testFineGrainedSettings(ScriptServiceTests.java:292)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0D%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0D%0A%09at java.lang.reflect.Method.invoke(Method.java:497)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$St"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "atementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at java.lang.Thread.run(Thread.java:745)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFineGrainedSettings(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1473935827819,
  "executionTime": 75
 }
]

[
 "TEST_STARTED",
 "ID#testCompileCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:37:07,945][INFO ][org.elasticsearch.script ] [node_s_0] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompileCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1473935827894,
  "executionTime": 58
 }
]

[
 "TEST_STARTED",
 "ID#testExecutableCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:37:07,969][INFO ][org.elasticsearch.script ] [node_s_0] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExecutableCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1473935827953,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testSearchCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:37:07,993][INFO ][org.elasticsearch.script ] [node_s_0] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearchCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1473935827974,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testDeleteScript(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:37:08,069][INFO ][org.elasticsearch.script ] [node_s_0] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeleteScript(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1473935828001,
  "executionTime": 70
 }
]

[
 "TEST_STARTED",
 "ID#testInlineScriptCompiledOnceCache(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:37:08,128][INFO ][org.elasticsearch.script ] [node_s_0] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInlineScriptCompiledOnceCache(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1473935828072,
  "executionTime": 61
 }
]

[
 "TEST_STARTED",
 "ID#testCompileNonRegisteredContext(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:37:08,149][INFO ][org.elasticsearch.script ] [node_s_0] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompileNonRegisteredContext(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1473935828133,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleCompilationsCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:37:08,168][INFO ][org.elasticsearch.script ] [node_s_0] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleCompilationsCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1473935828153,
  "executionTime": 162
 }
]

[
 "TEST_STARTED",
 "ID#testScriptsWithoutExtensions(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:37:08,338][INFO ][org.elasticsearch.script ] [node_s_0] --> setup script service%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:37:08,394][INFO ][org.elasticsearch.script ] [node_s_0] compiling script file [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.script.ScriptServiceTests_9CF13790D965C5A7-001\\tempDir-039\\scripts\\test_script.test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:37:08,396][INFO ][org.elasticsearch.script ] [node_s_0] removing script file [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.script.ScriptServiceTests_9CF13790D965C5A7-001\\tempDir-039\\scripts\\test_script.test]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScriptsWithoutExtensions(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1473935828315,
  "executionTime": 81
 }
]

[
 "TEST_STARTED",
 "ID#testFileScriptCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:37:08,440][INFO ][org.elasticsearch.script ] [node_s_0] --> setup script service%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:37:08,449][INFO ][org.elasticsearch.script ] [node_s_0] compiling script file [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.script.ScriptServiceTests_9CF13790D965C5A7-001\\tempDir-041\\scripts\\file_script.test]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFileScriptCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1473935828397,
  "executionTime": 57
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.script.ScriptServiceTests",
  "startTimestamp": 1473935827149,
  "executionTime": 1453
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests",
   "children": [
    {
     "id": "ID#testBalanceIncrementallyStartNodes(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)",
     "displayName": "testBalanceIncrementallyStartNodes(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)",
     "methodName": "testBalanceIncrementallyStartNodes",
     "className": "org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests",
     "children": []
    },
    {
     "id": "ID#testBalanceAllNodesStartedAddIndex(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)",
     "displayName": "testBalanceAllNodesStartedAddIndex(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)",
     "methodName": "testBalanceAllNodesStartedAddIndex",
     "className": "org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests",
     "children": []
    },
    {
     "id": "ID#testBalanceAllNodesStarted(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)",
     "displayName": "testBalanceAllNodesStarted(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)",
     "methodName": "testBalanceAllNodesStarted",
     "className": "org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935828679
 }
]

[
 "TEST_STARTED",
 "ID#testBalanceIncrementallyStartNodes(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:37:08,997][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:37:09,018][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding one node and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:37:09,077][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Add another node and perform rerouting, nothing will happen since primary not started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:37:09,082][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the primary shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:37:09,085][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, nothing should change%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:37:09,086][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the backup shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:37:09,088][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][1], [test][2], [test][0], [test1][1], [test1][2], [test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:37:09,088][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Add another node and perform rerouting, nothing will happen since primary not started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:37:09,091][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, nothing should change%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:37:09,093][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the backup shard%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBalanceIncrementallyStartNodes(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)",
  "startTimestamp": 1473935828733,
  "executionTime": 367
 }
]

[
 "TEST_STARTED",
 "ID#testBalanceAllNodesStartedAddIndex(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:37:09,111][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:37:09,112][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding three node and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:37:09,141][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Another round of rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:37:09,143][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, nothing should change%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:37:09,144][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the more shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:37:09,145][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][2], [test][0], [test][1]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:37:09,145][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Add new index 3 shards 1 replica%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:37:09,149][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, assign%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:37:09,150][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, start the primaries%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:37:09,152][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, start the replicas%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:37:09,153][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][2], [test1][0], [test1][1]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:37:09,154][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] kill one node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:37:09,156][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:37:09,157][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start Recovering shards round 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:37:09,177][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start Recovering shards round 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:37:09,188][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][2], [test][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBalanceAllNodesStartedAddIndex(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)",
  "startTimestamp": 1473935829100,
  "executionTime": 89
 }
]

[
 "TEST_STARTED",
 "ID#testBalanceAllNodesStarted(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:37:09,229][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:37:09,231][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding three node and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:37:09,236][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Another round of rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:37:09,239][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, nothing should change%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:37:09,239][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the more shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:37:09,241][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][2], [test1][2], [test][0], [test1][0], [test][1], [test1][1]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBalanceAllNodesStarted(org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests)",
  "startTimestamp": 1473935829190,
  "executionTime": 51
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.RoutingNodesIntegrityTests",
  "startTimestamp": 1473935828679,
  "executionTime": 565
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.TTLFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
   "children": [
    {
     "id": "ID#testNoConflictIfNothingSetAndEnabledLater(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testNoConflictIfNothingSetAndEnabledLater(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testNoConflictIfNothingSetAndEnabledLater",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaultValues(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testDefaultValues(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testDefaultValues",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNoConflictIfNothingSetAndDisabledLater(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testNoConflictIfNothingSetAndDisabledLater(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testNoConflictIfNothingSetAndDisabledLater",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testSimpleDisabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testSimpleDisabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testSimpleDisabled",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testThatEnablingTTLAfterFirstDisablingWorks(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testThatEnablingTTLAfterFirstDisablingWorks(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testThatEnablingTTLAfterFirstDisablingWorks",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testIncludeInObjectNotAllowed",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testEnabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testEnabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testEnabled",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testRejectedOn5x(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testRejectedOn5x(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testRejectedOn5x",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testThatDisablingTTLReportsConflict(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testThatDisablingTTLReportsConflict(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testThatDisablingTTLReportsConflict",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testThatEnablingTTLFieldOnMergeWorks(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testThatEnablingTTLFieldOnMergeWorks(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testThatEnablingTTLFieldOnMergeWorks",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testMergeWithOnlyDefaultSet(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testMergeWithOnlyDefaultSet(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testMergeWithOnlyDefaultSet",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testThatDisablingTTLReportsConflictOnCluster(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testThatDisablingTTLReportsConflictOnCluster(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testThatDisablingTTLReportsConflictOnCluster",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testMergeWithOnlyDefaultSetTtlDisabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testMergeWithOnlyDefaultSetTtlDisabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testMergeWithOnlyDefaultSetTtlDisabled",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testThatChangingTTLKeepsMapperEnabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testThatChangingTTLKeepsMapperEnabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testThatChangingTTLKeepsMapperEnabled",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935829310
 }
]

[
 "TEST_STARTED",
 "ID#testNoConflictIfNothingSetAndEnabledLater(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:09,371][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:09,429][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:09,429][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:09,435][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[15428], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:09,439][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:09,439][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:09,691][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:09,692][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:09,692][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[5]}, bound_addresses {local[5]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:09,696][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{BTDeuIhDRQmFWYpACvT0TA}{d27WpIozRIyB8V-EwJWAhw}{local}{local[5]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:09,698][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:09,718][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:09,905][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [testindex] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:10,069][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[testindex][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:10,092][INFO ][org.elasticsearch.index.mapper] [node_s_0] [testindex] [TTLFieldMapperTests#testNoConflictIfNothingSetAndEnabledLater]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoConflictIfNothingSetAndEnabledLater(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1473935829357,
  "executionTime": 779
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultValues(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:10,151][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:10,295][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:10,316][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TTLFieldMapperTests#testDefaultValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultValues(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1473935830136,
  "executionTime": 256
 }
]

[
 "TEST_STARTED",
 "ID#testNoConflictIfNothingSetAndDisabledLater(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:10,405][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [testindex] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:10,504][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[testindex][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:10,527][INFO ][org.elasticsearch.index.mapper] [node_s_0] [testindex] [TTLFieldMapperTests#testNoConflictIfNothingSetAndDisabledLater]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoConflictIfNothingSetAndDisabledLater(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1473935830392,
  "executionTime": 186
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleDisabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:10,587][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:10,659][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:10,680][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TTLFieldMapperTests#testSimpleDisabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleDisabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1473935830578,
  "executionTime": 161
 }
]

[
 "TEST_STARTED",
 "ID#testThatEnablingTTLAfterFirstDisablingWorks(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:10,756][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [testindex] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:10,970][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[testindex][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:11,144][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [testindex/zQa32MxwQl-BteIWcuk8pg] update_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:11,166][INFO ][org.elasticsearch.index.mapper] [node_s_0] [testindex] [TTLFieldMapperTests#testThatEnablingTTLAfterFirstDisablingWorks]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatEnablingTTLAfterFirstDisablingWorks(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1473935830740,
  "executionTime": 502
 }
]

[
 "TEST_STARTED",
 "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:11,253][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:11,443][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:11,508][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TTLFieldMapperTests#testIncludeInObjectNotAllowed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1473935831242,
  "executionTime": 382
 }
]

[
 "TEST_STARTED",
 "ID#testEnabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:11,661][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:11,829][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:12,111][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TTLFieldMapperTests#testEnabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1473935831625,
  "executionTime": 605
 }
]

[
 "TEST_STARTED",
 "ID#testRejectedOn5x(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:12,239][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:12,325][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:12,343][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TTLFieldMapperTests#testRejectedOn5x]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRejectedOn5x(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1473935832230,
  "executionTime": 157
 }
]

[
 "TEST_STARTED",
 "ID#testThatDisablingTTLReportsConflict(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:12,398][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:12,526][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:12,556][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TTLFieldMapperTests#testThatDisablingTTLReportsConflict]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatDisablingTTLReportsConflict(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1473935832387,
  "executionTime": 228
 }
]

[
 "TEST_STARTED",
 "ID#testThatEnablingTTLFieldOnMergeWorks(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:12,623][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:12,705][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:12,726][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TTLFieldMapperTests#testThatEnablingTTLFieldOnMergeWorks]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatEnablingTTLFieldOnMergeWorks(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1473935832615,
  "executionTime": 186
 }
]

[
 "TEST_STARTED",
 "ID#testMergeWithOnlyDefaultSet(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:12,812][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [testindex] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:12,952][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[testindex][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:12,987][INFO ][org.elasticsearch.index.mapper] [node_s_0] [testindex] [TTLFieldMapperTests#testMergeWithOnlyDefaultSet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeWithOnlyDefaultSet(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1473935832801,
  "executionTime": 327
 }
]

[
 "TEST_STARTED",
 "ID#testThatDisablingTTLReportsConflictOnCluster(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:13,140][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [testindex] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:13,244][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[testindex][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:13,271][INFO ][org.elasticsearch.index.mapper] [node_s_0] [testindex] [TTLFieldMapperTests#testThatDisablingTTLReportsConflictOnCluster]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatDisablingTTLReportsConflictOnCluster(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1473935833128,
  "executionTime": 217
 }
]

[
 "TEST_STARTED",
 "ID#testMergeWithOnlyDefaultSetTtlDisabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:13,357][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [testindex] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:13,454][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[testindex][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:13,479][INFO ][org.elasticsearch.index.mapper] [node_s_0] [testindex] [TTLFieldMapperTests#testMergeWithOnlyDefaultSetTtlDisabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeWithOnlyDefaultSetTtlDisabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1473935833345,
  "executionTime": 173
 }
]

[
 "TEST_STARTED",
 "ID#testThatChangingTTLKeepsMapperEnabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:13,527][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:13,589][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:13,619][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TTLFieldMapperTests#testThatChangingTTLKeepsMapperEnabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatChangingTTLKeepsMapperEnabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1473935833519,
  "executionTime": 154
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:13,674][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:13,675][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:13,675][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:13,678][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.TTLFieldMapperTests",
  "startTimestamp": 1473935829310,
  "executionTime": 4392
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.BytesRefHashTests",
   "displayName": "org.elasticsearch.common.util.BytesRefHashTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.BytesRefHashTests",
   "children": [
    {
     "id": "ID#testAdd(org.elasticsearch.common.util.BytesRefHashTests)",
     "displayName": "testAdd(org.elasticsearch.common.util.BytesRefHashTests)",
     "methodName": "testAdd",
     "className": "org.elasticsearch.common.util.BytesRefHashTests",
     "children": []
    },
    {
     "id": "ID#testSize(org.elasticsearch.common.util.BytesRefHashTests)",
     "displayName": "testSize(org.elasticsearch.common.util.BytesRefHashTests)",
     "methodName": "testSize",
     "className": "org.elasticsearch.common.util.BytesRefHashTests",
     "children": []
    },
    {
     "id": "ID#testFind(org.elasticsearch.common.util.BytesRefHashTests)",
     "displayName": "testFind(org.elasticsearch.common.util.BytesRefHashTests)",
     "methodName": "testFind",
     "className": "org.elasticsearch.common.util.BytesRefHashTests",
     "children": []
    },
    {
     "id": "ID#testGet(org.elasticsearch.common.util.BytesRefHashTests)",
     "displayName": "testGet(org.elasticsearch.common.util.BytesRefHashTests)",
     "methodName": "testGet",
     "className": "org.elasticsearch.common.util.BytesRefHashTests",
     "children": []
    },
    {
     "id": "ID#testDuell(org.elasticsearch.common.util.BytesRefHashTests)",
     "displayName": "testDuell(org.elasticsearch.common.util.BytesRefHashTests)",
     "methodName": "testDuell",
     "className": "org.elasticsearch.common.util.BytesRefHashTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935833940
 }
]

[
 "TEST_STARTED",
 "ID#testAdd(org.elasticsearch.common.util.BytesRefHashTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:13,982][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:14,004][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:14,005][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:14,008][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[15428], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:14,011][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:14,011][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:14,430][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:14,431][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:14,431][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[6]}, bound_addresses {local[6]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:14,436][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{MmI3typ9QamrwBvBOytUxg}{rOKNfBaNT-GZpsOHU7GH_Q}{local}{local[6]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:14,437][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:14,455][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:15,878][INFO ][org.elasticsearch.common.util] [node_s_0] [BytesRefHashTests#testAdd]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAdd(org.elasticsearch.common.util.BytesRefHashTests)",
  "startTimestamp": 1473935833973,
  "executionTime": 1906
 }
]

[
 "TEST_STARTED",
 "ID#testSize(org.elasticsearch.common.util.BytesRefHashTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:16,919][INFO ][org.elasticsearch.common.util] [node_s_0] [BytesRefHashTests#testSize]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSize(org.elasticsearch.common.util.BytesRefHashTests)",
  "startTimestamp": 1473935835879,
  "executionTime": 1041
 }
]

[
 "TEST_STARTED",
 "ID#testFind(org.elasticsearch.common.util.BytesRefHashTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:17,598][INFO ][org.elasticsearch.common.util] [node_s_0] [BytesRefHashTests#testFind]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFind(org.elasticsearch.common.util.BytesRefHashTests)",
  "startTimestamp": 1473935836920,
  "executionTime": 680
 }
]

[
 "TEST_STARTED",
 "ID#testGet(org.elasticsearch.common.util.BytesRefHashTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:18,011][INFO ][org.elasticsearch.common.util] [node_s_0] [BytesRefHashTests#testGet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGet(org.elasticsearch.common.util.BytesRefHashTests)",
  "startTimestamp": 1473935837600,
  "executionTime": 412
 }
]

[
 "TEST_STARTED",
 "ID#testDuell(org.elasticsearch.common.util.BytesRefHashTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:21,182][INFO ][org.elasticsearch.common.util] [node_s_0] [BytesRefHashTests#testDuell]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuell(org.elasticsearch.common.util.BytesRefHashTests)",
  "startTimestamp": 1473935838013,
  "executionTime": 3179
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:21,193][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:21,194][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:21,194][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:21,218][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.BytesRefHashTests",
  "startTimestamp": 1473935833940,
  "executionTime": 7288
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935841738
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:37:22,830][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{0mz-JqLUQhKMVKojrwqK7A}{local}{local[19]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests)",
  "startTimestamp": 1473935842871,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:37:22,890][INFO ][org.elasticsearch.search.aggregations.pipeline] Content string: {%0A  \"jBPgTOGAZdjDTwVkN\" : {%0A    \"cumulative_sum\" : {%0A      \"buckets_path\" : [%0A        \"rAGF\"%0A      ],%0A      \"format\" : \"lEmRiqlkxK\"%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:37:22,892][INFO ][org.elasticsearch.search.aggregations.pipeline] Content string: {%0A  \"jBPgTOGAZdjDTwVkN\" : {%0A    \"cumulative_sum\" : {%0A      \"buckets_path\" : [%0A        \"rAGF\"%0A      ],%0A      \"format\" : \"lEmRiqlkxK\"%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests)",
  "startTimestamp": 1473935842886,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests)",
  "startTimestamp": 1473935842893,
  "executionTime": 46
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests",
  "startTimestamp": 1473935841738,
  "executionTime": 1205
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
   "displayName": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
   "methodName": null,
   "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
   "children": [
    {
     "id": "ID#testIncomingClusterStateValidation(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testIncomingClusterStateValidation(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testIncomingClusterStateValidation",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testSimultaneousClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testSimultaneousClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testSimultaneousClusterStatePublishing",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testSimpleClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testSimpleClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testSimpleClusterStatePublishing",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testOutOfOrderCommitMessages(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testOutOfOrderCommitMessages(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testOutOfOrderCommitMessages",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testDisablingDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testDisablingDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testDisablingDiffPublishing",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testSerializationFailureDuringDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testSerializationFailureDuringDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testSerializationFailureDuringDiffPublishing",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testUnexpectedDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testUnexpectedDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testUnexpectedDiffPublishing",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testTimeoutOrCommit(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testTimeoutOrCommit(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testTimeoutOrCommit",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testPublishingWithSendingErrors(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testPublishingWithSendingErrors(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testPublishingWithSendingErrors",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testFailToPublishWithLessThanMinMasterNodes(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testFailToPublishWithLessThanMinMasterNodes(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testFailToPublishWithLessThanMinMasterNodes",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935843102
 }
]

[
 "TEST_STARTED",
 "ID#testIncomingClusterStateValidation(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:23,190][INFO ][org.elasticsearch.test.transport] publish_address {local[7]}, bound_addresses {local[7]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:23,544][INFO ][org.elasticsearch.discovery.zen.publish] --> testing acceptances of any master when having no master%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:23,544][INFO ][org.elasticsearch.discovery.zen.publish] --> testing rejection of another master%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:23,545][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state from a different master than the current one, rejecting (received null, current null)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:23,545][INFO ][org.elasticsearch.discovery.zen.publish] --> test state from the current master is accepted%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:23,545][INFO ][org.elasticsearch.discovery.zen.publish] --> testing rejection of another cluster name%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:23,545][WARN ][org.elasticsearch.discovery.zen.publish] received cluster state from [null] which is also master but with a different cluster name [Cluster [ryQezZcVeO]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:23,546][INFO ][org.elasticsearch.discovery.zen.publish] --> testing rejection of a cluster state with wrong local node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:23,547][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state from [null] and not part of the cluster, should not happen%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:23,552][INFO ][org.elasticsearch.test.transport] publish_address {local[8]}, bound_addresses {local[8]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:23,557][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state from [null] and not part of the cluster, should not happen%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:23,557][INFO ][org.elasticsearch.discovery.zen.publish] --> testing acceptance of an old cluster state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:23,558][DEBUG][org.elasticsearch.discovery.zen.publish] received a cluster state that is not newer than the current one, ignoring (received 0, current 1)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:23,558][WARN ][org.elasticsearch.discovery.zen.publish] rejecting cluster state version [0] uuid [qXDM0Jg3RpuSErRB2UjiBQ] received from [master]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncomingClusterStateValidation(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1473935843131,
  "executionTime": 435
 }
]

[
 "TEST_STARTED",
 "ID#testSimultaneousClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:23,617][INFO ][org.elasticsearch.test.transport] publish_address {local[9]}, bound_addresses {local[9]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:23,632][INFO ][org.elasticsearch.test.transport] publish_address {local[10]}, bound_addresses {local[10]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:23,640][INFO ][org.elasticsearch.test.transport] publish_address {local[11]}, bound_addresses {local[11]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:23,650][INFO ][org.elasticsearch.test.transport] publish_address {local[12]}, bound_addresses {local[12]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:23,667][INFO ][org.elasticsearch.test.transport] publish_address {local[13]}, bound_addresses {local[13]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:23,673][INFO ][org.elasticsearch.test.transport] publish_address {local[14]}, bound_addresses {local[14]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:23,688][INFO ][org.elasticsearch.test.transport] publish_address {local[15]}, bound_addresses {local[15]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:23,694][INFO ][org.elasticsearch.test.transport] publish_address {local[16]}, bound_addresses {local[16]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:23,698][INFO ][org.elasticsearch.test.transport] publish_address {local[17]}, bound_addresses {local[17]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:23,910][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [1] with size [577]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:23,913][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [1] with size [577]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:23,914][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [1] with size [577]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:23,916][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [1] with size [577]%0D%0A[2016-09-15T19:37:23,916][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [1] with size [577]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:23,918][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [1] with size [577]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:23,921][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [1] with size [577]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:23,922][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [1] with size [577]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:23,953][TRACE][org.elasticsearch.discovery.zen.publish] master node {KCsoSF8GQfKClQNAm4gtaw}{HGIotp-0S46LdPFMbgoW1Q}{local}{local[13]} acked cluster state version [1]. processing ... (current pending [8], needed [7])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:23,954][TRACE][org.elasticsearch.discovery.zen.publish] master node {Y-oSYvTNRXiC5QtW3z7kSw}{Rcer7-VQTkKD7E7Xr61AEg}{local}{local[11]} acked cluster state version [1]. processing ... (current pending [7], needed [6])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:23,954][TRACE][org.elasticsearch.discovery.zen.publish] master node {_jivl7eASUG1YA2TZ9Vyqw}{rHalgRoCT8qh58jEuWMkCg}{local}{local[14]} acked cluster state version [1]. processing ... (current pending [6], needed [5])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:23,957][TRACE][org.elasticsearch.discovery.zen.publish] master node {YEkCTbHrQ4ybBtx-CqBF9Q}{jEh7_NmeTiufnLusLtaPjA}{local}{local[15]} acked cluster state version [1]. processing ... (current pending [5], needed [4])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:23,957][TRACE][org.elasticsearch.discovery.zen.publish] master node {X8iM8k8YRYCbEzPsOgnD1w}{yGRyW5pfSByosoir2xBVrA}{local}{local[10]} acked cluster state version [1]. processing ... (current pending [4], needed [3])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:23,964][TRACE][org.elasticsearch.discovery.zen.publish] master node {0m3SZSuOSh-_mmK_VsBtTA}{IKKf0L5nTIOk-yHoNvVzdQ}{local}{local[17]} acked cluster state version [1]. processing ... (current pending [3], needed [2])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:23,965][TRACE][org.elasticsearch.discovery.zen.publish] master node {dyVgKvKgRdKIH5ml0qe37Q}{YpAAUuzuR1GzE6mnr2c2Pw}{local}{local[16]} acked cluster state version [1]. processing ... (current pending [2], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:23,966][TRACE][org.elasticsearch.discovery.zen.publish] committing version [1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:23,966][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [acPPXORFR-yG-HDiuOdi_g], version [1]) to [{KCsoSF8GQfKClQNAm4gtaw}{HGIotp-0S46LdPFMbgoW1Q}{local}{local[13]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,014][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [acPPXORFR-yG-HDiuOdi_g], version [1]) to [{Y-oSYvTNRXiC5QtW3z7kSw}{Rcer7-VQTkKD7E7Xr61AEg}{local}{local[11]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,017][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [acPPXORFR-yG-HDiuOdi_g], version [1]) to [{_jivl7eASUG1YA2TZ9Vyqw}{rHalgRoCT8qh58jEuWMkCg}{local}{local[14]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,018][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [acPPXORFR-yG-HDiuOdi_g], version [1]) to [{YEkCTbHrQ4ybBtx-CqBF9Q}{jEh7_NmeTiufnLusLtaPjA}{local}{local[15]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,018][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [acPPXORFR-yG-HDiuOdi_g], version [1]) to [{X8iM8k8YRYCbEzPsOgnD1w}{yGRyW5pfSByosoir2xBVrA}{local}{local[10]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,019][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [acPPXORFR-yG-HDiuOdi_g], version [1]) to [{0m3SZSuOSh-_mmK_VsBtTA}{IKKf0L5nTIOk-yHoNvVzdQ}{local}{local[17]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,019][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [acPPXORFR-yG-HDiuOdi_g], version [1]) to [{dyVgKvKgRdKIH5ml0qe37Q}{YpAAUuzuR1GzE6mnr2c2Pw}{local}{local[16]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,019][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [acPPXORFR-yG-HDiuOdi_g], version [1]) to [{N0AQrviUQ6mb6TQydEw8cw}{yJ6mcuyMQiO_XUJ924t9Qg}{local}{local[12]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,036][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [1], uuid [acPPXORFR-yG-HDiuOdi_g]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,036][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [1], uuid [acPPXORFR-yG-HDiuOdi_g]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,037][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [1], uuid [acPPXORFR-yG-HDiuOdi_g]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,036][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [1], uuid [acPPXORFR-yG-HDiuOdi_g]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,037][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [1], uuid [acPPXORFR-yG-HDiuOdi_g]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,037][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [1], uuid [acPPXORFR-yG-HDiuOdi_g]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,038][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [1], uuid [acPPXORFR-yG-HDiuOdi_g]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,038][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [1], uuid [acPPXORFR-yG-HDiuOdi_g]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,765][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [2] with uuid [M5VrhY-US0meyCf30E2thg], diff size [179]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,766][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [2] with uuid [M5VrhY-US0meyCf30E2thg], diff size [179]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,775][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [M5VrhY-US0meyCf30E2thg], version [2]) to [{0m3SZSuOSh-_mmK_VsBtTA}{IKKf0L5nTIOk-yHoNvVzdQ}{local}{local[17]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,776][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [2] with uuid [M5VrhY-US0meyCf30E2thg], diff size [179]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,779][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [2] with uuid [M5VrhY-US0meyCf30E2thg], diff size [179]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,782][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [M5VrhY-US0meyCf30E2thg], version [2]) to [{Y-oSYvTNRXiC5QtW3z7kSw}{Rcer7-VQTkKD7E7Xr61AEg}{local}{local[11]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,783][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [2] with uuid [M5VrhY-US0meyCf30E2thg], diff size [179]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,786][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [M5VrhY-US0meyCf30E2thg], version [2]) to [{YEkCTbHrQ4ybBtx-CqBF9Q}{jEh7_NmeTiufnLusLtaPjA}{local}{local[15]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,793][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [2] with uuid [M5VrhY-US0meyCf30E2thg], diff size [179]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,794][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [M5VrhY-US0meyCf30E2thg], version [2]) to [{KCsoSF8GQfKClQNAm4gtaw}{HGIotp-0S46LdPFMbgoW1Q}{local}{local[13]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,797][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [2] with uuid [M5VrhY-US0meyCf30E2thg], diff size [179]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,799][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [M5VrhY-US0meyCf30E2thg], version [2]) to [{dyVgKvKgRdKIH5ml0qe37Q}{YpAAUuzuR1GzE6mnr2c2Pw}{local}{local[16]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,799][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [M5VrhY-US0meyCf30E2thg], version [2]) to [{_jivl7eASUG1YA2TZ9Vyqw}{rHalgRoCT8qh58jEuWMkCg}{local}{local[14]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,801][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [M5VrhY-US0meyCf30E2thg], version [2]) to [{X8iM8k8YRYCbEzPsOgnD1w}{yGRyW5pfSByosoir2xBVrA}{local}{local[10]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,802][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [2] with uuid [M5VrhY-US0meyCf30E2thg], diff size [179]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,803][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [M5VrhY-US0meyCf30E2thg], version [2]) to [{N0AQrviUQ6mb6TQydEw8cw}{yJ6mcuyMQiO_XUJ924t9Qg}{local}{local[12]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,821][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [2], uuid [M5VrhY-US0meyCf30E2thg]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,824][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [2], uuid [M5VrhY-US0meyCf30E2thg]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,838][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [2], uuid [M5VrhY-US0meyCf30E2thg]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,853][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [2], uuid [M5VrhY-US0meyCf30E2thg]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,860][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [2], uuid [M5VrhY-US0meyCf30E2thg]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,949][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [2], uuid [M5VrhY-US0meyCf30E2thg]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,958][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [2], uuid [M5VrhY-US0meyCf30E2thg]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,963][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [2], uuid [M5VrhY-US0meyCf30E2thg]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,982][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [3] with uuid [EI-CHOH8TrayX7pE4H7RoA], diff size [183]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,983][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [3] with uuid [EI-CHOH8TrayX7pE4H7RoA], diff size [183]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,983][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [3] with uuid [EI-CHOH8TrayX7pE4H7RoA], diff size [183]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,983][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [3] with uuid [EI-CHOH8TrayX7pE4H7RoA], diff size [183]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,984][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [3] with uuid [EI-CHOH8TrayX7pE4H7RoA], diff size [183]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,985][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [3] with uuid [EI-CHOH8TrayX7pE4H7RoA], diff size [183]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,985][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [3] with uuid [EI-CHOH8TrayX7pE4H7RoA], diff size [183]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,986][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [3] with uuid [EI-CHOH8TrayX7pE4H7RoA], diff size [183]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,988][TRACE][org.elasticsearch.discovery.zen.publish] master node {N0AQrviUQ6mb6TQydEw8cw}{yJ6mcuyMQiO_XUJ924t9Qg}{local}{local[12]} acked cluster state version [3]. processing ... (current pending [8], needed [6])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,988][TRACE][org.elasticsearch.discovery.zen.publish] master node {X8iM8k8YRYCbEzPsOgnD1w}{yGRyW5pfSByosoir2xBVrA}{local}{local[10]} acked cluster state version [3]. processing ... (current pending [7], needed [5])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,988][TRACE][org.elasticsearch.discovery.zen.publish] master node {dyVgKvKgRdKIH5ml0qe37Q}{YpAAUuzuR1GzE6mnr2c2Pw}{local}{local[16]} acked cluster state version [3]. processing ... (current pending [6], needed [4])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,988][TRACE][org.elasticsearch.discovery.zen.publish] master node {KCsoSF8GQfKClQNAm4gtaw}{HGIotp-0S46LdPFMbgoW1Q}{local}{local[13]} acked cluster state version [3]. processing ... (current pending [5], needed [3])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:24,989][TRACE][org.elasticsearch.discovery.zen.publish] master node {YEkCTbHrQ4ybBtx-CqBF9Q}{jEh7_NmeTiufnLusLtaPjA}{local}{local[15]} acked cluster state version [3]. processing ... (current pending [4], needed [2])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,017][TRACE][org.elasticsearch.discovery.zen.publish] master node {0m3SZSuOSh-_mmK_VsBtTA}{IKKf0L5nTIOk-yHoNvVzdQ}{local}{local[17]} acked cluster state version [3]. processing ... (current pending [3], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,017][TRACE][org.elasticsearch.discovery.zen.publish] committing version [3]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,017][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [EI-CHOH8TrayX7pE4H7RoA], version [3]) to [{N0AQrviUQ6mb6TQydEw8cw}{yJ6mcuyMQiO_XUJ924t9Qg}{local}{local[12]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,017][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [EI-CHOH8TrayX7pE4H7RoA], version [3]) to [{X8iM8k8YRYCbEzPsOgnD1w}{yGRyW5pfSByosoir2xBVrA}{local}{local[10]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,017][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [EI-CHOH8TrayX7pE4H7RoA], version [3]) to [{dyVgKvKgRdKIH5ml0qe37Q}{YpAAUuzuR1GzE6mnr2c2Pw}{local}{local[16]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,018][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [EI-CHOH8TrayX7pE4H7RoA], version [3]) to [{KCsoSF8GQfKClQNAm4gtaw}{HGIotp-0S46LdPFMbgoW1Q}{local}{local[13]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,018][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [EI-CHOH8TrayX7pE4H7RoA], version [3]) to [{YEkCTbHrQ4ybBtx-CqBF9Q}{jEh7_NmeTiufnLusLtaPjA}{local}{local[15]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,018][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [EI-CHOH8TrayX7pE4H7RoA], version [3]) to [{0m3SZSuOSh-_mmK_VsBtTA}{IKKf0L5nTIOk-yHoNvVzdQ}{local}{local[17]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,018][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [EI-CHOH8TrayX7pE4H7RoA], version [3]) to [{_jivl7eASUG1YA2TZ9Vyqw}{rHalgRoCT8qh58jEuWMkCg}{local}{local[14]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,023][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [EI-CHOH8TrayX7pE4H7RoA], version [3]) to [{Y-oSYvTNRXiC5QtW3z7kSw}{Rcer7-VQTkKD7E7Xr61AEg}{local}{local[11]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,024][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [3], uuid [EI-CHOH8TrayX7pE4H7RoA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,024][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [3], uuid [EI-CHOH8TrayX7pE4H7RoA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,025][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [3], uuid [EI-CHOH8TrayX7pE4H7RoA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,026][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [3], uuid [EI-CHOH8TrayX7pE4H7RoA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,026][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [3], uuid [EI-CHOH8TrayX7pE4H7RoA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,026][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [3], uuid [EI-CHOH8TrayX7pE4H7RoA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,026][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [3], uuid [EI-CHOH8TrayX7pE4H7RoA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,026][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [3], uuid [EI-CHOH8TrayX7pE4H7RoA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,048][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [4] with uuid [K_Vkpz_4RMOSNvmue8Q9HQ], diff size [183]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,049][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [4] with uuid [K_Vkpz_4RMOSNvmue8Q9HQ], diff size [183]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,049][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [4] with uuid [K_Vkpz_4RMOSNvmue8Q9HQ], diff size [183]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,049][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [4] with uuid [K_Vkpz_4RMOSNvmue8Q9HQ], diff size [183]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,050][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [4] with uuid [K_Vkpz_4RMOSNvmue8Q9HQ], diff size [183]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,050][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [4] with uuid [K_Vkpz_4RMOSNvmue8Q9HQ], diff size [183]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,050][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [4] with uuid [K_Vkpz_4RMOSNvmue8Q9HQ], diff size [183]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,050][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [4] with uuid [K_Vkpz_4RMOSNvmue8Q9HQ], diff size [183]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,050][TRACE][org.elasticsearch.discovery.zen.publish] master node {N0AQrviUQ6mb6TQydEw8cw}{yJ6mcuyMQiO_XUJ924t9Qg}{local}{local[12]} acked cluster state version [4]. processing ... (current pending [8], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,051][TRACE][org.elasticsearch.discovery.zen.publish] committing version [4]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,051][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [K_Vkpz_4RMOSNvmue8Q9HQ], version [4]) to [{N0AQrviUQ6mb6TQydEw8cw}{yJ6mcuyMQiO_XUJ924t9Qg}{local}{local[12]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,051][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [K_Vkpz_4RMOSNvmue8Q9HQ], version [4]) to [{0m3SZSuOSh-_mmK_VsBtTA}{IKKf0L5nTIOk-yHoNvVzdQ}{local}{local[17]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,051][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [K_Vkpz_4RMOSNvmue8Q9HQ], version [4]) to [{dyVgKvKgRdKIH5ml0qe37Q}{YpAAUuzuR1GzE6mnr2c2Pw}{local}{local[16]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,052][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [K_Vkpz_4RMOSNvmue8Q9HQ], version [4]) to [{KCsoSF8GQfKClQNAm4gtaw}{HGIotp-0S46LdPFMbgoW1Q}{local}{local[13]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,052][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [K_Vkpz_4RMOSNvmue8Q9HQ], version [4]) to [{YEkCTbHrQ4ybBtx-CqBF9Q}{jEh7_NmeTiufnLusLtaPjA}{local}{local[15]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,052][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [K_Vkpz_4RMOSNvmue8Q9HQ], version [4]) to [{X8iM8k8YRYCbEzPsOgnD1w}{yGRyW5pfSByosoir2xBVrA}{local}{local[10]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,052][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [4], uuid [K_Vkpz_4RMOSNvmue8Q9HQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,053][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [K_Vkpz_4RMOSNvmue8Q9HQ], version [4]) to [{Y-oSYvTNRXiC5QtW3z7kSw}{Rcer7-VQTkKD7E7Xr61AEg}{local}{local[11]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,053][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [K_Vkpz_4RMOSNvmue8Q9HQ], version [4]) to [{_jivl7eASUG1YA2TZ9Vyqw}{rHalgRoCT8qh58jEuWMkCg}{local}{local[14]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,053][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [4], uuid [K_Vkpz_4RMOSNvmue8Q9HQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,053][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [4], uuid [K_Vkpz_4RMOSNvmue8Q9HQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,053][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [4], uuid [K_Vkpz_4RMOSNvmue8Q9HQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,053][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [4], uuid [K_Vkpz_4RMOSNvmue8Q9HQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,054][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [4], uuid [K_Vkpz_4RMOSNvmue8Q9HQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,054][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [4], uuid [K_Vkpz_4RMOSNvmue8Q9HQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,054][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [4], uuid [K_Vkpz_4RMOSNvmue8Q9HQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,063][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [5] with uuid [BGBz3PvVReOLSIe6kOaB5Q], diff size [183]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,064][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [5] with uuid [BGBz3PvVReOLSIe6kOaB5Q], diff size [183]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,064][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [5] with uuid [BGBz3PvVReOLSIe6kOaB5Q], diff size [183]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,064][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [5] with uuid [BGBz3PvVReOLSIe6kOaB5Q], diff size [183]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,065][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [5] with uuid [BGBz3PvVReOLSIe6kOaB5Q], diff size [183]%0D%0A[2016-09-15T19:37:25,065][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [5] with uuid [BGBz3PvVReOLSIe6kOaB5Q], diff size [183]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,069][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [5] with uuid [BGBz3PvVReOLSIe6kOaB5Q], diff size [183]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,068][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [BGBz3PvVReOLSIe6kOaB5Q], version [5]) to [{_jivl7eASUG1YA2TZ9Vyqw}{rHalgRoCT8qh58jEuWMkCg}{local}{local[14]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,070][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [BGBz3PvVReOLSIe6kOaB5Q], version [5]) to [{dyVgKvKgRdKIH5ml0qe37Q}{YpAAUuzuR1GzE6mnr2c2Pw}{local}{local[16]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,070][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [BGBz3PvVReOLSIe6kOaB5Q], version [5]) to [{KCsoSF8GQfKClQNAm4gtaw}{HGIotp-0S46LdPFMbgoW1Q}{local}{local[13]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,070][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [BGBz3PvVReOLSIe6kOaB5Q], version [5]) to [{X8iM8k8YRYCbEzPsOgnD1w}{yGRyW5pfSByosoir2xBVrA}{local}{local[10]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,070][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [BGBz3PvVReOLSIe6kOaB5Q], version [5]) to [{0m3SZSuOSh-_mmK_VsBtTA}{IKKf0L5nTIOk-yHoNvVzdQ}{local}{local[17]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,068][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [5] with uuid [BGBz3PvVReOLSIe6kOaB5Q], diff size [183]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,070][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [5], uuid [BGBz3PvVReOLSIe6kOaB5Q]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,071][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [5], uuid [BGBz3PvVReOLSIe6kOaB5Q]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,071][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [5], uuid [BGBz3PvVReOLSIe6kOaB5Q]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,071][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [5], uuid [BGBz3PvVReOLSIe6kOaB5Q]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,071][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [BGBz3PvVReOLSIe6kOaB5Q], version [5]) to [{Y-oSYvTNRXiC5QtW3z7kSw}{Rcer7-VQTkKD7E7Xr61AEg}{local}{local[11]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,072][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [5], uuid [BGBz3PvVReOLSIe6kOaB5Q]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,072][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [5], uuid [BGBz3PvVReOLSIe6kOaB5Q]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,072][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [BGBz3PvVReOLSIe6kOaB5Q], version [5]) to [{N0AQrviUQ6mb6TQydEw8cw}{yJ6mcuyMQiO_XUJ924t9Qg}{local}{local[12]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,072][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [5], uuid [BGBz3PvVReOLSIe6kOaB5Q]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,079][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [BGBz3PvVReOLSIe6kOaB5Q], version [5]) to [{YEkCTbHrQ4ybBtx-CqBF9Q}{jEh7_NmeTiufnLusLtaPjA}{local}{local[15]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,080][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [5], uuid [BGBz3PvVReOLSIe6kOaB5Q]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,085][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [6] with uuid [mynrjImxS3-Y8Fc4NuC_Mw], diff size [188]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,085][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [6] with uuid [mynrjImxS3-Y8Fc4NuC_Mw], diff size [188]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,086][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [6] with uuid [mynrjImxS3-Y8Fc4NuC_Mw], diff size [188]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,086][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [6] with uuid [mynrjImxS3-Y8Fc4NuC_Mw], diff size [188]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,086][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [6] with uuid [mynrjImxS3-Y8Fc4NuC_Mw], diff size [188]%0D%0A[2016-09-15T19:37:25,086][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [6] with uuid [mynrjImxS3-Y8Fc4NuC_Mw], diff size [188]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,087][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [6] with uuid [mynrjImxS3-Y8Fc4NuC_Mw], diff size [188]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,088][TRACE][org.elasticsearch.discovery.zen.publish] master node {_jivl7eASUG1YA2TZ9Vyqw}{rHalgRoCT8qh58jEuWMkCg}{local}{local[14]} acked cluster state version [6]. processing ... (current pending [8], needed [7])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,088][TRACE][org.elasticsearch.discovery.zen.publish] master node {Y-oSYvTNRXiC5QtW3z7kSw}{Rcer7-VQTkKD7E7Xr61AEg}{local}{local[11]} acked cluster state version [6]. processing ... (current pending [7], needed [6])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,088][TRACE][org.elasticsearch.discovery.zen.publish] master node {dyVgKvKgRdKIH5ml0qe37Q}{YpAAUuzuR1GzE6mnr2c2Pw}{local}{local[16]} acked cluster state version [6]. processing ... (current pending [6], needed [5])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,088][TRACE][org.elasticsearch.discovery.zen.publish] master node {YEkCTbHrQ4ybBtx-CqBF9Q}{jEh7_NmeTiufnLusLtaPjA}{local}{local[15]} acked cluster state version [6]. processing ... (current pending [5], needed [4])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,117][TRACE][org.elasticsearch.discovery.zen.publish] master node {N0AQrviUQ6mb6TQydEw8cw}{yJ6mcuyMQiO_XUJ924t9Qg}{local}{local[12]} acked cluster state version [6]. processing ... (current pending [4], needed [3])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,116][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [6] with uuid [mynrjImxS3-Y8Fc4NuC_Mw], diff size [188]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,118][TRACE][org.elasticsearch.discovery.zen.publish] master node {0m3SZSuOSh-_mmK_VsBtTA}{IKKf0L5nTIOk-yHoNvVzdQ}{local}{local[17]} acked cluster state version [6]. processing ... (current pending [3], needed [2])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,118][TRACE][org.elasticsearch.discovery.zen.publish] master node {KCsoSF8GQfKClQNAm4gtaw}{HGIotp-0S46LdPFMbgoW1Q}{local}{local[13]} acked cluster state version [6]. processing ... (current pending [2], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,118][TRACE][org.elasticsearch.discovery.zen.publish] committing version [6]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,119][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [mynrjImxS3-Y8Fc4NuC_Mw], version [6]) to [{_jivl7eASUG1YA2TZ9Vyqw}{rHalgRoCT8qh58jEuWMkCg}{local}{local[14]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,119][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [mynrjImxS3-Y8Fc4NuC_Mw], version [6]) to [{Y-oSYvTNRXiC5QtW3z7kSw}{Rcer7-VQTkKD7E7Xr61AEg}{local}{local[11]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,119][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [mynrjImxS3-Y8Fc4NuC_Mw], version [6]) to [{dyVgKvKgRdKIH5ml0qe37Q}{YpAAUuzuR1GzE6mnr2c2Pw}{local}{local[16]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,119][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [mynrjImxS3-Y8Fc4NuC_Mw], version [6]) to [{YEkCTbHrQ4ybBtx-CqBF9Q}{jEh7_NmeTiufnLusLtaPjA}{local}{local[15]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,119][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [mynrjImxS3-Y8Fc4NuC_Mw], version [6]) to [{N0AQrviUQ6mb6TQydEw8cw}{yJ6mcuyMQiO_XUJ924t9Qg}{local}{local[12]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,119][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [mynrjImxS3-Y8Fc4NuC_Mw], version [6]) to [{0m3SZSuOSh-_mmK_VsBtTA}{IKKf0L5nTIOk-yHoNvVzdQ}{local}{local[17]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,119][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [mynrjImxS3-Y8Fc4NuC_Mw], version [6]) to [{KCsoSF8GQfKClQNAm4gtaw}{HGIotp-0S46LdPFMbgoW1Q}{local}{local[13]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,120][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [6], uuid [mynrjImxS3-Y8Fc4NuC_Mw]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,120][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [6], uuid [mynrjImxS3-Y8Fc4NuC_Mw]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,122][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [6], uuid [mynrjImxS3-Y8Fc4NuC_Mw]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,129][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [6], uuid [mynrjImxS3-Y8Fc4NuC_Mw]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,130][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [6], uuid [mynrjImxS3-Y8Fc4NuC_Mw]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,130][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [6], uuid [mynrjImxS3-Y8Fc4NuC_Mw]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,130][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [6], uuid [mynrjImxS3-Y8Fc4NuC_Mw]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,131][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [mynrjImxS3-Y8Fc4NuC_Mw], version [6]) to [{X8iM8k8YRYCbEzPsOgnD1w}{yGRyW5pfSByosoir2xBVrA}{local}{local[10]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,131][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [6], uuid [mynrjImxS3-Y8Fc4NuC_Mw]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,142][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [7] with uuid [wEDNN5ViSRShq_QCAvz0pA], diff size [190]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,143][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [7] with uuid [wEDNN5ViSRShq_QCAvz0pA], diff size [190]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,143][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [7] with uuid [wEDNN5ViSRShq_QCAvz0pA], diff size [190]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,145][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [7] with uuid [wEDNN5ViSRShq_QCAvz0pA], diff size [190]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,146][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [7] with uuid [wEDNN5ViSRShq_QCAvz0pA], diff size [190]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,161][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [7] with uuid [wEDNN5ViSRShq_QCAvz0pA], diff size [190]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,164][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [7] with uuid [wEDNN5ViSRShq_QCAvz0pA], diff size [190]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,165][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [7] with uuid [wEDNN5ViSRShq_QCAvz0pA], diff size [190]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,171][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [wEDNN5ViSRShq_QCAvz0pA], version [7]) to [{Y-oSYvTNRXiC5QtW3z7kSw}{Rcer7-VQTkKD7E7Xr61AEg}{local}{local[11]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,172][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [wEDNN5ViSRShq_QCAvz0pA], version [7]) to [{0m3SZSuOSh-_mmK_VsBtTA}{IKKf0L5nTIOk-yHoNvVzdQ}{local}{local[17]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,172][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [wEDNN5ViSRShq_QCAvz0pA], version [7]) to [{X8iM8k8YRYCbEzPsOgnD1w}{yGRyW5pfSByosoir2xBVrA}{local}{local[10]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,172][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [wEDNN5ViSRShq_QCAvz0pA], version [7]) to [{dyVgKvKgRdKIH5ml0qe37Q}{YpAAUuzuR1GzE6mnr2c2Pw}{local}{local[16]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,172][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [wEDNN5ViSRShq_QCAvz0pA], version [7]) to [{KCsoSF8GQfKClQNAm4gtaw}{HGIotp-0S46LdPFMbgoW1Q}{local}{local[13]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,173][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [wEDNN5ViSRShq_QCAvz0pA], version [7]) to [{YEkCTbHrQ4ybBtx-CqBF9Q}{jEh7_NmeTiufnLusLtaPjA}{local}{local[15]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,173][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [wEDNN5ViSRShq_QCAvz0pA], version [7]) to [{_jivl7eASUG1YA2TZ9Vyqw}{rHalgRoCT8qh58jEuWMkCg}{local}{local[14]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,173][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [7], uuid [wEDNN5ViSRShq_QCAvz0pA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,173][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [7], uuid [wEDNN5ViSRShq_QCAvz0pA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,174][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [7], uuid [wEDNN5ViSRShq_QCAvz0pA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,174][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [7], uuid [wEDNN5ViSRShq_QCAvz0pA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,174][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [7], uuid [wEDNN5ViSRShq_QCAvz0pA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,174][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [7], uuid [wEDNN5ViSRShq_QCAvz0pA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,175][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [wEDNN5ViSRShq_QCAvz0pA], version [7]) to [{N0AQrviUQ6mb6TQydEw8cw}{yJ6mcuyMQiO_XUJ924t9Qg}{local}{local[12]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,175][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [7], uuid [wEDNN5ViSRShq_QCAvz0pA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,175][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [7], uuid [wEDNN5ViSRShq_QCAvz0pA]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimultaneousClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1473935843567,
  "executionTime": 1761
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,344][INFO ][org.elasticsearch.test.transport] publish_address {local[18]}, bound_addresses {local[18]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,387][INFO ][org.elasticsearch.test.transport] publish_address {local[19]}, bound_addresses {local[19]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,574][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [1] with size [211]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,590][TRACE][org.elasticsearch.discovery.zen.publish] master node {UNG31vpjSgGLoMzKRsxowA}{GghQvqgsRzOOwHhGe1BLmA}{local}{local[19]} acked cluster state version [1]. processing ... (current pending [1], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,627][TRACE][org.elasticsearch.discovery.zen.publish] committing version [1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,628][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [e0z4irZ8Qv-dVh6Y_yxtsQ], version [1]) to [{UNG31vpjSgGLoMzKRsxowA}{GghQvqgsRzOOwHhGe1BLmA}{local}{local[19]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,704][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [1], uuid [e0z4irZ8Qv-dVh6Y_yxtsQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,851][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [2] with uuid [M2w-VpIFSZaqRKIK_ZdEmA], diff size [133]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,853][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [M2w-VpIFSZaqRKIK_ZdEmA], version [2]) to [{UNG31vpjSgGLoMzKRsxowA}{GghQvqgsRzOOwHhGe1BLmA}{local}{local[19]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,854][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [2], uuid [M2w-VpIFSZaqRKIK_ZdEmA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,856][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [3] with uuid [wvk6w_CYTXqKgK1Qb4WReA], diff size [91]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,856][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [wvk6w_CYTXqKgK1Qb4WReA], version [3]) to [{UNG31vpjSgGLoMzKRsxowA}{GghQvqgsRzOOwHhGe1BLmA}{local}{local[19]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,856][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [3], uuid [wvk6w_CYTXqKgK1Qb4WReA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,859][INFO ][org.elasticsearch.test.transport] publish_address {local[20]}, bound_addresses {local[20]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,863][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [4] with uuid [14GwJqwNS8uzWiK3xrL-GQ], diff size [268]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,863][TRACE][org.elasticsearch.discovery.zen.publish] master node {UNG31vpjSgGLoMzKRsxowA}{GghQvqgsRzOOwHhGe1BLmA}{local}{local[19]} acked cluster state version [4]. processing ... (current pending [2], needed [2])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,892][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [4] with size [262]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,893][TRACE][org.elasticsearch.discovery.zen.publish] master node {pKfnGIqOQZim17Ax-zSU4g}{dUFSfwNoTvSUhRiQY5VCnw}{local}{local[20]} acked cluster state version [4]. processing ... (current pending [1], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,893][TRACE][org.elasticsearch.discovery.zen.publish] committing version [4]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,893][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [14GwJqwNS8uzWiK3xrL-GQ], version [4]) to [{UNG31vpjSgGLoMzKRsxowA}{GghQvqgsRzOOwHhGe1BLmA}{local}{local[19]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,893][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [14GwJqwNS8uzWiK3xrL-GQ], version [4]) to [{pKfnGIqOQZim17Ax-zSU4g}{dUFSfwNoTvSUhRiQY5VCnw}{local}{local[20]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,895][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [4], uuid [14GwJqwNS8uzWiK3xrL-GQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,897][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [4], uuid [14GwJqwNS8uzWiK3xrL-GQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,899][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [5] with uuid [GmFBQMVtTSSA1AkFje3aeQ], diff size [101]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,899][TRACE][org.elasticsearch.discovery.zen.publish] master node {UNG31vpjSgGLoMzKRsxowA}{GghQvqgsRzOOwHhGe1BLmA}{local}{local[19]} acked cluster state version [5]. processing ... (current pending [2], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,899][TRACE][org.elasticsearch.discovery.zen.publish] committing version [5]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,899][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [GmFBQMVtTSSA1AkFje3aeQ], version [5]) to [{UNG31vpjSgGLoMzKRsxowA}{GghQvqgsRzOOwHhGe1BLmA}{local}{local[19]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,909][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [5] with uuid [GmFBQMVtTSSA1AkFje3aeQ], diff size [101]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,911][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [5], uuid [GmFBQMVtTSSA1AkFje3aeQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,921][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [GmFBQMVtTSSA1AkFje3aeQ], version [5]) to [{pKfnGIqOQZim17Ax-zSU4g}{dUFSfwNoTvSUhRiQY5VCnw}{local}{local[20]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,958][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [5], uuid [GmFBQMVtTSSA1AkFje3aeQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,966][DEBUG][org.elasticsearch.discovery.zen.publish] resending full cluster state to node {UNG31vpjSgGLoMzKRsxowA}{GghQvqgsRzOOwHhGe1BLmA}{local}{local[19]} reason RemoteTransportException[[][local[18]][internal:discovery/zen/publish/send]]; nested: IncompatibleClusterStateVersionException[Expected diff for version 5 with uuid GmFBQMVtTSSA1AkFje3aeQ got version 6 and uuid s6L1JTr6TPy2P9WGDwY2Ug];; org.elasticsearch.cluster.IncompatibleClusterStateVersionException: Expected diff for version 5 with uuid GmFBQMVtTSSA1AkFje3aeQ got version 6 and uuid s6L1JTr6TPy2P9WGDwY2Ug%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,970][DEBUG][org.elasticsearch.discovery.zen.publish] resending full cluster state to node {pKfnGIqOQZim17Ax-zSU4g}{dUFSfwNoTvSUhRiQY5VCnw}{local}{local[20]} reason RemoteTransportException[[][local[18]][internal:discovery/zen/publish/send]]; nested: IncompatibleClusterStateVersionException[Expected diff for version 5 with uuid GmFBQMVtTSSA1AkFje3aeQ got version 6 and uuid s6L1JTr6TPy2P9WGDwY2Ug];; org.elasticsearch.cluster.IncompatibleClusterStateVersionException: Expected diff for version 5 with uuid GmFBQMVtTSSA1AkFje3aeQ got version 6 and uuid s6L1JTr6TPy2P9WGDwY2Ug%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,984][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [6] with size [270]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,986][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [6] with size [270]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,986][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [288aGus9Q_C5omq_K4Bpvg], version [6]) to [{UNG31vpjSgGLoMzKRsxowA}{GghQvqgsRzOOwHhGe1BLmA}{local}{local[19]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,988][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [288aGus9Q_C5omq_K4Bpvg], version [6]) to [{pKfnGIqOQZim17Ax-zSU4g}{dUFSfwNoTvSUhRiQY5VCnw}{local}{local[20]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,993][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [6], uuid [288aGus9Q_C5omq_K4Bpvg]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:25,995][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [6], uuid [288aGus9Q_C5omq_K4Bpvg]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,000][DEBUG][org.elasticsearch.discovery.zen.publish] received diff for but don't have any local cluster state - requesting full state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,001][DEBUG][org.elasticsearch.discovery.zen.publish] resending full cluster state to node {DQjXvEB6Sjqj-6PC2K2Ouw}{Nvp0H1KHTtaV9ZPk6tvi5g}{local}{local[18]} reason RemoteTransportException[[][local[19]][internal:discovery/zen/publish/send]]; nested: IncompatibleClusterStateVersionException[have no local cluster state];; org.elasticsearch.cluster.IncompatibleClusterStateVersionException: have no local cluster state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,001][DEBUG][org.elasticsearch.discovery.zen.publish] resending full cluster state to node {pKfnGIqOQZim17Ax-zSU4g}{dUFSfwNoTvSUhRiQY5VCnw}{local}{local[20]} reason RemoteTransportException[[][local[19]][internal:discovery/zen/publish/send]]; nested: IncompatibleClusterStateVersionException[Expected diff for version 6 with uuid 288aGus9Q_C5omq_K4Bpvg got version 7 and uuid KH6uwOQWQnatefjbZftHFw];; org.elasticsearch.cluster.IncompatibleClusterStateVersionException: Expected diff for version 6 with uuid 288aGus9Q_C5omq_K4Bpvg got version 7 and uuid KH6uwOQWQnatefjbZftHFw%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,002][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [7] with size [268]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,002][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [7] with size [268]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,003][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [2z3mKJUBTjWquZUjHeXBBw], version [7]) to [{DQjXvEB6Sjqj-6PC2K2Ouw}{Nvp0H1KHTtaV9ZPk6tvi5g}{local}{local[18]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,003][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [2z3mKJUBTjWquZUjHeXBBw], version [7]) to [{pKfnGIqOQZim17Ax-zSU4g}{dUFSfwNoTvSUhRiQY5VCnw}{local}{local[20]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,003][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [7], uuid [2z3mKJUBTjWquZUjHeXBBw]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,003][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [7], uuid [2z3mKJUBTjWquZUjHeXBBw]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1473935845329,
  "executionTime": 679
 }
]

[
 "TEST_STARTED",
 "ID#testOutOfOrderCommitMessages(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,022][INFO ][org.elasticsearch.test.transport] publish_address {local[21]}, bound_addresses {local[21]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,102][INFO ][org.elasticsearch.discovery.zen.publish] --> publishing states%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,102][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [1] with size [160]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,103][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [2] with size [161]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,103][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [3] with size [161]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,104][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [4] with size [161]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,104][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [5] with size [161]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,105][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [6] with size [161]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,105][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [7] with size [161]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,106][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [8] with size [161]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,106][INFO ][org.elasticsearch.discovery.zen.publish] --> committing states%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,106][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [8], uuid [lMc1LiilTKacypgHOc_Pwg]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,106][TRACE][org.elasticsearch.discovery.zen.publish] processing pending state uuid[kyfYUFPeToSyw1AuIzVraA]/v[1] together with state uuid[lMc1LiilTKacypgHOc_Pwg]/v[8]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,106][TRACE][org.elasticsearch.discovery.zen.publish] processing pending state uuid[rsoNU18yROSYe-vvOYogcA]/v[2] together with state uuid[lMc1LiilTKacypgHOc_Pwg]/v[8]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,107][TRACE][org.elasticsearch.discovery.zen.publish] processing pending state uuid[QboOS1YQTOO0Mep8A0uU9Q]/v[3] together with state uuid[lMc1LiilTKacypgHOc_Pwg]/v[8]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,107][TRACE][org.elasticsearch.discovery.zen.publish] processing pending state uuid[c7toaSNOTHeAlAKIJ_HM5A]/v[4] together with state uuid[lMc1LiilTKacypgHOc_Pwg]/v[8]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,107][TRACE][org.elasticsearch.discovery.zen.publish] processing pending state uuid[JbpSh5_VRDmF2f3e8Dnvow]/v[5] together with state uuid[lMc1LiilTKacypgHOc_Pwg]/v[8]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,107][TRACE][org.elasticsearch.discovery.zen.publish] processing pending state uuid[pkuxlZ5oRv-ovB99V5D0QQ]/v[6] together with state uuid[lMc1LiilTKacypgHOc_Pwg]/v[8]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,107][TRACE][org.elasticsearch.discovery.zen.publish] processing pending state uuid[6GNT38zmSaS_rkuJofyF_Q]/v[7] together with state uuid[lMc1LiilTKacypgHOc_Pwg]/v[8]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOutOfOrderCommitMessages(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1473935846008,
  "executionTime": 102
 }
]

[
 "TEST_STARTED",
 "ID#testDisablingDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,148][INFO ][org.elasticsearch.test.transport] publish_address {local[22]}, bound_addresses {local[22]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,183][INFO ][org.elasticsearch.test.transport] publish_address {local[23]}, bound_addresses {local[23]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,199][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [1] with size [211]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,207][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [V9_zjnQkTSGFShXRIds5mg], version [1]) to [{uvDEyFRETR6JfTlf0D6JDg}{Ka2T1u21TpCea-JyaszLAA}{local}{local[23]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,218][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [1], uuid [V9_zjnQkTSGFShXRIds5mg]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,222][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [2] with size [252]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,232][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [ijszZxHCQXmRIwKizCnhHg], version [2]) to [{uvDEyFRETR6JfTlf0D6JDg}{Ka2T1u21TpCea-JyaszLAA}{local}{local[23]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,244][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [2], uuid [ijszZxHCQXmRIwKizCnhHg]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDisablingDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1473935846110,
  "executionTime": 140
 }
]

[
 "TEST_STARTED",
 "ID#testSerializationFailureDuringDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,265][INFO ][org.elasticsearch.test.transport] publish_address {local[24]}, bound_addresses {local[24]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,269][INFO ][org.elasticsearch.test.transport] publish_address {local[25]}, bound_addresses {local[25]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,274][DEBUG][org.elasticsearch.discovery.zen.publish] received diff for but don't have any local cluster state - requesting full state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,276][DEBUG][org.elasticsearch.discovery.zen.publish] resending full cluster state to node {E1FFAZy4TeGE0utMMhfBcA}{ml7u9CGHQLSYKrOkcYKAJA}{local}{local[25]} reason RemoteTransportException[[][local[24]][internal:discovery/zen/publish/send]]; nested: IncompatibleClusterStateVersionException[have no local cluster state];; org.elasticsearch.cluster.IncompatibleClusterStateVersionException: have no local cluster state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,278][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [1] with size [210]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,279][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [AUz5AOrOQxu7C9Ub-iS5AA], version [1]) to [{E1FFAZy4TeGE0utMMhfBcA}{ml7u9CGHQLSYKrOkcYKAJA}{local}{local[25]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,284][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [1], uuid [AUz5AOrOQxu7C9Ub-iS5AA]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerializationFailureDuringDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1473935846251,
  "executionTime": 69
 }
]

[
 "TEST_STARTED",
 "ID#testUnexpectedDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,326][INFO ][org.elasticsearch.test.transport] publish_address {local[26]}, bound_addresses {local[26]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,332][INFO ][org.elasticsearch.test.transport] publish_address {local[27]}, bound_addresses {local[27]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,340][DEBUG][org.elasticsearch.discovery.zen.publish] received diff for but don't have any local cluster state - requesting full state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,342][DEBUG][org.elasticsearch.discovery.zen.publish] resending full cluster state to node {3Jed_M2mS1G0cBVMQthA1A}{hbw5xB9XSVWCyg86m1Z__g}{local}{local[27]} reason RemoteTransportException[[][local[26]][internal:discovery/zen/publish/send]]; nested: IncompatibleClusterStateVersionException[have no local cluster state];; org.elasticsearch.cluster.IncompatibleClusterStateVersionException: have no local cluster state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,344][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [1] with size [211]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,345][TRACE][org.elasticsearch.discovery.zen.publish] master node {3Jed_M2mS1G0cBVMQthA1A}{hbw5xB9XSVWCyg86m1Z__g}{local}{local[27]} acked cluster state version [1]. processing ... (current pending [1], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,345][TRACE][org.elasticsearch.discovery.zen.publish] committing version [1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,345][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [q-jD4P4CSbWVq_iYgwtPqw], version [1]) to [{3Jed_M2mS1G0cBVMQthA1A}{hbw5xB9XSVWCyg86m1Z__g}{local}{local[27]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,346][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [1], uuid [q-jD4P4CSbWVq_iYgwtPqw]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,349][DEBUG][org.elasticsearch.discovery.zen.publish] received diff cluster state version [2] with uuid [mVse7XMpTnuQyS9KH87yXw], diff size [133]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,350][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [mVse7XMpTnuQyS9KH87yXw], version [2]) to [{3Jed_M2mS1G0cBVMQthA1A}{hbw5xB9XSVWCyg86m1Z__g}{local}{local[27]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,350][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [2], uuid [mVse7XMpTnuQyS9KH87yXw]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnexpectedDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1473935846320,
  "executionTime": 34
 }
]

[
 "TEST_STARTED",
 "ID#testTimeoutOrCommit(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,362][INFO ][org.elasticsearch.test.transport] publish_address {local[28]}, bound_addresses {local[28]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,373][INFO ][org.elasticsearch.test.transport] publish_address {local[29]}, bound_addresses {local[29]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,376][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [1], UUID [7qz2FhzsTbiWL7TqdLR4hg]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,377][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [1] with size [212]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,378][TRACE][org.elasticsearch.discovery.zen.publish] master node {BqS38VkMSFmQN_ZfoYzdpg}{GKwXeG2kTweGYVjh5hT_zQ}{local}{local[29]} acked cluster state version [1]. processing ... (current pending [1], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,379][TRACE][org.elasticsearch.discovery.zen.publish] committing version [1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,379][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [7qz2FhzsTbiWL7TqdLR4hg], version [1]) to [{BqS38VkMSFmQN_ZfoYzdpg}{GKwXeG2kTweGYVjh5hT_zQ}{local}{local[29]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,380][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [1], uuid [7qz2FhzsTbiWL7TqdLR4hg]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,382][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [succeeded], verifying...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,383][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [2], UUID [yu_ipTZdTZmwOJLZOC0ZTw]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,385][TRACE][org.elasticsearch.discovery.zen.publish] failed to commit version [2]. timed out waiting for commit (commit timeout [1ms])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,387][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [failed], verifying...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,387][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [3], UUID [S1FaXtycQJ6GUbj-Tz46pQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,391][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [2] with size [214]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,392][TRACE][org.elasticsearch.discovery.zen.publish] failed to commit version [3]. timed out waiting for commit (commit timeout [1ms])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,392][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [failed], verifying...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,393][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [4], UUID [3uLHBeIMSIOriWO9uKR3RQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,393][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [4] with size [214]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,395][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [3] with size [214]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,396][TRACE][org.elasticsearch.discovery.zen.publish] ignoring ack from [{BqS38VkMSFmQN_ZfoYzdpg}{GKwXeG2kTweGYVjh5hT_zQ}{local}{local[29]}] for cluster state version [3]. already failed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,396][TRACE][org.elasticsearch.discovery.zen.publish] failed to commit version [4]. timed out waiting for commit (commit timeout [1ms])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,397][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [failed], verifying...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,397][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [5], UUID [ekN-0vJcQniPtrHv8K1qcw]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,397][TRACE][org.elasticsearch.discovery.zen.publish] ignoring ack from [{BqS38VkMSFmQN_ZfoYzdpg}{GKwXeG2kTweGYVjh5hT_zQ}{local}{local[29]}] for cluster state version [2]. already failed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,397][TRACE][org.elasticsearch.discovery.zen.publish] ignoring ack from [{BqS38VkMSFmQN_ZfoYzdpg}{GKwXeG2kTweGYVjh5hT_zQ}{local}{local[29]}] for cluster state version [4]. already failed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,398][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [5] with size [214]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,398][TRACE][org.elasticsearch.discovery.zen.publish] master node {BqS38VkMSFmQN_ZfoYzdpg}{GKwXeG2kTweGYVjh5hT_zQ}{local}{local[29]} acked cluster state version [5]. processing ... (current pending [1], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,398][TRACE][org.elasticsearch.discovery.zen.publish] committing version [5]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,398][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [ekN-0vJcQniPtrHv8K1qcw], version [5]) to [{BqS38VkMSFmQN_ZfoYzdpg}{GKwXeG2kTweGYVjh5hT_zQ}{local}{local[29]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,399][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [5], uuid [ekN-0vJcQniPtrHv8K1qcw]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,399][TRACE][org.elasticsearch.discovery.zen.publish] processing pending state uuid[yu_ipTZdTZmwOJLZOC0ZTw]/v[2] together with state uuid[ekN-0vJcQniPtrHv8K1qcw]/v[5]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,399][TRACE][org.elasticsearch.discovery.zen.publish] processing pending state uuid[3uLHBeIMSIOriWO9uKR3RQ]/v[4] together with state uuid[ekN-0vJcQniPtrHv8K1qcw]/v[5]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,399][TRACE][org.elasticsearch.discovery.zen.publish] processing pending state uuid[S1FaXtycQJ6GUbj-Tz46pQ]/v[3] together with state uuid[ekN-0vJcQniPtrHv8K1qcw]/v[5]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,399][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [succeeded], verifying...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,399][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [6], UUID [DBCZ6oElRxqxPQr7AkEWWA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,400][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [6] with size [214]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,400][TRACE][org.elasticsearch.discovery.zen.publish] master node {BqS38VkMSFmQN_ZfoYzdpg}{GKwXeG2kTweGYVjh5hT_zQ}{local}{local[29]} acked cluster state version [6]. processing ... (current pending [1], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,400][TRACE][org.elasticsearch.discovery.zen.publish] committing version [6]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,400][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [DBCZ6oElRxqxPQr7AkEWWA], version [6]) to [{BqS38VkMSFmQN_ZfoYzdpg}{GKwXeG2kTweGYVjh5hT_zQ}{local}{local[29]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,401][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [6], uuid [DBCZ6oElRxqxPQr7AkEWWA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,401][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [succeeded], verifying...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,401][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [7], UUID [4u7qhqt1TaOQeo_b_a-MDw]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,402][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [7] with size [214]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,402][TRACE][org.elasticsearch.discovery.zen.publish] master node {BqS38VkMSFmQN_ZfoYzdpg}{GKwXeG2kTweGYVjh5hT_zQ}{local}{local[29]} acked cluster state version [7]. processing ... (current pending [1], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,402][TRACE][org.elasticsearch.discovery.zen.publish] committing version [7]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,402][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [4u7qhqt1TaOQeo_b_a-MDw], version [7]) to [{BqS38VkMSFmQN_ZfoYzdpg}{GKwXeG2kTweGYVjh5hT_zQ}{local}{local[29]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,402][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [7], uuid [4u7qhqt1TaOQeo_b_a-MDw]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,403][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [succeeded], verifying...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,403][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [8], UUID [cOiGpjCbQLO_Dyel6ibz9g]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,404][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [8] with size [214]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,404][TRACE][org.elasticsearch.discovery.zen.publish] master node {BqS38VkMSFmQN_ZfoYzdpg}{GKwXeG2kTweGYVjh5hT_zQ}{local}{local[29]} acked cluster state version [8]. processing ... (current pending [1], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,404][TRACE][org.elasticsearch.discovery.zen.publish] committing version [8]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,404][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [cOiGpjCbQLO_Dyel6ibz9g], version [8]) to [{BqS38VkMSFmQN_ZfoYzdpg}{GKwXeG2kTweGYVjh5hT_zQ}{local}{local[29]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,404][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [8], uuid [cOiGpjCbQLO_Dyel6ibz9g]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,405][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [succeeded], verifying...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,408][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [9], UUID [0_priDZ3TDS5SPv7XiGVYQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,412][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [9] with size [214]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,412][TRACE][org.elasticsearch.discovery.zen.publish] failed to commit version [9]. timed out waiting for commit (commit timeout [1ms])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,412][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [failed], verifying...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,413][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [10], UUID [ZjWEMzRhRNW9aCaViGI3sg]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,419][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [10] with size [214]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,419][TRACE][org.elasticsearch.discovery.zen.publish] failed to commit version [10]. timed out waiting for commit (commit timeout [1ms])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,419][TRACE][org.elasticsearch.discovery.zen.publish] ignoring ack from [{BqS38VkMSFmQN_ZfoYzdpg}{GKwXeG2kTweGYVjh5hT_zQ}{local}{local[29]}] for cluster state version [9]. already failed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,419][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [failed], verifying...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,420][TRACE][org.elasticsearch.discovery.zen.publish] ignoring ack from [{BqS38VkMSFmQN_ZfoYzdpg}{GKwXeG2kTweGYVjh5hT_zQ}{local}{local[29]}] for cluster state version [10]. already failed%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeoutOrCommit(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1473935846354,
  "executionTime": 68
 }
]

[
 "TEST_STARTED",
 "ID#testPublishingWithSendingErrors(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,427][INFO ][org.elasticsearch.test.transport] publish_address {local[30]}, bound_addresses {local[30]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,432][INFO ][org.elasticsearch.test.transport] publish_address {local[31]}, bound_addresses {local[31]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,437][INFO ][org.elasticsearch.test.transport] publish_address {local[32]}, bound_addresses {local[32]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,445][INFO ][org.elasticsearch.test.transport] publish_address {local[33]}, bound_addresses {local[33]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,449][INFO ][org.elasticsearch.test.transport] publish_address {local[34]}, bound_addresses {local[34]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,453][INFO ][org.elasticsearch.test.transport] publish_address {local[35]}, bound_addresses {local[35]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,458][INFO ][org.elasticsearch.test.transport] publish_address {local[36]}, bound_addresses {local[36]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,463][INFO ][org.elasticsearch.test.transport] publish_address {local[37]}, bound_addresses {local[37]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,467][INFO ][org.elasticsearch.test.transport] publish_address {local[38]}, bound_addresses {local[38]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,472][INFO ][org.elasticsearch.test.transport] publish_address {local[39]}, bound_addresses {local[39]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,484][INFO ][org.elasticsearch.test.transport] publish_address {local[40]}, bound_addresses {local[40]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,488][INFO ][org.elasticsearch.test.transport] publish_address {local[41]}, bound_addresses {local[41]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,492][INFO ][org.elasticsearch.discovery.zen.publish] --> expecting commit to succeed. good nodes [5], errors [4], timeouts [2]. min_master_nodes [5]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,501][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [0] with size [615]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,503][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [0] with size [615]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,503][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [0] with size [615]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,504][DEBUG][org.elasticsearch.discovery.zen.publish] received full cluster state version [0] with size [615]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,507][DEBUG][org.elasticsearch.discovery.zen.publish] failed to send cluster state to {W-PZrMVsQrODlBoczKZGFg}{usgceW6lSg2G8PL6gKr-uQ}{local}{local[38]}%0D%0Aorg.elasticsearch.transport.RemoteTransportException: [][local[30]][internal:discovery/zen/publish/send]%0ACaused by: org.elasticsearch.ElasticsearchException: forced error on incoming cluster state%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests$MockPublishAction.handleIncomingClusterStateRequest(PublishClusterStateActionTests.java:860) ~[test/:?]%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendClusterStateRequestHandler.messageReceived(PublishClusterStateAction.java:459) ~[main/:?]%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendClusterStateRequestHandler.messageReceived(PublishClusterStateAction.java:455) ~[main/:?]%0A%09at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33) ~[main/:?]%0A%09at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:69) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.handleRequest(LocalTransport.java:335) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.processReceivedMessage(LocalTransport.java:283) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.lambda$receiveMessage$929(LocalTransport.java:251) ~[main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:444) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_65]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_65]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_65]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,507][DEBUG][org.elasticsearch.discovery.zen.publish] failed to send cluster state to {AXCY0UE2QT6McJbwlSc1VQ}{wcVubC7fSM-yfn2CuqBgGA}{local}{local[35]}%0D%0Aorg.elasticsearch.transport.RemoteTransportException: [][local[30]][internal:discovery/zen/publish/send]%0ACaused by: org.elasticsearch.ElasticsearchException: forced error on incoming cluster state%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests$MockPublishAction.handleIncomingClusterStateRequest(PublishClusterStateActionTests.java:860) ~[test/:?]%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendClusterStateRequestHandler.messageReceived(PublishClusterStateAction.java:459) ~[main/:?]%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendClusterStateRequestHandler.messageReceived(PublishClusterStateAction.java:455) ~[main/:?]%0A%09at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33) ~[main/:?]%0A%09at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:69) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.handleRequest(LocalTransport.java:335) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.processReceivedMessage(LocalTransport.java:283) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.lambda$receiveMessage$929(LocalTransport.java:251) ~[main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:444) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_65]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_65]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_65]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,510][DEBUG][org.elasticsearch.discovery.zen.publish] failed to send cluster state to {MO9vO6OBSUCiSHjyAomRsQ}{-YsAHLqiT2e1CuK_FNZWuQ}{local}{local[36]}%0D%0Aorg.elasticsearch.transport.RemoteTransportException: [][local[30]][internal:discovery/zen/publish/send]%0ACaused by: org.elasticsearch.ElasticsearchException: forced error on incoming cluster state%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests$MockPublishAction.handleIncomingClusterStateRequest(PublishClusterStateActionTests.java:860) ~[test/:?]%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendClusterStateRequestHandler.messageReceived(PublishClusterStateAction.java:459) ~[main/:?]%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendClusterStateRequestHandler.messageReceived(PublishClusterStateAction.java:455) ~[main/:?]%0A%09at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33) ~[main/:?]%0A%09at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:69) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.handleRequest(LocalTransport.java:335) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.processReceivedMessage(LocalTransport.java:283) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.lambda$receiveMessage$929(LocalTransport.java:251) ~[main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:444) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_65]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_65]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_65]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,512][TRACE][org.elasticsearch.discovery.zen.publish] master node {W-PZrMVsQrODlBoczKZGFg}{usgceW6lSg2G8PL6gKr-uQ}{local}{local[38]} failed to ack cluster state version [0]. processing ... (current pending [10], needed [4])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,508][DEBUG][org.elasticsearch.discovery.zen.publish] failed to send cluster state to {ol2SUoI5R3-iCuGa8BTcrQ}{y_IvfnhRR0Go4jzOgoVY0w}{local}{local[41]}%0D%0Aorg.elasticsearch.transport.RemoteTransportException: [][local[30]][internal:discovery/zen/publish/send]%0ACaused by: org.elasticsearch.ElasticsearchException: forced error on incoming cluster state%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests$MockPublishAction.handleIncomingClusterStateRequest(PublishClusterStateActionTests.java:860) ~[test/:?]%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendClusterStateRequestHandler.messageReceived(PublishClusterStateAction.java:459) ~[main/:?]%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendClusterStateRequestHandler.messageReceived(PublishClusterStateAction.java:455) ~[main/:?]%0A%09at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33) ~[main/:?]%0A%09at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:69) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.handleRequest(LocalTransport.java:335) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.processReceivedMessage(LocalTransport.java:283) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.lambda$receiveMessage$929(LocalTransport.java:251) ~[main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:444) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_65]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_65]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_65]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,513][TRACE][org.elasticsearch.discovery.zen.publish] master node {MO9vO6OBSUCiSHjyAomRsQ}{-YsAHLqiT2e1CuK_FNZWuQ}{local}{local[36]} failed to ack cluster state version [0]. processing ... (current pending [9], needed [4])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,513][TRACE][org.elasticsearch.discovery.zen.publish] master node {8-QP04IFSieN3bNEDTfKvw}{ljOb7paMSLGcs0osINEPGA}{local}{local[32]} acked cluster state version [0]. processing ... (current pending [8], needed [4])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,513][TRACE][org.elasticsearch.discovery.zen.publish] master node {wlbCFMEDSWKjNfrDSuVMyg}{xcoNsoMbTiGAbBUhUMaZPw}{local}{local[33]} acked cluster state version [0]. processing ... (current pending [7], needed [3])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,513][TRACE][org.elasticsearch.discovery.zen.publish] master node {oojjU1iMQlC8XbF4Nimgag}{Oo8VgYPoS4S9_O-x1w8aeA}{local}{local[31]} acked cluster state version [0]. processing ... (current pending [6], needed [2])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,513][TRACE][org.elasticsearch.discovery.zen.publish] master node {tQPT8ou5TE-vy22T1QF26A}{WR5oWncGSy2rrjbMUJD_IA}{local}{local[34]} acked cluster state version [0]. processing ... (current pending [5], needed [1])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,513][TRACE][org.elasticsearch.discovery.zen.publish] committing version [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,513][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [51O6BRR7TbuOfjllW5_2bw], version [0]) to [{8-QP04IFSieN3bNEDTfKvw}{ljOb7paMSLGcs0osINEPGA}{local}{local[32]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,513][DEBUG][org.elasticsearch.discovery.zen.publish] failed to send cluster state to {JN1VVIZ6SSyPWb0W908ZeQ}{W2dpgJdjR7OTprvSRq3YNw}{local}{local[37]}%0D%0Aorg.elasticsearch.transport.RemoteTransportException: [][local[30]][internal:discovery/zen/publish/send]%0ACaused by: org.elasticsearch.ElasticsearchException: forced error on incoming cluster state%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests$MockPublishAction.handleIncomingClusterStateRequest(PublishClusterStateActionTests.java:860) ~[test/:?]%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendClusterStateRequestHandler.messageReceived(PublishClusterStateAction.java:459) ~[main/:?]%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendClusterStateRequestHandler.messageReceived(PublishClusterStateAction.java:455) ~[main/:?]%0A%09at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33) ~[main/:?]%0A%09at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:69) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.handleRequest(LocalTransport.java:335) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.processReceivedMessage(LocalTransport.java:283) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.lambda$receiveMessage$929(LocalTransport.java:251) ~[main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:444) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_65]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_65]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_65]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,514][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [51O6BRR7TbuOfjllW5_2bw], version [0]) to [{wlbCFMEDSWKjNfrDSuVMyg}{xcoNsoMbTiGAbBUhUMaZPw}{local}{local[33]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,514][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [51O6BRR7TbuOfjllW5_2bw], version [0]) to [{oojjU1iMQlC8XbF4Nimgag}{Oo8VgYPoS4S9_O-x1w8aeA}{local}{local[31]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,514][TRACE][org.elasticsearch.discovery.zen.publish] sending commit for cluster state (uuid: [51O6BRR7TbuOfjllW5_2bw], version [0]) to [{tQPT8ou5TE-vy22T1QF26A}{WR5oWncGSy2rrjbMUJD_IA}{local}{local[34]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,515][TRACE][org.elasticsearch.discovery.zen.publish] master node {AXCY0UE2QT6McJbwlSc1VQ}{wcVubC7fSM-yfn2CuqBgGA}{local}{local[35]} failed to ack cluster state version [0]. processing ... (current pending [4], needed [0])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,515][TRACE][org.elasticsearch.discovery.zen.publish] master node {JN1VVIZ6SSyPWb0W908ZeQ}{W2dpgJdjR7OTprvSRq3YNw}{local}{local[37]} failed to ack cluster state version [0]. processing ... (current pending [3], needed [0])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,515][WARN ][org.elasticsearch.discovery.zen.publish] timed out waiting for all nodes to process published state [0] (timeout [5ms], pending nodes: [{tQPT8ou5TE-vy22T1QF26A}{WR5oWncGSy2rrjbMUJD_IA}{local}{local[34]}, {8bdBf1v0RjyRenZ9Amc4yg}{D1Zc68uYTWumf5wDEHxedw}{local}{local[40]}, {c867bXSSTi6rmXrnpL4Dlw}{ZJ3bCLPHSEG79RAhoXWBfg}{local}{local[39]}, {JN1VVIZ6SSyPWb0W908ZeQ}{W2dpgJdjR7OTprvSRq3YNw}{local}{local[37]}, {8-QP04IFSieN3bNEDTfKvw}{ljOb7paMSLGcs0osINEPGA}{local}{local[32]}, {wlbCFMEDSWKjNfrDSuVMyg}{xcoNsoMbTiGAbBUhUMaZPw}{local}{local[33]}, {oojjU1iMQlC8XbF4Nimgag}{Oo8VgYPoS4S9_O-x1w8aeA}{local}{local[31]}])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,528][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [0], uuid [51O6BRR7TbuOfjllW5_2bw]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,528][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [0], uuid [51O6BRR7TbuOfjllW5_2bw]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,528][DEBUG][org.elasticsearch.discovery.zen.publish] [] received version [0], uuid [51O6BRR7TbuOfjllW5_2bw]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,529][DEBUG][org.elasticsearch.discovery.zen.publish] node {8-QP04IFSieN3bNEDTfKvw}{ljOb7paMSLGcs0osINEPGA}{local}{local[32]} responded to cluster state commit [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,529][WARN ][org.elasticsearch.test.transport] Transport response handler not found of id [12]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,529][DEBUG][org.elasticsearch.discovery.zen.publish] node {tQPT8ou5TE-vy22T1QF26A}{WR5oWncGSy2rrjbMUJD_IA}{local}{local[34]} responded to cluster state commit [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,529][DEBUG][org.elasticsearch.discovery.zen.publish] node {oojjU1iMQlC8XbF4Nimgag}{Oo8VgYPoS4S9_O-x1w8aeA}{local}{local[31]} responded to cluster state commit [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,544][DEBUG][org.elasticsearch.discovery.zen.publish] failed to commit cluster state (uuid [51O6BRR7TbuOfjllW5_2bw], version [0]) to {wlbCFMEDSWKjNfrDSuVMyg}{xcoNsoMbTiGAbBUhUMaZPw}{local}{local[33]}%0D%0Aorg.elasticsearch.transport.NodeDisconnectedException: [][local[33]][internal:discovery/zen/publish/commit] disconnected%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,544][DEBUG][org.elasticsearch.discovery.zen.publish] failed to send cluster state to {c867bXSSTi6rmXrnpL4Dlw}{ZJ3bCLPHSEG79RAhoXWBfg}{local}{local[39]}%0D%0Aorg.elasticsearch.transport.NodeDisconnectedException: [][local[39]][internal:discovery/zen/publish/send] disconnected%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,545][TRACE][org.elasticsearch.discovery.zen.publish] master node {c867bXSSTi6rmXrnpL4Dlw}{ZJ3bCLPHSEG79RAhoXWBfg}{local}{local[39]} failed to ack cluster state version [0]. processing ... (current pending [2], needed [0])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,545][DEBUG][org.elasticsearch.discovery.zen.publish] failed to send cluster state to {8bdBf1v0RjyRenZ9Amc4yg}{D1Zc68uYTWumf5wDEHxedw}{local}{local[40]}%0D%0Aorg.elasticsearch.transport.NodeDisconnectedException: [][local[40]][internal:discovery/zen/publish/send] disconnected%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,545][TRACE][org.elasticsearch.discovery.zen.publish] master node {8bdBf1v0RjyRenZ9Amc4yg}{D1Zc68uYTWumf5wDEHxedw}{local}{local[40]} failed to ack cluster state version [0]. processing ... (current pending [1], needed [0])%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPublishingWithSendingErrors(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1473935846422,
  "executionTime": 127
 }
]

[
 "TEST_STARTED",
 "ID#testFailToPublishWithLessThanMinMasterNodes(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,554][INFO ][org.elasticsearch.test.transport] publish_address {local[42]}, bound_addresses {local[42]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:26,571][INFO ][org.elasticsearch.test.transport] publish_address {local[43]}, bound_addresses {local[43]}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailToPublishWithLessThanMinMasterNodes(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1473935846550,
  "executionTime": 36
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
  "startTimestamp": 1473935843102,
  "executionTime": 3487
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
   "displayName": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
   "children": [
    {
     "id": "ID#testIndexTemplateWithValidateEmptyMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "displayName": "testIndexTemplateWithValidateEmptyMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "methodName": "testIndexTemplateWithValidateEmptyMapping",
     "className": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
     "children": []
    },
    {
     "id": "ID#testIndexTemplateWithValidateMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "displayName": "testIndexTemplateWithValidateMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "methodName": "testIndexTemplateWithValidateMapping",
     "className": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
     "children": []
    },
    {
     "id": "ID#testIndexTemplateValidationAccumulatesValidationErrors(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "displayName": "testIndexTemplateValidationAccumulatesValidationErrors(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "methodName": "testIndexTemplateValidationAccumulatesValidationErrors",
     "className": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
     "children": []
    },
    {
     "id": "ID#testBrokenMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "displayName": "testBrokenMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "methodName": "testBrokenMapping",
     "className": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
     "children": []
    },
    {
     "id": "ID#testAliasInvalidFilterInvalidJson(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "displayName": "testAliasInvalidFilterInvalidJson(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "methodName": "testAliasInvalidFilterInvalidJson",
     "className": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
     "children": []
    },
    {
     "id": "ID#testIndexTemplateWithAliasNameEqualToTemplatePattern(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "displayName": "testIndexTemplateWithAliasNameEqualToTemplatePattern(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "methodName": "testIndexTemplateWithAliasNameEqualToTemplatePattern",
     "className": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
     "children": []
    },
    {
     "id": "ID#testIndexTemplateInvalidNumberOfShards(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "displayName": "testIndexTemplateInvalidNumberOfShards(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "methodName": "testIndexTemplateInvalidNumberOfShards",
     "className": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
     "children": []
    },
    {
     "id": "ID#testBlankMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "displayName": "testBlankMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "methodName": "testBlankMapping",
     "className": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935846615
 }
]

[
 "TEST_STARTED",
 "ID#testIndexTemplateWithValidateEmptyMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:37:26,680][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:37:26,713][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:37:26,713][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:37:26,717][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[15428], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:37:26,720][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:37:26,720][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:37:26,950][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:37:26,950][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:37:26,951][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[44]}, bound_addresses {local[44]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:37:26,998][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{V3sgoqKNRueJU-PUv8eukQ}{gYoz0g8NSIqf17r4fKW7Eg}{local}{local[44]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:37:27,003][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:37:27,058][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:37:27,109][INFO ][org.elasticsearch.action.admin.indices.template.put] [node_s_0] [MetaDataIndexTemplateServiceTests#testIndexTemplateWithValidateEmptyMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexTemplateWithValidateEmptyMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
  "startTimestamp": 1473935846640,
  "executionTime": 470
 }
]

[
 "TEST_STARTED",
 "ID#testIndexTemplateWithValidateMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:37:27,120][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [4thM-bJBRlWA2UPLf0hyeg] The [string] field is deprecated, please use [text] or [keyword] instead on [field2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:37:27,121][INFO ][org.elasticsearch.action.admin.indices.template.put] [node_s_0] [MetaDataIndexTemplateServiceTests#testIndexTemplateWithValidateMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexTemplateWithValidateMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
  "startTimestamp": 1473935847111,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testIndexTemplateValidationAccumulatesValidationErrors(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:37:27,147][INFO ][org.elasticsearch.action.admin.indices.template.put] [node_s_0] [MetaDataIndexTemplateServiceTests#testIndexTemplateValidationAccumulatesValidationErrors]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexTemplateValidationAccumulatesValidationErrors(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
  "startTimestamp": 1473935847122,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testBrokenMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:37:27,157][INFO ][org.elasticsearch.action.admin.indices.template.put] [node_s_0] [MetaDataIndexTemplateServiceTests#testBrokenMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBrokenMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
  "startTimestamp": 1473935847149,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testAliasInvalidFilterInvalidJson(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:37:27,163][INFO ][org.elasticsearch.action.admin.indices.template.put] [node_s_0] [MetaDataIndexTemplateServiceTests#testAliasInvalidFilterInvalidJson]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAliasInvalidFilterInvalidJson(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
  "startTimestamp": 1473935847159,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testIndexTemplateWithAliasNameEqualToTemplatePattern(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:37:27,169][INFO ][org.elasticsearch.action.admin.indices.template.put] [node_s_0] [MetaDataIndexTemplateServiceTests#testIndexTemplateWithAliasNameEqualToTemplatePattern]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexTemplateWithAliasNameEqualToTemplatePattern(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
  "startTimestamp": 1473935847165,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testIndexTemplateInvalidNumberOfShards(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:37:27,175][INFO ][org.elasticsearch.action.admin.indices.template.put] [node_s_0] [MetaDataIndexTemplateServiceTests#testIndexTemplateInvalidNumberOfShards]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexTemplateInvalidNumberOfShards(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
  "startTimestamp": 1473935847171,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testBlankMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:37:27,188][INFO ][org.elasticsearch.action.admin.indices.template.put] [node_s_0] [MetaDataIndexTemplateServiceTests#testBlankMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBlankMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
  "startTimestamp": 1473935847176,
  "executionTime": 13
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:37:27,189][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:37:27,190][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:37:27,191][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:37:27,193][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
  "startTimestamp": 1473935846615,
  "executionTime": 585
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.CustomBoostMappingTests",
   "displayName": "org.elasticsearch.index.mapper.CustomBoostMappingTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.CustomBoostMappingTests",
   "children": [
    {
     "id": "ID#testBackCompatFieldMappingBoostValues(org.elasticsearch.index.mapper.CustomBoostMappingTests)",
     "displayName": "testBackCompatFieldMappingBoostValues(org.elasticsearch.index.mapper.CustomBoostMappingTests)",
     "methodName": "testBackCompatFieldMappingBoostValues",
     "className": "org.elasticsearch.index.mapper.CustomBoostMappingTests",
     "children": []
    },
    {
     "id": "ID#testBackCompatCustomBoostValues(org.elasticsearch.index.mapper.CustomBoostMappingTests)",
     "displayName": "testBackCompatCustomBoostValues(org.elasticsearch.index.mapper.CustomBoostMappingTests)",
     "methodName": "testBackCompatCustomBoostValues",
     "className": "org.elasticsearch.index.mapper.CustomBoostMappingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935847325
 }
]

[
 "TEST_STARTED",
 "ID#testBackCompatFieldMappingBoostValues(org.elasticsearch.index.mapper.CustomBoostMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:37:27,399][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:37:27,454][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:37:27,454][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:37:27,459][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[15428], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:37:27,463][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:37:27,463][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:37:27,680][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:37:27,682][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:37:27,682][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[45]}, bound_addresses {local[45]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:37:27,763][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{vE9G7M93QgaGBP7t8IkqKA}{vwgjpqkhS-m2tbz3s_yYtA}{local}{local[45]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:37:27,764][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:37:27,824][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:37:27,855][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:37:27,969][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:37:28,761][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [text] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:37:29,223][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[text][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:37:29,353][INFO ][org.elasticsearch.index.mapper] [node_s_0] [text] [CustomBoostMappingTests#testBackCompatFieldMappingBoostValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBackCompatFieldMappingBoostValues(org.elasticsearch.index.mapper.CustomBoostMappingTests)",
  "startTimestamp": 1473935847381,
  "executionTime": 2091
 }
]

[
 "TEST_STARTED",
 "ID#testBackCompatCustomBoostValues(org.elasticsearch.index.mapper.CustomBoostMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:37:29,482][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:37:29,610][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:37:29,629][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:37:29,629][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:37:29,629][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:37:29,629][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:37:29,630][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:37:29,630][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:37:29,630][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:37:29,633][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CustomBoostMappingTests#testBackCompatCustomBoostValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBackCompatCustomBoostValues(org.elasticsearch.index.mapper.CustomBoostMappingTests)",
  "startTimestamp": 1473935849472,
  "executionTime": 231
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:37:29,704][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:37:29,704][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:37:29,704][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:37:29,707][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.CustomBoostMappingTests",
  "startTimestamp": 1473935847325,
  "executionTime": 2394
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.gateway.DanglingIndicesStateTests",
   "displayName": "org.elasticsearch.gateway.DanglingIndicesStateTests",
   "methodName": null,
   "className": "org.elasticsearch.gateway.DanglingIndicesStateTests",
   "children": [
    {
     "id": "ID#testCleanupWhenEmpty(org.elasticsearch.gateway.DanglingIndicesStateTests)",
     "displayName": "testCleanupWhenEmpty(org.elasticsearch.gateway.DanglingIndicesStateTests)",
     "methodName": "testCleanupWhenEmpty",
     "className": "org.elasticsearch.gateway.DanglingIndicesStateTests",
     "children": []
    },
    {
     "id": "ID#testInvalidIndexFolder(org.elasticsearch.gateway.DanglingIndicesStateTests)",
     "displayName": "testInvalidIndexFolder(org.elasticsearch.gateway.DanglingIndicesStateTests)",
     "methodName": "testInvalidIndexFolder",
     "className": "org.elasticsearch.gateway.DanglingIndicesStateTests",
     "children": []
    },
    {
     "id": "ID#testDanglingIndicesNotImportedWhenTombstonePresent(org.elasticsearch.gateway.DanglingIndicesStateTests)",
     "displayName": "testDanglingIndicesNotImportedWhenTombstonePresent(org.elasticsearch.gateway.DanglingIndicesStateTests)",
     "methodName": "testDanglingIndicesNotImportedWhenTombstonePresent",
     "className": "org.elasticsearch.gateway.DanglingIndicesStateTests",
     "children": []
    },
    {
     "id": "ID#testDanglingProcessing(org.elasticsearch.gateway.DanglingIndicesStateTests)",
     "displayName": "testDanglingProcessing(org.elasticsearch.gateway.DanglingIndicesStateTests)",
     "methodName": "testDanglingProcessing",
     "className": "org.elasticsearch.gateway.DanglingIndicesStateTests",
     "children": []
    },
    {
     "id": "ID#testDanglingIndicesDiscovery(org.elasticsearch.gateway.DanglingIndicesStateTests)",
     "displayName": "testDanglingIndicesDiscovery(org.elasticsearch.gateway.DanglingIndicesStateTests)",
     "methodName": "testDanglingIndicesDiscovery",
     "className": "org.elasticsearch.gateway.DanglingIndicesStateTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935849787
 }
]

[
 "TEST_STARTED",
 "ID#testCleanupWhenEmpty(org.elasticsearch.gateway.DanglingIndicesStateTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:29,957][INFO ][org.elasticsearch.env    ] [uTSgqZG] using [3] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:29,966][INFO ][org.elasticsearch.env    ] [uTSgqZG] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCleanupWhenEmpty(org.elasticsearch.gateway.DanglingIndicesStateTests)",
  "startTimestamp": 1473935849831,
  "executionTime": 163
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidIndexFolder(org.elasticsearch.gateway.DanglingIndicesStateTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:30,049][INFO ][org.elasticsearch.env    ] [v1YhHwt] using [2] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:30,050][INFO ][org.elasticsearch.env    ] [v1YhHwt] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidIndexFolder(org.elasticsearch.gateway.DanglingIndicesStateTests)",
  "startTimestamp": 1473935849994,
  "executionTime": 195
 }
]

[
 "TEST_STARTED",
 "ID#testDanglingIndicesNotImportedWhenTombstonePresent(org.elasticsearch.gateway.DanglingIndicesStateTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:30,279][INFO ][org.elasticsearch.env    ] [ZBkS00m] using [3] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:30,279][INFO ][org.elasticsearch.env    ] [ZBkS00m] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:30,385][WARN ][org.elasticsearch.gateway] [node_s_0] [[test1/test1UUID]] can not be imported as a dangling index, as an index with the same name and UUID exist in the index tombstones.  This situation is likely caused by copying over the data directory for an index that was previously deleted.%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDanglingIndicesNotImportedWhenTombstonePresent(org.elasticsearch.gateway.DanglingIndicesStateTests)",
  "startTimestamp": 1473935850189,
  "executionTime": 196
 }
]

[
 "TEST_STARTED",
 "ID#testDanglingProcessing(org.elasticsearch.gateway.DanglingIndicesStateTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:30,483][INFO ][org.elasticsearch.env    ] [uf-6NzI] using [2] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:30,483][INFO ][org.elasticsearch.env    ] [uf-6NzI] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:30,516][INFO ][org.elasticsearch.gateway] [node_s_0] [[test1/test1UUID]] dangling index exists on local file system, but not in cluster metadata, auto import to cluster state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:30,520][INFO ][org.elasticsearch.gateway] [node_s_0] [[test1/test1UUID]] dangling index exists on local file system, but not in cluster metadata, auto import to cluster state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:30,549][INFO ][org.elasticsearch.gateway] [node_s_0] [[test1/test1UUID]] dangling index exists on local file system, but not in cluster metadata, auto import to cluster state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:30,554][INFO ][org.elasticsearch.gateway] [node_s_0] [[test1/test1UUID]] dangling index exists on local file system, but not in cluster metadata, auto import to cluster state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:30,558][INFO ][org.elasticsearch.gateway] [node_s_0] [[test1/test1UUID]] dangling index exists on local file system, but not in cluster metadata, auto import to cluster state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:30,563][INFO ][org.elasticsearch.gateway] [node_s_0] [[test1/test1UUID]] dangling index exists on local file system, but not in cluster metadata, auto import to cluster state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:30,582][INFO ][org.elasticsearch.gateway] [node_s_0] [[test1/test1UUID]] dangling index exists on local file system, but not in cluster metadata, auto import to cluster state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:30,586][INFO ][org.elasticsearch.gateway] [node_s_0] [[test1/test1UUID]] dangling index exists on local file system, but not in cluster metadata, auto import to cluster state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:30,592][INFO ][org.elasticsearch.gateway] [node_s_0] [[test1/test1UUID]] dangling index exists on local file system, but not in cluster metadata, auto import to cluster state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:30,597][INFO ][org.elasticsearch.gateway] [node_s_0] [[test1/test1UUID]] dangling index exists on local file system, but not in cluster metadata, auto import to cluster state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:30,602][INFO ][org.elasticsearch.gateway] [node_s_0] [[test1/test1UUID]] dangling index exists on local file system, but not in cluster metadata, auto import to cluster state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDanglingProcessing(org.elasticsearch.gateway.DanglingIndicesStateTests)",
  "startTimestamp": 1473935850386,
  "executionTime": 257
 }
]

[
 "TEST_STARTED",
 "ID#testDanglingIndicesDiscovery(org.elasticsearch.gateway.DanglingIndicesStateTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:30,714][INFO ][org.elasticsearch.env    ] [FxYHzxr] using [2] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:30,715][INFO ][org.elasticsearch.env    ] [FxYHzxr] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:37:30,755][INFO ][org.elasticsearch.gateway] [node_s_0] [[test1/test1UUID]] dangling index exists on local file system, but not in cluster metadata, auto import to cluster state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDanglingIndicesDiscovery(org.elasticsearch.gateway.DanglingIndicesStateTests)",
  "startTimestamp": 1473935850647,
  "executionTime": 109
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.gateway.DanglingIndicesStateTests",
  "startTimestamp": 1473935849787,
  "executionTime": 1048
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
   "displayName": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
   "children": [
    {
     "id": "ID#testInvalidDistanceUnit(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testInvalidDistanceUnit(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testInvalidDistanceUnit",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonCoerceFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testFromJsonCoerceFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testFromJsonCoerceFails",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testIgnoreUnmapped(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testIgnoreUnmapped",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testInvalidGeoDistance(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testInvalidGeoDistance(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testInvalidGeoDistance",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testNoPoint(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testNoPoint(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testNoPoint",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testNestedRangeQuery(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testNestedRangeQuery(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testNestedRangeQuery",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonIgnoreMalformedFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testFromJsonIgnoreMalformedFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testFromJsonIgnoreMalformedFails",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testInvalidTo(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testInvalidTo(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testInvalidTo",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testInvalidFrom(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testInvalidFrom(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testInvalidFrom",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testNullFieldName(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testNullFieldName(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testNullFieldName",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonOptimizeBboxFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testFromJsonOptimizeBboxFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testFromJsonOptimizeBboxFails",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935850878
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidDistanceUnit(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:37:30,909][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{HLlZ_hoNQ8KEH01TKmtgSg}{local}{local[20]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:37:30,923][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:37:30,923][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:37:30,952][WARN ][org.elasticsearch.deprecation.index.mapper]  [rp] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:37:30,952][WARN ][org.elasticsearch.deprecation.index.mapper]  [rp] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:37:30,952][WARN ][org.elasticsearch.deprecation.index.mapper]  [rp] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:37:30,954][WARN ][org.elasticsearch.deprecation.index.mapper]  [rp] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:37:30,954][WARN ][org.elasticsearch.deprecation.index.mapper]  [rp] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:37:30,954][WARN ][org.elasticsearch.deprecation.index.mapper]  [rp] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:37:30,958][WARN ][org.elasticsearch.deprecation.index.mapper]  [rp] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:37:30,958][WARN ][org.elasticsearch.deprecation.index.mapper]  [rp] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:37:30,958][WARN ][org.elasticsearch.deprecation.index.mapper]  [rp] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:37:30,961][WARN ][org.elasticsearch.deprecation.index.mapper]  [rp] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:37:30,969][WARN ][org.elasticsearch.deprecation.index.mapper]  [rp] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:37:30,969][WARN ][org.elasticsearch.deprecation.index.mapper]  [rp] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:37:30,974][WARN ][org.elasticsearch.deprecation.index.mapper]  [rp] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:37:30,974][WARN ][org.elasticsearch.deprecation.index.mapper]  [rp] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:37:30,974][WARN ][org.elasticsearch.deprecation.index.mapper]  [rp] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:37:30,984][WARN ][org.elasticsearch.deprecation.index.mapper]  [rp] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:37:30,984][WARN ][org.elasticsearch.deprecation.index.mapper]  [rp] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:37:30,984][WARN ][org.elasticsearch.deprecation.index.mapper]  [rp] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidDistanceUnit(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1473935850902,
  "executionTime": 334
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1473935851236,
  "executionTime": 338
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1473935851575,
  "executionTime": 98
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonCoerceFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonCoerceFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1473935851673,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1473935851691,
  "executionTime": 135
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1473935851827,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidGeoDistance(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidGeoDistance(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1473935851833,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testNoPoint(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoPoint(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1473935851849,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1473935851852,
  "executionTime": 45
 }
]

[
 "TEST_STARTED",
 "ID#testNestedRangeQuery(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedRangeQuery(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1473935851897,
  "executionTime": 47
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonIgnoreMalformedFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonIgnoreMalformedFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1473935851945,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1473935851950,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidTo(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidTo(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1473935851960,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1473935851964,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1473935851969,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidFrom(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidFrom(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1473935851973,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testNullFieldName(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullFieldName(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1473935851977,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonOptimizeBboxFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonOptimizeBboxFails(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1473935851980,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1473935851984,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoDistanceRangeQueryTests)",
  "startTimestamp": 1473935852021,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.GeoDistanceRangeQueryTests",
  "startTimestamp": 1473935850878,
  "executionTime": 1154
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.analysis.AnalysisModuleTests",
   "displayName": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
   "children": [
    {
     "id": "ID#testDeprecatedPositionOffsetGap(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "displayName": "testDeprecatedPositionOffsetGap(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "methodName": "testDeprecatedPositionOffsetGap",
     "className": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
     "children": []
    },
    {
     "id": "ID#testAnalyzerAlias(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "displayName": "testAnalyzerAlias(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "methodName": "testAnalyzerAlias",
     "className": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
     "children": []
    },
    {
     "id": "ID#testDefaultFactoryTokenFilters(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "displayName": "testDefaultFactoryTokenFilters(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "methodName": "testDefaultFactoryTokenFilters",
     "className": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
     "children": []
    },
    {
     "id": "ID#testSimpleConfigurationJson(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "displayName": "testSimpleConfigurationJson(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "methodName": "testSimpleConfigurationJson",
     "className": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
     "children": []
    },
    {
     "id": "ID#testVersionedAnalyzers(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "displayName": "testVersionedAnalyzers(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "methodName": "testVersionedAnalyzers",
     "className": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
     "children": []
    },
    {
     "id": "ID#testAnalyzerAliasMoreThanOnce(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "displayName": "testAnalyzerAliasMoreThanOnce(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "methodName": "testAnalyzerAliasMoreThanOnce",
     "className": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
     "children": []
    },
    {
     "id": "ID#testAnalyzerAliasDefault(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "displayName": "testAnalyzerAliasDefault(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "methodName": "testAnalyzerAliasDefault",
     "className": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterHunspellDictionary(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "displayName": "testRegisterHunspellDictionary(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "methodName": "testRegisterHunspellDictionary",
     "className": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
     "children": []
    },
    {
     "id": "ID#testUnderscoreInAnalyzerName(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "displayName": "testUnderscoreInAnalyzerName(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "methodName": "testUnderscoreInAnalyzerName",
     "className": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
     "children": []
    },
    {
     "id": "ID#testWordListPath(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "displayName": "testWordListPath(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "methodName": "testWordListPath",
     "className": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
     "children": []
    },
    {
     "id": "ID#testAnalyzerAliasNotAllowedPost5x(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "displayName": "testAnalyzerAliasNotAllowedPost5x(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "methodName": "testAnalyzerAliasNotAllowedPost5x",
     "className": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
     "children": []
    },
    {
     "id": "ID#testUnderscoreInAnalyzerNameAlias(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "displayName": "testUnderscoreInAnalyzerNameAlias(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "methodName": "testUnderscoreInAnalyzerNameAlias",
     "className": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
     "children": []
    },
    {
     "id": "ID#testAnalyzerAliasReferencesAlias(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "displayName": "testAnalyzerAliasReferencesAlias(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "methodName": "testAnalyzerAliasReferencesAlias",
     "className": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
     "children": []
    },
    {
     "id": "ID#testSimpleConfigurationYaml(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "displayName": "testSimpleConfigurationYaml(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
     "methodName": "testSimpleConfigurationYaml",
     "className": "org.elasticsearch.indices.analysis.AnalysisModuleTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935852078
 }
]

[
 "TEST_STARTED",
 "ID#testDeprecatedPositionOffsetGap(org.elasticsearch.indices.analysis.AnalysisModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeprecatedPositionOffsetGap(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
  "startTimestamp": 1473935852132,
  "executionTime": 112
 }
]

[
 "TEST_STARTED",
 "ID#testAnalyzerAlias(org.elasticsearch.indices.analysis.AnalysisModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:37:32,256][WARN ][org.elasticsearch.deprecation.index.analysis]  [test] setting [index.analysis.analyzer.foobar.alias] is only allowed on index [test] because it was created before 5.x; analyzer aliases can no longer be created on new indices.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:37:32,258][WARN ][org.elasticsearch.deprecation.index.analysis]  [test] setting [index.analysis.analyzer.foobar_search.alias] is only allowed on index [test] because it was created before 5.x; analyzer aliases can no longer be created on new indices.%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAnalyzerAlias(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
  "startTimestamp": 1473935852245,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultFactoryTokenFilters(org.elasticsearch.indices.analysis.AnalysisModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultFactoryTokenFilters(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
  "startTimestamp": 1473935852259,
  "executionTime": 46
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleConfigurationJson(org.elasticsearch.indices.analysis.AnalysisModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleConfigurationJson(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
  "startTimestamp": 1473935852305,
  "executionTime": 60
 }
]

[
 "TEST_STARTED",
 "ID#testVersionedAnalyzers(org.elasticsearch.indices.analysis.AnalysisModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionedAnalyzers(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
  "startTimestamp": 1473935852368,
  "executionTime": 116
 }
]

[
 "TEST_STARTED",
 "ID#testAnalyzerAliasMoreThanOnce(org.elasticsearch.indices.analysis.AnalysisModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:37:32,509][WARN ][org.elasticsearch.deprecation.index.analysis]  [test] setting [index.analysis.analyzer.foobar.alias] is only allowed on index [test] because it was created before 5.x; analyzer aliases can no longer be created on new indices.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:37:32,510][WARN ][org.elasticsearch.deprecation.index.analysis]  [test] setting [index.analysis.analyzer.foobar1.alias] is only allowed on index [test] because it was created before 5.x; analyzer aliases can no longer be created on new indices.%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAnalyzerAliasMoreThanOnce(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
  "startTimestamp": 1473935852484,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testAnalyzerAliasDefault(org.elasticsearch.indices.analysis.AnalysisModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:37:32,521][WARN ][org.elasticsearch.deprecation.index.analysis]  [test] setting [index.analysis.analyzer.foobar.alias] is only allowed on index [test] because it was created before 5.x; analyzer aliases can no longer be created on new indices.%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAnalyzerAliasDefault(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
  "startTimestamp": 1473935852510,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterHunspellDictionary(org.elasticsearch.indices.analysis.AnalysisModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterHunspellDictionary(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
  "startTimestamp": 1473935852521,
  "executionTime": 2039
 }
]

[
 "TEST_STARTED",
 "ID#testUnderscoreInAnalyzerName(org.elasticsearch.indices.analysis.AnalysisModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnderscoreInAnalyzerName(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
  "startTimestamp": 1473935854561,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testWordListPath(org.elasticsearch.indices.analysis.AnalysisModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWordListPath(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
  "startTimestamp": 1473935854573,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testAnalyzerAliasNotAllowedPost5x(org.elasticsearch.indices.analysis.AnalysisModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAnalyzerAliasNotAllowedPost5x(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
  "startTimestamp": 1473935854592,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testUnderscoreInAnalyzerNameAlias(org.elasticsearch.indices.analysis.AnalysisModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:37:34,625][WARN ][org.elasticsearch.deprecation.index.analysis]  [test] setting [index.analysis.analyzer.valid_name.alias] is only allowed on index [test] because it was created before 5.x; analyzer aliases can no longer be created on new indices.%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnderscoreInAnalyzerNameAlias(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
  "startTimestamp": 1473935854614,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testAnalyzerAliasReferencesAlias(org.elasticsearch.indices.analysis.AnalysisModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:37:34,638][WARN ][org.elasticsearch.deprecation.index.analysis]  [test] setting [index.analysis.analyzer.foobar.alias] is only allowed on index [test] because it was created before 5.x; analyzer aliases can no longer be created on new indices.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:37:34,638][WARN ][org.elasticsearch.deprecation.index.analysis]  [test] setting [index.analysis.analyzer.foobar_search.alias] is only allowed on index [test] because it was created before 5.x; analyzer aliases can no longer be created on new indices.%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAnalyzerAliasReferencesAlias(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
  "startTimestamp": 1473935854627,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleConfigurationYaml(org.elasticsearch.indices.analysis.AnalysisModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleConfigurationYaml(org.elasticsearch.indices.analysis.AnalysisModuleTests)",
  "startTimestamp": 1473935854639,
  "executionTime": 39
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.analysis.AnalysisModuleTests",
  "startTimestamp": 1473935852078,
  "executionTime": 2627
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.gateway.MetaDataStateFormatTests",
   "displayName": "org.elasticsearch.gateway.MetaDataStateFormatTests",
   "methodName": null,
   "className": "org.elasticsearch.gateway.MetaDataStateFormatTests",
   "children": [
    {
     "id": "ID#testCorruption(org.elasticsearch.gateway.MetaDataStateFormatTests)",
     "displayName": "testCorruption(org.elasticsearch.gateway.MetaDataStateFormatTests)",
     "methodName": "testCorruption",
     "className": "org.elasticsearch.gateway.MetaDataStateFormatTests",
     "children": []
    },
    {
     "id": "ID#testVersionMismatch(org.elasticsearch.gateway.MetaDataStateFormatTests)",
     "displayName": "testVersionMismatch(org.elasticsearch.gateway.MetaDataStateFormatTests)",
     "methodName": "testVersionMismatch",
     "className": "org.elasticsearch.gateway.MetaDataStateFormatTests",
     "children": []
    },
    {
     "id": "ID#testReadClusterState(org.elasticsearch.gateway.MetaDataStateFormatTests)",
     "displayName": "testReadClusterState(org.elasticsearch.gateway.MetaDataStateFormatTests)",
     "methodName": "testReadClusterState",
     "className": "org.elasticsearch.gateway.MetaDataStateFormatTests",
     "children": []
    },
    {
     "id": "ID#testReadWriteState(org.elasticsearch.gateway.MetaDataStateFormatTests)",
     "displayName": "testReadWriteState(org.elasticsearch.gateway.MetaDataStateFormatTests)",
     "methodName": "testReadWriteState",
     "className": "org.elasticsearch.gateway.MetaDataStateFormatTests",
     "children": []
    },
    {
     "id": "ID#testLoadState(org.elasticsearch.gateway.MetaDataStateFormatTests)",
     "displayName": "testLoadState(org.elasticsearch.gateway.MetaDataStateFormatTests)",
     "methodName": "testLoadState",
     "className": "org.elasticsearch.gateway.MetaDataStateFormatTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935854773
 }
]

[
 "TEST_STARTED",
 "ID#testCorruption(org.elasticsearch.gateway.MetaDataStateFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCorruption(org.elasticsearch.gateway.MetaDataStateFormatTests)",
  "startTimestamp": 1473935854820,
  "executionTime": 101
 }
]

[
 "TEST_STARTED",
 "ID#testVersionMismatch(org.elasticsearch.gateway.MetaDataStateFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionMismatch(org.elasticsearch.gateway.MetaDataStateFormatTests)",
  "startTimestamp": 1473935854921,
  "executionTime": 209
 }
]

[
 "TEST_STARTED",
 "ID#testReadClusterState(org.elasticsearch.gateway.MetaDataStateFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadClusterState(org.elasticsearch.gateway.MetaDataStateFormatTests)",
  "startTimestamp": 1473935855130,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testReadWriteState(org.elasticsearch.gateway.MetaDataStateFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadWriteState(org.elasticsearch.gateway.MetaDataStateFormatTests)",
  "startTimestamp": 1473935855145,
  "executionTime": 41
 }
]

[
 "TEST_STARTED",
 "ID#testLoadState(org.elasticsearch.gateway.MetaDataStateFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLoadState(org.elasticsearch.gateway.MetaDataStateFormatTests)",
  "startTimestamp": 1473935855187,
  "executionTime": 48
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.gateway.MetaDataStateFormatTests",
  "startTimestamp": 1473935854773,
  "executionTime": 486
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.ingest.IngestActionFilterTests",
   "displayName": "org.elasticsearch.action.ingest.IngestActionFilterTests",
   "methodName": null,
   "className": "org.elasticsearch.action.ingest.IngestActionFilterTests",
   "children": [
    {
     "id": "ID#testApplyWithBulkRequest(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "displayName": "testApplyWithBulkRequest(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "methodName": "testApplyWithBulkRequest",
     "className": "org.elasticsearch.action.ingest.IngestActionFilterTests",
     "children": []
    },
    {
     "id": "ID#testApplyBulkNoPipelineId(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "displayName": "testApplyBulkNoPipelineId(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "methodName": "testApplyBulkNoPipelineId",
     "className": "org.elasticsearch.action.ingest.IngestActionFilterTests",
     "children": []
    },
    {
     "id": "ID#testApplyNoPipelineId(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "displayName": "testApplyNoPipelineId(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "methodName": "testApplyNoPipelineId",
     "className": "org.elasticsearch.action.ingest.IngestActionFilterTests",
     "children": []
    },
    {
     "id": "ID#testIndexApiSinglePipelineExecution(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "displayName": "testIndexApiSinglePipelineExecution(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "methodName": "testIndexApiSinglePipelineExecution",
     "className": "org.elasticsearch.action.ingest.IngestActionFilterTests",
     "children": []
    },
    {
     "id": "ID#testApplyIngestIdViaRequestParam(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "displayName": "testApplyIngestIdViaRequestParam(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "methodName": "testApplyIngestIdViaRequestParam",
     "className": "org.elasticsearch.action.ingest.IngestActionFilterTests",
     "children": []
    },
    {
     "id": "ID#testApplyExecuted(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "displayName": "testApplyExecuted(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "methodName": "testApplyExecuted",
     "className": "org.elasticsearch.action.ingest.IngestActionFilterTests",
     "children": []
    },
    {
     "id": "ID#testApplyFailed(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "displayName": "testApplyFailed(org.elasticsearch.action.ingest.IngestActionFilterTests)",
     "methodName": "testApplyFailed",
     "className": "org.elasticsearch.action.ingest.IngestActionFilterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935855337
 }
]

[
 "TEST_STARTED",
 "ID#testApplyWithBulkRequest(org.elasticsearch.action.ingest.IngestActionFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testApplyWithBulkRequest(org.elasticsearch.action.ingest.IngestActionFilterTests)",
  "startTimestamp": 1473935855357,
  "executionTime": 1975
 }
]

[
 "TEST_STARTED",
 "ID#testApplyBulkNoPipelineId(org.elasticsearch.action.ingest.IngestActionFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testApplyBulkNoPipelineId(org.elasticsearch.action.ingest.IngestActionFilterTests)",
  "startTimestamp": 1473935857332,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testApplyNoPipelineId(org.elasticsearch.action.ingest.IngestActionFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testApplyNoPipelineId(org.elasticsearch.action.ingest.IngestActionFilterTests)",
  "startTimestamp": 1473935857336,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIndexApiSinglePipelineExecution(org.elasticsearch.action.ingest.IngestActionFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexApiSinglePipelineExecution(org.elasticsearch.action.ingest.IngestActionFilterTests)",
  "startTimestamp": 1473935857340,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testApplyIngestIdViaRequestParam(org.elasticsearch.action.ingest.IngestActionFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testApplyIngestIdViaRequestParam(org.elasticsearch.action.ingest.IngestActionFilterTests)",
  "startTimestamp": 1473935857364,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testApplyExecuted(org.elasticsearch.action.ingest.IngestActionFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testApplyExecuted(org.elasticsearch.action.ingest.IngestActionFilterTests)",
  "startTimestamp": 1473935857368,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testApplyFailed(org.elasticsearch.action.ingest.IngestActionFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testApplyFailed(org.elasticsearch.action.ingest.IngestActionFilterTests)",
  "startTimestamp": 1473935857373,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.ingest.IngestActionFilterTests",
  "startTimestamp": 1473935855337,
  "executionTime": 2047
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.serialization.ClusterStateToStringTests",
   "displayName": "org.elasticsearch.cluster.serialization.ClusterStateToStringTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.serialization.ClusterStateToStringTests",
   "children": [
    {
     "id": "ID#testClusterStateSerialization(org.elasticsearch.cluster.serialization.ClusterStateToStringTests)",
     "displayName": "testClusterStateSerialization(org.elasticsearch.cluster.serialization.ClusterStateToStringTests)",
     "methodName": "testClusterStateSerialization",
     "className": "org.elasticsearch.cluster.serialization.ClusterStateToStringTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935857429
 }
]

[
 "TEST_STARTED",
 "ID#testClusterStateSerialization(org.elasticsearch.cluster.serialization.ClusterStateToStringTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterStateSerialization(org.elasticsearch.cluster.serialization.ClusterStateToStringTests)",
  "startTimestamp": 1473935857470,
  "executionTime": 49
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.serialization.ClusterStateToStringTests",
  "startTimestamp": 1473935857429,
  "executionTime": 93
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.StatsTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.StatsTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.StatsTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.StatsTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.StatsTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.StatsTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.StatsTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.StatsTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.StatsTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.StatsTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.StatsTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.StatsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935857583
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:37,609][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{5BnbPIm_S3CMzwELGe-v0w}{local}{local[22]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.StatsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.StatsTests)",
  "startTimestamp": 1473935857626,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.StatsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.StatsTests)",
  "startTimestamp": 1473935857629,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.StatsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.StatsTests)",
  "startTimestamp": 1473935857632,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.StatsTests",
  "startTimestamp": 1473935857583,
  "executionTime": 58
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.IndicesOptionsTests",
   "displayName": "org.elasticsearch.action.support.IndicesOptionsTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.IndicesOptionsTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.action.support.IndicesOptionsTests)",
     "displayName": "testSerialization(org.elasticsearch.action.support.IndicesOptionsTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.action.support.IndicesOptionsTests",
     "children": []
    },
    {
     "id": "ID#testFromOptions(org.elasticsearch.action.support.IndicesOptionsTests)",
     "displayName": "testFromOptions(org.elasticsearch.action.support.IndicesOptionsTests)",
     "methodName": "testFromOptions",
     "className": "org.elasticsearch.action.support.IndicesOptionsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935857719
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.action.support.IndicesOptionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.action.support.IndicesOptionsTests)",
  "startTimestamp": 1473935857743,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromOptions(org.elasticsearch.action.support.IndicesOptionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromOptions(org.elasticsearch.action.support.IndicesOptionsTests)",
  "startTimestamp": 1473935857746,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.IndicesOptionsTests",
  "startTimestamp": 1473935857719,
  "executionTime": 32
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.PercentileRanksTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.PercentileRanksTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.PercentileRanksTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.PercentileRanksTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.PercentileRanksTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.PercentileRanksTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935857787
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:37:37,852][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{AKMlNDB0Rc-lpjFePoEqXw}{local}{local[23]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)",
  "startTimestamp": 1473935857878,
  "executionTime": 82
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)",
  "startTimestamp": 1473935857960,
  "executionTime": 113
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.PercentileRanksTests)",
  "startTimestamp": 1473935858074,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.PercentileRanksTests",
  "startTimestamp": 1473935857787,
  "executionTime": 295
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests",
   "displayName": "org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests",
   "children": [
    {
     "id": "ID#testInvalidParameters(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
     "displayName": "testInvalidParameters(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
     "methodName": "testInvalidParameters",
     "className": "org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935858153
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidParameters(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidParameters(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
  "startTimestamp": 1473935858180,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
  "startTimestamp": 1473935858192,
  "executionTime": 89
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
  "startTimestamp": 1473935858282,
  "executionTime": 146
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests)",
  "startTimestamp": 1473935858429,
  "executionTime": 20
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilderTests",
  "startTimestamp": 1473935858153,
  "executionTime": 299
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.apache.lucene.analysis.miscellaneous.TruncateTokenFilterTests",
   "displayName": "org.apache.lucene.analysis.miscellaneous.TruncateTokenFilterTests",
   "methodName": null,
   "className": "org.apache.lucene.analysis.miscellaneous.TruncateTokenFilterTests",
   "children": [
    {
     "id": "ID#testSimple(org.apache.lucene.analysis.miscellaneous.TruncateTokenFilterTests)",
     "displayName": "testSimple(org.apache.lucene.analysis.miscellaneous.TruncateTokenFilterTests)",
     "methodName": "testSimple",
     "className": "org.apache.lucene.analysis.miscellaneous.TruncateTokenFilterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935858530
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.apache.lucene.analysis.miscellaneous.TruncateTokenFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.apache.lucene.analysis.miscellaneous.TruncateTokenFilterTests)",
  "startTimestamp": 1473935858556,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.apache.lucene.analysis.miscellaneous.TruncateTokenFilterTests",
  "startTimestamp": 1473935858530,
  "executionTime": 37
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests",
   "displayName": "org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests",
   "children": [
    {
     "id": "ID#testParsingWithIndexSettings(org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests)",
     "displayName": "testParsingWithIndexSettings(org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests)",
     "methodName": "testParsingWithIndexSettings",
     "className": "org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests",
     "children": []
    },
    {
     "id": "ID#testConditionsParsing(org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests)",
     "displayName": "testConditionsParsing(org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests)",
     "methodName": "testConditionsParsing",
     "className": "org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935858619
 }
]

[
 "TEST_STARTED",
 "ID#testParsingWithIndexSettings(org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingWithIndexSettings(org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests)",
  "startTimestamp": 1473935858653,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testConditionsParsing(org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConditionsParsing(org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests)",
  "startTimestamp": 1473935858660,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.rollover.RolloverRequestTests",
  "startTimestamp": 1473935858619,
  "executionTime": 46
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.DocValueFormatTests",
   "displayName": "org.elasticsearch.search.DocValueFormatTests",
   "methodName": null,
   "className": "org.elasticsearch.search.DocValueFormatTests",
   "children": [
    {
     "id": "ID#testRawParse(org.elasticsearch.search.DocValueFormatTests)",
     "displayName": "testRawParse(org.elasticsearch.search.DocValueFormatTests)",
     "methodName": "testRawParse",
     "className": "org.elasticsearch.search.DocValueFormatTests",
     "children": []
    },
    {
     "id": "ID#testBooleanFormat(org.elasticsearch.search.DocValueFormatTests)",
     "displayName": "testBooleanFormat(org.elasticsearch.search.DocValueFormatTests)",
     "methodName": "testBooleanFormat",
     "className": "org.elasticsearch.search.DocValueFormatTests",
     "children": []
    },
    {
     "id": "ID#testRawFormat(org.elasticsearch.search.DocValueFormatTests)",
     "displayName": "testRawFormat(org.elasticsearch.search.DocValueFormatTests)",
     "methodName": "testRawFormat",
     "className": "org.elasticsearch.search.DocValueFormatTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.DocValueFormatTests)",
     "displayName": "testSerialization(org.elasticsearch.search.DocValueFormatTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.DocValueFormatTests",
     "children": []
    },
    {
     "id": "ID#testIpFormat(org.elasticsearch.search.DocValueFormatTests)",
     "displayName": "testIpFormat(org.elasticsearch.search.DocValueFormatTests)",
     "methodName": "testIpFormat",
     "className": "org.elasticsearch.search.DocValueFormatTests",
     "children": []
    },
    {
     "id": "ID#testBooleanParse(org.elasticsearch.search.DocValueFormatTests)",
     "displayName": "testBooleanParse(org.elasticsearch.search.DocValueFormatTests)",
     "methodName": "testBooleanParse",
     "className": "org.elasticsearch.search.DocValueFormatTests",
     "children": []
    },
    {
     "id": "ID#testIPParse(org.elasticsearch.search.DocValueFormatTests)",
     "displayName": "testIPParse(org.elasticsearch.search.DocValueFormatTests)",
     "methodName": "testIPParse",
     "className": "org.elasticsearch.search.DocValueFormatTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935858704
 }
]

[
 "TEST_STARTED",
 "ID#testRawParse(org.elasticsearch.search.DocValueFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawParse(org.elasticsearch.search.DocValueFormatTests)",
  "startTimestamp": 1473935858731,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testBooleanFormat(org.elasticsearch.search.DocValueFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBooleanFormat(org.elasticsearch.search.DocValueFormatTests)",
  "startTimestamp": 1473935858734,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRawFormat(org.elasticsearch.search.DocValueFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawFormat(org.elasticsearch.search.DocValueFormatTests)",
  "startTimestamp": 1473935858737,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.DocValueFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.DocValueFormatTests)",
  "startTimestamp": 1473935858739,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testIpFormat(org.elasticsearch.search.DocValueFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIpFormat(org.elasticsearch.search.DocValueFormatTests)",
  "startTimestamp": 1473935858754,
  "executionTime": 96
 }
]

[
 "TEST_STARTED",
 "ID#testBooleanParse(org.elasticsearch.search.DocValueFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBooleanParse(org.elasticsearch.search.DocValueFormatTests)",
  "startTimestamp": 1473935858850,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIPParse(org.elasticsearch.search.DocValueFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIPParse(org.elasticsearch.search.DocValueFormatTests)",
  "startTimestamp": 1473935858854,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.DocValueFormatTests",
  "startTimestamp": 1473935858704,
  "executionTime": 154
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests",
   "displayName": "org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests",
   "methodName": null,
   "className": "org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests",
   "children": [
    {
     "id": "ID#testConcurrentAccess(org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests)",
     "displayName": "testConcurrentAccess(org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests)",
     "methodName": "testConcurrentAccess",
     "className": "org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935858882
 }
]

[
 "TEST_STARTED",
 "ID#testConcurrentAccess(org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcurrentAccess(org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests)",
  "startTimestamp": 1473935858910,
  "executionTime": 55
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests",
  "startTimestamp": 1473935858882,
  "executionTime": 85
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.RoutingBackwardCompatibilityTests",
   "displayName": "org.elasticsearch.cluster.routing.RoutingBackwardCompatibilityTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.RoutingBackwardCompatibilityTests",
   "children": [
    {
     "id": "ID#testBackwardCompatibility(org.elasticsearch.cluster.routing.RoutingBackwardCompatibilityTests)",
     "displayName": "testBackwardCompatibility(org.elasticsearch.cluster.routing.RoutingBackwardCompatibilityTests)",
     "methodName": "testBackwardCompatibility",
     "className": "org.elasticsearch.cluster.routing.RoutingBackwardCompatibilityTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935858991
 }
]

[
 "TEST_STARTED",
 "ID#testBackwardCompatibility(org.elasticsearch.cluster.routing.RoutingBackwardCompatibilityTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBackwardCompatibility(org.elasticsearch.cluster.routing.RoutingBackwardCompatibilityTests)",
  "startTimestamp": 1473935859013,
  "executionTime": 1541
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.RoutingBackwardCompatibilityTests",
  "startTimestamp": 1473935858991,
  "executionTime": 1567
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
   "displayName": "org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
   "children": [
    {
     "id": "ID#testFieldDataCacheListener(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "displayName": "testFieldDataCacheListener(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "methodName": "testFieldDataCacheListener",
     "className": "org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
     "children": []
    },
    {
     "id": "ID#testSetCacheListenerTwice(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "displayName": "testSetCacheListenerTwice(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "methodName": "testSetCacheListenerTwice",
     "className": "org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
     "children": []
    },
    {
     "id": "ID#testGetForFieldDefaults(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "displayName": "testGetForFieldDefaults(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "methodName": "testGetForFieldDefaults",
     "className": "org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
     "children": []
    },
    {
     "id": "ID#testRequireDocValuesOnLongs(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "displayName": "testRequireDocValuesOnLongs(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "methodName": "testRequireDocValuesOnLongs",
     "className": "org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
     "children": []
    },
    {
     "id": "ID#testRequireDocValuesOnBools(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "displayName": "testRequireDocValuesOnBools(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "methodName": "testRequireDocValuesOnBools",
     "className": "org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
     "children": []
    },
    {
     "id": "ID#testRequireDocValuesOnDoubles(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "displayName": "testRequireDocValuesOnDoubles(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "methodName": "testRequireDocValuesOnDoubles",
     "className": "org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935860598
 }
]

[
 "TEST_STARTED",
 "ID#testFieldDataCacheListener(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:40,635][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:40,673][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:40,673][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:40,678][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[15428], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:40,680][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:40,680][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:40,859][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:40,860][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:40,860][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[46]}, bound_addresses {local[46]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:40,862][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{u_jGLl-uQze5hDehC0RCjQ}{AML4OrrAS7WwmlwfGffFmw}{local}{local[46]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:40,863][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:40,876][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:40,897][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:41,002][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:41,207][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [IndexFieldDataServiceTests#testFieldDataCacheListener]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldDataCacheListener(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
  "startTimestamp": 1473935860624,
  "executionTime": 621
 }
]

[
 "TEST_STARTED",
 "ID#testSetCacheListenerTwice(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:41,253][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:41,329][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:41,395][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [IndexFieldDataServiceTests#testSetCacheListenerTwice]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetCacheListenerTwice(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
  "startTimestamp": 1473935861245,
  "executionTime": 188
 }
]

[
 "TEST_STARTED",
 "ID#testGetForFieldDefaults(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:41,441][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:41,566][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:42,098][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [IndexFieldDataServiceTests#testGetForFieldDefaults]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetForFieldDefaults(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
  "startTimestamp": 1473935861433,
  "executionTime": 704
 }
]

[
 "TEST_STARTED",
 "ID#testRequireDocValuesOnLongs(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:42,149][INFO ][org.elasticsearch.index.fielddata]  [test] [IndexFieldDataServiceTests#testRequireDocValuesOnLongs]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRequireDocValuesOnLongs(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
  "startTimestamp": 1473935862138,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testRequireDocValuesOnBools(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:42,165][INFO ][org.elasticsearch.index.fielddata]  [test] [IndexFieldDataServiceTests#testRequireDocValuesOnBools]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRequireDocValuesOnBools(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
  "startTimestamp": 1473935862150,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testRequireDocValuesOnDoubles(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:42,188][INFO ][org.elasticsearch.index.fielddata]  [test] [IndexFieldDataServiceTests#testRequireDocValuesOnDoubles]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRequireDocValuesOnDoubles(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
  "startTimestamp": 1473935862166,
  "executionTime": 23
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:42,190][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:42,190][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:42,191][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:37:42,195][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
  "startTimestamp": 1473935860598,
  "executionTime": 1631
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests",
   "displayName": "org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests",
   "children": [
    {
     "id": "ID#testValidateShrinkIndex(org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests)",
     "displayName": "testValidateShrinkIndex(org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests)",
     "methodName": "testValidateShrinkIndex",
     "className": "org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests",
     "children": []
    },
    {
     "id": "ID#testValidateIndexName(org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests)",
     "displayName": "testValidateIndexName(org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests)",
     "methodName": "testValidateIndexName",
     "className": "org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests",
     "children": []
    },
    {
     "id": "ID#testShrinkIndexSettings(org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests)",
     "displayName": "testShrinkIndexSettings(org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests)",
     "methodName": "testShrinkIndexSettings",
     "className": "org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935862293
 }
]

[
 "TEST_STARTED",
 "ID#testValidateShrinkIndex(org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:42,344][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[source][12], [source][7], [source][10], [source][32], [source][38], [source][26], [source][1], [source][6], [source][16], [source][20]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidateShrinkIndex(org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests)",
  "startTimestamp": 1473935862315,
  "executionTime": 58
 }
]

[
 "TEST_STARTED",
 "ID#testValidateIndexName(org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidateIndexName(org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests)",
  "startTimestamp": 1473935862374,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testShrinkIndexSettings(org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:37:42,387][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[QGnNOEgWsx][6], [QGnNOEgWsx][2], [QGnNOEgWsx][1], [QGnNOEgWsx][4], [QGnNOEgWsx][3], [QGnNOEgWsx][5], [QGnNOEgWsx][7], [QGnNOEgWsx][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShrinkIndexSettings(org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests)",
  "startTimestamp": 1473935862380,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests",
  "startTimestamp": 1473935862293,
  "executionTime": 97
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.bulk.TransportBulkActionTookTests",
   "displayName": "org.elasticsearch.action.bulk.TransportBulkActionTookTests",
   "methodName": null,
   "className": "org.elasticsearch.action.bulk.TransportBulkActionTookTests",
   "children": [
    {
     "id": "ID#testTookWithRealClock(org.elasticsearch.action.bulk.TransportBulkActionTookTests)",
     "displayName": "testTookWithRealClock(org.elasticsearch.action.bulk.TransportBulkActionTookTests)",
     "methodName": "testTookWithRealClock",
     "className": "org.elasticsearch.action.bulk.TransportBulkActionTookTests",
     "children": []
    },
    {
     "id": "ID#testTookWithControlledClock(org.elasticsearch.action.bulk.TransportBulkActionTookTests)",
     "displayName": "testTookWithControlledClock(org.elasticsearch.action.bulk.TransportBulkActionTookTests)",
     "methodName": "testTookWithControlledClock",
     "className": "org.elasticsearch.action.bulk.TransportBulkActionTookTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935862502
 }
]

[
 "TEST_STARTED",
 "ID#testTookWithRealClock(org.elasticsearch.action.bulk.TransportBulkActionTookTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:42,544][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{6RSGKicnT9a3vnfLNirQzA}{local}{local[36]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTookWithRealClock(org.elasticsearch.action.bulk.TransportBulkActionTookTests)",
  "startTimestamp": 1473935862539,
  "executionTime": 115
 }
]

[
 "TEST_STARTED",
 "ID#testTookWithControlledClock(org.elasticsearch.action.bulk.TransportBulkActionTookTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:42,660][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{HxsWXHQ-TcSDlqvJZYKFmg}{local}{local[37]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTookWithControlledClock(org.elasticsearch.action.bulk.TransportBulkActionTookTests)",
  "startTimestamp": 1473935862654,
  "executionTime": 49
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.bulk.TransportBulkActionTookTests",
  "startTimestamp": 1473935862502,
  "executionTime": 204
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.search.MultiMatchQueryTests",
   "displayName": "org.elasticsearch.index.search.MultiMatchQueryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.search.MultiMatchQueryTests",
   "children": [
    {
     "id": "ID#testBlendNoTermQuery(org.elasticsearch.index.search.MultiMatchQueryTests)",
     "displayName": "testBlendNoTermQuery(org.elasticsearch.index.search.MultiMatchQueryTests)",
     "methodName": "testBlendNoTermQuery",
     "className": "org.elasticsearch.index.search.MultiMatchQueryTests",
     "children": []
    },
    {
     "id": "ID#testCrossFieldMultiMatchQuery(org.elasticsearch.index.search.MultiMatchQueryTests)",
     "displayName": "testCrossFieldMultiMatchQuery(org.elasticsearch.index.search.MultiMatchQueryTests)",
     "methodName": "testCrossFieldMultiMatchQuery",
     "className": "org.elasticsearch.index.search.MultiMatchQueryTests",
     "children": []
    },
    {
     "id": "ID#testBlendTermsUnsupportedValue(org.elasticsearch.index.search.MultiMatchQueryTests)",
     "displayName": "testBlendTermsUnsupportedValue(org.elasticsearch.index.search.MultiMatchQueryTests)",
     "methodName": "testBlendTermsUnsupportedValue",
     "className": "org.elasticsearch.index.search.MultiMatchQueryTests",
     "children": []
    },
    {
     "id": "ID#testBlendTermsWithFieldBoosts(org.elasticsearch.index.search.MultiMatchQueryTests)",
     "displayName": "testBlendTermsWithFieldBoosts(org.elasticsearch.index.search.MultiMatchQueryTests)",
     "methodName": "testBlendTermsWithFieldBoosts",
     "className": "org.elasticsearch.index.search.MultiMatchQueryTests",
     "children": []
    },
    {
     "id": "ID#testBlendTerms(org.elasticsearch.index.search.MultiMatchQueryTests)",
     "displayName": "testBlendTerms(org.elasticsearch.index.search.MultiMatchQueryTests)",
     "methodName": "testBlendTerms",
     "className": "org.elasticsearch.index.search.MultiMatchQueryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935862759
 }
]

[
 "TEST_STARTED",
 "ID#testBlendNoTermQuery(org.elasticsearch.index.search.MultiMatchQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:37:42,796][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:37:42,831][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:37:42,831][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:37:42,835][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[15428], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:37:42,839][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:37:42,839][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:37:43,028][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:37:43,028][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:37:43,030][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[47]}, bound_addresses {local[47]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:37:43,048][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{yV8nphjrRMuWQ07NY4bKZQ}{tGKH-I3VRm-mzw3xH3U0uQ}{local}{local[47]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:37:43,049][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:37:43,068][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:37:43,128][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:37:43,187][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:37:43,328][INFO ][org.elasticsearch.index.search] [MultiMatchQueryTests#testBlendNoTermQuery]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBlendNoTermQuery(org.elasticsearch.index.search.MultiMatchQueryTests)",
  "startTimestamp": 1473935862781,
  "executionTime": 584
 }
]

[
 "TEST_STARTED",
 "ID#testCrossFieldMultiMatchQuery(org.elasticsearch.index.search.MultiMatchQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:37:43,374][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:37:43,439][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:37:43,570][INFO ][org.elasticsearch.index.search] [MultiMatchQueryTests#testCrossFieldMultiMatchQuery]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCrossFieldMultiMatchQuery(org.elasticsearch.index.search.MultiMatchQueryTests)",
  "startTimestamp": 1473935863365,
  "executionTime": 284
 }
]

[
 "TEST_STARTED",
 "ID#testBlendTermsUnsupportedValue(org.elasticsearch.index.search.MultiMatchQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:37:43,657][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:37:43,720][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:37:43,739][INFO ][org.elasticsearch.index.search] [MultiMatchQueryTests#testBlendTermsUnsupportedValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBlendTermsUnsupportedValue(org.elasticsearch.index.search.MultiMatchQueryTests)",
  "startTimestamp": 1473935863650,
  "executionTime": 153
 }
]

[
 "TEST_STARTED",
 "ID#testBlendTermsWithFieldBoosts(org.elasticsearch.index.search.MultiMatchQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:37:43,811][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:37:43,895][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:37:43,912][INFO ][org.elasticsearch.index.search] [MultiMatchQueryTests#testBlendTermsWithFieldBoosts]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBlendTermsWithFieldBoosts(org.elasticsearch.index.search.MultiMatchQueryTests)",
  "startTimestamp": 1473935863803,
  "executionTime": 145
 }
]

[
 "TEST_STARTED",
 "ID#testBlendTerms(org.elasticsearch.index.search.MultiMatchQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:37:43,956][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:37:44,034][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:37:44,053][INFO ][org.elasticsearch.index.search] [MultiMatchQueryTests#testBlendTerms]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBlendTerms(org.elasticsearch.index.search.MultiMatchQueryTests)",
  "startTimestamp": 1473935863948,
  "executionTime": 142
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:37:44,090][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:37:44,091][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:37:44,092][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:37:44,094][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.search.MultiMatchQueryTests",
  "startTimestamp": 1473935862759,
  "executionTime": 1342
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.RoutingFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.RoutingFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.RoutingFieldTypeTests",
   "children": [
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.RoutingFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.RoutingFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.RoutingFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.RoutingFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.RoutingFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935864215
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.RoutingFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
  "startTimestamp": 1473935864234,
  "executionTime": 95
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.RoutingFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
  "startTimestamp": 1473935864329,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.RoutingFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
  "startTimestamp": 1473935864332,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.RoutingFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
  "startTimestamp": 1473935864334,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.RoutingFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.RoutingFieldTypeTests)",
  "startTimestamp": 1473935864337,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.RoutingFieldTypeTests",
  "startTimestamp": 1473935864215,
  "executionTime": 127
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.internal.DefaultSearchContextTests",
   "displayName": "org.elasticsearch.search.internal.DefaultSearchContextTests",
   "methodName": null,
   "className": "org.elasticsearch.search.internal.DefaultSearchContextTests",
   "children": [
    {
     "id": "ID#testCreateSearchFilter(org.elasticsearch.search.internal.DefaultSearchContextTests)",
     "displayName": "testCreateSearchFilter(org.elasticsearch.search.internal.DefaultSearchContextTests)",
     "methodName": "testCreateSearchFilter",
     "className": "org.elasticsearch.search.internal.DefaultSearchContextTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935864367
 }
]

[
 "TEST_STARTED",
 "ID#testCreateSearchFilter(org.elasticsearch.search.internal.DefaultSearchContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateSearchFilter(org.elasticsearch.search.internal.DefaultSearchContextTests)",
  "startTimestamp": 1473935864391,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.internal.DefaultSearchContextTests",
  "startTimestamp": 1473935864367,
  "executionTime": 34
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests",
   "children": [
    {
     "id": "ID#testSingleRetryOnIgnore(org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests)",
     "displayName": "testSingleRetryOnIgnore(org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests)",
     "methodName": "testSingleRetryOnIgnore",
     "className": "org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests",
     "children": []
    },
    {
     "id": "ID#testFailedAllocation(org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests)",
     "displayName": "testFailedAllocation(org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests)",
     "methodName": "testFailedAllocation",
     "className": "org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935864451
 }
]

[
 "TEST_STARTED",
 "ID#testSingleRetryOnIgnore(org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:37:44,486][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [shards failed [[idx][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleRetryOnIgnore(org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests)",
  "startTimestamp": 1473935864473,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testFailedAllocation(org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:37:44,509][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [shards failed [[idx][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:37:44,519][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[idx][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:37:44,520][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [shards failed [[idx][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailedAllocation(org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests)",
  "startTimestamp": 1473935864495,
  "executionTime": 25
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.MaxRetryAllocationDeciderTests",
  "startTimestamp": 1473935864451,
  "executionTime": 75
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.CJKFilterFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.CJKFilterFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.CJKFilterFactoryTests",
   "children": [
    {
     "id": "ID#testNoFlags(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
     "displayName": "testNoFlags(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
     "methodName": "testNoFlags",
     "className": "org.elasticsearch.index.analysis.CJKFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testHanUnigramOnly(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
     "displayName": "testHanUnigramOnly(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
     "methodName": "testHanUnigramOnly",
     "className": "org.elasticsearch.index.analysis.CJKFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testHanOnly(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
     "displayName": "testHanOnly(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
     "methodName": "testHanOnly",
     "className": "org.elasticsearch.index.analysis.CJKFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testDefault(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
     "displayName": "testDefault(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
     "methodName": "testDefault",
     "className": "org.elasticsearch.index.analysis.CJKFilterFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935864644
 }
]

[
 "TEST_STARTED",
 "ID#testNoFlags(org.elasticsearch.index.analysis.CJKFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoFlags(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
  "startTimestamp": 1473935864673,
  "executionTime": 47
 }
]

[
 "TEST_STARTED",
 "ID#testHanUnigramOnly(org.elasticsearch.index.analysis.CJKFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHanUnigramOnly(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
  "startTimestamp": 1473935864720,
  "executionTime": 161
 }
]

[
 "TEST_STARTED",
 "ID#testHanOnly(org.elasticsearch.index.analysis.CJKFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHanOnly(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
  "startTimestamp": 1473935864881,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testDefault(org.elasticsearch.index.analysis.CJKFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefault(org.elasticsearch.index.analysis.CJKFilterFactoryTests)",
  "startTimestamp": 1473935864894,
  "executionTime": 11
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.CJKFilterFactoryTests",
  "startTimestamp": 1473935864644,
  "executionTime": 267
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.MapperServiceTests",
   "displayName": "org.elasticsearch.index.mapper.MapperServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.MapperServiceTests",
   "children": [
    {
     "id": "ID#testTypes(org.elasticsearch.index.mapper.MapperServiceTests)",
     "displayName": "testTypes(org.elasticsearch.index.mapper.MapperServiceTests)",
     "methodName": "testTypes",
     "className": "org.elasticsearch.index.mapper.MapperServiceTests",
     "children": []
    },
    {
     "id": "ID#testUnmappedFieldType(org.elasticsearch.index.mapper.MapperServiceTests)",
     "displayName": "testUnmappedFieldType(org.elasticsearch.index.mapper.MapperServiceTests)",
     "methodName": "testUnmappedFieldType",
     "className": "org.elasticsearch.index.mapper.MapperServiceTests",
     "children": []
    },
    {
     "id": "ID#testTypeNameStartsWithIllegalDot(org.elasticsearch.index.mapper.MapperServiceTests)",
     "displayName": "testTypeNameStartsWithIllegalDot(org.elasticsearch.index.mapper.MapperServiceTests)",
     "methodName": "testTypeNameStartsWithIllegalDot",
     "className": "org.elasticsearch.index.mapper.MapperServiceTests",
     "children": []
    },
    {
     "id": "ID#testMergeWithMap(org.elasticsearch.index.mapper.MapperServiceTests)",
     "displayName": "testMergeWithMap(org.elasticsearch.index.mapper.MapperServiceTests)",
     "methodName": "testMergeWithMap",
     "className": "org.elasticsearch.index.mapper.MapperServiceTests",
     "children": []
    },
    {
     "id": "ID#testIndexIntoDefaultMapping(org.elasticsearch.index.mapper.MapperServiceTests)",
     "displayName": "testIndexIntoDefaultMapping(org.elasticsearch.index.mapper.MapperServiceTests)",
     "methodName": "testIndexIntoDefaultMapping",
     "className": "org.elasticsearch.index.mapper.MapperServiceTests",
     "children": []
    },
    {
     "id": "ID#testTypeNameTooLong(org.elasticsearch.index.mapper.MapperServiceTests)",
     "displayName": "testTypeNameTooLong(org.elasticsearch.index.mapper.MapperServiceTests)",
     "methodName": "testTypeNameTooLong",
     "className": "org.elasticsearch.index.mapper.MapperServiceTests",
     "children": []
    },
    {
     "id": "ID#testTotalFieldsExceedsLimit(org.elasticsearch.index.mapper.MapperServiceTests)",
     "displayName": "testTotalFieldsExceedsLimit(org.elasticsearch.index.mapper.MapperServiceTests)",
     "methodName": "testTotalFieldsExceedsLimit",
     "className": "org.elasticsearch.index.mapper.MapperServiceTests",
     "children": []
    },
    {
     "id": "ID#testMappingDepthExceedsLimit(org.elasticsearch.index.mapper.MapperServiceTests)",
     "displayName": "testMappingDepthExceedsLimit(org.elasticsearch.index.mapper.MapperServiceTests)",
     "methodName": "testMappingDepthExceedsLimit",
     "className": "org.elasticsearch.index.mapper.MapperServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935864940
 }
]

[
 "TEST_STARTED",
 "ID#testTypes(org.elasticsearch.index.mapper.MapperServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:07:44,988][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:07:45,039][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:07:45,040][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:07:45,044][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[15428], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:07:45,047][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:07:45,047][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:07:45,253][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:07:45,254][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:07:45,255][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[48]}, bound_addresses {local[48]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:07:45,257][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{Xvs7JsfjSjSjHL42ce0NHw}{9YqOdnBbTlmrv3wxnLq-Kw}{local}{local[48]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:07:45,258][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:07:45,279][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:07:45,308][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:07:45,525][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:07:45,552][INFO ][org.elasticsearch.index.mapper] [node_s_0] [index1] [MapperServiceTests#testTypes]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypes(org.elasticsearch.index.mapper.MapperServiceTests)",
  "startTimestamp": 1473935864975,
  "executionTime": 646
 }
]

[
 "TEST_STARTED",
 "ID#testUnmappedFieldType(org.elasticsearch.index.mapper.MapperServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:07:45,629][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:07:45,714][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:07:45,733][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [index] [unmapped_type:string] should be replaced with [unmapped_type:keyword]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:07:45,733][INFO ][org.elasticsearch.index.mapper] [node_s_0] [index] [MapperServiceTests#testUnmappedFieldType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnmappedFieldType(org.elasticsearch.index.mapper.MapperServiceTests)",
  "startTimestamp": 1473935865621,
  "executionTime": 158
 }
]

[
 "TEST_STARTED",
 "ID#testTypeNameStartsWithIllegalDot(org.elasticsearch.index.mapper.MapperServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:07:45,790][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test-index] [MapperServiceTests#testTypeNameStartsWithIllegalDot]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeNameStartsWithIllegalDot(org.elasticsearch.index.mapper.MapperServiceTests)",
  "startTimestamp": 1473935865780,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testMergeWithMap(org.elasticsearch.index.mapper.MapperServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:07:45,799][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:07:45,895][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:07:45,916][INFO ][org.elasticsearch.index.mapper] [node_s_0] [index1] [MapperServiceTests#testMergeWithMap]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeWithMap(org.elasticsearch.index.mapper.MapperServiceTests)",
  "startTimestamp": 1473935865792,
  "executionTime": 217
 }
]

[
 "TEST_STARTED",
 "ID#testIndexIntoDefaultMapping(org.elasticsearch.index.mapper.MapperServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:07:46,099][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index1] creating index, cause [auto(index api)], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:07:46,186][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:07:46,427][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:07:46,537][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:07:46,557][INFO ][org.elasticsearch.index.mapper] [node_s_0] [index2] [MapperServiceTests#testIndexIntoDefaultMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexIntoDefaultMapping(org.elasticsearch.index.mapper.MapperServiceTests)",
  "startTimestamp": 1473935866009,
  "executionTime": 613
 }
]

[
 "TEST_STARTED",
 "ID#testTypeNameTooLong(org.elasticsearch.index.mapper.MapperServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:07:46,633][INFO ][org.elasticsearch.index.mapper] [node_s_0] [text-index] [MapperServiceTests#testTypeNameTooLong]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeNameTooLong(org.elasticsearch.index.mapper.MapperServiceTests)",
  "startTimestamp": 1473935866622,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testTotalFieldsExceedsLimit(org.elasticsearch.index.mapper.MapperServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:07:46,643][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:07:46,730][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:07:46,747][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test1] The [string] field is deprecated, please use [text] or [keyword] instead on [field1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:07:46,753][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:07:46,822][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:07:46,844][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test2] The [string] field is deprecated, please use [text] or [keyword] instead on [field1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:07:46,845][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test2] [MapperServiceTests#testTotalFieldsExceedsLimit]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTotalFieldsExceedsLimit(org.elasticsearch.index.mapper.MapperServiceTests)",
  "startTimestamp": 1473935866635,
  "executionTime": 272
 }
]

[
 "TEST_STARTED",
 "ID#testMappingDepthExceedsLimit(org.elasticsearch.index.mapper.MapperServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:07:46,915][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:07:46,979][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:07:47,004][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:07:47,067][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:07:47,089][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test2] [MapperServiceTests#testMappingDepthExceedsLimit]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMappingDepthExceedsLimit(org.elasticsearch.index.mapper.MapperServiceTests)",
  "startTimestamp": 1473935866907,
  "executionTime": 250
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:07:47,158][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:07:47,162][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:07:47,162][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:07:47,165][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.MapperServiceTests",
  "startTimestamp": 1473935864940,
  "executionTime": 2245
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.functionscore.ScoreFunctionBuilderTests",
   "displayName": "org.elasticsearch.index.query.functionscore.ScoreFunctionBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.functionscore.ScoreFunctionBuilderTests",
   "children": [
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.functionscore.ScoreFunctionBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.functionscore.ScoreFunctionBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.functionscore.ScoreFunctionBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935867218
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.functionscore.ScoreFunctionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.functionscore.ScoreFunctionBuilderTests)",
  "startTimestamp": 1473935867238,
  "executionTime": 298
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.functionscore.ScoreFunctionBuilderTests",
  "startTimestamp": 1473935867218,
  "executionTime": 322
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.IndexFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.IndexFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.IndexFieldTypeTests",
   "children": [
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.IndexFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.IndexFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.IndexFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.IndexFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.IndexFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935867557
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.IndexFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
  "startTimestamp": 1473935867610,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.IndexFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
  "startTimestamp": 1473935867617,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.IndexFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
  "startTimestamp": 1473935867621,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.IndexFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
  "startTimestamp": 1473935867623,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.IndexFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.IndexFieldTypeTests)",
  "startTimestamp": 1473935867627,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.IndexFieldTypeTests",
  "startTimestamp": 1473935867557,
  "executionTime": 74
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.IdFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.IdFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.IdFieldMapperTests",
   "children": [
    {
     "id": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.IdFieldMapperTests)",
     "displayName": "testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.IdFieldMapperTests)",
     "methodName": "testIncludeInObjectNotAllowed",
     "className": "org.elasticsearch.index.mapper.IdFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testId(org.elasticsearch.index.mapper.IdFieldMapperTests)",
     "displayName": "testId(org.elasticsearch.index.mapper.IdFieldMapperTests)",
     "methodName": "testId",
     "className": "org.elasticsearch.index.mapper.IdFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935867689
 }
]

[
 "TEST_STARTED",
 "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.IdFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:37:47,728][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:37:47,776][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:37:47,776][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:37:47,781][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[15428], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:37:47,784][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:37:47,784][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:37:48,000][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:37:48,001][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:37:48,002][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[49]}, bound_addresses {local[49]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:37:48,004][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{xEkgauBMTfyss7Kl6-1oDQ}{MQbGFbR0TzO-1v-ybI618Q}{local}{local[49]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:37:48,004][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:37:48,022][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:37:48,047][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:37:48,155][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:37:48,171][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [IdFieldMapperTests#testIncludeInObjectNotAllowed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.IdFieldMapperTests)",
  "startTimestamp": 1473935867717,
  "executionTime": 499
 }
]

[
 "TEST_STARTED",
 "ID#testId(org.elasticsearch.index.mapper.IdFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:37:48,229][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:37:48,326][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:37:48,352][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [IdFieldMapperTests#testId]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testId(org.elasticsearch.index.mapper.IdFieldMapperTests)",
  "startTimestamp": 1473935868216,
  "executionTime": 314
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:37:48,530][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:37:48,531][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:37:48,531][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:37:48,535][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "APPEND_STDERR",
 {
  "chunk": "Sep 15, 2016 12:37:48 PM com.carrotsearch.randomizedtesting.ThreadLeakControl checkThreadLeaks%0D%0AWARNING: Will linger awaiting termination of 1 leaked thread(s).%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.IdFieldMapperTests",
  "startTimestamp": 1473935867689,
  "executionTime": 1158
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.builders.PointBuilderTests",
   "displayName": "org.elasticsearch.common.geo.builders.PointBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.builders.PointBuilderTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.common.geo.builders.PointBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.common.geo.builders.PointBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.common.geo.builders.PointBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.common.geo.builders.PointBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.common.geo.builders.PointBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.common.geo.builders.PointBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.PointBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.common.geo.builders.PointBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.common.geo.builders.PointBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935868882
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.common.geo.builders.PointBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.common.geo.builders.PointBuilderTests)",
  "startTimestamp": 1473935868902,
  "executionTime": 46
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.common.geo.builders.PointBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.common.geo.builders.PointBuilderTests)",
  "startTimestamp": 1473935868948,
  "executionTime": 25
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.PointBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.PointBuilderTests)",
  "startTimestamp": 1473935868973,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.builders.PointBuilderTests",
  "startTimestamp": 1473935868882,
  "executionTime": 99
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.bootstrap.MaxMapCountCheckTests",
   "displayName": "org.elasticsearch.bootstrap.MaxMapCountCheckTests",
   "methodName": null,
   "className": "org.elasticsearch.bootstrap.MaxMapCountCheckTests",
   "children": [
    {
     "id": "ID#testMaxMapCountCheckRead(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
     "displayName": "testMaxMapCountCheckRead(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
     "methodName": "testMaxMapCountCheckRead",
     "className": "org.elasticsearch.bootstrap.MaxMapCountCheckTests",
     "children": []
    },
    {
     "id": "ID#testMaxMapCountCheckParse(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
     "displayName": "testMaxMapCountCheckParse(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
     "methodName": "testMaxMapCountCheckParse",
     "className": "org.elasticsearch.bootstrap.MaxMapCountCheckTests",
     "children": []
    },
    {
     "id": "ID#testGetMaxMapCountOnLinux(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
     "displayName": "testGetMaxMapCountOnLinux(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
     "methodName": "testGetMaxMapCountOnLinux",
     "className": "org.elasticsearch.bootstrap.MaxMapCountCheckTests",
     "children": []
    },
    {
     "id": "ID#testGetMaxMapCount(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
     "displayName": "testGetMaxMapCount(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
     "methodName": "testGetMaxMapCount",
     "className": "org.elasticsearch.bootstrap.MaxMapCountCheckTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935869096
 }
]

[
 "TEST_STARTED",
 "ID#testMaxMapCountCheckRead(org.elasticsearch.bootstrap.MaxMapCountCheckTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMaxMapCountCheckRead(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
  "startTimestamp": 1473935869145,
  "executionTime": 30
 }
]

[
 "TEST_STARTED",
 "ID#testMaxMapCountCheckParse(org.elasticsearch.bootstrap.MaxMapCountCheckTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMaxMapCountCheckParse(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
  "startTimestamp": 1473935869175,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGetMaxMapCountOnLinux(org.elasticsearch.bootstrap.MaxMapCountCheckTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetMaxMapCountOnLinux(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
  "startTimestamp": 1473935869177,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testGetMaxMapCount(org.elasticsearch.bootstrap.MaxMapCountCheckTests)"
]

[
 "APPEND_STDERR",
 {
  "chunk": "REPRODUCE WITH: gradle :core:test -Dtests.seed=9CF13790D965C5A7 -Dtests.class=org.elasticsearch.bootstrap.MaxMapCountCheckTests -Dtests.method=\"testGetMaxMapCount\" -Dtests.security.manager=true -Dtests.locale=ar-QA -Dtests.timezone=Europe/Skopje"
 }
]

[
 "APPEND_STDERR",
 {
  "chunk": "%0D%0A"
 }
]

[
 "TEST_FAILURE",
 {
  "description": "ID#testGetMaxMapCount(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
  "message": "\nArgument(s) are different! Wanted:\nlogger.warn(\n    <custom argument matcher>,\n    java.io.IOException: fatal\n);\n-> at org.elasticsearch.bootstrap.MaxMapCountCheckTests.testGetMaxMapCount(MaxMapCountCheckTests.java:77)\nActual invocation has different arguments:\nlogger.warn(\n    org.elasticsearch.bootstrap.BootstrapCheck$MaxMapCountCheck$$Lambda$1433/707169424@7d7991f,\n    java.io.IOException: fatal\n);\n-> at org.elasticsearch.bootstrap.BootstrapCheck$MaxMapCountCheck.getMaxMapCount(BootstrapCheck.java:437)\n",
  "trace": "Argument(s) are different! Wanted:\nlogger.warn(\n    <custom argument matcher>,\n    java.io.IOException: fatal\n);\n-> at org.elasticsearch.bootstrap.MaxMapCountCheckTests.testGetMaxMapCount(MaxMapCountCheckTests.java:77)\nActual invocation has different arguments:\nlogger.warn(\n    org.elasticsearch.bootstrap.BootstrapCheck$MaxMapCountCheck$$Lambda$1433/707169424@7d7991f,\n    java.io.IOException: fatal\n);\n-> at org.elasticsearch.bootstrap.BootstrapCheck$MaxMapCountCheck.getMaxMapCount(BootstrapCheck.java:437)\n\r\n\tat __randomizedtesting.SeedInfo.seed([9CF13790D965C5A7:741AA677125D719C]:0)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:422)\r\n\tat org.elasticsearch.bootstrap.MaxMapCountCheckTests.testGetMaxMapCount(MaxMapCountCheckTests.java:77)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:497)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "Argument(s) are different! Wanted:\nlogger.warn(\n    <custom argument matcher>,\n    java.io.IOException: fatal\n);\n-> at org.elasticsearch.bootstrap.MaxMapCountCheckTests.testGetMaxMapCount(MaxMapCountCheckTests.java:77)\nActual invocation has different arguments:\nlogger.warn(\n    org.elasticsearch.bootstrap.BootstrapCheck$MaxMapCountCheck$$Lambda$1433/707169424@7d7991f,\n    java.io.IOException: fatal\n);\n-> at org.elasticsearch.bootstrap.BootstrapCheck$MaxMapCountCheck.getMaxMapCount(BootstrapCheck.java:437)\n",
  "throwableClass": "org.mockito.exceptions.verification.junit.ArgumentsAreDifferent",
  "assertionViolation": true,
  "assumptionViolation": false
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetMaxMapCount(org.elasticsearch.bootstrap.MaxMapCountCheckTests)",
  "startTimestamp": 1473935869186,
  "executionTime": 369
 }
]

[
 "APPEND_STDERR",
 {
  "chunk": "NOTE: leaving temporary files on disk at: C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.bootstrap.MaxMapCountCheckTests_9CF13790D965C5A7-001"
 }
]

[
 "APPEND_STDERR",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDERR",
 {
  "chunk": "NOTE: test params are: codec=Lucene62, sim=ClassicSimilarity, locale=ar-QA, timezone=Europe/Skopje"
 }
]

[
 "APPEND_STDERR",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDERR",
 {
  "chunk": "NOTE: Windows 10 10.0 amd64/Oracle Corporation 1.8.0_65 (64-bit)/cpus=4,threads=1,free=406126856,total=524812288"
 }
]

[
 "APPEND_STDERR",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDERR",
 {
  "chunk": "NOTE: All tests run in this JVM: [WildcardQueryBuilderTests, KeepFilterFactoryTests, RecoveryStatusTests, ESDirectoryReaderTests, RangeTests, MatchPhraseQueryBuilderTests, QueryRescoreModeTests, BitSetFilterCacheTests, ClusterAllocationExplanationTests, MultiCommandTests, IndicesLifecycleListenerSingleNodeTests, OsProbeTests, ParentChildFieldDataTests, ByteSizeValueTests, ShardPathTests, SpanMultiTermQueryBuilderTests, NestedObjectMapperTests, RestTableTests, ScriptServiceTests, RoutingNodesIntegrityTests, TTLFieldMapperTests, BytesRefHashTests, CumulativeSumTests, PublishClusterStateActionTests, MetaDataIndexTemplateServiceTests, CustomBoostMappingTests, DanglingIndicesStateTests, GeoDistanceRangeQueryTests, AnalysisModuleTests, MetaDataStateFormatTests, IngestActionFilterTests, ClusterStateToStringTests, StatsTests, IndicesOptionsTests, PercentileRanksTests, PhraseSuggestionBuilderTests, TruncateTokenFilterTests, RolloverRequestTests, DocValueFormatTests, BlockingClusterStatePublishResponseHandlerTests, RoutingBackwardCompatibilityTests, IndexFieldDataServiceTests, MetaDataCreateIndexServiceTests, TransportBulkActionTookTests, MultiMatchQueryTests, RoutingFieldTypeTests, DefaultSearchContextTests, MaxRetryAllocationDeciderTests, CJKFilterFactoryTests, MapperServiceTests, ScoreFunctionBuilderTests, IndexFieldTypeTests, IdFieldMapperTests, PointBuilderTests, MaxMapCountCheckTests]"
 }
]

[
 "APPEND_STDERR",
 {
  "chunk": "%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.bootstrap.MaxMapCountCheckTests",
  "startTimestamp": 1473935869096,
  "executionTime": 462
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests",
   "displayName": "org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests",
   "children": [
    {
     "id": "ID#testCorrectThreadPoolTypePermittedInSettings(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "displayName": "testCorrectThreadPoolTypePermittedInSettings(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "methodName": "testCorrectThreadPoolTypePermittedInSettings",
     "className": "org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests",
     "children": []
    },
    {
     "id": "ID#testShutdownNowInterrupts(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "displayName": "testShutdownNowInterrupts(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "methodName": "testShutdownNowInterrupts",
     "className": "org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests",
     "children": []
    },
    {
     "id": "ID#testCustomThreadPool(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "displayName": "testCustomThreadPool(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "methodName": "testCustomThreadPool",
     "className": "org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests",
     "children": []
    },
    {
     "id": "ID#testScalingExecutorType(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "displayName": "testScalingExecutorType(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "methodName": "testScalingExecutorType",
     "className": "org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests",
     "children": []
    },
    {
     "id": "ID#testFixedExecutorType(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "displayName": "testFixedExecutorType(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "methodName": "testFixedExecutorType",
     "className": "org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests",
     "children": []
    },
    {
     "id": "ID#testIndexingThreadPoolsMaxSize(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "displayName": "testIndexingThreadPoolsMaxSize(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
     "methodName": "testIndexingThreadPoolsMaxSize",
     "className": "org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935869626
 }
]

[
 "TEST_STARTED",
 "ID#testCorrectThreadPoolTypePermittedInSettings(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCorrectThreadPoolTypePermittedInSettings(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
  "startTimestamp": 1473935869662,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testShutdownNowInterrupts(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShutdownNowInterrupts(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
  "startTimestamp": 1473935869668,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testCustomThreadPool(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCustomThreadPool(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
  "startTimestamp": 1473935869679,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testScalingExecutorType(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScalingExecutorType(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
  "startTimestamp": 1473935869703,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFixedExecutorType(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFixedExecutorType(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
  "startTimestamp": 1473935869709,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingThreadPoolsMaxSize(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingThreadPoolsMaxSize(org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests)",
  "startTimestamp": 1473935869717,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.threadpool.UpdateThreadPoolSettingsTests",
  "startTimestamp": 1473935869626,
  "executionTime": 101
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.rest.BytesRestResponseTests",
   "displayName": "org.elasticsearch.rest.BytesRestResponseTests",
   "methodName": null,
   "className": "org.elasticsearch.rest.BytesRestResponseTests",
   "children": [
    {
     "id": "ID#testErrorTrace(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testErrorTrace(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testErrorTrace",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testResponseWhenPathContainsEncodingError(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testResponseWhenPathContainsEncodingError(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testResponseWhenPathContainsEncodingError",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testResponseWhenInternalServerError(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testResponseWhenInternalServerError(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testResponseWhenInternalServerError",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testGuessRootCause(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testGuessRootCause(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testGuessRootCause",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testConvert(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testConvert(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testConvert",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testNullThrowable(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testNullThrowable(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testNullThrowable",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testWithHeaders(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testWithHeaders(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testWithHeaders",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testSimpleExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testSimpleExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testSimpleExceptionMessage",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testNonElasticsearchExceptionIsNotShownAsSimpleMessage(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testNonElasticsearchExceptionIsNotShownAsSimpleMessage(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testNonElasticsearchExceptionIsNotShownAsSimpleMessage",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testDetailedExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testDetailedExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testDetailedExceptionMessage",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935869830
 }
]

[
 "TEST_STARTED",
 "ID#testErrorTrace(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testErrorTrace(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1473935869853,
  "executionTime": 135
 }
]

[
 "TEST_STARTED",
 "ID#testResponseWhenPathContainsEncodingError(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResponseWhenPathContainsEncodingError(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1473935869989,
  "executionTime": 25
 }
]

[
 "TEST_STARTED",
 "ID#testResponseWhenInternalServerError(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResponseWhenInternalServerError(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1473935870015,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testGuessRootCause(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGuessRootCause(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1473935870034,
  "executionTime": 71
 }
]

[
 "TEST_STARTED",
 "ID#testConvert(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConvert(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1473935870105,
  "executionTime": 154
 }
]

[
 "TEST_STARTED",
 "ID#testNullThrowable(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullThrowable(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1473935870260,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWithHeaders(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithHeaders(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1473935870262,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1473935870266,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNonElasticsearchExceptionIsNotShownAsSimpleMessage(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNonElasticsearchExceptionIsNotShownAsSimpleMessage(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1473935870268,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDetailedExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDetailedExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1473935870271,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.rest.BytesRestResponseTests",
  "startTimestamp": 1473935869830,
  "executionTime": 452
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
   "displayName": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
   "children": [
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDefaultEmptyComplainFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testDefaultEmptyComplainFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testDefaultEmptyComplainFlags",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDefaultOperatorHandling(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testDefaultOperatorHandling(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testDefaultOperatorHandling",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNegativeFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testNegativeFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testNegativeFlags",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFieldCannotBeNull(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testFieldCannotBeNull(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testFieldCannotBeNull",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDefaultNullComplainFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testDefaultNullComplainFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testDefaultNullComplainFlags",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFieldCannotBeEmptyAndWeighted(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testFieldCannotBeEmptyAndWeighted(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testFieldCannotBeEmptyAndWeighted",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFieldsCannotBeSetToNull(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testFieldsCannotBeSetToNull(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testFieldsCannotBeSetToNull",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDefaultFieldParsing(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testDefaultFieldParsing(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testDefaultFieldParsing",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMinimumShouldMatch(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testMinimumShouldMatch(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testMinimumShouldMatch",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDefaults(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testDefaults(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testDefaults",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryBoost(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testToQueryBoost(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testToQueryBoost",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFieldCannotBeEmpty(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testFieldCannotBeEmpty(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testFieldCannotBeEmpty",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDefaultNullLocale(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testDefaultNullLocale(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testDefaultNullLocale",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalConstructorArg(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testIllegalConstructorArg(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testIllegalConstructorArg",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIndexMetaField(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testIndexMetaField(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testIndexMetaField",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFieldCannotBeNullAndWeighted(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testFieldCannotBeNullAndWeighted(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testFieldCannotBeNullAndWeighted",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDefaultNullComplainOp(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testDefaultNullComplainOp(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testDefaultNullComplainOp",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935870309
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:50,411][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{BLELNWhJStSUfy5ZGf0b4A}{local}{local[42]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:50,421][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:50,422][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:50,440][WARN ][org.elasticsearch.deprecation.index.mapper]  [csnPJFCHc] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:50,440][WARN ][org.elasticsearch.deprecation.index.mapper]  [csnPJFCHc] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:50,440][WARN ][org.elasticsearch.deprecation.index.mapper]  [csnPJFCHc] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:50,442][WARN ][org.elasticsearch.deprecation.index.mapper]  [csnPJFCHc] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:50,442][WARN ][org.elasticsearch.deprecation.index.mapper]  [csnPJFCHc] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:50,442][WARN ][org.elasticsearch.deprecation.index.mapper]  [csnPJFCHc] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:50,446][WARN ][org.elasticsearch.deprecation.index.mapper]  [csnPJFCHc] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:50,446][WARN ][org.elasticsearch.deprecation.index.mapper]  [csnPJFCHc] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:50,446][WARN ][org.elasticsearch.deprecation.index.mapper]  [csnPJFCHc] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:50,448][WARN ][org.elasticsearch.deprecation.index.mapper]  [csnPJFCHc] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:50,448][WARN ][org.elasticsearch.deprecation.index.mapper]  [csnPJFCHc] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:50,448][WARN ][org.elasticsearch.deprecation.index.mapper]  [csnPJFCHc] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:50,450][WARN ][org.elasticsearch.deprecation.index.mapper]  [csnPJFCHc] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:50,451][WARN ][org.elasticsearch.deprecation.index.mapper]  [csnPJFCHc] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:50,451][WARN ][org.elasticsearch.deprecation.index.mapper]  [csnPJFCHc] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:50,455][WARN ][org.elasticsearch.deprecation.index.mapper]  [csnPJFCHc] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:50,455][WARN ][org.elasticsearch.deprecation.index.mapper]  [csnPJFCHc] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:50,455][WARN ][org.elasticsearch.deprecation.index.mapper]  [csnPJFCHc] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1473935870385,
  "executionTime": 282
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultEmptyComplainFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultEmptyComplainFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1473935870667,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultOperatorHandling(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultOperatorHandling(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1473935870671,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1473935870676,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1473935870685,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1473935870689,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNegativeFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNegativeFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1473935870692,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1473935870695,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFieldCannotBeNull(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldCannotBeNull(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1473935870699,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultNullComplainFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultNullComplainFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1473935870702,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1473935870706,
  "executionTime": 30
 }
]

[
 "TEST_STARTED",
 "ID#testFieldCannotBeEmptyAndWeighted(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldCannotBeEmptyAndWeighted(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1473935870737,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFieldsCannotBeSetToNull(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldsCannotBeSetToNull(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1473935870741,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultFieldParsing(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultFieldParsing(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1473935870744,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMinimumShouldMatch(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinimumShouldMatch(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1473935870748,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1473935870752,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1473935870755,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDefaults(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaults(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1473935870758,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryBoost(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryBoost(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1473935870761,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFieldCannotBeEmpty(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldCannotBeEmpty(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1473935870764,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultNullLocale(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultNullLocale(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1473935870767,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalConstructorArg(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalConstructorArg(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1473935870770,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIndexMetaField(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexMetaField(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1473935870773,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1473935870776,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testFieldCannotBeNullAndWeighted(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldCannotBeNullAndWeighted(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1473935870782,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultNullComplainOp(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultNullComplainOp(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1473935870785,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
  "startTimestamp": 1473935870309,
  "executionTime": 483
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.shard.IndexShardOperationsLockTests",
   "displayName": "org.elasticsearch.index.shard.IndexShardOperationsLockTests",
   "methodName": null,
   "className": "org.elasticsearch.index.shard.IndexShardOperationsLockTests",
   "children": [
    {
     "id": "ID#testActiveOperationsCount(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "displayName": "testActiveOperationsCount(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "methodName": "testActiveOperationsCount",
     "className": "org.elasticsearch.index.shard.IndexShardOperationsLockTests",
     "children": []
    },
    {
     "id": "ID#testOperationsInvokedImmediatelyIfNoBlock(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "displayName": "testOperationsInvokedImmediatelyIfNoBlock(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "methodName": "testOperationsInvokedImmediatelyIfNoBlock",
     "className": "org.elasticsearch.index.shard.IndexShardOperationsLockTests",
     "children": []
    },
    {
     "id": "ID#testAllOperationsInvoked(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "displayName": "testAllOperationsInvoked(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "methodName": "testAllOperationsInvoked",
     "className": "org.elasticsearch.index.shard.IndexShardOperationsLockTests",
     "children": []
    },
    {
     "id": "ID#testOperationsIfClosed(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "displayName": "testOperationsIfClosed(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "methodName": "testOperationsIfClosed",
     "className": "org.elasticsearch.index.shard.IndexShardOperationsLockTests",
     "children": []
    },
    {
     "id": "ID#testBlockIfClosed(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "displayName": "testBlockIfClosed(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "methodName": "testBlockIfClosed",
     "className": "org.elasticsearch.index.shard.IndexShardOperationsLockTests",
     "children": []
    },
    {
     "id": "ID#testOperationsDelayedIfBlock(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "displayName": "testOperationsDelayedIfBlock(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "methodName": "testOperationsDelayedIfBlock",
     "className": "org.elasticsearch.index.shard.IndexShardOperationsLockTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935870850
 }
]

[
 "TEST_STARTED",
 "ID#testActiveOperationsCount(org.elasticsearch.index.shard.IndexShardOperationsLockTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActiveOperationsCount(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
  "startTimestamp": 1473935870922,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testOperationsInvokedImmediatelyIfNoBlock(org.elasticsearch.index.shard.IndexShardOperationsLockTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOperationsInvokedImmediatelyIfNoBlock(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
  "startTimestamp": 1473935870942,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testAllOperationsInvoked(org.elasticsearch.index.shard.IndexShardOperationsLockTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllOperationsInvoked(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
  "startTimestamp": 1473935870945,
  "executionTime": 41
 }
]

[
 "TEST_STARTED",
 "ID#testOperationsIfClosed(org.elasticsearch.index.shard.IndexShardOperationsLockTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOperationsIfClosed(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
  "startTimestamp": 1473935870986,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testBlockIfClosed(org.elasticsearch.index.shard.IndexShardOperationsLockTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBlockIfClosed(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
  "startTimestamp": 1473935870990,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testOperationsDelayedIfBlock(org.elasticsearch.index.shard.IndexShardOperationsLockTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOperationsDelayedIfBlock(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
  "startTimestamp": 1473935870994,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.shard.IndexShardOperationsLockTests",
  "startTimestamp": 1473935870850,
  "executionTime": 155
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.ArrayUtilsTests",
   "displayName": "org.elasticsearch.common.util.ArrayUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.ArrayUtilsTests",
   "children": [
    {
     "id": "ID#testConcat(org.elasticsearch.common.util.ArrayUtilsTests)",
     "displayName": "testConcat(org.elasticsearch.common.util.ArrayUtilsTests)",
     "methodName": "testConcat",
     "className": "org.elasticsearch.common.util.ArrayUtilsTests",
     "children": []
    },
    {
     "id": "ID#testBinarySearch(org.elasticsearch.common.util.ArrayUtilsTests)",
     "displayName": "testBinarySearch(org.elasticsearch.common.util.ArrayUtilsTests)",
     "methodName": "testBinarySearch",
     "className": "org.elasticsearch.common.util.ArrayUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935871028
 }
]

[
 "TEST_STARTED",
 "ID#testConcat(org.elasticsearch.common.util.ArrayUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcat(org.elasticsearch.common.util.ArrayUtilsTests)",
  "startTimestamp": 1473935871045,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testBinarySearch(org.elasticsearch.common.util.ArrayUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBinarySearch(org.elasticsearch.common.util.ArrayUtilsTests)",
  "startTimestamp": 1473935871053,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.ArrayUtilsTests",
  "startTimestamp": 1473935871028,
  "executionTime": 31
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.stats.SearchStatsUnitTests",
   "displayName": "org.elasticsearch.search.stats.SearchStatsUnitTests",
   "methodName": null,
   "className": "org.elasticsearch.search.stats.SearchStatsUnitTests",
   "children": [
    {
     "id": "ID#testShardLevelSearchGroupStats(org.elasticsearch.search.stats.SearchStatsUnitTests)",
     "displayName": "testShardLevelSearchGroupStats(org.elasticsearch.search.stats.SearchStatsUnitTests)",
     "methodName": "testShardLevelSearchGroupStats",
     "className": "org.elasticsearch.search.stats.SearchStatsUnitTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935871082
 }
]

[
 "TEST_STARTED",
 "ID#testShardLevelSearchGroupStats(org.elasticsearch.search.stats.SearchStatsUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardLevelSearchGroupStats(org.elasticsearch.search.stats.SearchStatsUnitTests)",
  "startTimestamp": 1473935871102,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.stats.SearchStatsUnitTests",
  "startTimestamp": 1473935871082,
  "executionTime": 26
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.slice.SliceBuilderTests",
   "displayName": "org.elasticsearch.search.slice.SliceBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.slice.SliceBuilderTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.slice.SliceBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.slice.SliceBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.slice.SliceBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToFilter(org.elasticsearch.search.slice.SliceBuilderTests)",
     "displayName": "testToFilter(org.elasticsearch.search.slice.SliceBuilderTests)",
     "methodName": "testToFilter",
     "className": "org.elasticsearch.search.slice.SliceBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInvalidArguments(org.elasticsearch.search.slice.SliceBuilderTests)",
     "displayName": "testInvalidArguments(org.elasticsearch.search.slice.SliceBuilderTests)",
     "methodName": "testInvalidArguments",
     "className": "org.elasticsearch.search.slice.SliceBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.slice.SliceBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.slice.SliceBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.slice.SliceBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.slice.SliceBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.slice.SliceBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.slice.SliceBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935871204
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.slice.SliceBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.slice.SliceBuilderTests)",
  "startTimestamp": 1473935871222,
  "executionTime": 90
 }
]

[
 "TEST_STARTED",
 "ID#testToFilter(org.elasticsearch.search.slice.SliceBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToFilter(org.elasticsearch.search.slice.SliceBuilderTests)",
  "startTimestamp": 1473935871312,
  "executionTime": 188
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidArguments(org.elasticsearch.search.slice.SliceBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidArguments(org.elasticsearch.search.slice.SliceBuilderTests)",
  "startTimestamp": 1473935871500,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.slice.SliceBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.slice.SliceBuilderTests)",
  "startTimestamp": 1473935871505,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.slice.SliceBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.slice.SliceBuilderTests)",
  "startTimestamp": 1473935871508,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.slice.SliceBuilderTests",
  "startTimestamp": 1473935871204,
  "executionTime": 309
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.support.PathTests",
   "displayName": "org.elasticsearch.search.aggregations.support.PathTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.support.PathTests",
   "children": [
    {
     "id": "ID#testValidPaths(org.elasticsearch.search.aggregations.support.PathTests)",
     "displayName": "testValidPaths(org.elasticsearch.search.aggregations.support.PathTests)",
     "methodName": "testValidPaths",
     "className": "org.elasticsearch.search.aggregations.support.PathTests",
     "children": []
    },
    {
     "id": "ID#testInvalidPaths(org.elasticsearch.search.aggregations.support.PathTests)",
     "displayName": "testInvalidPaths(org.elasticsearch.search.aggregations.support.PathTests)",
     "methodName": "testInvalidPaths",
     "className": "org.elasticsearch.search.aggregations.support.PathTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935871584
 }
]

[
 "TEST_STARTED",
 "ID#testValidPaths(org.elasticsearch.search.aggregations.support.PathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidPaths(org.elasticsearch.search.aggregations.support.PathTests)",
  "startTimestamp": 1473935871605,
  "executionTime": 109
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidPaths(org.elasticsearch.search.aggregations.support.PathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidPaths(org.elasticsearch.search.aggregations.support.PathTests)",
  "startTimestamp": 1473935871715,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.support.PathTests",
  "startTimestamp": 1473935871584,
  "executionTime": 135
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
   "children": [
    {
     "id": "ID#testToQueryFieldsWildcard(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testToQueryFieldsWildcard(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testToQueryFieldsWildcard",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryParameterArrayException(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testQueryParameterArrayException(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testQueryParameterArrayException",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryMultipleTermsBooleanQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testToQueryMultipleTermsBooleanQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testToQueryMultipleTermsBooleanQuery",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryBoost(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testToQueryBoost(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testToQueryBoost",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegaArguments(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testIllegaArguments(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testIllegaArguments",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFuzzinessOnNonStringField(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testFuzzinessOnNonStringField(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testFuzzinessOnNonStringField",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryMultipleFieldsBooleanQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testToQueryMultipleFieldsBooleanQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testToQueryMultipleFieldsBooleanQuery",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryMultipleFieldsDisMaxQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testToQueryMultipleFieldsDisMaxQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testToQueryMultipleFieldsDisMaxQuery",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryFieldMissing(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testToQueryFieldMissing(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testToQueryFieldMissing",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFuzzinessNotAllowedTypes(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "displayName": "testFuzzinessNotAllowedTypes(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
     "methodName": "testFuzzinessNotAllowedTypes",
     "className": "org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935871764
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryFieldsWildcard(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:37:51,821][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{MbSR61xkSgmbxSLtWmDJyw}{local}{local[43]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:37:51,833][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:37:51,833][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:37:51,856][WARN ][org.elasticsearch.deprecation.index.mapper]  [afJs] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:37:51,856][WARN ][org.elasticsearch.deprecation.index.mapper]  [afJs] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:37:51,856][WARN ][org.elasticsearch.deprecation.index.mapper]  [afJs] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:37:51,860][WARN ][org.elasticsearch.deprecation.index.mapper]  [afJs] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:37:51,860][WARN ][org.elasticsearch.deprecation.index.mapper]  [afJs] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:37:51,860][WARN ][org.elasticsearch.deprecation.index.mapper]  [afJs] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:37:51,865][WARN ][org.elasticsearch.deprecation.index.mapper]  [afJs] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:37:51,865][WARN ][org.elasticsearch.deprecation.index.mapper]  [afJs] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:37:51,865][WARN ][org.elasticsearch.deprecation.index.mapper]  [afJs] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:37:51,867][WARN ][org.elasticsearch.deprecation.index.mapper]  [afJs] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:37:51,867][WARN ][org.elasticsearch.deprecation.index.mapper]  [afJs] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:37:51,867][WARN ][org.elasticsearch.deprecation.index.mapper]  [afJs] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:37:51,870][WARN ][org.elasticsearch.deprecation.index.mapper]  [afJs] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:37:51,870][WARN ][org.elasticsearch.deprecation.index.mapper]  [afJs] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:37:51,870][WARN ][org.elasticsearch.deprecation.index.mapper]  [afJs] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:37:51,880][WARN ][org.elasticsearch.deprecation.index.mapper]  [afJs] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:37:51,880][WARN ][org.elasticsearch.deprecation.index.mapper]  [afJs] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:37:51,880][WARN ][org.elasticsearch.deprecation.index.mapper]  [afJs] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryFieldsWildcard(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1473935871799,
  "executionTime": 85
 }
]

[
 "TEST_STARTED",
 "ID#testQueryParameterArrayException(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryParameterArrayException(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1473935871884,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1473935871888,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryMultipleTermsBooleanQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryMultipleTermsBooleanQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1473935871892,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryBoost(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryBoost(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1473935871896,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1473935871899,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1473935871903,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIllegaArguments(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegaArguments(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1473935871906,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1473935871911,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFuzzinessOnNonStringField(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFuzzinessOnNonStringField(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1473935871914,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1473935871999,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryMultipleFieldsBooleanQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryMultipleFieldsBooleanQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1473935872004,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryMultipleFieldsDisMaxQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryMultipleFieldsDisMaxQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1473935872007,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1473935872010,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1473935872016,
  "executionTime": 62
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryFieldMissing(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryFieldMissing(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1473935872078,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1473935872082,
  "executionTime": 47
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1473935872129,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testFuzzinessNotAllowedTypes(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFuzzinessNotAllowedTypes(org.elasticsearch.index.query.MultiMatchQueryBuilderTests)",
  "startTimestamp": 1473935872135,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.MultiMatchQueryBuilderTests",
  "startTimestamp": 1473935871764,
  "executionTime": 385
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests",
   "displayName": "org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests",
   "children": [
    {
     "id": "ID#testFailAfterIntermediateCommit(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "displayName": "testFailAfterIntermediateCommit(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "methodName": "testFailAfterIntermediateCommit",
     "className": "org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests",
     "children": []
    },
    {
     "id": "ID#testSyncFailsOnIndexClosedOrMissing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "displayName": "testSyncFailsOnIndexClosedOrMissing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "methodName": "testSyncFailsOnIndexClosedOrMissing",
     "className": "org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests",
     "children": []
    },
    {
     "id": "ID#testFailWhenCommitIsMissing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "displayName": "testFailWhenCommitIsMissing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "methodName": "testFailWhenCommitIsMissing",
     "className": "org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests",
     "children": []
    },
    {
     "id": "ID#testSyncFailsIfOperationIsInFlight(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "displayName": "testSyncFailsIfOperationIsInFlight(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "methodName": "testSyncFailsIfOperationIsInFlight",
     "className": "org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests",
     "children": []
    },
    {
     "id": "ID#testModificationPreventsFlushing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "displayName": "testModificationPreventsFlushing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "methodName": "testModificationPreventsFlushing",
     "className": "org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests",
     "children": []
    },
    {
     "id": "ID#testSingleShardSuccess(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "displayName": "testSingleShardSuccess(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
     "methodName": "testSingleShardSuccess",
     "className": "org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935872190
 }
]

[
 "TEST_STARTED",
 "ID#testFailAfterIntermediateCommit(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:52,243][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:52,279][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:52,279][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:52,284][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[15428], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:52,287][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:52,287][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:52,499][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:52,500][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:52,500][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[50]}, bound_addresses {local[50]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:52,503][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{KXr1YPFuS1us1Xpfvik54g}{pySTKW7bR3aPRgubiNqTPg}{local}{local[50]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:52,505][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:52,525][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:52,548][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:52,636][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:52,656][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/k0F1H_gkTi-71gqOQ0rmRA] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:53,648][INFO ][org.elasticsearch.indices.flush] [node_s_0] [SyncedFlushSingleNodeTests#testFailAfterIntermediateCommit]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailAfterIntermediateCommit(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
  "startTimestamp": 1473935872233,
  "executionTime": 1456
 }
]

[
 "TEST_STARTED",
 "ID#testSyncFailsOnIndexClosedOrMissing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:53,697][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:53,755][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:53,776][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[test/YZPfaVUlR4GceZvxje7Vew]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:53,799][INFO ][org.elasticsearch.indices.flush] [node_s_0] [SyncedFlushSingleNodeTests#testSyncFailsOnIndexClosedOrMissing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSyncFailsOnIndexClosedOrMissing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
  "startTimestamp": 1473935873689,
  "executionTime": 164
 }
]

[
 "TEST_STARTED",
 "ID#testFailWhenCommitIsMissing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:53,862][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:53,925][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:53,947][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/4krzcOc9RwSWXQjbQDfNuA] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:54,202][INFO ][org.elasticsearch.indices.flush] [node_s_0] [SyncedFlushSingleNodeTests#testFailWhenCommitIsMissing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailWhenCommitIsMissing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
  "startTimestamp": 1473935873853,
  "executionTime": 384
 }
]

[
 "TEST_STARTED",
 "ID#testSyncFailsIfOperationIsInFlight(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:54,248][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:54,315][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:54,341][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/akThmglpTH6DJmsm8Qt5lw] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:54,868][INFO ][org.elasticsearch.indices.flush] [node_s_0] [SyncedFlushSingleNodeTests#testSyncFailsIfOperationIsInFlight]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSyncFailsIfOperationIsInFlight(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
  "startTimestamp": 1473935874238,
  "executionTime": 702
 }
]

[
 "TEST_STARTED",
 "ID#testModificationPreventsFlushing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:54,950][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:55,008][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:55,027][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/bMA_LTaYT8OJDHvHBFcSKA] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:55,516][INFO ][org.elasticsearch.indices.flush] [node_s_0] [SyncedFlushSingleNodeTests#testModificationPreventsFlushing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testModificationPreventsFlushing(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
  "startTimestamp": 1473935874941,
  "executionTime": 616
 }
]

[
 "TEST_STARTED",
 "ID#testSingleShardSuccess(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:55,567][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:55,622][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:55,642][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/g3Gke9nTRBGzU9MkFtPlkQ] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:56,013][INFO ][org.elasticsearch.indices.flush] [node_s_0] [SyncedFlushSingleNodeTests#testSingleShardSuccess]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleShardSuccess(org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests)",
  "startTimestamp": 1473935875558,
  "executionTime": 496
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:56,055][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:56,055][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:56,056][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:37:56,058][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.flush.SyncedFlushSingleNodeTests",
  "startTimestamp": 1473935872190,
  "executionTime": 3880
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests",
   "displayName": "org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests",
   "children": [
    {
     "id": "ID#testUpgrade(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)",
     "displayName": "testUpgrade(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)",
     "methodName": "testUpgrade",
     "className": "org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests",
     "children": []
    },
    {
     "id": "ID#testIsUpgraded(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)",
     "displayName": "testIsUpgraded(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)",
     "methodName": "testIsUpgraded",
     "className": "org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests",
     "children": []
    },
    {
     "id": "ID#testArchiveBrokenIndexSettings(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)",
     "displayName": "testArchiveBrokenIndexSettings(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)",
     "methodName": "testArchiveBrokenIndexSettings",
     "className": "org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935876125
 }
]

[
 "TEST_STARTED",
 "ID#testUpgrade(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgrade(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)",
  "startTimestamp": 1473935876145,
  "executionTime": 42
 }
]

[
 "TEST_STARTED",
 "ID#testIsUpgraded(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsUpgraded(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)",
  "startTimestamp": 1473935876187,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testArchiveBrokenIndexSettings(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:37:56,198][WARN ][org.elasticsearch.common.settings] [node_s_0] found unknown setting: index.refresh.interval value: -1 - archiving%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArchiveBrokenIndexSettings(org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests)",
  "startTimestamp": 1473935876192,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.MetaDataIndexUpgradeServiceTests",
  "startTimestamp": 1473935876125,
  "executionTime": 75
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.RandomAllocationDeciderTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.RandomAllocationDeciderTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.RandomAllocationDeciderTests",
   "children": [
    {
     "id": "ID#testRandomDecisions(org.elasticsearch.cluster.routing.allocation.RandomAllocationDeciderTests)",
     "displayName": "testRandomDecisions(org.elasticsearch.cluster.routing.allocation.RandomAllocationDeciderTests)",
     "methodName": "testRandomDecisions",
     "className": "org.elasticsearch.cluster.routing.allocation.RandomAllocationDeciderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935876237
 }
]

[
 "TEST_STARTED",
 "ID#testRandomDecisions(org.elasticsearch.cluster.routing.allocation.RandomAllocationDeciderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:37:56,281][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start iteration [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:37:56,284][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding node [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:37:56,284][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding node [1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:37:56,286][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:37:56,288][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start iteration [1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:37:56,291][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[INDEX_1][0], [INDEX_0][4], [INDEX_0][1], [INDEX_0][3], [INDEX_0][5], [INDEX_1][1], [INDEX_0][2], [INDEX_0][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:37:56,291][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start iteration [2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:37:56,295][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start iteration [3]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:37:56,296][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start iteration [4]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:37:56,300][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start iteration [5]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:37:56,308][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Fill up nodes such that every shard can be allocated%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:37:56,308][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding node [2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:37:56,308][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding node [3]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:37:56,309][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding node [4]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:37:56,309][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding node [5]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:37:56,309][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now say YES to everything%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:37:56,325][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[INDEX_1][1], [INDEX_1][1], [INDEX_1][0], [INDEX_0][2], [INDEX_0][1], [INDEX_0][0], [INDEX_1][1], [INDEX_1][0], [INDEX_0][1], [INDEX_0][3]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:37:56,325][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Done Balancing after [1] iterations%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomDecisions(org.elasticsearch.cluster.routing.allocation.RandomAllocationDeciderTests)",
  "startTimestamp": 1473935876262,
  "executionTime": 64
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.RandomAllocationDeciderTests",
  "startTimestamp": 1473935876237,
  "executionTime": 91
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.completion.CompletionSuggestionTests",
   "displayName": "org.elasticsearch.search.suggest.completion.CompletionSuggestionTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.completion.CompletionSuggestionTests",
   "children": [
    {
     "id": "ID#testToReduce(org.elasticsearch.search.suggest.completion.CompletionSuggestionTests)",
     "displayName": "testToReduce(org.elasticsearch.search.suggest.completion.CompletionSuggestionTests)",
     "methodName": "testToReduce",
     "className": "org.elasticsearch.search.suggest.completion.CompletionSuggestionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935876383
 }
]

[
 "TEST_STARTED",
 "ID#testToReduce(org.elasticsearch.search.suggest.completion.CompletionSuggestionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToReduce(org.elasticsearch.search.suggest.completion.CompletionSuggestionTests)",
  "startTimestamp": 1473935876407,
  "executionTime": 44
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.completion.CompletionSuggestionTests",
  "startTimestamp": 1473935876383,
  "executionTime": 71
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.LuceneTests",
   "displayName": "org.elasticsearch.common.lucene.LuceneTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.LuceneTests",
   "children": [
    {
     "id": "ID#testPruneUnreferencedFiles(org.elasticsearch.common.lucene.LuceneTests)",
     "displayName": "testPruneUnreferencedFiles(org.elasticsearch.common.lucene.LuceneTests)",
     "methodName": "testPruneUnreferencedFiles",
     "className": "org.elasticsearch.common.lucene.LuceneTests",
     "children": []
    },
    {
     "id": "ID#testWaitForIndex(org.elasticsearch.common.lucene.LuceneTests)",
     "displayName": "testWaitForIndex(org.elasticsearch.common.lucene.LuceneTests)",
     "methodName": "testWaitForIndex",
     "className": "org.elasticsearch.common.lucene.LuceneTests",
     "children": []
    },
    {
     "id": "ID#testMMapHackSupported(org.elasticsearch.common.lucene.LuceneTests)",
     "displayName": "testMMapHackSupported(org.elasticsearch.common.lucene.LuceneTests)",
     "methodName": "testMMapHackSupported",
     "className": "org.elasticsearch.common.lucene.LuceneTests",
     "children": []
    },
    {
     "id": "ID#testCount(org.elasticsearch.common.lucene.LuceneTests)",
     "displayName": "testCount(org.elasticsearch.common.lucene.LuceneTests)",
     "methodName": "testCount",
     "className": "org.elasticsearch.common.lucene.LuceneTests",
     "children": []
    },
    {
     "id": "ID#testAsSequentialAccessBits(org.elasticsearch.common.lucene.LuceneTests)",
     "displayName": "testAsSequentialAccessBits(org.elasticsearch.common.lucene.LuceneTests)",
     "methodName": "testAsSequentialAccessBits",
     "className": "org.elasticsearch.common.lucene.LuceneTests",
     "children": []
    },
    {
     "id": "ID#testNumDocs(org.elasticsearch.common.lucene.LuceneTests)",
     "displayName": "testNumDocs(org.elasticsearch.common.lucene.LuceneTests)",
     "methodName": "testNumDocs",
     "className": "org.elasticsearch.common.lucene.LuceneTests",
     "children": []
    },
    {
     "id": "ID#testFiles(org.elasticsearch.common.lucene.LuceneTests)",
     "displayName": "testFiles(org.elasticsearch.common.lucene.LuceneTests)",
     "methodName": "testFiles",
     "className": "org.elasticsearch.common.lucene.LuceneTests",
     "children": []
    },
    {
     "id": "ID#testCleanIndex(org.elasticsearch.common.lucene.LuceneTests)",
     "displayName": "testCleanIndex(org.elasticsearch.common.lucene.LuceneTests)",
     "methodName": "testCleanIndex",
     "className": "org.elasticsearch.common.lucene.LuceneTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935876487
 }
]

[
 "TEST_STARTED",
 "ID#testPruneUnreferencedFiles(org.elasticsearch.common.lucene.LuceneTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPruneUnreferencedFiles(org.elasticsearch.common.lucene.LuceneTests)",
  "startTimestamp": 1473935876508,
  "executionTime": 247
 }
]

[
 "TEST_STARTED",
 "ID#testWaitForIndex(org.elasticsearch.common.lucene.LuceneTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWaitForIndex(org.elasticsearch.common.lucene.LuceneTests)",
  "startTimestamp": 1473935876755,
  "executionTime": 1178
 }
]

[
 "TEST_STARTED",
 "ID#testMMapHackSupported(org.elasticsearch.common.lucene.LuceneTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMMapHackSupported(org.elasticsearch.common.lucene.LuceneTests)",
  "startTimestamp": 1473935877934,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCount(org.elasticsearch.common.lucene.LuceneTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCount(org.elasticsearch.common.lucene.LuceneTests)",
  "startTimestamp": 1473935877936,
  "executionTime": 89
 }
]

[
 "TEST_STARTED",
 "ID#testAsSequentialAccessBits(org.elasticsearch.common.lucene.LuceneTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAsSequentialAccessBits(org.elasticsearch.common.lucene.LuceneTests)",
  "startTimestamp": 1473935878025,
  "executionTime": 53
 }
]

[
 "TEST_STARTED",
 "ID#testNumDocs(org.elasticsearch.common.lucene.LuceneTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNumDocs(org.elasticsearch.common.lucene.LuceneTests)",
  "startTimestamp": 1473935878079,
  "executionTime": 208
 }
]

[
 "TEST_STARTED",
 "ID#testFiles(org.elasticsearch.common.lucene.LuceneTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFiles(org.elasticsearch.common.lucene.LuceneTests)",
  "startTimestamp": 1473935878288,
  "executionTime": 70
 }
]

[
 "TEST_STARTED",
 "ID#testCleanIndex(org.elasticsearch.common.lucene.LuceneTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCleanIndex(org.elasticsearch.common.lucene.LuceneTests)",
  "startTimestamp": 1473935878358,
  "executionTime": 68
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.LuceneTests",
  "startTimestamp": 1473935876487,
  "executionTime": 1942
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.ShardRoutingTests",
   "displayName": "org.elasticsearch.cluster.routing.ShardRoutingTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.ShardRoutingTests",
   "children": [
    {
     "id": "ID#testIsSourceTargetRelocation(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "displayName": "testIsSourceTargetRelocation(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "methodName": "testIsSourceTargetRelocation",
     "className": "org.elasticsearch.cluster.routing.ShardRoutingTests",
     "children": []
    },
    {
     "id": "ID#testIsSameAllocation(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "displayName": "testIsSameAllocation(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "methodName": "testIsSameAllocation",
     "className": "org.elasticsearch.cluster.routing.ShardRoutingTests",
     "children": []
    },
    {
     "id": "ID#testExpectedSize(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "displayName": "testExpectedSize(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "methodName": "testExpectedSize",
     "className": "org.elasticsearch.cluster.routing.ShardRoutingTests",
     "children": []
    },
    {
     "id": "ID#testEqualsIgnoringVersion(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "displayName": "testEqualsIgnoringVersion(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "methodName": "testEqualsIgnoringVersion",
     "className": "org.elasticsearch.cluster.routing.ShardRoutingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935878460
 }
]

[
 "TEST_STARTED",
 "ID#testIsSourceTargetRelocation(org.elasticsearch.cluster.routing.ShardRoutingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsSourceTargetRelocation(org.elasticsearch.cluster.routing.ShardRoutingTests)",
  "startTimestamp": 1473935878476,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testIsSameAllocation(org.elasticsearch.cluster.routing.ShardRoutingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsSameAllocation(org.elasticsearch.cluster.routing.ShardRoutingTests)",
  "startTimestamp": 1473935878483,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testExpectedSize(org.elasticsearch.cluster.routing.ShardRoutingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExpectedSize(org.elasticsearch.cluster.routing.ShardRoutingTests)",
  "startTimestamp": 1473935878485,
  "executionTime": 88
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsIgnoringVersion(org.elasticsearch.cluster.routing.ShardRoutingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsIgnoringVersion(org.elasticsearch.cluster.routing.ShardRoutingTests)",
  "startTimestamp": 1473935878573,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.ShardRoutingTests",
  "startTimestamp": 1473935878460,
  "executionTime": 123
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.NGramTokenizerFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.NGramTokenizerFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.NGramTokenizerFactoryTests",
   "children": [
    {
     "id": "ID#testBackwardsCompatibilityEdgeNgramTokenFilter(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
     "displayName": "testBackwardsCompatibilityEdgeNgramTokenFilter(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
     "methodName": "testBackwardsCompatibilityEdgeNgramTokenFilter",
     "className": "org.elasticsearch.index.analysis.NGramTokenizerFactoryTests",
     "children": []
    },
    {
     "id": "ID#testPreTokenizationEdge(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
     "displayName": "testPreTokenizationEdge(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
     "methodName": "testPreTokenizationEdge",
     "className": "org.elasticsearch.index.analysis.NGramTokenizerFactoryTests",
     "children": []
    },
    {
     "id": "ID#testParseTokenChars(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
     "displayName": "testParseTokenChars(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
     "methodName": "testParseTokenChars",
     "className": "org.elasticsearch.index.analysis.NGramTokenizerFactoryTests",
     "children": []
    },
    {
     "id": "ID#testPreTokenization(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
     "displayName": "testPreTokenization(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
     "methodName": "testPreTokenization",
     "className": "org.elasticsearch.index.analysis.NGramTokenizerFactoryTests",
     "children": []
    },
    {
     "id": "ID#testNoTokenChars(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
     "displayName": "testNoTokenChars(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
     "methodName": "testNoTokenChars",
     "className": "org.elasticsearch.index.analysis.NGramTokenizerFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935878636
 }
]

[
 "TEST_STARTED",
 "ID#testBackwardsCompatibilityEdgeNgramTokenFilter(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBackwardsCompatibilityEdgeNgramTokenFilter(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
  "startTimestamp": 1473935878653,
  "executionTime": 85
 }
]

[
 "TEST_STARTED",
 "ID#testPreTokenizationEdge(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreTokenizationEdge(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
  "startTimestamp": 1473935878738,
  "executionTime": 190
 }
]

[
 "TEST_STARTED",
 "ID#testParseTokenChars(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseTokenChars(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
  "startTimestamp": 1473935878928,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testPreTokenization(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreTokenization(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
  "startTimestamp": 1473935878944,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testNoTokenChars(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoTokenChars(org.elasticsearch.index.analysis.NGramTokenizerFactoryTests)",
  "startTimestamp": 1473935878951,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.NGramTokenizerFactoryTests",
  "startTimestamp": 1473935878636,
  "executionTime": 321
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.FieldDataTests",
   "displayName": "org.elasticsearch.index.fielddata.FieldDataTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.FieldDataTests",
   "children": [
    {
     "id": "ID#testSortableLongBitsToDoubles(org.elasticsearch.index.fielddata.FieldDataTests)",
     "displayName": "testSortableLongBitsToDoubles(org.elasticsearch.index.fielddata.FieldDataTests)",
     "methodName": "testSortableLongBitsToDoubles",
     "className": "org.elasticsearch.index.fielddata.FieldDataTests",
     "children": []
    },
    {
     "id": "ID#testDoublesToSortableLongBits(org.elasticsearch.index.fielddata.FieldDataTests)",
     "displayName": "testDoublesToSortableLongBits(org.elasticsearch.index.fielddata.FieldDataTests)",
     "methodName": "testDoublesToSortableLongBits",
     "className": "org.elasticsearch.index.fielddata.FieldDataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935879028
 }
]

[
 "TEST_STARTED",
 "ID#testSortableLongBitsToDoubles(org.elasticsearch.index.fielddata.FieldDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortableLongBitsToDoubles(org.elasticsearch.index.fielddata.FieldDataTests)",
  "startTimestamp": 1473935879044,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testDoublesToSortableLongBits(org.elasticsearch.index.fielddata.FieldDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoublesToSortableLongBits(org.elasticsearch.index.fielddata.FieldDataTests)",
  "startTimestamp": 1473935879050,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.FieldDataTests",
  "startTimestamp": 1473935879028,
  "executionTime": 26
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.threadpool.FixedThreadPoolTests",
   "displayName": "org.elasticsearch.threadpool.FixedThreadPoolTests",
   "methodName": null,
   "className": "org.elasticsearch.threadpool.FixedThreadPoolTests",
   "children": [
    {
     "id": "ID#testRejectedExecutionCounter(org.elasticsearch.threadpool.FixedThreadPoolTests)",
     "displayName": "testRejectedExecutionCounter(org.elasticsearch.threadpool.FixedThreadPoolTests)",
     "methodName": "testRejectedExecutionCounter",
     "className": "org.elasticsearch.threadpool.FixedThreadPoolTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935879084
 }
]

[
 "TEST_STARTED",
 "ID#testRejectedExecutionCounter(org.elasticsearch.threadpool.FixedThreadPoolTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRejectedExecutionCounter(org.elasticsearch.threadpool.FixedThreadPoolTests)",
  "startTimestamp": 1473935879101,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.threadpool.FixedThreadPoolTests",
  "startTimestamp": 1473935879084,
  "executionTime": 27
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.UpdateNumberOfReplicasTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.UpdateNumberOfReplicasTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.UpdateNumberOfReplicasTests",
   "children": [
    {
     "id": "ID#testUpdateNumberOfReplicas(org.elasticsearch.cluster.routing.allocation.UpdateNumberOfReplicasTests)",
     "displayName": "testUpdateNumberOfReplicas(org.elasticsearch.cluster.routing.allocation.UpdateNumberOfReplicasTests)",
     "methodName": "testUpdateNumberOfReplicas",
     "className": "org.elasticsearch.cluster.routing.allocation.UpdateNumberOfReplicasTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935879151
 }
]

[
 "TEST_STARTED",
 "ID#testUpdateNumberOfReplicas(org.elasticsearch.cluster.routing.allocation.UpdateNumberOfReplicasTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:59,176][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:59,178][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding two nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:59,179][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start all the primary shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:59,180][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start all the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:59,180][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:59,181][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] add another replica%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:59,199][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Add another node and start the added replica%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:59,200][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:59,200][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now remove a replica%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:37:59,201][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] do a reroute, should remain the same%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdateNumberOfReplicas(org.elasticsearch.cluster.routing.allocation.UpdateNumberOfReplicasTests)",
  "startTimestamp": 1473935879168,
  "executionTime": 34
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.UpdateNumberOfReplicasTests",
  "startTimestamp": 1473935879151,
  "executionTime": 54
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.ToAndFromJsonMetaDataTests",
   "displayName": "org.elasticsearch.cluster.metadata.ToAndFromJsonMetaDataTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.ToAndFromJsonMetaDataTests",
   "children": [
    {
     "id": "ID#testSimpleJsonFromAndTo(org.elasticsearch.cluster.metadata.ToAndFromJsonMetaDataTests)",
     "displayName": "testSimpleJsonFromAndTo(org.elasticsearch.cluster.metadata.ToAndFromJsonMetaDataTests)",
     "methodName": "testSimpleJsonFromAndTo",
     "className": "org.elasticsearch.cluster.metadata.ToAndFromJsonMetaDataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935879285
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleJsonFromAndTo(org.elasticsearch.cluster.metadata.ToAndFromJsonMetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleJsonFromAndTo(org.elasticsearch.cluster.metadata.ToAndFromJsonMetaDataTests)",
  "startTimestamp": 1473935879303,
  "executionTime": 52
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.ToAndFromJsonMetaDataTests",
  "startTimestamp": 1473935879285,
  "executionTime": 74
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.search.nested.NestedSortingTests",
   "displayName": "org.elasticsearch.index.search.nested.NestedSortingTests",
   "methodName": null,
   "className": "org.elasticsearch.index.search.nested.NestedSortingTests",
   "children": [
    {
     "id": "ID#testNestedSorting(org.elasticsearch.index.search.nested.NestedSortingTests)",
     "displayName": "testNestedSorting(org.elasticsearch.index.search.nested.NestedSortingTests)",
     "methodName": "testNestedSorting",
     "className": "org.elasticsearch.index.search.nested.NestedSortingTests",
     "children": []
    },
    {
     "id": "ID#testDuel(org.elasticsearch.index.search.nested.NestedSortingTests)",
     "displayName": "testDuel(org.elasticsearch.index.search.nested.NestedSortingTests)",
     "methodName": "testDuel",
     "className": "org.elasticsearch.index.search.nested.NestedSortingTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.index.search.nested.NestedSortingTests)",
     "displayName": "testEmpty(org.elasticsearch.index.search.nested.NestedSortingTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.index.search.nested.NestedSortingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935879414
 }
]

[
 "TEST_STARTED",
 "ID#testNestedSorting(org.elasticsearch.index.search.nested.NestedSortingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:37:59,449][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:37:59,509][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:37:59,509][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:37:59,513][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[15428], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:37:59,517][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:37:59,517][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:37:59,881][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:37:59,882][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:37:59,882][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[51]}, bound_addresses {local[51]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:37:59,886][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{LChEVGZeSIOWdXoL5iYv_A}{jRkjpB8gSuuC1eD3rL3djg}{local}{local[51]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:37:59,886][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:37:59,918][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:37:59,996][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:00,144][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:00,343][INFO ][org.elasticsearch.index.search.nested] [NestedSortingTests#testNestedSorting]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedSorting(org.elasticsearch.index.search.nested.NestedSortingTests)",
  "startTimestamp": 1473935879438,
  "executionTime": 937
 }
]

[
 "TEST_STARTED",
 "ID#testDuel(org.elasticsearch.index.search.nested.NestedSortingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:00,384][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:00,471][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:00,628][INFO ][org.elasticsearch.index.search.nested] [NestedSortingTests#testDuel]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuel(org.elasticsearch.index.search.nested.NestedSortingTests)",
  "startTimestamp": 1473935880375,
  "executionTime": 426
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.index.search.nested.NestedSortingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:00,811][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:00,914][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:00,950][INFO ][org.elasticsearch.index.search.nested] [NestedSortingTests#testEmpty]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.index.search.nested.NestedSortingTests)",
  "startTimestamp": 1473935880801,
  "executionTime": 258
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:01,059][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:01,060][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:01,060][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:01,061][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.search.nested.NestedSortingTests",
  "startTimestamp": 1473935879414,
  "executionTime": 1662
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.store.IndicesStoreTests",
   "displayName": "org.elasticsearch.indices.store.IndicesStoreTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.store.IndicesStoreTests",
   "children": [
    {
     "id": "ID#testShardCanBeDeletedNoShardRouting(org.elasticsearch.indices.store.IndicesStoreTests)",
     "displayName": "testShardCanBeDeletedNoShardRouting(org.elasticsearch.indices.store.IndicesStoreTests)",
     "methodName": "testShardCanBeDeletedNoShardRouting",
     "className": "org.elasticsearch.indices.store.IndicesStoreTests",
     "children": []
    },
    {
     "id": "ID#testShardCanBeDeletedShardExistsLocally(org.elasticsearch.indices.store.IndicesStoreTests)",
     "displayName": "testShardCanBeDeletedShardExistsLocally(org.elasticsearch.indices.store.IndicesStoreTests)",
     "methodName": "testShardCanBeDeletedShardExistsLocally",
     "className": "org.elasticsearch.indices.store.IndicesStoreTests",
     "children": []
    },
    {
     "id": "ID#testShardCanBeDeletedNoShardStarted(org.elasticsearch.indices.store.IndicesStoreTests)",
     "displayName": "testShardCanBeDeletedNoShardStarted(org.elasticsearch.indices.store.IndicesStoreTests)",
     "methodName": "testShardCanBeDeletedNoShardStarted",
     "className": "org.elasticsearch.indices.store.IndicesStoreTests",
     "children": []
    },
    {
     "id": "ID#testShardCanBeDeletedRelocatingNode(org.elasticsearch.indices.store.IndicesStoreTests)",
     "displayName": "testShardCanBeDeletedRelocatingNode(org.elasticsearch.indices.store.IndicesStoreTests)",
     "methodName": "testShardCanBeDeletedRelocatingNode",
     "className": "org.elasticsearch.indices.store.IndicesStoreTests",
     "children": []
    },
    {
     "id": "ID#testShardCanBeDeletedNodeNotInList(org.elasticsearch.indices.store.IndicesStoreTests)",
     "displayName": "testShardCanBeDeletedNodeNotInList(org.elasticsearch.indices.store.IndicesStoreTests)",
     "methodName": "testShardCanBeDeletedNodeNotInList",
     "className": "org.elasticsearch.indices.store.IndicesStoreTests",
     "children": []
    },
    {
     "id": "ID#testShardCanBeDeletedNodeVersion(org.elasticsearch.indices.store.IndicesStoreTests)",
     "displayName": "testShardCanBeDeletedNodeVersion(org.elasticsearch.indices.store.IndicesStoreTests)",
     "methodName": "testShardCanBeDeletedNodeVersion",
     "className": "org.elasticsearch.indices.store.IndicesStoreTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935881138
 }
]

[
 "TEST_STARTED",
 "ID#testShardCanBeDeletedNoShardRouting(org.elasticsearch.indices.store.IndicesStoreTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:01,272][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{OQ8WQn7iRci-5W8q6YWOzA}{local}{local[53]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardCanBeDeletedNoShardRouting(org.elasticsearch.indices.store.IndicesStoreTests)",
  "startTimestamp": 1473935881196,
  "executionTime": 79
 }
]

[
 "TEST_STARTED",
 "ID#testShardCanBeDeletedShardExistsLocally(org.elasticsearch.indices.store.IndicesStoreTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:01,335][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{qezcyLU6SU6i8NbwIoSp8Q}{local}{local[54]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardCanBeDeletedShardExistsLocally(org.elasticsearch.indices.store.IndicesStoreTests)",
  "startTimestamp": 1473935881275,
  "executionTime": 67
 }
]

[
 "TEST_STARTED",
 "ID#testShardCanBeDeletedNoShardStarted(org.elasticsearch.indices.store.IndicesStoreTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:01,390][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{kmEXxkwIRv-tTVBevJl9CQ}{local}{local[55]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardCanBeDeletedNoShardStarted(org.elasticsearch.indices.store.IndicesStoreTests)",
  "startTimestamp": 1473935881343,
  "executionTime": 49
 }
]

[
 "TEST_STARTED",
 "ID#testShardCanBeDeletedRelocatingNode(org.elasticsearch.indices.store.IndicesStoreTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:01,451][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{jaDwxuNdSXSK1OUoGqBpZw}{local}{local[56]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardCanBeDeletedRelocatingNode(org.elasticsearch.indices.store.IndicesStoreTests)",
  "startTimestamp": 1473935881392,
  "executionTime": 64
 }
]

[
 "TEST_STARTED",
 "ID#testShardCanBeDeletedNodeNotInList(org.elasticsearch.indices.store.IndicesStoreTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:01,492][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{6KvOkDr8RT6s5WMSGgJ1ZA}{local}{local[57]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardCanBeDeletedNodeNotInList(org.elasticsearch.indices.store.IndicesStoreTests)",
  "startTimestamp": 1473935881456,
  "executionTime": 40
 }
]

[
 "TEST_STARTED",
 "ID#testShardCanBeDeletedNodeVersion(org.elasticsearch.indices.store.IndicesStoreTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:01,530][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{JX6Wpn2AQzmmih1hdxPzTw}{local}{local[58]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardCanBeDeletedNodeVersion(org.elasticsearch.indices.store.IndicesStoreTests)",
  "startTimestamp": 1473935881497,
  "executionTime": 35
 }
]

[
 "APPEND_STDERR",
 {
  "chunk": "Sep 15, 2016 12:38:01 PM com.carrotsearch.randomizedtesting.ThreadLeakControl checkThreadLeaks%0D%0AWARNING: Will linger awaiting termination of 1 leaked thread(s).%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.store.IndicesStoreTests",
  "startTimestamp": 1473935881138,
  "executionTime": 655
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.DocumentFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.DocumentFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.DocumentFieldMapperTests",
   "children": [
    {
     "id": "ID#testAnalyzers(org.elasticsearch.index.mapper.DocumentFieldMapperTests)",
     "displayName": "testAnalyzers(org.elasticsearch.index.mapper.DocumentFieldMapperTests)",
     "methodName": "testAnalyzers",
     "className": "org.elasticsearch.index.mapper.DocumentFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935881912
 }
]

[
 "TEST_STARTED",
 "ID#testAnalyzers(org.elasticsearch.index.mapper.DocumentFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAnalyzers(org.elasticsearch.index.mapper.DocumentFieldMapperTests)",
  "startTimestamp": 1473935881977,
  "executionTime": 47
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.DocumentFieldMapperTests",
  "startTimestamp": 1473935881912,
  "executionTime": 113
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.IndexModuleTests",
   "displayName": "org.elasticsearch.index.IndexModuleTests",
   "methodName": null,
   "className": "org.elasticsearch.index.IndexModuleTests",
   "children": [
    {
     "id": "ID#testListener(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testListener(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testListener",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testFrozen(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testFrozen(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testFrozen",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterIndexStore(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testRegisterIndexStore(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testRegisterIndexStore",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testSetupUnknownSimilarity(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testSetupUnknownSimilarity(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testSetupUnknownSimilarity",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testAddSimilarity(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testAddSimilarity(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testAddSimilarity",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testDisableQueryCacheHasPrecedenceOverForceQueryCache(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testDisableQueryCacheHasPrecedenceOverForceQueryCache(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testDisableQueryCacheHasPrecedenceOverForceQueryCache",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testSetupWithoutType(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testSetupWithoutType(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testSetupWithoutType",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testDefaultQueryCacheImplIsSelected(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testDefaultQueryCacheImplIsSelected(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testDefaultQueryCacheImplIsSelected",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testWrapperIsBound(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testWrapperIsBound(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testWrapperIsBound",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testAddIndexOperationListener(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testAddIndexOperationListener(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testAddIndexOperationListener",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testOtherServiceBound(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testOtherServiceBound(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testOtherServiceBound",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testAddSearchOperationListener(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testAddSearchOperationListener(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testAddSearchOperationListener",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    },
    {
     "id": "ID#testForceCustomQueryCache(org.elasticsearch.index.IndexModuleTests)",
     "displayName": "testForceCustomQueryCache(org.elasticsearch.index.IndexModuleTests)",
     "methodName": "testForceCustomQueryCache",
     "className": "org.elasticsearch.index.IndexModuleTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935882116
 }
]

[
 "TEST_STARTED",
 "ID#testListener(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:02,301][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{5_hYd5u8SKOgxZJviKgYEQ}{local}{local[59]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:02,326][INFO ][org.elasticsearch.env    ] [G9nt_se] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:02,326][INFO ][org.elasticsearch.env    ] [G9nt_se] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListener(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1473935882181,
  "executionTime": 197
 }
]

[
 "TEST_STARTED",
 "ID#testFrozen(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:02,400][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{DE0AS9CZRcuCMgUah14Nsw}{local}{local[60]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:02,430][INFO ][org.elasticsearch.env    ] [4HZbf0t] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:02,430][INFO ][org.elasticsearch.env    ] [4HZbf0t] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFrozen(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1473935882378,
  "executionTime": 75
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterIndexStore(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:02,644][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{C2VO03ihQr-pKgH4Zea0MQ}{local}{local[61]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:02,687][INFO ][org.elasticsearch.env    ] [DxIjv3K] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:02,687][INFO ][org.elasticsearch.env    ] [DxIjv3K] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterIndexStore(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1473935882453,
  "executionTime": 379
 }
]

[
 "TEST_STARTED",
 "ID#testSetupUnknownSimilarity(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:02,849][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{nhISC9dWSOuukw6G877Qxw}{local}{local[62]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:02,888][INFO ][org.elasticsearch.env    ] [luUsQ21] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:02,889][INFO ][org.elasticsearch.env    ] [luUsQ21] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetupUnknownSimilarity(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1473935882832,
  "executionTime": 81
 }
]

[
 "TEST_STARTED",
 "ID#testAddSimilarity(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:02,970][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Q7HPgeDIRRaG7VFm7Ot6KQ}{local}{local[63]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:02,997][INFO ][org.elasticsearch.env    ] [VFUTZZE] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:02,997][INFO ][org.elasticsearch.env    ] [VFUTZZE] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddSimilarity(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1473935882913,
  "executionTime": 219
 }
]

[
 "TEST_STARTED",
 "ID#testDisableQueryCacheHasPrecedenceOverForceQueryCache(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:03,205][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{VttfSPauR5WJCVBLSY_RvA}{local}{local[64]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:03,233][INFO ][org.elasticsearch.env    ] [Y3NuM4R] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:03,233][INFO ][org.elasticsearch.env    ] [Y3NuM4R] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDisableQueryCacheHasPrecedenceOverForceQueryCache(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1473935883133,
  "executionTime": 150
 }
]

[
 "TEST_STARTED",
 "ID#testSetupWithoutType(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:03,331][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Q2nPSxxxTPeWhRIZHCoB9A}{local}{local[65]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:03,359][INFO ][org.elasticsearch.env    ] [NphevOk] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:03,359][INFO ][org.elasticsearch.env    ] [NphevOk] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetupWithoutType(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1473935883284,
  "executionTime": 91
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultQueryCacheImplIsSelected(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:03,407][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{M-q2O2bUSYuuhJjie7azkw}{local}{local[66]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:03,434][INFO ][org.elasticsearch.env    ] [BwzD9ch] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:03,434][INFO ][org.elasticsearch.env    ] [BwzD9ch] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultQueryCacheImplIsSelected(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1473935883375,
  "executionTime": 79
 }
]

[
 "TEST_STARTED",
 "ID#testWrapperIsBound(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:03,509][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{gyJ_vLOsRHaTKil04dFd-A}{local}{local[67]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:03,547][INFO ][org.elasticsearch.env    ] [4mHMRSz] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:03,547][INFO ][org.elasticsearch.env    ] [4mHMRSz] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWrapperIsBound(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1473935883454,
  "executionTime": 126
 }
]

[
 "TEST_STARTED",
 "ID#testAddIndexOperationListener(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:03,636][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{yr6II-1ER7OFaG-3zATiEg}{local}{local[68]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:03,667][INFO ][org.elasticsearch.env    ] [ZkzeJ0I] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:03,667][INFO ][org.elasticsearch.env    ] [ZkzeJ0I] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddIndexOperationListener(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1473935883581,
  "executionTime": 114
 }
]

[
 "TEST_STARTED",
 "ID#testOtherServiceBound(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:03,761][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{vcLft2UKR3642ExIDIX1dw}{local}{local[69]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:03,788][INFO ][org.elasticsearch.env    ] [9xwZogg] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:03,788][INFO ][org.elasticsearch.env    ] [9xwZogg] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOtherServiceBound(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1473935883695,
  "executionTime": 134
 }
]

[
 "TEST_STARTED",
 "ID#testAddSearchOperationListener(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:03,845][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{BehuaS-DQgKUqpq8loOcIA}{local}{local[70]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:03,872][INFO ][org.elasticsearch.env    ] [oQH2O1K] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:03,873][INFO ][org.elasticsearch.env    ] [oQH2O1K] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddSearchOperationListener(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1473935883829,
  "executionTime": 82
 }
]

[
 "TEST_STARTED",
 "ID#testForceCustomQueryCache(org.elasticsearch.index.IndexModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:03,930][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{71VTdoS7TIuI3bbDIifCLA}{local}{local[71]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:03,957][INFO ][org.elasticsearch.env    ] [dRk-Cbu] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:03,958][INFO ][org.elasticsearch.env    ] [dRk-Cbu] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForceCustomQueryCache(org.elasticsearch.index.IndexModuleTests)",
  "startTimestamp": 1473935883911,
  "executionTime": 73
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.IndexModuleTests",
  "startTimestamp": 1473935882116,
  "executionTime": 1923
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.repositories.IndexIdTests",
   "displayName": "org.elasticsearch.repositories.IndexIdTests",
   "methodName": null,
   "className": "org.elasticsearch.repositories.IndexIdTests",
   "children": [
    {
     "id": "ID#testXContent(org.elasticsearch.repositories.IndexIdTests)",
     "displayName": "testXContent(org.elasticsearch.repositories.IndexIdTests)",
     "methodName": "testXContent",
     "className": "org.elasticsearch.repositories.IndexIdTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.repositories.IndexIdTests)",
     "displayName": "testSerialization(org.elasticsearch.repositories.IndexIdTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.repositories.IndexIdTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashCode(org.elasticsearch.repositories.IndexIdTests)",
     "displayName": "testEqualsAndHashCode(org.elasticsearch.repositories.IndexIdTests)",
     "methodName": "testEqualsAndHashCode",
     "className": "org.elasticsearch.repositories.IndexIdTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935884070
 }
]

[
 "TEST_STARTED",
 "ID#testXContent(org.elasticsearch.repositories.IndexIdTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testXContent(org.elasticsearch.repositories.IndexIdTests)",
  "startTimestamp": 1473935884093,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.repositories.IndexIdTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.repositories.IndexIdTests)",
  "startTimestamp": 1473935884098,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashCode(org.elasticsearch.repositories.IndexIdTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashCode(org.elasticsearch.repositories.IndexIdTests)",
  "startTimestamp": 1473935884101,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.repositories.IndexIdTests",
  "startTimestamp": 1473935884070,
  "executionTime": 39
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.builders.EnvelopeBuilderTests",
   "displayName": "org.elasticsearch.common.geo.builders.EnvelopeBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.builders.EnvelopeBuilderTests",
   "children": [
    {
     "id": "ID#testInvalidConstructorArgs(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)",
     "displayName": "testInvalidConstructorArgs(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)",
     "methodName": "testInvalidConstructorArgs",
     "className": "org.elasticsearch.common.geo.builders.EnvelopeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.common.geo.builders.EnvelopeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.common.geo.builders.EnvelopeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.common.geo.builders.EnvelopeBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935884141
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidConstructorArgs(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidConstructorArgs(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)",
  "startTimestamp": 1473935884161,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)",
  "startTimestamp": 1473935884164,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)",
  "startTimestamp": 1473935884169,
  "executionTime": 58
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.EnvelopeBuilderTests)",
  "startTimestamp": 1473935884227,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.builders.EnvelopeBuilderTests",
  "startTimestamp": 1473935884141,
  "executionTime": 91
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.script.ScriptExceptionTests",
   "displayName": "org.elasticsearch.script.ScriptExceptionTests",
   "methodName": null,
   "className": "org.elasticsearch.script.ScriptExceptionTests",
   "children": [
    {
     "id": "ID#testRoundTrip(org.elasticsearch.script.ScriptExceptionTests)",
     "displayName": "testRoundTrip(org.elasticsearch.script.ScriptExceptionTests)",
     "methodName": "testRoundTrip",
     "className": "org.elasticsearch.script.ScriptExceptionTests",
     "children": []
    },
    {
     "id": "ID#testNoLeniency(org.elasticsearch.script.ScriptExceptionTests)",
     "displayName": "testNoLeniency(org.elasticsearch.script.ScriptExceptionTests)",
     "methodName": "testNoLeniency",
     "className": "org.elasticsearch.script.ScriptExceptionTests",
     "children": []
    },
    {
     "id": "ID#testJsonOutput(org.elasticsearch.script.ScriptExceptionTests)",
     "displayName": "testJsonOutput(org.elasticsearch.script.ScriptExceptionTests)",
     "methodName": "testJsonOutput",
     "className": "org.elasticsearch.script.ScriptExceptionTests",
     "children": []
    },
    {
     "id": "ID#testImmutableStack(org.elasticsearch.script.ScriptExceptionTests)",
     "displayName": "testImmutableStack(org.elasticsearch.script.ScriptExceptionTests)",
     "methodName": "testImmutableStack",
     "className": "org.elasticsearch.script.ScriptExceptionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935884276
 }
]

[
 "TEST_STARTED",
 "ID#testRoundTrip(org.elasticsearch.script.ScriptExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoundTrip(org.elasticsearch.script.ScriptExceptionTests)",
  "startTimestamp": 1473935884294,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testNoLeniency(org.elasticsearch.script.ScriptExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoLeniency(org.elasticsearch.script.ScriptExceptionTests)",
  "startTimestamp": 1473935884300,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testJsonOutput(org.elasticsearch.script.ScriptExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testJsonOutput(org.elasticsearch.script.ScriptExceptionTests)",
  "startTimestamp": 1473935884304,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testImmutableStack(org.elasticsearch.script.ScriptExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testImmutableStack(org.elasticsearch.script.ScriptExceptionTests)",
  "startTimestamp": 1473935884307,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.script.ScriptExceptionTests",
  "startTimestamp": 1473935884276,
  "executionTime": 35
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.OperationRoutingTests",
   "displayName": "org.elasticsearch.cluster.routing.OperationRoutingTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.OperationRoutingTests",
   "children": [
    {
     "id": "ID#testThatOnlyNodesSupportNodeIds(org.elasticsearch.cluster.routing.OperationRoutingTests)",
     "displayName": "testThatOnlyNodesSupportNodeIds(org.elasticsearch.cluster.routing.OperationRoutingTests)",
     "methodName": "testThatOnlyNodesSupportNodeIds",
     "className": "org.elasticsearch.cluster.routing.OperationRoutingTests",
     "children": []
    },
    {
     "id": "ID#testPreferNodes(org.elasticsearch.cluster.routing.OperationRoutingTests)",
     "displayName": "testPreferNodes(org.elasticsearch.cluster.routing.OperationRoutingTests)",
     "methodName": "testPreferNodes",
     "className": "org.elasticsearch.cluster.routing.OperationRoutingTests",
     "children": []
    },
    {
     "id": "ID#testGenerateShardId(org.elasticsearch.cluster.routing.OperationRoutingTests)",
     "displayName": "testGenerateShardId(org.elasticsearch.cluster.routing.OperationRoutingTests)",
     "methodName": "testGenerateShardId",
     "className": "org.elasticsearch.cluster.routing.OperationRoutingTests",
     "children": []
    },
    {
     "id": "ID#testBWC(org.elasticsearch.cluster.routing.OperationRoutingTests)",
     "displayName": "testBWC(org.elasticsearch.cluster.routing.OperationRoutingTests)",
     "methodName": "testBWC",
     "className": "org.elasticsearch.cluster.routing.OperationRoutingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935884351
 }
]

[
 "TEST_STARTED",
 "ID#testThatOnlyNodesSupportNodeIds(org.elasticsearch.cluster.routing.OperationRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:04,444][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{8CdHyDOxR-a8nXyFMLbndg}{local}{local[72]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:04,517][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{_HAGJp5aQlSXvkJ-eT1rgg}{local}{local[74]}, previous {node}{8CdHyDOxR-a8nXyFMLbndg}{local}{local[72]}}, removed {{node}{8CdHyDOxR-a8nXyFMLbndg}{local}{local[72]},}, added {{node_5}{TA8eDMClTbWlznv7EmEBjw}{local}{local[78]},{node_2}{7iCt_bxMQbCy4zyGwjdHSw}{local}{local[75]},{node_3}{KBSKJ7z0Qr2zqEUyXlz7Kw}{local}{local[76]},{node_8}{TlXZSaD-RxWpQ4TCx51Fog}{local}{local[81]},{node_9}{qiGtBV6ZSR-8kP3Td_ck-A}{local}{local[82]},{node_6}{xy4VDYN8RPqU8UXEvEZiow}{local}{local[79]},{node_7}{kliK8HuvTNSyp3X2EDRhJQ}{local}{local[80]},{node_10}{VPKfwMO0QBKN50trPta5Eg}{local}{local[83]},{node_1}{_HAGJp5aQlSXvkJ-eT1rgg}{local}{local[74]},{node_4}{W4qd3-XUTb-9afLMRsna2g}{local}{local[77]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatOnlyNodesSupportNodeIds(org.elasticsearch.cluster.routing.OperationRoutingTests)",
  "startTimestamp": 1473935884415,
  "executionTime": 225
 }
]

[
 "TEST_STARTED",
 "ID#testPreferNodes(org.elasticsearch.cluster.routing.OperationRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:04,671][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{KpfHnFUTTLyCFrDSmoo61g}{local}{local[87]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:04,672][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{PORoMeS_SbOyZdJNBmfeSw}{local}{local[89]}, previous {node}{KpfHnFUTTLyCFrDSmoo61g}{local}{local[87]}}, removed {{node}{KpfHnFUTTLyCFrDSmoo61g}{local}{local[87]},}, added {{node_1}{PORoMeS_SbOyZdJNBmfeSw}{local}{local[89]},{node_2}{bWzzf34PS2mwx51XErVF3g}{local}{local[90]},{node_3}{SYK5a766SnOsDH2OSQwPHQ}{local}{local[91]},{node_4}{NgKXDE0mQpaQ_J8CezKO8w}{local}{local[92]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreferNodes(org.elasticsearch.cluster.routing.OperationRoutingTests)",
  "startTimestamp": 1473935884640,
  "executionTime": 42
 }
]

[
 "TEST_STARTED",
 "ID#testGenerateShardId(org.elasticsearch.cluster.routing.OperationRoutingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGenerateShardId(org.elasticsearch.cluster.routing.OperationRoutingTests)",
  "startTimestamp": 1473935884682,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testBWC(org.elasticsearch.cluster.routing.OperationRoutingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBWC(org.elasticsearch.cluster.routing.OperationRoutingTests)",
  "startTimestamp": 1473935884687,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.OperationRoutingTests",
  "startTimestamp": 1473935884351,
  "executionTime": 340
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.search.MultiSearchRequestTests",
   "displayName": "org.elasticsearch.action.search.MultiSearchRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.search.MultiSearchRequestTests",
   "children": [
    {
     "id": "ID#testMaxConcurrentSearchRequests(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "displayName": "testMaxConcurrentSearchRequests(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "methodName": "testMaxConcurrentSearchRequests",
     "className": "org.elasticsearch.action.search.MultiSearchRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleAdd4(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "displayName": "testSimpleAdd4(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "methodName": "testSimpleAdd4",
     "className": "org.elasticsearch.action.search.MultiSearchRequestTests",
     "children": []
    },
    {
     "id": "ID#testResponseErrorToXContent(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "displayName": "testResponseErrorToXContent(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "methodName": "testResponseErrorToXContent",
     "className": "org.elasticsearch.action.search.MultiSearchRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleAdd3(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "displayName": "testSimpleAdd3(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "methodName": "testSimpleAdd3",
     "className": "org.elasticsearch.action.search.MultiSearchRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleAdd(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "displayName": "testSimpleAdd(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "methodName": "testSimpleAdd",
     "className": "org.elasticsearch.action.search.MultiSearchRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleAdd2(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "displayName": "testSimpleAdd2(org.elasticsearch.action.search.MultiSearchRequestTests)",
     "methodName": "testSimpleAdd2",
     "className": "org.elasticsearch.action.search.MultiSearchRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935884723
 }
]

[
 "TEST_STARTED",
 "ID#testMaxConcurrentSearchRequests(org.elasticsearch.action.search.MultiSearchRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMaxConcurrentSearchRequests(org.elasticsearch.action.search.MultiSearchRequestTests)",
  "startTimestamp": 1473935884840,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleAdd4(org.elasticsearch.action.search.MultiSearchRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleAdd4(org.elasticsearch.action.search.MultiSearchRequestTests)",
  "startTimestamp": 1473935884844,
  "executionTime": 122
 }
]

[
 "TEST_STARTED",
 "ID#testResponseErrorToXContent(org.elasticsearch.action.search.MultiSearchRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResponseErrorToXContent(org.elasticsearch.action.search.MultiSearchRequestTests)",
  "startTimestamp": 1473935884966,
  "executionTime": 42
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleAdd3(org.elasticsearch.action.search.MultiSearchRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleAdd3(org.elasticsearch.action.search.MultiSearchRequestTests)",
  "startTimestamp": 1473935885009,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleAdd(org.elasticsearch.action.search.MultiSearchRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleAdd(org.elasticsearch.action.search.MultiSearchRequestTests)",
  "startTimestamp": 1473935885028,
  "executionTime": 39
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleAdd2(org.elasticsearch.action.search.MultiSearchRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleAdd2(org.elasticsearch.action.search.MultiSearchRequestTests)",
  "startTimestamp": 1473935885067,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.search.MultiSearchRequestTests",
  "startTimestamp": 1473935884723,
  "executionTime": 364
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.TimestampFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
   "children": [
    {
     "id": "ID#testPathMissingWithForcedNullDefaultShouldFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testPathMissingWithForcedNullDefaultShouldFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testPathMissingWithForcedNullDefaultShouldFail",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testTimestampMissingWithForcedNullDefaultShouldFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testTimestampMissingWithForcedNullDefaultShouldFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testTimestampMissingWithForcedNullDefaultShouldFail",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testThatDisablingDuringMergeIsWorking(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testThatDisablingDuringMergeIsWorking(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testThatDisablingDuringMergeIsWorking",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testEnabled(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testEnabled(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testEnabled",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testTimestampMissingShouldNotFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testTimestampMissingShouldNotFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testTimestampMissingShouldNotFail",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testParsingNotDefaultTwiceDoesNotChangeMapping(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testParsingNotDefaultTwiceDoesNotChangeMapping(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testParsingNotDefaultTwiceDoesNotChangeMapping",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testSimpleDisabled(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testSimpleDisabled(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testSimpleDisabled",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testThatIndicesAfter2_0DontSupportUnixTimestampsInAnyDateFormat(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testThatIndicesAfter2_0DontSupportUnixTimestampsInAnyDateFormat(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testThatIndicesAfter2_0DontSupportUnixTimestampsInAnyDateFormat",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testTimestampMissingDefaultToEpochValue(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testTimestampMissingDefaultToEpochValue(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testTimestampMissingDefaultToEpochValue",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testThatEpochCanBeIgnoredWithCustomFormat(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testThatEpochCanBeIgnoredWithCustomFormat(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testThatEpochCanBeIgnoredWithCustomFormat",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testIncludeInObjectNotAllowed",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaultValues(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testDefaultValues(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testDefaultValues",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testSizeTimestampIndexParsing(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testSizeTimestampIndexParsing(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testSizeTimestampIndexParsing",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testTimestampParsing(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testTimestampParsing(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testTimestampParsing",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaultApplied(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testDefaultApplied(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testDefaultApplied",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testRejectedOn5x(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testRejectedOn5x(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testRejectedOn5x",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testTimestampDefaultAndIgnore(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testTimestampDefaultAndIgnore(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testTimestampDefaultAndIgnore",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testInitMappers(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testInitMappers(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testInitMappers",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testTimestampMissingNowDefaultValue(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testTimestampMissingNowDefaultValue(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testTimestampMissingNowDefaultValue",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaultTimestampStream(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testDefaultTimestampStream(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testDefaultTimestampStream",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935885117
 }
]

[
 "TEST_STARTED",
 "ID#testPathMissingWithForcedNullDefaultShouldFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:05,147][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:05,222][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:05,222][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:05,227][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[15428], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:05,229][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:05,229][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:05,505][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:05,506][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:05,506][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[52]}, bound_addresses {local[52]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:05,531][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{kVRCQ2g4Q-WNfEI0hkYY8A}{J5bFV0g2R7Sn7aGkLWg_bg}{local}{local[52]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:05,532][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:05,636][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:05,681][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:05,833][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:05,849][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testPathMissingWithForcedNullDefaultShouldFail]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPathMissingWithForcedNullDefaultShouldFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1473935885137,
  "executionTime": 767
 }
]

[
 "TEST_STARTED",
 "ID#testTimestampMissingWithForcedNullDefaultShouldFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:05,946][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:06,055][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:06,090][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testTimestampMissingWithForcedNullDefaultShouldFail]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimestampMissingWithForcedNullDefaultShouldFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1473935885904,
  "executionTime": 245
 }
]

[
 "TEST_STARTED",
 "ID#testThatDisablingDuringMergeIsWorking(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:06,161][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:06,254][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:06,276][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testThatDisablingDuringMergeIsWorking]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatDisablingDuringMergeIsWorking(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1473935886149,
  "executionTime": 197
 }
]

[
 "TEST_STARTED",
 "ID#testEnabled(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:06,362][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:06,481][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:06,503][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testEnabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnabled(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1473935886347,
  "executionTime": 200
 }
]

[
 "TEST_STARTED",
 "ID#testTimestampMissingShouldNotFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:06,556][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:06,623][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:06,641][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testTimestampMissingShouldNotFail]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimestampMissingShouldNotFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1473935886547,
  "executionTime": 170
 }
]

[
 "TEST_STARTED",
 "ID#testParsingNotDefaultTwiceDoesNotChangeMapping(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:06,725][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:06,781][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:06,798][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testParsingNotDefaultTwiceDoesNotChangeMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingNotDefaultTwiceDoesNotChangeMapping(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1473935886717,
  "executionTime": 116
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleDisabled(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:06,841][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:06,942][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:06,958][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testSimpleDisabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleDisabled(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1473935886833,
  "executionTime": 162
 }
]

[
 "TEST_STARTED",
 "ID#testThatIndicesAfter2_0DontSupportUnixTimestampsInAnyDateFormat(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:07,002][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [new-index] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:07,158][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[new-index][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:07,230][INFO ][org.elasticsearch.index.mapper] [node_s_0] [new-index] [TimestampFieldMapperTests#testThatIndicesAfter2_0DontSupportUnixTimestampsInAnyDateFormat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatIndicesAfter2_0DontSupportUnixTimestampsInAnyDateFormat(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1473935886995,
  "executionTime": 275
 }
]

[
 "TEST_STARTED",
 "ID#testTimestampMissingDefaultToEpochValue(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:07,279][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:07,336][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:07,353][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testTimestampMissingDefaultToEpochValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimestampMissingDefaultToEpochValue(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1473935887270,
  "executionTime": 215
 }
]

[
 "TEST_STARTED",
 "ID#testThatEpochCanBeIgnoredWithCustomFormat(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:07,494][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:07,669][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:07,694][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testThatEpochCanBeIgnoredWithCustomFormat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatEpochCanBeIgnoredWithCustomFormat(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1473935887486,
  "executionTime": 249
 }
]

[
 "TEST_STARTED",
 "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:07,744][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:07,815][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:07,844][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testIncludeInObjectNotAllowed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1473935887736,
  "executionTime": 141
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultValues(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:07,888][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:07,979][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:08,086][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:08,198][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:08,260][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testDefaultValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultValues(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1473935887878,
  "executionTime": 383
 }
]

[
 "TEST_STARTED",
 "ID#testSizeTimestampIndexParsing(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:08,283][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:08,488][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:08,700][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testSizeTimestampIndexParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSizeTimestampIndexParsing(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1473935888262,
  "executionTime": 478
 }
]

[
 "TEST_STARTED",
 "ID#testTimestampParsing(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:08,757][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:08,975][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:09,006][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testTimestampParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimestampParsing(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1473935888741,
  "executionTime": 344
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultApplied(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:09,093][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:09,190][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:09,213][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:09,332][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:09,348][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2/XAsz7py5T8mNZXCiV-fIGg] create_mapping [_default_]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:09,349][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1/2tnzzREmRgWwEppAWBqIXQ] create_mapping [_default_]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:09,409][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1/2tnzzREmRgWwEppAWBqIXQ] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:09,428][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2/XAsz7py5T8mNZXCiV-fIGg] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:09,461][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test2] [TimestampFieldMapperTests#testDefaultApplied]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultApplied(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1473935889086,
  "executionTime": 424
 }
]

[
 "TEST_STARTED",
 "ID#testRejectedOn5x(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:09,519][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:09,575][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:09,591][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testRejectedOn5x]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRejectedOn5x(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1473935889511,
  "executionTime": 112
 }
]

[
 "TEST_STARTED",
 "ID#testTimestampDefaultAndIgnore(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:09,634][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:09,694][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:09,710][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testTimestampDefaultAndIgnore]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimestampDefaultAndIgnore(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1473935889624,
  "executionTime": 118
 }
]

[
 "TEST_STARTED",
 "ID#testInitMappers(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:09,745][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testInitMappers]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInitMappers(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1473935889742,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testTimestampMissingNowDefaultValue(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:09,755][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:09,829][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:09,851][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testTimestampMissingNowDefaultValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimestampMissingNowDefaultValue(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1473935889747,
  "executionTime": 137
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultTimestampStream(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:09,889][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testDefaultTimestampStream]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultTimestampStream(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1473935889884,
  "executionTime": 6
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:09,890][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:09,891][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:09,891][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:08:09,893][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.TimestampFieldMapperTests",
  "startTimestamp": 1473935885117,
  "executionTime": 4786
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.completion.GeoQueryContextTests",
   "displayName": "org.elasticsearch.search.suggest.completion.GeoQueryContextTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.completion.GeoQueryContextTests",
   "children": [
    {
     "id": "ID#testToXContext(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)",
     "displayName": "testToXContext(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)",
     "methodName": "testToXContext",
     "className": "org.elasticsearch.search.suggest.completion.GeoQueryContextTests",
     "children": []
    },
    {
     "id": "ID#testNullGeoPointIsIllegal(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)",
     "displayName": "testNullGeoPointIsIllegal(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)",
     "methodName": "testNullGeoPointIsIllegal",
     "className": "org.elasticsearch.search.suggest.completion.GeoQueryContextTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.search.suggest.completion.GeoQueryContextTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935889964
 }
]

[
 "TEST_STARTED",
 "ID#testToXContext(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToXContext(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)",
  "startTimestamp": 1473935889983,
  "executionTime": 41
 }
]

[
 "TEST_STARTED",
 "ID#testNullGeoPointIsIllegal(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullGeoPointIsIllegal(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)",
  "startTimestamp": 1473935890025,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.search.suggest.completion.GeoQueryContextTests)",
  "startTimestamp": 1473935890027,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.completion.GeoQueryContextTests",
  "startTimestamp": 1473935889964,
  "executionTime": 67
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.profile.query.QueryProfilerTests",
   "displayName": "org.elasticsearch.search.profile.query.QueryProfilerTests",
   "methodName": null,
   "className": "org.elasticsearch.search.profile.query.QueryProfilerTests",
   "children": [
    {
     "id": "ID#testApproximations(org.elasticsearch.search.profile.query.QueryProfilerTests)",
     "displayName": "testApproximations(org.elasticsearch.search.profile.query.QueryProfilerTests)",
     "methodName": "testApproximations",
     "className": "org.elasticsearch.search.profile.query.QueryProfilerTests",
     "children": []
    },
    {
     "id": "ID#testUseIndexStats(org.elasticsearch.search.profile.query.QueryProfilerTests)",
     "displayName": "testUseIndexStats(org.elasticsearch.search.profile.query.QueryProfilerTests)",
     "methodName": "testUseIndexStats",
     "className": "org.elasticsearch.search.profile.query.QueryProfilerTests",
     "children": []
    },
    {
     "id": "ID#testCollector(org.elasticsearch.search.profile.query.QueryProfilerTests)",
     "displayName": "testCollector(org.elasticsearch.search.profile.query.QueryProfilerTests)",
     "methodName": "testCollector",
     "className": "org.elasticsearch.search.profile.query.QueryProfilerTests",
     "children": []
    },
    {
     "id": "ID#testNoScoring(org.elasticsearch.search.profile.query.QueryProfilerTests)",
     "displayName": "testNoScoring(org.elasticsearch.search.profile.query.QueryProfilerTests)",
     "methodName": "testNoScoring",
     "className": "org.elasticsearch.search.profile.query.QueryProfilerTests",
     "children": []
    },
    {
     "id": "ID#testBasic(org.elasticsearch.search.profile.query.QueryProfilerTests)",
     "displayName": "testBasic(org.elasticsearch.search.profile.query.QueryProfilerTests)",
     "methodName": "testBasic",
     "className": "org.elasticsearch.search.profile.query.QueryProfilerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935890072
 }
]

[
 "TEST_STARTED",
 "ID#testApproximations(org.elasticsearch.search.profile.query.QueryProfilerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testApproximations(org.elasticsearch.search.profile.query.QueryProfilerTests)",
  "startTimestamp": 1473935890118,
  "executionTime": 627
 }
]

[
 "TEST_STARTED",
 "ID#testUseIndexStats(org.elasticsearch.search.profile.query.QueryProfilerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUseIndexStats(org.elasticsearch.search.profile.query.QueryProfilerTests)",
  "startTimestamp": 1473935890746,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCollector(org.elasticsearch.search.profile.query.QueryProfilerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCollector(org.elasticsearch.search.profile.query.QueryProfilerTests)",
  "startTimestamp": 1473935890748,
  "executionTime": 56
 }
]

[
 "TEST_STARTED",
 "ID#testNoScoring(org.elasticsearch.search.profile.query.QueryProfilerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoScoring(org.elasticsearch.search.profile.query.QueryProfilerTests)",
  "startTimestamp": 1473935890805,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testBasic(org.elasticsearch.search.profile.query.QueryProfilerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasic(org.elasticsearch.search.profile.query.QueryProfilerTests)",
  "startTimestamp": 1473935890808,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.profile.query.QueryProfilerTests",
  "startTimestamp": 1473935890072,
  "executionTime": 770
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.GlobalTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.GlobalTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.GlobalTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.GlobalTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.GlobalTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.GlobalTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.GlobalTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.GlobalTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.GlobalTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.GlobalTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.GlobalTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.GlobalTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935890907
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:10,960][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{TH8tmm16RHCoVz9NQ6tKxQ}{local}{local[96]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.GlobalTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.GlobalTests)",
  "startTimestamp": 1473935890974,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.GlobalTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.GlobalTests)",
  "startTimestamp": 1473935890976,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.GlobalTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.GlobalTests)",
  "startTimestamp": 1473935890986,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.GlobalTests",
  "startTimestamp": 1473935890907,
  "executionTime": 87
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests",
   "children": [
    {
     "id": "ID#testIndexLevelShardsLimitRemain(org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests)",
     "displayName": "testIndexLevelShardsLimitRemain(org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests)",
     "methodName": "testIndexLevelShardsLimitRemain",
     "className": "org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests",
     "children": []
    },
    {
     "id": "ID#testIndexLevelShardsLimitAllocate(org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests)",
     "displayName": "testIndexLevelShardsLimitAllocate(org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests)",
     "methodName": "testIndexLevelShardsLimitAllocate",
     "className": "org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests",
     "children": []
    },
    {
     "id": "ID#testClusterLevelShardsLimitAllocate(org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests)",
     "displayName": "testClusterLevelShardsLimitAllocate(org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests)",
     "methodName": "testClusterLevelShardsLimitAllocate",
     "className": "org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935891045
 }
]

[
 "TEST_STARTED",
 "ID#testIndexLevelShardsLimitRemain(org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:38:11,118][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:38:11,122][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding one node and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:38:11,123][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the primary shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:38:11,124][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][1], [test][2], [test][3], [test][4], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:38:11,153][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] add another index with 5 shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:38:11,153][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Add another one node and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:38:11,157][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][1], [test1][2], [test1][3], [test1][4], [test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:38:11,157][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] update index.routing.allocation.total_shards_per_node for test, see that things move%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:38:11,157][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] reroute after setting%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexLevelShardsLimitRemain(org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests)",
  "startTimestamp": 1473935891110,
  "executionTime": 49
 }
]

[
 "TEST_STARTED",
 "ID#testIndexLevelShardsLimitAllocate(org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:38:11,167][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:38:11,167][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding two nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:38:11,174][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the primary shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:38:11,175][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Do another reroute, make sure its still not allocated%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexLevelShardsLimitAllocate(org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests)",
  "startTimestamp": 1473935891159,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testClusterLevelShardsLimitAllocate(org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:38:11,183][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:38:11,183][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding two nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:38:11,184][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:38:11,184][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the primary shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:38:11,190][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Do another reroute, make sure shards are now allocated%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:38:11,191][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test][2], [test][3]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterLevelShardsLimitAllocate(org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests)",
  "startTimestamp": 1473935891176,
  "executionTime": 15
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.ShardsLimitAllocationTests",
  "startTimestamp": 1473935891045,
  "executionTime": 148
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.PreBuiltAnalyzerTests",
   "displayName": "org.elasticsearch.index.analysis.PreBuiltAnalyzerTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.PreBuiltAnalyzerTests",
   "children": [
    {
     "id": "ID#testThatInstancesAreTheSameAlwaysForKeywordAnalyzer(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
     "displayName": "testThatInstancesAreTheSameAlwaysForKeywordAnalyzer(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
     "methodName": "testThatInstancesAreTheSameAlwaysForKeywordAnalyzer",
     "className": "org.elasticsearch.index.analysis.PreBuiltAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testThatInstancesAreCachedAndReused(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
     "displayName": "testThatInstancesAreCachedAndReused(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
     "methodName": "testThatInstancesAreCachedAndReused",
     "className": "org.elasticsearch.index.analysis.PreBuiltAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testThatDefaultAndStandardAnalyzerAreTheSameInstance(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
     "displayName": "testThatDefaultAndStandardAnalyzerAreTheSameInstance(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
     "methodName": "testThatDefaultAndStandardAnalyzerAreTheSameInstance",
     "className": "org.elasticsearch.index.analysis.PreBuiltAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testThatAnalyzersAreUsedInMapping(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
     "displayName": "testThatAnalyzersAreUsedInMapping(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
     "methodName": "testThatAnalyzersAreUsedInMapping",
     "className": "org.elasticsearch.index.analysis.PreBuiltAnalyzerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935891222
 }
]

[
 "TEST_STARTED",
 "ID#testThatInstancesAreTheSameAlwaysForKeywordAnalyzer(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:11,266][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:11,303][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:11,303][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:11,307][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[15428], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:11,310][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:11,310][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:12,179][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:12,179][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:12,181][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[53]}, bound_addresses {local[53]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:12,189][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{YyQHdXfNRLyxxSZA3OVoPw}{fetoazCQQtSG-PnZhZjlxw}{local}{local[53]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:12,190][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:12,241][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:12,261][INFO ][org.elasticsearch.index.analysis] [node_s_0] [QtiYoge6TUS-3CbpN99TjQ] [PreBuiltAnalyzerTests#testThatInstancesAreTheSameAlwaysForKeywordAnalyzer]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatInstancesAreTheSameAlwaysForKeywordAnalyzer(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
  "startTimestamp": 1473935891252,
  "executionTime": 1010
 }
]

[
 "TEST_STARTED",
 "ID#testThatInstancesAreCachedAndReused(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:12,266][INFO ][org.elasticsearch.index.analysis] [node_s_0] [QtiYoge6TUS-3CbpN99TjQ] [PreBuiltAnalyzerTests#testThatInstancesAreCachedAndReused]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatInstancesAreCachedAndReused(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
  "startTimestamp": 1473935892262,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testThatDefaultAndStandardAnalyzerAreTheSameInstance(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:12,270][INFO ][org.elasticsearch.index.analysis] [node_s_0] [QtiYoge6TUS-3CbpN99TjQ] [PreBuiltAnalyzerTests#testThatDefaultAndStandardAnalyzerAreTheSameInstance]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatDefaultAndStandardAnalyzerAreTheSameInstance(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
  "startTimestamp": 1473935892267,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testThatAnalyzersAreUsedInMapping(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:12,280][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:12,378][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:12,396][INFO ][org.elasticsearch.index.analysis] [node_s_0] [test] [PreBuiltAnalyzerTests#testThatAnalyzersAreUsedInMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatAnalyzersAreUsedInMapping(org.elasticsearch.index.analysis.PreBuiltAnalyzerTests)",
  "startTimestamp": 1473935892272,
  "executionTime": 176
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:12,449][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:12,450][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:12,450][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:12,453][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.PreBuiltAnalyzerTests",
  "startTimestamp": 1473935891222,
  "executionTime": 1242
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests",
   "children": [
    {
     "id": "ID#testReplicaBalance(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
     "displayName": "testReplicaBalance(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
     "methodName": "testReplicaBalance",
     "className": "org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests",
     "children": []
    },
    {
     "id": "ID#testPersistedSettings(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
     "displayName": "testPersistedSettings(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
     "methodName": "testPersistedSettings",
     "className": "org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests",
     "children": []
    },
    {
     "id": "ID#testNoRebalanceOnPrimaryOverload(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
     "displayName": "testNoRebalanceOnPrimaryOverload(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
     "methodName": "testNoRebalanceOnPrimaryOverload",
     "className": "org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests",
     "children": []
    },
    {
     "id": "ID#testIndexBalance(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
     "displayName": "testIndexBalance(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
     "methodName": "testIndexBalance",
     "className": "org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935892506
 }
]

[
 "TEST_STARTED",
 "ID#testReplicaBalance(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:38:12,584][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start 25 nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:38:12,627][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] restart all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:38:12,676][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:38:12,709][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test8][1], [test8][0], [test7][1], [test8][1], [test7][0], [test9][1], [test7][1], [test8][0], [test6][1], [test6][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:38:12,709][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:38:12,715][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start 1 more node, check that rebalancing will happen because we set it to always%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:38:12,735][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Removing half the nodes (13)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:38:12,749][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [removed nodes]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:38:12,749][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:38:12,755][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test3][1], [test0][0], [test9][0], [test0][1], [test9][1], [test7][0], [test9][1], [test7][1], [test6][0], [test6][1]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:38:12,755][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:38:12,758][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:38:12,760][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:38:12,762][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test3][1], [test3][1]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplicaBalance(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
  "startTimestamp": 1473935892573,
  "executionTime": 190
 }
]

[
 "TEST_STARTED",
 "ID#testPersistedSettings(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:38:12,769][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [cluster.routing.allocation.balance.threshold] from [1.0] to [2.0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:38:12,770][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [cluster.routing.allocation.balance.threshold] from [2.0] to [3.0]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPersistedSettings(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
  "startTimestamp": 1473935892764,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testNoRebalanceOnPrimaryOverload(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:38:12,837][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] use the new allocator and check if it moves shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:38:12,838][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][4], [test][1], [test][2], [test][2], [test][3], [test][4], [test][0], [test][1], [test][3], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:38:12,838][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:38:12,838][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] rebalancing%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoRebalanceOnPrimaryOverload(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
  "startTimestamp": 1473935892771,
  "executionTime": 68
 }
]

[
 "TEST_STARTED",
 "ID#testIndexBalance(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:38:12,848][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start 25 nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:38:12,857][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] restart all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:38:12,886][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:38:12,899][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:38:12,944][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test0][0], [test1][0], [test0][1], [test1][1], [test6][0], [test7][0], [test6][1], [test7][1], [test2][0], [test3][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:38:12,952][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start 1 more node, check that rebalancing will happen because we set it to always%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:38:12,959][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Removing half the nodes (13)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:38:12,973][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [removed nodes]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:38:12,973][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:38:12,973][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:38:12,973][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:38:12,979][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:38:12,986][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test4][0], [test5][0], [test7][0], [test9][0], [test6][0], [test8][0], [test9][1], [test8][1], [test4][1], [test5][1]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:38:13,054][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0], [test0][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexBalance(org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests)",
  "startTimestamp": 1473935892839,
  "executionTime": 217
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.BalanceConfigurationTests",
  "startTimestamp": 1473935892506,
  "executionTime": 552
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests",
   "displayName": "org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests",
   "methodName": null,
   "className": "org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests",
   "children": [
    {
     "id": "ID#testDeprecatedParamException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "displayName": "testDeprecatedParamException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "methodName": "testDeprecatedParamException",
     "className": "org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests",
     "children": []
    },
    {
     "id": "ID#testParseXContentForAnalyzeRequestWithUnknownParamThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "displayName": "testParseXContentForAnalyzeRequestWithUnknownParamThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "methodName": "testParseXContentForAnalyzeRequestWithUnknownParamThrowsException",
     "className": "org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests",
     "children": []
    },
    {
     "id": "ID#testParseXContentForAnalyzeRequest(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "displayName": "testParseXContentForAnalyzeRequest(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "methodName": "testParseXContentForAnalyzeRequest",
     "className": "org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests",
     "children": []
    },
    {
     "id": "ID#testParseXContentForAnalyzeRequestWithInvalidStringExplainParamThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "displayName": "testParseXContentForAnalyzeRequestWithInvalidStringExplainParamThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "methodName": "testParseXContentForAnalyzeRequestWithInvalidStringExplainParamThrowsException",
     "className": "org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests",
     "children": []
    },
    {
     "id": "ID#testParseXContentForAnalyzeRequestWithCustomFilters(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "displayName": "testParseXContentForAnalyzeRequestWithCustomFilters(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "methodName": "testParseXContentForAnalyzeRequestWithCustomFilters",
     "className": "org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests",
     "children": []
    },
    {
     "id": "ID#testParseXContentForAnalyzeRequestWithInvalidJsonThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "displayName": "testParseXContentForAnalyzeRequestWithInvalidJsonThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
     "methodName": "testParseXContentForAnalyzeRequestWithInvalidJsonThrowsException",
     "className": "org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935893125
 }
]

[
 "TEST_STARTED",
 "ID#testDeprecatedParamException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeprecatedParamException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
  "startTimestamp": 1473935893203,
  "executionTime": 92
 }
]

[
 "TEST_STARTED",
 "ID#testParseXContentForAnalyzeRequestWithUnknownParamThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseXContentForAnalyzeRequestWithUnknownParamThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
  "startTimestamp": 1473935893296,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseXContentForAnalyzeRequest(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseXContentForAnalyzeRequest(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
  "startTimestamp": 1473935893298,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseXContentForAnalyzeRequestWithInvalidStringExplainParamThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseXContentForAnalyzeRequestWithInvalidStringExplainParamThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
  "startTimestamp": 1473935893301,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseXContentForAnalyzeRequestWithCustomFilters(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseXContentForAnalyzeRequestWithCustomFilters(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
  "startTimestamp": 1473935893303,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseXContentForAnalyzeRequestWithInvalidJsonThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseXContentForAnalyzeRequestWithInvalidJsonThrowsException(org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests)",
  "startTimestamp": 1473935893306,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.rest.action.admin.indices.RestAnalyzeActionTests",
  "startTimestamp": 1473935893125,
  "executionTime": 186
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.AvgTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.AvgTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.AvgTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.AvgTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.AvgTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.AvgTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.AvgTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.AvgTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.AvgTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.AvgTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.AvgTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.AvgTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935893350
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:13,365][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{x5alg3wzRYWNVluU-yZI-Q}{local}{local[159]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.AvgTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.AvgTests)",
  "startTimestamp": 1473935893376,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.AvgTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.AvgTests)",
  "startTimestamp": 1473935893379,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.AvgTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.AvgTests)",
  "startTimestamp": 1473935893381,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.AvgTests",
  "startTimestamp": 1473935893350,
  "executionTime": 37
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.SearchRequestTests",
   "displayName": "org.elasticsearch.search.SearchRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.search.SearchRequestTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.search.SearchRequestTests)",
     "displayName": "testSerialization(org.elasticsearch.search.SearchRequestTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.SearchRequestTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.search.SearchRequestTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.search.SearchRequestTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.search.SearchRequestTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.SearchRequestTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.SearchRequestTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.SearchRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935893394
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.SearchRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.SearchRequestTests)",
  "startTimestamp": 1473935893409,
  "executionTime": 77
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.search.SearchRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.search.SearchRequestTests)",
  "startTimestamp": 1473935893486,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.SearchRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.SearchRequestTests)",
  "startTimestamp": 1473935893491,
  "executionTime": 191
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.SearchRequestTests",
  "startTimestamp": 1473935893394,
  "executionTime": 290
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
   "children": [
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testCommonTermsQuery1(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testCommonTermsQuery1(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testCommonTermsQuery1",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testParseFailsWithMultipleFields(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testParseFailsWithMultipleFields",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testCommonTermsQuery3(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testCommonTermsQuery3(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testCommonTermsQuery3",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testCommonTermsQuery4(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testCommonTermsQuery4(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testCommonTermsQuery4",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testCommonTermsQuery2(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testCommonTermsQuery2(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testCommonTermsQuery2",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935893715
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:13,745][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{5v5tUoZ4SdujciLGLgbDDA}{local}{local[160]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:13,753][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:13,754][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:13,775][WARN ][org.elasticsearch.deprecation.index.mapper]  [onAFkzkp] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:13,775][WARN ][org.elasticsearch.deprecation.index.mapper]  [onAFkzkp] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:13,775][WARN ][org.elasticsearch.deprecation.index.mapper]  [onAFkzkp] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:13,777][WARN ][org.elasticsearch.deprecation.index.mapper]  [onAFkzkp] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:13,777][WARN ][org.elasticsearch.deprecation.index.mapper]  [onAFkzkp] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:13,778][WARN ][org.elasticsearch.deprecation.index.mapper]  [onAFkzkp] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:13,781][WARN ][org.elasticsearch.deprecation.index.mapper]  [onAFkzkp] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:13,781][WARN ][org.elasticsearch.deprecation.index.mapper]  [onAFkzkp] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:13,781][WARN ][org.elasticsearch.deprecation.index.mapper]  [onAFkzkp] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:13,783][WARN ][org.elasticsearch.deprecation.index.mapper]  [onAFkzkp] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:13,783][WARN ][org.elasticsearch.deprecation.index.mapper]  [onAFkzkp] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:13,783][WARN ][org.elasticsearch.deprecation.index.mapper]  [onAFkzkp] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:13,787][WARN ][org.elasticsearch.deprecation.index.mapper]  [onAFkzkp] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:13,787][WARN ][org.elasticsearch.deprecation.index.mapper]  [onAFkzkp] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:13,787][WARN ][org.elasticsearch.deprecation.index.mapper]  [onAFkzkp] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:13,791][WARN ][org.elasticsearch.deprecation.index.mapper]  [onAFkzkp] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:13,791][WARN ][org.elasticsearch.deprecation.index.mapper]  [onAFkzkp] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:13,791][WARN ][org.elasticsearch.deprecation.index.mapper]  [onAFkzkp] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:13,792][WARN ][org.elasticsearch.deprecation.index.mapper]  [onAFkzkp] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:13,809][WARN ][org.elasticsearch.deprecation.index.mapper]  [onAFkzkp] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:13,809][WARN ][org.elasticsearch.deprecation.index.mapper]  [onAFkzkp] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:13,812][WARN ][org.elasticsearch.deprecation.index.mapper]  [onAFkzkp] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:13,812][WARN ][org.elasticsearch.deprecation.index.mapper]  [onAFkzkp] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:13,812][WARN ][org.elasticsearch.deprecation.index.mapper]  [onAFkzkp] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:13,816][WARN ][org.elasticsearch.deprecation.index.mapper]  [onAFkzkp] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:13,816][WARN ][org.elasticsearch.deprecation.index.mapper]  [onAFkzkp] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:13,816][WARN ][org.elasticsearch.deprecation.index.mapper]  [onAFkzkp] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1473935893739,
  "executionTime": 79
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1473935893819,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1473935893824,
  "executionTime": 31
 }
]

[
 "TEST_STARTED",
 "ID#testCommonTermsQuery1(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCommonTermsQuery1(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1473935893855,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1473935893869,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1473935893873,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1473935893889,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1473935893904,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1473935893907,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1473935893912,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1473935893915,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCommonTermsQuery3(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCommonTermsQuery3(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1473935893918,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testCommonTermsQuery4(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCommonTermsQuery4(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1473935893929,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCommonTermsQuery2(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCommonTermsQuery2(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1473935893932,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.CommonTermsQueryBuilderTests)",
  "startTimestamp": 1473935893941,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.CommonTermsQueryBuilderTests",
  "startTimestamp": 1473935893715,
  "executionTime": 234
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.threadpool.ThreadPoolSerializationTests",
   "displayName": "org.elasticsearch.threadpool.ThreadPoolSerializationTests",
   "methodName": null,
   "className": "org.elasticsearch.threadpool.ThreadPoolSerializationTests",
   "children": [
    {
     "id": "ID#testThatNegativeQueueSizesCanBeSerialized(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "displayName": "testThatNegativeQueueSizesCanBeSerialized(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "methodName": "testThatNegativeQueueSizesCanBeSerialized",
     "className": "org.elasticsearch.threadpool.ThreadPoolSerializationTests",
     "children": []
    },
    {
     "id": "ID#testThatToXContentWritesOutUnboundedCorrectly(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "displayName": "testThatToXContentWritesOutUnboundedCorrectly(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "methodName": "testThatToXContentWritesOutUnboundedCorrectly",
     "className": "org.elasticsearch.threadpool.ThreadPoolSerializationTests",
     "children": []
    },
    {
     "id": "ID#testThatNegativeSettingAllowsToStart(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "displayName": "testThatNegativeSettingAllowsToStart(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "methodName": "testThatNegativeSettingAllowsToStart",
     "className": "org.elasticsearch.threadpool.ThreadPoolSerializationTests",
     "children": []
    },
    {
     "id": "ID#testThatToXContentWritesInteger(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "displayName": "testThatToXContentWritesInteger(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "methodName": "testThatToXContentWritesInteger",
     "className": "org.elasticsearch.threadpool.ThreadPoolSerializationTests",
     "children": []
    },
    {
     "id": "ID#testThatQueueSizeSerializationWorks(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "displayName": "testThatQueueSizeSerializationWorks(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "methodName": "testThatQueueSizeSerializationWorks",
     "className": "org.elasticsearch.threadpool.ThreadPoolSerializationTests",
     "children": []
    },
    {
     "id": "ID#testThatThreadPoolTypeIsSerializedCorrectly(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "displayName": "testThatThreadPoolTypeIsSerializedCorrectly(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "methodName": "testThatThreadPoolTypeIsSerializedCorrectly",
     "className": "org.elasticsearch.threadpool.ThreadPoolSerializationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935893988
 }
]

[
 "TEST_STARTED",
 "ID#testThatNegativeQueueSizesCanBeSerialized(org.elasticsearch.threadpool.ThreadPoolSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatNegativeQueueSizesCanBeSerialized(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
  "startTimestamp": 1473935894010,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testThatToXContentWritesOutUnboundedCorrectly(org.elasticsearch.threadpool.ThreadPoolSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatToXContentWritesOutUnboundedCorrectly(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
  "startTimestamp": 1473935894013,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testThatNegativeSettingAllowsToStart(org.elasticsearch.threadpool.ThreadPoolSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatNegativeSettingAllowsToStart(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
  "startTimestamp": 1473935894024,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testThatToXContentWritesInteger(org.elasticsearch.threadpool.ThreadPoolSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatToXContentWritesInteger(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
  "startTimestamp": 1473935894031,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testThatQueueSizeSerializationWorks(org.elasticsearch.threadpool.ThreadPoolSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatQueueSizeSerializationWorks(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
  "startTimestamp": 1473935894034,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testThatThreadPoolTypeIsSerializedCorrectly(org.elasticsearch.threadpool.ThreadPoolSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatThreadPoolTypeIsSerializedCorrectly(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
  "startTimestamp": 1473935894039,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.threadpool.ThreadPoolSerializationTests",
  "startTimestamp": 1473935893988,
  "executionTime": 56
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.ExternalFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.ExternalFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.ExternalFieldMapperTests",
   "children": [
    {
     "id": "ID#testExternalValuesWithMultifieldTwoLevels(org.elasticsearch.index.mapper.ExternalFieldMapperTests)",
     "displayName": "testExternalValuesWithMultifieldTwoLevels(org.elasticsearch.index.mapper.ExternalFieldMapperTests)",
     "methodName": "testExternalValuesWithMultifieldTwoLevels",
     "className": "org.elasticsearch.index.mapper.ExternalFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testExternalValuesWithMultifield(org.elasticsearch.index.mapper.ExternalFieldMapperTests)",
     "displayName": "testExternalValuesWithMultifield(org.elasticsearch.index.mapper.ExternalFieldMapperTests)",
     "methodName": "testExternalValuesWithMultifield",
     "className": "org.elasticsearch.index.mapper.ExternalFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testExternalValues(org.elasticsearch.index.mapper.ExternalFieldMapperTests)",
     "displayName": "testExternalValues(org.elasticsearch.index.mapper.ExternalFieldMapperTests)",
     "methodName": "testExternalValues",
     "className": "org.elasticsearch.index.mapper.ExternalFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935894084
 }
]

[
 "TEST_STARTED",
 "ID#testExternalValuesWithMultifieldTwoLevels(org.elasticsearch.index.mapper.ExternalFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:14,168][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:14,229][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:14,232][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:14,236][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[15428], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:14,239][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:14,239][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:14,473][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:14,474][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:14,474][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[54]}, bound_addresses {local[54]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:14,476][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{dawLL3anTUqeekk4A5F6uQ}{rPAnM8zZSIqaq515koXIkw}{local}{local[54]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:14,476][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:14,493][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:14,520][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:14,617][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:14,805][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ExternalFieldMapperTests#testExternalValuesWithMultifieldTwoLevels]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExternalValuesWithMultifieldTwoLevels(org.elasticsearch.index.mapper.ExternalFieldMapperTests)",
  "startTimestamp": 1473935894159,
  "executionTime": 679
 }
]

[
 "TEST_STARTED",
 "ID#testExternalValuesWithMultifield(org.elasticsearch.index.mapper.ExternalFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:14,846][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:14,903][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:15,069][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ExternalFieldMapperTests#testExternalValuesWithMultifield]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExternalValuesWithMultifield(org.elasticsearch.index.mapper.ExternalFieldMapperTests)",
  "startTimestamp": 1473935894838,
  "executionTime": 266
 }
]

[
 "TEST_STARTED",
 "ID#testExternalValues(org.elasticsearch.index.mapper.ExternalFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:15,111][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:15,198][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:15,377][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ExternalFieldMapperTests#testExternalValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExternalValues(org.elasticsearch.index.mapper.ExternalFieldMapperTests)",
  "startTimestamp": 1473935895104,
  "executionTime": 357
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:15,461][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:15,462][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:15,462][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:15,469][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "APPEND_STDERR",
 {
  "chunk": "Sep 15, 2016 12:38:15 PM com.carrotsearch.randomizedtesting.ThreadLeakControl checkThreadLeaks%0D%0AWARNING: Will linger awaiting termination of 1 leaked thread(s).%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.ExternalFieldMapperTests",
  "startTimestamp": 1473935894084,
  "executionTime": 1644
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.phrase.LaplaceModelTests",
   "displayName": "org.elasticsearch.search.suggest.phrase.LaplaceModelTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.phrase.LaplaceModelTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)",
     "displayName": "testSerialization(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.suggest.phrase.LaplaceModelTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.suggest.phrase.LaplaceModelTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.suggest.phrase.LaplaceModelTests",
     "children": []
    },
    {
     "id": "ID#testBuildWordScorer(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)",
     "displayName": "testBuildWordScorer(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)",
     "methodName": "testBuildWordScorer",
     "className": "org.elasticsearch.search.suggest.phrase.LaplaceModelTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935895734
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)",
  "startTimestamp": 1473935895751,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)",
  "startTimestamp": 1473935895755,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)",
  "startTimestamp": 1473935895757,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBuildWordScorer(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuildWordScorer(org.elasticsearch.search.suggest.phrase.LaplaceModelTests)",
  "startTimestamp": 1473935895760,
  "executionTime": 83
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.phrase.LaplaceModelTests",
  "startTimestamp": 1473935895734,
  "executionTime": 111
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.NumberFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
   "children": [
    {
     "id": "ID#testEmptyName(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "displayName": "testEmptyName(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "methodName": "testEmptyName",
     "className": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNullValue(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "displayName": "testNullValue(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "methodName": "testNullValue",
     "className": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNotIndexed(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "displayName": "testNotIndexed(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "methodName": "testNotIndexed",
     "className": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreMalformed(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "displayName": "testIgnoreMalformed(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "methodName": "testIgnoreMalformed",
     "className": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testCoerce(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "displayName": "testCoerce(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "methodName": "testCoerce",
     "className": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNoDocValues(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "displayName": "testNoDocValues(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "methodName": "testNoDocValues",
     "className": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testStore(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "displayName": "testStore(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "methodName": "testStore",
     "className": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testRejectNorms(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "displayName": "testRejectNorms(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "methodName": "testRejectNorms",
     "className": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIncludeInAll(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "displayName": "testIncludeInAll(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "methodName": "testIncludeInAll",
     "className": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaults(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "displayName": "testDefaults(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
     "methodName": "testDefaults",
     "className": "org.elasticsearch.index.mapper.NumberFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935895887
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyName(org.elasticsearch.index.mapper.NumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:15,930][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:15,955][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:15,955][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:15,959][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[15428], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:15,961][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:15,961][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:16,197][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:16,197][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:16,198][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[55]}, bound_addresses {local[55]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:16,202][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{eU7iX3LWTGuBnV2sYQYZPA}{hIXtB9VHQO6RPHW3BgvbQQ}{local}{local[55]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:16,202][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:16,222][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:16,250][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:16,325][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:16,345][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_old] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:16,441][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_old][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:16,474][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test_old] [NumberFieldMapperTests#testEmptyName]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyName(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
  "startTimestamp": 1473935895921,
  "executionTime": 623
 }
]

[
 "TEST_STARTED",
 "ID#testNullValue(org.elasticsearch.index.mapper.NumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:16,551][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:16,646][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:16,675][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NumberFieldMapperTests#testNullValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullValue(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
  "startTimestamp": 1473935896544,
  "executionTime": 177
 }
]

[
 "TEST_STARTED",
 "ID#testNotIndexed(org.elasticsearch.index.mapper.NumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:16,728][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:16,778][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:16,798][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NumberFieldMapperTests#testNotIndexed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotIndexed(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
  "startTimestamp": 1473935896721,
  "executionTime": 121
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreMalformed(org.elasticsearch.index.mapper.NumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:16,851][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:16,947][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:16,971][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NumberFieldMapperTests#testIgnoreMalformed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreMalformed(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
  "startTimestamp": 1473935896842,
  "executionTime": 193
 }
]

[
 "TEST_STARTED",
 "ID#testCoerce(org.elasticsearch.index.mapper.NumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:17,042][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:17,096][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:17,119][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NumberFieldMapperTests#testCoerce]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCoerce(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
  "startTimestamp": 1473935897035,
  "executionTime": 132
 }
]

[
 "TEST_STARTED",
 "ID#testNoDocValues(org.elasticsearch.index.mapper.NumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:17,175][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:17,232][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:17,258][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NumberFieldMapperTests#testNoDocValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoDocValues(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
  "startTimestamp": 1473935897168,
  "executionTime": 120
 }
]

[
 "TEST_STARTED",
 "ID#testStore(org.elasticsearch.index.mapper.NumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:17,296][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:17,363][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:17,384][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NumberFieldMapperTests#testStore]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStore(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
  "startTimestamp": 1473935897288,
  "executionTime": 158
 }
]

[
 "TEST_STARTED",
 "ID#testRejectNorms(org.elasticsearch.index.mapper.NumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:17,454][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:17,520][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:17,537][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-byte] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:17,600][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-byte][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:17,621][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-short] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:17,679][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-short][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:17,697][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-integer] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:17,760][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-integer][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:17,782][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-long] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:17,834][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-long][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:17,854][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-float] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:17,904][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-float][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:17,922][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-double] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:17,979][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-double][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:17,994][INFO ][org.elasticsearch.index.mapper] [node_s_0] [index-double] [NumberFieldMapperTests#testRejectNorms]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRejectNorms(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
  "startTimestamp": 1473935897446,
  "executionTime": 709
 }
]

[
 "TEST_STARTED",
 "ID#testIncludeInAll(org.elasticsearch.index.mapper.NumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:18,162][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:18,229][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:18,319][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NumberFieldMapperTests#testIncludeInAll]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludeInAll(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
  "startTimestamp": 1473935898155,
  "executionTime": 199
 }
]

[
 "TEST_STARTED",
 "ID#testDefaults(org.elasticsearch.index.mapper.NumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:18,360][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:18,436][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:18,456][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NumberFieldMapperTests#testDefaults]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaults(org.elasticsearch.index.mapper.NumberFieldMapperTests)",
  "startTimestamp": 1473935898354,
  "executionTime": 261
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:18,616][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:18,616][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:18,617][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:08:18,619][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.NumberFieldMapperTests",
  "startTimestamp": 1473935895887,
  "executionTime": 2744
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.snapshots.SnapshotRequestsTests",
   "displayName": "org.elasticsearch.snapshots.SnapshotRequestsTests",
   "methodName": null,
   "className": "org.elasticsearch.snapshots.SnapshotRequestsTests",
   "children": [
    {
     "id": "ID#testRestoreSnapshotRequestParsing(org.elasticsearch.snapshots.SnapshotRequestsTests)",
     "displayName": "testRestoreSnapshotRequestParsing(org.elasticsearch.snapshots.SnapshotRequestsTests)",
     "methodName": "testRestoreSnapshotRequestParsing",
     "className": "org.elasticsearch.snapshots.SnapshotRequestsTests",
     "children": []
    },
    {
     "id": "ID#testCreateSnapshotRequestParsing(org.elasticsearch.snapshots.SnapshotRequestsTests)",
     "displayName": "testCreateSnapshotRequestParsing(org.elasticsearch.snapshots.SnapshotRequestsTests)",
     "methodName": "testCreateSnapshotRequestParsing",
     "className": "org.elasticsearch.snapshots.SnapshotRequestsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935898679
 }
]

[
 "TEST_STARTED",
 "ID#testRestoreSnapshotRequestParsing(org.elasticsearch.snapshots.SnapshotRequestsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestoreSnapshotRequestParsing(org.elasticsearch.snapshots.SnapshotRequestsTests)",
  "startTimestamp": 1473935898745,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCreateSnapshotRequestParsing(org.elasticsearch.snapshots.SnapshotRequestsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateSnapshotRequestParsing(org.elasticsearch.snapshots.SnapshotRequestsTests)",
  "startTimestamp": 1473935898748,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.snapshots.SnapshotRequestsTests",
  "startTimestamp": 1473935898679,
  "executionTime": 77
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
   "children": [
    {
     "id": "ID#testAllocateCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "displayName": "testAllocateCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "methodName": "testAllocateCommand",
     "className": "org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
     "children": []
    },
    {
     "id": "ID#testXContent(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "displayName": "testXContent(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "methodName": "testXContent",
     "className": "org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
     "children": []
    },
    {
     "id": "ID#testMoveShardCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "displayName": "testMoveShardCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "methodName": "testMoveShardCommand",
     "className": "org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "displayName": "testSerialization(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
     "children": []
    },
    {
     "id": "ID#testCancelCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "displayName": "testCancelCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "methodName": "testCancelCommand",
     "className": "org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935898941
 }
]

[
 "TEST_STARTED",
 "ID#testAllocateCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:18,967][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:18,972][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding 3 nodes on same rack and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:18,973][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocating to non-existent node, should fail%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:18,973][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocating to non-data node, should fail%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:18,974][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocating non-existing shard, should fail%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:18,974][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocating non-existing index, should fail%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:18,974][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocating empty primary with acceptDataLoss flag set to false%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:18,974][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocating stale primary with acceptDataLoss flag set to false%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:18,974][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocating empty primary with acceptDataLoss flag set to true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:19,011][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the primary shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:19,012][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:19,012][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocate the replica shard on the primary shard node, should fail%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:19,012][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocate the replica shard on on the second node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:19,013][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the replica shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:19,013][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:19,013][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> verify that we fail when there are no unassigned shards%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllocateCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
  "startTimestamp": 1473935898959,
  "executionTime": 55
 }
]

[
 "TEST_STARTED",
 "ID#testXContent(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testXContent(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
  "startTimestamp": 1473935899014,
  "executionTime": 74
 }
]

[
 "TEST_STARTED",
 "ID#testMoveShardCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:19,095][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] creating an index with 1 shard, no replica%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:19,095][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding two nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:19,096][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start primary shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:19,096][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:19,096][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] move the shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:19,097][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] finish moving the shard%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMoveShardCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
  "startTimestamp": 1473935899088,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
  "startTimestamp": 1473935899098,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCancelCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:19,107][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:19,107][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding 3 nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:19,108][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:19,108][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocating empty primary shard with accept_data_loss flag set to true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:19,108][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> cancel primary allocation, make sure it fails...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:19,109][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the primary shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:19,109][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:19,109][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> cancel primary allocation, make sure it fails...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:19,109][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocate the replica shard on on the second node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:19,110][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> cancel the relocation allocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:19,110][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocate the replica shard on on the second node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:19,111][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> cancel the primary being replicated, make sure it fails%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:19,111][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the replica shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:19,111][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:19,111][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> cancel allocation of the replica shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:19,112][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute commands]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:19,112][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> allocate the replica shard on on the second node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:19,112][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the replica shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:19,113][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:19,113][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> move the replica shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:19,115][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> cancel the move of the replica shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:19,116][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> move the replica shard again%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:19,116][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> cancel the source replica shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:19,117][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute commands]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:19,117][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the former target replica shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:19,127][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:19,128][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> cancel the primary allocation (with allow_primary set to true)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:38:19,128][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute commands]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCancelCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
  "startTimestamp": 1473935899100,
  "executionTime": 29
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
  "startTimestamp": 1473935898941,
  "executionTime": 190
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.ingest.PipelineStoreTests",
   "displayName": "org.elasticsearch.ingest.PipelineStoreTests",
   "methodName": null,
   "className": "org.elasticsearch.ingest.PipelineStoreTests",
   "children": [
    {
     "id": "ID#testValidate(org.elasticsearch.ingest.PipelineStoreTests)",
     "displayName": "testValidate(org.elasticsearch.ingest.PipelineStoreTests)",
     "methodName": "testValidate",
     "className": "org.elasticsearch.ingest.PipelineStoreTests",
     "children": []
    },
    {
     "id": "ID#testValidateNoIngestInfo(org.elasticsearch.ingest.PipelineStoreTests)",
     "displayName": "testValidateNoIngestInfo(org.elasticsearch.ingest.PipelineStoreTests)",
     "methodName": "testValidateNoIngestInfo",
     "className": "org.elasticsearch.ingest.PipelineStoreTests",
     "children": []
    },
    {
     "id": "ID#testPutWithErrorResponse(org.elasticsearch.ingest.PipelineStoreTests)",
     "displayName": "testPutWithErrorResponse(org.elasticsearch.ingest.PipelineStoreTests)",
     "methodName": "testPutWithErrorResponse",
     "className": "org.elasticsearch.ingest.PipelineStoreTests",
     "children": []
    },
    {
     "id": "ID#testGetPipelines(org.elasticsearch.ingest.PipelineStoreTests)",
     "displayName": "testGetPipelines(org.elasticsearch.ingest.PipelineStoreTests)",
     "methodName": "testGetPipelines",
     "className": "org.elasticsearch.ingest.PipelineStoreTests",
     "children": []
    },
    {
     "id": "ID#testCrud(org.elasticsearch.ingest.PipelineStoreTests)",
     "displayName": "testCrud(org.elasticsearch.ingest.PipelineStoreTests)",
     "methodName": "testCrud",
     "className": "org.elasticsearch.ingest.PipelineStoreTests",
     "children": []
    },
    {
     "id": "ID#testUpdatePipelines(org.elasticsearch.ingest.PipelineStoreTests)",
     "displayName": "testUpdatePipelines(org.elasticsearch.ingest.PipelineStoreTests)",
     "methodName": "testUpdatePipelines",
     "className": "org.elasticsearch.ingest.PipelineStoreTests",
     "children": []
    },
    {
     "id": "ID#testPut(org.elasticsearch.ingest.PipelineStoreTests)",
     "displayName": "testPut(org.elasticsearch.ingest.PipelineStoreTests)",
     "methodName": "testPut",
     "className": "org.elasticsearch.ingest.PipelineStoreTests",
     "children": []
    },
    {
     "id": "ID#testDelete(org.elasticsearch.ingest.PipelineStoreTests)",
     "displayName": "testDelete(org.elasticsearch.ingest.PipelineStoreTests)",
     "methodName": "testDelete",
     "className": "org.elasticsearch.ingest.PipelineStoreTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935899186
 }
]

[
 "TEST_STARTED",
 "ID#testValidate(org.elasticsearch.ingest.PipelineStoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidate(org.elasticsearch.ingest.PipelineStoreTests)",
  "startTimestamp": 1473935899203,
  "executionTime": 185
 }
]

[
 "TEST_STARTED",
 "ID#testValidateNoIngestInfo(org.elasticsearch.ingest.PipelineStoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidateNoIngestInfo(org.elasticsearch.ingest.PipelineStoreTests)",
  "startTimestamp": 1473935899388,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testPutWithErrorResponse(org.elasticsearch.ingest.PipelineStoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPutWithErrorResponse(org.elasticsearch.ingest.PipelineStoreTests)",
  "startTimestamp": 1473935899391,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGetPipelines(org.elasticsearch.ingest.PipelineStoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetPipelines(org.elasticsearch.ingest.PipelineStoreTests)",
  "startTimestamp": 1473935899393,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testCrud(org.elasticsearch.ingest.PipelineStoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCrud(org.elasticsearch.ingest.PipelineStoreTests)",
  "startTimestamp": 1473935899397,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUpdatePipelines(org.elasticsearch.ingest.PipelineStoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdatePipelines(org.elasticsearch.ingest.PipelineStoreTests)",
  "startTimestamp": 1473935899400,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testPut(org.elasticsearch.ingest.PipelineStoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPut(org.elasticsearch.ingest.PipelineStoreTests)",
  "startTimestamp": 1473935899402,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDelete(org.elasticsearch.ingest.PipelineStoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDelete(org.elasticsearch.ingest.PipelineStoreTests)",
  "startTimestamp": 1473935899405,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.ingest.PipelineStoreTests",
  "startTimestamp": 1473935899186,
  "executionTime": 223
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935899473
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:19,521][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Rybb0Bk8T-GdO4LaceZoYA}{local}{local[170]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)",
  "startTimestamp": 1473935899531,
  "executionTime": 53
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:19,587][INFO ][org.elasticsearch.search.aggregations.pipeline.bucketmetrics] Content string: {%0A  \"jBPgTOGAZdjDTwVkN\" : {%0A    \"stats_bucket\" : {%0A      \"buckets_path\" : [%0A        \"rAGF\"%0A      ],%0A      \"format\" : \"lEmRiqlkxK\",%0A      \"gap_policy\" : \"skip\"%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:19,641][INFO ][org.elasticsearch.search.aggregations.pipeline.bucketmetrics] Content string: {%0A  \"jBPgTOGAZdjDTwVkN\" : {%0A    \"stats_bucket\" : {%0A      \"buckets_path\" : [%0A        \"rAGF\"%0A      ],%0A      \"format\" : \"lEmRiqlkxK\",%0A      \"gap_policy\" : \"skip\"%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)",
  "startTimestamp": 1473935899584,
  "executionTime": 59
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests)",
  "startTimestamp": 1473935899643,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.bucketmetrics.StatsBucketTests",
  "startTimestamp": 1473935899473,
  "executionTime": 177
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.LegacyIpFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.LegacyIpFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.LegacyIpFieldMapperTests",
   "children": [
    {
     "id": "ID#testIgnoreMalformedOption(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)",
     "displayName": "testIgnoreMalformedOption(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)",
     "methodName": "testIgnoreMalformedOption",
     "className": "org.elasticsearch.index.mapper.LegacyIpFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testThatValidIpCanBeConvertedToLong(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)",
     "displayName": "testThatValidIpCanBeConvertedToLong(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)",
     "methodName": "testThatValidIpCanBeConvertedToLong",
     "className": "org.elasticsearch.index.mapper.LegacyIpFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testThatInvalidIpThrowsException(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)",
     "displayName": "testThatInvalidIpThrowsException(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)",
     "methodName": "testThatInvalidIpThrowsException",
     "className": "org.elasticsearch.index.mapper.LegacyIpFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testThatIpv6AddressThrowsException(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)",
     "displayName": "testThatIpv6AddressThrowsException(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)",
     "methodName": "testThatIpv6AddressThrowsException",
     "className": "org.elasticsearch.index.mapper.LegacyIpFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testSimpleMapping(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)",
     "displayName": "testSimpleMapping(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)",
     "methodName": "testSimpleMapping",
     "className": "org.elasticsearch.index.mapper.LegacyIpFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935899692
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreMalformedOption(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:19,734][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:19,773][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:19,773][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:19,776][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[15428], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:19,778][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:19,778][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:19,918][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:19,918][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:19,918][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[56]}, bound_addresses {local[56]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:19,920][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{PHt4DGXuQi20q0gH1kfW2w}{gpZCBssBScmtCmc2ALQGWg}{local}{local[56]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:19,921][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:19,934][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:19,953][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:20,016][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:20,053][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:20,143][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:20,161][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test2] [LegacyIpFieldMapperTests#testIgnoreMalformedOption]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreMalformedOption(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)",
  "startTimestamp": 1473935899719,
  "executionTime": 521
 }
]

[
 "TEST_STARTED",
 "ID#testThatValidIpCanBeConvertedToLong(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:20,244][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test2] [LegacyIpFieldMapperTests#testThatValidIpCanBeConvertedToLong]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatValidIpCanBeConvertedToLong(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)",
  "startTimestamp": 1473935900240,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testThatInvalidIpThrowsException(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:20,250][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test2] [LegacyIpFieldMapperTests#testThatInvalidIpThrowsException]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatInvalidIpThrowsException(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)",
  "startTimestamp": 1473935900245,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testThatIpv6AddressThrowsException(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:20,257][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test2] [LegacyIpFieldMapperTests#testThatIpv6AddressThrowsException]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatIpv6AddressThrowsException(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)",
  "startTimestamp": 1473935900253,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleMapping(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:20,267][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:20,325][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:20,339][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyIpFieldMapperTests#testSimpleMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleMapping(org.elasticsearch.index.mapper.LegacyIpFieldMapperTests)",
  "startTimestamp": 1473935900258,
  "executionTime": 111
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:20,369][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:20,370][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:20,371][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:20,372][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.LegacyIpFieldMapperTests",
  "startTimestamp": 1473935899692,
  "executionTime": 687
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.CompletionFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.CompletionFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.CompletionFieldTypeTests",
   "children": [
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.CompletionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.CompletionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.CompletionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.CompletionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.CompletionFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935900455
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.CompletionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
  "startTimestamp": 1473935900475,
  "executionTime": 319
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.CompletionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
  "startTimestamp": 1473935900794,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.CompletionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
  "startTimestamp": 1473935900797,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.CompletionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
  "startTimestamp": 1473935900799,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.CompletionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.CompletionFieldTypeTests)",
  "startTimestamp": 1473935900802,
  "executionTime": 58
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.CompletionFieldTypeTests",
  "startTimestamp": 1473935900455,
  "executionTime": 457
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.path.PathTrieTests",
   "displayName": "org.elasticsearch.common.path.PathTrieTests",
   "methodName": null,
   "className": "org.elasticsearch.common.path.PathTrieTests",
   "children": [
    {
     "id": "ID#testSameNameOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testSameNameOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testSameNameOnDifferentPath",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testSamePathConcreteResolution(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testSamePathConcreteResolution(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testSamePathConcreteResolution",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testPath(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testPath(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testPath",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testEscapedSlashWithinUrl(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testEscapedSlashWithinUrl(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testEscapedSlashWithinUrl",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testDifferentNamesOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testDifferentNamesOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testDifferentNamesOnDifferentPath",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testPreferNonWildcardExecution(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testPreferNonWildcardExecution(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testPreferNonWildcardExecution",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testNamedWildcardAndLookupWithWildcard(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testNamedWildcardAndLookupWithWildcard(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testNamedWildcardAndLookupWithWildcard",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testEmptyPath(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testEmptyPath(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testEmptyPath",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935900975
 }
]

[
 "TEST_STARTED",
 "ID#testSameNameOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSameNameOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1473935901046,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSamePathConcreteResolution(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSamePathConcreteResolution(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1473935901048,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testPath(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPath(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1473935901051,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEscapedSlashWithinUrl(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEscapedSlashWithinUrl(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1473935901054,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDifferentNamesOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDifferentNamesOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1473935901056,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testPreferNonWildcardExecution(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreferNonWildcardExecution(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1473935901058,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNamedWildcardAndLookupWithWildcard(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNamedWildcardAndLookupWithWildcard(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1473935901061,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyPath(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyPath(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1473935901063,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.path.PathTrieTests",
  "startTimestamp": 1473935900975,
  "executionTime": 93
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.ChildrenTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.ChildrenTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.ChildrenTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.ChildrenTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.ChildrenTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.ChildrenTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.ChildrenTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.ChildrenTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.ChildrenTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.ChildrenTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.ChildrenTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.ChildrenTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935901096
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:21,160][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{1rn65juNQMS_DjnXx45mBw}{local}{local[171]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.ChildrenTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.ChildrenTests)",
  "startTimestamp": 1473935901172,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.ChildrenTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.ChildrenTests)",
  "startTimestamp": 1473935901174,
  "executionTime": 90
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.ChildrenTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.ChildrenTests)",
  "startTimestamp": 1473935901264,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.ChildrenTests",
  "startTimestamp": 1473935901096,
  "executionTime": 175
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests",
   "children": [
    {
     "id": "ID#testClusterEnableNone(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
     "displayName": "testClusterEnableNone(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
     "methodName": "testClusterEnableNone",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests",
     "children": []
    },
    {
     "id": "ID#testIndexEnableNone(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
     "displayName": "testIndexEnableNone(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
     "methodName": "testIndexEnableNone",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests",
     "children": []
    },
    {
     "id": "ID#testEnableClusterBalance(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
     "displayName": "testEnableClusterBalance(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
     "methodName": "testEnableClusterBalance",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests",
     "children": []
    },
    {
     "id": "ID#testEnableClusterBalanceNoReplicas(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
     "displayName": "testEnableClusterBalanceNoReplicas(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
     "methodName": "testEnableClusterBalanceNoReplicas",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests",
     "children": []
    },
    {
     "id": "ID#testClusterEnableOnlyPrimaries(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
     "displayName": "testClusterEnableOnlyPrimaries(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
     "methodName": "testClusterEnableOnlyPrimaries",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935901314
 }
]

[
 "TEST_STARTED",
 "ID#testClusterEnableNone(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:38:21,391][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:38:21,392][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> adding two nodes and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:38:21,393][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterEnableNone(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
  "startTimestamp": 1473935901384,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testIndexEnableNone(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:38:21,401][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> adding two nodes and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:38:21,401][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:38:21,401][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:38:21,402][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> start the shards (replicas)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:38:21,404][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> verify only enabled index has been routed%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexEnableNone(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
  "startTimestamp": 1473935901393,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testEnableClusterBalance(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:38:21,413][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:38:21,414][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> adding one nodes and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:38:21,415][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:38:21,424][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[always_disabled][0], [test][1], [test][2], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:38:21,424][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> adding one nodes and do rerouting%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnableClusterBalance(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
  "startTimestamp": 1473935901404,
  "executionTime": 42
 }
]

[
 "TEST_STARTED",
 "ID#testEnableClusterBalanceNoReplicas(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:38:21,457][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:38:21,457][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> adding one nodes and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:38:21,472][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:38:21,473][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][4], [test][2], [test][0], [test][1], [test][3], [test][5]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:38:21,473][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> adding one nodes and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:38:21,474][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [cluster.routing.rebalance.enable] from [NONE] to [ALL]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnableClusterBalanceNoReplicas(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
  "startTimestamp": 1473935901446,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testClusterEnableOnlyPrimaries(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:38:21,501][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:38:21,502][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> adding two nodes do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:38:21,504][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterEnableOnlyPrimaries(org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests)",
  "startTimestamp": 1473935901475,
  "executionTime": 29
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationTests",
  "startTimestamp": 1473935901314,
  "executionTime": 193
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.search.TransportMultiSearchActionTests",
   "displayName": "org.elasticsearch.action.search.TransportMultiSearchActionTests",
   "methodName": null,
   "className": "org.elasticsearch.action.search.TransportMultiSearchActionTests",
   "children": [
    {
     "id": "ID#testDefaultMaxConcurrentSearches(org.elasticsearch.action.search.TransportMultiSearchActionTests)",
     "displayName": "testDefaultMaxConcurrentSearches(org.elasticsearch.action.search.TransportMultiSearchActionTests)",
     "methodName": "testDefaultMaxConcurrentSearches",
     "className": "org.elasticsearch.action.search.TransportMultiSearchActionTests",
     "children": []
    },
    {
     "id": "ID#testBatchExecute(org.elasticsearch.action.search.TransportMultiSearchActionTests)",
     "displayName": "testBatchExecute(org.elasticsearch.action.search.TransportMultiSearchActionTests)",
     "methodName": "testBatchExecute",
     "className": "org.elasticsearch.action.search.TransportMultiSearchActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935901580
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultMaxConcurrentSearches(org.elasticsearch.action.search.TransportMultiSearchActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultMaxConcurrentSearches(org.elasticsearch.action.search.TransportMultiSearchActionTests)",
  "startTimestamp": 1473935901595,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBatchExecute(org.elasticsearch.action.search.TransportMultiSearchActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBatchExecute(org.elasticsearch.action.search.TransportMultiSearchActionTests)",
  "startTimestamp": 1473935901598,
  "executionTime": 1435
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.search.TransportMultiSearchActionTests",
  "startTimestamp": 1473935901580,
  "executionTime": 1456
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.VersionTests",
   "displayName": "org.elasticsearch.VersionTests",
   "methodName": null,
   "className": "org.elasticsearch.VersionTests",
   "children": [
    {
     "id": "ID#testIsBeta(org.elasticsearch.VersionTests)",
     "displayName": "testIsBeta(org.elasticsearch.VersionTests)",
     "methodName": "testIsBeta",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testVersionComparison(org.elasticsearch.VersionTests)",
     "displayName": "testVersionComparison(org.elasticsearch.VersionTests)",
     "methodName": "testVersionComparison",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testMinCompatVersion(org.elasticsearch.VersionTests)",
     "displayName": "testMinCompatVersion(org.elasticsearch.VersionTests)",
     "methodName": "testMinCompatVersion",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testTooShortVersionFromString(org.elasticsearch.VersionTests)",
     "displayName": "testTooShortVersionFromString(org.elasticsearch.VersionTests)",
     "methodName": "testTooShortVersionFromString",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testIndexCreatedVersion(org.elasticsearch.VersionTests)",
     "displayName": "testIndexCreatedVersion(org.elasticsearch.VersionTests)",
     "methodName": "testIndexCreatedVersion",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testParseLenient(org.elasticsearch.VersionTests)",
     "displayName": "testParseLenient(org.elasticsearch.VersionTests)",
     "methodName": "testParseLenient",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testCURRENTIsLatest(org.elasticsearch.VersionTests)",
     "displayName": "testCURRENTIsLatest(org.elasticsearch.VersionTests)",
     "methodName": "testCURRENTIsLatest",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testWrongVersionFromString(org.elasticsearch.VersionTests)",
     "displayName": "testWrongVersionFromString(org.elasticsearch.VersionTests)",
     "methodName": "testWrongVersionFromString",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testToString(org.elasticsearch.VersionTests)",
     "displayName": "testToString(org.elasticsearch.VersionTests)",
     "methodName": "testToString",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testVersionConstantPresent(org.elasticsearch.VersionTests)",
     "displayName": "testVersionConstantPresent(org.elasticsearch.VersionTests)",
     "methodName": "testVersionConstantPresent",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testTooLongVersionFromString(org.elasticsearch.VersionTests)",
     "displayName": "testTooLongVersionFromString(org.elasticsearch.VersionTests)",
     "methodName": "testTooLongVersionFromString",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testIsAlpha(org.elasticsearch.VersionTests)",
     "displayName": "testIsAlpha(org.elasticsearch.VersionTests)",
     "methodName": "testIsAlpha",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testAllVersionsMatchId(org.elasticsearch.VersionTests)",
     "displayName": "testAllVersionsMatchId(org.elasticsearch.VersionTests)",
     "methodName": "testAllVersionsMatchId",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testVersionNoPresentInSettings(org.elasticsearch.VersionTests)",
     "displayName": "testVersionNoPresentInSettings(org.elasticsearch.VersionTests)",
     "methodName": "testVersionNoPresentInSettings",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testParseVersion(org.elasticsearch.VersionTests)",
     "displayName": "testParseVersion(org.elasticsearch.VersionTests)",
     "methodName": "testParseVersion",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testVersionFromString(org.elasticsearch.VersionTests)",
     "displayName": "testVersionFromString(org.elasticsearch.VersionTests)",
     "methodName": "testVersionFromString",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    },
    {
     "id": "ID#testLuceneVersionIsSameOnMinorRelease(org.elasticsearch.VersionTests)",
     "displayName": "testLuceneVersionIsSameOnMinorRelease(org.elasticsearch.VersionTests)",
     "methodName": "testLuceneVersionIsSameOnMinorRelease",
     "className": "org.elasticsearch.VersionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935903093
 }
]

[
 "TEST_STARTED",
 "ID#testIsBeta(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsBeta(org.elasticsearch.VersionTests)",
  "startTimestamp": 1473935903114,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testVersionComparison(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionComparison(org.elasticsearch.VersionTests)",
  "startTimestamp": 1473935903116,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMinCompatVersion(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinCompatVersion(org.elasticsearch.VersionTests)",
  "startTimestamp": 1473935903120,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTooShortVersionFromString(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTooShortVersionFromString(org.elasticsearch.VersionTests)",
  "startTimestamp": 1473935903122,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIndexCreatedVersion(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexCreatedVersion(org.elasticsearch.VersionTests)",
  "startTimestamp": 1473935903124,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseLenient(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseLenient(org.elasticsearch.VersionTests)",
  "startTimestamp": 1473935903127,
  "executionTime": 36
 }
]

[
 "TEST_STARTED",
 "ID#testCURRENTIsLatest(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCURRENTIsLatest(org.elasticsearch.VersionTests)",
  "startTimestamp": 1473935903164,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testWrongVersionFromString(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWrongVersionFromString(org.elasticsearch.VersionTests)",
  "startTimestamp": 1473935903167,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToString(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToString(org.elasticsearch.VersionTests)",
  "startTimestamp": 1473935903169,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testVersionConstantPresent(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionConstantPresent(org.elasticsearch.VersionTests)",
  "startTimestamp": 1473935903172,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTooLongVersionFromString(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTooLongVersionFromString(org.elasticsearch.VersionTests)",
  "startTimestamp": 1473935903174,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsAlpha(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsAlpha(org.elasticsearch.VersionTests)",
  "startTimestamp": 1473935903176,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testAllVersionsMatchId(org.elasticsearch.VersionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:23,191][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.0.0-beta1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:23,193][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.0.0-beta2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:23,194][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.0.0-rc1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:23,194][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.0.0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:23,194][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.0.1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:23,194][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.0.2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:23,194][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.1.0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:23,194][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.1.1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:23,194][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.1.2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:23,194][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.2.0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:23,194][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.2.1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:23,194][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.2.2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:23,194][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.3.0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:23,194][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.3.1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:23,194][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.3.2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:23,194][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.3.3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:23,194][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.3.4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:23,194][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.3.5%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:23,195][INFO ][org.elasticsearch.org.elasticsearch] Checking 2.4.0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:23,195][INFO ][org.elasticsearch.org.elasticsearch] Checking 5.0.0-alpha1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:23,195][INFO ][org.elasticsearch.org.elasticsearch] Checking 5.0.0-alpha2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:23,195][INFO ][org.elasticsearch.org.elasticsearch] Checking 5.0.0-alpha3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:23,195][INFO ][org.elasticsearch.org.elasticsearch] Checking 5.0.0-alpha4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:23,195][INFO ][org.elasticsearch.org.elasticsearch] Checking 5.0.0-alpha5%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:23,195][INFO ][org.elasticsearch.org.elasticsearch] Checking 5.0.0-alpha6%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllVersionsMatchId(org.elasticsearch.VersionTests)",
  "startTimestamp": 1473935903179,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testVersionNoPresentInSettings(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionNoPresentInSettings(org.elasticsearch.VersionTests)",
  "startTimestamp": 1473935903195,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseVersion(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseVersion(org.elasticsearch.VersionTests)",
  "startTimestamp": 1473935903198,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testVersionFromString(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionFromString(org.elasticsearch.VersionTests)",
  "startTimestamp": 1473935903204,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testLuceneVersionIsSameOnMinorRelease(org.elasticsearch.VersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLuceneVersionIsSameOnMinorRelease(org.elasticsearch.VersionTests)",
  "startTimestamp": 1473935903217,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.VersionTests",
  "startTimestamp": 1473935903093,
  "executionTime": 129
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.search.nested.DoubleNestedSortingTests",
   "displayName": "org.elasticsearch.index.search.nested.DoubleNestedSortingTests",
   "methodName": null,
   "className": "org.elasticsearch.index.search.nested.DoubleNestedSortingTests",
   "children": [
    {
     "id": "ID#testNestedSorting(org.elasticsearch.index.search.nested.DoubleNestedSortingTests)",
     "displayName": "testNestedSorting(org.elasticsearch.index.search.nested.DoubleNestedSortingTests)",
     "methodName": "testNestedSorting",
     "className": "org.elasticsearch.index.search.nested.DoubleNestedSortingTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.index.search.nested.DoubleNestedSortingTests)",
     "displayName": "testEmpty(org.elasticsearch.index.search.nested.DoubleNestedSortingTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.index.search.nested.DoubleNestedSortingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935903279
 }
]

[
 "TEST_STARTED",
 "ID#testNestedSorting(org.elasticsearch.index.search.nested.DoubleNestedSortingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:23,307][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:23,325][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:23,326][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:23,328][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[15428], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:23,329][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:23,329][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:23,435][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:23,435][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:23,436][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[57]}, bound_addresses {local[57]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:23,437][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{LChEVGZeSIOWdXoL5iYv_A}{HJdqUFOCSPWSKY8V1NLzNg}{local}{local[57]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:23,437][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:23,453][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:23,488][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:23,678][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:23,959][INFO ][org.elasticsearch.index.search.nested] [DoubleNestedSortingTests#testNestedSorting]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedSorting(org.elasticsearch.index.search.nested.DoubleNestedSortingTests)",
  "startTimestamp": 1473935903297,
  "executionTime": 757
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.index.search.nested.DoubleNestedSortingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:24,066][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:24,289][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:24,314][INFO ][org.elasticsearch.index.search.nested] [DoubleNestedSortingTests#testEmpty]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.index.search.nested.DoubleNestedSortingTests)",
  "startTimestamp": 1473935904054,
  "executionTime": 364
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:24,419][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:24,419][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:24,420][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:24,422][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.search.nested.DoubleNestedSortingTests",
  "startTimestamp": 1473935903279,
  "executionTime": 1151
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.StartedShardsRoutingTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.StartedShardsRoutingTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.StartedShardsRoutingTests",
   "children": [
    {
     "id": "ID#testStartedShardsMatching(org.elasticsearch.cluster.routing.allocation.StartedShardsRoutingTests)",
     "displayName": "testStartedShardsMatching(org.elasticsearch.cluster.routing.allocation.StartedShardsRoutingTests)",
     "methodName": "testStartedShardsMatching",
     "className": "org.elasticsearch.cluster.routing.allocation.StartedShardsRoutingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935904567
 }
]

[
 "TEST_STARTED",
 "ID#testStartedShardsMatching(org.elasticsearch.cluster.routing.allocation.StartedShardsRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:24,722][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> building initial cluster state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:24,724][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> test starting of shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:24,724][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:38:24,729][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> testing starting of relocating shards%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStartedShardsMatching(org.elasticsearch.cluster.routing.allocation.StartedShardsRoutingTests)",
  "startTimestamp": 1473935904713,
  "executionTime": 16
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.StartedShardsRoutingTests",
  "startTimestamp": 1473935904567,
  "executionTime": 165
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.CompoundAnalysisTests",
   "displayName": "org.elasticsearch.index.analysis.CompoundAnalysisTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.CompoundAnalysisTests",
   "children": [
    {
     "id": "ID#testDictionaryDecompounder(org.elasticsearch.index.analysis.CompoundAnalysisTests)",
     "displayName": "testDictionaryDecompounder(org.elasticsearch.index.analysis.CompoundAnalysisTests)",
     "methodName": "testDictionaryDecompounder",
     "className": "org.elasticsearch.index.analysis.CompoundAnalysisTests",
     "children": []
    },
    {
     "id": "ID#testDefaultsCompoundAnalysis(org.elasticsearch.index.analysis.CompoundAnalysisTests)",
     "displayName": "testDefaultsCompoundAnalysis(org.elasticsearch.index.analysis.CompoundAnalysisTests)",
     "methodName": "testDefaultsCompoundAnalysis",
     "className": "org.elasticsearch.index.analysis.CompoundAnalysisTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935904973
 }
]

[
 "TEST_STARTED",
 "ID#testDictionaryDecompounder(org.elasticsearch.index.analysis.CompoundAnalysisTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDictionaryDecompounder(org.elasticsearch.index.analysis.CompoundAnalysisTests)",
  "startTimestamp": 1473935905200,
  "executionTime": 113
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultsCompoundAnalysis(org.elasticsearch.index.analysis.CompoundAnalysisTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultsCompoundAnalysis(org.elasticsearch.index.analysis.CompoundAnalysisTests)",
  "startTimestamp": 1473935905313,
  "executionTime": 50
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.CompoundAnalysisTests",
  "startTimestamp": 1473935904973,
  "executionTime": 394
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
   "children": [
    {
     "id": "ID#testHoltWintersMultiplicativePadPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "displayName": "testHoltWintersMultiplicativePadPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "methodName": "testHoltWintersMultiplicativePadPredictionModel",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
     "children": []
    },
    {
     "id": "ID#testHoltWintersMultiplicativePadModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "displayName": "testHoltWintersMultiplicativePadModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "methodName": "testHoltWintersMultiplicativePadModel",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
     "children": []
    },
    {
     "id": "ID#testLinearPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "displayName": "testLinearPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "methodName": "testLinearPredictionModel",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
     "children": []
    },
    {
     "id": "ID#testNumericValidation(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "displayName": "testNumericValidation(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "methodName": "testNumericValidation",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
     "children": []
    },
    {
     "id": "ID#testHoltLinearMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "displayName": "testHoltLinearMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "methodName": "testHoltLinearMovAvgModel",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
     "children": []
    },
    {
     "id": "ID#testHoltWintersAdditiveModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "displayName": "testHoltWintersAdditiveModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "methodName": "testHoltWintersAdditiveModel",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
     "children": []
    },
    {
     "id": "ID#testSimpleMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "displayName": "testSimpleMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "methodName": "testSimpleMovAvgModel",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
     "children": []
    },
    {
     "id": "ID#testHoltLinearPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "displayName": "testHoltLinearPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "methodName": "testHoltLinearPredictionModel",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
     "children": []
    },
    {
     "id": "ID#testSimplePredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "displayName": "testSimplePredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "methodName": "testSimplePredictionModel",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
     "children": []
    },
    {
     "id": "ID#testEWMAMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "displayName": "testEWMAMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "methodName": "testEWMAMovAvgModel",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
     "children": []
    },
    {
     "id": "ID#testLinearMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "displayName": "testLinearMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "methodName": "testLinearMovAvgModel",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
     "children": []
    },
    {
     "id": "ID#testEWMAPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "displayName": "testEWMAPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "methodName": "testEWMAPredictionModel",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
     "children": []
    },
    {
     "id": "ID#testHoltWintersAdditivePredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "displayName": "testHoltWintersAdditivePredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
     "methodName": "testHoltWintersAdditivePredictionModel",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935905447
 }
]

[
 "TEST_STARTED",
 "ID#testHoltWintersMultiplicativePadPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHoltWintersMultiplicativePadPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
  "startTimestamp": 1473935905466,
  "executionTime": 63
 }
]

[
 "TEST_STARTED",
 "ID#testHoltWintersMultiplicativePadModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHoltWintersMultiplicativePadModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
  "startTimestamp": 1473935905529,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testLinearPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLinearPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
  "startTimestamp": 1473935905540,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNumericValidation(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNumericValidation(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
  "startTimestamp": 1473935905543,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHoltLinearMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHoltLinearMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
  "startTimestamp": 1473935905545,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testHoltWintersAdditiveModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHoltWintersAdditiveModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
  "startTimestamp": 1473935905557,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
  "startTimestamp": 1473935905560,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testHoltLinearPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHoltLinearPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
  "startTimestamp": 1473935905563,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimplePredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimplePredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
  "startTimestamp": 1473935905565,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEWMAMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEWMAMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
  "startTimestamp": 1473935905567,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testLinearMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLinearMovAvgModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
  "startTimestamp": 1473935905570,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEWMAPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEWMAPredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
  "startTimestamp": 1473935905573,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHoltWintersAdditivePredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHoltWintersAdditivePredictionModel(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests)",
  "startTimestamp": 1473935905575,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgUnitTests",
  "startTimestamp": 1473935905447,
  "executionTime": 133
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.ingest.SimulateExecutionServiceTests",
   "displayName": "org.elasticsearch.action.ingest.SimulateExecutionServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.action.ingest.SimulateExecutionServiceTests",
   "children": [
    {
     "id": "ID#testExecuteVerboseItemWithOnFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
     "displayName": "testExecuteVerboseItemWithOnFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
     "methodName": "testExecuteVerboseItemWithOnFailure",
     "className": "org.elasticsearch.action.ingest.SimulateExecutionServiceTests",
     "children": []
    },
    {
     "id": "ID#testExecuteItem(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
     "displayName": "testExecuteItem(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
     "methodName": "testExecuteItem",
     "className": "org.elasticsearch.action.ingest.SimulateExecutionServiceTests",
     "children": []
    },
    {
     "id": "ID#testExecuteVerboseItemExceptionWithoutOnFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
     "displayName": "testExecuteVerboseItemExceptionWithoutOnFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
     "methodName": "testExecuteVerboseItemExceptionWithoutOnFailure",
     "className": "org.elasticsearch.action.ingest.SimulateExecutionServiceTests",
     "children": []
    },
    {
     "id": "ID#testExecuteVerboseItemWithoutExceptionAndWithIgnoreFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
     "displayName": "testExecuteVerboseItemWithoutExceptionAndWithIgnoreFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
     "methodName": "testExecuteVerboseItemWithoutExceptionAndWithIgnoreFailure",
     "className": "org.elasticsearch.action.ingest.SimulateExecutionServiceTests",
     "children": []
    },
    {
     "id": "ID#testExecuteVerboseItemExceptionWithIgnoreFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
     "displayName": "testExecuteVerboseItemExceptionWithIgnoreFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
     "methodName": "testExecuteVerboseItemExceptionWithIgnoreFailure",
     "className": "org.elasticsearch.action.ingest.SimulateExecutionServiceTests",
     "children": []
    },
    {
     "id": "ID#testExecuteItemWithFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
     "displayName": "testExecuteItemWithFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
     "methodName": "testExecuteItemWithFailure",
     "className": "org.elasticsearch.action.ingest.SimulateExecutionServiceTests",
     "children": []
    },
    {
     "id": "ID#testExecuteVerboseItem(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
     "displayName": "testExecuteVerboseItem(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
     "methodName": "testExecuteVerboseItem",
     "className": "org.elasticsearch.action.ingest.SimulateExecutionServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935905637
 }
]

[
 "TEST_STARTED",
 "ID#testExecuteVerboseItemWithOnFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExecuteVerboseItemWithOnFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
  "startTimestamp": 1473935905654,
  "executionTime": 124
 }
]

[
 "TEST_STARTED",
 "ID#testExecuteItem(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExecuteItem(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
  "startTimestamp": 1473935905778,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testExecuteVerboseItemExceptionWithoutOnFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExecuteVerboseItemExceptionWithoutOnFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
  "startTimestamp": 1473935905784,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testExecuteVerboseItemWithoutExceptionAndWithIgnoreFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExecuteVerboseItemWithoutExceptionAndWithIgnoreFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
  "startTimestamp": 1473935905792,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testExecuteVerboseItemExceptionWithIgnoreFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExecuteVerboseItemExceptionWithIgnoreFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
  "startTimestamp": 1473935905799,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testExecuteItemWithFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExecuteItemWithFailure(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
  "startTimestamp": 1473935905811,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testExecuteVerboseItem(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExecuteVerboseItem(org.elasticsearch.action.ingest.SimulateExecutionServiceTests)",
  "startTimestamp": 1473935905818,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.ingest.SimulateExecutionServiceTests",
  "startTimestamp": 1473935905637,
  "executionTime": 203
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.ValueCountTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.ValueCountTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.ValueCountTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.ValueCountTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.ValueCountTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.ValueCountTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.ValueCountTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.ValueCountTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.ValueCountTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.ValueCountTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.ValueCountTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.ValueCountTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935905894
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:25,915][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{iM_Hm2lXTe6Q1Prjq_2JVw}{local}{local[190]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.ValueCountTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.ValueCountTests)",
  "startTimestamp": 1473935905927,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.ValueCountTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.ValueCountTests)",
  "startTimestamp": 1473935905930,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.ValueCountTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.ValueCountTests)",
  "startTimestamp": 1473935905933,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.ValueCountTests",
  "startTimestamp": 1473935905894,
  "executionTime": 45
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.ShapeRelationTests",
   "displayName": "org.elasticsearch.common.geo.ShapeRelationTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.ShapeRelationTests",
   "children": [
    {
     "id": "ID#testwriteTo(org.elasticsearch.common.geo.ShapeRelationTests)",
     "displayName": "testwriteTo(org.elasticsearch.common.geo.ShapeRelationTests)",
     "methodName": "testwriteTo",
     "className": "org.elasticsearch.common.geo.ShapeRelationTests",
     "children": []
    },
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.common.geo.ShapeRelationTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.common.geo.ShapeRelationTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.common.geo.ShapeRelationTests",
     "children": []
    },
    {
     "id": "ID#testReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)",
     "displayName": "testReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.common.geo.ShapeRelationTests",
     "children": []
    },
    {
     "id": "ID#testInvalidReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)",
     "displayName": "testInvalidReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)",
     "methodName": "testInvalidReadFrom",
     "className": "org.elasticsearch.common.geo.ShapeRelationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935906021
 }
]

[
 "TEST_STARTED",
 "ID#testwriteTo(org.elasticsearch.common.geo.ShapeRelationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testwriteTo(org.elasticsearch.common.geo.ShapeRelationTests)",
  "startTimestamp": 1473935906042,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.common.geo.ShapeRelationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.common.geo.ShapeRelationTests)",
  "startTimestamp": 1473935906052,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)",
  "startTimestamp": 1473935906054,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)",
  "startTimestamp": 1473935906056,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.ShapeRelationTests",
  "startTimestamp": 1473935906021,
  "executionTime": 38
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.similarity.SimilarityServiceTests",
   "displayName": "org.elasticsearch.index.similarity.SimilarityServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.index.similarity.SimilarityServiceTests",
   "children": [
    {
     "id": "ID#testOverrideDefaultSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)",
     "displayName": "testOverrideDefaultSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)",
     "methodName": "testOverrideDefaultSimilarity",
     "className": "org.elasticsearch.index.similarity.SimilarityServiceTests",
     "children": []
    },
    {
     "id": "ID#testOverrideBuiltInSimilarityPreV3(org.elasticsearch.index.similarity.SimilarityServiceTests)",
     "displayName": "testOverrideBuiltInSimilarityPreV3(org.elasticsearch.index.similarity.SimilarityServiceTests)",
     "methodName": "testOverrideBuiltInSimilarityPreV3",
     "className": "org.elasticsearch.index.similarity.SimilarityServiceTests",
     "children": []
    },
    {
     "id": "ID#testOverrideBuiltInSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)",
     "displayName": "testOverrideBuiltInSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)",
     "methodName": "testOverrideBuiltInSimilarity",
     "className": "org.elasticsearch.index.similarity.SimilarityServiceTests",
     "children": []
    },
    {
     "id": "ID#testDefaultSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)",
     "displayName": "testDefaultSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)",
     "methodName": "testDefaultSimilarity",
     "className": "org.elasticsearch.index.similarity.SimilarityServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935906121
 }
]

[
 "TEST_STARTED",
 "ID#testOverrideDefaultSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOverrideDefaultSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)",
  "startTimestamp": 1473935906231,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testOverrideBuiltInSimilarityPreV3(org.elasticsearch.index.similarity.SimilarityServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOverrideBuiltInSimilarityPreV3(org.elasticsearch.index.similarity.SimilarityServiceTests)",
  "startTimestamp": 1473935906248,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testOverrideBuiltInSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOverrideBuiltInSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)",
  "startTimestamp": 1473935906258,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultSimilarity(org.elasticsearch.index.similarity.SimilarityServiceTests)",
  "startTimestamp": 1473935906263,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.similarity.SimilarityServiceTests",
  "startTimestamp": 1473935906121,
  "executionTime": 148
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests",
   "displayName": "org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests",
   "children": [
    {
     "id": "ID#testSingleValued(org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests)",
     "displayName": "testSingleValued(org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests)",
     "methodName": "testSingleValued",
     "className": "org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests",
     "children": []
    },
    {
     "id": "ID#testMultiValued(org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests)",
     "displayName": "testMultiValued(org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests)",
     "methodName": "testMultiValued",
     "className": "org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935906299
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValued(org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValued(org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests)",
  "startTimestamp": 1473935906494,
  "executionTime": 1804
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValued(org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValued(org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests)",
  "startTimestamp": 1473935908299,
  "executionTime": 250
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.plain.HalfFloatFielddataTests",
  "startTimestamp": 1473935906299,
  "executionTime": 2252
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.TermsTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.TermsTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.TermsTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.TermsTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.TermsTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.TermsTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.TermsTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.TermsTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.TermsTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.TermsTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.TermsTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.TermsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935908698
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:38:29,359][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{0gkTGTY6SxyhE4LaxWrzRg}{local}{local[191]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.TermsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.TermsTests)",
  "startTimestamp": 1473935909387,
  "executionTime": 465
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.TermsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.TermsTests)",
  "startTimestamp": 1473935909852,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.TermsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.TermsTests)",
  "startTimestamp": 1473935909876,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.TermsTests",
  "startTimestamp": 1473935908698,
  "executionTime": 1186
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests",
   "children": [
    {
     "id": "ID#testUpdate(org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests)",
     "displayName": "testUpdate(org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests)",
     "methodName": "testUpdate",
     "className": "org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests",
     "children": []
    },
    {
     "id": "ID#testDefaults(org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests)",
     "displayName": "testDefaults(org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests)",
     "methodName": "testDefaults",
     "className": "org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935909910
 }
]

[
 "TEST_STARTED",
 "ID#testUpdate(org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:38:29,938][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [cluster.routing.allocation.disk.watermark.low] from [85%25] to [500mb]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:38:29,941][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [cluster.routing.allocation.disk.watermark.high] from [90%25] to [70%25]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:38:29,941][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [cluster.routing.allocation.disk.include_relocations] from [true] to [false]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:38:29,941][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [cluster.routing.allocation.disk.reroute_interval] from [60s] to [30s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T02:38:29,941][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [cluster.routing.allocation.disk.threshold_enabled] from [true] to [false]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdate(org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests)",
  "startTimestamp": 1473935909935,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testDefaults(org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaults(org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests)",
  "startTimestamp": 1473935909942,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.DiskThresholdSettingsTests",
  "startTimestamp": 1473935909910,
  "executionTime": 36
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.deps.joda.SimpleJodaTests",
   "displayName": "org.elasticsearch.deps.joda.SimpleJodaTests",
   "methodName": null,
   "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
   "children": [
    {
     "id": "ID#testForInvalidDatesInEpochSecond(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testForInvalidDatesInEpochSecond(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testForInvalidDatesInEpochSecond",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testInvalidPatterns(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testInvalidPatterns(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testInvalidPatterns",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testThatRootObjectParsingIsStrict(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testThatRootObjectParsingIsStrict(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testThatRootObjectParsingIsStrict",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testThatEpochParserIsPrinter(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testThatEpochParserIsPrinter(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testThatEpochParserIsPrinter",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testThatEpochTimePrinterWorks(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testThatEpochTimePrinterWorks(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testThatEpochTimePrinterWorks",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testUpperBound(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testUpperBound(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testUpperBound",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testThatNegativeEpochsCanBeParsed(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testThatNegativeEpochsCanBeParsed(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testThatNegativeEpochsCanBeParsed",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testRounding(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testRounding(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testRounding",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testMultipleFormats(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testMultipleFormats(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testMultipleFormats",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testMultipleDifferentFormats(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testMultipleDifferentFormats(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testMultipleDifferentFormats",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testWriteAndParse(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testWriteAndParse(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testWriteAndParse",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testForInvalidDatesInEpochMillis(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testForInvalidDatesInEpochMillis(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testForInvalidDatesInEpochMillis",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testThatEpochsCanBeParsed(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testThatEpochsCanBeParsed(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testThatEpochsCanBeParsed",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testSlashInFormat(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testSlashInFormat(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testSlashInFormat",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testThatDefaultFormatterChecksForCorrectYearLength(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testThatDefaultFormatterChecksForCorrectYearLength(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testThatDefaultFormatterChecksForCorrectYearLength",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testThatEpochParserIsIdempotent(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testThatEpochParserIsIdempotent(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testThatEpochParserIsIdempotent",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testIsoDateFormatDateTimeNoMillisUTC(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testIsoDateFormatDateTimeNoMillisUTC(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testIsoDateFormatDateTimeNoMillisUTC",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testIsoVsCustom(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testIsoVsCustom(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testIsoVsCustom",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testMultiParsers(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testMultiParsers(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testMultiParsers",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testIsoDateFormatDateOptionalTimeUTC(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testIsoDateFormatDateOptionalTimeUTC(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testIsoDateFormatDateOptionalTimeUTC",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testRoundingSetOnTime(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testRoundingSetOnTime(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testRoundingSetOnTime",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testRoundingWithTimeZone(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testRoundingWithTimeZone(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testRoundingWithTimeZone",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935910005
 }
]

[
 "TEST_STARTED",
 "ID#testForInvalidDatesInEpochSecond(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForInvalidDatesInEpochSecond(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1473935910037,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidPatterns(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidPatterns(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1473935910041,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatRootObjectParsingIsStrict(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatRootObjectParsingIsStrict(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1473935910043,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testThatEpochParserIsPrinter(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatEpochParserIsPrinter(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1473935910047,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatEpochTimePrinterWorks(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatEpochTimePrinterWorks(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1473935910049,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testUpperBound(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpperBound(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1473935910071,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testThatNegativeEpochsCanBeParsed(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatNegativeEpochsCanBeParsed(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1473935910082,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRounding(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRounding(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1473935910085,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleFormats(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleFormats(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1473935910097,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleDifferentFormats(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleDifferentFormats(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1473935910099,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testWriteAndParse(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteAndParse(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1473935910102,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testForInvalidDatesInEpochMillis(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForInvalidDatesInEpochMillis(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1473935910104,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatEpochsCanBeParsed(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatEpochsCanBeParsed(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1473935910106,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSlashInFormat(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSlashInFormat(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1473935910109,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testThatDefaultFormatterChecksForCorrectYearLength(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatDefaultFormatterChecksForCorrectYearLength(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1473935910113,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testThatEpochParserIsIdempotent(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatEpochParserIsIdempotent(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1473935910131,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIsoDateFormatDateTimeNoMillisUTC(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsoDateFormatDateTimeNoMillisUTC(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1473935910135,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIsoVsCustom(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsoVsCustom(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1473935910139,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testMultiParsers(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiParsers(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1473935910143,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsoDateFormatDateOptionalTimeUTC(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsoDateFormatDateOptionalTimeUTC(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1473935910146,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRoundingSetOnTime(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoundingSetOnTime(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1473935910148,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRoundingWithTimeZone(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoundingWithTimeZone(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1473935910152,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.deps.joda.SimpleJodaTests",
  "startTimestamp": 1473935910005,
  "executionTime": 157
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.FieldNamesFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.FieldNamesFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.FieldNamesFieldTypeTests",
   "children": [
    {
     "id": "ID#testTermQuery(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "displayName": "testTermQuery(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "methodName": "testTermQuery",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935910202
 }
]

[
 "TEST_STARTED",
 "ID#testTermQuery(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermQuery(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
  "startTimestamp": 1473935910219,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
  "startTimestamp": 1473935910222,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
  "startTimestamp": 1473935910224,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
  "startTimestamp": 1473935910226,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
  "startTimestamp": 1473935910229,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
  "startTimestamp": 1473935910231,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.FieldNamesFieldTypeTests",
  "startTimestamp": 1473935910202,
  "executionTime": 31
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.GeoHashTests",
   "displayName": "org.elasticsearch.common.geo.GeoHashTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.GeoHashTests",
   "children": [
    {
     "id": "ID#testGeohashAsLongRoutines(org.elasticsearch.common.geo.GeoHashTests)",
     "displayName": "testGeohashAsLongRoutines(org.elasticsearch.common.geo.GeoHashTests)",
     "methodName": "testGeohashAsLongRoutines",
     "className": "org.elasticsearch.common.geo.GeoHashTests",
     "children": []
    },
    {
     "id": "ID#testBboxFromHash(org.elasticsearch.common.geo.GeoHashTests)",
     "displayName": "testBboxFromHash(org.elasticsearch.common.geo.GeoHashTests)",
     "methodName": "testBboxFromHash",
     "className": "org.elasticsearch.common.geo.GeoHashTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935910263
 }
]

[
 "TEST_STARTED",
 "ID#testGeohashAsLongRoutines(org.elasticsearch.common.geo.GeoHashTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeohashAsLongRoutines(org.elasticsearch.common.geo.GeoHashTests)",
  "startTimestamp": 1473935910286,
  "executionTime": 695
 }
]

[
 "TEST_STARTED",
 "ID#testBboxFromHash(org.elasticsearch.common.geo.GeoHashTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBboxFromHash(org.elasticsearch.common.geo.GeoHashTests)",
  "startTimestamp": 1473935910981,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.GeoHashTests",
  "startTimestamp": 1473935910263,
  "executionTime": 723
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.node.DiscoveryNodesTests",
   "displayName": "org.elasticsearch.cluster.node.DiscoveryNodesTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.node.DiscoveryNodesTests",
   "children": [
    {
     "id": "ID#testResolveNodesIds(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
     "displayName": "testResolveNodesIds(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
     "methodName": "testResolveNodesIds",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodesTests",
     "children": []
    },
    {
     "id": "ID#testResolveNodeByIdOrName(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
     "displayName": "testResolveNodeByIdOrName(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
     "methodName": "testResolveNodeByIdOrName",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodesTests",
     "children": []
    },
    {
     "id": "ID#testResolveNodeByAttribute(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
     "displayName": "testResolveNodeByAttribute(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
     "methodName": "testResolveNodeByAttribute",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodesTests",
     "children": []
    },
    {
     "id": "ID#testDeltas(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
     "displayName": "testDeltas(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
     "methodName": "testDeltas",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935911044
 }
]

[
 "TEST_STARTED",
 "ID#testResolveNodesIds(org.elasticsearch.cluster.node.DiscoveryNodesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResolveNodesIds(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
  "startTimestamp": 1473935911092,
  "executionTime": 90
 }
]

[
 "TEST_STARTED",
 "ID#testResolveNodeByIdOrName(org.elasticsearch.cluster.node.DiscoveryNodesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResolveNodeByIdOrName(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
  "startTimestamp": 1473935911183,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testResolveNodeByAttribute(org.elasticsearch.cluster.node.DiscoveryNodesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResolveNodeByAttribute(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
  "startTimestamp": 1473935911185,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDeltas(org.elasticsearch.cluster.node.DiscoveryNodesTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:31,190][INFO ][org.elasticsearch.cluster.node] nodes A: nodes: %0A   {name_19}{node_19}{9U8WBxGRQ6aEWbJlqfB4JA}{local}{local[211]}{custom=PVg}%0A   {name_20}{node_20}{l-i_9ikkQlyJ0oHHHvRfiw}{local}{local[212]}{custom=match}%0A   {name_23}{node_23}{rtTP7BFoShecSTQDBRDXYg}{local}{local[215]}{custom=NwK}%0A   {name_24}{node_24}{5ptQT3nxTWSqIgHWxi5srQ}{local}{local[216]}{custom=qVyf}%0A   {name_21}{node_21}{c9x-653LT8SuWboT2VBOqg}{local}{local[213]}{custom=match}%0A   {name_22}{node_22}{nSgoE4MNQo2zuh-OtIdMUg}{local}{local[214]}{custom=CUn}, local%0A%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:31,198][INFO ][org.elasticsearch.cluster.node] nodes B: nodes: %0A   {name_25}{node_25}{T3KyUgy1QMCKeF28GbUR9Q}{local}{local[217]}{custom=match}%0A   {name_26}{node_26}{eR_QqkIFR4SeHQ_lqyzQwg}{local}{local[218]}{custom=MGy}%0A   {name_21}{node_21}{c9x-653LT8SuWboT2VBOqg}{local}{local[213]}{custom=match}%0A   {name_24}{node_24}{uOjLEUmMTH-boeiRAMcFMQ}{local}{local[216]}{new=new, custom=qVyf}%0A   {name_19}{node_19}{vHX91zaNSL-4ocsxc_nxkw}{local}{local[211]}{new=new, custom=PVg}%0A   {name_20}{node_20}{l-i_9ikkQlyJ0oHHHvRfiw}{local}{local[212]}{custom=match}, local%0A   {name_22}{node_22}{Osk6BdBPSCef11IhMkrUaw}{local}{local[214]}{new=new, custom=CUn}%0A%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeltas(org.elasticsearch.cluster.node.DiscoveryNodesTests)",
  "startTimestamp": 1473935911187,
  "executionTime": 12
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.node.DiscoveryNodesTests",
  "startTimestamp": 1473935911044,
  "executionTime": 157
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.recycler.NoneRecyclerTests",
   "displayName": "org.elasticsearch.common.recycler.NoneRecyclerTests",
   "methodName": null,
   "className": "org.elasticsearch.common.recycler.NoneRecyclerTests",
   "children": [
    {
     "id": "ID#testClose(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "displayName": "testClose(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "methodName": "testClose",
     "className": "org.elasticsearch.common.recycler.NoneRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testReuse(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "displayName": "testReuse(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "methodName": "testReuse",
     "className": "org.elasticsearch.common.recycler.NoneRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testDoubleRelease(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "displayName": "testDoubleRelease(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "methodName": "testDoubleRelease",
     "className": "org.elasticsearch.common.recycler.NoneRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testRecycle(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "displayName": "testRecycle(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "methodName": "testRecycle",
     "className": "org.elasticsearch.common.recycler.NoneRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "displayName": "testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "methodName": "testDestroyWhenOverCapacity",
     "className": "org.elasticsearch.common.recycler.NoneRecyclerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935911289
 }
]

[
 "TEST_STARTED",
 "ID#testClose(org.elasticsearch.common.recycler.NoneRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClose(org.elasticsearch.common.recycler.NoneRecyclerTests)",
  "startTimestamp": 1473935911346,
  "executionTime": 41
 }
]

[
 "TEST_STARTED",
 "ID#testReuse(org.elasticsearch.common.recycler.NoneRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReuse(org.elasticsearch.common.recycler.NoneRecyclerTests)",
  "startTimestamp": 1473935911387,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDoubleRelease(org.elasticsearch.common.recycler.NoneRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoubleRelease(org.elasticsearch.common.recycler.NoneRecyclerTests)",
  "startTimestamp": 1473935911389,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecycle(org.elasticsearch.common.recycler.NoneRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecycle(org.elasticsearch.common.recycler.NoneRecyclerTests)",
  "startTimestamp": 1473935911392,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.NoneRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.NoneRecyclerTests)",
  "startTimestamp": 1473935911394,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.recycler.NoneRecyclerTests",
  "startTimestamp": 1473935911289,
  "executionTime": 110
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.cbor.CborXContentTests",
   "displayName": "org.elasticsearch.common.xcontent.cbor.CborXContentTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.cbor.CborXContentTests",
   "children": [
    {
     "id": "ID#testBasics(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "displayName": "testBasics(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "methodName": "testBasics",
     "className": "org.elasticsearch.common.xcontent.cbor.CborXContentTests",
     "children": []
    },
    {
     "id": "ID#testBigInteger(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "displayName": "testBigInteger(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "methodName": "testBigInteger",
     "className": "org.elasticsearch.common.xcontent.cbor.CborXContentTests",
     "children": []
    },
    {
     "id": "ID#testMissingEndArray(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "displayName": "testMissingEndArray(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "methodName": "testMissingEndArray",
     "className": "org.elasticsearch.common.xcontent.cbor.CborXContentTests",
     "children": []
    },
    {
     "id": "ID#testRawValue(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "displayName": "testRawValue(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "methodName": "testRawValue",
     "className": "org.elasticsearch.common.xcontent.cbor.CborXContentTests",
     "children": []
    },
    {
     "id": "ID#testMissingEndObject(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "displayName": "testMissingEndObject(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "methodName": "testMissingEndObject",
     "className": "org.elasticsearch.common.xcontent.cbor.CborXContentTests",
     "children": []
    },
    {
     "id": "ID#testRawField(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "displayName": "testRawField(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "methodName": "testRawField",
     "className": "org.elasticsearch.common.xcontent.cbor.CborXContentTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935911462
 }
]

[
 "TEST_STARTED",
 "ID#testBasics(org.elasticsearch.common.xcontent.cbor.CborXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasics(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
  "startTimestamp": 1473935911543,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBigInteger(org.elasticsearch.common.xcontent.cbor.CborXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBigInteger(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
  "startTimestamp": 1473935911545,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testMissingEndArray(org.elasticsearch.common.xcontent.cbor.CborXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingEndArray(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
  "startTimestamp": 1473935911549,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRawValue(org.elasticsearch.common.xcontent.cbor.CborXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawValue(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
  "startTimestamp": 1473935911552,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMissingEndObject(org.elasticsearch.common.xcontent.cbor.CborXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingEndObject(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
  "startTimestamp": 1473935911556,
  "executionTime": 40
 }
]

[
 "TEST_STARTED",
 "ID#testRawField(org.elasticsearch.common.xcontent.cbor.CborXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawField(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
  "startTimestamp": 1473935911597,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.cbor.CborXContentTests",
  "startTimestamp": 1473935911462,
  "executionTime": 141
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.settings.ScopedSettingsTests",
   "displayName": "org.elasticsearch.common.settings.ScopedSettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.settings.ScopedSettingsTests",
   "children": [
    {
     "id": "ID#testKeyPattern(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "displayName": "testKeyPattern(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "methodName": "testKeyPattern",
     "className": "org.elasticsearch.common.settings.ScopedSettingsTests",
     "children": []
    },
    {
     "id": "ID#testIsDynamic(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "displayName": "testIsDynamic(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "methodName": "testIsDynamic",
     "className": "org.elasticsearch.common.settings.ScopedSettingsTests",
     "children": []
    },
    {
     "id": "ID#testOverlappingComplexMatchSettings(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "displayName": "testOverlappingComplexMatchSettings(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "methodName": "testOverlappingComplexMatchSettings",
     "className": "org.elasticsearch.common.settings.ScopedSettingsTests",
     "children": []
    },
    {
     "id": "ID#testUpdateTracer(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "displayName": "testUpdateTracer(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "methodName": "testUpdateTracer",
     "className": "org.elasticsearch.common.settings.ScopedSettingsTests",
     "children": []
    },
    {
     "id": "ID#testDiff(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "displayName": "testDiff(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "methodName": "testDiff",
     "className": "org.elasticsearch.common.settings.ScopedSettingsTests",
     "children": []
    },
    {
     "id": "ID#testGet(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "displayName": "testGet(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "methodName": "testGet",
     "className": "org.elasticsearch.common.settings.ScopedSettingsTests",
     "children": []
    },
    {
     "id": "ID#testValidate(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "displayName": "testValidate(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "methodName": "testValidate",
     "className": "org.elasticsearch.common.settings.ScopedSettingsTests",
     "children": []
    },
    {
     "id": "ID#testFallbackToLoggerLevel(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "displayName": "testFallbackToLoggerLevel(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "methodName": "testFallbackToLoggerLevel",
     "className": "org.elasticsearch.common.settings.ScopedSettingsTests",
     "children": []
    },
    {
     "id": "ID#testValidateWithSuggestion(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "displayName": "testValidateWithSuggestion(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "methodName": "testValidateWithSuggestion",
     "className": "org.elasticsearch.common.settings.ScopedSettingsTests",
     "children": []
    },
    {
     "id": "ID#testAddConsumer(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "displayName": "testAddConsumer(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "methodName": "testAddConsumer",
     "className": "org.elasticsearch.common.settings.ScopedSettingsTests",
     "children": []
    },
    {
     "id": "ID#testLoggingUpdates(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "displayName": "testLoggingUpdates(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "methodName": "testLoggingUpdates",
     "className": "org.elasticsearch.common.settings.ScopedSettingsTests",
     "children": []
    },
    {
     "id": "ID#testApply(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "displayName": "testApply(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "methodName": "testApply",
     "className": "org.elasticsearch.common.settings.ScopedSettingsTests",
     "children": []
    },
    {
     "id": "ID#testGetSetting(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "displayName": "testGetSetting(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "methodName": "testGetSetting",
     "className": "org.elasticsearch.common.settings.ScopedSettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935911676
 }
]

[
 "TEST_STARTED",
 "ID#testKeyPattern(org.elasticsearch.common.settings.ScopedSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testKeyPattern(org.elasticsearch.common.settings.ScopedSettingsTests)",
  "startTimestamp": 1473935911770,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testIsDynamic(org.elasticsearch.common.settings.ScopedSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsDynamic(org.elasticsearch.common.settings.ScopedSettingsTests)",
  "startTimestamp": 1473935911775,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testOverlappingComplexMatchSettings(org.elasticsearch.common.settings.ScopedSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOverlappingComplexMatchSettings(org.elasticsearch.common.settings.ScopedSettingsTests)",
  "startTimestamp": 1473935911781,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUpdateTracer(org.elasticsearch.common.settings.ScopedSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:38:31,788][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [transport.tracer.include] from [[]] to [[\"internal:index/shard/recovery/*\",\"internal:gateway/local*\"]]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdateTracer(org.elasticsearch.common.settings.ScopedSettingsTests)",
  "startTimestamp": 1473935911784,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testDiff(org.elasticsearch.common.settings.ScopedSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDiff(org.elasticsearch.common.settings.ScopedSettingsTests)",
  "startTimestamp": 1473935911797,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testGet(org.elasticsearch.common.settings.ScopedSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGet(org.elasticsearch.common.settings.ScopedSettingsTests)",
  "startTimestamp": 1473935911800,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testValidate(org.elasticsearch.common.settings.ScopedSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidate(org.elasticsearch.common.settings.ScopedSettingsTests)",
  "startTimestamp": 1473935911804,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testFallbackToLoggerLevel(org.elasticsearch.common.settings.ScopedSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFallbackToLoggerLevel(org.elasticsearch.common.settings.ScopedSettingsTests)",
  "startTimestamp": 1473935911827,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testValidateWithSuggestion(org.elasticsearch.common.settings.ScopedSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidateWithSuggestion(org.elasticsearch.common.settings.ScopedSettingsTests)",
  "startTimestamp": 1473935911846,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testAddConsumer(org.elasticsearch.common.settings.ScopedSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:38:31,857][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [foo.bar] from [1] to [2]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddConsumer(org.elasticsearch.common.settings.ScopedSettingsTests)",
  "startTimestamp": 1473935911853,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testLoggingUpdates(org.elasticsearch.common.settings.ScopedSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLoggingUpdates(org.elasticsearch.common.settings.ScopedSettingsTests)",
  "startTimestamp": 1473935911857,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testApply(org.elasticsearch.common.settings.ScopedSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:38:31,877][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [foo.bar] from [1] to [2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:38:31,878][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [foo.bar.baz] from [1] to [15]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testApply(org.elasticsearch.common.settings.ScopedSettingsTests)",
  "startTimestamp": 1473935911869,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testGetSetting(org.elasticsearch.common.settings.ScopedSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetSetting(org.elasticsearch.common.settings.ScopedSettingsTests)",
  "startTimestamp": 1473935911878,
  "executionTime": 18
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.settings.ScopedSettingsTests",
  "startTimestamp": 1473935911676,
  "executionTime": 223
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests",
   "displayName": "org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests",
   "children": [
    {
     "id": "ID#testSimple(org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests)",
     "displayName": "testSimple(org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935911984
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests)",
  "startTimestamp": 1473935912152,
  "executionTime": 145
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests",
  "startTimestamp": 1473935911984,
  "executionTime": 315
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.index.IndexRequestBuilderTests",
   "displayName": "org.elasticsearch.action.index.IndexRequestBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.action.index.IndexRequestBuilderTests",
   "children": [
    {
     "id": "ID#testSetSource(org.elasticsearch.action.index.IndexRequestBuilderTests)",
     "displayName": "testSetSource(org.elasticsearch.action.index.IndexRequestBuilderTests)",
     "methodName": "testSetSource",
     "className": "org.elasticsearch.action.index.IndexRequestBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935912375
 }
]

[
 "TEST_STARTED",
 "ID#testSetSource(org.elasticsearch.action.index.IndexRequestBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetSource(org.elasticsearch.action.index.IndexRequestBuilderTests)",
  "startTimestamp": 1473935912415,
  "executionTime": 38
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.index.IndexRequestBuilderTests",
  "startTimestamp": 1473935912375,
  "executionTime": 81
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.nested.NestedAggregatorTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.nested.NestedAggregatorTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.nested.NestedAggregatorTests",
   "children": [
    {
     "id": "ID#testResetRootDocId(org.elasticsearch.search.aggregations.bucket.nested.NestedAggregatorTests)",
     "displayName": "testResetRootDocId(org.elasticsearch.search.aggregations.bucket.nested.NestedAggregatorTests)",
     "methodName": "testResetRootDocId",
     "className": "org.elasticsearch.search.aggregations.bucket.nested.NestedAggregatorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935912796
 }
]

[
 "TEST_STARTED",
 "ID#testResetRootDocId(org.elasticsearch.search.aggregations.bucket.nested.NestedAggregatorTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:38:32,970][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:38:33,112][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:38:33,113][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:38:33,117][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[15428], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:38:33,120][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:38:33,120][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:38:33,914][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:38:33,914][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:38:33,914][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[58]}, bound_addresses {local[58]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:38:33,949][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{PzebjxDDTNi70ADio7tpEQ}{0bR6nMzGSHKBROdOaieYxQ}{local}{local[58]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:38:33,950][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:38:34,159][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:38:35,134][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:38:35,345][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:38:36,776][INFO ][org.elasticsearch.search.aggregations.bucket.nested] [NestedAggregatorTests#testResetRootDocId]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResetRootDocId(org.elasticsearch.search.aggregations.bucket.nested.NestedAggregatorTests)",
  "startTimestamp": 1473935912960,
  "executionTime": 3934
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:38:36,895][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:38:36,900][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:38:36,900][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:38:36,902][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.nested.NestedAggregatorTests",
  "startTimestamp": 1473935912796,
  "executionTime": 4114
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.SourceFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.SourceFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.SourceFieldMapperTests",
   "children": [
    {
     "id": "ID#testExcludesNotUpdateable(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "displayName": "testExcludesNotUpdateable(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "methodName": "testExcludesNotUpdateable",
     "className": "org.elasticsearch.index.mapper.SourceFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testExcludes(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "displayName": "testExcludes(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "methodName": "testExcludes",
     "className": "org.elasticsearch.index.mapper.SourceFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIncludes(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "displayName": "testIncludes(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "methodName": "testIncludes",
     "className": "org.elasticsearch.index.mapper.SourceFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIncludesNotUpdateable(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "displayName": "testIncludesNotUpdateable(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "methodName": "testIncludesNotUpdateable",
     "className": "org.elasticsearch.index.mapper.SourceFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaultMappingAndNoMappingWithMapperService(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "displayName": "testDefaultMappingAndNoMappingWithMapperService(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "methodName": "testDefaultMappingAndNoMappingWithMapperService",
     "className": "org.elasticsearch.index.mapper.SourceFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaultMappingAndWithMappingOverrideWithMapperService(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "displayName": "testDefaultMappingAndWithMappingOverrideWithMapperService(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "methodName": "testDefaultMappingAndWithMappingOverrideWithMapperService",
     "className": "org.elasticsearch.index.mapper.SourceFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNoFormat(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "displayName": "testNoFormat(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "methodName": "testNoFormat",
     "className": "org.elasticsearch.index.mapper.SourceFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaultMappingAndWithMappingOverride(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "displayName": "testDefaultMappingAndWithMappingOverride(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "methodName": "testDefaultMappingAndWithMappingOverride",
     "className": "org.elasticsearch.index.mapper.SourceFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testSourceObjectContainsExtraTokens(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "displayName": "testSourceObjectContainsExtraTokens(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "methodName": "testSourceObjectContainsExtraTokens",
     "className": "org.elasticsearch.index.mapper.SourceFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testComplete(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "displayName": "testComplete(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "methodName": "testComplete",
     "className": "org.elasticsearch.index.mapper.SourceFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testFormatBackCompat(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "displayName": "testFormatBackCompat(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "methodName": "testFormatBackCompat",
     "className": "org.elasticsearch.index.mapper.SourceFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaultMappingAndNoMapping(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "displayName": "testDefaultMappingAndNoMapping(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "methodName": "testDefaultMappingAndNoMapping",
     "className": "org.elasticsearch.index.mapper.SourceFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testEnabledNotUpdateable(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "displayName": "testEnabledNotUpdateable(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
     "methodName": "testEnabledNotUpdateable",
     "className": "org.elasticsearch.index.mapper.SourceFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935916964
 }
]

[
 "TEST_STARTED",
 "ID#testExcludesNotUpdateable(org.elasticsearch.index.mapper.SourceFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:37,037][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:37,066][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:37,066][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:37,071][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[15428], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:37,074][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:37,074][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:37,272][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:37,273][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:37,273][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[59]}, bound_addresses {local[59]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:37,274][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{6Ij_uK6eTcC9RlcMKCxXZw}{UMz2_ddVRHqKgJmjiq5TAw}{local}{local[59]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:37,275][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:37,289][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:37,308][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:37,434][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:37,455][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [SourceFieldMapperTests#testExcludesNotUpdateable]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExcludesNotUpdateable(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
  "startTimestamp": 1473935917022,
  "executionTime": 469
 }
]

[
 "TEST_STARTED",
 "ID#testExcludes(org.elasticsearch.index.mapper.SourceFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:37,499][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:37,558][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:37,605][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [SourceFieldMapperTests#testExcludes]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExcludes(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
  "startTimestamp": 1473935917491,
  "executionTime": 146
 }
]

[
 "TEST_STARTED",
 "ID#testIncludes(org.elasticsearch.index.mapper.SourceFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:37,644][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:37,731][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:37,769][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [SourceFieldMapperTests#testIncludes]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludes(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
  "startTimestamp": 1473935917637,
  "executionTime": 167
 }
]

[
 "TEST_STARTED",
 "ID#testIncludesNotUpdateable(org.elasticsearch.index.mapper.SourceFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:37,813][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:37,914][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:37,952][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [SourceFieldMapperTests#testIncludesNotUpdateable]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludesNotUpdateable(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
  "startTimestamp": 1473935917805,
  "executionTime": 185
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultMappingAndNoMappingWithMapperService(org.elasticsearch.index.mapper.SourceFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:37,999][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:38,147][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:38,169][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [SourceFieldMapperTests#testDefaultMappingAndNoMappingWithMapperService]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultMappingAndNoMappingWithMapperService(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
  "startTimestamp": 1473935917990,
  "executionTime": 244
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultMappingAndWithMappingOverrideWithMapperService(org.elasticsearch.index.mapper.SourceFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:38,242][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:38,364][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:38,429][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [SourceFieldMapperTests#testDefaultMappingAndWithMappingOverrideWithMapperService]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultMappingAndWithMappingOverrideWithMapperService(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
  "startTimestamp": 1473935918235,
  "executionTime": 246
 }
]

[
 "TEST_STARTED",
 "ID#testNoFormat(org.elasticsearch.index.mapper.SourceFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:38,488][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:38,548][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:38,564][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [SourceFieldMapperTests#testNoFormat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoFormat(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
  "startTimestamp": 1473935918481,
  "executionTime": 116
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultMappingAndWithMappingOverride(org.elasticsearch.index.mapper.SourceFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:38,606][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:38,664][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:38,677][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [SourceFieldMapperTests#testDefaultMappingAndWithMappingOverride]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultMappingAndWithMappingOverride(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
  "startTimestamp": 1473935918597,
  "executionTime": 110
 }
]

[
 "TEST_STARTED",
 "ID#testSourceObjectContainsExtraTokens(org.elasticsearch.index.mapper.SourceFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:38,715][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:38,774][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:38,789][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [SourceFieldMapperTests#testSourceObjectContainsExtraTokens]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSourceObjectContainsExtraTokens(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
  "startTimestamp": 1473935918708,
  "executionTime": 115
 }
]

[
 "TEST_STARTED",
 "ID#testComplete(org.elasticsearch.index.mapper.SourceFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:38,829][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:38,885][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:38,901][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [SourceFieldMapperTests#testComplete]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testComplete(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
  "startTimestamp": 1473935918823,
  "executionTime": 108
 }
]

[
 "TEST_STARTED",
 "ID#testFormatBackCompat(org.elasticsearch.index.mapper.SourceFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:38,938][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:39,410][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:39,419][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [SourceFieldMapperTests#testFormatBackCompat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFormatBackCompat(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
  "startTimestamp": 1473935918931,
  "executionTime": 590
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultMappingAndNoMapping(org.elasticsearch.index.mapper.SourceFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:39,527][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:39,562][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:39,572][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [SourceFieldMapperTests#testDefaultMappingAndNoMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultMappingAndNoMapping(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
  "startTimestamp": 1473935919522,
  "executionTime": 68
 }
]

[
 "TEST_STARTED",
 "ID#testEnabledNotUpdateable(org.elasticsearch.index.mapper.SourceFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:39,595][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:39,739][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:39,826][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [SourceFieldMapperTests#testEnabledNotUpdateable]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnabledNotUpdateable(org.elasticsearch.index.mapper.SourceFieldMapperTests)",
  "startTimestamp": 1473935919590,
  "executionTime": 333
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:39,923][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:39,923][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:39,924][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:39,926][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.SourceFieldMapperTests",
  "startTimestamp": 1473935916964,
  "executionTime": 2975
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.hashing.MurmurHash3Tests",
   "displayName": "org.elasticsearch.common.hashing.MurmurHash3Tests",
   "methodName": null,
   "className": "org.elasticsearch.common.hashing.MurmurHash3Tests",
   "children": [
    {
     "id": "ID#testKnownValues(org.elasticsearch.common.hashing.MurmurHash3Tests)",
     "displayName": "testKnownValues(org.elasticsearch.common.hashing.MurmurHash3Tests)",
     "methodName": "testKnownValues",
     "className": "org.elasticsearch.common.hashing.MurmurHash3Tests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935919989
 }
]

[
 "TEST_STARTED",
 "ID#testKnownValues(org.elasticsearch.common.hashing.MurmurHash3Tests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testKnownValues(org.elasticsearch.common.hashing.MurmurHash3Tests)",
  "startTimestamp": 1473935920015,
  "executionTime": 33
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.hashing.MurmurHash3Tests",
  "startTimestamp": 1473935919989,
  "executionTime": 61
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935920083
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:40,144][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{wh9yPR-ORkatWyX6mA-ehQ}{local}{local[219]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)",
  "startTimestamp": 1473935920157,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:40,163][INFO ][org.elasticsearch.search.aggregations.pipeline] Content string: {%0A  \"jBPgTOGAZdjDTwVkN\" : {%0A    \"serial_diff\" : {%0A      \"buckets_path\" : [%0A        \"rAGF\"%0A      ],%0A      \"format\" : \"lEmRiqlkxK\",%0A      \"gap_policy\" : \"skip\",%0A      \"lag\" : 729%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:40,164][INFO ][org.elasticsearch.search.aggregations.pipeline] Content string: {%0A  \"jBPgTOGAZdjDTwVkN\" : {%0A    \"serial_diff\" : {%0A      \"buckets_path\" : [%0A        \"rAGF\"%0A      ],%0A      \"format\" : \"lEmRiqlkxK\",%0A      \"gap_policy\" : \"skip\",%0A      \"lag\" : 729%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)",
  "startTimestamp": 1473935920161,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests)",
  "startTimestamp": 1473935920165,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.SerialDifferenceTests",
  "startTimestamp": 1473935920083,
  "executionTime": 92
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.replication.TransportWriteActionTests",
   "displayName": "org.elasticsearch.action.support.replication.TransportWriteActionTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.replication.TransportWriteActionTests",
   "children": [
    {
     "id": "ID#testPrimaryImmediateRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "displayName": "testPrimaryImmediateRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "methodName": "testPrimaryImmediateRefresh",
     "className": "org.elasticsearch.action.support.replication.TransportWriteActionTests",
     "children": []
    },
    {
     "id": "ID#testReplicaWaitForRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "displayName": "testReplicaWaitForRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "methodName": "testReplicaWaitForRefresh",
     "className": "org.elasticsearch.action.support.replication.TransportWriteActionTests",
     "children": []
    },
    {
     "id": "ID#testPrimaryNoRefreshCall(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "displayName": "testPrimaryNoRefreshCall(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "methodName": "testPrimaryNoRefreshCall",
     "className": "org.elasticsearch.action.support.replication.TransportWriteActionTests",
     "children": []
    },
    {
     "id": "ID#testReplicaNoRefreshCall(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "displayName": "testReplicaNoRefreshCall(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "methodName": "testReplicaNoRefreshCall",
     "className": "org.elasticsearch.action.support.replication.TransportWriteActionTests",
     "children": []
    },
    {
     "id": "ID#testPrimaryWaitForRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "displayName": "testPrimaryWaitForRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "methodName": "testPrimaryWaitForRefresh",
     "className": "org.elasticsearch.action.support.replication.TransportWriteActionTests",
     "children": []
    },
    {
     "id": "ID#testReplicaImmediateRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "displayName": "testReplicaImmediateRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "methodName": "testReplicaImmediateRefresh",
     "className": "org.elasticsearch.action.support.replication.TransportWriteActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935920406
 }
]

[
 "TEST_STARTED",
 "ID#testPrimaryImmediateRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrimaryImmediateRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
  "startTimestamp": 1473935920460,
  "executionTime": 124
 }
]

[
 "TEST_STARTED",
 "ID#testReplicaWaitForRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplicaWaitForRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
  "startTimestamp": 1473935920584,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testPrimaryNoRefreshCall(org.elasticsearch.action.support.replication.TransportWriteActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrimaryNoRefreshCall(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
  "startTimestamp": 1473935920598,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testReplicaNoRefreshCall(org.elasticsearch.action.support.replication.TransportWriteActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplicaNoRefreshCall(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
  "startTimestamp": 1473935920607,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testPrimaryWaitForRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrimaryWaitForRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
  "startTimestamp": 1473935920611,
  "executionTime": 51
 }
]

[
 "TEST_STARTED",
 "ID#testReplicaImmediateRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplicaImmediateRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
  "startTimestamp": 1473935920663,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.replication.TransportWriteActionTests",
  "startTimestamp": 1473935920406,
  "executionTime": 265
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.TypeFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.TypeFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.TypeFieldMapperTests",
   "children": [
    {
     "id": "ID#testDocValuesPre21(org.elasticsearch.index.mapper.TypeFieldMapperTests)",
     "displayName": "testDocValuesPre21(org.elasticsearch.index.mapper.TypeFieldMapperTests)",
     "methodName": "testDocValuesPre21",
     "className": "org.elasticsearch.index.mapper.TypeFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDocValues(org.elasticsearch.index.mapper.TypeFieldMapperTests)",
     "displayName": "testDocValues(org.elasticsearch.index.mapper.TypeFieldMapperTests)",
     "methodName": "testDocValues",
     "className": "org.elasticsearch.index.mapper.TypeFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935920701
 }
]

[
 "TEST_STARTED",
 "ID#testDocValuesPre21(org.elasticsearch.index.mapper.TypeFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:38:40,728][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:38:40,751][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:38:40,751][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:38:40,755][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[15428], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:38:40,758][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:38:40,758][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:38:40,897][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:38:40,898][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:38:40,898][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[60]}, bound_addresses {local[60]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:38:40,899][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{UjiJQvMXSUGrggbZb_NrFQ}{7DAbMugBQl-Wt0IKvL1nTQ}{local}{local[60]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:38:40,900][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:38:40,919][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:38:40,940][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:38:41,040][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:38:41,054][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TypeFieldMapperTests#testDocValuesPre21]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDocValuesPre21(org.elasticsearch.index.mapper.TypeFieldMapperTests)",
  "startTimestamp": 1473935920720,
  "executionTime": 362
 }
]

[
 "TEST_STARTED",
 "ID#testDocValues(org.elasticsearch.index.mapper.TypeFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:38:41,089][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:38:41,207][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:38:41,223][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TypeFieldMapperTests#testDocValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDocValues(org.elasticsearch.index.mapper.TypeFieldMapperTests)",
  "startTimestamp": 1473935921082,
  "executionTime": 176
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:38:41,258][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:38:41,259][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:38:41,259][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:38:41,261][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.TypeFieldMapperTests",
  "startTimestamp": 1473935920701,
  "executionTime": 573
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.ESExceptionTests",
   "displayName": "org.elasticsearch.ESExceptionTests",
   "methodName": null,
   "className": "org.elasticsearch.ESExceptionTests",
   "children": [
    {
     "id": "ID#testDeduplicate(org.elasticsearch.ESExceptionTests)",
     "displayName": "testDeduplicate(org.elasticsearch.ESExceptionTests)",
     "methodName": "testDeduplicate",
     "className": "org.elasticsearch.ESExceptionTests",
     "children": []
    },
    {
     "id": "ID#testWriteThrowable(org.elasticsearch.ESExceptionTests)",
     "displayName": "testWriteThrowable(org.elasticsearch.ESExceptionTests)",
     "methodName": "testWriteThrowable",
     "className": "org.elasticsearch.ESExceptionTests",
     "children": []
    },
    {
     "id": "ID#testGuessRootCause(org.elasticsearch.ESExceptionTests)",
     "displayName": "testGuessRootCause(org.elasticsearch.ESExceptionTests)",
     "methodName": "testGuessRootCause",
     "className": "org.elasticsearch.ESExceptionTests",
     "children": []
    },
    {
     "id": "ID#testToString(org.elasticsearch.ESExceptionTests)",
     "displayName": "testToString(org.elasticsearch.ESExceptionTests)",
     "methodName": "testToString",
     "className": "org.elasticsearch.ESExceptionTests",
     "children": []
    },
    {
     "id": "ID#testStatus(org.elasticsearch.ESExceptionTests)",
     "displayName": "testStatus(org.elasticsearch.ESExceptionTests)",
     "methodName": "testStatus",
     "className": "org.elasticsearch.ESExceptionTests",
     "children": []
    },
    {
     "id": "ID#testSerializeUnknownException(org.elasticsearch.ESExceptionTests)",
     "displayName": "testSerializeUnknownException(org.elasticsearch.ESExceptionTests)",
     "methodName": "testSerializeUnknownException",
     "className": "org.elasticsearch.ESExceptionTests",
     "children": []
    },
    {
     "id": "ID#testGetRootCause(org.elasticsearch.ESExceptionTests)",
     "displayName": "testGetRootCause(org.elasticsearch.ESExceptionTests)",
     "methodName": "testGetRootCause",
     "className": "org.elasticsearch.ESExceptionTests",
     "children": []
    },
    {
     "id": "ID#testToXContent(org.elasticsearch.ESExceptionTests)",
     "displayName": "testToXContent(org.elasticsearch.ESExceptionTests)",
     "methodName": "testToXContent",
     "className": "org.elasticsearch.ESExceptionTests",
     "children": []
    },
    {
     "id": "ID#testSerializeElasticsearchException(org.elasticsearch.ESExceptionTests)",
     "displayName": "testSerializeElasticsearchException(org.elasticsearch.ESExceptionTests)",
     "methodName": "testSerializeElasticsearchException",
     "className": "org.elasticsearch.ESExceptionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935921351
 }
]

[
 "TEST_STARTED",
 "ID#testDeduplicate(org.elasticsearch.ESExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeduplicate(org.elasticsearch.ESExceptionTests)",
  "startTimestamp": 1473935921366,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWriteThrowable(org.elasticsearch.ESExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteThrowable(org.elasticsearch.ESExceptionTests)",
  "startTimestamp": 1473935921368,
  "executionTime": 167
 }
]

[
 "TEST_STARTED",
 "ID#testGuessRootCause(org.elasticsearch.ESExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGuessRootCause(org.elasticsearch.ESExceptionTests)",
  "startTimestamp": 1473935921535,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testToString(org.elasticsearch.ESExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToString(org.elasticsearch.ESExceptionTests)",
  "startTimestamp": 1473935921540,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testStatus(org.elasticsearch.ESExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStatus(org.elasticsearch.ESExceptionTests)",
  "startTimestamp": 1473935921543,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerializeUnknownException(org.elasticsearch.ESExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerializeUnknownException(org.elasticsearch.ESExceptionTests)",
  "startTimestamp": 1473935921545,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGetRootCause(org.elasticsearch.ESExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetRootCause(org.elasticsearch.ESExceptionTests)",
  "startTimestamp": 1473935921548,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToXContent(org.elasticsearch.ESExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToXContent(org.elasticsearch.ESExceptionTests)",
  "startTimestamp": 1473935921551,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerializeElasticsearchException(org.elasticsearch.ESExceptionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerializeElasticsearchException(org.elasticsearch.ESExceptionTests)",
  "startTimestamp": 1473935921553,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.ESExceptionTests",
  "startTimestamp": 1473935921351,
  "executionTime": 206
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests",
   "children": [
    {
     "id": "ID#testPreferPrimaryAllocationOverReplicas(org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests)",
     "displayName": "testPreferPrimaryAllocationOverReplicas(org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests)",
     "methodName": "testPreferPrimaryAllocationOverReplicas",
     "className": "org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935921632
 }
]

[
 "TEST_STARTED",
 "ID#testPreferPrimaryAllocationOverReplicas(org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T22:38:41,654][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] create an allocation with 1 initial recoveries%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T22:38:41,681][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] create several indices with no replicas, and wait till all are allocated%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T22:38:41,710][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding two nodes and performing rerouting till all are allocated%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T22:38:41,853][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][8], [test1][9]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T22:38:41,853][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] increasing the number of replicas to 1, and perform a reroute (to get the replicas allocation going)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T22:38:41,856][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] 2 replicas should be initializing now for the existing indices (we throttle to 1)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T22:38:41,856][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] create a new index%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T22:38:41,856][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] reroute, verify that primaries for the new index primary shards are allocated%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreferPrimaryAllocationOverReplicas(org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests)",
  "startTimestamp": 1473935921651,
  "executionTime": 207
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests",
  "startTimestamp": 1473935921632,
  "executionTime": 228
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.AutoExpandReplicasTests",
   "displayName": "org.elasticsearch.cluster.metadata.AutoExpandReplicasTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.AutoExpandReplicasTests",
   "children": [
    {
     "id": "ID#testParseSettings(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)",
     "displayName": "testParseSettings(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)",
     "methodName": "testParseSettings",
     "className": "org.elasticsearch.cluster.metadata.AutoExpandReplicasTests",
     "children": []
    },
    {
     "id": "ID#testInvalidValues(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)",
     "displayName": "testInvalidValues(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)",
     "methodName": "testInvalidValues",
     "className": "org.elasticsearch.cluster.metadata.AutoExpandReplicasTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935921889
 }
]

[
 "TEST_STARTED",
 "ID#testParseSettings(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseSettings(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)",
  "startTimestamp": 1473935921966,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidValues(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidValues(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)",
  "startTimestamp": 1473935921969,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.AutoExpandReplicasTests",
  "startTimestamp": 1473935921889,
  "executionTime": 84
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.store.InputStreamIndexInputTests",
   "displayName": "org.elasticsearch.common.lucene.store.InputStreamIndexInputTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.store.InputStreamIndexInputTests",
   "children": [
    {
     "id": "ID#testMarkRest(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "displayName": "testMarkRest(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "methodName": "testMarkRest",
     "className": "org.elasticsearch.common.lucene.store.InputStreamIndexInputTests",
     "children": []
    },
    {
     "id": "ID#testSingleReadTwoBytesLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "displayName": "testSingleReadTwoBytesLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "methodName": "testSingleReadTwoBytesLimit",
     "className": "org.elasticsearch.common.lucene.store.InputStreamIndexInputTests",
     "children": []
    },
    {
     "id": "ID#testReadMultiFourBytesLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "displayName": "testReadMultiFourBytesLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "methodName": "testReadMultiFourBytesLimit",
     "className": "org.elasticsearch.common.lucene.store.InputStreamIndexInputTests",
     "children": []
    },
    {
     "id": "ID#testSingleReadSingleByteLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "displayName": "testSingleReadSingleByteLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "methodName": "testSingleReadSingleByteLimit",
     "className": "org.elasticsearch.common.lucene.store.InputStreamIndexInputTests",
     "children": []
    },
    {
     "id": "ID#testReadMultiSingleByteLimit1(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "displayName": "testReadMultiSingleByteLimit1(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "methodName": "testReadMultiSingleByteLimit1",
     "className": "org.elasticsearch.common.lucene.store.InputStreamIndexInputTests",
     "children": []
    },
    {
     "id": "ID#testReadMultiTwoBytesLimit1(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "displayName": "testReadMultiTwoBytesLimit1(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "methodName": "testReadMultiTwoBytesLimit1",
     "className": "org.elasticsearch.common.lucene.store.InputStreamIndexInputTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935922022
 }
]

[
 "TEST_STARTED",
 "ID#testMarkRest(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMarkRest(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
  "startTimestamp": 1473935922245,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSingleReadTwoBytesLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleReadTwoBytesLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
  "startTimestamp": 1473935922247,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReadMultiFourBytesLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadMultiFourBytesLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
  "startTimestamp": 1473935922249,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSingleReadSingleByteLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleReadSingleByteLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
  "startTimestamp": 1473935922251,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReadMultiSingleByteLimit1(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadMultiSingleByteLimit1(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
  "startTimestamp": 1473935922253,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testReadMultiTwoBytesLimit1(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadMultiTwoBytesLimit1(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
  "startTimestamp": 1473935922256,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.store.InputStreamIndexInputTests",
  "startTimestamp": 1473935922022,
  "executionTime": 238
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.discovery.zen.ElectMasterServiceTests",
   "displayName": "org.elasticsearch.discovery.zen.ElectMasterServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.discovery.zen.ElectMasterServiceTests",
   "children": [
    {
     "id": "ID#testSortByMasterLikelihood(org.elasticsearch.discovery.zen.ElectMasterServiceTests)",
     "displayName": "testSortByMasterLikelihood(org.elasticsearch.discovery.zen.ElectMasterServiceTests)",
     "methodName": "testSortByMasterLikelihood",
     "className": "org.elasticsearch.discovery.zen.ElectMasterServiceTests",
     "children": []
    },
    {
     "id": "ID#testElectMaster(org.elasticsearch.discovery.zen.ElectMasterServiceTests)",
     "displayName": "testElectMaster(org.elasticsearch.discovery.zen.ElectMasterServiceTests)",
     "methodName": "testElectMaster",
     "className": "org.elasticsearch.discovery.zen.ElectMasterServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935922340
 }
]

[
 "TEST_STARTED",
 "ID#testSortByMasterLikelihood(org.elasticsearch.discovery.zen.ElectMasterServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortByMasterLikelihood(org.elasticsearch.discovery.zen.ElectMasterServiceTests)",
  "startTimestamp": 1473935922403,
  "executionTime": 61
 }
]

[
 "TEST_STARTED",
 "ID#testElectMaster(org.elasticsearch.discovery.zen.ElectMasterServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testElectMaster(org.elasticsearch.discovery.zen.ElectMasterServiceTests)",
  "startTimestamp": 1473935922464,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.discovery.zen.ElectMasterServiceTests",
  "startTimestamp": 1473935922340,
  "executionTime": 130
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.unit.RatioValueTests",
   "displayName": "org.elasticsearch.common.unit.RatioValueTests",
   "methodName": null,
   "className": "org.elasticsearch.common.unit.RatioValueTests",
   "children": [
    {
     "id": "ID#testParsing(org.elasticsearch.common.unit.RatioValueTests)",
     "displayName": "testParsing(org.elasticsearch.common.unit.RatioValueTests)",
     "methodName": "testParsing",
     "className": "org.elasticsearch.common.unit.RatioValueTests",
     "children": []
    },
    {
     "id": "ID#testNegativeCase(org.elasticsearch.common.unit.RatioValueTests)",
     "displayName": "testNegativeCase(org.elasticsearch.common.unit.RatioValueTests)",
     "methodName": "testNegativeCase",
     "className": "org.elasticsearch.common.unit.RatioValueTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935922747
 }
]

[
 "TEST_STARTED",
 "ID#testParsing(org.elasticsearch.common.unit.RatioValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsing(org.elasticsearch.common.unit.RatioValueTests)",
  "startTimestamp": 1473935922775,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNegativeCase(org.elasticsearch.common.unit.RatioValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNegativeCase(org.elasticsearch.common.unit.RatioValueTests)",
  "startTimestamp": 1473935922778,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.unit.RatioValueTests",
  "startTimestamp": 1473935922747,
  "executionTime": 35
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.controller.SearchPhaseControllerTests",
   "displayName": "org.elasticsearch.search.controller.SearchPhaseControllerTests",
   "methodName": null,
   "className": "org.elasticsearch.search.controller.SearchPhaseControllerTests",
   "children": [
    {
     "id": "ID#testSort(org.elasticsearch.search.controller.SearchPhaseControllerTests)",
     "displayName": "testSort(org.elasticsearch.search.controller.SearchPhaseControllerTests)",
     "methodName": "testSort",
     "className": "org.elasticsearch.search.controller.SearchPhaseControllerTests",
     "children": []
    },
    {
     "id": "ID#testMerge(org.elasticsearch.search.controller.SearchPhaseControllerTests)",
     "displayName": "testMerge(org.elasticsearch.search.controller.SearchPhaseControllerTests)",
     "methodName": "testMerge",
     "className": "org.elasticsearch.search.controller.SearchPhaseControllerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935922825
 }
]

[
 "TEST_STARTED",
 "ID#testSort(org.elasticsearch.search.controller.SearchPhaseControllerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSort(org.elasticsearch.search.controller.SearchPhaseControllerTests)",
  "startTimestamp": 1473935922845,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testMerge(org.elasticsearch.search.controller.SearchPhaseControllerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMerge(org.elasticsearch.search.controller.SearchPhaseControllerTests)",
  "startTimestamp": 1473935922871,
  "executionTime": 18
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.controller.SearchPhaseControllerTests",
  "startTimestamp": 1473935922825,
  "executionTime": 67
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.fieldcomparator.ReplaceMissingTests",
   "displayName": "org.elasticsearch.index.fielddata.fieldcomparator.ReplaceMissingTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.fieldcomparator.ReplaceMissingTests",
   "children": [
    {
     "id": "ID#test(org.elasticsearch.index.fielddata.fieldcomparator.ReplaceMissingTests)",
     "displayName": "test(org.elasticsearch.index.fielddata.fieldcomparator.ReplaceMissingTests)",
     "methodName": "test",
     "className": "org.elasticsearch.index.fielddata.fieldcomparator.ReplaceMissingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935922922
 }
]

[
 "TEST_STARTED",
 "ID#test(org.elasticsearch.index.fielddata.fieldcomparator.ReplaceMissingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#test(org.elasticsearch.index.fielddata.fieldcomparator.ReplaceMissingTests)",
  "startTimestamp": 1473935922942,
  "executionTime": 20
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.fieldcomparator.ReplaceMissingTests",
  "startTimestamp": 1473935922922,
  "executionTime": 42
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests",
   "displayName": "org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests",
   "children": [
    {
     "id": "ID#testDuplicateKeysThrowsException(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
     "displayName": "testDuplicateKeysThrowsException(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
     "methodName": "testDuplicateKeysThrowsException",
     "className": "org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests",
     "children": []
    },
    {
     "id": "ID#testSimpleYamlSettings(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
     "displayName": "testSimpleYamlSettings(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
     "methodName": "testSimpleYamlSettings",
     "className": "org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests",
     "children": []
    },
    {
     "id": "ID#testIndentationWithExplicitDocumentStart(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
     "displayName": "testIndentationWithExplicitDocumentStart(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
     "methodName": "testIndentationWithExplicitDocumentStart",
     "className": "org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests",
     "children": []
    },
    {
     "id": "ID#testMissingValue(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
     "displayName": "testMissingValue(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
     "methodName": "testMissingValue",
     "className": "org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests",
     "children": []
    },
    {
     "id": "ID#testIndentation(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
     "displayName": "testIndentation(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
     "methodName": "testIndentation",
     "className": "org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935922995
 }
]

[
 "TEST_STARTED",
 "ID#testDuplicateKeysThrowsException(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuplicateKeysThrowsException(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
  "startTimestamp": 1473935923018,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleYamlSettings(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleYamlSettings(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
  "startTimestamp": 1473935923022,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testIndentationWithExplicitDocumentStart(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndentationWithExplicitDocumentStart(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
  "startTimestamp": 1473935923037,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testMissingValue(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingValue(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
  "startTimestamp": 1473935923046,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testIndentation(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndentation(org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests)",
  "startTimestamp": 1473935923056,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.settings.loader.YamlSettingsLoaderTests",
  "startTimestamp": 1473935922995,
  "executionTime": 72
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.monitor.fs.FsProbeTests",
   "displayName": "org.elasticsearch.monitor.fs.FsProbeTests",
   "methodName": null,
   "className": "org.elasticsearch.monitor.fs.FsProbeTests",
   "children": [
    {
     "id": "ID#testIoStats(org.elasticsearch.monitor.fs.FsProbeTests)",
     "displayName": "testIoStats(org.elasticsearch.monitor.fs.FsProbeTests)",
     "methodName": "testIoStats",
     "className": "org.elasticsearch.monitor.fs.FsProbeTests",
     "children": []
    },
    {
     "id": "ID#testFsInfo(org.elasticsearch.monitor.fs.FsProbeTests)",
     "displayName": "testFsInfo(org.elasticsearch.monitor.fs.FsProbeTests)",
     "methodName": "testFsInfo",
     "className": "org.elasticsearch.monitor.fs.FsProbeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935923125
 }
]

[
 "TEST_STARTED",
 "ID#testIoStats(org.elasticsearch.monitor.fs.FsProbeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIoStats(org.elasticsearch.monitor.fs.FsProbeTests)",
  "startTimestamp": 1473935923155,
  "executionTime": 335
 }
]

[
 "TEST_STARTED",
 "ID#testFsInfo(org.elasticsearch.monitor.fs.FsProbeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:43,519][INFO ][org.elasticsearch.env    ] [fjLlMJa] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:38:43,519][INFO ][org.elasticsearch.env    ] [fjLlMJa] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFsInfo(org.elasticsearch.monitor.fs.FsProbeTests)",
  "startTimestamp": 1473935923490,
  "executionTime": 44
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.monitor.fs.FsProbeTests",
  "startTimestamp": 1473935923125,
  "executionTime": 416
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests",
   "children": [
    {
     "id": "ID#testSortedSetRangeLeafCollectorSingleValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
     "displayName": "testSortedSetRangeLeafCollectorSingleValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
     "methodName": "testSortedSetRangeLeafCollectorSingleValued",
     "className": "org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests",
     "children": []
    },
    {
     "id": "ID#testSortedSetRangeLeafCollectorMultiValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
     "displayName": "testSortedSetRangeLeafCollectorMultiValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
     "methodName": "testSortedSetRangeLeafCollectorMultiValued",
     "className": "org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests",
     "children": []
    },
    {
     "id": "ID#testSortedBinaryRangeLeafCollectorSingleValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
     "displayName": "testSortedBinaryRangeLeafCollectorSingleValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
     "methodName": "testSortedBinaryRangeLeafCollectorSingleValued",
     "className": "org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests",
     "children": []
    },
    {
     "id": "ID#testSortedBinaryRangeLeafCollectorMultiValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
     "displayName": "testSortedBinaryRangeLeafCollectorMultiValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
     "methodName": "testSortedBinaryRangeLeafCollectorMultiValued",
     "className": "org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935923704
 }
]

[
 "TEST_STARTED",
 "ID#testSortedSetRangeLeafCollectorSingleValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortedSetRangeLeafCollectorSingleValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
  "startTimestamp": 1473935923770,
  "executionTime": 263
 }
]

[
 "TEST_STARTED",
 "ID#testSortedSetRangeLeafCollectorMultiValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortedSetRangeLeafCollectorMultiValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
  "startTimestamp": 1473935924033,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testSortedBinaryRangeLeafCollectorSingleValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortedBinaryRangeLeafCollectorSingleValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
  "startTimestamp": 1473935924057,
  "executionTime": 115
 }
]

[
 "TEST_STARTED",
 "ID#testSortedBinaryRangeLeafCollectorMultiValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortedBinaryRangeLeafCollectorMultiValued(org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests)",
  "startTimestamp": 1473935924172,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.range.BinaryRangeAggregatorTests",
  "startTimestamp": 1473935923704,
  "executionTime": 479
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.ingest.IngestDocumentTests",
   "displayName": "org.elasticsearch.ingest.IngestDocumentTests",
   "methodName": null,
   "className": "org.elasticsearch.ingest.IngestDocumentTests",
   "children": [
    {
     "id": "ID#testHasFieldSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testHasFieldSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testHasFieldSourceObject",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testHasFieldNullValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testHasFieldNullValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testHasFieldNullValue",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListSetFieldValueNoIndexProvided(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListSetFieldValueNoIndexProvided(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListSetFieldValueNoIndexProvided",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetFieldValueOnExistingParentTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetFieldValueOnExistingParentTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetFieldValueOnExistingParentTypeMismatch",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListAppendFieldValues(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListAppendFieldValues(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListAppendFieldValues",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetFieldValueNullName(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetFieldValueNullName(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetFieldValueNullName",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testHasFieldEmpty(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testHasFieldEmpty(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testHasFieldEmpty",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetFieldValueOnExistingParent(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetFieldValueOnExistingParent(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetFieldValueOnExistingParent",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValueToNonExistingList(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValueToNonExistingList(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValueToNonExistingList",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetSourceObject",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testNestedSetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testNestedSetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testNestedSetFieldValue",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testHasFieldNestedNotFound(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testHasFieldNestedNotFound(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testHasFieldNestedNotFound",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValueConvertStringToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValueConvertStringToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValueConvertStringToList",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValuesToNonExistingList(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValuesToNonExistingList(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValuesToNonExistingList",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSimpleGetFieldValueTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSimpleGetFieldValueTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSimpleGetFieldValueTypeMismatch",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testRemoveField(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testRemoveField(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testRemoveField",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testNestedRemoveFieldTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testNestedRemoveFieldTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testNestedRemoveFieldTypeMismatch",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testHasFieldNotFound(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testHasFieldNotFound(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testHasFieldNotFound",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testHasFieldNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testHasFieldNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testHasFieldNotFoundNullParent",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testGetFieldValueNotFound(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testGetFieldValueNotFound(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testGetFieldValueNotFound",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValueToListElement(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValueToListElement(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValueToListElement",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testHasFieldNull(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testHasFieldNull(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testHasFieldNull",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetInvalidSourceField(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetInvalidSourceField(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetInvalidSourceField",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testHasField(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testHasField(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testHasField",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValuesConvertStringListElementToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValuesConvertStringListElementToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValuesConvertStringListElementToList",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListGetFieldValue",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testRemoveEmptyField(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testRemoveEmptyField(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testRemoveEmptyField",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListGetFieldValueIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListGetFieldValueIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListGetFieldValueIndexNotNumeric",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testGetIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testGetIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testGetIngestObject",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testGetFieldValueNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testGetFieldValueNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testGetFieldValueNotFoundNullParent",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testRemoveSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testRemoveSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testRemoveSourceObject",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testRemoveIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testRemoveIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testRemoveIngestObject",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetEmptyPathAfterStrippingOutPrefix",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListSetFieldValueIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListSetFieldValueIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListSetFieldValueIndexOutOfBounds",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testNestedHasFieldTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testNestedHasFieldTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testNestedHasFieldTypeMismatch",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetFieldValueNullValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetFieldValueNullValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetFieldValueNullValue",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testCopyConstructor(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testCopyConstructor(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testCopyConstructor",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValuesToListElement(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValuesToListElement(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValuesToListElement",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testHasFieldIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testHasFieldIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testHasFieldIngestObject",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testHasFieldEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testHasFieldEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testHasFieldEmptyPathAfterStrippingOutPrefix",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testRemoveNonExistingField(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testRemoveNonExistingField(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testRemoveNonExistingField",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListSetFieldValueIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListSetFieldValueIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListSetFieldValueIndexNotNumeric",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testRemoveInnerField(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testRemoveInnerField(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testRemoveInnerField",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSimpleGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSimpleGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSimpleGetFieldValue",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListHasFieldIndexOutOfBounds_fail(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListHasFieldIndexOutOfBounds_fail(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListHasFieldIndexOutOfBounds_fail",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testRemoveExistingParentTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testRemoveExistingParentTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testRemoveExistingParentTypeMismatch",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListAppendFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListAppendFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListAppendFieldValue",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetIngestObject",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testNestedGetFieldValueTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testNestedGetFieldValueTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testNestedGetFieldValueTypeMismatch",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testGetFieldValueNullValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testGetFieldValueNullValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testGetFieldValueNullValue",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListRemoveFieldIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListRemoveFieldIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListRemoveFieldIndexNotNumeric",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetFieldValueOnExistingNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetFieldValueOnExistingNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetFieldValueOnExistingNullParent",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValueConvertStringListElementToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValueConvertStringListElementToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValueConvertStringListElementToList",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListHasFieldIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListHasFieldIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListHasFieldIndexOutOfBounds",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testRemoveFieldValueNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testRemoveFieldValueNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testRemoveFieldValueNotFoundNullParent",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testNestedGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testNestedGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testNestedGetFieldValue",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValueToListOfMaps(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValueToListOfMaps(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValueToListOfMaps",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testHasFieldNested(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testHasFieldNested(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testHasFieldNested",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListGetFieldValueIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListGetFieldValueIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListGetFieldValueIndexOutOfBounds",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetIngestSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetIngestSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetIngestSourceObject",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValueConvertIntegerToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValueConvertIntegerToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValueConvertIntegerToList",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testIngestMetadataTimestamp(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testIngestMetadataTimestamp(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testIngestMetadataTimestamp",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testGetSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testGetSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testGetSourceObject",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testGetFieldValueNull(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testGetFieldValueNull(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testGetFieldValueNull",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValueConvertMapToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValueConvertMapToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValueConvertMapToList",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testGetFieldValueEmpty(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testGetFieldValueEmpty(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testGetFieldValueEmpty",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListHasField(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListHasField(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListHasField",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListSetFieldValueIndexProvided(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListSetFieldValueIndexProvided(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListSetFieldValueIndexProvided",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListHasFieldIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListHasFieldIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListHasFieldIndexNotNumeric",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValueListElementConvertMapToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValueListElementConvertMapToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValueListElementConvertMapToList",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetFieldValueListAsPartOfPath(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetFieldValueListAsPartOfPath(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetFieldValueListAsPartOfPath",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValuesConvertIntegerToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValuesConvertIntegerToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValuesConvertIntegerToList",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testRemoveEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testRemoveEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testRemoveEmptyPathAfterStrippingOutPrefix",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetFieldValueOnExistingField(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetFieldValueOnExistingField(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetFieldValueOnExistingField",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValueToNull(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValueToNull(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValueToNull",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListRemoveField(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListRemoveField(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListRemoveField",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testRemoveNullField(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testRemoveNullField(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testRemoveNullField",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListGetFieldValueNull(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListGetFieldValueNull(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListGetFieldValueNull",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSimpleSetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSimpleSetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSimpleSetFieldValue",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValuesConvertStringToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValuesConvertStringToList(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValuesConvertStringToList",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListHasFieldNull(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListHasFieldNull(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListHasFieldNull",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testListRemoveFieldIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testListRemoveFieldIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testListRemoveFieldIndexOutOfBounds",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testSetFieldValueEmptyName(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testSetFieldValueEmptyName(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testSetFieldValueEmptyName",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testGetEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testGetEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testGetEmptyPathAfterStrippingOutPrefix",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    },
    {
     "id": "ID#testAppendFieldValueToNullListElement(org.elasticsearch.ingest.IngestDocumentTests)",
     "displayName": "testAppendFieldValueToNullListElement(org.elasticsearch.ingest.IngestDocumentTests)",
     "methodName": "testAppendFieldValueToNullListElement",
     "className": "org.elasticsearch.ingest.IngestDocumentTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935924227
 }
]

[
 "TEST_STARTED",
 "ID#testHasFieldSourceObject(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasFieldSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924483,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testHasFieldNullValue(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasFieldNullValue(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924486,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testListSetFieldValueNoIndexProvided(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListSetFieldValueNoIndexProvided(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924495,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testSetFieldValueOnExistingParentTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetFieldValueOnExistingParentTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924510,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testListAppendFieldValues(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListAppendFieldValues(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924513,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSetFieldValueNullName(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetFieldValueNullName(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924516,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHasFieldEmpty(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasFieldEmpty(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924518,
  "executionTime": 41
 }
]

[
 "TEST_STARTED",
 "ID#testSetFieldValueOnExistingParent(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetFieldValueOnExistingParent(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924560,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValueToNonExistingList(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValueToNonExistingList(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924562,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSetSourceObject(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924564,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNestedSetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedSetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924567,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHasFieldNestedNotFound(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasFieldNestedNotFound(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924569,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValueConvertStringToList(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValueConvertStringToList(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924574,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValuesToNonExistingList(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValuesToNonExistingList(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924577,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleGetFieldValueTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleGetFieldValueTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924581,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveField(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveField(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924584,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testNestedRemoveFieldTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedRemoveFieldTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924589,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testHasFieldNotFound(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasFieldNotFound(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924593,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHasFieldNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasFieldNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924595,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGetFieldValueNotFound(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetFieldValueNotFound(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924597,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValueToListElement(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValueToListElement(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924600,
  "executionTime": 46
 }
]

[
 "TEST_STARTED",
 "ID#testHasFieldNull(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasFieldNull(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924646,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSetInvalidSourceField(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetInvalidSourceField(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924649,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testHasField(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasField(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924652,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValuesConvertStringListElementToList(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValuesConvertStringListElementToList(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924654,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924657,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveEmptyField(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveEmptyField(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924659,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListGetFieldValueIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListGetFieldValueIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924661,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGetIngestObject(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924663,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGetFieldValueNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetFieldValueNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924666,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveSourceObject(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924668,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveIngestObject(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924670,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSetEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924673,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testListSetFieldValueIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListSetFieldValueIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924676,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNestedHasFieldTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedHasFieldTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924678,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSetFieldValueNullValue(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetFieldValueNullValue(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924681,
  "executionTime": 31
 }
]

[
 "TEST_STARTED",
 "ID#testCopyConstructor(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyConstructor(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924713,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValuesToListElement(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValuesToListElement(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924716,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHasFieldIngestObject(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasFieldIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924719,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHasFieldEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasFieldEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924721,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveNonExistingField(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveNonExistingField(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924723,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListSetFieldValueIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListSetFieldValueIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924725,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveInnerField(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveInnerField(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924727,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924729,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListHasFieldIndexOutOfBounds_fail(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListHasFieldIndexOutOfBounds_fail(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924732,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveExistingParentTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveExistingParentTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924740,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListAppendFieldValue(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListAppendFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924742,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSetIngestObject(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetIngestObject(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924744,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNestedGetFieldValueTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedGetFieldValueTypeMismatch(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924747,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testGetFieldValueNullValue(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetFieldValueNullValue(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924749,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testListRemoveFieldIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListRemoveFieldIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924752,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSetFieldValueOnExistingNullParent(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetFieldValueOnExistingNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924754,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValueConvertStringListElementToList(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValueConvertStringListElementToList(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924756,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListHasFieldIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListHasFieldIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924759,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveFieldValueNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveFieldValueNotFoundNullParent(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924761,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNestedGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedGetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924763,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValueToListOfMaps(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValueToListOfMaps(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924765,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHasFieldNested(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasFieldNested(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924767,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListGetFieldValueIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListGetFieldValueIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924770,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSetIngestSourceObject(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetIngestSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924772,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValueConvertIntegerToList(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValueConvertIntegerToList(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924774,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIngestMetadataTimestamp(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIngestMetadataTimestamp(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924776,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testGetSourceObject(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetSourceObject(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924780,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGetFieldValueNull(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetFieldValueNull(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924783,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924788,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValueConvertMapToList(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValueConvertMapToList(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924791,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGetFieldValueEmpty(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetFieldValueEmpty(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924793,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testListHasField(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListHasField(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924796,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListSetFieldValueIndexProvided(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListSetFieldValueIndexProvided(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924798,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListHasFieldIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListHasFieldIndexNotNumeric(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924800,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValueListElementConvertMapToList(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValueListElementConvertMapToList(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924803,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSetFieldValueListAsPartOfPath(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetFieldValueListAsPartOfPath(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924805,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValuesConvertIntegerToList(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValuesConvertIntegerToList(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924807,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924809,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSetFieldValueOnExistingField(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetFieldValueOnExistingField(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924812,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValueToNull(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValueToNull(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924814,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListRemoveField(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListRemoveField(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924816,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveNullField(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveNullField(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924818,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListGetFieldValueNull(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListGetFieldValueNull(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924820,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleSetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleSetFieldValue(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924836,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValuesConvertStringToList(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValuesConvertStringToList(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924839,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testListHasFieldNull(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListHasFieldNull(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924850,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListRemoveFieldIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListRemoveFieldIndexOutOfBounds(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924852,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSetFieldValueEmptyName(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetFieldValueEmptyName(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924855,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGetEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetEmptyPathAfterStrippingOutPrefix(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924857,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testAppendFieldValueToNullListElement(org.elasticsearch.ingest.IngestDocumentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendFieldValueToNullListElement(org.elasticsearch.ingest.IngestDocumentTests)",
  "startTimestamp": 1473935924860,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.ingest.IngestDocumentTests",
  "startTimestamp": 1473935924227,
  "executionTime": 636
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.ingest.IngestStatsTests",
   "displayName": "org.elasticsearch.ingest.IngestStatsTests",
   "methodName": null,
   "className": "org.elasticsearch.ingest.IngestStatsTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.ingest.IngestStatsTests)",
     "displayName": "testSerialization(org.elasticsearch.ingest.IngestStatsTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.ingest.IngestStatsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935924888
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.ingest.IngestStatsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.ingest.IngestStatsTests)",
  "startTimestamp": 1473935924908,
  "executionTime": 24
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.ingest.IngestStatsTests",
  "startTimestamp": 1473935924888,
  "executionTime": 47
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.FailedNodeRoutingTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.FailedNodeRoutingTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.FailedNodeRoutingTests",
   "children": [
    {
     "id": "ID#testSimpleFailedNodeTest(org.elasticsearch.cluster.routing.allocation.FailedNodeRoutingTests)",
     "displayName": "testSimpleFailedNodeTest(org.elasticsearch.cluster.routing.allocation.FailedNodeRoutingTests)",
     "methodName": "testSimpleFailedNodeTest",
     "className": "org.elasticsearch.cluster.routing.allocation.FailedNodeRoutingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935924969
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFailedNodeTest(org.elasticsearch.cluster.routing.allocation.FailedNodeRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:45,006][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start 4 nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:45,008][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:45,009][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:45,009][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0], [test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:45,010][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] remove 2 nodes where primaries are allocated, reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:45,010][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFailedNodeTest(org.elasticsearch.cluster.routing.allocation.FailedNodeRoutingTests)",
  "startTimestamp": 1473935924998,
  "executionTime": 13
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.FailedNodeRoutingTests",
  "startTimestamp": 1473935924969,
  "executionTime": 44
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.io.StreamsTests",
   "displayName": "org.elasticsearch.common.io.StreamsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.io.StreamsTests",
   "children": [
    {
     "id": "ID#testBytesStreamInput(org.elasticsearch.common.io.StreamsTests)",
     "displayName": "testBytesStreamInput(org.elasticsearch.common.io.StreamsTests)",
     "methodName": "testBytesStreamInput",
     "className": "org.elasticsearch.common.io.StreamsTests",
     "children": []
    },
    {
     "id": "ID#testCopyToString(org.elasticsearch.common.io.StreamsTests)",
     "displayName": "testCopyToString(org.elasticsearch.common.io.StreamsTests)",
     "methodName": "testCopyToString",
     "className": "org.elasticsearch.common.io.StreamsTests",
     "children": []
    },
    {
     "id": "ID#testCopyFromByteArray(org.elasticsearch.common.io.StreamsTests)",
     "displayName": "testCopyFromByteArray(org.elasticsearch.common.io.StreamsTests)",
     "methodName": "testCopyFromByteArray",
     "className": "org.elasticsearch.common.io.StreamsTests",
     "children": []
    },
    {
     "id": "ID#testCopyFromString(org.elasticsearch.common.io.StreamsTests)",
     "displayName": "testCopyFromString(org.elasticsearch.common.io.StreamsTests)",
     "methodName": "testCopyFromString",
     "className": "org.elasticsearch.common.io.StreamsTests",
     "children": []
    },
    {
     "id": "ID#testCopyFromInputStream(org.elasticsearch.common.io.StreamsTests)",
     "displayName": "testCopyFromInputStream(org.elasticsearch.common.io.StreamsTests)",
     "methodName": "testCopyFromInputStream",
     "className": "org.elasticsearch.common.io.StreamsTests",
     "children": []
    },
    {
     "id": "ID#testCopyFromReader(org.elasticsearch.common.io.StreamsTests)",
     "displayName": "testCopyFromReader(org.elasticsearch.common.io.StreamsTests)",
     "methodName": "testCopyFromReader",
     "className": "org.elasticsearch.common.io.StreamsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935925045
 }
]

[
 "TEST_STARTED",
 "ID#testBytesStreamInput(org.elasticsearch.common.io.StreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBytesStreamInput(org.elasticsearch.common.io.StreamsTests)",
  "startTimestamp": 1473935925063,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testCopyToString(org.elasticsearch.common.io.StreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyToString(org.elasticsearch.common.io.StreamsTests)",
  "startTimestamp": 1473935925065,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCopyFromByteArray(org.elasticsearch.common.io.StreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyFromByteArray(org.elasticsearch.common.io.StreamsTests)",
  "startTimestamp": 1473935925067,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCopyFromString(org.elasticsearch.common.io.StreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyFromString(org.elasticsearch.common.io.StreamsTests)",
  "startTimestamp": 1473935925069,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCopyFromInputStream(org.elasticsearch.common.io.StreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyFromInputStream(org.elasticsearch.common.io.StreamsTests)",
  "startTimestamp": 1473935925071,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCopyFromReader(org.elasticsearch.common.io.StreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyFromReader(org.elasticsearch.common.io.StreamsTests)",
  "startTimestamp": 1473935925073,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.io.StreamsTests",
  "startTimestamp": 1473935925045,
  "executionTime": 32
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.DisMaxQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
   "children": [
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryInnerPrefixQuery(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testToQueryInnerPrefixQuery(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testToQueryInnerPrefixQuery",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInnerQueryEmptyException(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testInnerQueryEmptyException(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testInnerQueryEmptyException",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935925109
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:45,133][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{uM6lWouBQxqrK3XCXzS4oA}{local}{local[254]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:45,141][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:45,141][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:45,156][WARN ][org.elasticsearch.deprecation.index.mapper]  [fyXNooYF] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:45,156][WARN ][org.elasticsearch.deprecation.index.mapper]  [fyXNooYF] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:45,156][WARN ][org.elasticsearch.deprecation.index.mapper]  [fyXNooYF] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:45,158][WARN ][org.elasticsearch.deprecation.index.mapper]  [fyXNooYF] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:45,158][WARN ][org.elasticsearch.deprecation.index.mapper]  [fyXNooYF] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:45,158][WARN ][org.elasticsearch.deprecation.index.mapper]  [fyXNooYF] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:45,160][WARN ][org.elasticsearch.deprecation.index.mapper]  [fyXNooYF] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:45,160][WARN ][org.elasticsearch.deprecation.index.mapper]  [fyXNooYF] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:45,160][WARN ][org.elasticsearch.deprecation.index.mapper]  [fyXNooYF] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:45,162][WARN ][org.elasticsearch.deprecation.index.mapper]  [fyXNooYF] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:45,162][WARN ][org.elasticsearch.deprecation.index.mapper]  [fyXNooYF] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:45,162][WARN ][org.elasticsearch.deprecation.index.mapper]  [fyXNooYF] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:45,164][WARN ][org.elasticsearch.deprecation.index.mapper]  [fyXNooYF] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:45,164][WARN ][org.elasticsearch.deprecation.index.mapper]  [fyXNooYF] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:45,164][WARN ][org.elasticsearch.deprecation.index.mapper]  [fyXNooYF] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:45,168][WARN ][org.elasticsearch.deprecation.index.mapper]  [fyXNooYF] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:45,168][WARN ][org.elasticsearch.deprecation.index.mapper]  [fyXNooYF] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:45,168][WARN ][org.elasticsearch.deprecation.index.mapper]  [fyXNooYF] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:45,169][WARN ][org.elasticsearch.deprecation.index.mapper]  [fyXNooYF] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:45,169][WARN ][org.elasticsearch.deprecation.index.mapper]  [fyXNooYF] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:45,169][WARN ][org.elasticsearch.deprecation.index.mapper]  [fyXNooYF] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:45,172][WARN ][org.elasticsearch.deprecation.index.mapper]  [fyXNooYF] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:45,172][WARN ][org.elasticsearch.deprecation.index.mapper]  [fyXNooYF] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:45,172][WARN ][org.elasticsearch.deprecation.index.mapper]  [fyXNooYF] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:45,176][WARN ][org.elasticsearch.deprecation.index.mapper]  [fyXNooYF] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:45,176][WARN ][org.elasticsearch.deprecation.index.mapper]  [fyXNooYF] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:45,176][WARN ][org.elasticsearch.deprecation.index.mapper]  [fyXNooYF] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1473935925128,
  "executionTime": 110
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1473935925238,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1473935925242,
  "executionTime": 117
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1473935925359,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1473935925369,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryInnerPrefixQuery(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryInnerPrefixQuery(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1473935925373,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1473935925375,
  "executionTime": 31
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1473935925406,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testInnerQueryEmptyException(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:38:45,412][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:78]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInnerQueryEmptyException(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1473935925409,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1473935925412,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1473935925415,
  "executionTime": 86
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1473935925501,
  "executionTime": 17
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.DisMaxQueryBuilderTests",
  "startTimestamp": 1473935925109,
  "executionTime": 414
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.snapshots.blobstore.SlicedInputStreamTests",
   "displayName": "org.elasticsearch.index.snapshots.blobstore.SlicedInputStreamTests",
   "methodName": null,
   "className": "org.elasticsearch.index.snapshots.blobstore.SlicedInputStreamTests",
   "children": [
    {
     "id": "ID#testReadRandom(org.elasticsearch.index.snapshots.blobstore.SlicedInputStreamTests)",
     "displayName": "testReadRandom(org.elasticsearch.index.snapshots.blobstore.SlicedInputStreamTests)",
     "methodName": "testReadRandom",
     "className": "org.elasticsearch.index.snapshots.blobstore.SlicedInputStreamTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935925579
 }
]

[
 "TEST_STARTED",
 "ID#testReadRandom(org.elasticsearch.index.snapshots.blobstore.SlicedInputStreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadRandom(org.elasticsearch.index.snapshots.blobstore.SlicedInputStreamTests)",
  "startTimestamp": 1473935925626,
  "executionTime": 42
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.snapshots.blobstore.SlicedInputStreamTests",
  "startTimestamp": 1473935925579,
  "executionTime": 91
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.term.StringDistanceImplTests",
   "displayName": "org.elasticsearch.search.suggest.term.StringDistanceImplTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.term.StringDistanceImplTests",
   "children": [
    {
     "id": "ID#testWriteTo(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
     "displayName": "testWriteTo(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
     "methodName": "testWriteTo",
     "className": "org.elasticsearch.search.suggest.term.StringDistanceImplTests",
     "children": []
    },
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.search.suggest.term.StringDistanceImplTests",
     "children": []
    },
    {
     "id": "ID#testReadFrom(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
     "displayName": "testReadFrom(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.search.suggest.term.StringDistanceImplTests",
     "children": []
    },
    {
     "id": "ID#testFromString(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
     "displayName": "testFromString(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
     "methodName": "testFromString",
     "className": "org.elasticsearch.search.suggest.term.StringDistanceImplTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935925698
 }
]

[
 "TEST_STARTED",
 "ID#testWriteTo(org.elasticsearch.search.suggest.term.StringDistanceImplTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteTo(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
  "startTimestamp": 1473935925762,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.search.suggest.term.StringDistanceImplTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
  "startTimestamp": 1473935925776,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.search.suggest.term.StringDistanceImplTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
  "startTimestamp": 1473935925778,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromString(org.elasticsearch.search.suggest.term.StringDistanceImplTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromString(org.elasticsearch.search.suggest.term.StringDistanceImplTests)",
  "startTimestamp": 1473935925780,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.term.StringDistanceImplTests",
  "startTimestamp": 1473935925698,
  "executionTime": 95
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.PathMatchDynamicTemplateTests",
   "displayName": "org.elasticsearch.index.mapper.PathMatchDynamicTemplateTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.PathMatchDynamicTemplateTests",
   "children": [
    {
     "id": "ID#testSimple(org.elasticsearch.index.mapper.PathMatchDynamicTemplateTests)",
     "displayName": "testSimple(org.elasticsearch.index.mapper.PathMatchDynamicTemplateTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.index.mapper.PathMatchDynamicTemplateTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935925895
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.index.mapper.PathMatchDynamicTemplateTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:46,061][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:46,114][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:46,114][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:46,119][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[15428], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:46,121][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:46,122][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:46,306][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:46,307][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:46,307][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[61]}, bound_addresses {local[61]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:46,343][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{fQaJ60ZDTBKRdhKT6IOYWQ}{Nuy8n3CCS1iMErR_eEkGtA}{local}{local[61]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:46,344][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:46,487][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:46,528][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:46,657][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:46,774][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/gsdmPASnS7i3JrHUnHDf3Q] create_mapping [person]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:46,804][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/gsdmPASnS7i3JrHUnHDf3Q] update_mapping [person]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:46,818][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [PathMatchDynamicTemplateTests#testSimple]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.index.mapper.PathMatchDynamicTemplateTests)",
  "startTimestamp": 1473935926039,
  "executionTime": 817
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:46,857][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:46,859][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:46,859][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:38:46,861][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.PathMatchDynamicTemplateTests",
  "startTimestamp": 1473935925895,
  "executionTime": 980
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests",
   "displayName": "org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests",
   "children": [
    {
     "id": "ID#testUpdateSetting(org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests)",
     "displayName": "testUpdateSetting(org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests)",
     "methodName": "testUpdateSetting",
     "className": "org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests",
     "children": []
    },
    {
     "id": "ID#testClusterBlock(org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests)",
     "displayName": "testClusterBlock(org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests)",
     "methodName": "testClusterBlock",
     "className": "org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests",
     "children": []
    },
    {
     "id": "ID#testAllOrNothing(org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests)",
     "displayName": "testAllOrNothing(org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests)",
     "methodName": "testAllOrNothing",
     "className": "org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935926903
 }
]

[
 "TEST_STARTED",
 "ID#testUpdateSetting(org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdateSetting(org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests)",
  "startTimestamp": 1473935926942,
  "executionTime": 50
 }
]

[
 "TEST_STARTED",
 "ID#testClusterBlock(org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterBlock(org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests)",
  "startTimestamp": 1473935926992,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testAllOrNothing(org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllOrNothing(org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests)",
  "startTimestamp": 1473935926997,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.cluster.settings.SettingsUpdaterTests",
  "startTimestamp": 1473935926903,
  "executionTime": 103
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.plugins.ProgressInputStreamTests",
   "displayName": "org.elasticsearch.plugins.ProgressInputStreamTests",
   "methodName": null,
   "className": "org.elasticsearch.plugins.ProgressInputStreamTests",
   "children": [
    {
     "id": "ID#testThatProgressListenerIsCalledOnUnexpectedCompletion(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "displayName": "testThatProgressListenerIsCalledOnUnexpectedCompletion(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "methodName": "testThatProgressListenerIsCalledOnUnexpectedCompletion",
     "className": "org.elasticsearch.plugins.ProgressInputStreamTests",
     "children": []
    },
    {
     "id": "ID#testEvenBytes(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "displayName": "testEvenBytes(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "methodName": "testEvenBytes",
     "className": "org.elasticsearch.plugins.ProgressInputStreamTests",
     "children": []
    },
    {
     "id": "ID#testThatProgressListenerIsCalled(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "displayName": "testThatProgressListenerIsCalled(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "methodName": "testThatProgressListenerIsCalled",
     "className": "org.elasticsearch.plugins.ProgressInputStreamTests",
     "children": []
    },
    {
     "id": "ID#testThatProgressListenerReturnsMaxValueOnWrongExpectedSize(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "displayName": "testThatProgressListenerReturnsMaxValueOnWrongExpectedSize(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "methodName": "testThatProgressListenerReturnsMaxValueOnWrongExpectedSize",
     "className": "org.elasticsearch.plugins.ProgressInputStreamTests",
     "children": []
    },
    {
     "id": "ID#testOneByte(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "displayName": "testOneByte(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "methodName": "testOneByte",
     "className": "org.elasticsearch.plugins.ProgressInputStreamTests",
     "children": []
    },
    {
     "id": "ID#testOddBytes(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "displayName": "testOddBytes(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "methodName": "testOddBytes",
     "className": "org.elasticsearch.plugins.ProgressInputStreamTests",
     "children": []
    },
    {
     "id": "ID#testOnProgressCannotBeCalledMoreThanOncePerPercent(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "displayName": "testOnProgressCannotBeCalledMoreThanOncePerPercent(org.elasticsearch.plugins.ProgressInputStreamTests)",
     "methodName": "testOnProgressCannotBeCalledMoreThanOncePerPercent",
     "className": "org.elasticsearch.plugins.ProgressInputStreamTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935927113
 }
]

[
 "TEST_STARTED",
 "ID#testThatProgressListenerIsCalledOnUnexpectedCompletion(org.elasticsearch.plugins.ProgressInputStreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatProgressListenerIsCalledOnUnexpectedCompletion(org.elasticsearch.plugins.ProgressInputStreamTests)",
  "startTimestamp": 1473935927131,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEvenBytes(org.elasticsearch.plugins.ProgressInputStreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEvenBytes(org.elasticsearch.plugins.ProgressInputStreamTests)",
  "startTimestamp": 1473935927134,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testThatProgressListenerIsCalled(org.elasticsearch.plugins.ProgressInputStreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatProgressListenerIsCalled(org.elasticsearch.plugins.ProgressInputStreamTests)",
  "startTimestamp": 1473935927138,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatProgressListenerReturnsMaxValueOnWrongExpectedSize(org.elasticsearch.plugins.ProgressInputStreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatProgressListenerReturnsMaxValueOnWrongExpectedSize(org.elasticsearch.plugins.ProgressInputStreamTests)",
  "startTimestamp": 1473935927140,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testOneByte(org.elasticsearch.plugins.ProgressInputStreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOneByte(org.elasticsearch.plugins.ProgressInputStreamTests)",
  "startTimestamp": 1473935927142,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testOddBytes(org.elasticsearch.plugins.ProgressInputStreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOddBytes(org.elasticsearch.plugins.ProgressInputStreamTests)",
  "startTimestamp": 1473935927143,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testOnProgressCannotBeCalledMoreThanOncePerPercent(org.elasticsearch.plugins.ProgressInputStreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOnProgressCannotBeCalledMoreThanOncePerPercent(org.elasticsearch.plugins.ProgressInputStreamTests)",
  "startTimestamp": 1473935927145,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.plugins.ProgressInputStreamTests",
  "startTimestamp": 1473935927113,
  "executionTime": 36
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests",
   "displayName": "org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests",
   "children": [
    {
     "id": "ID#testTwoPhaseMinScore(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)",
     "displayName": "testTwoPhaseMinScore(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)",
     "methodName": "testTwoPhaseMinScore",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests",
     "children": []
    },
    {
     "id": "ID#testMinScoreAllIncluded(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)",
     "displayName": "testMinScoreAllIncluded(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)",
     "methodName": "testMinScoreAllIncluded",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests",
     "children": []
    },
    {
     "id": "ID#testMinScoreAllExcluded(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)",
     "displayName": "testMinScoreAllExcluded(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)",
     "methodName": "testMinScoreAllExcluded",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935927223
 }
]

[
 "TEST_STARTED",
 "ID#testTwoPhaseMinScore(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTwoPhaseMinScore(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)",
  "startTimestamp": 1473935927477,
  "executionTime": 1332
 }
]

[
 "TEST_STARTED",
 "ID#testMinScoreAllIncluded(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinScoreAllIncluded(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)",
  "startTimestamp": 1473935928809,
  "executionTime": 230
 }
]

[
 "TEST_STARTED",
 "ID#testMinScoreAllExcluded(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinScoreAllExcluded(org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests)",
  "startTimestamp": 1473935929040,
  "executionTime": 123
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.functionscore.FunctionScoreEquivalenceTests",
  "startTimestamp": 1473935927223,
  "executionTime": 2117
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.ConcurrentRebalanceRoutingTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.ConcurrentRebalanceRoutingTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.ConcurrentRebalanceRoutingTests",
   "children": [
    {
     "id": "ID#testClusterConcurrentRebalance(org.elasticsearch.cluster.routing.allocation.ConcurrentRebalanceRoutingTests)",
     "displayName": "testClusterConcurrentRebalance(org.elasticsearch.cluster.routing.allocation.ConcurrentRebalanceRoutingTests)",
     "methodName": "testClusterConcurrentRebalance",
     "className": "org.elasticsearch.cluster.routing.allocation.ConcurrentRebalanceRoutingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935929379
 }
]

[
 "TEST_STARTED",
 "ID#testClusterConcurrentRebalance(org.elasticsearch.cluster.routing.allocation.ConcurrentRebalanceRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:49,443][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:49,445][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start two nodes and fully start the shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:49,445][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:49,446][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start 8 more nodes, and check that no rebalancing/relocation have happened%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:49,447][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards, rebalancing should start, but, only 3 should be rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:49,452][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][1], [test][3], [test][4], [test][2], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:49,453][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] finalize this session relocation, 3 more should relocate now%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:49,462][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] finalize this session relocation, 2 more should relocate now%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:38:49,463][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] finalize this session relocation, no more relocation%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterConcurrentRebalance(org.elasticsearch.cluster.routing.allocation.ConcurrentRebalanceRoutingTests)",
  "startTimestamp": 1473935929435,
  "executionTime": 29
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.ConcurrentRebalanceRoutingTests",
  "startTimestamp": 1473935929379,
  "executionTime": 88
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.LegacyByteFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.LegacyByteFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.LegacyByteFieldTypeTests",
   "children": [
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.LegacyByteFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "displayName": "testValueForSearch(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "methodName": "testValueForSearch",
     "className": "org.elasticsearch.index.mapper.LegacyByteFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.LegacyByteFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.LegacyByteFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.LegacyByteFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.LegacyByteFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935929542
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
  "startTimestamp": 1473935929662,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
  "startTimestamp": 1473935929664,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
  "startTimestamp": 1473935929667,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
  "startTimestamp": 1473935929669,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
  "startTimestamp": 1473935929671,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.LegacyByteFieldTypeTests)",
  "startTimestamp": 1473935929674,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.LegacyByteFieldTypeTests",
  "startTimestamp": 1473935929542,
  "executionTime": 137
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.SearchSlowLogTests",
   "displayName": "org.elasticsearch.index.SearchSlowLogTests",
   "methodName": null,
   "className": "org.elasticsearch.index.SearchSlowLogTests",
   "children": [
    {
     "id": "ID#testLevelSetting(org.elasticsearch.index.SearchSlowLogTests)",
     "displayName": "testLevelSetting(org.elasticsearch.index.SearchSlowLogTests)",
     "methodName": "testLevelSetting",
     "className": "org.elasticsearch.index.SearchSlowLogTests",
     "children": []
    },
    {
     "id": "ID#testSlowLogSearchContextPrinterToLog(org.elasticsearch.index.SearchSlowLogTests)",
     "displayName": "testSlowLogSearchContextPrinterToLog(org.elasticsearch.index.SearchSlowLogTests)",
     "methodName": "testSlowLogSearchContextPrinterToLog",
     "className": "org.elasticsearch.index.SearchSlowLogTests",
     "children": []
    },
    {
     "id": "ID#testSetFetchLevels(org.elasticsearch.index.SearchSlowLogTests)",
     "displayName": "testSetFetchLevels(org.elasticsearch.index.SearchSlowLogTests)",
     "methodName": "testSetFetchLevels",
     "className": "org.elasticsearch.index.SearchSlowLogTests",
     "children": []
    },
    {
     "id": "ID#testSetQueryLevels(org.elasticsearch.index.SearchSlowLogTests)",
     "displayName": "testSetQueryLevels(org.elasticsearch.index.SearchSlowLogTests)",
     "methodName": "testSetQueryLevels",
     "className": "org.elasticsearch.index.SearchSlowLogTests",
     "children": []
    },
    {
     "id": "ID#testReformatSetting(org.elasticsearch.index.SearchSlowLogTests)",
     "displayName": "testReformatSetting(org.elasticsearch.index.SearchSlowLogTests)",
     "methodName": "testReformatSetting",
     "className": "org.elasticsearch.index.SearchSlowLogTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935929733
 }
]

[
 "TEST_STARTED",
 "ID#testLevelSetting(org.elasticsearch.index.SearchSlowLogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:49,822][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:49,862][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:49,862][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:49,867][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[15428], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:49,870][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:49,870][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:50,117][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:50,117][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:50,118][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[62]}, bound_addresses {local[62]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:50,126][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{HR0y8TE6Que9_HxaJv5FLg}{JlckmQ0HRSWHHm_v9P22jA}{local}{local[62]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:50,126][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:50,143][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:50,163][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.level] from [DEBUG] to [INFO]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:50,164][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.level] from [INFO] to [TRACE]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:50,191][INFO ][org.elasticsearch.index  ]  [index] [SearchSlowLogTests#testLevelSetting]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLevelSetting(org.elasticsearch.index.SearchSlowLogTests)",
  "startTimestamp": 1473935929813,
  "executionTime": 379
 }
]

[
 "TEST_STARTED",
 "ID#testSlowLogSearchContextPrinterToLog(org.elasticsearch.index.SearchSlowLogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:50,200][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [foo] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:50,377][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[foo][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:50,445][INFO ][org.elasticsearch.index  ] [node_s_0] [SearchSlowLogTests#testSlowLogSearchContextPrinterToLog]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSlowLogSearchContextPrinterToLog(org.elasticsearch.index.SearchSlowLogTests)",
  "startTimestamp": 1473935930193,
  "executionTime": 285
 }
]

[
 "TEST_STARTED",
 "ID#testSetFetchLevels(org.elasticsearch.index.SearchSlowLogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:50,484][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.fetch.warn] from [400ms] to [420ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:50,485][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.fetch.info] from [300ms] to [320ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:50,485][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.fetch.debug] from [200ms] to [220ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:50,485][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.fetch.trace] from [100ms] to [120ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:50,485][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.fetch.warn] from [420ms] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:50,485][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.fetch.info] from [320ms] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:50,485][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.fetch.debug] from [220ms] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:50,485][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.fetch.trace] from [120ms] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:50,497][INFO ][org.elasticsearch.index  ]  [index] [SearchSlowLogTests#testSetFetchLevels]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetFetchLevels(org.elasticsearch.index.SearchSlowLogTests)",
  "startTimestamp": 1473935930478,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testSetQueryLevels(org.elasticsearch.index.SearchSlowLogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:50,503][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.query.warn] from [400ms] to [420ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:50,503][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.query.info] from [300ms] to [320ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:50,503][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.query.debug] from [200ms] to [220ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:50,503][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.query.trace] from [100ms] to [120ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:50,503][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.query.warn] from [420ms] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:50,503][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.query.info] from [320ms] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:50,503][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.query.debug] from [220ms] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:50,503][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.threshold.query.trace] from [120ms] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:50,521][INFO ][org.elasticsearch.index  ]  [index] [SearchSlowLogTests#testSetQueryLevels]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetQueryLevels(org.elasticsearch.index.SearchSlowLogTests)",
  "startTimestamp": 1473935930498,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testReformatSetting(org.elasticsearch.index.SearchSlowLogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:50,526][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.reformat] from [false] to [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:50,526][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.reformat] from [true] to [false]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:50,526][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.search.slowlog.reformat] from [false] to [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:50,530][INFO ][org.elasticsearch.index  ]  [index] [SearchSlowLogTests#testReformatSetting]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReformatSetting(org.elasticsearch.index.SearchSlowLogTests)",
  "startTimestamp": 1473935930522,
  "executionTime": 9
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:50,531][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:50,532][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:50,532][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:38:50,534][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.SearchSlowLogTests",
  "startTimestamp": 1473935929733,
  "executionTime": 811
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.PriorityTests",
   "displayName": "org.elasticsearch.common.PriorityTests",
   "methodName": null,
   "className": "org.elasticsearch.common.PriorityTests",
   "children": [
    {
     "id": "ID#testValueOf(org.elasticsearch.common.PriorityTests)",
     "displayName": "testValueOf(org.elasticsearch.common.PriorityTests)",
     "methodName": "testValueOf",
     "className": "org.elasticsearch.common.PriorityTests",
     "children": []
    },
    {
     "id": "ID#testToString(org.elasticsearch.common.PriorityTests)",
     "displayName": "testToString(org.elasticsearch.common.PriorityTests)",
     "methodName": "testToString",
     "className": "org.elasticsearch.common.PriorityTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.common.PriorityTests)",
     "displayName": "testSerialization(org.elasticsearch.common.PriorityTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.common.PriorityTests",
     "children": []
    },
    {
     "id": "ID#testCompareTo(org.elasticsearch.common.PriorityTests)",
     "displayName": "testCompareTo(org.elasticsearch.common.PriorityTests)",
     "methodName": "testCompareTo",
     "className": "org.elasticsearch.common.PriorityTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935930610
 }
]

[
 "TEST_STARTED",
 "ID#testValueOf(org.elasticsearch.common.PriorityTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueOf(org.elasticsearch.common.PriorityTests)",
  "startTimestamp": 1473935930643,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToString(org.elasticsearch.common.PriorityTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToString(org.elasticsearch.common.PriorityTests)",
  "startTimestamp": 1473935930646,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.common.PriorityTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.common.PriorityTests)",
  "startTimestamp": 1473935930648,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCompareTo(org.elasticsearch.common.PriorityTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompareTo(org.elasticsearch.common.PriorityTests)",
  "startTimestamp": 1473935930651,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.PriorityTests",
  "startTimestamp": 1473935930610,
  "executionTime": 55
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.compress.DeflateCompressTests",
   "displayName": "org.elasticsearch.common.compress.DeflateCompressTests",
   "methodName": null,
   "className": "org.elasticsearch.common.compress.DeflateCompressTests",
   "children": [
    {
     "id": "ID#testRepetitionsSThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
     "displayName": "testRepetitionsSThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
     "methodName": "testRepetitionsSThreads",
     "className": "org.elasticsearch.common.compress.DeflateCompressTests",
     "children": []
    },
    {
     "id": "ID#testRepetitionsIThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
     "displayName": "testRepetitionsIThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
     "methodName": "testRepetitionsIThreads",
     "className": "org.elasticsearch.common.compress.DeflateCompressTests",
     "children": []
    },
    {
     "id": "ID#testMixed(org.elasticsearch.common.compress.DeflateCompressTests)",
     "displayName": "testMixed(org.elasticsearch.common.compress.DeflateCompressTests)",
     "methodName": "testMixed",
     "className": "org.elasticsearch.common.compress.DeflateCompressTests",
     "children": []
    },
    {
     "id": "ID#testRepetitionsLThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
     "displayName": "testRepetitionsLThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
     "methodName": "testRepetitionsLThreads",
     "className": "org.elasticsearch.common.compress.DeflateCompressTests",
     "children": []
    },
    {
     "id": "ID#testRepetitionsS(org.elasticsearch.common.compress.DeflateCompressTests)",
     "displayName": "testRepetitionsS(org.elasticsearch.common.compress.DeflateCompressTests)",
     "methodName": "testRepetitionsS",
     "className": "org.elasticsearch.common.compress.DeflateCompressTests",
     "children": []
    },
    {
     "id": "ID#testRandom(org.elasticsearch.common.compress.DeflateCompressTests)",
     "displayName": "testRandom(org.elasticsearch.common.compress.DeflateCompressTests)",
     "methodName": "testRandom",
     "className": "org.elasticsearch.common.compress.DeflateCompressTests",
     "children": []
    },
    {
     "id": "ID#testLineDocsThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
     "displayName": "testLineDocsThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
     "methodName": "testLineDocsThreads",
     "className": "org.elasticsearch.common.compress.DeflateCompressTests",
     "children": []
    },
    {
     "id": "ID#testRandomThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
     "displayName": "testRandomThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
     "methodName": "testRandomThreads",
     "className": "org.elasticsearch.common.compress.DeflateCompressTests",
     "children": []
    },
    {
     "id": "ID#testRepetitionsI(org.elasticsearch.common.compress.DeflateCompressTests)",
     "displayName": "testRepetitionsI(org.elasticsearch.common.compress.DeflateCompressTests)",
     "methodName": "testRepetitionsI",
     "className": "org.elasticsearch.common.compress.DeflateCompressTests",
     "children": []
    },
    {
     "id": "ID#testRepetitionsL(org.elasticsearch.common.compress.DeflateCompressTests)",
     "displayName": "testRepetitionsL(org.elasticsearch.common.compress.DeflateCompressTests)",
     "methodName": "testRepetitionsL",
     "className": "org.elasticsearch.common.compress.DeflateCompressTests",
     "children": []
    },
    {
     "id": "ID#testLineDocs(org.elasticsearch.common.compress.DeflateCompressTests)",
     "displayName": "testLineDocs(org.elasticsearch.common.compress.DeflateCompressTests)",
     "methodName": "testLineDocs",
     "className": "org.elasticsearch.common.compress.DeflateCompressTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935930788
 }
]

[
 "TEST_STARTED",
 "ID#testRepetitionsSThreads(org.elasticsearch.common.compress.DeflateCompressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRepetitionsSThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
  "startTimestamp": 1473935931077,
  "executionTime": 856
 }
]

[
 "TEST_STARTED",
 "ID#testRepetitionsIThreads(org.elasticsearch.common.compress.DeflateCompressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRepetitionsIThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
  "startTimestamp": 1473935931933,
  "executionTime": 426
 }
]

[
 "TEST_STARTED",
 "ID#testMixed(org.elasticsearch.common.compress.DeflateCompressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMixed(org.elasticsearch.common.compress.DeflateCompressTests)",
  "startTimestamp": 1473935932359,
  "executionTime": 460
 }
]

[
 "TEST_STARTED",
 "ID#testRepetitionsLThreads(org.elasticsearch.common.compress.DeflateCompressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRepetitionsLThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
  "startTimestamp": 1473935932819,
  "executionTime": 532
 }
]

[
 "TEST_STARTED",
 "ID#testRepetitionsS(org.elasticsearch.common.compress.DeflateCompressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRepetitionsS(org.elasticsearch.common.compress.DeflateCompressTests)",
  "startTimestamp": 1473935933351,
  "executionTime": 174
 }
]

[
 "TEST_STARTED",
 "ID#testRandom(org.elasticsearch.common.compress.DeflateCompressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandom(org.elasticsearch.common.compress.DeflateCompressTests)",
  "startTimestamp": 1473935933525,
  "executionTime": 229
 }
]

[
 "TEST_STARTED",
 "ID#testLineDocsThreads(org.elasticsearch.common.compress.DeflateCompressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLineDocsThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
  "startTimestamp": 1473935933754,
  "executionTime": 2251
 }
]

[
 "TEST_STARTED",
 "ID#testRandomThreads(org.elasticsearch.common.compress.DeflateCompressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomThreads(org.elasticsearch.common.compress.DeflateCompressTests)",
  "startTimestamp": 1473935936005,
  "executionTime": 517
 }
]

[
 "TEST_STARTED",
 "ID#testRepetitionsI(org.elasticsearch.common.compress.DeflateCompressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRepetitionsI(org.elasticsearch.common.compress.DeflateCompressTests)",
  "startTimestamp": 1473935936522,
  "executionTime": 219
 }
]

[
 "TEST_STARTED",
 "ID#testRepetitionsL(org.elasticsearch.common.compress.DeflateCompressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRepetitionsL(org.elasticsearch.common.compress.DeflateCompressTests)",
  "startTimestamp": 1473935936741,
  "executionTime": 316
 }
]

[
 "TEST_STARTED",
 "ID#testLineDocs(org.elasticsearch.common.compress.DeflateCompressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLineDocs(org.elasticsearch.common.compress.DeflateCompressTests)",
  "startTimestamp": 1473935937057,
  "executionTime": 1283
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.compress.DeflateCompressTests",
  "startTimestamp": 1473935930788,
  "executionTime": 7553
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.DynamicMappingTests",
   "displayName": "org.elasticsearch.index.mapper.DynamicMappingTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
   "children": [
    {
     "id": "ID#testNumericDetectionDefault(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testNumericDetectionDefault(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testNumericDetectionDefault",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testField(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testField(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testField",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testArray(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testArray(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testArray",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testMixTemplateMultiFieldAndMappingReuse(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testMixTemplateMultiFieldAndMappingReuse(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testMixTemplateMultiFieldAndMappingReuse",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testReuseExistingMappings(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testReuseExistingMappings(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testReuseExistingMappings",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDynamicMappingOnEmptyString(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicMappingOnEmptyString(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicMappingOnEmptyString",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testTypeNotCreatedOnIndexFailure(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testTypeNotCreatedOnIndexFailure(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testTypeNotCreatedOnIndexFailure",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDynamicMappingsNotNeeded(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicMappingsNotNeeded(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicMappingsNotNeeded",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDefaultFloatingPointMappings(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDefaultFloatingPointMappings(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDefaultFloatingPointMappings",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testIncremental(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testIncremental(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testIncremental",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testComplexArray(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testComplexArray(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testComplexArray",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDynamicTrue(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicTrue(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicTrue",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDynamicFalse(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicFalse(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicFalse",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDynamicStrictWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicStrictWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicStrictWithInnerObjectButDynamicSetOnRoot",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testObject(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testObject(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testObject",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDynamicStrict(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicStrict(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicStrict",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testInnerDynamicMapping(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testInnerDynamicMapping(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testInnerDynamicMapping",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDynamicFalseWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicFalseWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicFalseWithInnerObjectButDynamicSetOnRoot",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testIntroduceTwoFields(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testIntroduceTwoFields(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testIntroduceTwoFields",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testNumericDetectionEnabled(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testNumericDetectionEnabled(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testNumericDetectionEnabled",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDynamicTemplateOrder(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicTemplateOrder(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicTemplateOrder",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935938388
 }
]

[
 "TEST_STARTED",
 "ID#testNumericDetectionDefault(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:58,459][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:58,491][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:58,491][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:58,495][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[15428], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:58,498][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:58,498][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:58,648][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:58,648][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:58,649][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[63]}, bound_addresses {local[63]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:58,650][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{UEe8wFLDS8eN0GrVhxSa4Q}{2lfKJmSTRiq6O6kiLK2vqA}{local}{local[63]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:58,650][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:58,662][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:58,679][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:58,755][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:58,771][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/tuF2fi4uRbKdgsbNtlTBeA] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:58,786][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/tuF2fi4uRbKdgsbNtlTBeA] update_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:58,796][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testNumericDetectionDefault]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNumericDetectionDefault(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1473935938445,
  "executionTime": 385
 }
]

[
 "TEST_STARTED",
 "ID#testField(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:58,838][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:58,900][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:58,912][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testField]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testField(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1473935938830,
  "executionTime": 112
 }
]

[
 "TEST_STARTED",
 "ID#testArray(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:58,948][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:59,016][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:59,031][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArray(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1473935938942,
  "executionTime": 130
 }
]

[
 "TEST_STARTED",
 "ID#testMixTemplateMultiFieldAndMappingReuse(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:59,080][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:59,171][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:59,195][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testMixTemplateMultiFieldAndMappingReuse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMixTemplateMultiFieldAndMappingReuse(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1473935939072,
  "executionTime": 164
 }
]

[
 "TEST_STARTED",
 "ID#testReuseExistingMappings(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:59,248][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:59,343][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:59,361][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testReuseExistingMappings]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReuseExistingMappings(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1473935939236,
  "executionTime": 174
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicMappingOnEmptyString(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:59,418][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:59,478][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:59,497][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/qtTmMEquSMCE_x1pVqfiAw] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:59,523][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testDynamicMappingOnEmptyString]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicMappingOnEmptyString(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1473935939410,
  "executionTime": 159
 }
]

[
 "TEST_STARTED",
 "ID#testTypeNotCreatedOnIndexFailure(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:59,577][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [_default_]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:59,625][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:59,642][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testTypeNotCreatedOnIndexFailure]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeNotCreatedOnIndexFailure(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1473935939569,
  "executionTime": 108
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicMappingsNotNeeded(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:59,684][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:59,749][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:59,762][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testDynamicMappingsNotNeeded]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicMappingsNotNeeded(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1473935939677,
  "executionTime": 116
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultFloatingPointMappings(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:59,801][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:59,870][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:59,892][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testDefaultFloatingPointMappings]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultFloatingPointMappings(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1473935939793,
  "executionTime": 137
 }
]

[
 "TEST_STARTED",
 "ID#testIncremental(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:38:59,938][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:39:00,161][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:39:00,192][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testIncremental]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncremental(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1473935939930,
  "executionTime": 354
 }
]

[
 "TEST_STARTED",
 "ID#testComplexArray(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:39:00,291][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:39:00,374][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:39:00,390][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testComplexArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testComplexArray(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1473935940284,
  "executionTime": 168
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicTrue(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:39:00,460][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:39:00,552][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:39:00,568][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testDynamicTrue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicTrue(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1473935940452,
  "executionTime": 147
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicFalse(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:39:00,606][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:39:00,792][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:39:00,806][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testDynamicFalse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicFalse(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1473935940599,
  "executionTime": 237
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicStrictWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:39:00,844][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:39:00,922][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:39:00,937][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testDynamicStrictWithInnerObjectButDynamicSetOnRoot]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicStrictWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1473935940837,
  "executionTime": 137
 }
]

[
 "TEST_STARTED",
 "ID#testObject(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:39:00,983][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:39:01,042][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:39:01,058][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testObject]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testObject(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1473935940975,
  "executionTime": 116
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicStrict(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:39:01,099][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:39:01,156][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:39:01,168][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testDynamicStrict]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicStrict(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1473935941092,
  "executionTime": 503
 }
]

[
 "TEST_STARTED",
 "ID#testInnerDynamicMapping(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:39:01,602][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:39:01,673][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:39:01,693][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testInnerDynamicMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInnerDynamicMapping(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1473935941595,
  "executionTime": 144
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicFalseWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:39:01,746][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:39:01,864][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:39:01,878][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testDynamicFalseWithInnerObjectButDynamicSetOnRoot]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicFalseWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1473935941739,
  "executionTime": 181
 }
]

[
 "TEST_STARTED",
 "ID#testIntroduceTwoFields(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:39:01,957][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:39:02,122][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:39:02,139][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testIntroduceTwoFields]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIntroduceTwoFields(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1473935941921,
  "executionTime": 269
 }
]

[
 "TEST_STARTED",
 "ID#testNumericDetectionEnabled(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:39:02,198][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:39:02,316][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:39:02,332][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/Qe_2LklDQO2ubjdQkzfgkw] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:39:02,348][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/Qe_2LklDQO2ubjdQkzfgkw] update_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:39:02,391][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testNumericDetectionEnabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNumericDetectionEnabled(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1473935942190,
  "executionTime": 241
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicTemplateOrder(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:39:02,441][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:39:02,519][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:39:02,540][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/yCvn--cfRxiumoGI203H6Q] update_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:39:02,565][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicMappingTests#testDynamicTemplateOrder]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicTemplateOrder(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1473935942431,
  "executionTime": 182
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:39:02,613][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:39:02,614][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:39:02,614][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:39:02,616][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.DynamicMappingTests",
  "startTimestamp": 1473935938388,
  "executionTime": 4247
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.blobstore.FsBlobStoreTests",
   "displayName": "org.elasticsearch.common.blobstore.FsBlobStoreTests",
   "methodName": null,
   "className": "org.elasticsearch.common.blobstore.FsBlobStoreTests",
   "children": [
    {
     "id": "ID#testContainerCreationAndDeletion(org.elasticsearch.common.blobstore.FsBlobStoreTests)",
     "displayName": "testContainerCreationAndDeletion(org.elasticsearch.common.blobstore.FsBlobStoreTests)",
     "methodName": "testContainerCreationAndDeletion",
     "className": "org.elasticsearch.common.blobstore.FsBlobStoreTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935942676
 }
]

[
 "TEST_STARTED",
 "ID#testContainerCreationAndDeletion(org.elasticsearch.common.blobstore.FsBlobStoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testContainerCreationAndDeletion(org.elasticsearch.common.blobstore.FsBlobStoreTests)",
  "startTimestamp": 1473935942697,
  "executionTime": 58
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.blobstore.FsBlobStoreTests",
  "startTimestamp": 1473935942676,
  "executionTime": 81
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
   "displayName": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
   "children": [
    {
     "id": "ID#testContainsDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testContainsDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testContainsDoubleWildcardFilterPath",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    },
    {
     "id": "ID#testEmptyFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testEmptyFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testEmptyFilterPath",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    },
    {
     "id": "ID#testStartsWithDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testStartsWithDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testStartsWithDoubleWildcardFilterPath",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    },
    {
     "id": "ID#testDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testDoubleWildcardFilterPath",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    },
    {
     "id": "ID#testWildcardInNameFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testWildcardInNameFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testWildcardInNameFilterPath",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    },
    {
     "id": "ID#testFilterPathWithSubFields(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testFilterPathWithSubFields(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testFilterPathWithSubFields",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    },
    {
     "id": "ID#testMultipleFilterPaths(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testMultipleFilterPaths(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testMultipleFilterPaths",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testSimpleFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testSimpleFilterPath",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    },
    {
     "id": "ID#testFilterPathWithSubField(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testFilterPathWithSubField(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testFilterPathWithSubField",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    },
    {
     "id": "ID#testFilterPathWithEscapedDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testFilterPathWithEscapedDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testFilterPathWithEscapedDots",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    },
    {
     "id": "ID#testNullFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testNullFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testNullFilterPath",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    },
    {
     "id": "ID#testSimpleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testSimpleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testSimpleWildcardFilterPath",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935942825
 }
]

[
 "TEST_STARTED",
 "ID#testContainsDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testContainsDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1473935942844,
  "executionTime": 67
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1473935942911,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testStartsWithDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStartsWithDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1473935942913,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1473935942916,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testWildcardInNameFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWildcardInNameFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1473935942917,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFilterPathWithSubFields(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterPathWithSubFields(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1473935942920,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleFilterPaths(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleFilterPaths(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1473935942921,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1473935942924,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFilterPathWithSubField(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterPathWithSubField(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1473935942925,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFilterPathWithEscapedDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterPathWithEscapedDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1473935942928,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testNullFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1473935942930,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1473935942932,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
  "startTimestamp": 1473935942825,
  "executionTime": 110
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.LegacyShortFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.LegacyShortFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.LegacyShortFieldTypeTests",
   "children": [
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.LegacyShortFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
     "displayName": "testValueForSearch(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
     "methodName": "testValueForSearch",
     "className": "org.elasticsearch.index.mapper.LegacyShortFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.LegacyShortFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.LegacyShortFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.LegacyShortFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.LegacyShortFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935943008
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
  "startTimestamp": 1473935943206,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
  "startTimestamp": 1473935943210,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
  "startTimestamp": 1473935943213,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
  "startTimestamp": 1473935943215,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
  "startTimestamp": 1473935943217,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.LegacyShortFieldTypeTests)",
  "startTimestamp": 1473935943219,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.LegacyShortFieldTypeTests",
  "startTimestamp": 1473935943008,
  "executionTime": 215
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.smile.JsonVsSmileTests",
   "displayName": "org.elasticsearch.common.xcontent.smile.JsonVsSmileTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.smile.JsonVsSmileTests",
   "children": [
    {
     "id": "ID#testCompareParsingTokens(org.elasticsearch.common.xcontent.smile.JsonVsSmileTests)",
     "displayName": "testCompareParsingTokens(org.elasticsearch.common.xcontent.smile.JsonVsSmileTests)",
     "methodName": "testCompareParsingTokens",
     "className": "org.elasticsearch.common.xcontent.smile.JsonVsSmileTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935943251
 }
]

[
 "TEST_STARTED",
 "ID#testCompareParsingTokens(org.elasticsearch.common.xcontent.smile.JsonVsSmileTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompareParsingTokens(org.elasticsearch.common.xcontent.smile.JsonVsSmileTests)",
  "startTimestamp": 1473935943341,
  "executionTime": 18
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.smile.JsonVsSmileTests",
  "startTimestamp": 1473935943251,
  "executionTime": 110
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.ingest.WritePipelineResponseTests",
   "displayName": "org.elasticsearch.action.ingest.WritePipelineResponseTests",
   "methodName": null,
   "className": "org.elasticsearch.action.ingest.WritePipelineResponseTests",
   "children": [
    {
     "id": "ID#testSerializationWithoutError(org.elasticsearch.action.ingest.WritePipelineResponseTests)",
     "displayName": "testSerializationWithoutError(org.elasticsearch.action.ingest.WritePipelineResponseTests)",
     "methodName": "testSerializationWithoutError",
     "className": "org.elasticsearch.action.ingest.WritePipelineResponseTests",
     "children": []
    },
    {
     "id": "ID#testSerializationWithError(org.elasticsearch.action.ingest.WritePipelineResponseTests)",
     "displayName": "testSerializationWithError(org.elasticsearch.action.ingest.WritePipelineResponseTests)",
     "methodName": "testSerializationWithError",
     "className": "org.elasticsearch.action.ingest.WritePipelineResponseTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935943382
 }
]

[
 "TEST_STARTED",
 "ID#testSerializationWithoutError(org.elasticsearch.action.ingest.WritePipelineResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerializationWithoutError(org.elasticsearch.action.ingest.WritePipelineResponseTests)",
  "startTimestamp": 1473935943402,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSerializationWithError(org.elasticsearch.action.ingest.WritePipelineResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerializationWithError(org.elasticsearch.action.ingest.WritePipelineResponseTests)",
  "startTimestamp": 1473935943404,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.ingest.WritePipelineResponseTests",
  "startTimestamp": 1473935943382,
  "executionTime": 26
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.apache.lucene.queries.MinDocQueryTests",
   "displayName": "org.apache.lucene.queries.MinDocQueryTests",
   "methodName": null,
   "className": "org.apache.lucene.queries.MinDocQueryTests",
   "children": [
    {
     "id": "ID#testRandom(org.apache.lucene.queries.MinDocQueryTests)",
     "displayName": "testRandom(org.apache.lucene.queries.MinDocQueryTests)",
     "methodName": "testRandom",
     "className": "org.apache.lucene.queries.MinDocQueryTests",
     "children": []
    },
    {
     "id": "ID#testBasics(org.apache.lucene.queries.MinDocQueryTests)",
     "displayName": "testBasics(org.apache.lucene.queries.MinDocQueryTests)",
     "methodName": "testBasics",
     "className": "org.apache.lucene.queries.MinDocQueryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935943456
 }
]

[
 "TEST_STARTED",
 "ID#testRandom(org.apache.lucene.queries.MinDocQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandom(org.apache.lucene.queries.MinDocQueryTests)",
  "startTimestamp": 1473935943474,
  "executionTime": 331
 }
]

[
 "TEST_STARTED",
 "ID#testBasics(org.apache.lucene.queries.MinDocQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasics(org.apache.lucene.queries.MinDocQueryTests)",
  "startTimestamp": 1473935943805,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.apache.lucene.queries.MinDocQueryTests",
  "startTimestamp": 1473935943456,
  "executionTime": 355
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.rest.RestFilterChainTests",
   "displayName": "org.elasticsearch.rest.RestFilterChainTests",
   "methodName": null,
   "className": "org.elasticsearch.rest.RestFilterChainTests",
   "children": [
    {
     "id": "ID#testTooManyContinueProcessing(org.elasticsearch.rest.RestFilterChainTests)",
     "displayName": "testTooManyContinueProcessing(org.elasticsearch.rest.RestFilterChainTests)",
     "methodName": "testTooManyContinueProcessing",
     "className": "org.elasticsearch.rest.RestFilterChainTests",
     "children": []
    },
    {
     "id": "ID#testRestFilters(org.elasticsearch.rest.RestFilterChainTests)",
     "displayName": "testRestFilters(org.elasticsearch.rest.RestFilterChainTests)",
     "methodName": "testRestFilters",
     "className": "org.elasticsearch.rest.RestFilterChainTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935943907
 }
]

[
 "TEST_STARTED",
 "ID#testTooManyContinueProcessing(org.elasticsearch.rest.RestFilterChainTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTooManyContinueProcessing(org.elasticsearch.rest.RestFilterChainTests)",
  "startTimestamp": 1473935943958,
  "executionTime": 134
 }
]

[
 "TEST_STARTED",
 "ID#testRestFilters(org.elasticsearch.rest.RestFilterChainTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestFilters(org.elasticsearch.rest.RestFilterChainTests)",
  "startTimestamp": 1473935944092,
  "executionTime": 72
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.rest.RestFilterChainTests",
  "startTimestamp": 1473935943907,
  "executionTime": 259
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935944223
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T00:39:04,437][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{UuzZbaPRQHyHFgXp1_NbmA}{local}{local[265]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)",
  "startTimestamp": 1473935944447,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T00:39:04,452][INFO ][org.elasticsearch.search.aggregations.pipeline.bucketmetrics] Content string: {%0A  \"jBPgTOGAZdjDTwVkN\" : {%0A    \"max_bucket\" : {%0A      \"buckets_path\" : [%0A        \"rAGF\"%0A      ],%0A      \"format\" : \"lEmRiqlkxK\",%0A      \"gap_policy\" : \"skip\"%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T00:39:04,453][INFO ][org.elasticsearch.search.aggregations.pipeline.bucketmetrics] Content string: {%0A  \"jBPgTOGAZdjDTwVkN\" : {%0A    \"max_bucket\" : {%0A      \"buckets_path\" : [%0A        \"rAGF\"%0A      ],%0A      \"format\" : \"lEmRiqlkxK\",%0A      \"gap_policy\" : \"skip\"%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)",
  "startTimestamp": 1473935944450,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests)",
  "startTimestamp": 1473935944454,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.bucketmetrics.MaxBucketTests",
  "startTimestamp": 1473935944223,
  "executionTime": 237
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.bootstrap.ESPolicyTests",
   "displayName": "org.elasticsearch.bootstrap.ESPolicyTests",
   "methodName": null,
   "className": "org.elasticsearch.bootstrap.ESPolicyTests",
   "children": [
    {
     "id": "ID#testRestrictPrivileges(org.elasticsearch.bootstrap.ESPolicyTests)",
     "displayName": "testRestrictPrivileges(org.elasticsearch.bootstrap.ESPolicyTests)",
     "methodName": "testRestrictPrivileges",
     "className": "org.elasticsearch.bootstrap.ESPolicyTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935944553
 }
]

[
 "TEST_STARTED",
 "ID#testRestrictPrivileges(org.elasticsearch.bootstrap.ESPolicyTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestrictPrivileges(org.elasticsearch.bootstrap.ESPolicyTests)",
  "startTimestamp": 1473935944632,
  "executionTime": 20
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.bootstrap.ESPolicyTests",
  "startTimestamp": 1473935944553,
  "executionTime": 104
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.engine.VersionValueTests",
   "displayName": "org.elasticsearch.index.engine.VersionValueTests",
   "methodName": null,
   "className": "org.elasticsearch.index.engine.VersionValueTests",
   "children": [
    {
     "id": "ID#testRamBytesUsed(org.elasticsearch.index.engine.VersionValueTests)",
     "displayName": "testRamBytesUsed(org.elasticsearch.index.engine.VersionValueTests)",
     "methodName": "testRamBytesUsed",
     "className": "org.elasticsearch.index.engine.VersionValueTests",
     "children": []
    },
    {
     "id": "ID#testDeleteRamBytesUsed(org.elasticsearch.index.engine.VersionValueTests)",
     "displayName": "testDeleteRamBytesUsed(org.elasticsearch.index.engine.VersionValueTests)",
     "methodName": "testDeleteRamBytesUsed",
     "className": "org.elasticsearch.index.engine.VersionValueTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935944719
 }
]

[
 "TEST_STARTED",
 "ID#testRamBytesUsed(org.elasticsearch.index.engine.VersionValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRamBytesUsed(org.elasticsearch.index.engine.VersionValueTests)",
  "startTimestamp": 1473935944810,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testDeleteRamBytesUsed(org.elasticsearch.index.engine.VersionValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeleteRamBytesUsed(org.elasticsearch.index.engine.VersionValueTests)",
  "startTimestamp": 1473935944823,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.engine.VersionValueTests",
  "startTimestamp": 1473935944719,
  "executionTime": 109
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests",
   "children": [
    {
     "id": "ID#testwriteTo(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
     "displayName": "testwriteTo(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
     "methodName": "testwriteTo",
     "className": "org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests",
     "children": []
    },
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests",
     "children": []
    },
    {
     "id": "ID#testReadFrom(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
     "displayName": "testReadFrom(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests",
     "children": []
    },
    {
     "id": "ID#testInvalidReadFrom(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
     "displayName": "testInvalidReadFrom(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
     "methodName": "testInvalidReadFrom",
     "className": "org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935944878
 }
]

[
 "TEST_STARTED",
 "ID#testwriteTo(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testwriteTo(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
  "startTimestamp": 1473935944905,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
  "startTimestamp": 1473935944934,
  "executionTime": 31
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
  "startTimestamp": 1473935944966,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidReadFrom(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidReadFrom(org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests)",
  "startTimestamp": 1473935944968,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesMethodTests",
  "startTimestamp": 1473935944878,
  "executionTime": 94
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
   "children": [
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testLocationParsing(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testLocationParsing(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testLocationParsing",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNullGeoPoint(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testNullGeoPoint(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testNullGeoPoint",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNullField(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testNullField(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testNullField",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testIgnoreUnmapped(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testIgnoreUnmapped",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInvalidPrecision(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testInvalidPrecision(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testInvalidPrecision",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935945061
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:39:05,460][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{ZmQ5BoLAQQOJE8iaBp6VXQ}{local}{local[266]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:39:05,468][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:39:05,468][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "message": "test runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered\r\n\tat __randomizedtesting.SeedInfo.seed([9CF13790D965C5A7:281E44ADA132C327]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.GeohashCellQueryBuilderTests.testMustRewrite(GeohashCellQueryBuilderTests.java:142)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:497)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1473935945185,
  "executionTime": 304
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1473935945489,
  "executionTime": 40
 }
]

[
 "TEST_STARTED",
 "ID#testLocationParsing(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLocationParsing(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1473935945529,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNullGeoPoint(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullGeoPoint(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1473935945532,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1473935945535,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1473935945538,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1473935945540,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNullField(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullField(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1473935945543,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1473935945547,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1473935945550,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1473935945553,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1473935945556,
  "executionTime": 53
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidPrecision(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidPrecision(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1473935945610,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "message": "test runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered\r\n\tat __randomizedtesting.SeedInfo.seed([9CF13790D965C5A7:6B0A35AEA8E6004D]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.GeohashCellQueryBuilderTests.testToQuery(GeohashCellQueryBuilderTests.java:89)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:497)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1473935945613,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
  "startTimestamp": 1473935945061,
  "executionTime": 588
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.bulk.BulkRequestTests",
   "displayName": "org.elasticsearch.action.bulk.BulkRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.bulk.BulkRequestTests",
   "children": [
    {
     "id": "ID#testSimpleBulk10(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testSimpleBulk10(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testSimpleBulk10",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testBulkAddIterable(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testBulkAddIterable(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testBulkAddIterable",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleBulk1(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testSimpleBulk1(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testSimpleBulk1",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleBulk3(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testSimpleBulk3(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testSimpleBulk3",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleBulk8(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testSimpleBulk8(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testSimpleBulk8",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testBulkNoSource(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testBulkNoSource(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testBulkNoSource",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testBulkAllowExplicitIndex(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testBulkAllowExplicitIndex(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testBulkAllowExplicitIndex",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleBulk2(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testSimpleBulk2(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testSimpleBulk2",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleBulk6(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testSimpleBulk6(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testSimpleBulk6",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleBulk9(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testSimpleBulk9(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testSimpleBulk9",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testBulkRequestWithRefresh(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testBulkRequestWithRefresh(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testBulkRequestWithRefresh",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleBulk7(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testSimpleBulk7(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testSimpleBulk7",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testCannotAddNullRequests(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testCannotAddNullRequests(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testCannotAddNullRequests",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    },
    {
     "id": "ID#testSimpleBulk4(org.elasticsearch.action.bulk.BulkRequestTests)",
     "displayName": "testSimpleBulk4(org.elasticsearch.action.bulk.BulkRequestTests)",
     "methodName": "testSimpleBulk4",
     "className": "org.elasticsearch.action.bulk.BulkRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935945677
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleBulk10(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleBulk10(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1473935945865,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testBulkAddIterable(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBulkAddIterable(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1473935945882,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleBulk1(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleBulk1(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1473935945885,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleBulk3(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleBulk3(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1473935945890,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleBulk8(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleBulk8(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1473935945900,
  "executionTime": 59
 }
]

[
 "TEST_STARTED",
 "ID#testBulkNoSource(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBulkNoSource(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1473935945959,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testBulkAllowExplicitIndex(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBulkAllowExplicitIndex(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1473935945981,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleBulk2(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleBulk2(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1473935946003,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleBulk6(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleBulk6(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1473935946007,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleBulk9(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleBulk9(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1473935946017,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testBulkRequestWithRefresh(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBulkRequestWithRefresh(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1473935946025,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleBulk7(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleBulk7(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1473935946028,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testCannotAddNullRequests(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCannotAddNullRequests(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1473935946036,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleBulk4(org.elasticsearch.action.bulk.BulkRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleBulk4(org.elasticsearch.action.bulk.BulkRequestTests)",
  "startTimestamp": 1473935946040,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.bulk.BulkRequestTests",
  "startTimestamp": 1473935945677,
  "executionTime": 374
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.MatchAllQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.MatchAllQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.MatchAllQueryBuilderTests",
   "children": [
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.MatchAllQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.MatchAllQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.MatchAllQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.MatchAllQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.MatchAllQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.MatchAllQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.MatchAllQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.MatchAllQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.MatchAllQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935946057
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MatchAllQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:06,248][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{iMUyE-cKSa2OHscGf_ZAmg}{local}{local[267]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:06,266][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:06,266][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
  "startTimestamp": 1473935946171,
  "executionTime": 115
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.MatchAllQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
  "startTimestamp": 1473935946286,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.MatchAllQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
  "startTimestamp": 1473935946289,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.MatchAllQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
  "startTimestamp": 1473935946294,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.MatchAllQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
  "startTimestamp": 1473935946298,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.MatchAllQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
  "startTimestamp": 1473935946300,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchAllQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
  "startTimestamp": 1473935946310,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.MatchAllQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
  "startTimestamp": 1473935946313,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchAllQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
  "startTimestamp": 1473935946330,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.MatchAllQueryBuilderTests",
  "startTimestamp": 1473935946057,
  "executionTime": 297
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.ParentIdQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
   "children": [
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "displayName": "testIgnoreUnmapped(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "methodName": "testIgnoreUnmapped",
     "className": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.ParentIdQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935946374
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.ParentIdQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:06,549][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{TMS1m1iFRdet822WAw3pcA}{local}{local[268]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:06,557][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:06,557][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
  "startTimestamp": 1473935946478,
  "executionTime": 100
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.ParentIdQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
  "startTimestamp": 1473935946578,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.ParentIdQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
  "startTimestamp": 1473935946582,
  "executionTime": 32
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreUnmapped(org.elasticsearch.index.query.ParentIdQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
  "startTimestamp": 1473935946614,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.ParentIdQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
  "startTimestamp": 1473935946617,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.ParentIdQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
  "startTimestamp": 1473935946621,
  "executionTime": 34
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.ParentIdQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
  "startTimestamp": 1473935946656,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.ParentIdQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
  "startTimestamp": 1473935946659,
  "executionTime": 32
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.ParentIdQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
  "startTimestamp": 1473935946691,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.ParentIdQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.ParentIdQueryBuilderTests)",
  "startTimestamp": 1473935946696,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.ParentIdQueryBuilderTests",
  "startTimestamp": 1473935946374,
  "executionTime": 335
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.collect.CopyOnWriteHashMapTests",
   "displayName": "org.elasticsearch.common.collect.CopyOnWriteHashMapTests",
   "methodName": null,
   "className": "org.elasticsearch.common.collect.CopyOnWriteHashMapTests",
   "children": [
    {
     "id": "ID#testUnsupportedValues(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
     "displayName": "testUnsupportedValues(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
     "methodName": "testUnsupportedValues",
     "className": "org.elasticsearch.common.collect.CopyOnWriteHashMapTests",
     "children": []
    },
    {
     "id": "ID#testUnsupportedAPIs(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
     "displayName": "testUnsupportedAPIs(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
     "methodName": "testUnsupportedAPIs",
     "className": "org.elasticsearch.common.collect.CopyOnWriteHashMapTests",
     "children": []
    },
    {
     "id": "ID#testDuel(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
     "displayName": "testDuel(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
     "methodName": "testDuel",
     "className": "org.elasticsearch.common.collect.CopyOnWriteHashMapTests",
     "children": []
    },
    {
     "id": "ID#testCollision(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
     "displayName": "testCollision(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
     "methodName": "testCollision",
     "className": "org.elasticsearch.common.collect.CopyOnWriteHashMapTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935946760
 }
]

[
 "TEST_STARTED",
 "ID#testUnsupportedValues(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnsupportedValues(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
  "startTimestamp": 1473935946845,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnsupportedAPIs(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnsupportedAPIs(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
  "startTimestamp": 1473935946848,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDuel(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuel(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
  "startTimestamp": 1473935946850,
  "executionTime": 86
 }
]

[
 "TEST_STARTED",
 "ID#testCollision(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCollision(org.elasticsearch.common.collect.CopyOnWriteHashMapTests)",
  "startTimestamp": 1473935946937,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.collect.CopyOnWriteHashMapTests",
  "startTimestamp": 1473935946760,
  "executionTime": 181
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.CamelCaseFieldNameTests",
   "displayName": "org.elasticsearch.index.mapper.CamelCaseFieldNameTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.CamelCaseFieldNameTests",
   "children": [
    {
     "id": "ID#testCamelCaseFieldNameStaysAsIs(org.elasticsearch.index.mapper.CamelCaseFieldNameTests)",
     "displayName": "testCamelCaseFieldNameStaysAsIs(org.elasticsearch.index.mapper.CamelCaseFieldNameTests)",
     "methodName": "testCamelCaseFieldNameStaysAsIs",
     "className": "org.elasticsearch.index.mapper.CamelCaseFieldNameTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935947043
 }
]

[
 "TEST_STARTED",
 "ID#testCamelCaseFieldNameStaysAsIs(org.elasticsearch.index.mapper.CamelCaseFieldNameTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:07,232][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:07,281][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:07,281][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:07,285][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[15428], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:07,288][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:07,288][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:07,504][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:07,504][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:07,505][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[64]}, bound_addresses {local[64]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:07,506][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{_EQE1UiiQ6uN8jRObnRruQ}{rmBKiZKpTwOCZZROkgFO-g}{local}{local[64]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:07,507][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:07,521][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:07,544][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:07,624][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:07,641][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/NmmNRjesRZGPllJbLx9r9g] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:07,657][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/NmmNRjesRZGPllJbLx9r9g] update_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:07,670][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CamelCaseFieldNameTests#testCamelCaseFieldNameStaysAsIs]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCamelCaseFieldNameStaysAsIs(org.elasticsearch.index.mapper.CamelCaseFieldNameTests)",
  "startTimestamp": 1473935947221,
  "executionTime": 481
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:07,702][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:07,703][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:07,703][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:07,705][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.CamelCaseFieldNameTests",
  "startTimestamp": 1473935947043,
  "executionTime": 668
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.BinaryFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.BinaryFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.BinaryFieldTypeTests",
   "children": [
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.BinaryFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.BinaryFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.BinaryFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.BinaryFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.BinaryFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935947739
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.BinaryFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
  "startTimestamp": 1473935947753,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.BinaryFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
  "startTimestamp": 1473935947756,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.BinaryFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
  "startTimestamp": 1473935947758,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.BinaryFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
  "startTimestamp": 1473935947761,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.BinaryFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.BinaryFieldTypeTests)",
  "startTimestamp": 1473935947763,
  "executionTime": 59
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.BinaryFieldTypeTests",
  "startTimestamp": 1473935947739,
  "executionTime": 85
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
   "displayName": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
   "methodName": null,
   "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
   "children": [
    {
     "id": "ID#testToBytes(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testToBytes(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testToBytes",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSlice(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testSlice(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testSlice",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testSliceIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testSliceIterator",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testWriteToOutputStream(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testWriteToOutputStream(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testWriteToOutputStream",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testRandomReads(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testRandomReads(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testRandomReads",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceStreamInput(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testSliceStreamInput(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testSliceStreamInput",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceCopyBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testSliceCopyBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testSliceCopyBytesRef",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testToBytesRefSharedPage(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testToBytesRefSharedPage(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testToBytesRefSharedPage",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testGet(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testGet(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testGet",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testToUtf8(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testToUtf8(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testToUtf8",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testArrayOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testArrayOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testArrayOffset",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceToBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testSliceToBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testSliceToBytesRef",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testStreamInputBulkReadWithOffset",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testIterator",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceWriteToOutputStream(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testSliceWriteToOutputStream(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testSliceWriteToOutputStream",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testLength(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testLength(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testLength",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testCompositeBuffer(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testCompositeBuffer(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testCompositeBuffer",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testStreamInputMarkAndReset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testStreamInputMarkAndReset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testStreamInputMarkAndReset",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testCopyBytesRefSharesBytes(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testCopyBytesRefSharesBytes(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testCopyBytesRefSharesBytes",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testSliceEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testSliceEquals",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testEmptyToBytesRefIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testEmptyToBytesRefIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testEmptyToBytesRefIterator",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testToBytesRefMaterializedPages(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testToBytesRefMaterializedPages(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testToBytesRefMaterializedPages",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testIteratorRandom(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testIteratorRandom(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testIteratorRandom",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testStreamInput(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testStreamInput(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testStreamInput",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceArrayOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testSliceArrayOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testSliceArrayOffset",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testToBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testToBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testToBytesRef",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testInputStreamSkip(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testInputStreamSkip(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testInputStreamSkip",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testBasicEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testBasicEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testBasicEquals",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testHashCode(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testHashCode(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testHashCode",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testCompareTo(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "displayName": "testCompareTo(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
     "methodName": "testCompareTo",
     "className": "org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935947863
 }
]

[
 "TEST_STARTED",
 "ID#testToBytes(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytes(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1473935947882,
  "executionTime": 85
 }
]

[
 "TEST_STARTED",
 "ID#testSlice(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSlice(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1473935947967,
  "executionTime": 25
 }
]

[
 "TEST_STARTED",
 "ID#testSliceIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1473935947993,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testWriteToOutputStream(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteToOutputStream(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1473935947998,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testRandomReads(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomReads(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1473935948020,
  "executionTime": 93
 }
]

[
 "TEST_STARTED",
 "ID#testSliceStreamInput(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceStreamInput(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1473935948114,
  "executionTime": 54
 }
]

[
 "TEST_STARTED",
 "ID#testSliceCopyBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceCopyBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1473935948168,
  "executionTime": 32
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1473935948200,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testToBytesRefSharedPage(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytesRefSharedPage(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1473935948205,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGet(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGet(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1473935948207,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testToUtf8(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToUtf8(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1473935948232,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testArrayOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArrayOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1473935948234,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testSliceToBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceToBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1473935948245,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1473935948247,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1473935948270,
  "executionTime": 68
 }
]

[
 "TEST_STARTED",
 "ID#testSliceWriteToOutputStream(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceWriteToOutputStream(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1473935948338,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testLength(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLength(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1473935948362,
  "executionTime": 90
 }
]

[
 "TEST_STARTED",
 "ID#testCompositeBuffer(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompositeBuffer(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1473935948452,
  "executionTime": 91
 }
]

[
 "TEST_STARTED",
 "ID#testStreamInputMarkAndReset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamInputMarkAndReset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1473935948544,
  "executionTime": 190
 }
]

[
 "TEST_STARTED",
 "ID#testCopyBytesRefSharesBytes(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyBytesRefSharesBytes(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1473935948734,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testSliceEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1473935948741,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyToBytesRefIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyToBytesRefIterator(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1473935948745,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToBytesRefMaterializedPages(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytesRefMaterializedPages(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1473935948748,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testIteratorRandom(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIteratorRandom(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1473935948758,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testStreamInput(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamInput(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1473935948771,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testSliceArrayOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceArrayOffset(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1473935948793,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytesRef(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1473935948795,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testInputStreamSkip(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInputStreamSkip(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1473935948799,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testBasicEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicEquals(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1473935948813,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testHashCode(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHashCode(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1473935948819,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testCompareTo(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompareTo(org.elasticsearch.common.bytes.CompositeBytesReferenceTests)",
  "startTimestamp": 1473935948831,
  "executionTime": 124
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.bytes.CompositeBytesReferenceTests",
  "startTimestamp": 1473935947863,
  "executionTime": 1094
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.RangeQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.RangeQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
   "children": [
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDateRangeBoundaries(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testDateRangeBoundaries(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testDateRangeBoundaries",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryUnmappedWithTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testToQueryUnmappedWithTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testToQueryUnmappedWithTimezone",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRewriteDateToMatchAll(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testRewriteDateToMatchAll(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testRewriteDateToMatchAll",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testParseFailsWithMultipleFields(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testParseFailsWithMultipleFields",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNamedQueryParsing(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testNamedQueryParsing(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testNamedQueryParsing",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRewriteOpenBoundsToSame(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testRewriteOpenBoundsToSame(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testRewriteOpenBoundsToSame",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryNonDateWithTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testToQueryNonDateWithTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testToQueryNonDateWithTimezone",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryNumericField(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testToQueryNumericField(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testToQueryNumericField",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDateRangeQueryTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testDateRangeQueryTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testDateRangeQueryTimezone",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDateRangeQueryFormat(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testDateRangeQueryFormat(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testDateRangeQueryFormat",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRewriteDateToMatchNone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testRewriteDateToMatchNone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testRewriteDateToMatchNone",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRewriteDateToSame(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "displayName": "testRewriteDateToSame(org.elasticsearch.index.query.RangeQueryBuilderTests)",
     "methodName": "testRewriteDateToSame",
     "className": "org.elasticsearch.index.query.RangeQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935949064
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:09,128][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{ZsRLmfWQRFu1ZVOgGFHxYg}{local}{local[269]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:09,141][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:09,141][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:09,156][WARN ][org.elasticsearch.deprecation.index.mapper]  [MRl] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:09,156][WARN ][org.elasticsearch.deprecation.index.mapper]  [MRl] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:09,157][WARN ][org.elasticsearch.deprecation.index.mapper]  [MRl] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:09,159][WARN ][org.elasticsearch.deprecation.index.mapper]  [MRl] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:09,159][WARN ][org.elasticsearch.deprecation.index.mapper]  [MRl] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:09,159][WARN ][org.elasticsearch.deprecation.index.mapper]  [MRl] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:09,169][WARN ][org.elasticsearch.deprecation.index.mapper]  [MRl] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:09,169][WARN ][org.elasticsearch.deprecation.index.mapper]  [MRl] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:09,169][WARN ][org.elasticsearch.deprecation.index.mapper]  [MRl] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:09,171][WARN ][org.elasticsearch.deprecation.index.mapper]  [MRl] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:09,171][WARN ][org.elasticsearch.deprecation.index.mapper]  [MRl] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:09,171][WARN ][org.elasticsearch.deprecation.index.mapper]  [MRl] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:09,198][WARN ][org.elasticsearch.deprecation.index.mapper]  [MRl] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:09,198][WARN ][org.elasticsearch.deprecation.index.mapper]  [MRl] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:09,198][WARN ][org.elasticsearch.deprecation.index.mapper]  [MRl] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:09,202][WARN ][org.elasticsearch.deprecation.index.mapper]  [MRl] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:09,202][WARN ][org.elasticsearch.deprecation.index.mapper]  [MRl] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:09,202][WARN ][org.elasticsearch.deprecation.index.mapper]  [MRl] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:09,204][WARN ][org.elasticsearch.deprecation.index.mapper]  [MRl] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:09,204][WARN ][org.elasticsearch.deprecation.index.mapper]  [MRl] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:09,205][WARN ][org.elasticsearch.deprecation.index.mapper]  [MRl] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:09,208][WARN ][org.elasticsearch.deprecation.index.mapper]  [MRl] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:09,208][WARN ][org.elasticsearch.deprecation.index.mapper]  [MRl] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:09,208][WARN ][org.elasticsearch.deprecation.index.mapper]  [MRl] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:09,212][WARN ][org.elasticsearch.deprecation.index.mapper]  [MRl] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:09,212][WARN ][org.elasticsearch.deprecation.index.mapper]  [MRl] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:09,212][WARN ][org.elasticsearch.deprecation.index.mapper]  [MRl] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1473935949100,
  "executionTime": 114
 }
]

[
 "TEST_STARTED",
 "ID#testDateRangeBoundaries(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDateRangeBoundaries(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1473935949214,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1473935949227,
  "executionTime": 99
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryUnmappedWithTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryUnmappedWithTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1473935949326,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1473935949329,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1473935949353,
  "executionTime": 110
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1473935949463,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRewriteDateToMatchAll(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRewriteDateToMatchAll(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1473935949467,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1473935949470,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNamedQueryParsing(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNamedQueryParsing(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1473935949473,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1473935949477,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1473935949480,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1473935949482,
  "executionTime": 67
 }
]

[
 "TEST_STARTED",
 "ID#testRewriteOpenBoundsToSame(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRewriteOpenBoundsToSame(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1473935949549,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryNonDateWithTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryNonDateWithTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1473935949553,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryNumericField(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryNumericField(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1473935949556,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDateRangeQueryTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDateRangeQueryTimezone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1473935949559,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1473935949563,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1473935949566,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testDateRangeQueryFormat(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDateRangeQueryFormat(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1473935949571,
  "executionTime": 65
 }
]

[
 "TEST_STARTED",
 "ID#testRewriteDateToMatchNone(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRewriteDateToMatchNone(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1473935949636,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRewriteDateToSame(org.elasticsearch.index.query.RangeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRewriteDateToSame(org.elasticsearch.index.query.RangeQueryBuilderTests)",
  "startTimestamp": 1473935949639,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.RangeQueryBuilderTests",
  "startTimestamp": 1473935949064,
  "executionTime": 581
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.IndexGraveyardTests",
   "displayName": "org.elasticsearch.cluster.metadata.IndexGraveyardTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.IndexGraveyardTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
     "displayName": "testSerialization(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.cluster.metadata.IndexGraveyardTests",
     "children": []
    },
    {
     "id": "ID#testAddTombstones(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
     "displayName": "testAddTombstones(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
     "methodName": "testAddTombstones",
     "className": "org.elasticsearch.cluster.metadata.IndexGraveyardTests",
     "children": []
    },
    {
     "id": "ID#testPurge(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
     "displayName": "testPurge(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
     "methodName": "testPurge",
     "className": "org.elasticsearch.cluster.metadata.IndexGraveyardTests",
     "children": []
    },
    {
     "id": "ID#testXContent(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
     "displayName": "testXContent(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
     "methodName": "testXContent",
     "className": "org.elasticsearch.cluster.metadata.IndexGraveyardTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
     "displayName": "testEquals(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.cluster.metadata.IndexGraveyardTests",
     "children": []
    },
    {
     "id": "ID#testContains(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
     "displayName": "testContains(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
     "methodName": "testContains",
     "className": "org.elasticsearch.cluster.metadata.IndexGraveyardTests",
     "children": []
    },
    {
     "id": "ID#testDiffs(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
     "displayName": "testDiffs(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
     "methodName": "testDiffs",
     "className": "org.elasticsearch.cluster.metadata.IndexGraveyardTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935949652
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.cluster.metadata.IndexGraveyardTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
  "startTimestamp": 1473935949768,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAddTombstones(org.elasticsearch.cluster.metadata.IndexGraveyardTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddTombstones(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
  "startTimestamp": 1473935949770,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testPurge(org.elasticsearch.cluster.metadata.IndexGraveyardTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPurge(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
  "startTimestamp": 1473935949772,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testXContent(org.elasticsearch.cluster.metadata.IndexGraveyardTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testXContent(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
  "startTimestamp": 1473935949776,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.cluster.metadata.IndexGraveyardTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
  "startTimestamp": 1473935949778,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testContains(org.elasticsearch.cluster.metadata.IndexGraveyardTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testContains(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
  "startTimestamp": 1473935949780,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDiffs(org.elasticsearch.cluster.metadata.IndexGraveyardTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDiffs(org.elasticsearch.cluster.metadata.IndexGraveyardTests)",
  "startTimestamp": 1473935949782,
  "executionTime": 22
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.IndexGraveyardTests",
  "startTimestamp": 1473935949652,
  "executionTime": 154
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.translog.TranslogTests",
   "displayName": "org.elasticsearch.index.translog.TranslogTests",
   "methodName": null,
   "className": "org.elasticsearch.index.translog.TranslogTests",
   "children": [
    {
     "id": "ID#testSnapshotFromStreamInput(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testSnapshotFromStreamInput(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testSnapshotFromStreamInput",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testRecoverWithUnbackedNextGenInIllegalState(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testRecoverWithUnbackedNextGenInIllegalState(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testRecoverWithUnbackedNextGenInIllegalState",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testConcurrentWriteViewsAndSnapshot(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testConcurrentWriteViewsAndSnapshot(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testConcurrentWriteViewsAndSnapshot",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testRecoverWithUnbackedNextGenAndFutureFile(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testRecoverWithUnbackedNextGenAndFutureFile(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testRecoverWithUnbackedNextGenAndFutureFile",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testTragicEventCanBeAnyException(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testTragicEventCanBeAnyException(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testTragicEventCanBeAnyException",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testSnapshot(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testSnapshot(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testSnapshot",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testRead(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testRead(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testRead",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testVerifyTranslogIsNotDeleted(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testVerifyTranslogIsNotDeleted(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testVerifyTranslogIsNotDeleted",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testLocationComparison(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testLocationComparison(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testLocationComparison",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testBasicRecovery(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testBasicRecovery(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testBasicRecovery",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testWithRandomException(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testWithRandomException(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testWithRandomException",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testBasicCheckpoint(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testBasicCheckpoint(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testBasicCheckpoint",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testTruncatedTranslogs(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testTruncatedTranslogs(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testTruncatedTranslogs",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testSyncUpToStream(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testSyncUpToStream(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testSyncUpToStream",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testFailFlush(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testFailFlush(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testFailFlush",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testRecoveryUncommittedFileExists(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testRecoveryUncommittedFileExists(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testRecoveryUncommittedFileExists",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testSyncUpTo(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testSyncUpTo(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testSyncUpTo",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testTranslogOpsCountIsCorrect(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testTranslogOpsCountIsCorrect(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testTranslogOpsCountIsCorrect",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testRecoverWithUnbackedNextGen(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testRecoverWithUnbackedNextGen(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testRecoverWithUnbackedNextGen",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testTranslogWriter(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testTranslogWriter(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testTranslogWriter",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testIdParsingFromFile(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testIdParsingFromFile(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testIdParsingFromFile",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testSnapshotWithNewTranslog(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testSnapshotWithNewTranslog(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testSnapshotWithNewTranslog",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testConcurrentWritesWithVaryingSize(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testConcurrentWritesWithVaryingSize(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testConcurrentWritesWithVaryingSize",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testFatalIOExceptionsWhileWritingConcurrently(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testFatalIOExceptionsWhileWritingConcurrently(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testFatalIOExceptionsWhileWritingConcurrently",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testTranslogChecksums(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testTranslogChecksums(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testTranslogChecksums",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testFailOnClosedWrite(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testFailOnClosedWrite(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testFailOnClosedWrite",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testSnapshotOnClosedTranslog(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testSnapshotOnClosedTranslog(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testSnapshotOnClosedTranslog",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testFailWhileCreateWriteWithRecoveredTLogs(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testFailWhileCreateWriteWithRecoveredTLogs(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testFailWhileCreateWriteWithRecoveredTLogs",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testFailWriterWhileClosing(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testFailWriterWhileClosing(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testFailWriterWhileClosing",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testCheckpointOnDiskFull(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testCheckpointOnDiskFull(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testCheckpointOnDiskFull",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testOpenForeignTranslog(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testOpenForeignTranslog(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testOpenForeignTranslog",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testStats(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testStats(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testStats",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testRecoveryUncommittedCorruptedCheckpoint(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testRecoveryUncommittedCorruptedCheckpoint(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testRecoveryUncommittedCorruptedCheckpoint",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testLocationHashCodeEquals(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testLocationHashCodeEquals(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testLocationHashCodeEquals",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testPendingDelete(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testPendingDelete(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testPendingDelete",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testSimpleOperations(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testSimpleOperations(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testSimpleOperations",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testRecoveryUncommitted(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testRecoveryUncommitted(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testRecoveryUncommitted",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testCloseConcurrently(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testCloseConcurrently(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testCloseConcurrently",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935949861
 }
]

[
 "TEST_STARTED",
 "ID#testSnapshotFromStreamInput(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSnapshotFromStreamInput(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1473935949878,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverWithUnbackedNextGenInIllegalState(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverWithUnbackedNextGenInIllegalState(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1473935949905,
  "executionTime": 40
 }
]

[
 "TEST_STARTED",
 "ID#testConcurrentWriteViewsAndSnapshot(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:22,832][INFO ][org.elasticsearch.index.translog]  [index][1] --> test done. total ops written [1327]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcurrentWriteViewsAndSnapshot(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1473935949945,
  "executionTime": 12894
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverWithUnbackedNextGenAndFutureFile(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:22,920][WARN ][org.elasticsearch.index.translog]  [index][1] deleted previously created, but not yet committed, next generation [translog-2.tlog]. This can happen due to a tragic exception when creating a new generation%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverWithUnbackedNextGenAndFutureFile(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1473935962839,
  "executionTime": 110
 }
]

[
 "TEST_STARTED",
 "ID#testTragicEventCanBeAnyException(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTragicEventCanBeAnyException(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1473935962949,
  "executionTime": 175
 }
]

[
 "TEST_STARTED",
 "ID#testSnapshot(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSnapshot(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1473935963124,
  "executionTime": 95
 }
]

[
 "TEST_STARTED",
 "ID#testRead(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRead(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1473935963219,
  "executionTime": 54
 }
]

[
 "TEST_STARTED",
 "ID#testVerifyTranslogIsNotDeleted(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVerifyTranslogIsNotDeleted(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1473935963273,
  "executionTime": 47
 }
]

[
 "TEST_STARTED",
 "ID#testLocationComparison(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLocationComparison(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1473935963320,
  "executionTime": 62
 }
]

[
 "TEST_STARTED",
 "ID#testBasicRecovery(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicRecovery(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1473935963382,
  "executionTime": 40
 }
]

[
 "TEST_STARTED",
 "ID#testWithRandomException(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithRandomException(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1473935963423,
  "executionTime": 156
 }
]

[
 "TEST_STARTED",
 "ID#testBasicCheckpoint(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicCheckpoint(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1473935963580,
  "executionTime": 317
 }
]

[
 "TEST_STARTED",
 "ID#testTruncatedTranslogs(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:23,926][INFO ][org.elasticsearch.index.translog]  [index][1] --> truncating C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.index.translog.TranslogTests_9CF13790D965C5A7-001\\tempDir-001\\translog-1.tlog, prev: 5538, now: 5114%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTruncatedTranslogs(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1473935963898,
  "executionTime": 45
 }
]

[
 "TEST_STARTED",
 "ID#testSyncUpToStream(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSyncUpToStream(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1473935963944,
  "executionTime": 233
 }
]

[
 "TEST_STARTED",
 "ID#testFailFlush(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailFlush(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1473935964177,
  "executionTime": 61
 }
]

[
 "TEST_STARTED",
 "ID#testRecoveryUncommittedFileExists(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoveryUncommittedFileExists(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1473935964238,
  "executionTime": 95
 }
]

[
 "TEST_STARTED",
 "ID#testSyncUpTo(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSyncUpTo(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1473935964333,
  "executionTime": 376
 }
]

[
 "TEST_STARTED",
 "ID#testTranslogOpsCountIsCorrect(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTranslogOpsCountIsCorrect(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1473935964709,
  "executionTime": 2158
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverWithUnbackedNextGen(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:26,905][WARN ][org.elasticsearch.index.translog]  [index][1] deleted previously created, but not yet committed, next generation [translog-2.tlog]. This can happen due to a tragic exception when creating a new generation%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverWithUnbackedNextGen(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1473935966867,
  "executionTime": 72
 }
]

[
 "TEST_STARTED",
 "ID#testTranslogWriter(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTranslogWriter(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1473935966939,
  "executionTime": 37
 }
]

[
 "TEST_STARTED",
 "ID#testIdParsingFromFile(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIdParsingFromFile(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1473935966976,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testSnapshotWithNewTranslog(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSnapshotWithNewTranslog(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1473935966994,
  "executionTime": 39
 }
]

[
 "TEST_STARTED",
 "ID#testConcurrentWritesWithVaryingSize(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:27,043][INFO ][org.elasticsearch.index.translog]  [index][1] testing with [5] threads, each doing [141] ops%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcurrentWritesWithVaryingSize(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1473935967033,
  "executionTime": 496
 }
]

[
 "TEST_STARTED",
 "ID#testFatalIOExceptionsWhileWritingConcurrently(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFatalIOExceptionsWhileWritingConcurrently(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1473935967529,
  "executionTime": 329
 }
]

[
 "TEST_STARTED",
 "ID#testTranslogChecksums(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:27,877][INFO ][org.elasticsearch.index.translog]  [index][1] --> corrupting C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.index.translog.TranslogTests_9CF13790D965C5A7-001\\tempDir-001\\translog-1.tlog...%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTranslogChecksums(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1473935967858,
  "executionTime": 38
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnClosedWrite(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnClosedWrite(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1473935967896,
  "executionTime": 42
 }
]

[
 "TEST_STARTED",
 "ID#testSnapshotOnClosedTranslog(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSnapshotOnClosedTranslog(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1473935967938,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testFailWhileCreateWriteWithRecoveredTLogs(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailWhileCreateWriteWithRecoveredTLogs(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1473935967960,
  "executionTime": 59
 }
]

[
 "TEST_STARTED",
 "ID#testFailWriterWhileClosing(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailWriterWhileClosing(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1473935968019,
  "executionTime": 58
 }
]

[
 "TEST_STARTED",
 "ID#testCheckpointOnDiskFull(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckpointOnDiskFull(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1473935968077,
  "executionTime": 60
 }
]

[
 "TEST_STARTED",
 "ID#testOpenForeignTranslog(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOpenForeignTranslog(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1473935968137,
  "executionTime": 74
 }
]

[
 "TEST_STARTED",
 "ID#testStats(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStats(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1473935968211,
  "executionTime": 47
 }
]

[
 "TEST_STARTED",
 "ID#testRecoveryUncommittedCorruptedCheckpoint(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoveryUncommittedCorruptedCheckpoint(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1473935968259,
  "executionTime": 74
 }
]

[
 "TEST_STARTED",
 "ID#testLocationHashCodeEquals(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLocationHashCodeEquals(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1473935968333,
  "executionTime": 62
 }
]

[
 "TEST_STARTED",
 "ID#testPendingDelete(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPendingDelete(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1473935968396,
  "executionTime": 97
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleOperations(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleOperations(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1473935968493,
  "executionTime": 43
 }
]

[
 "TEST_STARTED",
 "ID#testRecoveryUncommitted(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoveryUncommitted(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1473935968536,
  "executionTime": 60
 }
]

[
 "TEST_STARTED",
 "ID#testCloseConcurrently(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:28,605][INFO ][org.elasticsearch.index.translog]  [index][1] testing with [6] threads, each doing [134] ops%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCloseConcurrently(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1473935968596,
  "executionTime": 21
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.translog.TranslogTests",
  "startTimestamp": 1473935949861,
  "executionTime": 18791
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests",
   "displayName": "org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests",
   "methodName": null,
   "className": "org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests",
   "children": [
    {
     "id": "ID#testShouldIgnoreNewClusterState(org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests)",
     "displayName": "testShouldIgnoreNewClusterState(org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests)",
     "methodName": "testShouldIgnoreNewClusterState",
     "className": "org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests",
     "children": []
    },
    {
     "id": "ID#testFilterNonMasterPingResponse(org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests)",
     "displayName": "testFilterNonMasterPingResponse(org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests)",
     "methodName": "testFilterNonMasterPingResponse",
     "className": "org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935968689
 }
]

[
 "TEST_STARTED",
 "ID#testShouldIgnoreNewClusterState(org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:28,707][WARN ][org.elasticsearch.discovery.zen] received a cluster state from a different master than the current one, rejecting (received {a}{czhy8LHYREWHbBsxugMm1Q}{local}{local[271]}, current {b}{jlm0DFFjQ_W3GK7sC4sRpA}{local}{local[272]})%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShouldIgnoreNewClusterState(org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests)",
  "startTimestamp": 1473935968705,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFilterNonMasterPingResponse(org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterNonMasterPingResponse(org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests)",
  "startTimestamp": 1473935968708,
  "executionTime": 21
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.discovery.zen.ZenDiscoveryUnitTests",
  "startTimestamp": 1473935968689,
  "executionTime": 42
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.replication.BroadcastReplicationTests",
   "displayName": "org.elasticsearch.action.support.replication.BroadcastReplicationTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.replication.BroadcastReplicationTests",
   "children": [
    {
     "id": "ID#testNoShards(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "displayName": "testNoShards(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "methodName": "testNoShards",
     "className": "org.elasticsearch.action.support.replication.BroadcastReplicationTests",
     "children": []
    },
    {
     "id": "ID#testStartedPrimary(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "displayName": "testStartedPrimary(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "methodName": "testStartedPrimary",
     "className": "org.elasticsearch.action.support.replication.BroadcastReplicationTests",
     "children": []
    },
    {
     "id": "ID#testResultCombine(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "displayName": "testResultCombine(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "methodName": "testResultCombine",
     "className": "org.elasticsearch.action.support.replication.BroadcastReplicationTests",
     "children": []
    },
    {
     "id": "ID#testShardsList(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "displayName": "testShardsList(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "methodName": "testShardsList",
     "className": "org.elasticsearch.action.support.replication.BroadcastReplicationTests",
     "children": []
    },
    {
     "id": "ID#testNotStartedPrimary(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "displayName": "testNotStartedPrimary(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "methodName": "testNotStartedPrimary",
     "className": "org.elasticsearch.action.support.replication.BroadcastReplicationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935968803
 }
]

[
 "TEST_STARTED",
 "ID#testNoShards(org.elasticsearch.action.support.replication.BroadcastReplicationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:28,824][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{FUfx6MnBQc2Kou_hMstZJQ}{local}{local[287]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:28,843][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[65]}, bound_addresses {local[65]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:28,845][INFO ][org.elasticsearch.cluster.service] [node_s_0] removed {{node}{FUfx6MnBQc2Kou_hMstZJQ}{local}{local[287]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoShards(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
  "startTimestamp": 1473935968819,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testStartedPrimary(org.elasticsearch.action.support.replication.BroadcastReplicationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:28,856][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Xb4ClBQMR2ihqf9OJFqVRg}{local}{local[290]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:28,857][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[66]}, bound_addresses {local[66]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:28,858][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{XoiOV_RsSDuLCJOz3mxkkw}{local}{local[292]}, previous {node}{Xb4ClBQMR2ihqf9OJFqVRg}{local}{local[290]}}, removed {{node}{Xb4ClBQMR2ihqf9OJFqVRg}{local}{local[290]},}, added {{node_1}{XoiOV_RsSDuLCJOz3mxkkw}{local}{local[292]},{node_2}{ddRtYvykTwKSdjEZZILgyA}{local}{local[293]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:28,859][INFO ][org.elasticsearch.action.support.replication] total shards: 1, %0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStartedPrimary(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
  "startTimestamp": 1473935968846,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testResultCombine(org.elasticsearch.action.support.replication.BroadcastReplicationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:28,864][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{SlVb-GyiSuOejegJnoiZtg}{local}{local[297]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:28,865][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[67]}, bound_addresses {local[67]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:28,866][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{XRCyFgZgTMapeClKA0fXyg}{local}{local[299]}, previous {node}{SlVb-GyiSuOejegJnoiZtg}{local}{local[297]}}, removed {{node}{SlVb-GyiSuOejegJnoiZtg}{local}{local[297]},}, added {{node_1}{XRCyFgZgTMapeClKA0fXyg}{local}{local[299]},{node_2}{gl0ocxUSRhaBEyVZ-e7uuA}{local}{local[300]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResultCombine(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
  "startTimestamp": 1473935968860,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testShardsList(org.elasticsearch.action.support.replication.BroadcastReplicationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:28,893][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{XTsibG0yQo2iw1zcza22xw}{local}{local[309]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:28,894][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[68]}, bound_addresses {local[68]}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardsList(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
  "startTimestamp": 1473935968888,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testNotStartedPrimary(org.elasticsearch.action.support.replication.BroadcastReplicationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:28,900][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{SlGbGzcbQXm6pLD_jZWRCw}{local}{local[316]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:28,901][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[69]}, bound_addresses {local[69]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:28,902][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{3hRlG2QhRAeukVwTfU9O0g}{local}{local[318]}, previous {node}{SlGbGzcbQXm6pLD_jZWRCw}{local}{local[316]}}, removed {{node}{SlGbGzcbQXm6pLD_jZWRCw}{local}{local[316]},}, added {{node_1}{3hRlG2QhRAeukVwTfU9O0g}{local}{local[318]},{node_2}{XoSlkbzzT8Oa2RnZH2iODA}{local}{local[319]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:28,903][INFO ][org.elasticsearch.action.support.replication] total shards: 2, %0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotStartedPrimary(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
  "startTimestamp": 1473935968895,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.replication.BroadcastReplicationTests",
  "startTimestamp": 1473935968803,
  "executionTime": 105
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.OriginalIndicesTests",
   "displayName": "org.elasticsearch.action.OriginalIndicesTests",
   "methodName": null,
   "className": "org.elasticsearch.action.OriginalIndicesTests",
   "children": [
    {
     "id": "ID#testOriginalIndicesSerialization(org.elasticsearch.action.OriginalIndicesTests)",
     "displayName": "testOriginalIndicesSerialization(org.elasticsearch.action.OriginalIndicesTests)",
     "methodName": "testOriginalIndicesSerialization",
     "className": "org.elasticsearch.action.OriginalIndicesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935968932
 }
]

[
 "TEST_STARTED",
 "ID#testOriginalIndicesSerialization(org.elasticsearch.action.OriginalIndicesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOriginalIndicesSerialization(org.elasticsearch.action.OriginalIndicesTests)",
  "startTimestamp": 1473935968947,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.OriginalIndicesTests",
  "startTimestamp": 1473935968932,
  "executionTime": 19
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.network.NetworkModuleTests",
   "displayName": "org.elasticsearch.common.network.NetworkModuleTests",
   "methodName": null,
   "className": "org.elasticsearch.common.network.NetworkModuleTests",
   "children": [
    {
     "id": "ID#testRegisterTransportService(org.elasticsearch.common.network.NetworkModuleTests)",
     "displayName": "testRegisterTransportService(org.elasticsearch.common.network.NetworkModuleTests)",
     "methodName": "testRegisterTransportService",
     "className": "org.elasticsearch.common.network.NetworkModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterTransport(org.elasticsearch.common.network.NetworkModuleTests)",
     "displayName": "testRegisterTransport(org.elasticsearch.common.network.NetworkModuleTests)",
     "methodName": "testRegisterTransport",
     "className": "org.elasticsearch.common.network.NetworkModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterHttpTransport(org.elasticsearch.common.network.NetworkModuleTests)",
     "displayName": "testRegisterHttpTransport(org.elasticsearch.common.network.NetworkModuleTests)",
     "methodName": "testRegisterHttpTransport",
     "className": "org.elasticsearch.common.network.NetworkModuleTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935968980
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterTransportService(org.elasticsearch.common.network.NetworkModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterTransportService(org.elasticsearch.common.network.NetworkModuleTests)",
  "startTimestamp": 1473935968997,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterTransport(org.elasticsearch.common.network.NetworkModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterTransport(org.elasticsearch.common.network.NetworkModuleTests)",
  "startTimestamp": 1473935969021,
  "executionTime": 135
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterHttpTransport(org.elasticsearch.common.network.NetworkModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterHttpTransport(org.elasticsearch.common.network.NetworkModuleTests)",
  "startTimestamp": 1473935969156,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.network.NetworkModuleTests",
  "startTimestamp": 1473935968980,
  "executionTime": 189
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.StemmerTokenFilterFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.StemmerTokenFilterFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.StemmerTokenFilterFactoryTests",
   "children": [
    {
     "id": "ID#testPorter2FilterFactory(org.elasticsearch.index.analysis.StemmerTokenFilterFactoryTests)",
     "displayName": "testPorter2FilterFactory(org.elasticsearch.index.analysis.StemmerTokenFilterFactoryTests)",
     "methodName": "testPorter2FilterFactory",
     "className": "org.elasticsearch.index.analysis.StemmerTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testEnglishFilterFactory(org.elasticsearch.index.analysis.StemmerTokenFilterFactoryTests)",
     "displayName": "testEnglishFilterFactory(org.elasticsearch.index.analysis.StemmerTokenFilterFactoryTests)",
     "methodName": "testEnglishFilterFactory",
     "className": "org.elasticsearch.index.analysis.StemmerTokenFilterFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935969190
 }
]

[
 "TEST_STARTED",
 "ID#testPorter2FilterFactory(org.elasticsearch.index.analysis.StemmerTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPorter2FilterFactory(org.elasticsearch.index.analysis.StemmerTokenFilterFactoryTests)",
  "startTimestamp": 1473935969478,
  "executionTime": 527
 }
]

[
 "TEST_STARTED",
 "ID#testEnglishFilterFactory(org.elasticsearch.index.analysis.StemmerTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnglishFilterFactory(org.elasticsearch.index.analysis.StemmerTokenFilterFactoryTests)",
  "startTimestamp": 1473935970005,
  "executionTime": 2019
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.StemmerTokenFilterFactoryTests",
  "startTimestamp": 1473935969190,
  "executionTime": 2995
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.JavaMultiFieldMergeTests",
   "displayName": "org.elasticsearch.index.mapper.JavaMultiFieldMergeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.JavaMultiFieldMergeTests",
   "children": [
    {
     "id": "ID#testUpgradeFromMultiFieldTypeToMultiFields(org.elasticsearch.index.mapper.JavaMultiFieldMergeTests)",
     "displayName": "testUpgradeFromMultiFieldTypeToMultiFields(org.elasticsearch.index.mapper.JavaMultiFieldMergeTests)",
     "methodName": "testUpgradeFromMultiFieldTypeToMultiFields",
     "className": "org.elasticsearch.index.mapper.JavaMultiFieldMergeTests",
     "children": []
    },
    {
     "id": "ID#testMergeMultiField(org.elasticsearch.index.mapper.JavaMultiFieldMergeTests)",
     "displayName": "testMergeMultiField(org.elasticsearch.index.mapper.JavaMultiFieldMergeTests)",
     "methodName": "testMergeMultiField",
     "className": "org.elasticsearch.index.mapper.JavaMultiFieldMergeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935972226
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeFromMultiFieldTypeToMultiFields(org.elasticsearch.index.mapper.JavaMultiFieldMergeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:39:32,524][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:39:32,552][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:39:32,552][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:39:32,555][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[15428], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:39:32,558][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:39:32,558][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:39:32,800][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:39:32,800][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:39:32,801][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[70]}, bound_addresses {local[70]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:39:32,836][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{Mze2a9FYTIqjU0yC7v4Cjg}{JRsjjGehT624kvYk5Z1fSQ}{local}{local[70]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:39:32,837][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:39:32,919][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:39:32,978][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:39:33,055][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:39:33,106][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [JavaMultiFieldMergeTests#testUpgradeFromMultiFieldTypeToMultiFields]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeFromMultiFieldTypeToMultiFields(org.elasticsearch.index.mapper.JavaMultiFieldMergeTests)",
  "startTimestamp": 1473935972515,
  "executionTime": 625
 }
]

[
 "TEST_STARTED",
 "ID#testMergeMultiField(org.elasticsearch.index.mapper.JavaMultiFieldMergeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:39:33,149][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:39:33,201][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:39:33,249][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [JavaMultiFieldMergeTests#testMergeMultiField]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeMultiField(org.elasticsearch.index.mapper.JavaMultiFieldMergeTests)",
  "startTimestamp": 1473935973141,
  "executionTime": 187
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:39:33,329][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:39:33,329][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:39:33,330][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:39:33,331][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.JavaMultiFieldMergeTests",
  "startTimestamp": 1473935972226,
  "executionTime": 1112
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.shard.NewPathForShardTests",
   "displayName": "org.elasticsearch.index.shard.NewPathForShardTests",
   "methodName": null,
   "className": "org.elasticsearch.index.shard.NewPathForShardTests",
   "children": [
    {
     "id": "ID#testSelectNewPathForShard(org.elasticsearch.index.shard.NewPathForShardTests)",
     "displayName": "testSelectNewPathForShard(org.elasticsearch.index.shard.NewPathForShardTests)",
     "methodName": "testSelectNewPathForShard",
     "className": "org.elasticsearch.index.shard.NewPathForShardTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935973385
 }
]

[
 "TEST_STARTED",
 "ID#testSelectNewPathForShard(org.elasticsearch.index.shard.NewPathForShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:33,468][INFO ][org.elasticsearch.env    ] [94II9nc] using [2] data paths, mounts [[mocka, mockb]], net usable_space [0b], net total_space [0b], spins? [unknown], types [mock]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:39:33,469][INFO ][org.elasticsearch.env    ] [94II9nc] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSelectNewPathForShard(org.elasticsearch.index.shard.NewPathForShardTests)",
  "startTimestamp": 1473935973403,
  "executionTime": 76
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.shard.NewPathForShardTests",
  "startTimestamp": 1473935973385,
  "executionTime": 103
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.IndicesRequestCacheTests",
   "displayName": "org.elasticsearch.indices.IndicesRequestCacheTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.IndicesRequestCacheTests",
   "children": [
    {
     "id": "ID#testEviction(org.elasticsearch.indices.IndicesRequestCacheTests)",
     "displayName": "testEviction(org.elasticsearch.indices.IndicesRequestCacheTests)",
     "methodName": "testEviction",
     "className": "org.elasticsearch.indices.IndicesRequestCacheTests",
     "children": []
    },
    {
     "id": "ID#testClearAllEntityIdentity(org.elasticsearch.indices.IndicesRequestCacheTests)",
     "displayName": "testClearAllEntityIdentity(org.elasticsearch.indices.IndicesRequestCacheTests)",
     "methodName": "testClearAllEntityIdentity",
     "className": "org.elasticsearch.indices.IndicesRequestCacheTests",
     "children": []
    },
    {
     "id": "ID#testCacheDifferentReaders(org.elasticsearch.indices.IndicesRequestCacheTests)",
     "displayName": "testCacheDifferentReaders(org.elasticsearch.indices.IndicesRequestCacheTests)",
     "methodName": "testCacheDifferentReaders",
     "className": "org.elasticsearch.indices.IndicesRequestCacheTests",
     "children": []
    },
    {
     "id": "ID#testBasicOperationsCache(org.elasticsearch.indices.IndicesRequestCacheTests)",
     "displayName": "testBasicOperationsCache(org.elasticsearch.indices.IndicesRequestCacheTests)",
     "methodName": "testBasicOperationsCache",
     "className": "org.elasticsearch.indices.IndicesRequestCacheTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935973533
 }
]

[
 "TEST_STARTED",
 "ID#testEviction(org.elasticsearch.indices.IndicesRequestCacheTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:09:33,890][INFO ][org.elasticsearch.indices] [node_s_0] Memory size: 1.2kb%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEviction(org.elasticsearch.indices.IndicesRequestCacheTests)",
  "startTimestamp": 1473935973550,
  "executionTime": 406
 }
]

[
 "TEST_STARTED",
 "ID#testClearAllEntityIdentity(org.elasticsearch.indices.IndicesRequestCacheTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:09:33,981][INFO ][org.elasticsearch.indices] [node_s_0] Memory size: 1.2kb%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClearAllEntityIdentity(org.elasticsearch.indices.IndicesRequestCacheTests)",
  "startTimestamp": 1473935973956,
  "executionTime": 47
 }
]

[
 "TEST_STARTED",
 "ID#testCacheDifferentReaders(org.elasticsearch.indices.IndicesRequestCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCacheDifferentReaders(org.elasticsearch.indices.IndicesRequestCacheTests)",
  "startTimestamp": 1473935974003,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testBasicOperationsCache(org.elasticsearch.indices.IndicesRequestCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicOperationsCache(org.elasticsearch.indices.IndicesRequestCacheTests)",
  "startTimestamp": 1473935974031,
  "executionTime": 16
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.IndicesRequestCacheTests",
  "startTimestamp": 1473935973533,
  "executionTime": 516
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.concurrent.CountDownTests",
   "displayName": "org.elasticsearch.common.util.concurrent.CountDownTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.concurrent.CountDownTests",
   "children": [
    {
     "id": "ID#testSingleThreaded(org.elasticsearch.common.util.concurrent.CountDownTests)",
     "displayName": "testSingleThreaded(org.elasticsearch.common.util.concurrent.CountDownTests)",
     "methodName": "testSingleThreaded",
     "className": "org.elasticsearch.common.util.concurrent.CountDownTests",
     "children": []
    },
    {
     "id": "ID#testConcurrent(org.elasticsearch.common.util.concurrent.CountDownTests)",
     "displayName": "testConcurrent(org.elasticsearch.common.util.concurrent.CountDownTests)",
     "methodName": "testConcurrent",
     "className": "org.elasticsearch.common.util.concurrent.CountDownTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935974076
 }
]

[
 "TEST_STARTED",
 "ID#testSingleThreaded(org.elasticsearch.common.util.concurrent.CountDownTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleThreaded(org.elasticsearch.common.util.concurrent.CountDownTests)",
  "startTimestamp": 1473935974101,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConcurrent(org.elasticsearch.common.util.concurrent.CountDownTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcurrent(org.elasticsearch.common.util.concurrent.CountDownTests)",
  "startTimestamp": 1473935974103,
  "executionTime": 32
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.concurrent.CountDownTests",
  "startTimestamp": 1473935974076,
  "executionTime": 61
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.update.UpdateRequestTests",
   "displayName": "org.elasticsearch.action.update.UpdateRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.update.UpdateRequestTests",
   "children": [
    {
     "id": "ID#testUpdateRequestWithTTL(org.elasticsearch.action.update.UpdateRequestTests)",
     "displayName": "testUpdateRequestWithTTL(org.elasticsearch.action.update.UpdateRequestTests)",
     "methodName": "testUpdateRequestWithTTL",
     "className": "org.elasticsearch.action.update.UpdateRequestTests",
     "children": []
    },
    {
     "id": "ID#testUpdateRequest(org.elasticsearch.action.update.UpdateRequestTests)",
     "displayName": "testUpdateRequest(org.elasticsearch.action.update.UpdateRequestTests)",
     "methodName": "testUpdateRequest",
     "className": "org.elasticsearch.action.update.UpdateRequestTests",
     "children": []
    },
    {
     "id": "ID#testInvalidBodyThrowsParseException(org.elasticsearch.action.update.UpdateRequestTests)",
     "displayName": "testInvalidBodyThrowsParseException(org.elasticsearch.action.update.UpdateRequestTests)",
     "methodName": "testInvalidBodyThrowsParseException",
     "className": "org.elasticsearch.action.update.UpdateRequestTests",
     "children": []
    },
    {
     "id": "ID#testFieldsParsing(org.elasticsearch.action.update.UpdateRequestTests)",
     "displayName": "testFieldsParsing(org.elasticsearch.action.update.UpdateRequestTests)",
     "methodName": "testFieldsParsing",
     "className": "org.elasticsearch.action.update.UpdateRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935974167
 }
]

[
 "TEST_STARTED",
 "ID#testUpdateRequestWithTTL(org.elasticsearch.action.update.UpdateRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdateRequestWithTTL(org.elasticsearch.action.update.UpdateRequestTests)",
  "startTimestamp": 1473935974185,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUpdateRequest(org.elasticsearch.action.update.UpdateRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdateRequest(org.elasticsearch.action.update.UpdateRequestTests)",
  "startTimestamp": 1473935974189,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidBodyThrowsParseException(org.elasticsearch.action.update.UpdateRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidBodyThrowsParseException(org.elasticsearch.action.update.UpdateRequestTests)",
  "startTimestamp": 1473935974191,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFieldsParsing(org.elasticsearch.action.update.UpdateRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldsParsing(org.elasticsearch.action.update.UpdateRequestTests)",
  "startTimestamp": 1473935974193,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.update.UpdateRequestTests",
  "startTimestamp": 1473935974167,
  "executionTime": 34
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.store.IndexStoreTests",
   "displayName": "org.elasticsearch.index.store.IndexStoreTests",
   "methodName": null,
   "className": "org.elasticsearch.index.store.IndexStoreTests",
   "children": [
    {
     "id": "ID#testUpdateThrottleType(org.elasticsearch.index.store.IndexStoreTests)",
     "displayName": "testUpdateThrottleType(org.elasticsearch.index.store.IndexStoreTests)",
     "methodName": "testUpdateThrottleType",
     "className": "org.elasticsearch.index.store.IndexStoreTests",
     "children": []
    },
    {
     "id": "ID#testStoreDirectory(org.elasticsearch.index.store.IndexStoreTests)",
     "displayName": "testStoreDirectory(org.elasticsearch.index.store.IndexStoreTests)",
     "methodName": "testStoreDirectory",
     "className": "org.elasticsearch.index.store.IndexStoreTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935974227
 }
]

[
 "TEST_STARTED",
 "ID#testUpdateThrottleType(org.elasticsearch.index.store.IndexStoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdateThrottleType(org.elasticsearch.index.store.IndexStoreTests)",
  "startTimestamp": 1473935974245,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testStoreDirectory(org.elasticsearch.index.store.IndexStoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStoreDirectory(org.elasticsearch.index.store.IndexStoreTests)",
  "startTimestamp": 1473935974248,
  "executionTime": 36
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.store.IndexStoreTests",
  "startTimestamp": 1473935974227,
  "executionTime": 61
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.bootstrap.JNANativesTests",
   "displayName": "org.elasticsearch.bootstrap.JNANativesTests",
   "methodName": null,
   "className": "org.elasticsearch.bootstrap.JNANativesTests",
   "children": [
    {
     "id": "ID#testMlockall(org.elasticsearch.bootstrap.JNANativesTests)",
     "displayName": "testMlockall(org.elasticsearch.bootstrap.JNANativesTests)",
     "methodName": "testMlockall",
     "className": "org.elasticsearch.bootstrap.JNANativesTests",
     "children": []
    },
    {
     "id": "ID#testConsoleCtrlHandler(org.elasticsearch.bootstrap.JNANativesTests)",
     "displayName": "testConsoleCtrlHandler(org.elasticsearch.bootstrap.JNANativesTests)",
     "methodName": "testConsoleCtrlHandler",
     "className": "org.elasticsearch.bootstrap.JNANativesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935974316
 }
]

[
 "TEST_STARTED",
 "ID#testMlockall(org.elasticsearch.bootstrap.JNANativesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMlockall(org.elasticsearch.bootstrap.JNANativesTests)",
  "startTimestamp": 1473935974337,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConsoleCtrlHandler(org.elasticsearch.bootstrap.JNANativesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConsoleCtrlHandler(org.elasticsearch.bootstrap.JNANativesTests)",
  "startTimestamp": 1473935974339,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.bootstrap.JNANativesTests",
  "startTimestamp": 1473935974316,
  "executionTime": 28
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
   "displayName": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
   "methodName": null,
   "className": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
   "children": [
    {
     "id": "ID#testBreakOnCustomSeparator(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "displayName": "testBreakOnCustomSeparator(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "methodName": "testBreakOnCustomSeparator",
     "className": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
     "children": []
    },
    {
     "id": "ID#testSliceStart(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "displayName": "testSliceStart(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "methodName": "testSliceStart",
     "className": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
     "children": []
    },
    {
     "id": "ID#testFirstPosition(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "displayName": "testFirstPosition(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "methodName": "testFirstPosition",
     "className": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
     "children": []
    },
    {
     "id": "ID#testSliceMiddle(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "displayName": "testSliceMiddle(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "methodName": "testSliceMiddle",
     "className": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
     "children": []
    },
    {
     "id": "ID#testSingleSentences(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "displayName": "testSingleSentences(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "methodName": "testSingleSentences",
     "className": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
     "children": []
    },
    {
     "id": "ID#testSliceEnd(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "displayName": "testSliceEnd(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "methodName": "testSliceEnd",
     "className": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935974564
 }
]

[
 "TEST_STARTED",
 "ID#testBreakOnCustomSeparator(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBreakOnCustomSeparator(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
  "startTimestamp": 1473935974589,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSliceStart(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceStart(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
  "startTimestamp": 1473935974592,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFirstPosition(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFirstPosition(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
  "startTimestamp": 1473935974596,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSliceMiddle(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceMiddle(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
  "startTimestamp": 1473935974598,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSingleSentences(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleSentences(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
  "startTimestamp": 1473935974600,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSliceEnd(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceEnd(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
  "startTimestamp": 1473935974602,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
  "startTimestamp": 1473935974564,
  "executionTime": 42
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.apache.lucene.util.SloppyMathTests",
   "displayName": "org.apache.lucene.util.SloppyMathTests",
   "methodName": null,
   "className": "org.apache.lucene.util.SloppyMathTests",
   "children": [
    {
     "id": "ID#testSloppyMath(org.apache.lucene.util.SloppyMathTests)",
     "displayName": "testSloppyMath(org.apache.lucene.util.SloppyMathTests)",
     "methodName": "testSloppyMath",
     "className": "org.apache.lucene.util.SloppyMathTests",
     "children": []
    },
    {
     "id": "ID#testAccuracy(org.apache.lucene.util.SloppyMathTests)",
     "displayName": "testAccuracy(org.apache.lucene.util.SloppyMathTests)",
     "methodName": "testAccuracy",
     "className": "org.apache.lucene.util.SloppyMathTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935974812
 }
]

[
 "TEST_STARTED",
 "ID#testSloppyMath(org.apache.lucene.util.SloppyMathTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:39:34,837][INFO ][org.elasticsearch.org.apache.lucene.util.SloppyMathTests] testing SloppyMath with m at \"33.400328907674066, -135.79880373812787\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:39:34,852][INFO ][org.elasticsearch.org.apache.lucene.util.SloppyMathTests] testing SloppyMath with km at \"-12.412694963763158, -27.390849073859084\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:39:34,856][INFO ][org.elasticsearch.org.apache.lucene.util.SloppyMathTests] testing SloppyMath with in at \"-68.09851591071302, -83.44348876528989\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T19:39:34,859][INFO ][org.elasticsearch.org.apache.lucene.util.SloppyMathTests] testing SloppyMath with mi at \"-7.366752101584294, 91.33262796924686\"%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSloppyMath(org.apache.lucene.util.SloppyMathTests)",
  "startTimestamp": 1473935974835,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testAccuracy(org.apache.lucene.util.SloppyMathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAccuracy(org.apache.lucene.util.SloppyMathTests)",
  "startTimestamp": 1473935974862,
  "executionTime": 534
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.apache.lucene.util.SloppyMathTests",
  "startTimestamp": 1473935974812,
  "executionTime": 586
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.BuildTests",
   "displayName": "org.elasticsearch.BuildTests",
   "methodName": null,
   "className": "org.elasticsearch.BuildTests",
   "children": [
    {
     "id": "ID#testJarMetadata(org.elasticsearch.BuildTests)",
     "displayName": "testJarMetadata(org.elasticsearch.BuildTests)",
     "methodName": "testJarMetadata",
     "className": "org.elasticsearch.BuildTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashCode(org.elasticsearch.BuildTests)",
     "displayName": "testEqualsAndHashCode(org.elasticsearch.BuildTests)",
     "methodName": "testEqualsAndHashCode",
     "className": "org.elasticsearch.BuildTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935975586
 }
]

[
 "TEST_STARTED",
 "ID#testJarMetadata(org.elasticsearch.BuildTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testJarMetadata(org.elasticsearch.BuildTests)",
  "startTimestamp": 1473935975606,
  "executionTime": 112
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashCode(org.elasticsearch.BuildTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashCode(org.elasticsearch.BuildTests)",
  "startTimestamp": 1473935975718,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.BuildTests",
  "startTimestamp": 1473935975586,
  "executionTime": 136
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
   "displayName": "org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
   "children": [
    {
     "id": "ID#testCancellingTasksThatDontSupportCancellation(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "displayName": "testCancellingTasksThatDontSupportCancellation(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "methodName": "testCancellingTasksThatDontSupportCancellation",
     "className": "org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
     "children": []
    },
    {
     "id": "ID#testTasksToXContentGrouping(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "displayName": "testTasksToXContentGrouping(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "methodName": "testTasksToXContentGrouping",
     "className": "org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
     "children": []
    },
    {
     "id": "ID#testFindChildTasks(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "displayName": "testFindChildTasks(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "methodName": "testFindChildTasks",
     "className": "org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
     "children": []
    },
    {
     "id": "ID#testTaskNodeFiltering(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "displayName": "testTaskNodeFiltering(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "methodName": "testTaskNodeFiltering",
     "className": "org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
     "children": []
    },
    {
     "id": "ID#testTaskManagementOptOut(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "displayName": "testTaskManagementOptOut(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "methodName": "testTaskManagementOptOut",
     "className": "org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
     "children": []
    },
    {
     "id": "ID#testTaskLevelActionFailures(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "displayName": "testTaskLevelActionFailures(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "methodName": "testTaskLevelActionFailures",
     "className": "org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
     "children": []
    },
    {
     "id": "ID#testFailedTasksCount(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "displayName": "testFailedTasksCount(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "methodName": "testFailedTasksCount",
     "className": "org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
     "children": []
    },
    {
     "id": "ID#testTasksDescriptions(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "displayName": "testTasksDescriptions(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "methodName": "testTasksDescriptions",
     "className": "org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
     "children": []
    },
    {
     "id": "ID#testRunningTasksCount(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "displayName": "testRunningTasksCount(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
     "methodName": "testRunningTasksCount",
     "className": "org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935975958
 }
]

[
 "TEST_STARTED",
 "ID#testCancellingTasksThatDontSupportCancellation(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:35,993][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{eyqriOg-T7m7r5AV_Ws3Ig}{local}{local[322]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:35,996][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[71]}, bound_addresses {local[71]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,000][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{apLvmuKPQH2NAkufFDfuMA}{local}{local[323]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,002][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[72]}, bound_addresses {local[72]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,007][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{7BAVV6YgQrq5FAWy3EF9xw}{local}{local[324]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,009][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[73]}, bound_addresses {local[73]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,012][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{uLMVoSd_RGu15shUm52rRA}{local}{local[325]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,013][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[74]}, bound_addresses {local[74]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,016][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{xZoVH-YdSO-21SruGQjFDg}{local}{local[326]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,017][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[75]}, bound_addresses {local[75]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,021][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{8xmbTB8cT2Ozz3OKggk9Nw}{local}{local[327]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,023][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[76]}, bound_addresses {local[76]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,026][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{G3euZPPuSP2WatNL774QMw}{local}{local[328]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,028][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[77]}, bound_addresses {local[77]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,031][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{70t3CoO_TvaQJpj-nPEezg}{local}{local[329]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,032][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[78]}, bound_addresses {local[78]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,036][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{qOllORqPTuin6Nj9NgWOgw}{local}{local[330]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,037][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[79]}, bound_addresses {local[79]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,038][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{8hhiEXP7Qnus3f8t8xt_Cw}{local}{local[71]}, previous {node}{eyqriOg-T7m7r5AV_Ws3Ig}{local}{local[322]}}, removed {{node}{eyqriOg-T7m7r5AV_Ws3Ig}{local}{local[322]},}, added {{node1}{G-2eQiiJTuOdL6Y_PBHouQ}{local}{local[72]},{node6}{WT5-9e01SWG86WR1IrpiZQ}{local}{local[77]},{node3}{hby0jlVdQw67RsjJC95a1A}{local}{local[74]},{node7}{2AT0SN-2SayaN1BLufHjuw}{local}{local[78]},{node8}{YIgNl3YyT-CnBRrEza9lvA}{local}{local[79]},{node4}{ZyipqTTmQQu0DkThSggowQ}{local}{local[75]},{node2}{zqEPJTNARDu-ucLrXUgpsw}{local}{local[73]},{node5}{WXIg1T8ORFWsDo_WzUTypQ}{local}{local[76]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,039][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{8hhiEXP7Qnus3f8t8xt_Cw}{local}{local[71]}, previous {node}{apLvmuKPQH2NAkufFDfuMA}{local}{local[323]}}, removed {{node}{apLvmuKPQH2NAkufFDfuMA}{local}{local[323]},}, added {{node4}{ZyipqTTmQQu0DkThSggowQ}{local}{local[75]},{node6}{WT5-9e01SWG86WR1IrpiZQ}{local}{local[77]},{node7}{2AT0SN-2SayaN1BLufHjuw}{local}{local[78]},{node8}{YIgNl3YyT-CnBRrEza9lvA}{local}{local[79]},{node5}{WXIg1T8ORFWsDo_WzUTypQ}{local}{local[76]},{node3}{hby0jlVdQw67RsjJC95a1A}{local}{local[74]},{node0}{8hhiEXP7Qnus3f8t8xt_Cw}{local}{local[71]},{node2}{zqEPJTNARDu-ucLrXUgpsw}{local}{local[73]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,040][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{8hhiEXP7Qnus3f8t8xt_Cw}{local}{local[71]}, previous {node}{7BAVV6YgQrq5FAWy3EF9xw}{local}{local[324]}}, removed {{node}{7BAVV6YgQrq5FAWy3EF9xw}{local}{local[324]},}, added {{node4}{ZyipqTTmQQu0DkThSggowQ}{local}{local[75]},{node3}{hby0jlVdQw67RsjJC95a1A}{local}{local[74]},{node1}{G-2eQiiJTuOdL6Y_PBHouQ}{local}{local[72]},{node0}{8hhiEXP7Qnus3f8t8xt_Cw}{local}{local[71]},{node8}{YIgNl3YyT-CnBRrEza9lvA}{local}{local[79]},{node6}{WT5-9e01SWG86WR1IrpiZQ}{local}{local[77]},{node7}{2AT0SN-2SayaN1BLufHjuw}{local}{local[78]},{node5}{WXIg1T8ORFWsDo_WzUTypQ}{local}{local[76]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,040][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{8hhiEXP7Qnus3f8t8xt_Cw}{local}{local[71]}, previous {node}{uLMVoSd_RGu15shUm52rRA}{local}{local[325]}}, removed {{node}{uLMVoSd_RGu15shUm52rRA}{local}{local[325]},}, added {{node6}{WT5-9e01SWG86WR1IrpiZQ}{local}{local[77]},{node1}{G-2eQiiJTuOdL6Y_PBHouQ}{local}{local[72]},{node8}{YIgNl3YyT-CnBRrEza9lvA}{local}{local[79]},{node7}{2AT0SN-2SayaN1BLufHjuw}{local}{local[78]},{node5}{WXIg1T8ORFWsDo_WzUTypQ}{local}{local[76]},{node4}{ZyipqTTmQQu0DkThSggowQ}{local}{local[75]},{node0}{8hhiEXP7Qnus3f8t8xt_Cw}{local}{local[71]},{node2}{zqEPJTNARDu-ucLrXUgpsw}{local}{local[73]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,041][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{8hhiEXP7Qnus3f8t8xt_Cw}{local}{local[71]}, previous {node}{xZoVH-YdSO-21SruGQjFDg}{local}{local[326]}}, removed {{node}{xZoVH-YdSO-21SruGQjFDg}{local}{local[326]},}, added {{node7}{2AT0SN-2SayaN1BLufHjuw}{local}{local[78]},{node3}{hby0jlVdQw67RsjJC95a1A}{local}{local[74]},{node8}{YIgNl3YyT-CnBRrEza9lvA}{local}{local[79]},{node6}{WT5-9e01SWG86WR1IrpiZQ}{local}{local[77]},{node2}{zqEPJTNARDu-ucLrXUgpsw}{local}{local[73]},{node0}{8hhiEXP7Qnus3f8t8xt_Cw}{local}{local[71]},{node1}{G-2eQiiJTuOdL6Y_PBHouQ}{local}{local[72]},{node5}{WXIg1T8ORFWsDo_WzUTypQ}{local}{local[76]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,041][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{8hhiEXP7Qnus3f8t8xt_Cw}{local}{local[71]}, previous {node}{8xmbTB8cT2Ozz3OKggk9Nw}{local}{local[327]}}, removed {{node}{8xmbTB8cT2Ozz3OKggk9Nw}{local}{local[327]},}, added {{node8}{YIgNl3YyT-CnBRrEza9lvA}{local}{local[79]},{node2}{zqEPJTNARDu-ucLrXUgpsw}{local}{local[73]},{node3}{hby0jlVdQw67RsjJC95a1A}{local}{local[74]},{node4}{ZyipqTTmQQu0DkThSggowQ}{local}{local[75]},{node0}{8hhiEXP7Qnus3f8t8xt_Cw}{local}{local[71]},{node6}{WT5-9e01SWG86WR1IrpiZQ}{local}{local[77]},{node1}{G-2eQiiJTuOdL6Y_PBHouQ}{local}{local[72]},{node7}{2AT0SN-2SayaN1BLufHjuw}{local}{local[78]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,042][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{8hhiEXP7Qnus3f8t8xt_Cw}{local}{local[71]}, previous {node}{G3euZPPuSP2WatNL774QMw}{local}{local[328]}}, removed {{node}{G3euZPPuSP2WatNL774QMw}{local}{local[328]},}, added {{node8}{YIgNl3YyT-CnBRrEza9lvA}{local}{local[79]},{node4}{ZyipqTTmQQu0DkThSggowQ}{local}{local[75]},{node5}{WXIg1T8ORFWsDo_WzUTypQ}{local}{local[76]},{node7}{2AT0SN-2SayaN1BLufHjuw}{local}{local[78]},{node3}{hby0jlVdQw67RsjJC95a1A}{local}{local[74]},{node2}{zqEPJTNARDu-ucLrXUgpsw}{local}{local[73]},{node0}{8hhiEXP7Qnus3f8t8xt_Cw}{local}{local[71]},{node1}{G-2eQiiJTuOdL6Y_PBHouQ}{local}{local[72]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,042][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{8hhiEXP7Qnus3f8t8xt_Cw}{local}{local[71]}, previous {node}{70t3CoO_TvaQJpj-nPEezg}{local}{local[329]}}, removed {{node}{70t3CoO_TvaQJpj-nPEezg}{local}{local[329]},}, added {{node5}{WXIg1T8ORFWsDo_WzUTypQ}{local}{local[76]},{node4}{ZyipqTTmQQu0DkThSggowQ}{local}{local[75]},{node2}{zqEPJTNARDu-ucLrXUgpsw}{local}{local[73]},{node1}{G-2eQiiJTuOdL6Y_PBHouQ}{local}{local[72]},{node3}{hby0jlVdQw67RsjJC95a1A}{local}{local[74]},{node6}{WT5-9e01SWG86WR1IrpiZQ}{local}{local[77]},{node0}{8hhiEXP7Qnus3f8t8xt_Cw}{local}{local[71]},{node8}{YIgNl3YyT-CnBRrEza9lvA}{local}{local[79]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,043][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{8hhiEXP7Qnus3f8t8xt_Cw}{local}{local[71]}, previous {node}{qOllORqPTuin6Nj9NgWOgw}{local}{local[330]}}, removed {{node}{qOllORqPTuin6Nj9NgWOgw}{local}{local[330]},}, added {{node4}{ZyipqTTmQQu0DkThSggowQ}{local}{local[75]},{node2}{zqEPJTNARDu-ucLrXUgpsw}{local}{local[73]},{node3}{hby0jlVdQw67RsjJC95a1A}{local}{local[74]},{node5}{WXIg1T8ORFWsDo_WzUTypQ}{local}{local[76]},{node6}{WT5-9e01SWG86WR1IrpiZQ}{local}{local[77]},{node0}{8hhiEXP7Qnus3f8t8xt_Cw}{local}{local[71]},{node1}{G-2eQiiJTuOdL6Y_PBHouQ}{local}{local[72]},{node7}{2AT0SN-2SayaN1BLufHjuw}{local}{local[78]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,195][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Awaiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,214][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 7%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,214][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,214][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 6%0D%0A[2016-09-15T21:39:36,214][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 5%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,214][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,214][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 8%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,214][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,214][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,215][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,215][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Done waiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,324][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 4 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,324][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 6 finished%0D%0A[2016-09-15T21:39:36,324][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 7 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,324][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,324][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,324][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 5 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,324][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,324][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,324][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 8 finished%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCancellingTasksThatDontSupportCancellation(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
  "startTimestamp": 1473935975981,
  "executionTime": 347
 }
]

[
 "TEST_STARTED",
 "ID#testTasksToXContentGrouping(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,346][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{kpXt0R8eQ5G8UauxAoTC1w}{local}{local[331]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,347][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[80]}, bound_addresses {local[80]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,350][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{OAsUPdxlQoeyePuZ3FXyKQ}{local}{local[332]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,352][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[81]}, bound_addresses {local[81]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,355][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{ulPfnQ9tQCuHMNmR6EV66w}{local}{local[333]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,357][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[82]}, bound_addresses {local[82]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,358][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{tbqGiHsjStSLUGqmY4CaBw}{local}{local[80]}, previous {node}{kpXt0R8eQ5G8UauxAoTC1w}{local}{local[331]}}, removed {{node}{kpXt0R8eQ5G8UauxAoTC1w}{local}{local[331]},}, added {{node1}{oSgF0IEUT6OCxNjVMQSewg}{local}{local[81]},{node2}{Os8WQ5fbTjqmoq9xAnlXjQ}{local}{local[82]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,359][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{tbqGiHsjStSLUGqmY4CaBw}{local}{local[80]}, previous {node}{OAsUPdxlQoeyePuZ3FXyKQ}{local}{local[332]}}, removed {{node}{OAsUPdxlQoeyePuZ3FXyKQ}{local}{local[332]},}, added {{node2}{Os8WQ5fbTjqmoq9xAnlXjQ}{local}{local[82]},{node0}{tbqGiHsjStSLUGqmY4CaBw}{local}{local[80]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,359][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{tbqGiHsjStSLUGqmY4CaBw}{local}{local[80]}, previous {node}{ulPfnQ9tQCuHMNmR6EV66w}{local}{local[333]}}, removed {{node}{ulPfnQ9tQCuHMNmR6EV66w}{local}{local[333]},}, added {{node1}{oSgF0IEUT6OCxNjVMQSewg}{local}{local[81]},{node0}{tbqGiHsjStSLUGqmY4CaBw}{local}{local[80]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,362][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] {\"nodes\":{\"node2\":{\"name\":\"\",\"transport_address\":\"local[82]\",\"host\":\"local\",\"ip\":\"local[82]\",\"roles\":[],\"tasks\":{\"node2:1\":{\"node\":\"node2\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1473935976361,\"running_time_in_nanos\":28225,\"cancellable\":false,\"parent_task_id\":\"node0:1\"}}},\"node0\":{\"name\":\"\",\"transport_address\":\"local[80]\",\"host\":\"local\",\"ip\":\"local[80]\",\"roles\":[],\"tasks\":{\"node0:1\":{\"node\":\"node0\",\"id\":1,\"type\":\"transport\",\"action\":\"cluster:monitor/tasks/lists\",\"start_time_in_millis\":1473935976360,\"running_time_in_nanos\":1120283,\"cancellable\":false},\"node0:2\":{\"node\":\"node0\",\"id\":2,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1473935976361,\"running_time_in_nanos\":28738,\"cancellable\":false,\"parent_task_id\":\"node0:1\"}}},\"node1\":{\"name\":\"\",\"transport_address\":\"local[81]\",\"host\":\"local\",\"ip\":\"local[81]\",\"roles\":[],\"tasks\":{\"node1:1\":{\"node\":\"node1\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1473935976360,\"running_time_in_nanos\":38489,\"cancellable\":false,\"parent_task_id\":\"node0:1\"}}}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,394][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] {\"tasks\":{\"node0:1\":{\"node\":\"node0\",\"id\":1,\"type\":\"transport\",\"action\":\"cluster:monitor/tasks/lists\",\"start_time_in_millis\":1473935976360,\"running_time_in_nanos\":1120283,\"cancellable\":false,\"children\":[{\"node\":\"node2\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1473935976361,\"running_time_in_nanos\":28225,\"cancellable\":false,\"parent_task_id\":\"node0:1\"},{\"node\":\"node1\",\"id\":1,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1473935976360,\"running_time_in_nanos\":38489,\"cancellable\":false,\"parent_task_id\":\"node0:1\"},{\"node\":\"node0\",\"id\":2,\"type\":\"local\",\"action\":\"cluster:monitor/tasks/lists[n]\",\"start_time_in_millis\":1473935976361,\"running_time_in_nanos\":28738,\"cancellable\":false,\"parent_task_id\":\"node0:1\"}]}}}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTasksToXContentGrouping(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
  "startTimestamp": 1473935976328,
  "executionTime": 68
 }
]

[
 "TEST_STARTED",
 "ID#testFindChildTasks(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,414][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{HRZc-NLfSguxEz3_aOI6vQ}{local}{local[334]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,415][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[83]}, bound_addresses {local[83]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,420][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{FlHzVOm7SgigQBQ4P_ehMQ}{local}{local[335]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,422][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[84]}, bound_addresses {local[84]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,425][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{qHFYFccsRJK9XysGhJt3dw}{local}{local[336]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,427][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[85]}, bound_addresses {local[85]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,428][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{d6MI24IuRD2pxC07trgKpw}{local}{local[83]}, previous {node}{HRZc-NLfSguxEz3_aOI6vQ}{local}{local[334]}}, removed {{node}{HRZc-NLfSguxEz3_aOI6vQ}{local}{local[334]},}, added {{node1}{xwKmltNORwWD63ximfW8_A}{local}{local[84]},{node2}{orqQdls5RH-lsKZ8LXEqPw}{local}{local[85]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,429][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{d6MI24IuRD2pxC07trgKpw}{local}{local[83]}, previous {node}{FlHzVOm7SgigQBQ4P_ehMQ}{local}{local[335]}}, removed {{node}{FlHzVOm7SgigQBQ4P_ehMQ}{local}{local[335]},}, added {{node2}{orqQdls5RH-lsKZ8LXEqPw}{local}{local[85]},{node0}{d6MI24IuRD2pxC07trgKpw}{local}{local[83]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,429][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{d6MI24IuRD2pxC07trgKpw}{local}{local[83]}, previous {node}{qHFYFccsRJK9XysGhJt3dw}{local}{local[336]}}, removed {{node}{qHFYFccsRJK9XysGhJt3dw}{local}{local[336]},}, added {{node1}{xwKmltNORwWD63ximfW8_A}{local}{local[84]},{node0}{d6MI24IuRD2pxC07trgKpw}{local}{local[83]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,433][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Awaiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,433][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,433][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,433][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,433][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Done waiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,444][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0 finished%0D%0A[2016-09-15T21:39:36,444][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,444][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1 finished%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFindChildTasks(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
  "startTimestamp": 1473935976396,
  "executionTime": 49
 }
]

[
 "TEST_STARTED",
 "ID#testTaskNodeFiltering(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,467][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{uppe2TeSTCqfN3c8Q4kIaw}{local}{local[337]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,468][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[86]}, bound_addresses {local[86]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,475][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{SA-5qCEzS6SKfMzf3IZOHA}{local}{local[338]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,476][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[87]}, bound_addresses {local[87]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,477][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{42IufkR_TY2ZuynIK6H1ow}{local}{local[86]}, previous {node}{uppe2TeSTCqfN3c8Q4kIaw}{local}{local[337]}}, removed {{node}{uppe2TeSTCqfN3c8Q4kIaw}{local}{local[337]},}, added {{node1}{jUUxo-c5SkGzCbQgINBdbg}{local}{local[87]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,478][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{42IufkR_TY2ZuynIK6H1ow}{local}{local[86]}, previous {node}{SA-5qCEzS6SKfMzf3IZOHA}{local}{local[338]}}, removed {{node}{SA-5qCEzS6SKfMzf3IZOHA}{local}{local[338]},}, added {{node0}{42IufkR_TY2ZuynIK6H1ow}{local}{local[86]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,480][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Awaiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,480][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,481][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,481][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Done waiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,481][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Filtering out nodes [] size: 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,556][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,556][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1 finished%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTaskNodeFiltering(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
  "startTimestamp": 1473935976445,
  "executionTime": 113
 }
]

[
 "TEST_STARTED",
 "ID#testTaskManagementOptOut(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,578][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{8odSZZGuSBabe5Zup6IpRw}{local}{local[339]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,580][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[88]}, bound_addresses {local[88]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,583][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{4PAwTV8nR7GnVEgAnKt5Zg}{local}{local[340]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,585][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[89]}, bound_addresses {local[89]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,588][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{D83q9SemSmKl3KTySzgbyw}{local}{local[341]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,597][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[90]}, bound_addresses {local[90]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,610][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{YF8ywLf0Rh2D1I7z6Khkew}{local}{local[342]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,612][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[91]}, bound_addresses {local[91]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,613][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{UYBnWt0TRzKRfOZGJOIycw}{local}{local[88]}, previous {node}{8odSZZGuSBabe5Zup6IpRw}{local}{local[339]}}, removed {{node}{8odSZZGuSBabe5Zup6IpRw}{local}{local[339]},}, added {{node1}{YuObXF9cQBa-Fg29CXFNBw}{local}{local[89]},{node2}{yQ_VvyBITVixz8UrXLoZNg}{local}{local[90]},{node3}{-4WJS6Z-QB2S0FUwoOnvGg}{local}{local[91]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,613][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{UYBnWt0TRzKRfOZGJOIycw}{local}{local[88]}, previous {node}{4PAwTV8nR7GnVEgAnKt5Zg}{local}{local[340]}}, removed {{node}{4PAwTV8nR7GnVEgAnKt5Zg}{local}{local[340]},}, added {{node2}{yQ_VvyBITVixz8UrXLoZNg}{local}{local[90]},{node0}{UYBnWt0TRzKRfOZGJOIycw}{local}{local[88]},{node3}{-4WJS6Z-QB2S0FUwoOnvGg}{local}{local[91]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,614][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{UYBnWt0TRzKRfOZGJOIycw}{local}{local[88]}, previous {node}{D83q9SemSmKl3KTySzgbyw}{local}{local[341]}}, removed {{node}{D83q9SemSmKl3KTySzgbyw}{local}{local[341]},}, added {{node1}{YuObXF9cQBa-Fg29CXFNBw}{local}{local[89]},{node0}{UYBnWt0TRzKRfOZGJOIycw}{local}{local[88]},{node3}{-4WJS6Z-QB2S0FUwoOnvGg}{local}{local[91]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,615][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{UYBnWt0TRzKRfOZGJOIycw}{local}{local[88]}, previous {node}{YF8ywLf0Rh2D1I7z6Khkew}{local}{local[342]}}, removed {{node}{YF8ywLf0Rh2D1I7z6Khkew}{local}{local[342]},}, added {{node1}{YuObXF9cQBa-Fg29CXFNBw}{local}{local[89]},{node2}{yQ_VvyBITVixz8UrXLoZNg}{local}{local[90]},{node0}{UYBnWt0TRzKRfOZGJOIycw}{local}{local[88]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,618][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Awaiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,619][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,619][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,620][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,620][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,620][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Done waiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,635][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2 finished%0D%0A[2016-09-15T21:39:36,635][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,635][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,635][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0 finished%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTaskManagementOptOut(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
  "startTimestamp": 1473935976558,
  "executionTime": 79
 }
]

[
 "TEST_STARTED",
 "ID#testTaskLevelActionFailures(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,658][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{o_t99bw0QIa7Z1Y4bPymkg}{local}{local[343]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,660][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[92]}, bound_addresses {local[92]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,663][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{8hFSvKMSQo6MSiEx2wiH1g}{local}{local[344]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,665][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[93]}, bound_addresses {local[93]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,668][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{MecsqHMzRYK1wi9P56Wciw}{local}{local[345]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,670][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[94]}, bound_addresses {local[94]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,673][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{s-OrU6-YT86upXPV0SGqCw}{local}{local[346]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,674][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[95]}, bound_addresses {local[95]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,678][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{326IO6N9TuiBncLF0suI6g}{local}{local[347]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,680][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[96]}, bound_addresses {local[96]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,683][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{u8JPFX-bRimwTT4Nyj-0uA}{local}{local[348]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,685][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[97]}, bound_addresses {local[97]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,688][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{y4s4_5JNRwOuodNzYxD2cQ}{local}{local[349]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,690][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[98]}, bound_addresses {local[98]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,694][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{H9B9E_tMRJW8ymA7zAVOfw}{local}{local[350]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,695][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[99]}, bound_addresses {local[99]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,698][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{kBGuIuNtSVyDkFSFr1ULUA}{local}{local[351]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,700][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[100]}, bound_addresses {local[100]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,701][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{qDJu1_KvRqugmTfGfKsP_Q}{local}{local[92]}, previous {node}{o_t99bw0QIa7Z1Y4bPymkg}{local}{local[343]}}, removed {{node}{o_t99bw0QIa7Z1Y4bPymkg}{local}{local[343]},}, added {{node7}{MGcb3mPkTQehoYJcpj8vZg}{local}{local[99]},{node5}{jJSXbu8tRoWDbgmC4bAVfg}{local}{local[97]},{node3}{HOPPqu_VRj2-xN8LVRYEqA}{local}{local[95]},{node6}{3g65ZyrbR4i0X0kesx61xw}{local}{local[98]},{node4}{vgvKNYGmQSeoABo-t0f5yA}{local}{local[96]},{node8}{naNfzQFRSB-1Il0_N030bg}{local}{local[100]},{node2}{RW8k3Qp5RFm_P_WYzPA3wg}{local}{local[94]},{node1}{m62gOSwbRM2qiqrYDjHPNw}{local}{local[93]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,702][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{qDJu1_KvRqugmTfGfKsP_Q}{local}{local[92]}, previous {node}{8hFSvKMSQo6MSiEx2wiH1g}{local}{local[344]}}, removed {{node}{8hFSvKMSQo6MSiEx2wiH1g}{local}{local[344]},}, added {{node3}{HOPPqu_VRj2-xN8LVRYEqA}{local}{local[95]},{node0}{qDJu1_KvRqugmTfGfKsP_Q}{local}{local[92]},{node6}{3g65ZyrbR4i0X0kesx61xw}{local}{local[98]},{node7}{MGcb3mPkTQehoYJcpj8vZg}{local}{local[99]},{node2}{RW8k3Qp5RFm_P_WYzPA3wg}{local}{local[94]},{node8}{naNfzQFRSB-1Il0_N030bg}{local}{local[100]},{node4}{vgvKNYGmQSeoABo-t0f5yA}{local}{local[96]},{node5}{jJSXbu8tRoWDbgmC4bAVfg}{local}{local[97]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,702][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{qDJu1_KvRqugmTfGfKsP_Q}{local}{local[92]}, previous {node}{MecsqHMzRYK1wi9P56Wciw}{local}{local[345]}}, removed {{node}{MecsqHMzRYK1wi9P56Wciw}{local}{local[345]},}, added {{node4}{vgvKNYGmQSeoABo-t0f5yA}{local}{local[96]},{node3}{HOPPqu_VRj2-xN8LVRYEqA}{local}{local[95]},{node1}{m62gOSwbRM2qiqrYDjHPNw}{local}{local[93]},{node8}{naNfzQFRSB-1Il0_N030bg}{local}{local[100]},{node0}{qDJu1_KvRqugmTfGfKsP_Q}{local}{local[92]},{node5}{jJSXbu8tRoWDbgmC4bAVfg}{local}{local[97]},{node6}{3g65ZyrbR4i0X0kesx61xw}{local}{local[98]},{node7}{MGcb3mPkTQehoYJcpj8vZg}{local}{local[99]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,703][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{qDJu1_KvRqugmTfGfKsP_Q}{local}{local[92]}, previous {node}{s-OrU6-YT86upXPV0SGqCw}{local}{local[346]}}, removed {{node}{s-OrU6-YT86upXPV0SGqCw}{local}{local[346]},}, added {{node5}{jJSXbu8tRoWDbgmC4bAVfg}{local}{local[97]},{node8}{naNfzQFRSB-1Il0_N030bg}{local}{local[100]},{node0}{qDJu1_KvRqugmTfGfKsP_Q}{local}{local[92]},{node2}{RW8k3Qp5RFm_P_WYzPA3wg}{local}{local[94]},{node7}{MGcb3mPkTQehoYJcpj8vZg}{local}{local[99]},{node1}{m62gOSwbRM2qiqrYDjHPNw}{local}{local[93]},{node4}{vgvKNYGmQSeoABo-t0f5yA}{local}{local[96]},{node6}{3g65ZyrbR4i0X0kesx61xw}{local}{local[98]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,704][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{qDJu1_KvRqugmTfGfKsP_Q}{local}{local[92]}, previous {node}{326IO6N9TuiBncLF0suI6g}{local}{local[347]}}, removed {{node}{326IO6N9TuiBncLF0suI6g}{local}{local[347]},}, added {{node0}{qDJu1_KvRqugmTfGfKsP_Q}{local}{local[92]},{node8}{naNfzQFRSB-1Il0_N030bg}{local}{local[100]},{node5}{jJSXbu8tRoWDbgmC4bAVfg}{local}{local[97]},{node1}{m62gOSwbRM2qiqrYDjHPNw}{local}{local[93]},{node7}{MGcb3mPkTQehoYJcpj8vZg}{local}{local[99]},{node3}{HOPPqu_VRj2-xN8LVRYEqA}{local}{local[95]},{node6}{3g65ZyrbR4i0X0kesx61xw}{local}{local[98]},{node2}{RW8k3Qp5RFm_P_WYzPA3wg}{local}{local[94]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,704][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{qDJu1_KvRqugmTfGfKsP_Q}{local}{local[92]}, previous {node}{u8JPFX-bRimwTT4Nyj-0uA}{local}{local[348]}}, removed {{node}{u8JPFX-bRimwTT4Nyj-0uA}{local}{local[348]},}, added {{node0}{qDJu1_KvRqugmTfGfKsP_Q}{local}{local[92]},{node2}{RW8k3Qp5RFm_P_WYzPA3wg}{local}{local[94]},{node7}{MGcb3mPkTQehoYJcpj8vZg}{local}{local[99]},{node8}{naNfzQFRSB-1Il0_N030bg}{local}{local[100]},{node3}{HOPPqu_VRj2-xN8LVRYEqA}{local}{local[95]},{node4}{vgvKNYGmQSeoABo-t0f5yA}{local}{local[96]},{node6}{3g65ZyrbR4i0X0kesx61xw}{local}{local[98]},{node1}{m62gOSwbRM2qiqrYDjHPNw}{local}{local[93]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,705][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{qDJu1_KvRqugmTfGfKsP_Q}{local}{local[92]}, previous {node}{y4s4_5JNRwOuodNzYxD2cQ}{local}{local[349]}}, removed {{node}{y4s4_5JNRwOuodNzYxD2cQ}{local}{local[349]},}, added {{node4}{vgvKNYGmQSeoABo-t0f5yA}{local}{local[96]},{node5}{jJSXbu8tRoWDbgmC4bAVfg}{local}{local[97]},{node7}{MGcb3mPkTQehoYJcpj8vZg}{local}{local[99]},{node2}{RW8k3Qp5RFm_P_WYzPA3wg}{local}{local[94]},{node1}{m62gOSwbRM2qiqrYDjHPNw}{local}{local[93]},{node8}{naNfzQFRSB-1Il0_N030bg}{local}{local[100]},{node0}{qDJu1_KvRqugmTfGfKsP_Q}{local}{local[92]},{node3}{HOPPqu_VRj2-xN8LVRYEqA}{local}{local[95]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,706][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{qDJu1_KvRqugmTfGfKsP_Q}{local}{local[92]}, previous {node}{H9B9E_tMRJW8ymA7zAVOfw}{local}{local[350]}}, removed {{node}{H9B9E_tMRJW8ymA7zAVOfw}{local}{local[350]},}, added {{node4}{vgvKNYGmQSeoABo-t0f5yA}{local}{local[96]},{node2}{RW8k3Qp5RFm_P_WYzPA3wg}{local}{local[94]},{node5}{jJSXbu8tRoWDbgmC4bAVfg}{local}{local[97]},{node6}{3g65ZyrbR4i0X0kesx61xw}{local}{local[98]},{node1}{m62gOSwbRM2qiqrYDjHPNw}{local}{local[93]},{node3}{HOPPqu_VRj2-xN8LVRYEqA}{local}{local[95]},{node0}{qDJu1_KvRqugmTfGfKsP_Q}{local}{local[92]},{node8}{naNfzQFRSB-1Il0_N030bg}{local}{local[100]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,707][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{qDJu1_KvRqugmTfGfKsP_Q}{local}{local[92]}, previous {node}{kBGuIuNtSVyDkFSFr1ULUA}{local}{local[351]}}, removed {{node}{kBGuIuNtSVyDkFSFr1ULUA}{local}{local[351]},}, added {{node5}{jJSXbu8tRoWDbgmC4bAVfg}{local}{local[97]},{node3}{HOPPqu_VRj2-xN8LVRYEqA}{local}{local[95]},{node1}{m62gOSwbRM2qiqrYDjHPNw}{local}{local[93]},{node6}{3g65ZyrbR4i0X0kesx61xw}{local}{local[98]},{node4}{vgvKNYGmQSeoABo-t0f5yA}{local}{local[96]},{node0}{qDJu1_KvRqugmTfGfKsP_Q}{local}{local[92]},{node7}{MGcb3mPkTQehoYJcpj8vZg}{local}{local[99]},{node2}{RW8k3Qp5RFm_P_WYzPA3wg}{local}{local[94]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,714][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Awaiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,715][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 7%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,715][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 5%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,715][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,716][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 6%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,716][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,717][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 8%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,717][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,717][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,718][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,718][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Done waiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,731][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Task action on node 5%0D%0A[2016-09-15T21:39:36,731][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Task action on node 7%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,732][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Task action on node 3%0D%0A[2016-09-15T21:39:36,732][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Task action on node 6%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,732][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Task action on node 4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,732][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Failing on node 4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,733][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Task action on node 8%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,733][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Task action on node 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,736][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Task action on node 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,736][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Task action on node 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,776][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3 finished%0D%0A[2016-09-15T21:39:36,776][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 7 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,776][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 6 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,776][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 8 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,777][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,776][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 5 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,777][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,777][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,776][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 4 finished%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTaskLevelActionFailures(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
  "startTimestamp": 1473935976637,
  "executionTime": 143
 }
]

[
 "TEST_STARTED",
 "ID#testFailedTasksCount(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,799][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{0inV32SNQSmLi7ZqUdnTKg}{local}{local[352]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,800][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[101]}, bound_addresses {local[101]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,804][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{DYN4OnBgR72u5NA1QoD4_w}{local}{local[353]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,805][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[102]}, bound_addresses {local[102]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,809][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{yXuOmamiTtCF1jf1EepcZg}{local}{local[354]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,810][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[103]}, bound_addresses {local[103]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,814][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{dgZ7vKZ9RUKxLHUsPyOPdw}{local}{local[355]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,815][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[104]}, bound_addresses {local[104]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,818][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{ZyaRzeUDTF-VO3rbGQJbIg}{local}{local[356]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,820][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[105]}, bound_addresses {local[105]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,823][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{z0oitL9-T4Suw0L_eb2dtQ}{local}{local[357]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,825][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[106]}, bound_addresses {local[106]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,826][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{EW0_G-dwREa_6yOCUgl_xw}{local}{local[101]}, previous {node}{0inV32SNQSmLi7ZqUdnTKg}{local}{local[352]}}, removed {{node}{0inV32SNQSmLi7ZqUdnTKg}{local}{local[352]},}, added {{node1}{LoK1l82TTKGsdVjmwvVGwA}{local}{local[102]},{node2}{YTI_2g_qTW6p-kFjU3orDw}{local}{local[103]},{node5}{xANUrco8SQOoUOow62nzGQ}{local}{local[106]},{node3}{9zbVoTfdS5C8sslF3WJm4w}{local}{local[104]},{node4}{aEDBGdEsQymO5WQJkZcppw}{local}{local[105]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,826][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{EW0_G-dwREa_6yOCUgl_xw}{local}{local[101]}, previous {node}{DYN4OnBgR72u5NA1QoD4_w}{local}{local[353]}}, removed {{node}{DYN4OnBgR72u5NA1QoD4_w}{local}{local[353]},}, added {{node2}{YTI_2g_qTW6p-kFjU3orDw}{local}{local[103]},{node5}{xANUrco8SQOoUOow62nzGQ}{local}{local[106]},{node0}{EW0_G-dwREa_6yOCUgl_xw}{local}{local[101]},{node3}{9zbVoTfdS5C8sslF3WJm4w}{local}{local[104]},{node4}{aEDBGdEsQymO5WQJkZcppw}{local}{local[105]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,827][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{EW0_G-dwREa_6yOCUgl_xw}{local}{local[101]}, previous {node}{yXuOmamiTtCF1jf1EepcZg}{local}{local[354]}}, removed {{node}{yXuOmamiTtCF1jf1EepcZg}{local}{local[354]},}, added {{node1}{LoK1l82TTKGsdVjmwvVGwA}{local}{local[102]},{node5}{xANUrco8SQOoUOow62nzGQ}{local}{local[106]},{node0}{EW0_G-dwREa_6yOCUgl_xw}{local}{local[101]},{node3}{9zbVoTfdS5C8sslF3WJm4w}{local}{local[104]},{node4}{aEDBGdEsQymO5WQJkZcppw}{local}{local[105]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,827][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{EW0_G-dwREa_6yOCUgl_xw}{local}{local[101]}, previous {node}{dgZ7vKZ9RUKxLHUsPyOPdw}{local}{local[355]}}, removed {{node}{dgZ7vKZ9RUKxLHUsPyOPdw}{local}{local[355]},}, added {{node1}{LoK1l82TTKGsdVjmwvVGwA}{local}{local[102]},{node2}{YTI_2g_qTW6p-kFjU3orDw}{local}{local[103]},{node5}{xANUrco8SQOoUOow62nzGQ}{local}{local[106]},{node0}{EW0_G-dwREa_6yOCUgl_xw}{local}{local[101]},{node4}{aEDBGdEsQymO5WQJkZcppw}{local}{local[105]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,828][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{EW0_G-dwREa_6yOCUgl_xw}{local}{local[101]}, previous {node}{ZyaRzeUDTF-VO3rbGQJbIg}{local}{local[356]}}, removed {{node}{ZyaRzeUDTF-VO3rbGQJbIg}{local}{local[356]},}, added {{node1}{LoK1l82TTKGsdVjmwvVGwA}{local}{local[102]},{node2}{YTI_2g_qTW6p-kFjU3orDw}{local}{local[103]},{node5}{xANUrco8SQOoUOow62nzGQ}{local}{local[106]},{node0}{EW0_G-dwREa_6yOCUgl_xw}{local}{local[101]},{node3}{9zbVoTfdS5C8sslF3WJm4w}{local}{local[104]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,829][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{EW0_G-dwREa_6yOCUgl_xw}{local}{local[101]}, previous {node}{z0oitL9-T4Suw0L_eb2dtQ}{local}{local[357]}}, removed {{node}{z0oitL9-T4Suw0L_eb2dtQ}{local}{local[357]},}, added {{node1}{LoK1l82TTKGsdVjmwvVGwA}{local}{local[102]},{node2}{YTI_2g_qTW6p-kFjU3orDw}{local}{local[103]},{node0}{EW0_G-dwREa_6yOCUgl_xw}{local}{local[101]},{node3}{9zbVoTfdS5C8sslF3WJm4w}{local}{local[104]},{node4}{aEDBGdEsQymO5WQJkZcppw}{local}{local[105]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,843][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,843][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,844][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,843][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 5%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,845][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,845][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailedTasksCount(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
  "startTimestamp": 1473935976780,
  "executionTime": 72
 }
]

[
 "TEST_STARTED",
 "ID#testTasksDescriptions(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,872][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{PHDparQ6TgKqrCYutRkSCA}{local}{local[358]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,873][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[107]}, bound_addresses {local[107]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,879][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Cugv1QesQuiEaLKdmT-YHA}{local}{local[359]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,880][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[108]}, bound_addresses {local[108]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,883][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{zp1rVO4DQSa-6thiolSvkw}{local}{local[360]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,885][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[109]}, bound_addresses {local[109]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,888][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{zU0Ym1BUQgG_uZU_V47tew}{local}{local[361]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,890][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[110]}, bound_addresses {local[110]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,893][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{3qBxH1aeS-Kh2jd5XthgTA}{local}{local[362]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,895][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[111]}, bound_addresses {local[111]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,898][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{kB-cSJt7RSaEyorFk54wlA}{local}{local[363]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,899][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[112]}, bound_addresses {local[112]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,901][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{uv1pnMzWSGyRSh_SMYqVag}{local}{local[107]}, previous {node}{PHDparQ6TgKqrCYutRkSCA}{local}{local[358]}}, removed {{node}{PHDparQ6TgKqrCYutRkSCA}{local}{local[358]},}, added {{node1}{aDoJCAQjTKeZeJ6XnkNq0A}{local}{local[108]},{node2}{m6ztsVKTQNmFkTT7ddNKzA}{local}{local[109]},{node5}{uW8POslCRVKLVHlp230j6g}{local}{local[112]},{node3}{7uoDN5KFT1OIr7wfkf5qYA}{local}{local[110]},{node4}{o253ONiaR0C77NwxGCWshw}{local}{local[111]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,901][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{uv1pnMzWSGyRSh_SMYqVag}{local}{local[107]}, previous {node}{Cugv1QesQuiEaLKdmT-YHA}{local}{local[359]}}, removed {{node}{Cugv1QesQuiEaLKdmT-YHA}{local}{local[359]},}, added {{node2}{m6ztsVKTQNmFkTT7ddNKzA}{local}{local[109]},{node5}{uW8POslCRVKLVHlp230j6g}{local}{local[112]},{node0}{uv1pnMzWSGyRSh_SMYqVag}{local}{local[107]},{node3}{7uoDN5KFT1OIr7wfkf5qYA}{local}{local[110]},{node4}{o253ONiaR0C77NwxGCWshw}{local}{local[111]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,901][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{uv1pnMzWSGyRSh_SMYqVag}{local}{local[107]}, previous {node}{zp1rVO4DQSa-6thiolSvkw}{local}{local[360]}}, removed {{node}{zp1rVO4DQSa-6thiolSvkw}{local}{local[360]},}, added {{node1}{aDoJCAQjTKeZeJ6XnkNq0A}{local}{local[108]},{node5}{uW8POslCRVKLVHlp230j6g}{local}{local[112]},{node0}{uv1pnMzWSGyRSh_SMYqVag}{local}{local[107]},{node3}{7uoDN5KFT1OIr7wfkf5qYA}{local}{local[110]},{node4}{o253ONiaR0C77NwxGCWshw}{local}{local[111]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,901][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{uv1pnMzWSGyRSh_SMYqVag}{local}{local[107]}, previous {node}{zU0Ym1BUQgG_uZU_V47tew}{local}{local[361]}}, removed {{node}{zU0Ym1BUQgG_uZU_V47tew}{local}{local[361]},}, added {{node1}{aDoJCAQjTKeZeJ6XnkNq0A}{local}{local[108]},{node2}{m6ztsVKTQNmFkTT7ddNKzA}{local}{local[109]},{node5}{uW8POslCRVKLVHlp230j6g}{local}{local[112]},{node0}{uv1pnMzWSGyRSh_SMYqVag}{local}{local[107]},{node4}{o253ONiaR0C77NwxGCWshw}{local}{local[111]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,902][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{uv1pnMzWSGyRSh_SMYqVag}{local}{local[107]}, previous {node}{3qBxH1aeS-Kh2jd5XthgTA}{local}{local[362]}}, removed {{node}{3qBxH1aeS-Kh2jd5XthgTA}{local}{local[362]},}, added {{node1}{aDoJCAQjTKeZeJ6XnkNq0A}{local}{local[108]},{node2}{m6ztsVKTQNmFkTT7ddNKzA}{local}{local[109]},{node5}{uW8POslCRVKLVHlp230j6g}{local}{local[112]},{node0}{uv1pnMzWSGyRSh_SMYqVag}{local}{local[107]},{node3}{7uoDN5KFT1OIr7wfkf5qYA}{local}{local[110]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,902][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{uv1pnMzWSGyRSh_SMYqVag}{local}{local[107]}, previous {node}{kB-cSJt7RSaEyorFk54wlA}{local}{local[363]}}, removed {{node}{kB-cSJt7RSaEyorFk54wlA}{local}{local[363]},}, added {{node1}{aDoJCAQjTKeZeJ6XnkNq0A}{local}{local[108]},{node2}{m6ztsVKTQNmFkTT7ddNKzA}{local}{local[109]},{node0}{uv1pnMzWSGyRSh_SMYqVag}{local}{local[107]},{node3}{7uoDN5KFT1OIr7wfkf5qYA}{local}{local[110]},{node4}{o253ONiaR0C77NwxGCWshw}{local}{local[111]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,906][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,906][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,906][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Awaiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,907][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,907][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 5%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,907][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,907][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,907][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Done waiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,925][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,925][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3 finished%0D%0A[2016-09-15T21:39:36,925][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 5 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,925][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 4 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,925][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,925][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1 finished%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTasksDescriptions(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
  "startTimestamp": 1473935976852,
  "executionTime": 76
 }
]

[
 "TEST_STARTED",
 "ID#testRunningTasksCount(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,949][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{l4zVknMRTuathvvxzEAVxg}{local}{local[364]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,951][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[113]}, bound_addresses {local[113]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,954][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{ZAB4jvPzSweiyUBFBLj5Xw}{local}{local[365]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,955][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[114]}, bound_addresses {local[114]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,959][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{7-ugn77nQnaU3cEqIYQN6Q}{local}{local[366]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,961][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[115]}, bound_addresses {local[115]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,964][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{9_3NKxxUQNibxXJ3GWD3lw}{local}{local[367]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,965][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[116]}, bound_addresses {local[116]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,969][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{rA25JAuARzWG6u-pi4hKcg}{local}{local[368]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,970][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[117]}, bound_addresses {local[117]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,971][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{qiDi9Gt7Smy9a2Sw2hbIDA}{local}{local[113]}, previous {node}{l4zVknMRTuathvvxzEAVxg}{local}{local[364]}}, removed {{node}{l4zVknMRTuathvvxzEAVxg}{local}{local[364]},}, added {{node1}{XEI5WWsqQ6egrLn0viRrNg}{local}{local[114]},{node2}{DVMl6G02Sby6EF_w0dacSg}{local}{local[115]},{node3}{BY4AT3WzS0KKoVN-D61Asg}{local}{local[116]},{node4}{ksr1eygEThGqTcZ4R2wKpA}{local}{local[117]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,971][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{qiDi9Gt7Smy9a2Sw2hbIDA}{local}{local[113]}, previous {node}{ZAB4jvPzSweiyUBFBLj5Xw}{local}{local[365]}}, removed {{node}{ZAB4jvPzSweiyUBFBLj5Xw}{local}{local[365]},}, added {{node2}{DVMl6G02Sby6EF_w0dacSg}{local}{local[115]},{node0}{qiDi9Gt7Smy9a2Sw2hbIDA}{local}{local[113]},{node3}{BY4AT3WzS0KKoVN-D61Asg}{local}{local[116]},{node4}{ksr1eygEThGqTcZ4R2wKpA}{local}{local[117]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,972][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{qiDi9Gt7Smy9a2Sw2hbIDA}{local}{local[113]}, previous {node}{7-ugn77nQnaU3cEqIYQN6Q}{local}{local[366]}}, removed {{node}{7-ugn77nQnaU3cEqIYQN6Q}{local}{local[366]},}, added {{node1}{XEI5WWsqQ6egrLn0viRrNg}{local}{local[114]},{node0}{qiDi9Gt7Smy9a2Sw2hbIDA}{local}{local[113]},{node3}{BY4AT3WzS0KKoVN-D61Asg}{local}{local[116]},{node4}{ksr1eygEThGqTcZ4R2wKpA}{local}{local[117]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,972][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{qiDi9Gt7Smy9a2Sw2hbIDA}{local}{local[113]}, previous {node}{9_3NKxxUQNibxXJ3GWD3lw}{local}{local[367]}}, removed {{node}{9_3NKxxUQNibxXJ3GWD3lw}{local}{local[367]},}, added {{node1}{XEI5WWsqQ6egrLn0viRrNg}{local}{local[114]},{node2}{DVMl6G02Sby6EF_w0dacSg}{local}{local[115]},{node0}{qiDi9Gt7Smy9a2Sw2hbIDA}{local}{local[113]},{node4}{ksr1eygEThGqTcZ4R2wKpA}{local}{local[117]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,972][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{qiDi9Gt7Smy9a2Sw2hbIDA}{local}{local[113]}, previous {node}{rA25JAuARzWG6u-pi4hKcg}{local}{local[368]}}, removed {{node}{rA25JAuARzWG6u-pi4hKcg}{local}{local[368]},}, added {{node1}{XEI5WWsqQ6egrLn0viRrNg}{local}{local[114]},{node2}{DVMl6G02Sby6EF_w0dacSg}{local}{local[115]},{node0}{qiDi9Gt7Smy9a2Sw2hbIDA}{local}{local[113]},{node3}{BY4AT3WzS0KKoVN-D61Asg}{local}{local[116]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,985][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Awaiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,985][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,985][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,986][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,986][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,986][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,987][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Done waiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,987][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Listing currently running tasks using node [4]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,990][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Checking currently running tasks%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,997][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 2 finished%0D%0A[2016-09-15T21:39:36,997][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 1 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,997][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 0 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,997][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 3 finished%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T21:39:36,997][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Action on node 4 finished%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRunningTasksCount(org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests)",
  "startTimestamp": 1473935976928,
  "executionTime": 71
 }
]

[
 "APPEND_STDERR",
 {
  "chunk": "Sep 15, 2016 12:39:37 PM com.carrotsearch.randomizedtesting.ThreadLeakControl checkThreadLeaks%0D%0AWARNING: Will linger awaiting termination of 2 leaked thread(s).%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.cluster.node.tasks.TransportTasksActionTests",
  "startTimestamp": 1473935975958,
  "executionTime": 1297
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests",
   "displayName": "org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests)",
     "displayName": "testSerialization(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests",
     "children": []
    },
    {
     "id": "ID#testParsing(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests)",
     "displayName": "testParsing(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests)",
     "methodName": "testParsing",
     "className": "org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashCode(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests)",
     "displayName": "testEqualsAndHashCode(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests)",
     "methodName": "testEqualsAndHashCode",
     "className": "org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935977382
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests)",
  "startTimestamp": 1473935977399,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testParsing(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsing(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests)",
  "startTimestamp": 1473935977406,
  "executionTime": 121
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashCode(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashCode(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests)",
  "startTimestamp": 1473935977527,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteRequestTests",
  "startTimestamp": 1473935977382,
  "executionTime": 155
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests",
   "displayName": "org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests",
   "children": [
    {
     "id": "ID#testSerializeRequest(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests)",
     "displayName": "testSerializeRequest(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests)",
     "methodName": "testSerializeRequest",
     "className": "org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests",
     "children": []
    },
    {
     "id": "ID#testClusterStateUpdateTask(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests)",
     "displayName": "testClusterStateUpdateTask(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests)",
     "methodName": "testClusterStateUpdateTask",
     "className": "org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935977659
 }
]

[
 "TEST_STARTED",
 "ID#testSerializeRequest(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerializeRequest(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests)",
  "startTimestamp": 1473935977676,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClusterStateUpdateTask(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:37,706][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [shards failed [[idx][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterStateUpdateTask(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests)",
  "startTimestamp": 1473935977679,
  "executionTime": 31
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests",
  "startTimestamp": 1473935977659,
  "executionTime": 53
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests",
   "displayName": "org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests",
   "children": [
    {
     "id": "ID#testFillsAttributes(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
     "displayName": "testFillsAttributes(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
     "methodName": "testFillsAttributes",
     "className": "org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests",
     "children": []
    },
    {
     "id": "ID#testWithAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
     "displayName": "testWithAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
     "methodName": "testWithAnalysisService",
     "className": "org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests",
     "children": []
    },
    {
     "id": "ID#testNoAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
     "displayName": "testNoAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
     "methodName": "testNoAnalysisService",
     "className": "org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests",
     "children": []
    },
    {
     "id": "ID#testUnknown(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
     "displayName": "testUnknown(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
     "methodName": "testUnknown",
     "className": "org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests",
     "children": []
    },
    {
     "id": "ID#testGetIndexAnalyserWithoutAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
     "displayName": "testGetIndexAnalyserWithoutAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
     "methodName": "testGetIndexAnalyserWithoutAnalysisService",
     "className": "org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935977937
 }
]

[
 "TEST_STARTED",
 "ID#testFillsAttributes(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFillsAttributes(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
  "startTimestamp": 1473935977956,
  "executionTime": 116
 }
]

[
 "TEST_STARTED",
 "ID#testWithAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
  "startTimestamp": 1473935978072,
  "executionTime": 58
 }
]

[
 "TEST_STARTED",
 "ID#testNoAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
  "startTimestamp": 1473935978130,
  "executionTime": 82
 }
]

[
 "TEST_STARTED",
 "ID#testUnknown(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknown(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
  "startTimestamp": 1473935978212,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testGetIndexAnalyserWithoutAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetIndexAnalyserWithoutAnalysisService(org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests)",
  "startTimestamp": 1473935978224,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.TransportAnalyzeActionTests",
  "startTimestamp": 1473935977937,
  "executionTime": 301
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.alias.AliasActionsTests",
   "displayName": "org.elasticsearch.action.admin.indices.alias.AliasActionsTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.alias.AliasActionsTests",
   "children": [
    {
     "id": "ID#testValidate(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "displayName": "testValidate(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "methodName": "testValidate",
     "className": "org.elasticsearch.action.admin.indices.alias.AliasActionsTests",
     "children": []
    },
    {
     "id": "ID#testParseIndexAndIndicesThrowsError(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "displayName": "testParseIndexAndIndicesThrowsError(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "methodName": "testParseIndexAndIndicesThrowsError",
     "className": "org.elasticsearch.action.admin.indices.alias.AliasActionsTests",
     "children": []
    },
    {
     "id": "ID#testEmptyIndex(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "displayName": "testEmptyIndex(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "methodName": "testEmptyIndex",
     "className": "org.elasticsearch.action.admin.indices.alias.AliasActionsTests",
     "children": []
    },
    {
     "id": "ID#testParseRemoveIndex(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "displayName": "testParseRemoveIndex(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "methodName": "testParseRemoveIndex",
     "className": "org.elasticsearch.action.admin.indices.alias.AliasActionsTests",
     "children": []
    },
    {
     "id": "ID#testRoundTrip(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "displayName": "testRoundTrip(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "methodName": "testRoundTrip",
     "className": "org.elasticsearch.action.admin.indices.alias.AliasActionsTests",
     "children": []
    },
    {
     "id": "ID#testParseAdd(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "displayName": "testParseAdd(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "methodName": "testParseAdd",
     "className": "org.elasticsearch.action.admin.indices.alias.AliasActionsTests",
     "children": []
    },
    {
     "id": "ID#testEmptyAlias(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "displayName": "testEmptyAlias(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "methodName": "testEmptyAlias",
     "className": "org.elasticsearch.action.admin.indices.alias.AliasActionsTests",
     "children": []
    },
    {
     "id": "ID#testParseAddDefaultRouting(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "displayName": "testParseAddDefaultRouting(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "methodName": "testParseAddDefaultRouting",
     "className": "org.elasticsearch.action.admin.indices.alias.AliasActionsTests",
     "children": []
    },
    {
     "id": "ID#testParseAliasAndAliasesThrowsError(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "displayName": "testParseAliasAndAliasesThrowsError(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "methodName": "testParseAliasAndAliasesThrowsError",
     "className": "org.elasticsearch.action.admin.indices.alias.AliasActionsTests",
     "children": []
    },
    {
     "id": "ID#testParseRemove(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "displayName": "testParseRemove(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "methodName": "testParseRemove",
     "className": "org.elasticsearch.action.admin.indices.alias.AliasActionsTests",
     "children": []
    },
    {
     "id": "ID#testBadOptionsInNonIndex(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "displayName": "testBadOptionsInNonIndex(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
     "methodName": "testBadOptionsInNonIndex",
     "className": "org.elasticsearch.action.admin.indices.alias.AliasActionsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935978572
 }
]

[
 "TEST_STARTED",
 "ID#testValidate(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidate(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
  "startTimestamp": 1473935978588,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testParseIndexAndIndicesThrowsError(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseIndexAndIndicesThrowsError(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
  "startTimestamp": 1473935978598,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyIndex(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyIndex(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
  "startTimestamp": 1473935978601,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseRemoveIndex(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseRemoveIndex(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
  "startTimestamp": 1473935978604,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRoundTrip(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoundTrip(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
  "startTimestamp": 1473935978607,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseAdd(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseAdd(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
  "startTimestamp": 1473935978609,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyAlias(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyAlias(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
  "startTimestamp": 1473935978612,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParseAddDefaultRouting(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseAddDefaultRouting(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
  "startTimestamp": 1473935978616,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseAliasAndAliasesThrowsError(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseAliasAndAliasesThrowsError(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
  "startTimestamp": 1473935978619,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseRemove(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseRemove(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
  "startTimestamp": 1473935978622,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBadOptionsInNonIndex(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBadOptionsInNonIndex(org.elasticsearch.action.admin.indices.alias.AliasActionsTests)",
  "startTimestamp": 1473935978624,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.alias.AliasActionsTests",
  "startTimestamp": 1473935978572,
  "executionTime": 56
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests",
   "displayName": "org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests",
   "children": [
    {
     "id": "ID#testSetSource(org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests)",
     "displayName": "testSetSource(org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests)",
     "methodName": "testSetSource",
     "className": "org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSetSettings(org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests)",
     "displayName": "testSetSettings(org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests)",
     "methodName": "testSetSettings",
     "className": "org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935978776
 }
]

[
 "TEST_STARTED",
 "ID#testSetSource(org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetSource(org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests)",
  "startTimestamp": 1473935978791,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSetSettings(org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetSettings(org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests)",
  "startTimestamp": 1473935978795,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests",
  "startTimestamp": 1473935978776,
  "executionTime": 23
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests",
   "displayName": "org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests",
   "children": [
    {
     "id": "ID#testResponseStreaming(org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests)",
     "displayName": "testResponseStreaming(org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests)",
     "methodName": "testResponseStreaming",
     "className": "org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests",
     "children": []
    },
    {
     "id": "ID#testIndicesSyncedFlushResult(org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests)",
     "displayName": "testIndicesSyncedFlushResult(org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests)",
     "methodName": "testIndicesSyncedFlushResult",
     "className": "org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935979109
 }
]

[
 "TEST_STARTED",
 "ID#testResponseStreaming(org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResponseStreaming(org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests)",
  "startTimestamp": 1473935979123,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testIndicesSyncedFlushResult(org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndicesSyncedFlushResult(org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests)",
  "startTimestamp": 1473935979142,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.flush.SyncedFlushUnitTests",
  "startTimestamp": 1473935979109,
  "executionTime": 41
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests",
   "displayName": "org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests",
   "children": [
    {
     "id": "ID#testValidation(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests)",
     "displayName": "testValidation(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests)",
     "methodName": "testValidation",
     "className": "org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests",
     "children": []
    },
    {
     "id": "ID#testBuildFromSimplifiedDef(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests)",
     "displayName": "testBuildFromSimplifiedDef(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests)",
     "methodName": "testBuildFromSimplifiedDef",
     "className": "org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935979489
 }
]

[
 "TEST_STARTED",
 "ID#testValidation(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidation(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests)",
  "startTimestamp": 1473935979505,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBuildFromSimplifiedDef(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuildFromSimplifiedDef(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests)",
  "startTimestamp": 1473935979508,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests",
  "startTimestamp": 1473935979489,
  "executionTime": 22
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.rollover.ConditionTests",
   "displayName": "org.elasticsearch.action.admin.indices.rollover.ConditionTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.rollover.ConditionTests",
   "children": [
    {
     "id": "ID#testMaxDocs(org.elasticsearch.action.admin.indices.rollover.ConditionTests)",
     "displayName": "testMaxDocs(org.elasticsearch.action.admin.indices.rollover.ConditionTests)",
     "methodName": "testMaxDocs",
     "className": "org.elasticsearch.action.admin.indices.rollover.ConditionTests",
     "children": []
    },
    {
     "id": "ID#testMaxAge(org.elasticsearch.action.admin.indices.rollover.ConditionTests)",
     "displayName": "testMaxAge(org.elasticsearch.action.admin.indices.rollover.ConditionTests)",
     "methodName": "testMaxAge",
     "className": "org.elasticsearch.action.admin.indices.rollover.ConditionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935979733
 }
]

[
 "TEST_STARTED",
 "ID#testMaxDocs(org.elasticsearch.action.admin.indices.rollover.ConditionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMaxDocs(org.elasticsearch.action.admin.indices.rollover.ConditionTests)",
  "startTimestamp": 1473935979812,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testMaxAge(org.elasticsearch.action.admin.indices.rollover.ConditionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMaxAge(org.elasticsearch.action.admin.indices.rollover.ConditionTests)",
  "startTimestamp": 1473935979818,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.rollover.ConditionTests",
  "startTimestamp": 1473935979733,
  "executionTime": 88
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests",
   "displayName": "org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests",
   "children": [
    {
     "id": "ID#testStoreStatusOrdering(org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests)",
     "displayName": "testStoreStatusOrdering(org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests)",
     "methodName": "testStoreStatusOrdering",
     "className": "org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests",
     "children": []
    },
    {
     "id": "ID#testBasicSerialization(org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests)",
     "displayName": "testBasicSerialization(org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests)",
     "methodName": "testBasicSerialization",
     "className": "org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935980013
 }
]

[
 "TEST_STARTED",
 "ID#testStoreStatusOrdering(org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStoreStatusOrdering(org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests)",
  "startTimestamp": 1473935980029,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBasicSerialization(org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicSerialization(org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests)",
  "startTimestamp": 1473935980031,
  "executionTime": 26
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.shards.IndicesShardStoreResponseTests",
  "startTimestamp": 1473935980013,
  "executionTime": 46
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.shrink.TransportShrinkActionTests",
   "displayName": "org.elasticsearch.action.admin.indices.shrink.TransportShrinkActionTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.shrink.TransportShrinkActionTests",
   "children": [
    {
     "id": "ID#testShrinkIndexSettings(org.elasticsearch.action.admin.indices.shrink.TransportShrinkActionTests)",
     "displayName": "testShrinkIndexSettings(org.elasticsearch.action.admin.indices.shrink.TransportShrinkActionTests)",
     "methodName": "testShrinkIndexSettings",
     "className": "org.elasticsearch.action.admin.indices.shrink.TransportShrinkActionTests",
     "children": []
    },
    {
     "id": "ID#testErrorCondition(org.elasticsearch.action.admin.indices.shrink.TransportShrinkActionTests)",
     "displayName": "testErrorCondition(org.elasticsearch.action.admin.indices.shrink.TransportShrinkActionTests)",
     "methodName": "testErrorCondition",
     "className": "org.elasticsearch.action.admin.indices.shrink.TransportShrinkActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935980288
 }
]

[
 "TEST_STARTED",
 "ID#testShrinkIndexSettings(org.elasticsearch.action.admin.indices.shrink.TransportShrinkActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:40,306][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[QGnNOEgWsx][7], [QGnNOEgWsx][4], [QGnNOEgWsx][5], [QGnNOEgWsx][1], [QGnNOEgWsx][2], [QGnNOEgWsx][3], [QGnNOEgWsx][6], [QGnNOEgWsx][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShrinkIndexSettings(org.elasticsearch.action.admin.indices.shrink.TransportShrinkActionTests)",
  "startTimestamp": 1473935980301,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testErrorCondition(org.elasticsearch.action.admin.indices.shrink.TransportShrinkActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:40,315][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[source][1], [source][2], [source][3], [source][4], [source][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testErrorCondition(org.elasticsearch.action.admin.indices.shrink.TransportShrinkActionTests)",
  "startTimestamp": 1473935980308,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.shrink.TransportShrinkActionTests",
  "startTimestamp": 1473935980288,
  "executionTime": 29
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.ingest.SimulatePipelineResponseTests",
   "displayName": "org.elasticsearch.action.ingest.SimulatePipelineResponseTests",
   "methodName": null,
   "className": "org.elasticsearch.action.ingest.SimulatePipelineResponseTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.action.ingest.SimulatePipelineResponseTests)",
     "displayName": "testSerialization(org.elasticsearch.action.ingest.SimulatePipelineResponseTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.action.ingest.SimulatePipelineResponseTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935980538
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.action.ingest.SimulatePipelineResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.action.ingest.SimulatePipelineResponseTests)",
  "startTimestamp": 1473935980583,
  "executionTime": 43
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.ingest.SimulatePipelineResponseTests",
  "startTimestamp": 1473935980538,
  "executionTime": 127
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.ingest.SimulateProcessorResultTests",
   "displayName": "org.elasticsearch.action.ingest.SimulateProcessorResultTests",
   "methodName": null,
   "className": "org.elasticsearch.action.ingest.SimulateProcessorResultTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.action.ingest.SimulateProcessorResultTests)",
     "displayName": "testSerialization(org.elasticsearch.action.ingest.SimulateProcessorResultTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.action.ingest.SimulateProcessorResultTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935980803
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.action.ingest.SimulateProcessorResultTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.action.ingest.SimulateProcessorResultTests)",
  "startTimestamp": 1473935980831,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.ingest.SimulateProcessorResultTests",
  "startTimestamp": 1473935980803,
  "executionTime": 33
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.ingest.TrackingResultProcessorTests",
   "displayName": "org.elasticsearch.action.ingest.TrackingResultProcessorTests",
   "methodName": null,
   "className": "org.elasticsearch.action.ingest.TrackingResultProcessorTests",
   "children": [
    {
     "id": "ID#testActualProcessor(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
     "displayName": "testActualProcessor(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
     "methodName": "testActualProcessor",
     "className": "org.elasticsearch.action.ingest.TrackingResultProcessorTests",
     "children": []
    },
    {
     "id": "ID#testActualCompoundProcessorWithoutOnFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
     "displayName": "testActualCompoundProcessorWithoutOnFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
     "methodName": "testActualCompoundProcessorWithoutOnFailure",
     "className": "org.elasticsearch.action.ingest.TrackingResultProcessorTests",
     "children": []
    },
    {
     "id": "ID#testActualCompoundProcessorWithOnFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
     "displayName": "testActualCompoundProcessorWithOnFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
     "methodName": "testActualCompoundProcessorWithOnFailure",
     "className": "org.elasticsearch.action.ingest.TrackingResultProcessorTests",
     "children": []
    },
    {
     "id": "ID#testActualCompoundProcessorWithIgnoreFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
     "displayName": "testActualCompoundProcessorWithIgnoreFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
     "methodName": "testActualCompoundProcessorWithIgnoreFailure",
     "className": "org.elasticsearch.action.ingest.TrackingResultProcessorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935981076
 }
]

[
 "TEST_STARTED",
 "ID#testActualProcessor(org.elasticsearch.action.ingest.TrackingResultProcessorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActualProcessor(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
  "startTimestamp": 1473935981093,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testActualCompoundProcessorWithoutOnFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActualCompoundProcessorWithoutOnFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
  "startTimestamp": 1473935981096,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testActualCompoundProcessorWithOnFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActualCompoundProcessorWithOnFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
  "startTimestamp": 1473935981098,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testActualCompoundProcessorWithIgnoreFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActualCompoundProcessorWithIgnoreFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
  "startTimestamp": 1473935981102,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.ingest.TrackingResultProcessorTests",
  "startTimestamp": 1473935981076,
  "executionTime": 30
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests",
   "displayName": "org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests",
   "children": [
    {
     "id": "ID#testGlobalBlock(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "displayName": "testGlobalBlock(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "methodName": "testGlobalBlock",
     "className": "org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testResultAggregation(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "displayName": "testResultAggregation(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "methodName": "testResultAggregation",
     "className": "org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testOneRequestIsSentToEachNodeHoldingAShard(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "displayName": "testOneRequestIsSentToEachNodeHoldingAShard(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "methodName": "testOneRequestIsSentToEachNodeHoldingAShard",
     "className": "org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testRequestsAreNotSentToFailedMaster(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "displayName": "testRequestsAreNotSentToFailedMaster(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "methodName": "testRequestsAreNotSentToFailedMaster",
     "className": "org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testOperationExecution(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "displayName": "testOperationExecution(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "methodName": "testOperationExecution",
     "className": "org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testRequestBlock(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "displayName": "testRequestBlock(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
     "methodName": "testRequestBlock",
     "className": "org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935981410
 }
]

[
 "TEST_STARTED",
 "ID#testGlobalBlock(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:41,532][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{UVDA2IAeS8GJkgx1z886lg}{local}{local[376]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:41,536][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_2}{yftjBQluR2CnBHSFwXfXZg}{local}{local[379]}, previous {node}{UVDA2IAeS8GJkgx1z886lg}{local}{local[376]}}, removed {{node}{UVDA2IAeS8GJkgx1z886lg}{local}{local[376]},}, added {{node_1}{GxNrDczWSbalJ2Ar9EhQkw}{local}{local[378]},{node_2}{yftjBQluR2CnBHSFwXfXZg}{local}{local[379]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGlobalBlock(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
  "startTimestamp": 1473935981486,
  "executionTime": 62
 }
]

[
 "TEST_STARTED",
 "ID#testResultAggregation(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:41,553][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{I4-YGDV6QkCJeuMGzNVhfQ}{local}{local[382]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:41,554][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_2}{JRi469R_RM-Wb2eBJtjkKA}{local}{local[385]}, previous {node}{I4-YGDV6QkCJeuMGzNVhfQ}{local}{local[382]}}, removed {{node}{I4-YGDV6QkCJeuMGzNVhfQ}{local}{local[382]},}, added {{node_1}{2PDocSUxROCSm383cPGFww}{local}{local[384]},{node_2}{JRi469R_RM-Wb2eBJtjkKA}{local}{local[385]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResultAggregation(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
  "startTimestamp": 1473935981548,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testOneRequestIsSentToEachNodeHoldingAShard(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:41,568][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{SDbHXpG2QR6W2i5d-BAt9A}{local}{local[388]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:41,569][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_2}{hsEj_Y8JSGq3nCbb4i1XKw}{local}{local[391]}, previous {node}{SDbHXpG2QR6W2i5d-BAt9A}{local}{local[388]}}, removed {{node}{SDbHXpG2QR6W2i5d-BAt9A}{local}{local[388]},}, added {{node_1}{yhy1GADLTpGsGWYlyHAS3g}{local}{local[390]},{node_2}{hsEj_Y8JSGq3nCbb4i1XKw}{local}{local[391]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOneRequestIsSentToEachNodeHoldingAShard(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
  "startTimestamp": 1473935981563,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testRequestsAreNotSentToFailedMaster(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:41,576][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{RVMeRAPKR9afGY8ApYqGQA}{local}{local[394]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:41,577][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_2}{59DNtmRQSFqYm8VYgcTLWQ}{local}{local[397]}, previous {node}{RVMeRAPKR9afGY8ApYqGQA}{local}{local[394]}}, removed {{node}{RVMeRAPKR9afGY8ApYqGQA}{local}{local[394]},}, added {{node_1}{ikdWxYNsQk6MkfFjl4xuvw}{local}{local[396]},{node_2}{59DNtmRQSFqYm8VYgcTLWQ}{local}{local[397]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:41,578][INFO ][org.elasticsearch.cluster.service] [node_s_0] removed {{node_2}{59DNtmRQSFqYm8VYgcTLWQ}{local}{local[397]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRequestsAreNotSentToFailedMaster(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
  "startTimestamp": 1473935981570,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testOperationExecution(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:41,584][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{DMkEq-qbTFe9n_kqQgcY7g}{local}{local[400]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:41,586][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_3}{RnKi9w1GQN6NooXeWSUfNA}{local}{local[404]}, previous {node}{DMkEq-qbTFe9n_kqQgcY7g}{local}{local[400]}}, removed {{node}{DMkEq-qbTFe9n_kqQgcY7g}{local}{local[400]},}, added {{node_1}{FJq2AqRfQ3qcgf-fTTTV9Q}{local}{local[402]},{node_2}{ljUoky1MRJC4GveIM4VsNQ}{local}{local[403]},{node_3}{RnKi9w1GQN6NooXeWSUfNA}{local}{local[404]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOperationExecution(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
  "startTimestamp": 1473935981579,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testRequestBlock(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:41,608][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{E855DKWCSR2F3zw8z8WvXg}{local}{local[407]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:41,613][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_4}{JAJ3ZgBYQFumpv86s0Fa2g}{local}{local[412]}, previous {node}{E855DKWCSR2F3zw8z8WvXg}{local}{local[407]}}, removed {{node}{E855DKWCSR2F3zw8z8WvXg}{local}{local[407]},}, added {{node_1}{aznxFzGPT1-HBroMVO-KYw}{local}{local[409]},{node_2}{haYZVm3tQfihgV4TdySZKQ}{local}{local[410]},{node_3}{6WFLOmHOTqesgjx9Zw81lQ}{local}{local[411]},{node_4}{JAJ3ZgBYQFumpv86s0Fa2g}{local}{local[412]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRequestBlock(org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests)",
  "startTimestamp": 1473935981600,
  "executionTime": 15
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeActionTests",
  "startTimestamp": 1473935981410,
  "executionTime": 207
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.nodes.TransportNodesActionTests",
   "displayName": "org.elasticsearch.action.support.nodes.TransportNodesActionTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.nodes.TransportNodesActionTests",
   "children": [
    {
     "id": "ID#testCustomResolving(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
     "displayName": "testCustomResolving(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
     "methodName": "testCustomResolving",
     "className": "org.elasticsearch.action.support.nodes.TransportNodesActionTests",
     "children": []
    },
    {
     "id": "ID#testRequestIsSentToEachNode(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
     "displayName": "testRequestIsSentToEachNode(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
     "methodName": "testRequestIsSentToEachNode",
     "className": "org.elasticsearch.action.support.nodes.TransportNodesActionTests",
     "children": []
    },
    {
     "id": "ID#testNewResponseNullArray(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
     "displayName": "testNewResponseNullArray(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
     "methodName": "testNewResponseNullArray",
     "className": "org.elasticsearch.action.support.nodes.TransportNodesActionTests",
     "children": []
    },
    {
     "id": "ID#testNodesSelectors(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
     "displayName": "testNodesSelectors(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
     "methodName": "testNodesSelectors",
     "className": "org.elasticsearch.action.support.nodes.TransportNodesActionTests",
     "children": []
    },
    {
     "id": "ID#testNewResponse(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
     "displayName": "testNewResponse(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
     "methodName": "testNewResponse",
     "className": "org.elasticsearch.action.support.nodes.TransportNodesActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935981948
 }
]

[
 "TEST_STARTED",
 "ID#testCustomResolving(org.elasticsearch.action.support.nodes.TransportNodesActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:41,979][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{WH1pk-u6SIKpmKmCrCOpXw}{local}{local[415]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:41,981][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{node_1}{S5agyKvtQl-kLsIwGmvNwA}{local}{local[417]}{custom=match}, previous {node}{WH1pk-u6SIKpmKmCrCOpXw}{local}{local[415]}}, removed {{node}{WH1pk-u6SIKpmKmCrCOpXw}{local}{local[415]},}, added {{node_0}{node_0}{XJJDDJgxQQ6E9OslZv97hw}{local}{local[416]}{custom=vXB},{node_1}{node_1}{S5agyKvtQl-kLsIwGmvNwA}{local}{local[417]}{custom=match},{node_2}{node_2}{c6HN9nMxQH-rJ7McnrQ-PA}{local}{local[418]}{custom=uxguO},{node_3}{node_3}{_pT1i2LAQ_aFM6v6CAC2Wg}{local}{local[419]}{custom=match},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCustomResolving(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
  "startTimestamp": 1473935981974,
  "executionTime": 35
 }
]

[
 "TEST_STARTED",
 "ID#testRequestIsSentToEachNode(org.elasticsearch.action.support.nodes.TransportNodesActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:42,019][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{QvBZE6FyREC14ZZwS2AeYQ}{local}{local[421]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:42,021][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_3}{node_3}{4vY-PwJsSaGieq1XLaRfsQ}{local}{local[425]}{custom=match}, previous {node}{QvBZE6FyREC14ZZwS2AeYQ}{local}{local[421]}}, removed {{node}{QvBZE6FyREC14ZZwS2AeYQ}{local}{local[421]},}, added {{node_7}{node_7}{rh6pW53bSkS9bqbDCvPNlQ}{local}{local[429]}{custom=match},{node_2}{node_2}{sOxP9jrOQVueArnWjLymXg}{local}{local[424]}{custom=TVCn},{node_5}{node_5}{poSB2ieeTfCy0B6P7B_aCg}{local}{local[427]}{custom=dprw},{node_4}{node_4}{cx8-VYZJTmCZm6YxSzzz1A}{local}{local[426]}{custom=match},{node_3}{node_3}{4vY-PwJsSaGieq1XLaRfsQ}{local}{local[425]}{custom=match},{node_8}{node_8}{HESHk7BWRaSECZ3w-TfMGA}{local}{local[430]}{custom=match},{node_1}{node_1}{-bx32rkUTQ-gLR6FkhNzSQ}{local}{local[423]}{custom=match},{node_6}{node_6}{BSx5W02lRAKRxvl7JFVmNg}{local}{local[428]}{custom=SNOQf},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRequestIsSentToEachNode(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
  "startTimestamp": 1473935982009,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testNewResponseNullArray(org.elasticsearch.action.support.nodes.TransportNodesActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:42,027][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{SAARBa7SSjaawqSa01yQBQ}{local}{local[431]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:42,028][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_2}{node_2}{qYE6bbsOSKmDE01mW_3MMg}{local}{local[434]}{custom=match}, previous {node}{SAARBa7SSjaawqSa01yQBQ}{local}{local[431]}}, removed {{node}{SAARBa7SSjaawqSa01yQBQ}{local}{local[431]},}, added {{node_1}{node_1}{N2RoEAULTB-bbqckGqgIpQ}{local}{local[433]}{custom=TJriB},{node_3}{node_3}{EhGxws_HRImivhvnUnxGww}{local}{local[435]}{custom=match},{node_0}{node_0}{ULBp-PrSSdKQphnjXOjq_w}{local}{local[432]}{custom=Jhmxm},{node_6}{node_6}{TcoiX_JSQu-iYLOP28fpCw}{local}{local[438]}{custom=match},{node_7}{node_7}{lLHij03HQkOEjc6Jy4n-hg}{local}{local[439]}{custom=match},{node_5}{node_5}{Wa60e4-5RaWma4mcf-Ljcg}{local}{local[437]}{custom=CqffQ},{node_4}{node_4}{A_t_fKJyRoWv1hE6kWuAGw}{local}{local[436]}{custom=match},{node_2}{node_2}{qYE6bbsOSKmDE01mW_3MMg}{local}{local[434]}{custom=match},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNewResponseNullArray(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
  "startTimestamp": 1473935982023,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testNodesSelectors(org.elasticsearch.action.support.nodes.TransportNodesActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:42,037][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Dm2mnch1TCWYHLNpD5XH1A}{local}{local[441]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:42,038][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{node_1}{AV2xsG5MT8CuMgkp3Zwy4w}{local}{local[443]}{custom=match}, previous {node}{Dm2mnch1TCWYHLNpD5XH1A}{local}{local[441]}}, removed {{node}{Dm2mnch1TCWYHLNpD5XH1A}{local}{local[441]},}, added {{node_0}{node_0}{sslxNb_tT_aCBQc78ErYHQ}{local}{local[442]}{custom=BFcSF},{node_1}{node_1}{AV2xsG5MT8CuMgkp3Zwy4w}{local}{local[443]}{custom=match},{node_3}{node_3}{KeyLaIxGSFWGLsLHqA0AVw}{local}{local[445]}{custom=VCHW},{node_4}{node_4}{N1aJwzPERVmSeNP2eW6lmA}{local}{local[446]}{custom=match},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNodesSelectors(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
  "startTimestamp": 1473935982030,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testNewResponse(org.elasticsearch.action.support.nodes.TransportNodesActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:42,048][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Ji9uswxeSUmE8dh7rS88bg}{local}{local[447]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T11:39:42,049][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_4}{node_4}{Y7uiRFLoQk29vFXS8HFPsg}{local}{local[452]}{custom=match}, previous {node}{Ji9uswxeSUmE8dh7rS88bg}{local}{local[447]}}, removed {{node}{Ji9uswxeSUmE8dh7rS88bg}{local}{local[447]},}, added {{node_4}{node_4}{Y7uiRFLoQk29vFXS8HFPsg}{local}{local[452]}{custom=match},{node_2}{node_2}{JDz4Fo4MTiWwxocFg-PZVg}{local}{local[450]}{custom=match},{node_6}{node_6}{glaC_ti3S92vhOtDy0qWrA}{local}{local[454]}{custom=aPG},{node_1}{node_1}{ouxpwI9hQxmxA-dFKAg4Zw}{local}{local[449]}{custom=match},{node_5}{node_5}{sHSZOgkhSo6DkcRGW_KzYQ}{local}{local[453]}{custom=RKAEP},{node_0}{node_0}{Jx8ODx0ISD2P4rLjfgoEBA}{local}{local[448]}{custom=CCv},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNewResponse(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
  "startTimestamp": 1473935982045,
  "executionTime": 23
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.nodes.TransportNodesActionTests",
  "startTimestamp": 1473935981948,
  "executionTime": 122
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.client.transport.TransportClientHeadersTests",
   "displayName": "org.elasticsearch.client.transport.TransportClientHeadersTests",
   "methodName": null,
   "className": "org.elasticsearch.client.transport.TransportClientHeadersTests",
   "children": [
    {
     "id": "ID#testWithSniffing(org.elasticsearch.client.transport.TransportClientHeadersTests)",
     "displayName": "testWithSniffing(org.elasticsearch.client.transport.TransportClientHeadersTests)",
     "methodName": "testWithSniffing",
     "className": "org.elasticsearch.client.transport.TransportClientHeadersTests",
     "children": []
    },
    {
     "id": "ID#testOverrideHeader(org.elasticsearch.client.transport.TransportClientHeadersTests)",
     "displayName": "testOverrideHeader(org.elasticsearch.client.transport.TransportClientHeadersTests)",
     "methodName": "testOverrideHeader",
     "className": "org.elasticsearch.client.transport.TransportClientHeadersTests",
     "children": []
    },
    {
     "id": "ID#testActions(org.elasticsearch.client.transport.TransportClientHeadersTests)",
     "displayName": "testActions(org.elasticsearch.client.transport.TransportClientHeadersTests)",
     "methodName": "testActions",
     "className": "org.elasticsearch.client.transport.TransportClientHeadersTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935982160
 }
]

[
 "TEST_STARTED",
 "ID#testWithSniffing(org.elasticsearch.client.transport.TransportClientHeadersTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:39:42,194][INFO ][org.elasticsearch.plugins] [test-testWithSniffing] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:39:42,194][INFO ][org.elasticsearch.plugins] [test-testWithSniffing] loaded plugin [org.elasticsearch.client.transport.TransportClientHeadersTests$InternalTransportService$TestPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:39:42,232][INFO ][org.elasticsearch.client.transport] [test-testWithSniffing] publish_address {local[118]}, bound_addresses {local[118]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:39:42,298][INFO ][org.elasticsearch.plugins] [transport_client_testWithSniffing_1] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:39:42,298][INFO ][org.elasticsearch.plugins] [transport_client_testWithSniffing_1] loaded plugin [org.elasticsearch.client.transport.TransportClientHeadersTests$InternalTransportService$TestPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:39:42,320][INFO ][org.elasticsearch.client.transport] [transport_client_testWithSniffing_1] publish_address {local[119]}, bound_addresses {local[119]}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithSniffing(org.elasticsearch.client.transport.TransportClientHeadersTests)",
  "startTimestamp": 1473935982178,
  "executionTime": 174
 }
]

[
 "TEST_STARTED",
 "ID#testOverrideHeader(org.elasticsearch.client.transport.TransportClientHeadersTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:39:42,357][INFO ][org.elasticsearch.plugins] [test-testOverrideHeader] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:39:42,357][INFO ][org.elasticsearch.plugins] [test-testOverrideHeader] loaded plugin [org.elasticsearch.client.transport.TransportClientHeadersTests$InternalTransportService$TestPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:39:42,375][INFO ][org.elasticsearch.client.transport] [test-testOverrideHeader] publish_address {local[120]}, bound_addresses {local[120]}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOverrideHeader(org.elasticsearch.client.transport.TransportClientHeadersTests)",
  "startTimestamp": 1473935982352,
  "executionTime": 84
 }
]

[
 "TEST_STARTED",
 "ID#testActions(org.elasticsearch.client.transport.TransportClientHeadersTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:39:42,442][INFO ][org.elasticsearch.plugins] [test-testActions] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:39:42,442][INFO ][org.elasticsearch.plugins] [test-testActions] loaded plugin [org.elasticsearch.client.transport.TransportClientHeadersTests$InternalTransportService$TestPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T14:39:42,469][INFO ][org.elasticsearch.client.transport] [test-testActions] publish_address {local[121]}, bound_addresses {local[121]}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActions(org.elasticsearch.client.transport.TransportClientHeadersTests)",
  "startTimestamp": 1473935982436,
  "executionTime": 42
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.client.transport.TransportClientHeadersTests",
  "startTimestamp": 1473935982160,
  "executionTime": 324
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.client.transport.TransportClientTests",
   "displayName": "org.elasticsearch.client.transport.TransportClientTests",
   "methodName": null,
   "className": "org.elasticsearch.client.transport.TransportClientTests",
   "children": [
    {
     "id": "ID#testThatUsingAClosedClientThrowsAnException(org.elasticsearch.client.transport.TransportClientTests)",
     "displayName": "testThatUsingAClosedClientThrowsAnException(org.elasticsearch.client.transport.TransportClientTests)",
     "methodName": "testThatUsingAClosedClientThrowsAnException",
     "className": "org.elasticsearch.client.transport.TransportClientTests",
     "children": []
    },
    {
     "id": "ID#testPluginNamedWriteablesRegistered(org.elasticsearch.client.transport.TransportClientTests)",
     "displayName": "testPluginNamedWriteablesRegistered(org.elasticsearch.client.transport.TransportClientTests)",
     "methodName": "testPluginNamedWriteablesRegistered",
     "className": "org.elasticsearch.client.transport.TransportClientTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935982691
 }
]

[
 "TEST_STARTED",
 "ID#testThatUsingAClosedClientThrowsAnException(org.elasticsearch.client.transport.TransportClientTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:42,711][INFO ][org.elasticsearch.plugins] [_client_] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:42,712][INFO ][org.elasticsearch.plugins] [_client_] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:42,739][INFO ][org.elasticsearch.transport] [_client_] publish_address {local[122]}, bound_addresses {local[122]}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatUsingAClosedClientThrowsAnException(org.elasticsearch.client.transport.TransportClientTests)",
  "startTimestamp": 1473935982709,
  "executionTime": 36
 }
]

[
 "TEST_STARTED",
 "ID#testPluginNamedWriteablesRegistered(org.elasticsearch.client.transport.TransportClientTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:42,769][INFO ][org.elasticsearch.plugins] [_client_] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:42,770][INFO ][org.elasticsearch.plugins] [_client_] loaded plugin [org.elasticsearch.client.transport.TransportClientTests$MockPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:39:42,806][INFO ][org.elasticsearch.transport] [_client_] publish_address {local[123]}, bound_addresses {local[123]}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPluginNamedWriteablesRegistered(org.elasticsearch.client.transport.TransportClientTests)",
  "startTimestamp": 1473935982746,
  "executionTime": 61
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.client.transport.TransportClientTests",
  "startTimestamp": 1473935982691,
  "executionTime": 120
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.ClusterChangedEventTests",
   "displayName": "org.elasticsearch.cluster.ClusterChangedEventTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.ClusterChangedEventTests",
   "children": [
    {
     "id": "ID#testNodesAddedAndRemovedAndChanged(org.elasticsearch.cluster.ClusterChangedEventTests)",
     "displayName": "testNodesAddedAndRemovedAndChanged(org.elasticsearch.cluster.ClusterChangedEventTests)",
     "methodName": "testNodesAddedAndRemovedAndChanged",
     "className": "org.elasticsearch.cluster.ClusterChangedEventTests",
     "children": []
    },
    {
     "id": "ID#testBasicProperties(org.elasticsearch.cluster.ClusterChangedEventTests)",
     "displayName": "testBasicProperties(org.elasticsearch.cluster.ClusterChangedEventTests)",
     "methodName": "testBasicProperties",
     "className": "org.elasticsearch.cluster.ClusterChangedEventTests",
     "children": []
    },
    {
     "id": "ID#testLocalNodeIsMaster(org.elasticsearch.cluster.ClusterChangedEventTests)",
     "displayName": "testLocalNodeIsMaster(org.elasticsearch.cluster.ClusterChangedEventTests)",
     "methodName": "testLocalNodeIsMaster",
     "className": "org.elasticsearch.cluster.ClusterChangedEventTests",
     "children": []
    },
    {
     "id": "ID#testRoutingTableChanges(org.elasticsearch.cluster.ClusterChangedEventTests)",
     "displayName": "testRoutingTableChanges(org.elasticsearch.cluster.ClusterChangedEventTests)",
     "methodName": "testRoutingTableChanges",
     "className": "org.elasticsearch.cluster.ClusterChangedEventTests",
     "children": []
    },
    {
     "id": "ID#testIndicesMetaDataChanges(org.elasticsearch.cluster.ClusterChangedEventTests)",
     "displayName": "testIndicesMetaDataChanges(org.elasticsearch.cluster.ClusterChangedEventTests)",
     "methodName": "testIndicesMetaDataChanges",
     "className": "org.elasticsearch.cluster.ClusterChangedEventTests",
     "children": []
    },
    {
     "id": "ID#testIndexMetaDataChange(org.elasticsearch.cluster.ClusterChangedEventTests)",
     "displayName": "testIndexMetaDataChange(org.elasticsearch.cluster.ClusterChangedEventTests)",
     "methodName": "testIndexMetaDataChange",
     "className": "org.elasticsearch.cluster.ClusterChangedEventTests",
     "children": []
    },
    {
     "id": "ID#testIndicesDeletionWithNotRecoveredState(org.elasticsearch.cluster.ClusterChangedEventTests)",
     "displayName": "testIndicesDeletionWithNotRecoveredState(org.elasticsearch.cluster.ClusterChangedEventTests)",
     "methodName": "testIndicesDeletionWithNotRecoveredState",
     "className": "org.elasticsearch.cluster.ClusterChangedEventTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935982981
 }
]

[
 "TEST_STARTED",
 "ID#testNodesAddedAndRemovedAndChanged(org.elasticsearch.cluster.ClusterChangedEventTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNodesAddedAndRemovedAndChanged(org.elasticsearch.cluster.ClusterChangedEventTests)",
  "startTimestamp": 1473935982998,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testBasicProperties(org.elasticsearch.cluster.ClusterChangedEventTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicProperties(org.elasticsearch.cluster.ClusterChangedEventTests)",
  "startTimestamp": 1473935983001,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testLocalNodeIsMaster(org.elasticsearch.cluster.ClusterChangedEventTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLocalNodeIsMaster(org.elasticsearch.cluster.ClusterChangedEventTests)",
  "startTimestamp": 1473935983003,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRoutingTableChanges(org.elasticsearch.cluster.ClusterChangedEventTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoutingTableChanges(org.elasticsearch.cluster.ClusterChangedEventTests)",
  "startTimestamp": 1473935983005,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIndicesMetaDataChanges(org.elasticsearch.cluster.ClusterChangedEventTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndicesMetaDataChanges(org.elasticsearch.cluster.ClusterChangedEventTests)",
  "startTimestamp": 1473935983008,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testIndexMetaDataChange(org.elasticsearch.cluster.ClusterChangedEventTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexMetaDataChange(org.elasticsearch.cluster.ClusterChangedEventTests)",
  "startTimestamp": 1473935983017,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testIndicesDeletionWithNotRecoveredState(org.elasticsearch.cluster.ClusterChangedEventTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndicesDeletionWithNotRecoveredState(org.elasticsearch.cluster.ClusterChangedEventTests)",
  "startTimestamp": 1473935983018,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.ClusterChangedEventTests",
  "startTimestamp": 1473935982981,
  "executionTime": 42
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.ClusterModuleTests",
   "displayName": "org.elasticsearch.cluster.ClusterModuleTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.ClusterModuleTests",
   "children": [
    {
     "id": "ID#testRegisterClusterDynamicSetting(org.elasticsearch.cluster.ClusterModuleTests)",
     "displayName": "testRegisterClusterDynamicSetting(org.elasticsearch.cluster.ClusterModuleTests)",
     "methodName": "testRegisterClusterDynamicSetting",
     "className": "org.elasticsearch.cluster.ClusterModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterShardsAllocatorAlreadyRegistered(org.elasticsearch.cluster.ClusterModuleTests)",
     "displayName": "testRegisterShardsAllocatorAlreadyRegistered(org.elasticsearch.cluster.ClusterModuleTests)",
     "methodName": "testRegisterShardsAllocatorAlreadyRegistered",
     "className": "org.elasticsearch.cluster.ClusterModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterShardsAllocator(org.elasticsearch.cluster.ClusterModuleTests)",
     "displayName": "testRegisterShardsAllocator(org.elasticsearch.cluster.ClusterModuleTests)",
     "methodName": "testRegisterShardsAllocator",
     "className": "org.elasticsearch.cluster.ClusterModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterClusterDynamicSettingDuplicate(org.elasticsearch.cluster.ClusterModuleTests)",
     "displayName": "testRegisterClusterDynamicSettingDuplicate(org.elasticsearch.cluster.ClusterModuleTests)",
     "methodName": "testRegisterClusterDynamicSettingDuplicate",
     "className": "org.elasticsearch.cluster.ClusterModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterAllocationDecider(org.elasticsearch.cluster.ClusterModuleTests)",
     "displayName": "testRegisterAllocationDecider(org.elasticsearch.cluster.ClusterModuleTests)",
     "methodName": "testRegisterAllocationDecider",
     "className": "org.elasticsearch.cluster.ClusterModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterIndexDynamicSettingDuplicate(org.elasticsearch.cluster.ClusterModuleTests)",
     "displayName": "testRegisterIndexDynamicSettingDuplicate(org.elasticsearch.cluster.ClusterModuleTests)",
     "methodName": "testRegisterIndexDynamicSettingDuplicate",
     "className": "org.elasticsearch.cluster.ClusterModuleTests",
     "children": []
    },
    {
     "id": "ID#testUnknownShardsAllocator(org.elasticsearch.cluster.ClusterModuleTests)",
     "displayName": "testUnknownShardsAllocator(org.elasticsearch.cluster.ClusterModuleTests)",
     "methodName": "testUnknownShardsAllocator",
     "className": "org.elasticsearch.cluster.ClusterModuleTests",
     "children": []
    },
    {
     "id": "ID#testShardsAllocatorFactoryNull(org.elasticsearch.cluster.ClusterModuleTests)",
     "displayName": "testShardsAllocatorFactoryNull(org.elasticsearch.cluster.ClusterModuleTests)",
     "methodName": "testShardsAllocatorFactoryNull",
     "className": "org.elasticsearch.cluster.ClusterModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterIndexDynamicSetting(org.elasticsearch.cluster.ClusterModuleTests)",
     "displayName": "testRegisterIndexDynamicSetting(org.elasticsearch.cluster.ClusterModuleTests)",
     "methodName": "testRegisterIndexDynamicSetting",
     "className": "org.elasticsearch.cluster.ClusterModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterAllocationDeciderDuplicate(org.elasticsearch.cluster.ClusterModuleTests)",
     "displayName": "testRegisterAllocationDeciderDuplicate(org.elasticsearch.cluster.ClusterModuleTests)",
     "methodName": "testRegisterAllocationDeciderDuplicate",
     "className": "org.elasticsearch.cluster.ClusterModuleTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935983225
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterClusterDynamicSetting(org.elasticsearch.cluster.ClusterModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterClusterDynamicSetting(org.elasticsearch.cluster.ClusterModuleTests)",
  "startTimestamp": 1473935983237,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterShardsAllocatorAlreadyRegistered(org.elasticsearch.cluster.ClusterModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterShardsAllocatorAlreadyRegistered(org.elasticsearch.cluster.ClusterModuleTests)",
  "startTimestamp": 1473935983244,
  "executionTime": 69
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterShardsAllocator(org.elasticsearch.cluster.ClusterModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterShardsAllocator(org.elasticsearch.cluster.ClusterModuleTests)",
  "startTimestamp": 1473935983313,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterClusterDynamicSettingDuplicate(org.elasticsearch.cluster.ClusterModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterClusterDynamicSettingDuplicate(org.elasticsearch.cluster.ClusterModuleTests)",
  "startTimestamp": 1473935983318,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterAllocationDecider(org.elasticsearch.cluster.ClusterModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterAllocationDecider(org.elasticsearch.cluster.ClusterModuleTests)",
  "startTimestamp": 1473935983321,
  "executionTime": 34
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterIndexDynamicSettingDuplicate(org.elasticsearch.cluster.ClusterModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterIndexDynamicSettingDuplicate(org.elasticsearch.cluster.ClusterModuleTests)",
  "startTimestamp": 1473935983355,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownShardsAllocator(org.elasticsearch.cluster.ClusterModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownShardsAllocator(org.elasticsearch.cluster.ClusterModuleTests)",
  "startTimestamp": 1473935983359,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testShardsAllocatorFactoryNull(org.elasticsearch.cluster.ClusterModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardsAllocatorFactoryNull(org.elasticsearch.cluster.ClusterModuleTests)",
  "startTimestamp": 1473935983367,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterIndexDynamicSetting(org.elasticsearch.cluster.ClusterModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterIndexDynamicSetting(org.elasticsearch.cluster.ClusterModuleTests)",
  "startTimestamp": 1473935983374,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterAllocationDeciderDuplicate(org.elasticsearch.cluster.ClusterModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterAllocationDeciderDuplicate(org.elasticsearch.cluster.ClusterModuleTests)",
  "startTimestamp": 1473935983381,
  "executionTime": 16
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.ClusterModuleTests",
  "startTimestamp": 1473935983225,
  "executionTime": 173
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.DiskUsageTests",
   "displayName": "org.elasticsearch.cluster.DiskUsageTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.DiskUsageTests",
   "children": [
    {
     "id": "ID#testDiskUsageCalc(org.elasticsearch.cluster.DiskUsageTests)",
     "displayName": "testDiskUsageCalc(org.elasticsearch.cluster.DiskUsageTests)",
     "methodName": "testDiskUsageCalc",
     "className": "org.elasticsearch.cluster.DiskUsageTests",
     "children": []
    },
    {
     "id": "ID#testRandomDiskUsage(org.elasticsearch.cluster.DiskUsageTests)",
     "displayName": "testRandomDiskUsage(org.elasticsearch.cluster.DiskUsageTests)",
     "methodName": "testRandomDiskUsage",
     "className": "org.elasticsearch.cluster.DiskUsageTests",
     "children": []
    },
    {
     "id": "ID#testFillDiskUsage(org.elasticsearch.cluster.DiskUsageTests)",
     "displayName": "testFillDiskUsage(org.elasticsearch.cluster.DiskUsageTests)",
     "methodName": "testFillDiskUsage",
     "className": "org.elasticsearch.cluster.DiskUsageTests",
     "children": []
    },
    {
     "id": "ID#testFillShardsWithShadowIndices(org.elasticsearch.cluster.DiskUsageTests)",
     "displayName": "testFillShardsWithShadowIndices(org.elasticsearch.cluster.DiskUsageTests)",
     "methodName": "testFillShardsWithShadowIndices",
     "className": "org.elasticsearch.cluster.DiskUsageTests",
     "children": []
    },
    {
     "id": "ID#testFillDiskUsageSomeInvalidValues(org.elasticsearch.cluster.DiskUsageTests)",
     "displayName": "testFillDiskUsageSomeInvalidValues(org.elasticsearch.cluster.DiskUsageTests)",
     "methodName": "testFillDiskUsageSomeInvalidValues",
     "className": "org.elasticsearch.cluster.DiskUsageTests",
     "children": []
    },
    {
     "id": "ID#testFillShardLevelInfo(org.elasticsearch.cluster.DiskUsageTests)",
     "displayName": "testFillShardLevelInfo(org.elasticsearch.cluster.DiskUsageTests)",
     "methodName": "testFillShardLevelInfo",
     "className": "org.elasticsearch.cluster.DiskUsageTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935983510
 }
]

[
 "TEST_STARTED",
 "ID#testDiskUsageCalc(org.elasticsearch.cluster.DiskUsageTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDiskUsageCalc(org.elasticsearch.cluster.DiskUsageTests)",
  "startTimestamp": 1473935983527,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRandomDiskUsage(org.elasticsearch.cluster.DiskUsageTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomDiskUsage(org.elasticsearch.cluster.DiskUsageTests)",
  "startTimestamp": 1473935983530,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testFillDiskUsage(org.elasticsearch.cluster.DiskUsageTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFillDiskUsage(org.elasticsearch.cluster.DiskUsageTests)",
  "startTimestamp": 1473935983537,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFillShardsWithShadowIndices(org.elasticsearch.cluster.DiskUsageTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:43,548][INFO ][org.elasticsearch.cluster] [node_s_0] --> calling buildShardLevelInfo with state: {%0A  \"version\" : 0,%0A  \"state_uuid\" : \"mGXS4y5ZTt-kwj7RDDCNVw\",%0A  \"master_node\" : null,%0A  \"blocks\" : { },%0A  \"nodes\" : { },%0A  \"metadata\" : {%0A    \"cluster_uuid\" : \"_na_\",%0A    \"templates\" : { },%0A    \"indices\" : {%0A      \"non-shadow\" : {%0A        \"state\" : \"open\",%0A        \"settings\" : {%0A          \"index\" : {%0A            \"number_of_shards\" : \"1\",%0A            \"number_of_replicas\" : \"0\",%0A            \"uuid\" : \"0xcafe0000\",%0A            \"version\" : {%0A              \"created\" : \"5000006\"%0A            }%0A          }%0A        },%0A        \"mappings\" : { },%0A        \"aliases\" : [ ],%0A        \"primary_terms\" : {%0A          \"0\" : 0%0A        },%0A        \"in_sync_allocations\" : {%0A          \"0\" : [ ]%0A        }%0A      },%0A      \"shadow\" : {%0A        \"state\" : \"open\",%0A        \"settings\" : {%0A          \"index\" : {%0A            \"number_of_shards\" : \"1\",%0A            \"number_of_replicas\" : \"0\",%0A            \"uuid\" : \"0xcafe0001\",%0A            \"version\" : {%0A              \"created\" : \"5000006\"%0A            },%0A            \"shadow_replicas\" : \"true\"%0A          }%0A        },%0A        \"mappings\" : { },%0A        \"aliases\" : [ ],%0A        \"primary_terms\" : {%0A          \"0\" : 0%0A        },%0A        \"in_sync_allocations\" : {%0A          \"0\" : [ ]%0A        }%0A      }%0A    },%0A    \"index-graveyard\" : {%0A      \"tombstones\" : [ ]%0A    }%0A  },%0A  \"routing_table\" : {%0A    \"indices\" : { }%0A  },%0A  \"routing_nodes\" : {%0A    \"unassigned\" : [ ],%0A    \"nodes\" : { }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFillShardsWithShadowIndices(org.elasticsearch.cluster.DiskUsageTests)",
  "startTimestamp": 1473935983540,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testFillDiskUsageSomeInvalidValues(org.elasticsearch.cluster.DiskUsageTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFillDiskUsageSomeInvalidValues(org.elasticsearch.cluster.DiskUsageTests)",
  "startTimestamp": 1473935983549,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFillShardLevelInfo(org.elasticsearch.cluster.DiskUsageTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFillShardLevelInfo(org.elasticsearch.cluster.DiskUsageTests)",
  "startTimestamp": 1473935983550,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.DiskUsageTests",
  "startTimestamp": 1473935983510,
  "executionTime": 47
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests",
   "displayName": "org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests",
   "children": [
    {
     "id": "ID#testDuplicateFailuresAreOkay(org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests)",
     "displayName": "testDuplicateFailuresAreOkay(org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests)",
     "methodName": "testDuplicateFailuresAreOkay",
     "className": "org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests",
     "children": []
    },
    {
     "id": "ID#testTriviallySuccessfulTasksBatchedWithFailingTasks(org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests)",
     "displayName": "testTriviallySuccessfulTasksBatchedWithFailingTasks(org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests)",
     "methodName": "testTriviallySuccessfulTasksBatchedWithFailingTasks",
     "className": "org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests",
     "children": []
    },
    {
     "id": "ID#testIllegalShardFailureRequests(org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests)",
     "displayName": "testIllegalShardFailureRequests(org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests)",
     "methodName": "testIllegalShardFailureRequests",
     "className": "org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests",
     "children": []
    },
    {
     "id": "ID#testNonExistentShardsAreMarkedAsSuccessful(org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests)",
     "displayName": "testNonExistentShardsAreMarkedAsSuccessful(org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests)",
     "methodName": "testNonExistentShardsAreMarkedAsSuccessful",
     "className": "org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests",
     "children": []
    },
    {
     "id": "ID#testEmptyTaskListProducesSameClusterState(org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests)",
     "displayName": "testEmptyTaskListProducesSameClusterState(org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests)",
     "methodName": "testEmptyTaskListProducesSameClusterState",
     "className": "org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935983775
 }
]

[
 "TEST_STARTED",
 "ID#testDuplicateFailuresAreOkay(org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuplicateFailuresAreOkay(org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests)",
  "startTimestamp": 1473935983788,
  "executionTime": 34
 }
]

[
 "TEST_STARTED",
 "ID#testTriviallySuccessfulTasksBatchedWithFailingTasks(org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTriviallySuccessfulTasksBatchedWithFailingTasks(org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests)",
  "startTimestamp": 1473935983822,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalShardFailureRequests(org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalShardFailureRequests(org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests)",
  "startTimestamp": 1473935983833,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testNonExistentShardsAreMarkedAsSuccessful(org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNonExistentShardsAreMarkedAsSuccessful(org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests)",
  "startTimestamp": 1473935983845,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyTaskListProducesSameClusterState(org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyTaskListProducesSameClusterState(org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests)",
  "startTimestamp": 1473935983857,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.action.shard.ShardFailedClusterStateTaskExecutorTests",
  "startTimestamp": 1473935983775,
  "executionTime": 95
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.block.ClusterBlockTests",
   "displayName": "org.elasticsearch.cluster.block.ClusterBlockTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.block.ClusterBlockTests",
   "children": [
    {
     "id": "ID#testToStringDanglingComma(org.elasticsearch.cluster.block.ClusterBlockTests)",
     "displayName": "testToStringDanglingComma(org.elasticsearch.cluster.block.ClusterBlockTests)",
     "methodName": "testToStringDanglingComma",
     "className": "org.elasticsearch.cluster.block.ClusterBlockTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.cluster.block.ClusterBlockTests)",
     "displayName": "testSerialization(org.elasticsearch.cluster.block.ClusterBlockTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.cluster.block.ClusterBlockTests",
     "children": []
    },
    {
     "id": "ID#testGlobalBlocksCheckedIfNoIndicesSpecified(org.elasticsearch.cluster.block.ClusterBlockTests)",
     "displayName": "testGlobalBlocksCheckedIfNoIndicesSpecified(org.elasticsearch.cluster.block.ClusterBlockTests)",
     "methodName": "testGlobalBlocksCheckedIfNoIndicesSpecified",
     "className": "org.elasticsearch.cluster.block.ClusterBlockTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935984033
 }
]

[
 "TEST_STARTED",
 "ID#testToStringDanglingComma(org.elasticsearch.cluster.block.ClusterBlockTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToStringDanglingComma(org.elasticsearch.cluster.block.ClusterBlockTests)",
  "startTimestamp": 1473935984060,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.cluster.block.ClusterBlockTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.cluster.block.ClusterBlockTests)",
  "startTimestamp": 1473935984062,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testGlobalBlocksCheckedIfNoIndicesSpecified(org.elasticsearch.cluster.block.ClusterBlockTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGlobalBlocksCheckedIfNoIndicesSpecified(org.elasticsearch.cluster.block.ClusterBlockTests)",
  "startTimestamp": 1473935984065,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.block.ClusterBlockTests",
  "startTimestamp": 1473935984033,
  "executionTime": 36
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.health.ClusterIndexHealthTests",
   "displayName": "org.elasticsearch.cluster.health.ClusterIndexHealthTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.health.ClusterIndexHealthTests",
   "children": [
    {
     "id": "ID#testClusterIndexHealth(org.elasticsearch.cluster.health.ClusterIndexHealthTests)",
     "displayName": "testClusterIndexHealth(org.elasticsearch.cluster.health.ClusterIndexHealthTests)",
     "methodName": "testClusterIndexHealth",
     "className": "org.elasticsearch.cluster.health.ClusterIndexHealthTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935984784
 }
]

[
 "TEST_STARTED",
 "ID#testClusterIndexHealth(org.elasticsearch.cluster.health.ClusterIndexHealthTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:44,830][INFO ][org.elasticsearch.cluster.health] index status: YELLOW, expected YELLOW%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterIndexHealth(org.elasticsearch.cluster.health.ClusterIndexHealthTests)",
  "startTimestamp": 1473935984825,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.health.ClusterIndexHealthTests",
  "startTimestamp": 1473935984784,
  "executionTime": 49
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.FilterRoutingTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.FilterRoutingTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.FilterRoutingTests",
   "children": [
    {
     "id": "ID#testIndexFilters(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)",
     "displayName": "testIndexFilters(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)",
     "methodName": "testIndexFilters",
     "className": "org.elasticsearch.cluster.routing.allocation.FilterRoutingTests",
     "children": []
    },
    {
     "id": "ID#testConcurrentRecoveriesAfterShardsCannotRemainOnNode(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)",
     "displayName": "testConcurrentRecoveriesAfterShardsCannotRemainOnNode(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)",
     "methodName": "testConcurrentRecoveriesAfterShardsCannotRemainOnNode",
     "className": "org.elasticsearch.cluster.routing.allocation.FilterRoutingTests",
     "children": []
    },
    {
     "id": "ID#testClusterFilters(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)",
     "displayName": "testClusterFilters(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)",
     "methodName": "testClusterFilters",
     "className": "org.elasticsearch.cluster.routing.allocation.FilterRoutingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935985067
 }
]

[
 "TEST_STARTED",
 "ID#testIndexFilters(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:45,117][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:45,119][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:45,120][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:45,121][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (replicas)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:45,122][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][1], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:45,122][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> make sure shards are only allocated on tag1 with value1 and value2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:45,122][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> switch between value2 and value4, shards should be relocating%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:45,124][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> finish relocation%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexFilters(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)",
  "startTimestamp": 1473935985110,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testConcurrentRecoveriesAfterShardsCannotRemainOnNode(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:45,144][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:45,144][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:45,145][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (only primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:45,145][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0], [test1][0], [test2][1], [test1][1]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:45,146][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> make sure all shards are started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:45,146][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> disable allocation for node1 and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:45,151][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> move shards from node1 to node2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:45,152][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> check that concurrent recoveries only allows 1 shard to move%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:45,152][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (only primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:45,152][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> move second shard from node1 to node2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:45,153][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (only primaries)%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcurrentRecoveriesAfterShardsCannotRemainOnNode(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)",
  "startTimestamp": 1473935985125,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testClusterFilters(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:45,161][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:45,161][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding four nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:45,162][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:45,166][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (replicas)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:45,167][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][1], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-14T23:39:45,167][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> make sure shards are only allocated on tag1 with value1 and value2%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterFilters(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)",
  "startTimestamp": 1473935985154,
  "executionTime": 13
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.FilterRoutingTests",
  "startTimestamp": 1473935985067,
  "executionTime": 103
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.IndexBalanceTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.IndexBalanceTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.IndexBalanceTests",
   "children": [
    {
     "id": "ID#testBalanceIncrementallyStartNodes(org.elasticsearch.cluster.routing.allocation.IndexBalanceTests)",
     "displayName": "testBalanceIncrementallyStartNodes(org.elasticsearch.cluster.routing.allocation.IndexBalanceTests)",
     "methodName": "testBalanceIncrementallyStartNodes",
     "className": "org.elasticsearch.cluster.routing.allocation.IndexBalanceTests",
     "children": []
    },
    {
     "id": "ID#testBalanceAllNodesStartedAddIndex(org.elasticsearch.cluster.routing.allocation.IndexBalanceTests)",
     "displayName": "testBalanceAllNodesStartedAddIndex(org.elasticsearch.cluster.routing.allocation.IndexBalanceTests)",
     "methodName": "testBalanceAllNodesStartedAddIndex",
     "className": "org.elasticsearch.cluster.routing.allocation.IndexBalanceTests",
     "children": []
    },
    {
     "id": "ID#testBalanceAllNodesStarted(org.elasticsearch.cluster.routing.allocation.IndexBalanceTests)",
     "displayName": "testBalanceAllNodesStarted(org.elasticsearch.cluster.routing.allocation.IndexBalanceTests)",
     "methodName": "testBalanceAllNodesStarted",
     "className": "org.elasticsearch.cluster.routing.allocation.IndexBalanceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935985302
 }
]

[
 "TEST_STARTED",
 "ID#testBalanceIncrementallyStartNodes(org.elasticsearch.cluster.routing.allocation.IndexBalanceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:45,338][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:45,340][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding one node and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:45,341][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Add another node and perform rerouting, nothing will happen since primary not started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:45,342][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the primary shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:45,342][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, nothing should change%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:45,343][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the backup shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:45,343][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][1], [test][2], [test][0], [test1][1], [test1][2], [test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:45,343][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Add another node and perform rerouting, nothing will happen since primary not started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:45,350][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, nothing should change%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:45,351][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the backup shard%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBalanceIncrementallyStartNodes(org.elasticsearch.cluster.routing.allocation.IndexBalanceTests)",
  "startTimestamp": 1473935985330,
  "executionTime": 32
 }
]

[
 "TEST_STARTED",
 "ID#testBalanceAllNodesStartedAddIndex(org.elasticsearch.cluster.routing.allocation.IndexBalanceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:45,396][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:45,397][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding three node and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:45,397][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Another round of rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:45,402][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, nothing should change%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:45,402][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the more shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:45,402][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][2], [test][0], [test][1]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:45,403][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Add new index 3 shards 1 replica%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:45,403][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Another round of rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:45,404][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, nothing should change%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:45,404][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the more shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:45,405][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][2], [test1][0], [test1][1]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBalanceAllNodesStartedAddIndex(org.elasticsearch.cluster.routing.allocation.IndexBalanceTests)",
  "startTimestamp": 1473935985362,
  "executionTime": 43
 }
]

[
 "TEST_STARTED",
 "ID#testBalanceAllNodesStarted(org.elasticsearch.cluster.routing.allocation.IndexBalanceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:45,413][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:45,414][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding three node and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:45,414][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Another round of rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:45,415][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, nothing should change%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:45,415][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the more shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:39:45,416][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][2], [test1][2], [test][0], [test1][0], [test][1], [test1][1]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBalanceAllNodesStarted(org.elasticsearch.cluster.routing.allocation.IndexBalanceTests)",
  "startTimestamp": 1473935985405,
  "executionTime": 12
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.IndexBalanceTests",
  "startTimestamp": 1473935985302,
  "executionTime": 117
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.codecs.CodecTests",
   "displayName": "org.elasticsearch.codecs.CodecTests",
   "methodName": null,
   "className": "org.elasticsearch.codecs.CodecTests",
   "children": [
    {
     "id": "ID#testAcceptPostingsFormat(org.elasticsearch.codecs.CodecTests)",
     "displayName": "testAcceptPostingsFormat(org.elasticsearch.codecs.CodecTests)",
     "methodName": "testAcceptPostingsFormat",
     "className": "org.elasticsearch.codecs.CodecTests",
     "children": []
    },
    {
     "id": "ID#testAcceptDocValuesFormat(org.elasticsearch.codecs.CodecTests)",
     "displayName": "testAcceptDocValuesFormat(org.elasticsearch.codecs.CodecTests)",
     "methodName": "testAcceptDocValuesFormat",
     "className": "org.elasticsearch.codecs.CodecTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935985623
 }
]

[
 "TEST_STARTED",
 "ID#testAcceptPostingsFormat(org.elasticsearch.codecs.CodecTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:45,700][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:45,804][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:45,804][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:45,809][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[15428], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:45,812][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:45,812][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:45,995][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:45,995][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:45,996][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[124]}, bound_addresses {local[124]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:45,997][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{877bZ-RxRJu05uVml-7Axw}{94--xpWPT8uoZofYX-4kmw}{local}{local[124]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:45,998][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:46,011][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:46,031][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-0] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:46,092][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-0][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:46,111][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:46,163][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:46,180][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:46,244][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:46,264][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-3] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:46,347][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-3][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:46,375][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-4] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:46,470][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-4][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:46,492][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-5] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:46,556][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-5][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:46,576][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-6] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:46,696][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-6][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:46,712][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-7] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:46,771][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-7][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:46,791][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-8] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:46,838][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-8][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:46,853][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-9] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:46,900][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-9][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:46,914][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-10] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:46,960][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-10][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:46,979][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-11] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:47,020][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-11][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:47,075][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-12] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:47,118][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-12][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:47,131][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-13] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:47,195][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-13][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:47,215][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-14] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:47,260][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-14][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:47,279][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-15] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:47,347][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-15][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:47,371][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-16] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:47,436][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-16][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:47,456][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-17] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:47,531][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-17][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:47,549][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-18] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:47,666][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-18][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:47,688][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-19] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:47,858][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-19][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:47,879][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-20] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:47,967][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-20][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:47,985][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-21] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:48,033][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-21][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:48,050][INFO ][org.elasticsearch.codecs ] [CodecTests#testAcceptPostingsFormat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAcceptPostingsFormat(org.elasticsearch.codecs.CodecTests)",
  "startTimestamp": 1473935985681,
  "executionTime": 2932
 }
]

[
 "TEST_STARTED",
 "ID#testAcceptDocValuesFormat(org.elasticsearch.codecs.CodecTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:48,621][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-0] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:48,674][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-0][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:48,692][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:48,735][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:48,749][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:48,795][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:48,809][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-3] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:48,853][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-3][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:48,868][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-4] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:48,932][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-4][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:48,948][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-5] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:48,991][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-5][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:49,006][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-6] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:49,056][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-6][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:49,074][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-7] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:49,147][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-7][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:49,169][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-8] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:49,227][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-8][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:49,245][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-9] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:49,341][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-9][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:49,367][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-10] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:49,438][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-10][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:49,456][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-11] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:49,506][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-11][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:49,525][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-12] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:49,581][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-12][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:49,599][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-13] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:49,681][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-13][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:49,701][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-14] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:49,897][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-14][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:50,003][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-15] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:50,083][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-15][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:50,102][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-16] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:50,194][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-16][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:50,215][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-17] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:50,270][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-17][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:50,288][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-18] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:50,349][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-18][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:50,383][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-19] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:50,552][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-19][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:50,576][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-20] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:50,647][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-20][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:50,667][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-21] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:50,720][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-21][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:50,736][INFO ][org.elasticsearch.codecs ] [CodecTests#testAcceptDocValuesFormat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAcceptDocValuesFormat(org.elasticsearch.codecs.CodecTests)",
  "startTimestamp": 1473935988613,
  "executionTime": 2869
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:51,482][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:51,483][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:51,483][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:39:51,485][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.codecs.CodecTests",
  "startTimestamp": 1473935985623,
  "executionTime": 5873
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests",
   "displayName": "org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests",
   "children": [
    {
     "id": "ID#testSeekOverflow(org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests)",
     "displayName": "testSeekOverflow(org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests)",
     "methodName": "testSeekOverflow",
     "className": "org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests",
     "children": []
    },
    {
     "id": "ID#testRandomReads(org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests)",
     "displayName": "testRandomReads(org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests)",
     "methodName": "testRandomReads",
     "className": "org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests",
     "children": []
    },
    {
     "id": "ID#testRandomOverflow(org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests)",
     "displayName": "testRandomOverflow(org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests)",
     "methodName": "testRandomOverflow",
     "className": "org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935991663
 }
]

[
 "TEST_STARTED",
 "ID#testSeekOverflow(org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSeekOverflow(org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests)",
  "startTimestamp": 1473935991674,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testRandomReads(org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomReads(org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests)",
  "startTimestamp": 1473935991685,
  "executionTime": 41
 }
]

[
 "TEST_STARTED",
 "ID#testRandomOverflow(org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomOverflow(org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests)",
  "startTimestamp": 1473935991726,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests",
  "startTimestamp": 1473935991663,
  "executionTime": 73
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.network.InetAddressesTests",
   "displayName": "org.elasticsearch.common.network.InetAddressesTests",
   "methodName": null,
   "className": "org.elasticsearch.common.network.InetAddressesTests",
   "children": [
    {
     "id": "ID#testForStringBogusInput(org.elasticsearch.common.network.InetAddressesTests)",
     "displayName": "testForStringBogusInput(org.elasticsearch.common.network.InetAddressesTests)",
     "methodName": "testForStringBogusInput",
     "className": "org.elasticsearch.common.network.InetAddressesTests",
     "children": []
    },
    {
     "id": "ID#testToAddrStringIPv6(org.elasticsearch.common.network.InetAddressesTests)",
     "displayName": "testToAddrStringIPv6(org.elasticsearch.common.network.InetAddressesTests)",
     "methodName": "testToAddrStringIPv6",
     "className": "org.elasticsearch.common.network.InetAddressesTests",
     "children": []
    },
    {
     "id": "ID#testToAddrStringIPv4(org.elasticsearch.common.network.InetAddressesTests)",
     "displayName": "testToAddrStringIPv4(org.elasticsearch.common.network.InetAddressesTests)",
     "methodName": "testToAddrStringIPv4",
     "className": "org.elasticsearch.common.network.InetAddressesTests",
     "children": []
    },
    {
     "id": "ID#testForStringIPv4Input(org.elasticsearch.common.network.InetAddressesTests)",
     "displayName": "testForStringIPv4Input(org.elasticsearch.common.network.InetAddressesTests)",
     "methodName": "testForStringIPv4Input",
     "className": "org.elasticsearch.common.network.InetAddressesTests",
     "children": []
    },
    {
     "id": "ID#test3ff31(org.elasticsearch.common.network.InetAddressesTests)",
     "displayName": "test3ff31(org.elasticsearch.common.network.InetAddressesTests)",
     "methodName": "test3ff31",
     "className": "org.elasticsearch.common.network.InetAddressesTests",
     "children": []
    },
    {
     "id": "ID#testForStringIPv6Input(org.elasticsearch.common.network.InetAddressesTests)",
     "displayName": "testForStringIPv6Input(org.elasticsearch.common.network.InetAddressesTests)",
     "methodName": "testForStringIPv6Input",
     "className": "org.elasticsearch.common.network.InetAddressesTests",
     "children": []
    },
    {
     "id": "ID#testToUriStringIPv6(org.elasticsearch.common.network.InetAddressesTests)",
     "displayName": "testToUriStringIPv6(org.elasticsearch.common.network.InetAddressesTests)",
     "methodName": "testToUriStringIPv6",
     "className": "org.elasticsearch.common.network.InetAddressesTests",
     "children": []
    },
    {
     "id": "ID#testToUriStringIPv4(org.elasticsearch.common.network.InetAddressesTests)",
     "displayName": "testToUriStringIPv4(org.elasticsearch.common.network.InetAddressesTests)",
     "methodName": "testToUriStringIPv4",
     "className": "org.elasticsearch.common.network.InetAddressesTests",
     "children": []
    },
    {
     "id": "ID#testForStringIPv6EightColons(org.elasticsearch.common.network.InetAddressesTests)",
     "displayName": "testForStringIPv6EightColons(org.elasticsearch.common.network.InetAddressesTests)",
     "methodName": "testForStringIPv6EightColons",
     "className": "org.elasticsearch.common.network.InetAddressesTests",
     "children": []
    },
    {
     "id": "ID#testConvertDottedQuadToHex(org.elasticsearch.common.network.InetAddressesTests)",
     "displayName": "testConvertDottedQuadToHex(org.elasticsearch.common.network.InetAddressesTests)",
     "methodName": "testConvertDottedQuadToHex",
     "className": "org.elasticsearch.common.network.InetAddressesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935992096
 }
]

[
 "TEST_STARTED",
 "ID#testForStringBogusInput(org.elasticsearch.common.network.InetAddressesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForStringBogusInput(org.elasticsearch.common.network.InetAddressesTests)",
  "startTimestamp": 1473935992121,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testToAddrStringIPv6(org.elasticsearch.common.network.InetAddressesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToAddrStringIPv6(org.elasticsearch.common.network.InetAddressesTests)",
  "startTimestamp": 1473935992125,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToAddrStringIPv4(org.elasticsearch.common.network.InetAddressesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToAddrStringIPv4(org.elasticsearch.common.network.InetAddressesTests)",
  "startTimestamp": 1473935992128,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testForStringIPv4Input(org.elasticsearch.common.network.InetAddressesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForStringIPv4Input(org.elasticsearch.common.network.InetAddressesTests)",
  "startTimestamp": 1473935992130,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#test3ff31(org.elasticsearch.common.network.InetAddressesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#test3ff31(org.elasticsearch.common.network.InetAddressesTests)",
  "startTimestamp": 1473935992133,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testForStringIPv6Input(org.elasticsearch.common.network.InetAddressesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForStringIPv6Input(org.elasticsearch.common.network.InetAddressesTests)",
  "startTimestamp": 1473935992139,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToUriStringIPv6(org.elasticsearch.common.network.InetAddressesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToUriStringIPv6(org.elasticsearch.common.network.InetAddressesTests)",
  "startTimestamp": 1473935992142,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testToUriStringIPv4(org.elasticsearch.common.network.InetAddressesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToUriStringIPv4(org.elasticsearch.common.network.InetAddressesTests)",
  "startTimestamp": 1473935992144,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testForStringIPv6EightColons(org.elasticsearch.common.network.InetAddressesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForStringIPv6EightColons(org.elasticsearch.common.network.InetAddressesTests)",
  "startTimestamp": 1473935992160,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConvertDottedQuadToHex(org.elasticsearch.common.network.InetAddressesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConvertDottedQuadToHex(org.elasticsearch.common.network.InetAddressesTests)",
  "startTimestamp": 1473935992163,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.network.InetAddressesTests",
  "startTimestamp": 1473935992096,
  "executionTime": 71
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.network.NetworkAddressTests",
   "displayName": "org.elasticsearch.common.network.NetworkAddressTests",
   "methodName": null,
   "className": "org.elasticsearch.common.network.NetworkAddressTests",
   "children": [
    {
     "id": "ID#testRoundTripV4(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testRoundTripV4(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testRoundTripV4",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    },
    {
     "id": "ID#testFormatPortV4(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testFormatPortV4(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testFormatPortV4",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    },
    {
     "id": "ID#testNoScopeID(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testNoScopeID(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testNoScopeID",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    },
    {
     "id": "ID#testRoundTripV6(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testRoundTripV6(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testRoundTripV6",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    },
    {
     "id": "ID#testFormatV6(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testFormatV6(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testFormatV6",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    },
    {
     "id": "ID#testFormatPortV6(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testFormatPortV6(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testFormatPortV6",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    },
    {
     "id": "ID#testFormatV4(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testFormatV4(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testFormatV4",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935992344
 }
]

[
 "TEST_STARTED",
 "ID#testRoundTripV4(org.elasticsearch.common.network.NetworkAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoundTripV4(org.elasticsearch.common.network.NetworkAddressTests)",
  "startTimestamp": 1473935992357,
  "executionTime": 39
 }
]

[
 "TEST_STARTED",
 "ID#testFormatPortV4(org.elasticsearch.common.network.NetworkAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFormatPortV4(org.elasticsearch.common.network.NetworkAddressTests)",
  "startTimestamp": 1473935992397,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNoScopeID(org.elasticsearch.common.network.NetworkAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoScopeID(org.elasticsearch.common.network.NetworkAddressTests)",
  "startTimestamp": 1473935992400,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRoundTripV6(org.elasticsearch.common.network.NetworkAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoundTripV6(org.elasticsearch.common.network.NetworkAddressTests)",
  "startTimestamp": 1473935992402,
  "executionTime": 102
 }
]

[
 "TEST_STARTED",
 "ID#testFormatV6(org.elasticsearch.common.network.NetworkAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFormatV6(org.elasticsearch.common.network.NetworkAddressTests)",
  "startTimestamp": 1473935992504,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFormatPortV6(org.elasticsearch.common.network.NetworkAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFormatPortV6(org.elasticsearch.common.network.NetworkAddressTests)",
  "startTimestamp": 1473935992506,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFormatV4(org.elasticsearch.common.network.NetworkAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFormatV4(org.elasticsearch.common.network.NetworkAddressTests)",
  "startTimestamp": 1473935992508,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.network.NetworkAddressTests",
  "startTimestamp": 1473935992344,
  "executionTime": 168
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.rounding.DateTimeUnitTests",
   "displayName": "org.elasticsearch.common.rounding.DateTimeUnitTests",
   "methodName": null,
   "className": "org.elasticsearch.common.rounding.DateTimeUnitTests",
   "children": [
    {
     "id": "ID#testEnumIds(org.elasticsearch.common.rounding.DateTimeUnitTests)",
     "displayName": "testEnumIds(org.elasticsearch.common.rounding.DateTimeUnitTests)",
     "methodName": "testEnumIds",
     "className": "org.elasticsearch.common.rounding.DateTimeUnitTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935992633
 }
]

[
 "TEST_STARTED",
 "ID#testEnumIds(org.elasticsearch.common.rounding.DateTimeUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnumIds(org.elasticsearch.common.rounding.DateTimeUnitTests)",
  "startTimestamp": 1473935992647,
  "executionTime": 11
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.rounding.DateTimeUnitTests",
  "startTimestamp": 1473935992633,
  "executionTime": 27
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.rounding.TimeZoneRoundingTests",
   "displayName": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
   "methodName": null,
   "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
   "children": [
    {
     "id": "ID#testIntervalRounding_HalfDay_DST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testIntervalRounding_HalfDay_DST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testIntervalRounding_HalfDay_DST",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testTimeRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testTimeRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testTimeRounding",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testRoundingRandom(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testRoundingRandom(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testRoundingRandom",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testUTCTimeUnitRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testUTCTimeUnitRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testUTCTimeUnitRounding",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testTimeIntervalRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testTimeIntervalRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testTimeIntervalRounding",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testTimeIntervalCET_DST_Start(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testTimeIntervalCET_DST_Start(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testTimeIntervalCET_DST_Start",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testUTCIntervalRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testUTCIntervalRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testUTCIntervalRounding",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testTimeUnitRoundingDST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testTimeUnitRoundingDST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testTimeUnitRoundingDST",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testIntervalRounding_NotDivisibleInteval(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testIntervalRounding_NotDivisibleInteval(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testIntervalRounding_NotDivisibleInteval",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testDayRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testDayRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testDayRounding",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testIntervalRoundingMonotonic_CET(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testIntervalRoundingMonotonic_CET(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testIntervalRoundingMonotonic_CET",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testIntervalRoundingRandom(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testIntervalRoundingRandom(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testIntervalRoundingRandom",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testTimeInterval_Kathmandu_DST_Start(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testTimeInterval_Kathmandu_DST_Start(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testTimeInterval_Kathmandu_DST_Start",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testDayIntervalRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testDayIntervalRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testDayIntervalRounding",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testTimeIntervalCET_DST_End(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testTimeIntervalCET_DST_End(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testTimeIntervalCET_DST_End",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testLenientConversionDST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testLenientConversionDST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testLenientConversionDST",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testAmbiguousHoursAfterDSTSwitch(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testAmbiguousHoursAfterDSTSwitch(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testAmbiguousHoursAfterDSTSwitch",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testEdgeCasesTransition(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testEdgeCasesTransition(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testEdgeCasesTransition",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935992939
 }
]

[
 "TEST_STARTED",
 "ID#testIntervalRounding_HalfDay_DST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIntervalRounding_HalfDay_DST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1473935992951,
  "executionTime": 34
 }
]

[
 "TEST_STARTED",
 "ID#testTimeRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1473935992986,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testRoundingRandom(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoundingRandom(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1473935992996,
  "executionTime": 1576
 }
]

[
 "TEST_STARTED",
 "ID#testUTCTimeUnitRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUTCTimeUnitRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1473935994572,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testTimeIntervalRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeIntervalRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1473935994579,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testTimeIntervalCET_DST_Start(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeIntervalCET_DST_Start(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1473935994592,
  "executionTime": 37
 }
]

[
 "TEST_STARTED",
 "ID#testUTCIntervalRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUTCIntervalRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1473935994630,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTimeUnitRoundingDST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeUnitRoundingDST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1473935994633,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testIntervalRounding_NotDivisibleInteval(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIntervalRounding_NotDivisibleInteval(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1473935994643,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDayRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDayRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1473935994646,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIntervalRoundingMonotonic_CET(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIntervalRoundingMonotonic_CET(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1473935994648,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIntervalRoundingRandom(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIntervalRoundingRandom(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1473935994652,
  "executionTime": 374
 }
]

[
 "TEST_STARTED",
 "ID#testTimeInterval_Kathmandu_DST_Start(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeInterval_Kathmandu_DST_Start(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1473935995026,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDayIntervalRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDayIntervalRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1473935995029,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTimeIntervalCET_DST_End(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeIntervalCET_DST_End(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1473935995031,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testLenientConversionDST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLenientConversionDST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1473935995036,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testAmbiguousHoursAfterDSTSwitch(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAmbiguousHoursAfterDSTSwitch(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1473935995039,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEdgeCasesTransition(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEdgeCasesTransition(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1473935995042,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.rounding.TimeZoneRoundingTests",
  "startTimestamp": 1473935992939,
  "executionTime": 2111
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests",
   "displayName": "org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests",
   "children": [
    {
     "id": "ID#testSimpleJsonSettings(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)",
     "displayName": "testSimpleJsonSettings(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)",
     "methodName": "testSimpleJsonSettings",
     "className": "org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests",
     "children": []
    },
    {
     "id": "ID#testNullValuedSettingThrowsException(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)",
     "displayName": "testNullValuedSettingThrowsException(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)",
     "methodName": "testNullValuedSettingThrowsException",
     "className": "org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests",
     "children": []
    },
    {
     "id": "ID#testDuplicateKeysThrowsException(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)",
     "displayName": "testDuplicateKeysThrowsException(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)",
     "methodName": "testDuplicateKeysThrowsException",
     "className": "org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935995261
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleJsonSettings(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleJsonSettings(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)",
  "startTimestamp": 1473935995279,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testNullValuedSettingThrowsException(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullValuedSettingThrowsException(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)",
  "startTimestamp": 1473935995287,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDuplicateKeysThrowsException(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuplicateKeysThrowsException(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)",
  "startTimestamp": 1473935995290,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests",
  "startTimestamp": 1473935995261,
  "executionTime": 33
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.IndexFolderUpgraderTests",
   "displayName": "org.elasticsearch.common.util.IndexFolderUpgraderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.IndexFolderUpgraderTests",
   "children": [
    {
     "id": "ID#testNeedsUpgrade(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
     "displayName": "testNeedsUpgrade(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
     "methodName": "testNeedsUpgrade",
     "className": "org.elasticsearch.common.util.IndexFolderUpgraderTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeRealIndex(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
     "displayName": "testUpgradeRealIndex(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
     "methodName": "testUpgradeRealIndex",
     "className": "org.elasticsearch.common.util.IndexFolderUpgraderTests",
     "children": []
    },
    {
     "id": "ID#testPartialUpgradeCustomDataPath(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
     "displayName": "testPartialUpgradeCustomDataPath(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
     "methodName": "testPartialUpgradeCustomDataPath",
     "className": "org.elasticsearch.common.util.IndexFolderUpgraderTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeIndices(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
     "displayName": "testUpgradeIndices(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
     "methodName": "testUpgradeIndices",
     "className": "org.elasticsearch.common.util.IndexFolderUpgraderTests",
     "children": []
    },
    {
     "id": "ID#testUpgrade(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
     "displayName": "testUpgrade(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
     "methodName": "testUpgrade",
     "className": "org.elasticsearch.common.util.IndexFolderUpgraderTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeCustomDataPath(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
     "displayName": "testUpgradeCustomDataPath(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
     "methodName": "testUpgradeCustomDataPath",
     "className": "org.elasticsearch.common.util.IndexFolderUpgraderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935995563
 }
]

[
 "TEST_STARTED",
 "ID#testNeedsUpgrade(org.elasticsearch.common.util.IndexFolderUpgraderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:09:55,622][INFO ][org.elasticsearch.env    ] [nAQzYCO] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:09:55,624][INFO ][org.elasticsearch.env    ] [nAQzYCO] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNeedsUpgrade(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
  "startTimestamp": 1473935995580,
  "executionTime": 65
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeRealIndex(org.elasticsearch.common.util.IndexFolderUpgraderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:09:55,764][INFO ][org.elasticsearch.env    ] [STQmT9y] using [3] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:09:55,765][INFO ][org.elasticsearch.env    ] [STQmT9y] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:09:56,291][INFO ][org.elasticsearch.common.util] [node_s_0] --> injecting index [index-2.2.2] into [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_9CF13790D965C5A7-001\\tempDir-005\\nodes\\0\\indices]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:09:56,473][WARN ][org.elasticsearch.common.util] [node_s_0] [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_9CF13790D965C5A7-001\\tempDir-004\\nodes\\0\\indices\\index-2.2.2] no index state found - ignoring%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:09:56,476][INFO ][org.elasticsearch.common.util] [node_s_0] [index-2.2.2/5o5MnseeTmK4Iz8z1EqrKA] upgrading [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_9CF13790D965C5A7-001\\tempDir-005\\nodes\\0\\indices\\index-2.2.2] to new naming convention%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:09:56,480][INFO ][org.elasticsearch.common.util] [node_s_0] [index-2.2.2/5o5MnseeTmK4Iz8z1EqrKA] moved from [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_9CF13790D965C5A7-001\\tempDir-005\\nodes\\0\\indices\\index-2.2.2] to [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_9CF13790D965C5A7-001\\tempDir-005\\nodes\\0\\indices\\5o5MnseeTmK4Iz8z1EqrKA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:09:56,481][WARN ][org.elasticsearch.common.util] [node_s_0] [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_9CF13790D965C5A7-001\\tempDir-006\\nodes\\0\\indices\\index-2.2.2] no index state found - ignoring%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeRealIndex(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
  "startTimestamp": 1473935995645,
  "executionTime": 884
 }
]

[
 "TEST_STARTED",
 "ID#testPartialUpgradeCustomDataPath(org.elasticsearch.common.util.IndexFolderUpgraderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:09:56,596][INFO ][org.elasticsearch.env    ] [tLt6Ssc] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:09:56,596][INFO ][org.elasticsearch.env    ] [tLt6Ssc] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:09:56,693][INFO ][org.elasticsearch.common.util] [node_s_0] [eGXsoVgxyx/gN2lkk4JQqOIOz3bVkNjqg] upgrading [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_9CF13790D965C5A7-001\\tempDir-010\\nodes\\0\\indices\\eGXsoVgxyx] to new naming convention%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:09:56,697][INFO ][org.elasticsearch.common.util] [node_s_0] [eGXsoVgxyx/gN2lkk4JQqOIOz3bVkNjqg] upgrading [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_9CF13790D965C5A7-001\\tempDir-010\\nodes\\0\\indices\\eGXsoVgxyx] to new naming convention%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:09:56,700][INFO ][org.elasticsearch.common.util] [node_s_0] [eGXsoVgxyx/gN2lkk4JQqOIOz3bVkNjqg] moved from [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_9CF13790D965C5A7-001\\tempDir-008\\eGXsoVgxyx] to [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_9CF13790D965C5A7-001\\tempDir-008\\gN2lkk4JQqOIOz3bVkNjqg]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:09:56,702][INFO ][org.elasticsearch.common.util] [node_s_0] [eGXsoVgxyx/gN2lkk4JQqOIOz3bVkNjqg] moved from [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_9CF13790D965C5A7-001\\tempDir-010\\nodes\\0\\indices\\eGXsoVgxyx] to [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_9CF13790D965C5A7-001\\tempDir-010\\nodes\\0\\indices\\gN2lkk4JQqOIOz3bVkNjqg]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPartialUpgradeCustomDataPath(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
  "startTimestamp": 1473935996530,
  "executionTime": 213
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeIndices(org.elasticsearch.common.util.IndexFolderUpgraderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:09:56,801][INFO ][org.elasticsearch.env    ] [_7nV-RC] using [2] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:09:56,801][INFO ][org.elasticsearch.env    ] [_7nV-RC] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:09:57,088][INFO ][org.elasticsearch.common.util] [node_s_0] [unsWEfpPXH/84X8sDf7TjaTVmY2RuULww] upgrading [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_9CF13790D965C5A7-001\\tempDir-012\\nodes\\0\\indices\\unsWEfpPXH] to new naming convention%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:09:57,091][INFO ][org.elasticsearch.common.util] [node_s_0] [unsWEfpPXH/84X8sDf7TjaTVmY2RuULww] moved from [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_9CF13790D965C5A7-001\\tempDir-012\\nodes\\0\\indices\\unsWEfpPXH] to [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_9CF13790D965C5A7-001\\tempDir-012\\nodes\\0\\indices\\84X8sDf7TjaTVmY2RuULww]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:09:57,095][INFO ][org.elasticsearch.common.util] [node_s_0] [unsWEfpPXH/84X8sDf7TjaTVmY2RuULww] upgrading [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_9CF13790D965C5A7-001\\tempDir-013\\nodes\\0\\indices\\unsWEfpPXH] to new naming convention%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:09:57,099][INFO ][org.elasticsearch.common.util] [node_s_0] [unsWEfpPXH/84X8sDf7TjaTVmY2RuULww] moved from [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_9CF13790D965C5A7-001\\tempDir-013\\nodes\\0\\indices\\unsWEfpPXH] to [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_9CF13790D965C5A7-001\\tempDir-013\\nodes\\0\\indices\\84X8sDf7TjaTVmY2RuULww]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:09:57,101][INFO ][org.elasticsearch.common.util] [node_s_0] [tXKxmdKbAc/MgHPDQeTQuC4dzttHMfAVQ] upgrading [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_9CF13790D965C5A7-001\\tempDir-012\\nodes\\0\\indices\\tXKxmdKbAc] to new naming convention%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:09:57,104][INFO ][org.elasticsearch.common.util] [node_s_0] [tXKxmdKbAc/MgHPDQeTQuC4dzttHMfAVQ] moved from [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_9CF13790D965C5A7-001\\tempDir-012\\nodes\\0\\indices\\tXKxmdKbAc] to [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_9CF13790D965C5A7-001\\tempDir-012\\nodes\\0\\indices\\MgHPDQeTQuC4dzttHMfAVQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:09:57,107][INFO ][org.elasticsearch.common.util] [node_s_0] [tXKxmdKbAc/MgHPDQeTQuC4dzttHMfAVQ] upgrading [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_9CF13790D965C5A7-001\\tempDir-013\\nodes\\0\\indices\\tXKxmdKbAc] to new naming convention%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:09:57,110][INFO ][org.elasticsearch.common.util] [node_s_0] [tXKxmdKbAc/MgHPDQeTQuC4dzttHMfAVQ] moved from [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_9CF13790D965C5A7-001\\tempDir-013\\nodes\\0\\indices\\tXKxmdKbAc] to [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_9CF13790D965C5A7-001\\tempDir-013\\nodes\\0\\indices\\MgHPDQeTQuC4dzttHMfAVQ]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:09:57,112][INFO ][org.elasticsearch.common.util] [node_s_0] [bGtdVczfrt/dIdHFoI7SDewsUHycJeBvg] upgrading [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_9CF13790D965C5A7-001\\tempDir-012\\nodes\\0\\indices\\bGtdVczfrt] to new naming convention%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:09:57,115][INFO ][org.elasticsearch.common.util] [node_s_0] [bGtdVczfrt/dIdHFoI7SDewsUHycJeBvg] moved from [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_9CF13790D965C5A7-001\\tempDir-012\\nodes\\0\\indices\\bGtdVczfrt] to [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_9CF13790D965C5A7-001\\tempDir-012\\nodes\\0\\indices\\dIdHFoI7SDewsUHycJeBvg]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:09:57,118][INFO ][org.elasticsearch.common.util] [node_s_0] [bGtdVczfrt/dIdHFoI7SDewsUHycJeBvg] upgrading [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_9CF13790D965C5A7-001\\tempDir-013\\nodes\\0\\indices\\bGtdVczfrt] to new naming convention%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:09:57,120][INFO ][org.elasticsearch.common.util] [node_s_0] [bGtdVczfrt/dIdHFoI7SDewsUHycJeBvg] moved from [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_9CF13790D965C5A7-001\\tempDir-013\\nodes\\0\\indices\\bGtdVczfrt] to [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_9CF13790D965C5A7-001\\tempDir-013\\nodes\\0\\indices\\dIdHFoI7SDewsUHycJeBvg]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeIndices(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
  "startTimestamp": 1473935996744,
  "executionTime": 449
 }
]

[
 "TEST_STARTED",
 "ID#testUpgrade(org.elasticsearch.common.util.IndexFolderUpgraderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:09:57,260][INFO ][org.elasticsearch.env    ] [ZM2Gs64] using [3] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:09:57,261][INFO ][org.elasticsearch.env    ] [ZM2Gs64] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:09:57,471][INFO ][org.elasticsearch.common.util] [node_s_0] [OXmERaWnbv/53K2Qrc0QPONQAwh8p5hbA] upgrading [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_9CF13790D965C5A7-001\\tempDir-015\\nodes\\0\\indices\\OXmERaWnbv] to new naming convention%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:09:57,473][INFO ][org.elasticsearch.common.util] [node_s_0] [OXmERaWnbv/53K2Qrc0QPONQAwh8p5hbA] moved from [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_9CF13790D965C5A7-001\\tempDir-015\\nodes\\0\\indices\\OXmERaWnbv] to [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_9CF13790D965C5A7-001\\tempDir-015\\nodes\\0\\indices\\53K2Qrc0QPONQAwh8p5hbA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:09:57,475][INFO ][org.elasticsearch.common.util] [node_s_0] [OXmERaWnbv/53K2Qrc0QPONQAwh8p5hbA] upgrading [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_9CF13790D965C5A7-001\\tempDir-016\\nodes\\0\\indices\\OXmERaWnbv] to new naming convention%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:09:57,477][INFO ][org.elasticsearch.common.util] [node_s_0] [OXmERaWnbv/53K2Qrc0QPONQAwh8p5hbA] moved from [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_9CF13790D965C5A7-001\\tempDir-016\\nodes\\0\\indices\\OXmERaWnbv] to [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_9CF13790D965C5A7-001\\tempDir-016\\nodes\\0\\indices\\53K2Qrc0QPONQAwh8p5hbA]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:09:57,479][INFO ][org.elasticsearch.common.util] [node_s_0] [OXmERaWnbv/53K2Qrc0QPONQAwh8p5hbA] upgrading [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_9CF13790D965C5A7-001\\tempDir-017\\nodes\\0\\indices\\OXmERaWnbv] to new naming convention%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:09:57,482][INFO ][org.elasticsearch.common.util] [node_s_0] [OXmERaWnbv/53K2Qrc0QPONQAwh8p5hbA] moved from [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_9CF13790D965C5A7-001\\tempDir-017\\nodes\\0\\indices\\OXmERaWnbv] to [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_9CF13790D965C5A7-001\\tempDir-017\\nodes\\0\\indices\\53K2Qrc0QPONQAwh8p5hbA]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgrade(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
  "startTimestamp": 1473935997193,
  "executionTime": 347
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeCustomDataPath(org.elasticsearch.common.util.IndexFolderUpgraderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:09:57,588][INFO ][org.elasticsearch.env    ] [y1usT90] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:09:57,588][INFO ][org.elasticsearch.env    ] [y1usT90] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:09:57,647][INFO ][org.elasticsearch.common.util] [node_s_0] [oDMzGqSxyS/edquKImWRg6XhfHylRZSdw] upgrading [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_9CF13790D965C5A7-001\\tempDir-020\\nodes\\0\\indices\\oDMzGqSxyS] to new naming convention%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:09:57,649][INFO ][org.elasticsearch.common.util] [node_s_0] [oDMzGqSxyS/edquKImWRg6XhfHylRZSdw] moved from [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_9CF13790D965C5A7-001\\tempDir-018\\oDMzGqSxyS] to [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_9CF13790D965C5A7-001\\tempDir-018\\edquKImWRg6XhfHylRZSdw]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:09:57,651][INFO ][org.elasticsearch.common.util] [node_s_0] [oDMzGqSxyS/edquKImWRg6XhfHylRZSdw] moved from [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_9CF13790D965C5A7-001\\tempDir-020\\nodes\\0\\indices\\oDMzGqSxyS] to [C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.common.util.IndexFolderUpgraderTests_9CF13790D965C5A7-001\\tempDir-020\\nodes\\0\\indices\\edquKImWRg6XhfHylRZSdw]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeCustomDataPath(org.elasticsearch.common.util.IndexFolderUpgraderTests)",
  "startTimestamp": 1473935997540,
  "executionTime": 136
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.IndexFolderUpgraderTests",
  "startTimestamp": 1473935995563,
  "executionTime": 2468
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.SingleObjectCacheTests",
   "displayName": "org.elasticsearch.common.util.SingleObjectCacheTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.SingleObjectCacheTests",
   "children": [
    {
     "id": "ID#testRefreshDoesntBlock(org.elasticsearch.common.util.SingleObjectCacheTests)",
     "displayName": "testRefreshDoesntBlock(org.elasticsearch.common.util.SingleObjectCacheTests)",
     "methodName": "testRefreshDoesntBlock",
     "className": "org.elasticsearch.common.util.SingleObjectCacheTests",
     "children": []
    },
    {
     "id": "ID#testRefresh(org.elasticsearch.common.util.SingleObjectCacheTests)",
     "displayName": "testRefresh(org.elasticsearch.common.util.SingleObjectCacheTests)",
     "methodName": "testRefresh",
     "className": "org.elasticsearch.common.util.SingleObjectCacheTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935998214
 }
]

[
 "TEST_STARTED",
 "ID#testRefreshDoesntBlock(org.elasticsearch.common.util.SingleObjectCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRefreshDoesntBlock(org.elasticsearch.common.util.SingleObjectCacheTests)",
  "startTimestamp": 1473935998230,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRefresh(org.elasticsearch.common.util.SingleObjectCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRefresh(org.elasticsearch.common.util.SingleObjectCacheTests)",
  "startTimestamp": 1473935998232,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.SingleObjectCacheTests",
  "startTimestamp": 1473935998214,
  "executionTime": 22
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests",
   "displayName": "org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests",
   "children": [
    {
     "id": "ID#testOnAfterOnlyWhenNotStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)",
     "displayName": "testOnAfterOnlyWhenNotStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)",
     "methodName": "testOnAfterOnlyWhenNotStoppedOrClosed",
     "className": "org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests",
     "children": []
    },
    {
     "id": "ID#testOnAfterDoesNotHappenWhenStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)",
     "displayName": "testOnAfterDoesNotHappenWhenStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)",
     "methodName": "testOnAfterDoesNotHappenWhenStoppedOrClosed",
     "className": "org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests",
     "children": []
    },
    {
     "id": "ID#testDoRunOnlyRunsWhenNotStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)",
     "displayName": "testDoRunOnlyRunsWhenNotStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)",
     "methodName": "testDoRunOnlyRunsWhenNotStoppedOrClosed",
     "className": "org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests",
     "children": []
    },
    {
     "id": "ID#testDoRunDoesNotRunWhenStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)",
     "displayName": "testDoRunDoesNotRunWhenStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)",
     "methodName": "testDoRunDoesNotRunWhenStoppedOrClosed",
     "className": "org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935998535
 }
]

[
 "TEST_STARTED",
 "ID#testOnAfterOnlyWhenNotStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOnAfterOnlyWhenNotStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)",
  "startTimestamp": 1473935998560,
  "executionTime": 54
 }
]

[
 "TEST_STARTED",
 "ID#testOnAfterDoesNotHappenWhenStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOnAfterDoesNotHappenWhenStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)",
  "startTimestamp": 1473935998614,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testDoRunOnlyRunsWhenNotStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoRunOnlyRunsWhenNotStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)",
  "startTimestamp": 1473935998618,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testDoRunDoesNotRunWhenStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoRunDoesNotRunWhenStoppedOrClosed(org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests)",
  "startTimestamp": 1473935998623,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.concurrent.AbstractLifecycleRunnableTests",
  "startTimestamp": 1473935998535,
  "executionTime": 96
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests",
   "displayName": "org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests",
   "children": [
    {
     "id": "ID#testRandomFail(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)",
     "displayName": "testRandomFail(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)",
     "methodName": "testRandomFail",
     "className": "org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests",
     "children": []
    },
    {
     "id": "ID#testPut(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)",
     "displayName": "testPut(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)",
     "methodName": "testPut",
     "className": "org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests",
     "children": []
    },
    {
     "id": "ID#testNullArguments(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)",
     "displayName": "testNullArguments(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)",
     "methodName": "testNullArguments",
     "className": "org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests",
     "children": []
    },
    {
     "id": "ID#testConsumerCanThrowExceptions(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)",
     "displayName": "testConsumerCanThrowExceptions(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)",
     "methodName": "testConsumerCanThrowExceptions",
     "className": "org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935998760
 }
]

[
 "TEST_STARTED",
 "ID#testRandomFail(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomFail(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)",
  "startTimestamp": 1473935998776,
  "executionTime": 131
 }
]

[
 "TEST_STARTED",
 "ID#testPut(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPut(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)",
  "startTimestamp": 1473935998908,
  "executionTime": 90
 }
]

[
 "TEST_STARTED",
 "ID#testNullArguments(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullArguments(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)",
  "startTimestamp": 1473935998999,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testConsumerCanThrowExceptions(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConsumerCanThrowExceptions(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)",
  "startTimestamp": 1473935999002,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests",
  "startTimestamp": 1473935998760,
  "executionTime": 251
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.concurrent.PrioritizedRunnableTests",
   "displayName": "org.elasticsearch.common.util.concurrent.PrioritizedRunnableTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.concurrent.PrioritizedRunnableTests",
   "children": [
    {
     "id": "ID#testGetAgeInMillisWithRealClock(org.elasticsearch.common.util.concurrent.PrioritizedRunnableTests)",
     "displayName": "testGetAgeInMillisWithRealClock(org.elasticsearch.common.util.concurrent.PrioritizedRunnableTests)",
     "methodName": "testGetAgeInMillisWithRealClock",
     "className": "org.elasticsearch.common.util.concurrent.PrioritizedRunnableTests",
     "children": []
    },
    {
     "id": "ID#testGetAgeInMillis(org.elasticsearch.common.util.concurrent.PrioritizedRunnableTests)",
     "displayName": "testGetAgeInMillis(org.elasticsearch.common.util.concurrent.PrioritizedRunnableTests)",
     "methodName": "testGetAgeInMillis",
     "className": "org.elasticsearch.common.util.concurrent.PrioritizedRunnableTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935999296
 }
]

[
 "TEST_STARTED",
 "ID#testGetAgeInMillisWithRealClock(org.elasticsearch.common.util.concurrent.PrioritizedRunnableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetAgeInMillisWithRealClock(org.elasticsearch.common.util.concurrent.PrioritizedRunnableTests)",
  "startTimestamp": 1473935999316,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testGetAgeInMillis(org.elasticsearch.common.util.concurrent.PrioritizedRunnableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetAgeInMillis(org.elasticsearch.common.util.concurrent.PrioritizedRunnableTests)",
  "startTimestamp": 1473935999319,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.concurrent.PrioritizedRunnableTests",
  "startTimestamp": 1473935999296,
  "executionTime": 28
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.concurrent.RefCountedTests",
   "displayName": "org.elasticsearch.common.util.concurrent.RefCountedTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.concurrent.RefCountedTests",
   "children": [
    {
     "id": "ID#testRefCount(org.elasticsearch.common.util.concurrent.RefCountedTests)",
     "displayName": "testRefCount(org.elasticsearch.common.util.concurrent.RefCountedTests)",
     "methodName": "testRefCount",
     "className": "org.elasticsearch.common.util.concurrent.RefCountedTests",
     "children": []
    },
    {
     "id": "ID#testMultiThreaded(org.elasticsearch.common.util.concurrent.RefCountedTests)",
     "displayName": "testMultiThreaded(org.elasticsearch.common.util.concurrent.RefCountedTests)",
     "methodName": "testMultiThreaded",
     "className": "org.elasticsearch.common.util.concurrent.RefCountedTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935999573
 }
]

[
 "TEST_STARTED",
 "ID#testRefCount(org.elasticsearch.common.util.concurrent.RefCountedTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRefCount(org.elasticsearch.common.util.concurrent.RefCountedTests)",
  "startTimestamp": 1473935999584,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testMultiThreaded(org.elasticsearch.common.util.concurrent.RefCountedTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiThreaded(org.elasticsearch.common.util.concurrent.RefCountedTests)",
  "startTimestamp": 1473935999601,
  "executionTime": 19
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.concurrent.RefCountedTests",
  "startTimestamp": 1473935999573,
  "executionTime": 49
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.iterable.IterablesTests",
   "displayName": "org.elasticsearch.common.util.iterable.IterablesTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.iterable.IterablesTests",
   "children": [
    {
     "id": "ID#testGetOverList(org.elasticsearch.common.util.iterable.IterablesTests)",
     "displayName": "testGetOverList(org.elasticsearch.common.util.iterable.IterablesTests)",
     "methodName": "testGetOverList",
     "className": "org.elasticsearch.common.util.iterable.IterablesTests",
     "children": []
    },
    {
     "id": "ID#testGetOverIterable(org.elasticsearch.common.util.iterable.IterablesTests)",
     "displayName": "testGetOverIterable(org.elasticsearch.common.util.iterable.IterablesTests)",
     "methodName": "testGetOverIterable",
     "className": "org.elasticsearch.common.util.iterable.IterablesTests",
     "children": []
    },
    {
     "id": "ID#testFlatten(org.elasticsearch.common.util.iterable.IterablesTests)",
     "displayName": "testFlatten(org.elasticsearch.common.util.iterable.IterablesTests)",
     "methodName": "testFlatten",
     "className": "org.elasticsearch.common.util.iterable.IterablesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473935999859
 }
]

[
 "TEST_STARTED",
 "ID#testGetOverList(org.elasticsearch.common.util.iterable.IterablesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetOverList(org.elasticsearch.common.util.iterable.IterablesTests)",
  "startTimestamp": 1473935999877,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGetOverIterable(org.elasticsearch.common.util.iterable.IterablesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetOverIterable(org.elasticsearch.common.util.iterable.IterablesTests)",
  "startTimestamp": 1473935999879,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testFlatten(org.elasticsearch.common.util.iterable.IterablesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFlatten(org.elasticsearch.common.util.iterable.IterablesTests)",
  "startTimestamp": 1473935999887,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.iterable.IterablesTests",
  "startTimestamp": 1473935999859,
  "executionTime": 33
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.ObjectParserTests",
   "displayName": "org.elasticsearch.common.xcontent.ObjectParserTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
   "children": [
    {
     "id": "ID#testEmptyObjectInArray(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testEmptyObjectInArray(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testEmptyObjectInArray",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testParseNamedObjectJunkInArray(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testParseNamedObjectJunkInArray(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testParseNamedObjectJunkInArray",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testFailOnValueType(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testFailOnValueType(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testFailOnValueType",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testParseNamedObjectInOrderNotSupported(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testParseNamedObjectInOrderNotSupported(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testParseNamedObjectInOrderNotSupported",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testDeprecationFail(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testDeprecationFail(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testDeprecationFail",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testObjectOrDefault(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testObjectOrDefault(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testObjectOrDefault",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testBasics(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testBasics(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testBasics",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testParseNestedShortcut(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testParseNestedShortcut(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testParseNestedShortcut",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testParseNamedObject(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testParseNamedObject(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testParseNamedObject",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testParseNamedObjectNoFieldsInArray(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testParseNamedObjectNoFieldsInArray(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testParseNamedObjectNoFieldsInArray",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testParseNamedObjectInOrder(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testParseNamedObjectInOrder(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testParseNamedObjectInOrder",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testEmptyObject(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testEmptyObject(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testEmptyObject",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testAllVariants(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testAllVariants(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testAllVariants",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testParseNested(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testParseNested(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testParseNested",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testParseEnumFromString(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testParseEnumFromString(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testParseEnumFromString",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testParseNamedObjectTwoFieldsInArray(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testParseNamedObjectTwoFieldsInArray(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testParseNamedObjectTwoFieldsInArray",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testExceptions(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "displayName": "testExceptions(org.elasticsearch.common.xcontent.ObjectParserTests)",
     "methodName": "testExceptions",
     "className": "org.elasticsearch.common.xcontent.ObjectParserTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936000252
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyObjectInArray(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyObjectInArray(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1473936000270,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testParseNamedObjectJunkInArray(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseNamedObjectJunkInArray(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1473936000280,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnValueType(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnValueType(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1473936000300,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseNamedObjectInOrderNotSupported(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseNamedObjectInOrderNotSupported(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1473936000303,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testDeprecationFail(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T16:40:00,309][WARN ][org.elasticsearch.deprecation.common] Deprecated field [old_test] used, expected [test] instead%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeprecationFail(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1473936000307,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testObjectOrDefault(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testObjectOrDefault(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1473936000310,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testBasics(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasics(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1473936000315,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParseNestedShortcut(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseNestedShortcut(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1473936000319,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseNamedObject(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseNamedObject(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1473936000322,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseNamedObjectNoFieldsInArray(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseNamedObjectNoFieldsInArray(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1473936000325,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseNamedObjectInOrder(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseNamedObjectInOrder(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1473936000327,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyObject(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyObject(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1473936000330,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAllVariants(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllVariants(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1473936000333,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testParseNested(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseNested(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1473936000353,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseEnumFromString(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseEnumFromString(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1473936000356,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testParseNamedObjectTwoFieldsInArray(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseNamedObjectTwoFieldsInArray(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1473936000367,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testExceptions(org.elasticsearch.common.xcontent.ObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExceptions(org.elasticsearch.common.xcontent.ObjectParserTests)",
  "startTimestamp": 1473936000371,
  "executionTime": 18
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.ObjectParserTests",
  "startTimestamp": 1473936000252,
  "executionTime": 139
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.XContentTypeTests",
   "displayName": "org.elasticsearch.common.xcontent.XContentTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.XContentTypeTests",
   "children": [
    {
     "id": "ID#testFromWildcardUppercase(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "displayName": "testFromWildcardUppercase(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "methodName": "testFromWildcardUppercase",
     "className": "org.elasticsearch.common.xcontent.XContentTypeTests",
     "children": []
    },
    {
     "id": "ID#testFromYaml(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "displayName": "testFromYaml(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "methodName": "testFromYaml",
     "className": "org.elasticsearch.common.xcontent.XContentTypeTests",
     "children": []
    },
    {
     "id": "ID#testFromSmile(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "displayName": "testFromSmile(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "methodName": "testFromSmile",
     "className": "org.elasticsearch.common.xcontent.XContentTypeTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonUppercase(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "displayName": "testFromJsonUppercase(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "methodName": "testFromJsonUppercase",
     "className": "org.elasticsearch.common.xcontent.XContentTypeTests",
     "children": []
    },
    {
     "id": "ID#testFromCbor(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "displayName": "testFromCbor(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "methodName": "testFromCbor",
     "className": "org.elasticsearch.common.xcontent.XContentTypeTests",
     "children": []
    },
    {
     "id": "ID#testFromWildcard(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "displayName": "testFromWildcard(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "methodName": "testFromWildcard",
     "className": "org.elasticsearch.common.xcontent.XContentTypeTests",
     "children": []
    },
    {
     "id": "ID#testFromRubbish(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "displayName": "testFromRubbish(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "methodName": "testFromRubbish",
     "className": "org.elasticsearch.common.xcontent.XContentTypeTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "displayName": "testFromJson(org.elasticsearch.common.xcontent.XContentTypeTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.common.xcontent.XContentTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936000661
 }
]

[
 "TEST_STARTED",
 "ID#testFromWildcardUppercase(org.elasticsearch.common.xcontent.XContentTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromWildcardUppercase(org.elasticsearch.common.xcontent.XContentTypeTests)",
  "startTimestamp": 1473936000675,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFromYaml(org.elasticsearch.common.xcontent.XContentTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromYaml(org.elasticsearch.common.xcontent.XContentTypeTests)",
  "startTimestamp": 1473936000676,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromSmile(org.elasticsearch.common.xcontent.XContentTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromSmile(org.elasticsearch.common.xcontent.XContentTypeTests)",
  "startTimestamp": 1473936000678,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonUppercase(org.elasticsearch.common.xcontent.XContentTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonUppercase(org.elasticsearch.common.xcontent.XContentTypeTests)",
  "startTimestamp": 1473936000680,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromCbor(org.elasticsearch.common.xcontent.XContentTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromCbor(org.elasticsearch.common.xcontent.XContentTypeTests)",
  "startTimestamp": 1473936000682,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromWildcard(org.elasticsearch.common.xcontent.XContentTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromWildcard(org.elasticsearch.common.xcontent.XContentTypeTests)",
  "startTimestamp": 1473936000684,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromRubbish(org.elasticsearch.common.xcontent.XContentTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromRubbish(org.elasticsearch.common.xcontent.XContentTypeTests)",
  "startTimestamp": 1473936000686,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.common.xcontent.XContentTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.common.xcontent.XContentTypeTests)",
  "startTimestamp": 1473936000696,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.XContentTypeTests",
  "startTimestamp": 1473936000661,
  "executionTime": 38
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.cbor.CborXContentParserTests",
   "displayName": "org.elasticsearch.common.xcontent.cbor.CborXContentParserTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.cbor.CborXContentParserTests",
   "children": [
    {
     "id": "ID#testEmptyValue(org.elasticsearch.common.xcontent.cbor.CborXContentParserTests)",
     "displayName": "testEmptyValue(org.elasticsearch.common.xcontent.cbor.CborXContentParserTests)",
     "methodName": "testEmptyValue",
     "className": "org.elasticsearch.common.xcontent.cbor.CborXContentParserTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936000938
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyValue(org.elasticsearch.common.xcontent.cbor.CborXContentParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyValue(org.elasticsearch.common.xcontent.cbor.CborXContentParserTests)",
  "startTimestamp": 1473936001719,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.cbor.CborXContentParserTests",
  "startTimestamp": 1473936000938,
  "executionTime": 786
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
   "displayName": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
   "children": [
    {
     "id": "ID#testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testSimpleFieldWithWildcardExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testRecurseField1Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testSimpleArrayExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testSimpleFieldExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testNoMatch(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testNoMatch",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testArrays(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testArrays",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testSingleFieldObject",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testObjectsInArrayWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testRecursiveSameObjectWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testWithLfAtEnd",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testRawField(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testRawField",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsPropertyInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testRecursiveObjectsInArrayWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testRecurseField4Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testSimpleArrayInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testMultipleFieldsInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testRecurseField2Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testSingleFieldWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testRecursiveObjectsPropertiesWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testRecurseField4Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testSimpleFieldInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testRecurseField3Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testMultipleFieldsExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testRecurseField1Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testRecurseField2Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testSimpleFieldWithWildcardInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testEmptyObject",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testRecurseField3Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsPropertyExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "displayName": "testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
     "methodName": "testNoFiltering",
     "className": "org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936002062
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1473936002100,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1473936002114,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1473936002117,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1473936002166,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1473936002180,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1473936002183,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1473936002188,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1473936002191,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1473936002194,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1473936002196,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1473936002199,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1473936002202,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1473936002207,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1473936002210,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1473936002213,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1473936002277,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1473936002280,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1473936002282,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1473936002284,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1473936002287,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1473936002290,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1473936002298,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1473936002300,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1473936002303,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1473936002310,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1473936002314,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1473936002316,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1473936002319,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1473936002322,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1473936002337,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1473936002344,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests)",
  "startTimestamp": 1473936002347,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.support.filtering.CborFilteringGeneratorTests",
  "startTimestamp": 1473936002062,
  "executionTime": 293
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests",
   "displayName": "org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests",
   "children": [
    {
     "id": "ID#testInclusiveFiltersWithDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
     "displayName": "testInclusiveFiltersWithDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
     "methodName": "testInclusiveFiltersWithDots",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests",
     "children": []
    },
    {
     "id": "ID#testInclusiveFilters(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
     "displayName": "testInclusiveFilters(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
     "methodName": "testInclusiveFilters",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests",
     "children": []
    },
    {
     "id": "ID#testExclusiveFiltersWithDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
     "displayName": "testExclusiveFiltersWithDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
     "methodName": "testExclusiveFiltersWithDots",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests",
     "children": []
    },
    {
     "id": "ID#testExclusiveFilters(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
     "displayName": "testExclusiveFilters(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
     "methodName": "testExclusiveFilters",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936002425
 }
]

[
 "TEST_STARTED",
 "ID#testInclusiveFiltersWithDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInclusiveFiltersWithDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
  "startTimestamp": 1473936002440,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testInclusiveFilters(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInclusiveFilters(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
  "startTimestamp": 1473936002443,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testExclusiveFiltersWithDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExclusiveFiltersWithDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
  "startTimestamp": 1473936002450,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testExclusiveFilters(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExclusiveFilters(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
  "startTimestamp": 1473936002452,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests",
  "startTimestamp": 1473936002425,
  "executionTime": 33
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.yaml.YamlXContentTests",
   "displayName": "org.elasticsearch.common.xcontent.yaml.YamlXContentTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.yaml.YamlXContentTests",
   "children": [
    {
     "id": "ID#testBasics(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)",
     "displayName": "testBasics(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)",
     "methodName": "testBasics",
     "className": "org.elasticsearch.common.xcontent.yaml.YamlXContentTests",
     "children": []
    },
    {
     "id": "ID#testBigInteger(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)",
     "displayName": "testBigInteger(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)",
     "methodName": "testBigInteger",
     "className": "org.elasticsearch.common.xcontent.yaml.YamlXContentTests",
     "children": []
    },
    {
     "id": "ID#testMissingEndArray(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)",
     "displayName": "testMissingEndArray(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)",
     "methodName": "testMissingEndArray",
     "className": "org.elasticsearch.common.xcontent.yaml.YamlXContentTests",
     "children": []
    },
    {
     "id": "ID#testRawValue(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)",
     "displayName": "testRawValue(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)",
     "methodName": "testRawValue",
     "className": "org.elasticsearch.common.xcontent.yaml.YamlXContentTests",
     "children": []
    },
    {
     "id": "ID#testMissingEndObject(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)",
     "displayName": "testMissingEndObject(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)",
     "methodName": "testMissingEndObject",
     "className": "org.elasticsearch.common.xcontent.yaml.YamlXContentTests",
     "children": []
    },
    {
     "id": "ID#testRawField(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)",
     "displayName": "testRawField(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)",
     "methodName": "testRawField",
     "className": "org.elasticsearch.common.xcontent.yaml.YamlXContentTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936002752
 }
]

[
 "TEST_STARTED",
 "ID#testBasics(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasics(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)",
  "startTimestamp": 1473936002833,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBigInteger(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBigInteger(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)",
  "startTimestamp": 1473936002835,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMissingEndArray(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingEndArray(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)",
  "startTimestamp": 1473936002838,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRawValue(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawValue(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)",
  "startTimestamp": 1473936002841,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testMissingEndObject(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingEndObject(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)",
  "startTimestamp": 1473936002848,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRawField(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawField(org.elasticsearch.common.xcontent.yaml.YamlXContentTests)",
  "startTimestamp": 1473936002851,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.yaml.YamlXContentTests",
  "startTimestamp": 1473936002752,
  "executionTime": 111
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.env.NodeEnvironmentTests",
   "displayName": "org.elasticsearch.env.NodeEnvironmentTests",
   "methodName": null,
   "className": "org.elasticsearch.env.NodeEnvironmentTests",
   "children": [
    {
     "id": "ID#testAvailableIndexFolders(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testAvailableIndexFolders(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testAvailableIndexFolders",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    },
    {
     "id": "ID#testDeleteSafe(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testDeleteSafe(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testDeleteSafe",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    },
    {
     "id": "ID#testStressShardLock(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testStressShardLock(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testStressShardLock",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    },
    {
     "id": "ID#testCustomDataPaths(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testCustomDataPaths(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testCustomDataPaths",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    },
    {
     "id": "ID#testWhetherClusterFolderShouldBeUsed(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testWhetherClusterFolderShouldBeUsed(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testWhetherClusterFolderShouldBeUsed",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    },
    {
     "id": "ID#testNodeLockSingleEnvironment(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testNodeLockSingleEnvironment(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testNodeLockSingleEnvironment",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    },
    {
     "id": "ID#testPersistentNodeId(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testPersistentNodeId(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testPersistentNodeId",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    },
    {
     "id": "ID#testSegmentInfosTracing(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testSegmentInfosTracing(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testSegmentInfosTracing",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    },
    {
     "id": "ID#testNodeLockSillySettings(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testNodeLockSillySettings(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testNodeLockSillySettings",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    },
    {
     "id": "ID#testNodeLockMultipleEnvironment(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testNodeLockMultipleEnvironment(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testNodeLockMultipleEnvironment",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    },
    {
     "id": "ID#testResolveIndexFolders(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testResolveIndexFolders(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testResolveIndexFolders",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    },
    {
     "id": "ID#testShardLock(org.elasticsearch.env.NodeEnvironmentTests)",
     "displayName": "testShardLock(org.elasticsearch.env.NodeEnvironmentTests)",
     "methodName": "testShardLock",
     "className": "org.elasticsearch.env.NodeEnvironmentTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936002969
 }
]

[
 "TEST_STARTED",
 "ID#testAvailableIndexFolders(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:03,011][INFO ][org.elasticsearch.env    ] [NeK4OWg] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:03,012][INFO ][org.elasticsearch.env    ] [NeK4OWg] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAvailableIndexFolders(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1473936002981,
  "executionTime": 70
 }
]

[
 "TEST_STARTED",
 "ID#testDeleteSafe(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:03,108][INFO ][org.elasticsearch.env    ] [FsFaHp-] using [2] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:03,108][INFO ][org.elasticsearch.env    ] [FsFaHp-] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeleteSafe(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1473936003051,
  "executionTime": 103
 }
]

[
 "TEST_STARTED",
 "ID#testStressShardLock(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:03,188][INFO ][org.elasticsearch.env    ] [kwRMZaU] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:03,188][INFO ][org.elasticsearch.env    ] [kwRMZaU] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStressShardLock(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1473936003154,
  "executionTime": 580
 }
]

[
 "TEST_STARTED",
 "ID#testCustomDataPaths(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:03,813][INFO ][org.elasticsearch.env    ] [k60R8fx] using [2] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:03,813][INFO ][org.elasticsearch.env    ] [k60R8fx] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCustomDataPaths(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1473936003735,
  "executionTime": 122
 }
]

[
 "TEST_STARTED",
 "ID#testWhetherClusterFolderShouldBeUsed(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:03,905][INFO ][org.elasticsearch.env    ] [80yFgLE] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:03,905][INFO ][org.elasticsearch.env    ] [80yFgLE] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:03,948][INFO ][org.elasticsearch.env    ] [9z_M5VD] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:03,948][INFO ][org.elasticsearch.env    ] [9z_M5VD] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:03,986][INFO ][org.elasticsearch.env    ] [a8LcxfN] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:03,987][INFO ][org.elasticsearch.env    ] [a8LcxfN] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWhetherClusterFolderShouldBeUsed(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1473936003857,
  "executionTime": 135
 }
]

[
 "TEST_STARTED",
 "ID#testNodeLockSingleEnvironment(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:04,077][INFO ][org.elasticsearch.env    ] [26QAvpj] using [2] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:04,077][INFO ][org.elasticsearch.env    ] [26QAvpj] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:04,135][INFO ][org.elasticsearch.env    ] [26QAvpj] using [2] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:04,135][INFO ][org.elasticsearch.env    ] [26QAvpj] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNodeLockSingleEnvironment(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1473936003992,
  "executionTime": 148
 }
]

[
 "TEST_STARTED",
 "ID#testPersistentNodeId(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:04,235][INFO ][org.elasticsearch.env    ] [KVV9VCF] using [3] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:04,235][INFO ][org.elasticsearch.env    ] [KVV9VCF] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:04,294][INFO ][org.elasticsearch.env    ] [KVV9VCF] using [3] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:04,294][INFO ][org.elasticsearch.env    ] [KVV9VCF] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:04,374][INFO ][org.elasticsearch.env    ] [HuCMpKs] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:04,374][INFO ][org.elasticsearch.env    ] [HuCMpKs] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPersistentNodeId(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1473936004140,
  "executionTime": 238
 }
]

[
 "TEST_STARTED",
 "ID#testSegmentInfosTracing(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSegmentInfosTracing(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1473936004378,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testNodeLockSillySettings(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNodeLockSillySettings(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1473936004382,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNodeLockMultipleEnvironment(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:04,510][INFO ][org.elasticsearch.env    ] [ahNqutu] using [3] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:04,510][INFO ][org.elasticsearch.env    ] [ahNqutu] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:04,585][INFO ][org.elasticsearch.env    ] [kWWO3-d] using [3] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:04,586][INFO ][org.elasticsearch.env    ] [kWWO3-d] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNodeLockMultipleEnvironment(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1473936004385,
  "executionTime": 214
 }
]

[
 "TEST_STARTED",
 "ID#testResolveIndexFolders(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:04,664][INFO ][org.elasticsearch.env    ] [spfkeDz] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:04,665][INFO ][org.elasticsearch.env    ] [spfkeDz] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResolveIndexFolders(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1473936004599,
  "executionTime": 95
 }
]

[
 "TEST_STARTED",
 "ID#testShardLock(org.elasticsearch.env.NodeEnvironmentTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:04,812][INFO ][org.elasticsearch.env    ] [Y3uYn2n] using [3] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T22:40:04,812][INFO ][org.elasticsearch.env    ] [Y3uYn2n] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardLock(org.elasticsearch.env.NodeEnvironmentTests)",
  "startTimestamp": 1473936004694,
  "executionTime": 149
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.env.NodeEnvironmentTests",
  "startTimestamp": 1473936002969,
  "executionTime": 2137
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.gateway.AsyncShardFetchTests",
   "displayName": "org.elasticsearch.gateway.AsyncShardFetchTests",
   "methodName": null,
   "className": "org.elasticsearch.gateway.AsyncShardFetchTests",
   "children": [
    {
     "id": "ID#testClose(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "displayName": "testClose(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "methodName": "testClose",
     "className": "org.elasticsearch.gateway.AsyncShardFetchTests",
     "children": []
    },
    {
     "id": "ID#testTwoNodesOnSetupAndFailure(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "displayName": "testTwoNodesOnSetupAndFailure(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "methodName": "testTwoNodesOnSetupAndFailure",
     "className": "org.elasticsearch.gateway.AsyncShardFetchTests",
     "children": []
    },
    {
     "id": "ID#testFullCircleSingleNodeFailure(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "displayName": "testFullCircleSingleNodeFailure(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "methodName": "testFullCircleSingleNodeFailure",
     "className": "org.elasticsearch.gateway.AsyncShardFetchTests",
     "children": []
    },
    {
     "id": "ID#testTwoNodesOnSetup(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "displayName": "testTwoNodesOnSetup(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "methodName": "testTwoNodesOnSetup",
     "className": "org.elasticsearch.gateway.AsyncShardFetchTests",
     "children": []
    },
    {
     "id": "ID#testFullCircleSingleNodeSuccess(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "displayName": "testFullCircleSingleNodeSuccess(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "methodName": "testFullCircleSingleNodeSuccess",
     "className": "org.elasticsearch.gateway.AsyncShardFetchTests",
     "children": []
    },
    {
     "id": "ID#testTwoNodesAddedInBetween(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "displayName": "testTwoNodesAddedInBetween(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "methodName": "testTwoNodesAddedInBetween",
     "className": "org.elasticsearch.gateway.AsyncShardFetchTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936005470
 }
]

[
 "TEST_STARTED",
 "ID#testClose(org.elasticsearch.gateway.AsyncShardFetchTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClose(org.elasticsearch.gateway.AsyncShardFetchTests)",
  "startTimestamp": 1473936005486,
  "executionTime": 43
 }
]

[
 "TEST_STARTED",
 "ID#testTwoNodesOnSetupAndFailure(org.elasticsearch.gateway.AsyncShardFetchTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTwoNodesOnSetupAndFailure(org.elasticsearch.gateway.AsyncShardFetchTests)",
  "startTimestamp": 1473936005530,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testFullCircleSingleNodeFailure(org.elasticsearch.gateway.AsyncShardFetchTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFullCircleSingleNodeFailure(org.elasticsearch.gateway.AsyncShardFetchTests)",
  "startTimestamp": 1473936005540,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testTwoNodesOnSetup(org.elasticsearch.gateway.AsyncShardFetchTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTwoNodesOnSetup(org.elasticsearch.gateway.AsyncShardFetchTests)",
  "startTimestamp": 1473936005547,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testFullCircleSingleNodeSuccess(org.elasticsearch.gateway.AsyncShardFetchTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFullCircleSingleNodeSuccess(org.elasticsearch.gateway.AsyncShardFetchTests)",
  "startTimestamp": 1473936005562,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testTwoNodesAddedInBetween(org.elasticsearch.gateway.AsyncShardFetchTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTwoNodesAddedInBetween(org.elasticsearch.gateway.AsyncShardFetchTests)",
  "startTimestamp": 1473936005576,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.gateway.AsyncShardFetchTests",
  "startTimestamp": 1473936005470,
  "executionTime": 113
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.gateway.PriorityComparatorTests",
   "displayName": "org.elasticsearch.gateway.PriorityComparatorTests",
   "methodName": null,
   "className": "org.elasticsearch.gateway.PriorityComparatorTests",
   "children": [
    {
     "id": "ID#testPriorityComparatorSort(org.elasticsearch.gateway.PriorityComparatorTests)",
     "displayName": "testPriorityComparatorSort(org.elasticsearch.gateway.PriorityComparatorTests)",
     "methodName": "testPriorityComparatorSort",
     "className": "org.elasticsearch.gateway.PriorityComparatorTests",
     "children": []
    },
    {
     "id": "ID#testPreferPriorityIndices(org.elasticsearch.gateway.PriorityComparatorTests)",
     "displayName": "testPreferPriorityIndices(org.elasticsearch.gateway.PriorityComparatorTests)",
     "methodName": "testPreferPriorityIndices",
     "className": "org.elasticsearch.gateway.PriorityComparatorTests",
     "children": []
    },
    {
     "id": "ID#testPreferNewIndices(org.elasticsearch.gateway.PriorityComparatorTests)",
     "displayName": "testPreferNewIndices(org.elasticsearch.gateway.PriorityComparatorTests)",
     "methodName": "testPreferNewIndices",
     "className": "org.elasticsearch.gateway.PriorityComparatorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936005638
 }
]

[
 "TEST_STARTED",
 "ID#testPriorityComparatorSort(org.elasticsearch.gateway.PriorityComparatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPriorityComparatorSort(org.elasticsearch.gateway.PriorityComparatorTests)",
  "startTimestamp": 1473936005660,
  "executionTime": 66
 }
]

[
 "TEST_STARTED",
 "ID#testPreferPriorityIndices(org.elasticsearch.gateway.PriorityComparatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreferPriorityIndices(org.elasticsearch.gateway.PriorityComparatorTests)",
  "startTimestamp": 1473936005726,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testPreferNewIndices(org.elasticsearch.gateway.PriorityComparatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreferNewIndices(org.elasticsearch.gateway.PriorityComparatorTests)",
  "startTimestamp": 1473936005745,
  "executionTime": 23
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.gateway.PriorityComparatorTests",
  "startTimestamp": 1473936005638,
  "executionTime": 132
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.gateway.ReplicaShardAllocatorTests",
   "displayName": "org.elasticsearch.gateway.ReplicaShardAllocatorTests",
   "methodName": null,
   "className": "org.elasticsearch.gateway.ReplicaShardAllocatorTests",
   "children": [
    {
     "id": "ID#testAsyncFetchOnAnythingButIndexCreation(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "displayName": "testAsyncFetchOnAnythingButIndexCreation(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "methodName": "testAsyncFetchOnAnythingButIndexCreation",
     "className": "org.elasticsearch.gateway.ReplicaShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testCancelRecoveryBetterSyncId(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "displayName": "testCancelRecoveryBetterSyncId(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "methodName": "testCancelRecoveryBetterSyncId",
     "className": "org.elasticsearch.gateway.ReplicaShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testSyncIdMatch(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "displayName": "testSyncIdMatch(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "methodName": "testSyncIdMatch",
     "className": "org.elasticsearch.gateway.ReplicaShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testDelayedAllocation(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "displayName": "testDelayedAllocation(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "methodName": "testDelayedAllocation",
     "className": "org.elasticsearch.gateway.ReplicaShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testNoMatchingFilesForReplicaOnAnyNode(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "displayName": "testNoMatchingFilesForReplicaOnAnyNode(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "methodName": "testNoMatchingFilesForReplicaOnAnyNode",
     "className": "org.elasticsearch.gateway.ReplicaShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testNotCancellingRecovery(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "displayName": "testNotCancellingRecovery(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "methodName": "testNotCancellingRecovery",
     "className": "org.elasticsearch.gateway.ReplicaShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testNoOrThrottleDecidersRemainsInUnassigned(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "displayName": "testNoOrThrottleDecidersRemainsInUnassigned(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "methodName": "testNoOrThrottleDecidersRemainsInUnassigned",
     "className": "org.elasticsearch.gateway.ReplicaShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testThrottleWhenAllocatingToMatchingNode(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "displayName": "testThrottleWhenAllocatingToMatchingNode(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "methodName": "testThrottleWhenAllocatingToMatchingNode",
     "className": "org.elasticsearch.gateway.ReplicaShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testNoPrimaryData(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "displayName": "testNoPrimaryData(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "methodName": "testNoPrimaryData",
     "className": "org.elasticsearch.gateway.ReplicaShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFullMatchAllocation(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "displayName": "testSimpleFullMatchAllocation(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "methodName": "testSimpleFullMatchAllocation",
     "className": "org.elasticsearch.gateway.ReplicaShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testNotCancellingRecoveryIfSyncedOnExistingRecovery(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "displayName": "testNotCancellingRecoveryIfSyncedOnExistingRecovery(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "methodName": "testNotCancellingRecoveryIfSyncedOnExistingRecovery",
     "className": "org.elasticsearch.gateway.ReplicaShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testNoAsyncFetchData(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "displayName": "testNoAsyncFetchData(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "methodName": "testNoAsyncFetchData",
     "className": "org.elasticsearch.gateway.ReplicaShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testNoAsyncFetchOnIndexCreation(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "displayName": "testNoAsyncFetchOnIndexCreation(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "methodName": "testNoAsyncFetchOnIndexCreation",
     "className": "org.elasticsearch.gateway.ReplicaShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testFileChecksumMatch(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "displayName": "testFileChecksumMatch(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "methodName": "testFileChecksumMatch",
     "className": "org.elasticsearch.gateway.ReplicaShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testNoDataForReplicaOnAnyNode(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "displayName": "testNoDataForReplicaOnAnyNode(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
     "methodName": "testNoDataForReplicaOnAnyNode",
     "className": "org.elasticsearch.gateway.ReplicaShardAllocatorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936005941
 }
]

[
 "TEST_STARTED",
 "ID#testAsyncFetchOnAnythingButIndexCreation(org.elasticsearch.gateway.ReplicaShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAsyncFetchOnAnythingButIndexCreation(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
  "startTimestamp": 1473936005957,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testCancelRecoveryBetterSyncId(org.elasticsearch.gateway.ReplicaShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCancelRecoveryBetterSyncId(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
  "startTimestamp": 1473936005964,
  "executionTime": 83
 }
]

[
 "TEST_STARTED",
 "ID#testSyncIdMatch(org.elasticsearch.gateway.ReplicaShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSyncIdMatch(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
  "startTimestamp": 1473936006047,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDelayedAllocation(org.elasticsearch.gateway.ReplicaShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDelayedAllocation(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
  "startTimestamp": 1473936006051,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testNoMatchingFilesForReplicaOnAnyNode(org.elasticsearch.gateway.ReplicaShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoMatchingFilesForReplicaOnAnyNode(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
  "startTimestamp": 1473936006056,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testNotCancellingRecovery(org.elasticsearch.gateway.ReplicaShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotCancellingRecovery(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
  "startTimestamp": 1473936006064,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNoOrThrottleDecidersRemainsInUnassigned(org.elasticsearch.gateway.ReplicaShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoOrThrottleDecidersRemainsInUnassigned(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
  "startTimestamp": 1473936006067,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testThrottleWhenAllocatingToMatchingNode(org.elasticsearch.gateway.ReplicaShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThrottleWhenAllocatingToMatchingNode(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
  "startTimestamp": 1473936006070,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testNoPrimaryData(org.elasticsearch.gateway.ReplicaShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoPrimaryData(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
  "startTimestamp": 1473936006092,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFullMatchAllocation(org.elasticsearch.gateway.ReplicaShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFullMatchAllocation(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
  "startTimestamp": 1473936006094,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNotCancellingRecoveryIfSyncedOnExistingRecovery(org.elasticsearch.gateway.ReplicaShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotCancellingRecoveryIfSyncedOnExistingRecovery(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
  "startTimestamp": 1473936006097,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNoAsyncFetchData(org.elasticsearch.gateway.ReplicaShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoAsyncFetchData(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
  "startTimestamp": 1473936006099,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testNoAsyncFetchOnIndexCreation(org.elasticsearch.gateway.ReplicaShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoAsyncFetchOnIndexCreation(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
  "startTimestamp": 1473936006103,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFileChecksumMatch(org.elasticsearch.gateway.ReplicaShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFileChecksumMatch(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
  "startTimestamp": 1473936006106,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNoDataForReplicaOnAnyNode(org.elasticsearch.gateway.ReplicaShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoDataForReplicaOnAnyNode(org.elasticsearch.gateway.ReplicaShardAllocatorTests)",
  "startTimestamp": 1473936006108,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.gateway.ReplicaShardAllocatorTests",
  "startTimestamp": 1473936005941,
  "executionTime": 170
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.http.HttpServerTests",
   "displayName": "org.elasticsearch.http.HttpServerTests",
   "methodName": null,
   "className": "org.elasticsearch.http.HttpServerTests",
   "children": [
    {
     "id": "ID#testDispatchRequestLimitsBytes(org.elasticsearch.http.HttpServerTests)",
     "displayName": "testDispatchRequestLimitsBytes(org.elasticsearch.http.HttpServerTests)",
     "methodName": "testDispatchRequestLimitsBytes",
     "className": "org.elasticsearch.http.HttpServerTests",
     "children": []
    },
    {
     "id": "ID#testDispatchRequestAddsAndFreesBytesOnlyOnceOnError(org.elasticsearch.http.HttpServerTests)",
     "displayName": "testDispatchRequestAddsAndFreesBytesOnlyOnceOnError(org.elasticsearch.http.HttpServerTests)",
     "methodName": "testDispatchRequestAddsAndFreesBytesOnlyOnceOnError",
     "className": "org.elasticsearch.http.HttpServerTests",
     "children": []
    },
    {
     "id": "ID#testDispatchRequestAddsAndFreesBytesOnSuccess(org.elasticsearch.http.HttpServerTests)",
     "displayName": "testDispatchRequestAddsAndFreesBytesOnSuccess(org.elasticsearch.http.HttpServerTests)",
     "methodName": "testDispatchRequestAddsAndFreesBytesOnSuccess",
     "className": "org.elasticsearch.http.HttpServerTests",
     "children": []
    },
    {
     "id": "ID#testDispatchRequestAddsAndFreesBytesOnError(org.elasticsearch.http.HttpServerTests)",
     "displayName": "testDispatchRequestAddsAndFreesBytesOnError(org.elasticsearch.http.HttpServerTests)",
     "methodName": "testDispatchRequestAddsAndFreesBytesOnError",
     "className": "org.elasticsearch.http.HttpServerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936006172
 }
]

[
 "TEST_STARTED",
 "ID#testDispatchRequestLimitsBytes(org.elasticsearch.http.HttpServerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:06,224][INFO ][org.elasticsearch.http   ] publish_address {local[1]}, bound_addresses {local[1]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:06,233][WARN ][org.elasticsearch.indices.breaker.in_flight_requests] [in_flight_requests] New used memory 21 [21b] for data of [<http_request>] would be larger than configured breaker: 20 [20b], breaking%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDispatchRequestLimitsBytes(org.elasticsearch.http.HttpServerTests)",
  "startTimestamp": 1473936006189,
  "executionTime": 46
 }
]

[
 "TEST_STARTED",
 "ID#testDispatchRequestAddsAndFreesBytesOnlyOnceOnError(org.elasticsearch.http.HttpServerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:06,240][INFO ][org.elasticsearch.http   ] publish_address {local[1]}, bound_addresses {local[1]}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDispatchRequestAddsAndFreesBytesOnlyOnceOnError(org.elasticsearch.http.HttpServerTests)",
  "startTimestamp": 1473936006236,
  "executionTime": 65
 }
]

[
 "TEST_STARTED",
 "ID#testDispatchRequestAddsAndFreesBytesOnSuccess(org.elasticsearch.http.HttpServerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:06,306][INFO ][org.elasticsearch.http   ] publish_address {local[1]}, bound_addresses {local[1]}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDispatchRequestAddsAndFreesBytesOnSuccess(org.elasticsearch.http.HttpServerTests)",
  "startTimestamp": 1473936006301,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testDispatchRequestAddsAndFreesBytesOnError(org.elasticsearch.http.HttpServerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:06,311][INFO ][org.elasticsearch.http   ] publish_address {local[1]}, bound_addresses {local[1]}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDispatchRequestAddsAndFreesBytesOnError(org.elasticsearch.http.HttpServerTests)",
  "startTimestamp": 1473936006306,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.http.HttpServerTests",
  "startTimestamp": 1473936006172,
  "executionTime": 142
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.IndexTests",
   "displayName": "org.elasticsearch.index.IndexTests",
   "methodName": null,
   "className": "org.elasticsearch.index.IndexTests",
   "children": [
    {
     "id": "ID#testXContent(org.elasticsearch.index.IndexTests)",
     "displayName": "testXContent(org.elasticsearch.index.IndexTests)",
     "methodName": "testXContent",
     "className": "org.elasticsearch.index.IndexTests",
     "children": []
    },
    {
     "id": "ID#testToString(org.elasticsearch.index.IndexTests)",
     "displayName": "testToString(org.elasticsearch.index.IndexTests)",
     "methodName": "testToString",
     "className": "org.elasticsearch.index.IndexTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936006447
 }
]

[
 "TEST_STARTED",
 "ID#testXContent(org.elasticsearch.index.IndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testXContent(org.elasticsearch.index.IndexTests)",
  "startTimestamp": 1473936006462,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToString(org.elasticsearch.index.IndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToString(org.elasticsearch.index.IndexTests)",
  "startTimestamp": 1473936006465,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.IndexTests",
  "startTimestamp": 1473936006447,
  "executionTime": 21
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.IndexingSlowLogTests",
   "displayName": "org.elasticsearch.index.IndexingSlowLogTests",
   "methodName": null,
   "className": "org.elasticsearch.index.IndexingSlowLogTests",
   "children": [
    {
     "id": "ID#testSlowLogParsedDocumentPrinterSourceToLog(org.elasticsearch.index.IndexingSlowLogTests)",
     "displayName": "testSlowLogParsedDocumentPrinterSourceToLog(org.elasticsearch.index.IndexingSlowLogTests)",
     "methodName": "testSlowLogParsedDocumentPrinterSourceToLog",
     "className": "org.elasticsearch.index.IndexingSlowLogTests",
     "children": []
    },
    {
     "id": "ID#testSetLevels(org.elasticsearch.index.IndexingSlowLogTests)",
     "displayName": "testSetLevels(org.elasticsearch.index.IndexingSlowLogTests)",
     "methodName": "testSetLevels",
     "className": "org.elasticsearch.index.IndexingSlowLogTests",
     "children": []
    },
    {
     "id": "ID#testReformatSetting(org.elasticsearch.index.IndexingSlowLogTests)",
     "displayName": "testReformatSetting(org.elasticsearch.index.IndexingSlowLogTests)",
     "methodName": "testReformatSetting",
     "className": "org.elasticsearch.index.IndexingSlowLogTests",
     "children": []
    },
    {
     "id": "ID#testLevelSetting(org.elasticsearch.index.IndexingSlowLogTests)",
     "displayName": "testLevelSetting(org.elasticsearch.index.IndexingSlowLogTests)",
     "methodName": "testLevelSetting",
     "className": "org.elasticsearch.index.IndexingSlowLogTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936006745
 }
]

[
 "TEST_STARTED",
 "ID#testSlowLogParsedDocumentPrinterSourceToLog(org.elasticsearch.index.IndexingSlowLogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSlowLogParsedDocumentPrinterSourceToLog(org.elasticsearch.index.IndexingSlowLogTests)",
  "startTimestamp": 1473936006843,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testSetLevels(org.elasticsearch.index.IndexingSlowLogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:40:06,875][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.indexing.slowlog.threshold.index.warn] from [400ms] to [420ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:40:06,876][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.indexing.slowlog.threshold.index.info] from [300ms] to [320ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:40:06,876][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.indexing.slowlog.threshold.index.debug] from [200ms] to [220ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:40:06,876][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.indexing.slowlog.threshold.index.trace] from [100ms] to [120ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:40:06,876][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.indexing.slowlog.threshold.index.warn] from [420ms] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:40:06,876][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.indexing.slowlog.threshold.index.info] from [320ms] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:40:06,876][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.indexing.slowlog.threshold.index.debug] from [220ms] to [-1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:40:06,876][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.indexing.slowlog.threshold.index.trace] from [120ms] to [-1]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetLevels(org.elasticsearch.index.IndexingSlowLogTests)",
  "startTimestamp": 1473936006872,
  "executionTime": 25
 }
]

[
 "TEST_STARTED",
 "ID#testReformatSetting(org.elasticsearch.index.IndexingSlowLogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:40:06,900][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.indexing.slowlog.reformat] from [false] to [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:40:06,901][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.indexing.slowlog.reformat] from [true] to [false]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:40:06,901][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.indexing.slowlog.reformat] from [false] to [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReformatSetting(org.elasticsearch.index.IndexingSlowLogTests)",
  "startTimestamp": 1473936006898,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testLevelSetting(org.elasticsearch.index.IndexingSlowLogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:40:06,927][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.indexing.slowlog.level] from [WARN] to [DEBUG]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:40:06,928][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.indexing.slowlog.level] from [DEBUG] to [TRACE]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLevelSetting(org.elasticsearch.index.IndexingSlowLogTests)",
  "startTimestamp": 1473936006905,
  "executionTime": 27
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.IndexingSlowLogTests",
  "startTimestamp": 1473936006745,
  "executionTime": 190
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.MergePolicySettingsTests",
   "displayName": "org.elasticsearch.index.MergePolicySettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.index.MergePolicySettingsTests",
   "children": [
    {
     "id": "ID#testUpdateSettings(org.elasticsearch.index.MergePolicySettingsTests)",
     "displayName": "testUpdateSettings(org.elasticsearch.index.MergePolicySettingsTests)",
     "methodName": "testUpdateSettings",
     "className": "org.elasticsearch.index.MergePolicySettingsTests",
     "children": []
    },
    {
     "id": "ID#testTieredMergePolicySettingsUpdate(org.elasticsearch.index.MergePolicySettingsTests)",
     "displayName": "testTieredMergePolicySettingsUpdate(org.elasticsearch.index.MergePolicySettingsTests)",
     "methodName": "testTieredMergePolicySettingsUpdate",
     "className": "org.elasticsearch.index.MergePolicySettingsTests",
     "children": []
    },
    {
     "id": "ID#testNoMerges(org.elasticsearch.index.MergePolicySettingsTests)",
     "displayName": "testNoMerges(org.elasticsearch.index.MergePolicySettingsTests)",
     "methodName": "testNoMerges",
     "className": "org.elasticsearch.index.MergePolicySettingsTests",
     "children": []
    },
    {
     "id": "ID#testCompoundFileSettings(org.elasticsearch.index.MergePolicySettingsTests)",
     "displayName": "testCompoundFileSettings(org.elasticsearch.index.MergePolicySettingsTests)",
     "methodName": "testCompoundFileSettings",
     "className": "org.elasticsearch.index.MergePolicySettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936007034
 }
]

[
 "TEST_STARTED",
 "ID#testUpdateSettings(org.elasticsearch.index.MergePolicySettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:07,112][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.compound_format] from [0.9] to [0.1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:07,116][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.compound_format] from [0.1] to [0.0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:07,116][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.compound_format] from [0.0] to [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:07,116][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.compound_format] from [true] to [false]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdateSettings(org.elasticsearch.index.MergePolicySettingsTests)",
  "startTimestamp": 1473936007106,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testTieredMergePolicySettingsUpdate(org.elasticsearch.index.MergePolicySettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:07,127][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.merge.policy.expunge_deletes_allowed] from [10.0] to [11.0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:07,128][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.merge.policy.expunge_deletes_allowed] from [11.0] to [10.0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:07,128][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.merge.policy.floor_segment] from [2mb] to [3mb]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:07,128][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.merge.policy.floor_segment] from [3mb] to [2mb]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:07,128][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.merge.policy.max_merge_at_once] from [10] to [9]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:07,128][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.merge.policy.max_merge_at_once] from [9] to [10]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:07,128][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.merge.policy.max_merge_at_once_explicit] from [30] to [29]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:07,128][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.merge.policy.max_merge_at_once_explicit] from [29] to [30]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:07,129][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.merge.policy.reclaim_deletes_weight] from [2.0] to [3.0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:07,129][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.merge.policy.segments_per_tier] from [10.0] to [11.0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:07,129][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.merge.policy.reclaim_deletes_weight] from [3.0] to [2.0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:07,129][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.merge.policy.segments_per_tier] from [11.0] to [10.0]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTieredMergePolicySettingsUpdate(org.elasticsearch.index.MergePolicySettingsTests)",
  "startTimestamp": 1473936007124,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testNoMerges(org.elasticsearch.index.MergePolicySettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:07,132][WARN ][org.elasticsearch.index  ]  [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:07,132][WARN ][org.elasticsearch.index  ]  [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoMerges(org.elasticsearch.index.MergePolicySettingsTests)",
  "startTimestamp": 1473936007129,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCompoundFileSettings(org.elasticsearch.index.MergePolicySettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompoundFileSettings(org.elasticsearch.index.MergePolicySettingsTests)",
  "startTimestamp": 1473936007132,
  "executionTime": 31
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.MergePolicySettingsTests",
  "startTimestamp": 1473936007034,
  "executionTime": 131
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.AnalysisFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.AnalysisFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.AnalysisFactoryTests",
   "children": [
    {
     "id": "ID#testTokenizers(org.elasticsearch.index.analysis.AnalysisFactoryTests)",
     "displayName": "testTokenizers(org.elasticsearch.index.analysis.AnalysisFactoryTests)",
     "methodName": "testTokenizers",
     "className": "org.elasticsearch.index.analysis.AnalysisFactoryTests",
     "children": []
    },
    {
     "id": "ID#testTokenFilters(org.elasticsearch.index.analysis.AnalysisFactoryTests)",
     "displayName": "testTokenFilters(org.elasticsearch.index.analysis.AnalysisFactoryTests)",
     "methodName": "testTokenFilters",
     "className": "org.elasticsearch.index.analysis.AnalysisFactoryTests",
     "children": []
    },
    {
     "id": "ID#testMultiTermAware(org.elasticsearch.index.analysis.AnalysisFactoryTests)",
     "displayName": "testMultiTermAware(org.elasticsearch.index.analysis.AnalysisFactoryTests)",
     "methodName": "testMultiTermAware",
     "className": "org.elasticsearch.index.analysis.AnalysisFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCharFilters(org.elasticsearch.index.analysis.AnalysisFactoryTests)",
     "displayName": "testCharFilters(org.elasticsearch.index.analysis.AnalysisFactoryTests)",
     "methodName": "testCharFilters",
     "className": "org.elasticsearch.index.analysis.AnalysisFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936007276
 }
]

[
 "TEST_STARTED",
 "ID#testTokenizers(org.elasticsearch.index.analysis.AnalysisFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTokenizers(org.elasticsearch.index.analysis.AnalysisFactoryTests)",
  "startTimestamp": 1473936007301,
  "executionTime": 128
 }
]

[
 "TEST_STARTED",
 "ID#testTokenFilters(org.elasticsearch.index.analysis.AnalysisFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTokenFilters(org.elasticsearch.index.analysis.AnalysisFactoryTests)",
  "startTimestamp": 1473936007430,
  "executionTime": 388
 }
]

[
 "TEST_STARTED",
 "ID#testMultiTermAware(org.elasticsearch.index.analysis.AnalysisFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiTermAware(org.elasticsearch.index.analysis.AnalysisFactoryTests)",
  "startTimestamp": 1473936007818,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testCharFilters(org.elasticsearch.index.analysis.AnalysisFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCharFilters(org.elasticsearch.index.analysis.AnalysisFactoryTests)",
  "startTimestamp": 1473936007836,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.AnalysisFactoryTests",
  "startTimestamp": 1473936007276,
  "executionTime": 566
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.AnalysisServiceTests",
   "displayName": "org.elasticsearch.index.analysis.AnalysisServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.AnalysisServiceTests",
   "children": [
    {
     "id": "ID#testBackCompatOverrideDefaultIndexAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "displayName": "testBackCompatOverrideDefaultIndexAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "methodName": "testBackCompatOverrideDefaultIndexAnalyzer",
     "className": "org.elasticsearch.index.analysis.AnalysisServiceTests",
     "children": []
    },
    {
     "id": "ID#testOverrideDefaultSearchAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "displayName": "testOverrideDefaultSearchAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "methodName": "testOverrideDefaultSearchAnalyzer",
     "className": "org.elasticsearch.index.analysis.AnalysisServiceTests",
     "children": []
    },
    {
     "id": "ID#testBuiltInAnalyzersAreCached(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "displayName": "testBuiltInAnalyzersAreCached(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "methodName": "testBuiltInAnalyzersAreCached",
     "className": "org.elasticsearch.index.analysis.AnalysisServiceTests",
     "children": []
    },
    {
     "id": "ID#testOverrideDefaultAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "displayName": "testOverrideDefaultAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "methodName": "testOverrideDefaultAnalyzer",
     "className": "org.elasticsearch.index.analysis.AnalysisServiceTests",
     "children": []
    },
    {
     "id": "ID#testNoTypeOrTokenizerErrorMessage(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "displayName": "testNoTypeOrTokenizerErrorMessage(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "methodName": "testNoTypeOrTokenizerErrorMessage",
     "className": "org.elasticsearch.index.analysis.AnalysisServiceTests",
     "children": []
    },
    {
     "id": "ID#testDefaultAnalyzers(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "displayName": "testDefaultAnalyzers(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "methodName": "testDefaultAnalyzers",
     "className": "org.elasticsearch.index.analysis.AnalysisServiceTests",
     "children": []
    },
    {
     "id": "ID#testBackCompatOverrideDefaultIndexAndSearchAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "displayName": "testBackCompatOverrideDefaultIndexAndSearchAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "methodName": "testBackCompatOverrideDefaultIndexAndSearchAnalyzer",
     "className": "org.elasticsearch.index.analysis.AnalysisServiceTests",
     "children": []
    },
    {
     "id": "ID#testOverrideDefaultIndexAnalyzerIsUnsupported(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "displayName": "testOverrideDefaultIndexAnalyzerIsUnsupported(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "methodName": "testOverrideDefaultIndexAnalyzerIsUnsupported",
     "className": "org.elasticsearch.index.analysis.AnalysisServiceTests",
     "children": []
    },
    {
     "id": "ID#testConfigureCamelCaseTokenFilter(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "displayName": "testConfigureCamelCaseTokenFilter(org.elasticsearch.index.analysis.AnalysisServiceTests)",
     "methodName": "testConfigureCamelCaseTokenFilter",
     "className": "org.elasticsearch.index.analysis.AnalysisServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936008053
 }
]

[
 "TEST_STARTED",
 "ID#testBackCompatOverrideDefaultIndexAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T23:40:08,076][WARN ][org.elasticsearch.deprecation.index.analysis]  [index] setting [index.analysis.analyzer.default_index] is deprecated, use [index.analysis.analyzer.default] instead for index [index]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBackCompatOverrideDefaultIndexAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)",
  "startTimestamp": 1473936008072,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testOverrideDefaultSearchAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOverrideDefaultSearchAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)",
  "startTimestamp": 1473936008078,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testBuiltInAnalyzersAreCached(org.elasticsearch.index.analysis.AnalysisServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuiltInAnalyzersAreCached(org.elasticsearch.index.analysis.AnalysisServiceTests)",
  "startTimestamp": 1473936008081,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testOverrideDefaultAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOverrideDefaultAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)",
  "startTimestamp": 1473936008087,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testNoTypeOrTokenizerErrorMessage(org.elasticsearch.index.analysis.AnalysisServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoTypeOrTokenizerErrorMessage(org.elasticsearch.index.analysis.AnalysisServiceTests)",
  "startTimestamp": 1473936008091,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultAnalyzers(org.elasticsearch.index.analysis.AnalysisServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultAnalyzers(org.elasticsearch.index.analysis.AnalysisServiceTests)",
  "startTimestamp": 1473936008097,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testBackCompatOverrideDefaultIndexAndSearchAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T23:40:08,107][WARN ][org.elasticsearch.deprecation.index.analysis]  [index] setting [index.analysis.analyzer.default_index] is deprecated, use [index.analysis.analyzer.default] instead for index [index]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBackCompatOverrideDefaultIndexAndSearchAnalyzer(org.elasticsearch.index.analysis.AnalysisServiceTests)",
  "startTimestamp": 1473936008103,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testOverrideDefaultIndexAnalyzerIsUnsupported(org.elasticsearch.index.analysis.AnalysisServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOverrideDefaultIndexAnalyzerIsUnsupported(org.elasticsearch.index.analysis.AnalysisServiceTests)",
  "startTimestamp": 1473936008107,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testConfigureCamelCaseTokenFilter(org.elasticsearch.index.analysis.AnalysisServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigureCamelCaseTokenFilter(org.elasticsearch.index.analysis.AnalysisServiceTests)",
  "startTimestamp": 1473936008112,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.AnalysisServiceTests",
  "startTimestamp": 1473936008053,
  "executionTime": 80
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.AnalysisTests",
   "displayName": "org.elasticsearch.index.analysis.AnalysisTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.AnalysisTests",
   "children": [
    {
     "id": "ID#testParseWordList(org.elasticsearch.index.analysis.AnalysisTests)",
     "displayName": "testParseWordList(org.elasticsearch.index.analysis.AnalysisTests)",
     "methodName": "testParseWordList",
     "className": "org.elasticsearch.index.analysis.AnalysisTests",
     "children": []
    },
    {
     "id": "ID#testParseStemExclusion(org.elasticsearch.index.analysis.AnalysisTests)",
     "displayName": "testParseStemExclusion(org.elasticsearch.index.analysis.AnalysisTests)",
     "methodName": "testParseStemExclusion",
     "className": "org.elasticsearch.index.analysis.AnalysisTests",
     "children": []
    },
    {
     "id": "ID#testParseNonExistingFile(org.elasticsearch.index.analysis.AnalysisTests)",
     "displayName": "testParseNonExistingFile(org.elasticsearch.index.analysis.AnalysisTests)",
     "methodName": "testParseNonExistingFile",
     "className": "org.elasticsearch.index.analysis.AnalysisTests",
     "children": []
    },
    {
     "id": "ID#testParseFalseEncodedFile(org.elasticsearch.index.analysis.AnalysisTests)",
     "displayName": "testParseFalseEncodedFile(org.elasticsearch.index.analysis.AnalysisTests)",
     "methodName": "testParseFalseEncodedFile",
     "className": "org.elasticsearch.index.analysis.AnalysisTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936008331
 }
]

[
 "TEST_STARTED",
 "ID#testParseWordList(org.elasticsearch.index.analysis.AnalysisTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseWordList(org.elasticsearch.index.analysis.AnalysisTests)",
  "startTimestamp": 1473936008342,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testParseStemExclusion(org.elasticsearch.index.analysis.AnalysisTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseStemExclusion(org.elasticsearch.index.analysis.AnalysisTests)",
  "startTimestamp": 1473936008351,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseNonExistingFile(org.elasticsearch.index.analysis.AnalysisTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseNonExistingFile(org.elasticsearch.index.analysis.AnalysisTests)",
  "startTimestamp": 1473936008354,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParseFalseEncodedFile(org.elasticsearch.index.analysis.AnalysisTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFalseEncodedFile(org.elasticsearch.index.analysis.AnalysisTests)",
  "startTimestamp": 1473936008358,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.AnalysisTests",
  "startTimestamp": 1473936008331,
  "executionTime": 44
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
   "children": [
    {
     "id": "ID#testSplitOnCaseChange(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testSplitOnCaseChange(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testSplitOnCaseChange",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testStemEnglishPossessive(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testStemEnglishPossessive(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testStemEnglishPossessive",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testPartsAndCatenate(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testPartsAndCatenate(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testPartsAndCatenate",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCatenateWords(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testCatenateWords(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testCatenateWords",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCatenateAll(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testCatenateAll(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testCatenateAll",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testPreserveOriginal(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testPreserveOriginal(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testPreserveOriginal",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testDefault(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testDefault(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testDefault",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCatenateNumbers(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testCatenateNumbers(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testCatenateNumbers",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936008670
 }
]

[
 "TEST_STARTED",
 "ID#testSplitOnCaseChange(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSplitOnCaseChange(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1473936008692,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testStemEnglishPossessive(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStemEnglishPossessive(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1473936008703,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testPartsAndCatenate(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPartsAndCatenate(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1473936008713,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testCatenateWords(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCatenateWords(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1473936008740,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testCatenateAll(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCatenateAll(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1473936008749,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testPreserveOriginal(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreserveOriginal(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1473936008762,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testDefault(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefault(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1473936008791,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testCatenateNumbers(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCatenateNumbers(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1473936008802,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
  "startTimestamp": 1473936008670,
  "executionTime": 148
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests",
   "children": [
    {
     "id": "ID#testCommonGramsAnalysis(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
     "displayName": "testCommonGramsAnalysis(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
     "methodName": "testCommonGramsAnalysis",
     "className": "org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testWithoutCommonWordsMatch(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
     "displayName": "testWithoutCommonWordsMatch(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
     "methodName": "testWithoutCommonWordsMatch",
     "className": "org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testDefault(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
     "displayName": "testDefault(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
     "methodName": "testDefault",
     "className": "org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testSettings(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
     "displayName": "testSettings(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
     "methodName": "testSettings",
     "className": "org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testQueryModeCommonGramsAnalysis(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
     "displayName": "testQueryModeCommonGramsAnalysis(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
     "methodName": "testQueryModeCommonGramsAnalysis",
     "className": "org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testQueryModeSettings(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
     "displayName": "testQueryModeSettings(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
     "methodName": "testQueryModeSettings",
     "className": "org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936008886
 }
]

[
 "TEST_STARTED",
 "ID#testCommonGramsAnalysis(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCommonGramsAnalysis(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
  "startTimestamp": 1473936008901,
  "executionTime": 77
 }
]

[
 "TEST_STARTED",
 "ID#testWithoutCommonWordsMatch(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithoutCommonWordsMatch(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
  "startTimestamp": 1473936008978,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testDefault(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefault(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
  "startTimestamp": 1473936008993,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testSettings(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSettings(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
  "startTimestamp": 1473936009001,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testQueryModeCommonGramsAnalysis(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryModeCommonGramsAnalysis(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
  "startTimestamp": 1473936009025,
  "executionTime": 31
 }
]

[
 "TEST_STARTED",
 "ID#testQueryModeSettings(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryModeSettings(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
  "startTimestamp": 1473936009057,
  "executionTime": 35
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests",
  "startTimestamp": 1473936008886,
  "executionTime": 217
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.synonyms.SynonymsAnalysisTests",
   "displayName": "org.elasticsearch.index.analysis.synonyms.SynonymsAnalysisTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.synonyms.SynonymsAnalysisTests",
   "children": [
    {
     "id": "ID#testSynonymsAnalysis(org.elasticsearch.index.analysis.synonyms.SynonymsAnalysisTests)",
     "displayName": "testSynonymsAnalysis(org.elasticsearch.index.analysis.synonyms.SynonymsAnalysisTests)",
     "methodName": "testSynonymsAnalysis",
     "className": "org.elasticsearch.index.analysis.synonyms.SynonymsAnalysisTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936009385
 }
]

[
 "TEST_STARTED",
 "ID#testSynonymsAnalysis(org.elasticsearch.index.analysis.synonyms.SynonymsAnalysisTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSynonymsAnalysis(org.elasticsearch.index.analysis.synonyms.SynonymsAnalysisTests)",
  "startTimestamp": 1473936009416,
  "executionTime": 60
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.synonyms.SynonymsAnalysisTests",
  "startTimestamp": 1473936009385,
  "executionTime": 95
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.engine.InternalEngineTests",
   "displayName": "org.elasticsearch.index.engine.InternalEngineTests",
   "methodName": null,
   "className": "org.elasticsearch.index.engine.InternalEngineTests",
   "children": [
    {
     "id": "ID#testMissingTranslog(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testMissingTranslog(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testMissingTranslog",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testCurrentTranslogIDisCommitted(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testCurrentTranslogIDisCommitted(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testCurrentTranslogIDisCommitted",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testRetryWithAutogeneratedIdsAndWrongOrderWorksAndNoDuplicateDocs(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testRetryWithAutogeneratedIdsAndWrongOrderWorksAndNoDuplicateDocs(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testRetryWithAutogeneratedIdsAndWrongOrderWorksAndNoDuplicateDocs",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testEnableGcDeletes(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testEnableGcDeletes(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testEnableGcDeletes",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testCommitStats(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testCommitStats(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testCommitStats",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testVerboseSegments(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testVerboseSegments(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testVerboseSegments",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testTranslogRecoveryDoesNotReplayIntoTranslog(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testTranslogRecoveryDoesNotReplayIntoTranslog(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testTranslogRecoveryDoesNotReplayIntoTranslog",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testSimpleOperations(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testSimpleOperations(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testSimpleOperations",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testVersioningReplicaConflict2(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testVersioningReplicaConflict2(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testVersioningReplicaConflict2",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testFlushIsDisabledDuringTranslogRecovery(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testFlushIsDisabledDuringTranslogRecovery(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testFlushIsDisabledDuringTranslogRecovery",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testFailStart(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testFailStart(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testFailStart",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testVersioningCreateExistsExceptionWithFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testVersioningCreateExistsExceptionWithFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testVersioningCreateExistsExceptionWithFlush",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testRetryConcurrently(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testRetryConcurrently(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testRetryConcurrently",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testVersioningIndexConflictWithFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testVersioningIndexConflictWithFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testVersioningIndexConflictWithFlush",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testVersioningDeleteConflictWithFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testVersioningDeleteConflictWithFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testVersioningDeleteConflictWithFlush",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testExternalVersioningIndexConflict(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testExternalVersioningIndexConflict(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testExternalVersioningIndexConflict",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testDoubleDelivery(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testDoubleDelivery(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testDoubleDelivery",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testSkipTranslogReplay(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testSkipTranslogReplay(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testSkipTranslogReplay",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testVersioningNewCreate(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testVersioningNewCreate(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testVersioningNewCreate",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testSegmentsWithMergeFlag(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testSegmentsWithMergeFlag(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testSegmentsWithMergeFlag",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testIndexWriterIFDInfoStream(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testIndexWriterIFDInfoStream(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testIndexWriterIFDInfoStream",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testSegments(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testSegments(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testSegments",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testSyncedFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testSyncedFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testSyncedFlush",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testTranslogMultipleOperationsSameDocument(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testTranslogMultipleOperationsSameDocument(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testTranslogMultipleOperationsSameDocument",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testExternalVersioningNewIndex(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testExternalVersioningNewIndex(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testExternalVersioningNewIndex",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testSegmentsStatsIncludingFileSizes(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testSegmentsStatsIncludingFileSizes(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testSegmentsStatsIncludingFileSizes",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testShardNotAvailableExceptionWhenEngineClosedConcurrently(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testShardNotAvailableExceptionWhenEngineClosedConcurrently(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testShardNotAvailableExceptionWhenEngineClosedConcurrently",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testForceMergeAndClose(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testForceMergeAndClose(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testForceMergeAndClose",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testDocStats(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testDocStats(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testDocStats",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testRecoverFromForeignTranslog(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testRecoverFromForeignTranslog(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testRecoverFromForeignTranslog",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testAppendConcurrently(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testAppendConcurrently(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testAppendConcurrently",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testVersioningNewIndex(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testVersioningNewIndex(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testVersioningNewIndex",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testBasicCreatedFlag(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testBasicCreatedFlag(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testBasicCreatedFlag",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testVersioningDeleteConflict(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testVersioningDeleteConflict(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testVersioningDeleteConflict",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testExternalVersioningIndexConflictWithFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testExternalVersioningIndexConflictWithFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testExternalVersioningIndexConflictWithFlush",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testTranslogReplay(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testTranslogReplay(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testTranslogReplay",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testRetryWithAutogeneratedIdWorksAndNoDuplicateDocs(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testRetryWithAutogeneratedIdWorksAndNoDuplicateDocs(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testRetryWithAutogeneratedIdWorksAndNoDuplicateDocs",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testConcurrentGetAndFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testConcurrentGetAndFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testConcurrentGetAndFlush",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testCreatedFlagAfterFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testCreatedFlagAfterFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testCreatedFlagAfterFlush",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testVersioningCreateExistsException(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testVersioningCreateExistsException(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testVersioningCreateExistsException",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeOldIndex(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testUpgradeOldIndex(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testUpgradeOldIndex",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testSycnedFlushVanishesOnReplay(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testSycnedFlushVanishesOnReplay(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testSycnedFlushVanishesOnReplay",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testIndexWriterInfoStream(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testIndexWriterInfoStream(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testIndexWriterInfoStream",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testSearchResultRelease(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testSearchResultRelease(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testSearchResultRelease",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testVersioningReplicaConflict1(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testVersioningReplicaConflict1(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testVersioningReplicaConflict1",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testSycnedFlushSurvivesEngineRestart(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testSycnedFlushSurvivesEngineRestart(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testSycnedFlushSurvivesEngineRestart",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testExtractShardId(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testExtractShardId(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testExtractShardId",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testForceMerge(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testForceMerge(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testForceMerge",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testRenewSyncFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testRenewSyncFlush(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testRenewSyncFlush",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testSettings(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testSettings(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testSettings",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testVersioningIndexConflict(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testVersioningIndexConflict(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testVersioningIndexConflict",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testIndexSearcherWrapper(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testIndexSearcherWrapper(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testIndexSearcherWrapper",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    },
    {
     "id": "ID#testTranslogReplayWithFailure(org.elasticsearch.index.engine.InternalEngineTests)",
     "displayName": "testTranslogReplayWithFailure(org.elasticsearch.index.engine.InternalEngineTests)",
     "methodName": "testTranslogReplayWithFailure",
     "className": "org.elasticsearch.index.engine.InternalEngineTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936009662
 }
]

[
 "TEST_STARTED",
 "ID#testMissingTranslog(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingTranslog(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936009701,
  "executionTime": 134
 }
]

[
 "TEST_STARTED",
 "ID#testCurrentTranslogIDisCommitted(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCurrentTranslogIDisCommitted(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936009835,
  "executionTime": 497
 }
]

[
 "TEST_STARTED",
 "ID#testRetryWithAutogeneratedIdsAndWrongOrderWorksAndNoDuplicateDocs(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRetryWithAutogeneratedIdsAndWrongOrderWorksAndNoDuplicateDocs(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936010332,
  "executionTime": 250
 }
]

[
 "TEST_STARTED",
 "ID#testEnableGcDeletes(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnableGcDeletes(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936010582,
  "executionTime": 1174
 }
]

[
 "TEST_STARTED",
 "ID#testCommitStats(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCommitStats(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936011756,
  "executionTime": 72
 }
]

[
 "TEST_STARTED",
 "ID#testVerboseSegments(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVerboseSegments(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936011828,
  "executionTime": 182
 }
]

[
 "TEST_STARTED",
 "ID#testTranslogRecoveryDoesNotReplayIntoTranslog(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTranslogRecoveryDoesNotReplayIntoTranslog(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936012010,
  "executionTime": 265
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleOperations(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleOperations(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936012275,
  "executionTime": 370
 }
]

[
 "TEST_STARTED",
 "ID#testVersioningReplicaConflict2(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersioningReplicaConflict2(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936012645,
  "executionTime": 71
 }
]

[
 "TEST_STARTED",
 "ID#testFlushIsDisabledDuringTranslogRecovery(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFlushIsDisabledDuringTranslogRecovery(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936012716,
  "executionTime": 169
 }
]

[
 "TEST_STARTED",
 "ID#testFailStart(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailStart(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936012885,
  "executionTime": 1210
 }
]

[
 "TEST_STARTED",
 "ID#testVersioningCreateExistsExceptionWithFlush(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersioningCreateExistsExceptionWithFlush(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936014096,
  "executionTime": 222
 }
]

[
 "TEST_STARTED",
 "ID#testRetryConcurrently(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRetryConcurrently(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936014319,
  "executionTime": 1414
 }
]

[
 "TEST_STARTED",
 "ID#testVersioningIndexConflictWithFlush(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersioningIndexConflictWithFlush(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936015733,
  "executionTime": 207
 }
]

[
 "TEST_STARTED",
 "ID#testVersioningDeleteConflictWithFlush(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersioningDeleteConflictWithFlush(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936015940,
  "executionTime": 175
 }
]

[
 "TEST_STARTED",
 "ID#testExternalVersioningIndexConflict(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExternalVersioningIndexConflict(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936016115,
  "executionTime": 40
 }
]

[
 "TEST_STARTED",
 "ID#testDoubleDelivery(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoubleDelivery(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936016155,
  "executionTime": 92
 }
]

[
 "TEST_STARTED",
 "ID#testSkipTranslogReplay(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSkipTranslogReplay(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936016247,
  "executionTime": 63
 }
]

[
 "TEST_STARTED",
 "ID#testVersioningNewCreate(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersioningNewCreate(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936016310,
  "executionTime": 36
 }
]

[
 "TEST_STARTED",
 "ID#testSegmentsWithMergeFlag(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSegmentsWithMergeFlag(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936016346,
  "executionTime": 148
 }
]

[
 "TEST_STARTED",
 "ID#testIndexWriterIFDInfoStream(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-15 06:40:16,610 TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[9CF13790D965C5A7] ERROR Attempted to append to non-started appender testIndexWriterIFDInfoStream"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:16,610][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[9CF13790D965C5A7] IFD: now checkpoint \"_0(6.2.0):c1 _1(6.2.0):c1\" [2 segments ; isCommit = false]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-15 06:40:16,612 TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[9CF13790D965C5A7] ERROR Attempted to append to non-started appender testIndexWriterIFDInfoStream"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:16,611][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[9CF13790D965C5A7] IFD: delete []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-15 06:40:16,612 TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[9CF13790D965C5A7] ERROR Attempted to append to non-started appender testIndexWriterIFDInfoStream"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:16,612][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[9CF13790D965C5A7] IFD: 2 msec to checkpoint%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-15 06:40:16,613 TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[9CF13790D965C5A7] ERROR Attempted to append to non-started appender testIndexWriterIFDInfoStream"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:16,613][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[9CF13790D965C5A7] IFD: will delete new file \"_1_Asserting_0.dvm\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:16,613][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[9CF13790D965C5A7] IFD: will delete new file \"_1_Asserting_0.tip\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:16,614][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[9CF13790D965C5A7] IFD: will delete new file \"_1.nvd\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:16,614][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[9CF13790D965C5A7] IFD: will delete new file \"_1_Asserting_0.doc\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:16,614][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[9CF13790D965C5A7] IFD: will delete new file \"_1_Asserting_0.tim\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:16,614][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[9CF13790D965C5A7] IFD: will delete new file \"_1_Asserting_0.dvd\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:16,614][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[9CF13790D965C5A7] IFD: will delete new file \"_1_Asserting_0.pos\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:16,614][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[9CF13790D965C5A7] IFD: will delete new file \"_1.fdx\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:16,614][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[9CF13790D965C5A7] IFD: will delete new file \"_1.nvm\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:16,614][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[9CF13790D965C5A7] IFD: will delete new file \"_1.fnm\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:16,614][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[9CF13790D965C5A7] IFD: will delete new file \"_1.fdt\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:16,615][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[9CF13790D965C5A7] IFD: delete [_1_Asserting_0.dvm, _1_Asserting_0.tip, _1.nvd, _1_Asserting_0.doc, _1_Asserting_0.tim, _1_Asserting_0.dvd, _1_Asserting_0.pos, _1.fdx, _1.nvm, _1.fnm, _1.fdt]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:16,615][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[9CF13790D965C5A7] IFD: now checkpoint \"_0(6.2.0):c1 _1(6.2.0):c1\" [2 segments ; isCommit = true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:16,615][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[9CF13790D965C5A7] IFD: deleteCommits: now decRef commit \"segments_2\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:16,615][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[9CF13790D965C5A7] IFD: delete [segments_2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:16,615][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[9CF13790D965C5A7] IFD: 0 msec to checkpoint%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:16,615][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[9CF13790D965C5A7] IFD: delete []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:16,617][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterIFDInfoStream-seed#[9CF13790D965C5A7] IFD: delete []%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexWriterIFDInfoStream(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936016494,
  "executionTime": 141
 }
]

[
 "TEST_STARTED",
 "ID#testSegments(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSegments(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936016635,
  "executionTime": 139
 }
]

[
 "TEST_STARTED",
 "ID#testSyncedFlush(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSyncedFlush(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936016774,
  "executionTime": 133
 }
]

[
 "TEST_STARTED",
 "ID#testTranslogMultipleOperationsSameDocument(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTranslogMultipleOperationsSameDocument(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936016907,
  "executionTime": 156
 }
]

[
 "TEST_STARTED",
 "ID#testExternalVersioningNewIndex(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExternalVersioningNewIndex(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936017063,
  "executionTime": 111
 }
]

[
 "TEST_STARTED",
 "ID#testSegmentsStatsIncludingFileSizes(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSegmentsStatsIncludingFileSizes(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936017174,
  "executionTime": 132
 }
]

[
 "TEST_STARTED",
 "ID#testShardNotAvailableExceptionWhenEngineClosedConcurrently(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:17,340][INFO ][org.elasticsearch.index.engine]  [index][1] try with flush%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:17,343][INFO ][org.elasticsearch.index.engine]  [index][1] exception caught: %0D%0Aorg.elasticsearch.index.engine.EngineClosedException: CurrentState[CLOSED] Closed%0A%09at org.elasticsearch.index.engine.Engine.ensureOpen(Engine.java:380) ~[main/:?]%0A%09at org.elasticsearch.index.engine.InternalEngine.flush(InternalEngine.java:754) ~[main/:?]%0A%09at org.elasticsearch.index.engine.InternalEngineTests$7.run(InternalEngineTests.java:2095) ~[test/:?]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardNotAvailableExceptionWhenEngineClosedConcurrently(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936017307,
  "executionTime": 40
 }
]

[
 "TEST_STARTED",
 "ID#testForceMergeAndClose(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:17,439][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:17,439][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:17,439][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:17,439][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:17,440][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:17,440][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:17,508][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=false%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:17,508][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:17,508][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:17,509][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:17,877][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:17,878][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:17,878][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:17,883][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:17,883][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:17,976][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:18,039][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=false%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:18,039][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:18,317][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=false%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:18,509][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:18,509][INFO ][org.elasticsearch.index.engine]  [index][1] starting segment upgrade upgradeOnlyAncientSegments=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:18,510][INFO ][org.elasticsearch.index.engine]  [index][1] finished segment upgrade%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForceMergeAndClose(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936017348,
  "executionTime": 1205
 }
]

[
 "TEST_STARTED",
 "ID#testDocStats(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDocStats(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936018553,
  "executionTime": 116
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverFromForeignTranslog(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverFromForeignTranslog(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936018669,
  "executionTime": 171
 }
]

[
 "TEST_STARTED",
 "ID#testAppendConcurrently(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppendConcurrently(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936018840,
  "executionTime": 786
 }
]

[
 "TEST_STARTED",
 "ID#testVersioningNewIndex(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersioningNewIndex(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936019626,
  "executionTime": 154
 }
]

[
 "TEST_STARTED",
 "ID#testBasicCreatedFlag(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicCreatedFlag(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936019780,
  "executionTime": 69
 }
]

[
 "TEST_STARTED",
 "ID#testVersioningDeleteConflict(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersioningDeleteConflict(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936019849,
  "executionTime": 64
 }
]

[
 "TEST_STARTED",
 "ID#testExternalVersioningIndexConflictWithFlush(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExternalVersioningIndexConflictWithFlush(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936019913,
  "executionTime": 112
 }
]

[
 "TEST_STARTED",
 "ID#testTranslogReplay(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTranslogReplay(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936020025,
  "executionTime": 280
 }
]

[
 "TEST_STARTED",
 "ID#testRetryWithAutogeneratedIdWorksAndNoDuplicateDocs(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRetryWithAutogeneratedIdWorksAndNoDuplicateDocs(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936020305,
  "executionTime": 63
 }
]

[
 "TEST_STARTED",
 "ID#testConcurrentGetAndFlush(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcurrentGetAndFlush(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936020368,
  "executionTime": 126
 }
]

[
 "TEST_STARTED",
 "ID#testCreatedFlagAfterFlush(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreatedFlagAfterFlush(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936020494,
  "executionTime": 126
 }
]

[
 "TEST_STARTED",
 "ID#testVersioningCreateExistsException(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersioningCreateExistsException(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936020621,
  "executionTime": 77
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeOldIndex(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeOldIndex(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936020698,
  "executionTime": 3555
 }
]

[
 "TEST_STARTED",
 "ID#testSycnedFlushVanishesOnReplay(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSycnedFlushVanishesOnReplay(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936024253,
  "executionTime": 252
 }
]

[
 "TEST_STARTED",
 "ID#testIndexWriterInfoStream(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,590][TRACE][org.elasticsearch.index.engine]  [index][1] acquired flush lock immediately%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-15 06:40:24,590 TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] ERROR Attempted to append to non-started appender testIndexWriterInfoStream"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,605][TRACE][org.elasticsearch.index.translog]  [index][1] current translog set to [3]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-15 06:40:24,606 TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] ERROR Attempted to append to non-started appender testIndexWriterInfoStream"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,606][TRACE][org.elasticsearch.index.engine]  [index][1] starting commit for flush; commitTranslog=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-15 06:40:24,607 TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] ERROR Attempted to append to non-started appender testIndexWriterInfoStream"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,607][TRACE][org.elasticsearch.index.engine]  [index][1] committing writer with translog id [3]  and sync id [null] %0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-15 06:40:24,607 TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] ERROR Attempted to append to non-started appender testIndexWriterInfoStream"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,608][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IW: commit: start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,608][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IW: commit: enter lock%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,608][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IW: commit: now prepare%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,608][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IW: prepareCommit: flush%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,608][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IW:   index before flush _0(6.2.0):c1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,608][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] DW: startFullFlush%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,608][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] DW: anyChanges? numDocsInRam=1 deletes=false hasTickets:false pendingChangesInFullFlush: false%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,608][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] DWFC: addFlushableState DocumentsWriterPerThread [pendingDeletes=gen=0, segment=_1, aborted=false, numDocsInRAM=1, deleteQueue=DWDQ: [ generation: 4 ]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,608][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] DWPT: flush postings as segment _1 numDocs=1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,609][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IW: 0 msec to write norms%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,609][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IW: 0 msec to write docValues%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,609][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IW: 0 msec to write points%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,609][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IW: 0 msec to finish stored fields%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,610][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IW: 0 msec to write postings and finish vectors%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,610][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IW: 0 msec to write fieldInfos%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,610][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] DWPT: new segment has 0 deleted docs%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,610][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] DWPT: new segment has no vectors; norms; docValues; prox; freqs%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,610][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] DWPT: flushedFiles=[_1_Asserting_0.dvm, _1_Asserting_0.tip, _1.nvd, _1_Asserting_0.doc, _1_Asserting_0.tim, _1_Asserting_0.dvd, _1_Asserting_0.pos, _1.fdx, _1.nvm, _1.fnm, _1.fdt]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,610][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] DWPT: flushed codec=Asserting(Lucene62)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,611][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] DWPT: flushed: segment=_1 ramUsed=0.087 MB newFlushedSize=0.001 MB docs/MB=771.012%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,611][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IW: create compound file%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,612][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] DWPT: flush time 4.151669 msec%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,613][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] DW: publishFlushedSegment seg-private updates=null%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,613][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IW: publishFlushedSegment%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,613][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IW: publish sets newSegment delGen=6 seg=_1(6.2.0):c1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,613][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IFD: now checkpoint \"_0(6.2.0):c1 _1(6.2.0):c1\" [2 segments ; isCommit = false]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,613][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IFD: delete []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,613][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IFD: 0 msec to checkpoint%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,613][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IFD: will delete new file \"_1_Asserting_0.dvm\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,613][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IFD: will delete new file \"_1_Asserting_0.tip\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,613][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IFD: will delete new file \"_1.nvd\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,613][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IFD: will delete new file \"_1_Asserting_0.doc\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,613][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IFD: will delete new file \"_1_Asserting_0.tim\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,613][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IFD: will delete new file \"_1_Asserting_0.dvd\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,613][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IFD: will delete new file \"_1_Asserting_0.pos\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,613][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IFD: will delete new file \"_1.fdx\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,620][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IFD: will delete new file \"_1.nvm\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,621][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IFD: will delete new file \"_1.fnm\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,621][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IFD: will delete new file \"_1.fdt\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,621][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IFD: delete [_1_Asserting_0.dvm, _1_Asserting_0.tip, _1.nvd, _1_Asserting_0.doc, _1_Asserting_0.tim, _1_Asserting_0.dvd, _1_Asserting_0.pos, _1.fdx, _1.nvm, _1.fnm, _1.fdt]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,621][TRACE][org.elasticsearch.index.store.deletes] [index][1] StoreDirectory.deleteFile: delete file _1_Asserting_0.dvm%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,624][TRACE][org.elasticsearch.index.store.deletes] [index][1] StoreDirectory.deleteFile: delete file _1_Asserting_0.tip%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,626][TRACE][org.elasticsearch.index.store.deletes] [index][1] StoreDirectory.deleteFile: delete file _1.nvd%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,626][TRACE][org.elasticsearch.index.store.deletes] [index][1] StoreDirectory.deleteFile: delete file _1_Asserting_0.doc%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,627][TRACE][org.elasticsearch.index.store.deletes] [index][1] StoreDirectory.deleteFile: delete file _1_Asserting_0.tim%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,628][TRACE][org.elasticsearch.index.store.deletes] [index][1] StoreDirectory.deleteFile: delete file _1_Asserting_0.dvd%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,628][TRACE][org.elasticsearch.index.store.deletes] [index][1] StoreDirectory.deleteFile: delete file _1_Asserting_0.pos%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,630][TRACE][org.elasticsearch.index.store.deletes] [index][1] StoreDirectory.deleteFile: delete file _1.fdx%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,631][TRACE][org.elasticsearch.index.store.deletes] [index][1] StoreDirectory.deleteFile: delete file _1.nvm%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,632][TRACE][org.elasticsearch.index.store.deletes] [index][1] StoreDirectory.deleteFile: delete file _1.fnm%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,632][TRACE][org.elasticsearch.index.store.deletes] [index][1] StoreDirectory.deleteFile: delete file _1.fdt%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,632][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IW: apply all deletes during flush%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,632][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IW: now apply all deletes for all segments maxDoc=2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,632][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] BD: applyDeletes: open segment readers took 0 msec%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,632][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] BD: applyDeletes: no segments; skipping%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,632][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] BD: prune sis=segments_2: _0(6.2.0):c1 _1(6.2.0):c1 minGen=3 packetCount=0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,633][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] DW: TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] finishFullFlush success=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,633][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IW: %0Adir=store(MockDirectoryWrapper(RAMDirectory@6f34a1f lockFactory=org.apache.lucene.store.SingleInstanceLockFactory@b2edad6))%0Aindex=_0(6.2.0):c1 _1(6.2.0):c1%0Aversion=6.2.0%0Aanalyzer=org.apache.lucene.analysis.MockAnalyzer%0AramBufferSizeMB=256.0%0AmaxBufferedDocs=-1%0AmaxBufferedDeleteTerms=-1%0AmergedSegmentWarmer=null%0AdelPolicy=org.apache.lucene.index.SnapshotDeletionPolicy%0Acommit=null%0AopenMode=CREATE%0Asimilarity=org.apache.lucene.search.similarities.RandomSimilarity%0AmergeScheduler=EngineMergeScheduler: maxThreadCount=2, maxMergeCount=7, ioThrottle=true%0Acodec=Asserting(Lucene62)%0AinfoStream=org.elasticsearch.common.lucene.LoggerInfoStream%0AmergePolicy=ElasticsearchMergePolicy([LogDocMergePolicy: minMergeSize=1000, mergeFactor=14, maxMergeSize=9223372036854775807, maxMergeSizeForForcedMerge=9223372036854775807, calibrateSizeByDeletes=false, maxMergeDocs=2147483647, maxCFSSegmentSizeMB=8.796093022207999E12, noCFSRatio=0.5472670304697372])%0AindexerThreadPool=org.apache.lucene.index.DocumentsWriterPerThreadPool@4ca25522%0AreaderPooling=false%0AperThreadHardLimitMB=1945%0AuseCompoundFile=true%0AcommitOnClose=false%0AindexSort=null%0Awriter=org.apache.lucene.index.IndexWriter@58386f11%0A%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,633][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IW: MMapDirectory.UNMAP_SUPPORTED=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,633][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] LMP: findMerges: 2 segments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,639][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] LMP: seg=_0(6.2.0):c1 level=0.0 size=0.002 MB%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,642][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] LMP: seg=_1(6.2.0):c1 level=0.0 size=0.002 MB%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,643][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] LMP:   level -1.0 to 0.0: 2 segments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,643][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] MS: now merge%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,643][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] MS:   index: _0(6.2.0):c1 _1(6.2.0):c1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,643][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] MS:   no more merges pending; now return%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,643][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IW: startCommit(): start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,643][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IW: startCommit index=_0(6.2.0):c1 _1(6.2.0):c1 changeCount=11%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,643][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IW: startCommit: wrote pending segments file \"pending_segments_3\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,644][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IW: done all syncs: [_1.cfs, _0.cfe, _0.si, _1.cfe, _1.si, _0.cfs]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,644][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IW: commit: pendingCommit != null%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,644][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IW: commit: done writing segments file \"segments_3\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,644][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IFD: now checkpoint \"_0(6.2.0):c1 _1(6.2.0):c1\" [2 segments ; isCommit = true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,644][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IFD: deleteCommits: now decRef commit \"segments_2\"%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,644][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IFD: delete [segments_2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,644][TRACE][org.elasticsearch.index.store.deletes] [index][1] StoreDirectory.deleteFile: delete file segments_2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,644][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IFD: 0 msec to checkpoint%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,644][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IFD: delete []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,644][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IW: commit: took 36.0 msec%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,644][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IW: commit: done%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,644][TRACE][org.elasticsearch.index.engine]  [index][1] finished commit for flush%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,645][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IW: nrtIsCurrent: infoVersion matches: false; DW changes: false; BD changes: false%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,645][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IW: flush at getReader%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,645][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] DW: startFullFlush%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,645][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IW: apply all deletes during flush%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,645][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IW: now apply all deletes for all segments maxDoc=2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,645][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] BD: applyDeletes: open segment readers took 0 msec%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,645][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] BD: applyDeletes: no segments; skipping%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,645][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] BD: prune sis=segments_3: _0(6.2.0):c1 _1(6.2.0):c1 minGen=3 packetCount=0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,648][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IW: incRefDeleter for NRT reader version=11 segments=_0(6.2.0):c1 _1(6.2.0):c1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,649][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IW: return reader version=11 reader=StandardDirectoryReader(segments_3:11:nrt _0(6.2.0):c1 _1(6.2.0):c1)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,649][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] DW: TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] finishFullFlush success=true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,649][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IW: getReader took 4 msec%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,649][TRACE][org.elasticsearch.index.engine.lucene.iw.ifd]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IFD: delete []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,651][TRACE][org.elasticsearch.index.engine.lucene.iw]  [index][1] TEST-InternalEngineTests.testIndexWriterInfoStream-seed#[9CF13790D965C5A7] IW: decRefDeleter for NRT reader version=7 segments=_0(6.2.0):c1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:24,651][TRACE][org.elasticsearch.index.translog]  [index][1] delete translog file - not referenced and not current anymore C:\\projects\\team3\\core\\build\\testrun\\test\\J0\\temp\\org.elasticsearch.index.engine.InternalEngineTests_9CF13790D965C5A7-001\\translog-primary-043\\translog-2.tlog%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexWriterInfoStream(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936024505,
  "executionTime": 173
 }
]

[
 "TEST_STARTED",
 "ID#testSearchResultRelease(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearchResultRelease(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936024679,
  "executionTime": 123
 }
]

[
 "TEST_STARTED",
 "ID#testVersioningReplicaConflict1(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersioningReplicaConflict1(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936024802,
  "executionTime": 59
 }
]

[
 "TEST_STARTED",
 "ID#testSycnedFlushSurvivesEngineRestart(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSycnedFlushSurvivesEngineRestart(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936024861,
  "executionTime": 72
 }
]

[
 "TEST_STARTED",
 "ID#testExtractShardId(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractShardId(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936024933,
  "executionTime": 57
 }
]

[
 "TEST_STARTED",
 "ID#testForceMerge(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForceMerge(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936024990,
  "executionTime": 505
 }
]

[
 "TEST_STARTED",
 "ID#testRenewSyncFlush(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRenewSyncFlush(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936025495,
  "executionTime": 715
 }
]

[
 "TEST_STARTED",
 "ID#testSettings(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSettings(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936026210,
  "executionTime": 88
 }
]

[
 "TEST_STARTED",
 "ID#testVersioningIndexConflict(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersioningIndexConflict(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936026298,
  "executionTime": 45
 }
]

[
 "TEST_STARTED",
 "ID#testIndexSearcherWrapper(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexSearcherWrapper(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936026343,
  "executionTime": 120
 }
]

[
 "TEST_STARTED",
 "ID#testTranslogReplayWithFailure(org.elasticsearch.index.engine.InternalEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTranslogReplayWithFailure(org.elasticsearch.index.engine.InternalEngineTests)",
  "startTimestamp": 1473936026463,
  "executionTime": 288
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.engine.InternalEngineTests",
  "startTimestamp": 1473936009662,
  "executionTime": 17937
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.AllFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.AllFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.AllFieldTypeTests",
   "children": [
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.AllFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.AllFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.AllFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.AllFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.AllFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.AllFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.AllFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.AllFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.AllFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.AllFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.AllFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.AllFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.AllFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.AllFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.AllFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936027908
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.AllFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.AllFieldTypeTests)",
  "startTimestamp": 1473936027928,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.AllFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.AllFieldTypeTests)",
  "startTimestamp": 1473936027931,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.AllFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.AllFieldTypeTests)",
  "startTimestamp": 1473936027935,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.AllFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.AllFieldTypeTests)",
  "startTimestamp": 1473936027937,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.AllFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.AllFieldTypeTests)",
  "startTimestamp": 1473936027939,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.AllFieldTypeTests",
  "startTimestamp": 1473936027908,
  "executionTime": 35
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.BinaryFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.BinaryFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.BinaryFieldMapperTests",
   "children": [
    {
     "id": "ID#testStoredValue(org.elasticsearch.index.mapper.BinaryFieldMapperTests)",
     "displayName": "testStoredValue(org.elasticsearch.index.mapper.BinaryFieldMapperTests)",
     "methodName": "testStoredValue",
     "className": "org.elasticsearch.index.mapper.BinaryFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testEmptyName(org.elasticsearch.index.mapper.BinaryFieldMapperTests)",
     "displayName": "testEmptyName(org.elasticsearch.index.mapper.BinaryFieldMapperTests)",
     "methodName": "testEmptyName",
     "className": "org.elasticsearch.index.mapper.BinaryFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaultMapping(org.elasticsearch.index.mapper.BinaryFieldMapperTests)",
     "displayName": "testDefaultMapping(org.elasticsearch.index.mapper.BinaryFieldMapperTests)",
     "methodName": "testDefaultMapping",
     "className": "org.elasticsearch.index.mapper.BinaryFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936028138
 }
]

[
 "TEST_STARTED",
 "ID#testStoredValue(org.elasticsearch.index.mapper.BinaryFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:40:28,178][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:40:28,210][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:40:28,210][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:40:28,213][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[15428], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:40:28,217][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:40:28,217][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:40:28,354][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:40:28,355][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:40:28,355][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[125]}, bound_addresses {local[125]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:40:28,358][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{OftNYJgFSeedishBT0ddUQ}{9H9GbSleQ2GVfuYRnU4CnQ}{local}{local[125]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:40:28,359][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:40:28,376][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:40:28,393][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:40:28,444][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:40:28,459][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [BinaryFieldMapperTests#testStoredValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStoredValue(org.elasticsearch.index.mapper.BinaryFieldMapperTests)",
  "startTimestamp": 1473936028164,
  "executionTime": 332
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyName(org.elasticsearch.index.mapper.BinaryFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:40:28,504][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:40:28,562][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:40:28,584][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_old] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:40:28,623][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_old][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:40:28,653][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test_old] [BinaryFieldMapperTests#testEmptyName]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyName(org.elasticsearch.index.mapper.BinaryFieldMapperTests)",
  "startTimestamp": 1473936028496,
  "executionTime": 188
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultMapping(org.elasticsearch.index.mapper.BinaryFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:40:28,688][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:40:28,753][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:40:28,777][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [BinaryFieldMapperTests#testDefaultMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultMapping(org.elasticsearch.index.mapper.BinaryFieldMapperTests)",
  "startTimestamp": 1473936028684,
  "executionTime": 149
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:40:28,833][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:40:28,834][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:40:28,834][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:40:28,835][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.BinaryFieldMapperTests",
  "startTimestamp": 1473936028138,
  "executionTime": 707
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.DocumentParserTests",
   "displayName": "org.elasticsearch.index.mapper.DocumentParserTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.DocumentParserTests",
   "children": [
    {
     "id": "ID#testPropagateDynamicWithExistingMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testPropagateDynamicWithExistingMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testPropagateDynamicWithExistingMapper",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testNoLevelWithFieldTypeAsValueNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testNoLevelWithFieldTypeAsValueNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testNoLevelWithFieldTypeAsValueNotFirst",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDocumentContainsMetadataField(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDocumentContainsMetadataField(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDocumentContainsMetadataField",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDeepSubfieldAfterSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDeepSubfieldAfterSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDeepSubfieldAfterSubfieldMappingUpdate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testTypeDisabled(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testTypeDisabled(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testTypeDisabled",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameLongWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameLongWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameLongWithExistingParentWrongType",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameObjectWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameObjectWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameObjectWithExistingParentWrongType",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicGeoPointArrayWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicGeoPointArrayWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicGeoPointArrayWithTemplate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testNoLevelWithFieldTypeAsObjectNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testNoLevelWithFieldTypeAsObjectNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testNoLevelWithFieldTypeAsObjectNotFirst",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testSingleMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testSingleMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testSingleMappingUpdate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testSimpleParser(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testSimpleParser(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testSimpleParser",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameObject",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testSimpleMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testSimpleMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testSimpleMapper",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testTypeLevelWithFieldTypeAsValue(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testTypeLevelWithFieldTypeAsValue(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testTypeLevelWithFieldTypeAsValue",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicFalseDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicFalseDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicFalseDottedFieldNameLong",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testTypeLevelWithFieldTypeAsValueNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testTypeLevelWithFieldTypeAsValueNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testTypeLevelWithFieldTypeAsValueNotFirst",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicFalseDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicFalseDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicFalseDottedFieldNameLongArray",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicFalseObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicFalseObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicFalseObject",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testObjectMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testObjectMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testObjectMappingUpdate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameLongWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameLongWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameLongWithParentTemplate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicLongArray",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameLongWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameLongWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameLongWithExistingParent",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameLongArrayWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameLongArrayWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameLongArrayWithParentTemplate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameObjectWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameObjectWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameObjectWithParentTemplate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testMappedLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testMappedLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testMappedLongArray",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testPropagateDynamicWithDynamicMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testPropagateDynamicWithDynamicMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testPropagateDynamicWithDynamicMapper",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameObjectWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameObjectWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameObjectWithExistingParent",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testParseToJsonAndParse(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testParseToJsonAndParse(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testParseToJsonAndParse",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testMappedNullValue(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testMappedNullValue(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testMappedNullValue",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicFalseLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicFalseLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicFalseLongArray",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicStrictValue(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicStrictValue(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicStrictValue",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testNoLevelWithFieldTypeAsObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testNoLevelWithFieldTypeAsObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testNoLevelWithFieldTypeAsObject",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicObjectWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicObjectWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicObjectWithTemplate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testIncludeInAllPropagation(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testIncludeInAllPropagation(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testIncludeInAllPropagation",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testTypeLevel(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testTypeLevel(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testTypeLevel",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicFalseNull(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicFalseNull(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicFalseNull",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicStrictDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicStrictDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicStrictDottedFieldNameLongArray",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testNoLevel(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testNoLevel(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testNoLevel",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testTypeLevelWithFieldTypeAsObjectNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testTypeLevelWithFieldTypeAsObjectNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testTypeLevelWithFieldTypeAsObjectNotFirst",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testNoLevelWithFieldTypeAsValue(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testNoLevelWithFieldTypeAsValue(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testNoLevelWithFieldTypeAsValue",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameLongArrayWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameLongArrayWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameLongArrayWithExistingParent",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDeepSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDeepSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDeepSubfieldMappingUpdate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testFieldDisabled(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testFieldDisabled(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testFieldDisabled",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicFalseValue(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicFalseValue(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicFalseValue",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameLongArray",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testTypeLevelWithFieldTypeAsObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testTypeLevelWithFieldTypeAsObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testTypeLevelWithFieldTypeAsObject",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testMultipleSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testMultipleSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testMultipleSubfieldMappingUpdate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testEmptyMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testEmptyMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testEmptyMappingUpdate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicStrictObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicStrictObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicStrictObject",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicStrictLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicStrictLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicStrictLongArray",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testSimpleParserNoTypeNoId(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testSimpleParserNoTypeNoId(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testSimpleParserNoTypeNoId",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testSubfieldMappingUpdate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameLong",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testAttributes(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testAttributes(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testAttributes",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDotsWithExistingMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDotsWithExistingMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDotsWithExistingMapper",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicLongArrayWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicLongArrayWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicLongArrayWithTemplate",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicRootFallback(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicRootFallback(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicRootFallback",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicStrictNull(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicStrictNull(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicStrictNull",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testMappedGeoPointArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testMappedGeoPointArray(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testMappedGeoPointArray",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicStrictDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicStrictDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicStrictDottedFieldNameLong",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicFalseDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicFalseDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicFalseDottedFieldNameObject",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testNoDocumentSent(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testNoDocumentSent(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testNoDocumentSent",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicStrictDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicStrictDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicStrictDottedFieldNameObject",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testDynamicDottedFieldNameLongArrayWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)",
     "displayName": "testDynamicDottedFieldNameLongArrayWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)",
     "methodName": "testDynamicDottedFieldNameLongArrayWithExistingParentWrongType",
     "className": "org.elasticsearch.index.mapper.DocumentParserTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936028935
 }
]

[
 "TEST_STARTED",
 "ID#testPropagateDynamicWithExistingMapper(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:28,962][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:28,985][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:28,985][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:28,988][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[15428], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:28,992][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:28,992][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:29,154][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:29,155][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:29,155][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[126]}, bound_addresses {local[126]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:29,156][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{Gh8B3_4ZQ8mZRgpc-yD3QA}{vIkQgSvDRFSy6UBzzgZX3g}{local}{local[126]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:29,158][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:29,172][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:29,192][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:29,301][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:29,315][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testPropagateDynamicWithExistingMapper]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPropagateDynamicWithExistingMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936028953,
  "executionTime": 387
 }
]

[
 "TEST_STARTED",
 "ID#testNoLevelWithFieldTypeAsValueNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:29,346][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:29,391][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:29,407][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testNoLevelWithFieldTypeAsValueNotFirst]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoLevelWithFieldTypeAsValueNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936029340,
  "executionTime": 96
 }
]

[
 "TEST_STARTED",
 "ID#testDocumentContainsMetadataField(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:29,443][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:29,502][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:29,520][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDocumentContainsMetadataField]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDocumentContainsMetadataField(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936029436,
  "executionTime": 118
 }
]

[
 "TEST_STARTED",
 "ID#testDeepSubfieldAfterSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:29,561][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:29,612][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:29,630][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDeepSubfieldAfterSubfieldMappingUpdate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeepSubfieldAfterSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936029554,
  "executionTime": 119
 }
]

[
 "TEST_STARTED",
 "ID#testTypeDisabled(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:29,681][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:29,747][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:29,762][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testTypeDisabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeDisabled(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936029673,
  "executionTime": 120
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameLongWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:29,800][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:29,849][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:29,865][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameLongWithExistingParentWrongType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameLongWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936029793,
  "executionTime": 109
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameObjectWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:29,908][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:29,953][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:29,966][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameObjectWithExistingParentWrongType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameObjectWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936029902,
  "executionTime": 83
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicGeoPointArrayWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:29,992][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:30,028][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:30,038][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicGeoPointArrayWithTemplate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicGeoPointArrayWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936029986,
  "executionTime": 73
 }
]

[
 "TEST_STARTED",
 "ID#testNoLevelWithFieldTypeAsObjectNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:30,066][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:30,103][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:30,113][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testNoLevelWithFieldTypeAsObjectNotFirst]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoLevelWithFieldTypeAsObjectNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936030059,
  "executionTime": 135
 }
]

[
 "TEST_STARTED",
 "ID#testSingleMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:30,198][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:30,241][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:30,253][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testSingleMappingUpdate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936030194,
  "executionTime": 90
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleParser(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:30,307][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:30,364][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:30,387][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testSimpleParser]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleParser(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936030284,
  "executionTime": 135
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:30,426][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:30,470][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:30,483][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameObject]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936030419,
  "executionTime": 96
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleMapper(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:30,522][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:30,577][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:30,597][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testSimpleMapper]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936030515,
  "executionTime": 121
 }
]

[
 "TEST_STARTED",
 "ID#testTypeLevelWithFieldTypeAsValue(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:30,642][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:30,686][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:30,698][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testTypeLevelWithFieldTypeAsValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeLevelWithFieldTypeAsValue(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936030636,
  "executionTime": 94
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicFalseDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:30,742][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:30,810][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:30,825][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicFalseDottedFieldNameLong]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicFalseDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936030730,
  "executionTime": 129
 }
]

[
 "TEST_STARTED",
 "ID#testTypeLevelWithFieldTypeAsValueNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:30,866][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:30,919][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:30,937][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testTypeLevelWithFieldTypeAsValueNotFirst]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeLevelWithFieldTypeAsValueNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936030859,
  "executionTime": 127
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicFalseDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:30,993][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:31,064][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:31,077][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicFalseDottedFieldNameLongArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicFalseDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936030986,
  "executionTime": 119
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicFalseObject(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:31,113][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:31,179][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:31,192][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicFalseObject]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicFalseObject(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936031106,
  "executionTime": 113
 }
]

[
 "TEST_STARTED",
 "ID#testObjectMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:31,226][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:31,278][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:31,291][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testObjectMappingUpdate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testObjectMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936031219,
  "executionTime": 97
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameLongWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:31,323][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:31,365][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:31,378][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameLongWithParentTemplate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameLongWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936031316,
  "executionTime": 94
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicLongArray(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:31,416][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:31,461][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:31,475][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicLongArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936031410,
  "executionTime": 91
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameLongWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:31,508][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:31,555][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:31,569][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameLongWithExistingParent]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameLongWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936031502,
  "executionTime": 97
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameLongArrayWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:31,605][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:31,661][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:31,673][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameLongArrayWithParentTemplate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameLongArrayWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936031599,
  "executionTime": 101
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameObjectWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:31,707][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:31,750][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:31,765][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameObjectWithParentTemplate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameObjectWithParentTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936031700,
  "executionTime": 104
 }
]

[
 "TEST_STARTED",
 "ID#testMappedLongArray(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:31,812][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:31,894][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:31,909][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testMappedLongArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMappedLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936031804,
  "executionTime": 147
 }
]

[
 "TEST_STARTED",
 "ID#testPropagateDynamicWithDynamicMapper(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:31,958][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:32,023][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:32,039][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testPropagateDynamicWithDynamicMapper]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPropagateDynamicWithDynamicMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936031951,
  "executionTime": 123
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameObjectWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:32,082][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:32,139][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:32,158][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameObjectWithExistingParent]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameObjectWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936032075,
  "executionTime": 124
 }
]

[
 "TEST_STARTED",
 "ID#testParseToJsonAndParse(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:32,208][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:32,277][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:32,306][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testParseToJsonAndParse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseToJsonAndParse(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936032199,
  "executionTime": 157
 }
]

[
 "TEST_STARTED",
 "ID#testMappedNullValue(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:32,365][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:32,426][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:32,442][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testMappedNullValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMappedNullValue(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936032356,
  "executionTime": 136
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicFalseLongArray(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:32,500][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:32,556][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:32,569][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicFalseLongArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicFalseLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936032492,
  "executionTime": 107
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicStrictValue(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:32,607][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:32,664][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:32,679][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicStrictValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicStrictValue(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936032599,
  "executionTime": 111
 }
]

[
 "TEST_STARTED",
 "ID#testNoLevelWithFieldTypeAsObject(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:32,715][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:32,775][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:32,789][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testNoLevelWithFieldTypeAsObject]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoLevelWithFieldTypeAsObject(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936032710,
  "executionTime": 106
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicObjectWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:32,821][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:32,885][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:32,904][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicObjectWithTemplate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicObjectWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936032816,
  "executionTime": 131
 }
]

[
 "TEST_STARTED",
 "ID#testIncludeInAllPropagation(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:32,964][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:33,019][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:33,028][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testIncludeInAllPropagation]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludeInAllPropagation(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936032947,
  "executionTime": 110
 }
]

[
 "TEST_STARTED",
 "ID#testTypeLevel(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:33,063][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:33,111][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:33,122][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testTypeLevel]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeLevel(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936033057,
  "executionTime": 128
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicFalseNull(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:33,193][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:33,244][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:33,256][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicFalseNull]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicFalseNull(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936033185,
  "executionTime": 96
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicStrictDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:33,287][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:33,329][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:33,388][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicStrictDottedFieldNameLongArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicStrictDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936033281,
  "executionTime": 128
 }
]

[
 "TEST_STARTED",
 "ID#testNoLevel(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:33,414][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:33,455][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:33,467][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testNoLevel]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoLevel(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936033409,
  "executionTime": 84
 }
]

[
 "TEST_STARTED",
 "ID#testTypeLevelWithFieldTypeAsObjectNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:33,500][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:33,537][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:33,551][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testTypeLevelWithFieldTypeAsObjectNotFirst]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeLevelWithFieldTypeAsObjectNotFirst(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936033493,
  "executionTime": 86
 }
]

[
 "TEST_STARTED",
 "ID#testNoLevelWithFieldTypeAsValue(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:33,586][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:33,639][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:33,653][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testNoLevelWithFieldTypeAsValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoLevelWithFieldTypeAsValue(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936033579,
  "executionTime": 103
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameLongArrayWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:33,687][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:33,739][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:33,753][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameLongArrayWithExistingParent]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameLongArrayWithExistingParent(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936033682,
  "executionTime": 100
 }
]

[
 "TEST_STARTED",
 "ID#testDeepSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:33,789][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:33,839][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:33,853][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDeepSubfieldMappingUpdate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeepSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936033782,
  "executionTime": 99
 }
]

[
 "TEST_STARTED",
 "ID#testFieldDisabled(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:33,888][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:33,971][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:34,042][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testFieldDisabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldDisabled(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936033881,
  "executionTime": 187
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicFalseValue(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:34,075][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:34,151][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:34,166][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicFalseValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicFalseValue(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936034068,
  "executionTime": 129
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:34,203][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:34,258][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:34,275][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameLongArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936034197,
  "executionTime": 104
 }
]

[
 "TEST_STARTED",
 "ID#testTypeLevelWithFieldTypeAsObject(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:34,307][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:34,362][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:34,395][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testTypeLevelWithFieldTypeAsObject]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeLevelWithFieldTypeAsObject(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936034301,
  "executionTime": 118
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:34,423][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:34,472][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:34,484][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testMultipleSubfieldMappingUpdate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936034419,
  "executionTime": 89
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:34,515][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:34,581][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:34,595][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testEmptyMappingUpdate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936034508,
  "executionTime": 132
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicStrictObject(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:34,647][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:34,702][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:34,717][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicStrictObject]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicStrictObject(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936034640,
  "executionTime": 116
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicStrictLongArray(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:34,763][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:34,820][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:34,834][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicStrictLongArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicStrictLongArray(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936034756,
  "executionTime": 117
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleParserNoTypeNoId(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:34,881][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:34,932][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:34,965][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testSimpleParserNoTypeNoId]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleParserNoTypeNoId(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936034873,
  "executionTime": 125
 }
]

[
 "TEST_STARTED",
 "ID#testSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:35,004][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:35,053][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:35,066][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testSubfieldMappingUpdate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSubfieldMappingUpdate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936034998,
  "executionTime": 96
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:35,102][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:35,168][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:35,188][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameLong]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936035094,
  "executionTime": 132
 }
]

[
 "TEST_STARTED",
 "ID#testAttributes(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:35,234][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:35,276][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:35,291][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testAttributes]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAttributes(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936035226,
  "executionTime": 91
 }
]

[
 "TEST_STARTED",
 "ID#testDotsWithExistingMapper(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:35,324][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:35,369][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:35,380][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDotsWithExistingMapper]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDotsWithExistingMapper(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936035317,
  "executionTime": 86
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicLongArrayWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:35,410][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:35,462][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:35,478][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicLongArrayWithTemplate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicLongArrayWithTemplate(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936035403,
  "executionTime": 112
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicRootFallback(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:35,524][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:35,596][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:35,610][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicRootFallback]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicRootFallback(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936035515,
  "executionTime": 128
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicStrictNull(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:35,652][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:35,692][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:35,703][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicStrictNull]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicStrictNull(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936035643,
  "executionTime": 100
 }
]

[
 "TEST_STARTED",
 "ID#testMappedGeoPointArray(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:35,751][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:35,794][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:35,805][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testMappedGeoPointArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMappedGeoPointArray(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936035743,
  "executionTime": 107
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicStrictDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:35,854][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:35,913][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:35,926][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicStrictDottedFieldNameLong]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicStrictDottedFieldNameLong(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936035850,
  "executionTime": 106
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicFalseDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:35,964][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:36,047][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:36,061][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicFalseDottedFieldNameObject]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicFalseDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936035956,
  "executionTime": 135
 }
]

[
 "TEST_STARTED",
 "ID#testNoDocumentSent(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:36,097][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:36,141][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:36,222][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testNoDocumentSent]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoDocumentSent(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936036091,
  "executionTime": 159
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicStrictDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:36,257][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:36,321][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:36,335][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicStrictDottedFieldNameObject]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicStrictDottedFieldNameObject(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936036250,
  "executionTime": 120
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDottedFieldNameLongArrayWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:36,377][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:36,426][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:36,451][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentParserTests#testDynamicDottedFieldNameLongArrayWithExistingParentWrongType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDottedFieldNameLongArrayWithExistingParentWrongType(org.elasticsearch.index.mapper.DocumentParserTests)",
  "startTimestamp": 1473936036370,
  "executionTime": 116
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:36,486][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:36,490][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:36,490][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T13:40:36,492][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.DocumentParserTests",
  "startTimestamp": 1473936028935,
  "executionTime": 7571
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.GeoPointFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.GeoPointFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.GeoPointFieldTypeTests",
   "children": [
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936036610
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)",
  "startTimestamp": 1473936036625,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)",
  "startTimestamp": 1473936036629,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)",
  "startTimestamp": 1473936036630,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)",
  "startTimestamp": 1473936036632,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)",
  "startTimestamp": 1473936036635,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.GeoPointFieldTypeTests",
  "startTimestamp": 1473936036610,
  "executionTime": 28
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.GeoShapeFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.GeoShapeFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.GeoShapeFieldMapperTests",
   "children": [
    {
     "id": "ID#testEmptyName(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "displayName": "testEmptyName(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "methodName": "testEmptyName",
     "className": "org.elasticsearch.index.mapper.GeoShapeFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testOrientationParsing(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "displayName": "testOrientationParsing(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "methodName": "testOrientationParsing",
     "className": "org.elasticsearch.index.mapper.GeoShapeFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLevelPrecisionConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "displayName": "testLevelPrecisionConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "methodName": "testLevelPrecisionConfiguration",
     "className": "org.elasticsearch.index.mapper.GeoShapeFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testGeoShapeMapperMerge(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "displayName": "testGeoShapeMapperMerge(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "methodName": "testGeoShapeMapperMerge",
     "className": "org.elasticsearch.index.mapper.GeoShapeFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testCoerceParsing(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "displayName": "testCoerceParsing(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "methodName": "testCoerceParsing",
     "className": "org.elasticsearch.index.mapper.GeoShapeFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLevelDefaults(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "displayName": "testLevelDefaults(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "methodName": "testLevelDefaults",
     "className": "org.elasticsearch.index.mapper.GeoShapeFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testQuadtreeConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "displayName": "testQuadtreeConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "methodName": "testQuadtreeConfiguration",
     "className": "org.elasticsearch.index.mapper.GeoShapeFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testPointsOnlyOption(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "displayName": "testPointsOnlyOption(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "methodName": "testPointsOnlyOption",
     "className": "org.elasticsearch.index.mapper.GeoShapeFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testGeohashConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "displayName": "testGeohashConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "methodName": "testGeohashConfiguration",
     "className": "org.elasticsearch.index.mapper.GeoShapeFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaultConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "displayName": "testDefaultConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
     "methodName": "testDefaultConfiguration",
     "className": "org.elasticsearch.index.mapper.GeoShapeFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936036830
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyName(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:36,858][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:36,883][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:36,883][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:36,887][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[15428], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:36,890][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:36,890][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:37,041][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:37,043][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:37,043][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[127]}, bound_addresses {local[127]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:37,045][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{eU7iX3LWTGuBnV2sYQYZPA}{pAinl-fGRO-idk1QyRWuOg}{local}{local[127]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:37,046][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:37,059][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:37,076][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:37,122][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:37,138][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_old] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:37,187][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_old][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:37,198][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test_old] [GeoShapeFieldMapperTests#testEmptyName]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyName(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
  "startTimestamp": 1473936036849,
  "executionTime": 388
 }
]

[
 "TEST_STARTED",
 "ID#testOrientationParsing(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:37,244][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:37,291][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:37,308][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:37,366][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:37,379][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test2] [GeoShapeFieldMapperTests#testOrientationParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOrientationParsing(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
  "startTimestamp": 1473936037237,
  "executionTime": 242
 }
]

[
 "TEST_STARTED",
 "ID#testLevelPrecisionConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:37,485][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:37,543][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:37,569][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoShapeFieldMapperTests#testLevelPrecisionConfiguration]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLevelPrecisionConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
  "startTimestamp": 1473936037479,
  "executionTime": 118
 }
]

[
 "TEST_STARTED",
 "ID#testGeoShapeMapperMerge(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:37,604][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:37,651][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:37,669][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoShapeFieldMapperTests#testGeoShapeMapperMerge]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoShapeMapperMerge(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
  "startTimestamp": 1473936037597,
  "executionTime": 97
 }
]

[
 "TEST_STARTED",
 "ID#testCoerceParsing(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:37,701][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:37,757][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:37,776][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:37,840][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:37,855][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test2] [GeoShapeFieldMapperTests#testCoerceParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCoerceParsing(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
  "startTimestamp": 1473936037694,
  "executionTime": 235
 }
]

[
 "TEST_STARTED",
 "ID#testLevelDefaults(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:37,937][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:38,012][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:38,030][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoShapeFieldMapperTests#testLevelDefaults]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLevelDefaults(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
  "startTimestamp": 1473936037929,
  "executionTime": 157
 }
]

[
 "TEST_STARTED",
 "ID#testQuadtreeConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:38,093][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:38,164][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:38,180][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoShapeFieldMapperTests#testQuadtreeConfiguration]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQuadtreeConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
  "startTimestamp": 1473936038086,
  "executionTime": 126
 }
]

[
 "TEST_STARTED",
 "ID#testPointsOnlyOption(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:38,225][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:38,289][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:38,303][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoShapeFieldMapperTests#testPointsOnlyOption]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPointsOnlyOption(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
  "startTimestamp": 1473936038212,
  "executionTime": 121
 }
]

[
 "TEST_STARTED",
 "ID#testGeohashConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:38,340][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:38,403][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:38,420][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoShapeFieldMapperTests#testGeohashConfiguration]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeohashConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
  "startTimestamp": 1473936038333,
  "executionTime": 181
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:38,522][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:38,573][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:38,590][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoShapeFieldMapperTests#testDefaultConfiguration]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultConfiguration(org.elasticsearch.index.mapper.GeoShapeFieldMapperTests)",
  "startTimestamp": 1473936038514,
  "executionTime": 105
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:38,620][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:38,620][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:38,620][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T01:40:38,622][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.GeoShapeFieldMapperTests",
  "startTimestamp": 1473936036830,
  "executionTime": 1805
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.GeoShapeFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.GeoShapeFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.GeoShapeFieldTypeTests",
   "children": [
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.GeoShapeFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.GeoShapeFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.GeoShapeFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.GeoShapeFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.GeoShapeFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.GeoShapeFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.GeoShapeFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.GeoShapeFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.GeoShapeFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.GeoShapeFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.GeoShapeFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.GeoShapeFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.GeoShapeFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.GeoShapeFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.GeoShapeFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936038886
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.GeoShapeFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.GeoShapeFieldTypeTests)",
  "startTimestamp": 1473936038904,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.GeoShapeFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.GeoShapeFieldTypeTests)",
  "startTimestamp": 1473936038907,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.GeoShapeFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.GeoShapeFieldTypeTests)",
  "startTimestamp": 1473936038909,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.GeoShapeFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.GeoShapeFieldTypeTests)",
  "startTimestamp": 1473936038912,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.GeoShapeFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.GeoShapeFieldTypeTests)",
  "startTimestamp": 1473936038914,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.GeoShapeFieldTypeTests",
  "startTimestamp": 1473936038886,
  "executionTime": 32
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.GeohashMappingGeoPointTests",
   "displayName": "org.elasticsearch.index.mapper.GeohashMappingGeoPointTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.GeohashMappingGeoPointTests",
   "children": [
    {
     "id": "ID#testGeoHashPrecisionAsInteger(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
     "displayName": "testGeoHashPrecisionAsInteger(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
     "methodName": "testGeoHashPrecisionAsInteger",
     "className": "org.elasticsearch.index.mapper.GeohashMappingGeoPointTests",
     "children": []
    },
    {
     "id": "ID#testNullValue(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
     "displayName": "testNullValue(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
     "methodName": "testNullValue",
     "className": "org.elasticsearch.index.mapper.GeohashMappingGeoPointTests",
     "children": []
    },
    {
     "id": "ID#testGeoHashPrecisionAsLength(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
     "displayName": "testGeoHashPrecisionAsLength(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
     "methodName": "testGeoHashPrecisionAsLength",
     "className": "org.elasticsearch.index.mapper.GeohashMappingGeoPointTests",
     "children": []
    },
    {
     "id": "ID#testLatLonValues(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
     "displayName": "testLatLonValues(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
     "methodName": "testLatLonValues",
     "className": "org.elasticsearch.index.mapper.GeohashMappingGeoPointTests",
     "children": []
    },
    {
     "id": "ID#testGeoHashValue(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
     "displayName": "testGeoHashValue(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
     "methodName": "testGeoHashValue",
     "className": "org.elasticsearch.index.mapper.GeohashMappingGeoPointTests",
     "children": []
    },
    {
     "id": "ID#testLatLonInOneValue(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
     "displayName": "testLatLonInOneValue(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
     "methodName": "testLatLonInOneValue",
     "className": "org.elasticsearch.index.mapper.GeohashMappingGeoPointTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936039018
 }
]

[
 "TEST_STARTED",
 "ID#testGeoHashPrecisionAsInteger(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:39,043][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:39,190][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:39,190][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:39,194][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[15428], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:39,197][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:39,197][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:39,335][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:39,335][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:39,336][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[128]}, bound_addresses {local[128]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:39,337][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{Cai77rXpR4ay6kxsVL7fvg}{6cN0JBF9Qy2yqStKCBCyxA}{local}{local[128]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:39,338][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:39,404][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:39,488][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:39,949][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:40,016][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:40,016][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_precision parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:40,017][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeohashMappingGeoPointTests#testGeoHashPrecisionAsInteger]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoHashPrecisionAsInteger(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
  "startTimestamp": 1473936039034,
  "executionTime": 1123
 }
]

[
 "TEST_STARTED",
 "ID#testNullValue(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:40,163][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:40,755][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:40,834][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeohashMappingGeoPointTests#testNullValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullValue(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
  "startTimestamp": 1473936040157,
  "executionTime": 796
 }
]

[
 "TEST_STARTED",
 "ID#testGeoHashPrecisionAsLength(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:40,960][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:41,408][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:41,499][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:41,500][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_precision parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:41,500][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeohashMappingGeoPointTests#testGeoHashPrecisionAsLength]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoHashPrecisionAsLength(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
  "startTimestamp": 1473936040953,
  "executionTime": 647
 }
]

[
 "TEST_STARTED",
 "ID#testLatLonValues(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:41,608][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:42,039][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:42,096][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:42,097][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeohashMappingGeoPointTests#testLatLonValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLatLonValues(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
  "startTimestamp": 1473936041600,
  "executionTime": 561
 }
]

[
 "TEST_STARTED",
 "ID#testGeoHashValue(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:42,168][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:42,614][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:42,682][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:42,683][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeohashMappingGeoPointTests#testGeoHashValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoHashValue(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
  "startTimestamp": 1473936042161,
  "executionTime": 596
 }
]

[
 "TEST_STARTED",
 "ID#testLatLonInOneValue(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:42,762][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:43,202][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:43,268][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:43,269][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeohashMappingGeoPointTests#testLatLonInOneValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLatLonInOneValue(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
  "startTimestamp": 1473936042758,
  "executionTime": 588
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:43,346][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:43,346][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:43,347][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T18:40:43,349][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.GeohashMappingGeoPointTests",
  "startTimestamp": 1473936039018,
  "executionTime": 4338
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.ParentFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.ParentFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.ParentFieldTypeTests",
   "children": [
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.ParentFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.ParentFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.ParentFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.ParentFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.ParentFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.ParentFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.ParentFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.ParentFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.ParentFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.ParentFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.ParentFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.ParentFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.ParentFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.ParentFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.ParentFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936043564
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.ParentFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.ParentFieldTypeTests)",
  "startTimestamp": 1473936043579,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.ParentFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.ParentFieldTypeTests)",
  "startTimestamp": 1473936043581,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.ParentFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.ParentFieldTypeTests)",
  "startTimestamp": 1473936043584,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.ParentFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.ParentFieldTypeTests)",
  "startTimestamp": 1473936043586,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.ParentFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.ParentFieldTypeTests)",
  "startTimestamp": 1473936043587,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.ParentFieldTypeTests",
  "startTimestamp": 1473936043564,
  "executionTime": 26
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests",
   "displayName": "org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests",
   "children": [
    {
     "id": "ID#testDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "displayName": "testDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "methodName": "testDefault",
     "className": "org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests",
     "children": []
    },
    {
     "id": "ID#testZero(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "displayName": "testZero(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "methodName": "testZero",
     "className": "org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests",
     "children": []
    },
    {
     "id": "ID#testDefaultDefaultsToAnalyzer(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "displayName": "testDefaultDefaultsToAnalyzer(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "methodName": "testDefaultDefaultsToAnalyzer",
     "className": "org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests",
     "children": []
    },
    {
     "id": "ID#testSmallerThanDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "displayName": "testSmallerThanDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "methodName": "testSmallerThanDefault",
     "className": "org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests",
     "children": []
    },
    {
     "id": "ID#testLargerThanDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "displayName": "testLargerThanDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "methodName": "testLargerThanDefault",
     "className": "org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests",
     "children": []
    },
    {
     "id": "ID#testNegativeIsError(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "displayName": "testNegativeIsError(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
     "methodName": "testNegativeIsError",
     "className": "org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936043816
 }
]

[
 "TEST_STARTED",
 "ID#testDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:43,846][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:43,872][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:43,872][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:43,876][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[15428], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:43,879][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:43,879][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:44,005][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:44,005][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:44,006][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[129]}, bound_addresses {local[129]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:44,006][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{x51wC-jkTxKqtp5DGsAvIA}{vbhe9YlhSFqo6awbmbzdag}{local}{local[129]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:44,007][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:44,020][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:44,038][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [auto(index api)], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:44,074][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:44,086][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/Sf2tBt67SkeWFDPi-jLNbw] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:44,263][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringFieldMapperPositionIncrementGapTests#testDefault]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
  "startTimestamp": 1473936043836,
  "executionTime": 452
 }
]

[
 "TEST_STARTED",
 "ID#testZero(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:44,294][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:44,332][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:44,454][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringFieldMapperPositionIncrementGapTests#testZero]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testZero(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
  "startTimestamp": 1473936044288,
  "executionTime": 194
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultDefaultsToAnalyzer(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:44,489][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:44,536][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:44,700][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringFieldMapperPositionIncrementGapTests#testDefaultDefaultsToAnalyzer]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultDefaultsToAnalyzer(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
  "startTimestamp": 1473936044482,
  "executionTime": 259
 }
]

[
 "TEST_STARTED",
 "ID#testSmallerThanDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:44,750][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:44,793][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:45,026][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringFieldMapperPositionIncrementGapTests#testSmallerThanDefault]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSmallerThanDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
  "startTimestamp": 1473936044741,
  "executionTime": 338
 }
]

[
 "TEST_STARTED",
 "ID#testLargerThanDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:45,089][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:45,167][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:45,345][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringFieldMapperPositionIncrementGapTests#testLargerThanDefault]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLargerThanDefault(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
  "startTimestamp": 1473936045079,
  "executionTime": 306
 }
]

[
 "TEST_STARTED",
 "ID#testNegativeIsError(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:45,393][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringFieldMapperPositionIncrementGapTests#testNegativeIsError]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNegativeIsError(org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests)",
  "startTimestamp": 1473936045385,
  "executionTime": 9
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:45,395][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:45,396][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:45,396][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:45,400][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.StringFieldMapperPositionIncrementGapTests",
  "startTimestamp": 1473936043816,
  "executionTime": 1595
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.UidTests",
   "displayName": "org.elasticsearch.index.mapper.UidTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.UidTests",
   "children": [
    {
     "id": "ID#testCreateAndSplitId(org.elasticsearch.index.mapper.UidTests)",
     "displayName": "testCreateAndSplitId(org.elasticsearch.index.mapper.UidTests)",
     "methodName": "testCreateAndSplitId",
     "className": "org.elasticsearch.index.mapper.UidTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936045601
 }
]

[
 "TEST_STARTED",
 "ID#testCreateAndSplitId(org.elasticsearch.index.mapper.UidTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateAndSplitId(org.elasticsearch.index.mapper.UidTests)",
  "startTimestamp": 1473936045629,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.UidTests",
  "startTimestamp": 1473936045601,
  "executionTime": 32
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.UpdateMappingTests",
   "displayName": "org.elasticsearch.index.mapper.UpdateMappingTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.UpdateMappingTests",
   "children": [
    {
     "id": "ID#testReuseMetaFieldBackCompat(org.elasticsearch.index.mapper.UpdateMappingTests)",
     "displayName": "testReuseMetaFieldBackCompat(org.elasticsearch.index.mapper.UpdateMappingTests)",
     "methodName": "testReuseMetaFieldBackCompat",
     "className": "org.elasticsearch.index.mapper.UpdateMappingTests",
     "children": []
    },
    {
     "id": "ID#testConflictNewTypeUpdate(org.elasticsearch.index.mapper.UpdateMappingTests)",
     "displayName": "testConflictNewTypeUpdate(org.elasticsearch.index.mapper.UpdateMappingTests)",
     "methodName": "testConflictNewTypeUpdate",
     "className": "org.elasticsearch.index.mapper.UpdateMappingTests",
     "children": []
    },
    {
     "id": "ID#testAllDisabledAfterEnabled(org.elasticsearch.index.mapper.UpdateMappingTests)",
     "displayName": "testAllDisabledAfterEnabled(org.elasticsearch.index.mapper.UpdateMappingTests)",
     "methodName": "testAllDisabledAfterEnabled",
     "className": "org.elasticsearch.index.mapper.UpdateMappingTests",
     "children": []
    },
    {
     "id": "ID#testRejectFieldDefinedTwice(org.elasticsearch.index.mapper.UpdateMappingTests)",
     "displayName": "testRejectFieldDefinedTwice(org.elasticsearch.index.mapper.UpdateMappingTests)",
     "methodName": "testRejectFieldDefinedTwice",
     "className": "org.elasticsearch.index.mapper.UpdateMappingTests",
     "children": []
    },
    {
     "id": "ID#testReuseMetaField(org.elasticsearch.index.mapper.UpdateMappingTests)",
     "displayName": "testReuseMetaField(org.elasticsearch.index.mapper.UpdateMappingTests)",
     "methodName": "testReuseMetaField",
     "className": "org.elasticsearch.index.mapper.UpdateMappingTests",
     "children": []
    },
    {
     "id": "ID#testAllEnabledAfterDisabled(org.elasticsearch.index.mapper.UpdateMappingTests)",
     "displayName": "testAllEnabledAfterDisabled(org.elasticsearch.index.mapper.UpdateMappingTests)",
     "methodName": "testAllEnabledAfterDisabled",
     "className": "org.elasticsearch.index.mapper.UpdateMappingTests",
     "children": []
    },
    {
     "id": "ID#testAllDisabledAfterDisabled(org.elasticsearch.index.mapper.UpdateMappingTests)",
     "displayName": "testAllDisabledAfterDisabled(org.elasticsearch.index.mapper.UpdateMappingTests)",
     "methodName": "testAllDisabledAfterDisabled",
     "className": "org.elasticsearch.index.mapper.UpdateMappingTests",
     "children": []
    },
    {
     "id": "ID#testAllEnabledAfterEnabled(org.elasticsearch.index.mapper.UpdateMappingTests)",
     "displayName": "testAllEnabledAfterEnabled(org.elasticsearch.index.mapper.UpdateMappingTests)",
     "methodName": "testAllEnabledAfterEnabled",
     "className": "org.elasticsearch.index.mapper.UpdateMappingTests",
     "children": []
    },
    {
     "id": "ID#testConflictNewType(org.elasticsearch.index.mapper.UpdateMappingTests)",
     "displayName": "testConflictNewType(org.elasticsearch.index.mapper.UpdateMappingTests)",
     "methodName": "testConflictNewType",
     "className": "org.elasticsearch.index.mapper.UpdateMappingTests",
     "children": []
    },
    {
     "id": "ID#testConflictSameType(org.elasticsearch.index.mapper.UpdateMappingTests)",
     "displayName": "testConflictSameType(org.elasticsearch.index.mapper.UpdateMappingTests)",
     "methodName": "testConflictSameType",
     "className": "org.elasticsearch.index.mapper.UpdateMappingTests",
     "children": []
    },
    {
     "id": "ID#testAllDisabledAfterDefaultEnabled(org.elasticsearch.index.mapper.UpdateMappingTests)",
     "displayName": "testAllDisabledAfterDefaultEnabled(org.elasticsearch.index.mapper.UpdateMappingTests)",
     "methodName": "testAllDisabledAfterDefaultEnabled",
     "className": "org.elasticsearch.index.mapper.UpdateMappingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936045856
 }
]

[
 "TEST_STARTED",
 "ID#testReuseMetaFieldBackCompat(org.elasticsearch.index.mapper.UpdateMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:45,884][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:45,903][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:45,903][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:45,907][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[15428], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:45,909][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:45,909][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:46,054][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:46,054][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:46,055][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[130]}, bound_addresses {local[130]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:46,056][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{3PHhMSEGTvOtgJXx2tqkdw}{HqixMV5RQwq2gC63Upx7RA}{local}{local[130]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:46,057][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:46,069][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:46,086][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:46,134][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:46,149][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [UpdateMappingTests#testReuseMetaFieldBackCompat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReuseMetaFieldBackCompat(org.elasticsearch.index.mapper.UpdateMappingTests)",
  "startTimestamp": 1473936045876,
  "executionTime": 303
 }
]

[
 "TEST_STARTED",
 "ID#testConflictNewTypeUpdate(org.elasticsearch.index.mapper.UpdateMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:46,186][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:46,237][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:46,252][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [UpdateMappingTests#testConflictNewTypeUpdate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConflictNewTypeUpdate(org.elasticsearch.index.mapper.UpdateMappingTests)",
  "startTimestamp": 1473936046179,
  "executionTime": 101
 }
]

[
 "TEST_STARTED",
 "ID#testAllDisabledAfterEnabled(org.elasticsearch.index.mapper.UpdateMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:46,288][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:46,336][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:46,350][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [UpdateMappingTests#testAllDisabledAfterEnabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllDisabledAfterEnabled(org.elasticsearch.index.mapper.UpdateMappingTests)",
  "startTimestamp": 1473936046280,
  "executionTime": 102
 }
]

[
 "TEST_STARTED",
 "ID#testRejectFieldDefinedTwice(org.elasticsearch.index.mapper.UpdateMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:46,390][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:46,432][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:46,473][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:46,528][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:46,544][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test2] [UpdateMappingTests#testRejectFieldDefinedTwice]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRejectFieldDefinedTwice(org.elasticsearch.index.mapper.UpdateMappingTests)",
  "startTimestamp": 1473936046382,
  "executionTime": 226
 }
]

[
 "TEST_STARTED",
 "ID#testReuseMetaField(org.elasticsearch.index.mapper.UpdateMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:46,612][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:46,654][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:46,663][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [UpdateMappingTests#testReuseMetaField]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReuseMetaField(org.elasticsearch.index.mapper.UpdateMappingTests)",
  "startTimestamp": 1473936046608,
  "executionTime": 80
 }
]

[
 "TEST_STARTED",
 "ID#testAllEnabledAfterDisabled(org.elasticsearch.index.mapper.UpdateMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:46,697][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:46,745][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:46,757][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [UpdateMappingTests#testAllEnabledAfterDisabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllEnabledAfterDisabled(org.elasticsearch.index.mapper.UpdateMappingTests)",
  "startTimestamp": 1473936046688,
  "executionTime": 96
 }
]

[
 "TEST_STARTED",
 "ID#testAllDisabledAfterDisabled(org.elasticsearch.index.mapper.UpdateMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:46,792][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:46,833][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:46,843][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [UpdateMappingTests#testAllDisabledAfterDisabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllDisabledAfterDisabled(org.elasticsearch.index.mapper.UpdateMappingTests)",
  "startTimestamp": 1473936046784,
  "executionTime": 80
 }
]

[
 "TEST_STARTED",
 "ID#testAllEnabledAfterEnabled(org.elasticsearch.index.mapper.UpdateMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:46,872][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:46,917][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:46,930][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [UpdateMappingTests#testAllEnabledAfterEnabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllEnabledAfterEnabled(org.elasticsearch.index.mapper.UpdateMappingTests)",
  "startTimestamp": 1473936046864,
  "executionTime": 94
 }
]

[
 "TEST_STARTED",
 "ID#testConflictNewType(org.elasticsearch.index.mapper.UpdateMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:46,967][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:47,022][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:47,036][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [UpdateMappingTests#testConflictNewType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConflictNewType(org.elasticsearch.index.mapper.UpdateMappingTests)",
  "startTimestamp": 1473936046959,
  "executionTime": 106
 }
]

[
 "TEST_STARTED",
 "ID#testConflictSameType(org.elasticsearch.index.mapper.UpdateMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:47,074][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:47,119][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:47,132][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [UpdateMappingTests#testConflictSameType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConflictSameType(org.elasticsearch.index.mapper.UpdateMappingTests)",
  "startTimestamp": 1473936047065,
  "executionTime": 108
 }
]

[
 "TEST_STARTED",
 "ID#testAllDisabledAfterDefaultEnabled(org.elasticsearch.index.mapper.UpdateMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:47,180][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:47,224][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:47,238][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [UpdateMappingTests#testAllDisabledAfterDefaultEnabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllDisabledAfterDefaultEnabled(org.elasticsearch.index.mapper.UpdateMappingTests)",
  "startTimestamp": 1473936047174,
  "executionTime": 84
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:47,259][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:47,259][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:47,259][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:47,260][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.UpdateMappingTests",
  "startTimestamp": 1473936045856,
  "executionTime": 1411
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.VersionFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.VersionFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.VersionFieldTypeTests",
   "children": [
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.VersionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.VersionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.VersionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.VersionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.VersionFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936047424
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.VersionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
  "startTimestamp": 1473936047440,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.VersionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
  "startTimestamp": 1473936047442,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.VersionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
  "startTimestamp": 1473936047444,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.VersionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
  "startTimestamp": 1473936047446,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.VersionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
  "startTimestamp": 1473936047447,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.VersionFieldTypeTests",
  "startTimestamp": 1473936047424,
  "executionTime": 27
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.BoolQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.BoolQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRewrite(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testRewrite(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testRewrite",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testFromJsonEmptyQueryBody(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testFromJsonEmptyQueryBody",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDefaultMinShouldMatch(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testDefaultMinShouldMatch(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testDefaultMinShouldMatch",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRewriteMultipleTimes(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testRewriteMultipleTimes(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testRewriteMultipleTimes",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMinShouldMatchFilterWithoutShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testMinShouldMatchFilterWithoutShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testMinShouldMatchFilterWithoutShouldClauses",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEmptyBooleanQuery(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testEmptyBooleanQuery(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testEmptyBooleanQuery",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMinShouldMatchDisableCoord(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testMinShouldMatchDisableCoord(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testMinShouldMatchDisableCoord",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMinShouldMatchBiggerThanNumberOfShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testMinShouldMatchBiggerThanNumberOfShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testMinShouldMatchBiggerThanNumberOfShouldClauses",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testTooManyQueriesInObject(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testTooManyQueriesInObject(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testTooManyQueriesInObject",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownQueryName(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testUnknownQueryName(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testUnknownQueryName",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMinShouldMatchFilterWithShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "displayName": "testMinShouldMatchFilterWithShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)",
     "methodName": "testMinShouldMatchFilterWithShouldClauses",
     "className": "org.elasticsearch.index.query.BoolQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936047679
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:47,712][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{MEzjX3IYQ9GSM2O3B8wTiA}{local}{local[572]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:47,718][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:47,718][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:47,733][WARN ][org.elasticsearch.deprecation.index.mapper]  [sdqU] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:47,733][WARN ][org.elasticsearch.deprecation.index.mapper]  [sdqU] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:47,733][WARN ][org.elasticsearch.deprecation.index.mapper]  [sdqU] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:47,734][WARN ][org.elasticsearch.deprecation.index.mapper]  [sdqU] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:47,734][WARN ][org.elasticsearch.deprecation.index.mapper]  [sdqU] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:47,735][WARN ][org.elasticsearch.deprecation.index.mapper]  [sdqU] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:47,737][WARN ][org.elasticsearch.deprecation.index.mapper]  [sdqU] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:47,737][WARN ][org.elasticsearch.deprecation.index.mapper]  [sdqU] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:47,737][WARN ][org.elasticsearch.deprecation.index.mapper]  [sdqU] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:47,739][WARN ][org.elasticsearch.deprecation.index.mapper]  [sdqU] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:47,739][WARN ][org.elasticsearch.deprecation.index.mapper]  [sdqU] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:47,739][WARN ][org.elasticsearch.deprecation.index.mapper]  [sdqU] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:47,741][WARN ][org.elasticsearch.deprecation.index.mapper]  [sdqU] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:47,741][WARN ][org.elasticsearch.deprecation.index.mapper]  [sdqU] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:47,741][WARN ][org.elasticsearch.deprecation.index.mapper]  [sdqU] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:47,744][WARN ][org.elasticsearch.deprecation.index.mapper]  [sdqU] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:47,744][WARN ][org.elasticsearch.deprecation.index.mapper]  [sdqU] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:47,744][WARN ][org.elasticsearch.deprecation.index.mapper]  [sdqU] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1473936047708,
  "executionTime": 195
 }
]

[
 "TEST_STARTED",
 "ID#testRewrite(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRewrite(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1473936047903,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1473936047909,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1473936047925,
  "executionTime": 54
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1473936047979,
  "executionTime": 183
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:48,165][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:27]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:48,165][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:46]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:48,166][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:100]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T17:40:48,166][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:27]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1473936048162,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1473936048167,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1473936048172,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultMinShouldMatch(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultMinShouldMatch(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1473936048194,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRewriteMultipleTimes(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRewriteMultipleTimes(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1473936048198,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1473936048201,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testMinShouldMatchFilterWithoutShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinShouldMatchFilterWithoutShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1473936048212,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyBooleanQuery(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyBooleanQuery(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1473936048219,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMinShouldMatchDisableCoord(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinShouldMatchDisableCoord(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1473936048222,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1473936048224,
  "executionTime": 54
 }
]

[
 "TEST_STARTED",
 "ID#testMinShouldMatchBiggerThanNumberOfShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinShouldMatchBiggerThanNumberOfShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1473936048278,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testTooManyQueriesInObject(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTooManyQueriesInObject(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1473936048282,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1473936048301,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownQueryName(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownQueryName(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1473936048304,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1473936048307,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testMinShouldMatchFilterWithShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinShouldMatchFilterWithShouldClauses(org.elasticsearch.index.query.BoolQueryBuilderTests)",
  "startTimestamp": 1473936048314,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.BoolQueryBuilderTests",
  "startTimestamp": 1473936047679,
  "executionTime": 642
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.BoostingQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.BoostingQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.BoostingQueryBuilderTests",
   "children": [
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.BoostingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.BoostingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.BoostingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.BoostingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.BoostingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRewrite(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "displayName": "testRewrite(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "methodName": "testRewrite",
     "className": "org.elasticsearch.index.query.BoostingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.BoostingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.BoostingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.BoostingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "displayName": "testFromJsonEmptyQueryBody(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "methodName": "testFromJsonEmptyQueryBody",
     "className": "org.elasticsearch.index.query.BoostingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.BoostingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.BoostingQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936048428
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.BoostingQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:48,452][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{2qBjAJbyRw2FxOiCOHpH-Q}{local}{local[573]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:48,458][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:48,458][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:48,483][WARN ][org.elasticsearch.deprecation.index.mapper]  [qQZoiS] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:48,483][WARN ][org.elasticsearch.deprecation.index.mapper]  [qQZoiS] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:48,483][WARN ][org.elasticsearch.deprecation.index.mapper]  [qQZoiS] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:48,485][WARN ][org.elasticsearch.deprecation.index.mapper]  [qQZoiS] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:48,485][WARN ][org.elasticsearch.deprecation.index.mapper]  [qQZoiS] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:48,485][WARN ][org.elasticsearch.deprecation.index.mapper]  [qQZoiS] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:48,491][WARN ][org.elasticsearch.deprecation.index.mapper]  [qQZoiS] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:48,491][WARN ][org.elasticsearch.deprecation.index.mapper]  [qQZoiS] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:48,491][WARN ][org.elasticsearch.deprecation.index.mapper]  [qQZoiS] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:48,492][WARN ][org.elasticsearch.deprecation.index.mapper]  [qQZoiS] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:48,492][WARN ][org.elasticsearch.deprecation.index.mapper]  [qQZoiS] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:48,493][WARN ][org.elasticsearch.deprecation.index.mapper]  [qQZoiS] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:48,496][WARN ][org.elasticsearch.deprecation.index.mapper]  [qQZoiS] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:48,496][WARN ][org.elasticsearch.deprecation.index.mapper]  [qQZoiS] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:48,496][WARN ][org.elasticsearch.deprecation.index.mapper]  [qQZoiS] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:48,500][WARN ][org.elasticsearch.deprecation.index.mapper]  [qQZoiS] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:48,500][WARN ][org.elasticsearch.deprecation.index.mapper]  [qQZoiS] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:48,500][WARN ][org.elasticsearch.deprecation.index.mapper]  [qQZoiS] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:48,501][WARN ][org.elasticsearch.deprecation.index.mapper]  [qQZoiS] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:48,502][WARN ][org.elasticsearch.deprecation.index.mapper]  [qQZoiS] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:48,502][WARN ][org.elasticsearch.deprecation.index.mapper]  [qQZoiS] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:48,504][WARN ][org.elasticsearch.deprecation.index.mapper]  [qQZoiS] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:48,504][WARN ][org.elasticsearch.deprecation.index.mapper]  [qQZoiS] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:48,504][WARN ][org.elasticsearch.deprecation.index.mapper]  [qQZoiS] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:48,508][WARN ][org.elasticsearch.deprecation.index.mapper]  [qQZoiS] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:48,508][WARN ][org.elasticsearch.deprecation.index.mapper]  [qQZoiS] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:48,509][WARN ][org.elasticsearch.deprecation.index.mapper]  [qQZoiS] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
  "startTimestamp": 1473936048446,
  "executionTime": 75
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.BoostingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
  "startTimestamp": 1473936048521,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.BoostingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
  "startTimestamp": 1473936048525,
  "executionTime": 60
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.BoostingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
  "startTimestamp": 1473936048585,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.BoostingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
  "startTimestamp": 1473936048589,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRewrite(org.elasticsearch.index.query.BoostingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRewrite(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
  "startTimestamp": 1473936048593,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.BoostingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
  "startTimestamp": 1473936048596,
  "executionTime": 37
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.BoostingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
  "startTimestamp": 1473936048633,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.BoostingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
  "startTimestamp": 1473936048636,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.BoostingQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:48,642][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:36]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:48,642][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:75]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T12:40:48,643][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:75]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
  "startTimestamp": 1473936048639,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.BoostingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
  "startTimestamp": 1473936048643,
  "executionTime": 32
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.BoostingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.BoostingQueryBuilderTests)",
  "startTimestamp": 1473936048675,
  "executionTime": 23
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.BoostingQueryBuilderTests",
  "startTimestamp": 1473936048428,
  "executionTime": 274
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.CombineFunctionTests",
   "displayName": "org.elasticsearch.index.query.CombineFunctionTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.CombineFunctionTests",
   "children": [
    {
     "id": "ID#testWriteTo(org.elasticsearch.index.query.CombineFunctionTests)",
     "displayName": "testWriteTo(org.elasticsearch.index.query.CombineFunctionTests)",
     "methodName": "testWriteTo",
     "className": "org.elasticsearch.index.query.CombineFunctionTests",
     "children": []
    },
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.index.query.CombineFunctionTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.index.query.CombineFunctionTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.index.query.CombineFunctionTests",
     "children": []
    },
    {
     "id": "ID#testReadFrom(org.elasticsearch.index.query.CombineFunctionTests)",
     "displayName": "testReadFrom(org.elasticsearch.index.query.CombineFunctionTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.index.query.CombineFunctionTests",
     "children": []
    },
    {
     "id": "ID#testFromString(org.elasticsearch.index.query.CombineFunctionTests)",
     "displayName": "testFromString(org.elasticsearch.index.query.CombineFunctionTests)",
     "methodName": "testFromString",
     "className": "org.elasticsearch.index.query.CombineFunctionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936048753
 }
]

[
 "TEST_STARTED",
 "ID#testWriteTo(org.elasticsearch.index.query.CombineFunctionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteTo(org.elasticsearch.index.query.CombineFunctionTests)",
  "startTimestamp": 1473936048769,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.index.query.CombineFunctionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.index.query.CombineFunctionTests)",
  "startTimestamp": 1473936048772,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.index.query.CombineFunctionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.index.query.CombineFunctionTests)",
  "startTimestamp": 1473936048774,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromString(org.elasticsearch.index.query.CombineFunctionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromString(org.elasticsearch.index.query.CombineFunctionTests)",
  "startTimestamp": 1473936048776,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.CombineFunctionTests",
  "startTimestamp": 1473936048753,
  "executionTime": 27
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.FuzzyQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
   "children": [
    {
     "id": "ID#testToQueryWithStringField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testToQueryWithStringField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testToQueryWithStringField",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryWithNumericField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testToQueryWithNumericField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testToQueryWithNumericField",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnsupportedFuzzinessForStringType(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testUnsupportedFuzzinessForStringType(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testUnsupportedFuzzinessForStringType",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testParseFailsWithMultipleFields(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testParseFailsWithMultipleFields",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936049027
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryWithStringField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T23:40:49,056][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{3rIOvW0RQqGJpyUYsYiQSw}{local}{local[574]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T23:40:49,064][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T23:40:49,064][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T23:40:49,077][WARN ][org.elasticsearch.deprecation.index.mapper]  [Lm] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T23:40:49,077][WARN ][org.elasticsearch.deprecation.index.mapper]  [Lm] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T23:40:49,077][WARN ][org.elasticsearch.deprecation.index.mapper]  [Lm] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T23:40:49,078][WARN ][org.elasticsearch.deprecation.index.mapper]  [Lm] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T23:40:49,079][WARN ][org.elasticsearch.deprecation.index.mapper]  [Lm] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T23:40:49,079][WARN ][org.elasticsearch.deprecation.index.mapper]  [Lm] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T23:40:49,081][WARN ][org.elasticsearch.deprecation.index.mapper]  [Lm] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T23:40:49,081][WARN ][org.elasticsearch.deprecation.index.mapper]  [Lm] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T23:40:49,081][WARN ][org.elasticsearch.deprecation.index.mapper]  [Lm] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T23:40:49,083][WARN ][org.elasticsearch.deprecation.index.mapper]  [Lm] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T23:40:49,084][WARN ][org.elasticsearch.deprecation.index.mapper]  [Lm] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T23:40:49,084][WARN ][org.elasticsearch.deprecation.index.mapper]  [Lm] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T23:40:49,086][WARN ][org.elasticsearch.deprecation.index.mapper]  [Lm] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T23:40:49,086][WARN ][org.elasticsearch.deprecation.index.mapper]  [Lm] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T23:40:49,086][WARN ][org.elasticsearch.deprecation.index.mapper]  [Lm] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T23:40:49,089][WARN ][org.elasticsearch.deprecation.index.mapper]  [Lm] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T23:40:49,089][WARN ][org.elasticsearch.deprecation.index.mapper]  [Lm] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T23:40:49,089][WARN ][org.elasticsearch.deprecation.index.mapper]  [Lm] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T23:40:49,091][WARN ][org.elasticsearch.deprecation.index.mapper]  [Lm] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T23:40:49,092][WARN ][org.elasticsearch.deprecation.index.mapper]  [Lm] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T23:40:49,092][WARN ][org.elasticsearch.deprecation.index.mapper]  [Lm] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T23:40:49,094][WARN ][org.elasticsearch.deprecation.index.mapper]  [Lm] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T23:40:49,094][WARN ][org.elasticsearch.deprecation.index.mapper]  [Lm] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T23:40:49,094][WARN ][org.elasticsearch.deprecation.index.mapper]  [Lm] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T23:40:49,099][WARN ][org.elasticsearch.deprecation.index.mapper]  [Lm] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T23:40:49,099][WARN ][org.elasticsearch.deprecation.index.mapper]  [Lm] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T23:40:49,099][WARN ][org.elasticsearch.deprecation.index.mapper]  [Lm] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryWithStringField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1473936049051,
  "executionTime": 50
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1473936049101,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryWithNumericField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryWithNumericField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1473936049103,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1473936049107,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1473936049110,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1473936049122,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1473936049124,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnsupportedFuzzinessForStringType(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnsupportedFuzzinessForStringType(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1473936049127,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1473936049130,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1473936049132,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1473936049135,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1473936049138,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1473936049141,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1473936049144,
  "executionTime": 16
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.FuzzyQueryBuilderTests",
  "startTimestamp": 1473936049027,
  "executionTime": 138
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
   "children": [
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery3(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery3(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery3",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery2(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery2(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery2",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery1(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery1(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery1",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalValues(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testIllegalValues(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testIllegalValues",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery7(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery7(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery7",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testIgnoreUnmapped(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testIgnoreUnmapped",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery12(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery12(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery12",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonIgnoreMalformedFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testFromJsonIgnoreMalformedFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testFromJsonIgnoreMalformedFails",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromCoerceFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testFromCoerceFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testFromCoerceFails",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery10(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery10(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery10",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery8(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery8(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery8",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testOptimizeBboxFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testOptimizeBboxFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testOptimizeBboxFails",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery9(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery9(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery9",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParseFailsWithMultipleFields(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParseFailsWithMultipleFields",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery4(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery4(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery4",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery6(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery6(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery6",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery5(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery5(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery5",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery11(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery11(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery11",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936049273
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:49,306][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{1tLHoA_uSOCT6w36RXqzcw}{local}{local[575]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:49,319][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:49,319][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:49,346][WARN ][org.elasticsearch.deprecation.index.mapper]  [Rqgv] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:49,346][WARN ][org.elasticsearch.deprecation.index.mapper]  [Rqgv] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:49,347][WARN ][org.elasticsearch.deprecation.index.mapper]  [Rqgv] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:49,359][WARN ][org.elasticsearch.deprecation.index.mapper]  [Rqgv] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:49,359][WARN ][org.elasticsearch.deprecation.index.mapper]  [Rqgv] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:49,364][WARN ][org.elasticsearch.deprecation.index.mapper]  [Rqgv] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:49,371][WARN ][org.elasticsearch.deprecation.index.mapper]  [Rqgv] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:49,371][WARN ][org.elasticsearch.deprecation.index.mapper]  [Rqgv] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:49,371][WARN ][org.elasticsearch.deprecation.index.mapper]  [Rqgv] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:49,372][WARN ][org.elasticsearch.deprecation.index.mapper]  [Rqgv] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:49,372][WARN ][org.elasticsearch.deprecation.index.mapper]  [Rqgv] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:49,372][WARN ][org.elasticsearch.deprecation.index.mapper]  [Rqgv] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:49,374][WARN ][org.elasticsearch.deprecation.index.mapper]  [Rqgv] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:49,374][WARN ][org.elasticsearch.deprecation.index.mapper]  [Rqgv] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:49,375][WARN ][org.elasticsearch.deprecation.index.mapper]  [Rqgv] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:49,379][WARN ][org.elasticsearch.deprecation.index.mapper]  [Rqgv] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:49,379][WARN ][org.elasticsearch.deprecation.index.mapper]  [Rqgv] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:49,379][WARN ][org.elasticsearch.deprecation.index.mapper]  [Rqgv] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:49,381][WARN ][org.elasticsearch.deprecation.index.mapper]  [Rqgv] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:49,382][WARN ][org.elasticsearch.deprecation.index.mapper]  [Rqgv] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:49,382][WARN ][org.elasticsearch.deprecation.index.mapper]  [Rqgv] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:49,384][WARN ][org.elasticsearch.deprecation.index.mapper]  [Rqgv] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:49,384][WARN ][org.elasticsearch.deprecation.index.mapper]  [Rqgv] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:49,384][WARN ][org.elasticsearch.deprecation.index.mapper]  [Rqgv] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:49,391][WARN ][org.elasticsearch.deprecation.index.mapper]  [Rqgv] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:49,391][WARN ][org.elasticsearch.deprecation.index.mapper]  [Rqgv] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:49,391][WARN ][org.elasticsearch.deprecation.index.mapper]  [Rqgv] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1473936049294,
  "executionTime": 98
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1473936049392,
  "executionTime": 83
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery3(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery3(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1473936049475,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery2(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery2(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1473936049478,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery1(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery1(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1473936049480,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1473936049484,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1473936049508,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1473936049511,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalValues(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalValues(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1473936049531,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1473936049536,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery7(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery7(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1473936049539,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1473936049541,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery12(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery12(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1473936049543,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonIgnoreMalformedFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonIgnoreMalformedFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1473936049545,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromCoerceFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromCoerceFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1473936049548,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery10(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery10(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1473936049553,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1473936049557,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1473936049560,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery8(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery8(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1473936049570,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1473936049574,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testOptimizeBboxFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOptimizeBboxFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1473936049592,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery9(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery9(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1473936049595,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1473936049598,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery4(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery4(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1473936049600,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery6(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery6(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1473936049603,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery5(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery5(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1473936049609,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery11(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery11(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1473936049619,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
  "startTimestamp": 1473936049273,
  "executionTime": 365
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.IndicesQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.IndicesQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.IndicesQueryBuilderTests",
   "children": [
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.IndicesQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.IndicesQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.IndicesQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.IndicesQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.IndicesQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.IndicesQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.IndicesQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.IndicesQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.IndicesQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.IndicesQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936049864
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.IndicesQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,930][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{JT_3KCemR-qfuVV7UfthSg}{local}{local[576]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,934][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,935][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,945][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
  "startTimestamp": 1473936049925,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.IndicesQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,947][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,948][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,948][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,948][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,948][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,948][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,949][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,949][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,949][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,949][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,950][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,950][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,950][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,950][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,951][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,951][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,951][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,951][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,951][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,952][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
  "startTimestamp": 1473936049946,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.IndicesQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,954][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
  "startTimestamp": 1473936049952,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.IndicesQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,956][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,956][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,956][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,956][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
  "startTimestamp": 1473936049954,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.IndicesQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,958][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
  "startTimestamp": 1473936049957,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.IndicesQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,960][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,961][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,961][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,962][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,962][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,963][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,964][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,964][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,964][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,965][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,965][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,965][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,966][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,966][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,966][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,967][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,967][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,968][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,969][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,969][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,969][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,970][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,971][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,971][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,971][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,971][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,972][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,972][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,972][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,972][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,972][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,973][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,973][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,973][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,973][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,974][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,974][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,975][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,975][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,975][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
  "startTimestamp": 1473936049959,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.IndicesQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,977][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
  "startTimestamp": 1473936049975,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.IndicesQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,979][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,983][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,984][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,985][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,986][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,987][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,988][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,989][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,989][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,990][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,991][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,991][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,993][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,994][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,995][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,996][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,997][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,998][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:49,999][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:50,000][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
  "startTimestamp": 1473936049978,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.IndicesQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:50,004][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:50,005][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:50,006][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:50,007][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:50,007][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:50,008][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:50,010][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:50,012][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:50,014][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:50,014][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:50,015][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:50,016][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:50,016][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:50,017][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:50,017][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:50,018][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:50,019][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:50,020][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:50,020][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:50,021][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
  "startTimestamp": 1473936050002,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.IndicesQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T04:40:50,023][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.IndicesQueryBuilderTests)",
  "startTimestamp": 1473936050021,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.IndicesQueryBuilderTests",
  "startTimestamp": 1473936049864,
  "executionTime": 166
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.QueryParseContextTests",
   "displayName": "org.elasticsearch.index.query.QueryParseContextTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.QueryParseContextTests",
   "children": [
    {
     "id": "ID#testParseInnerQueryBuilder(org.elasticsearch.index.query.QueryParseContextTests)",
     "displayName": "testParseInnerQueryBuilder(org.elasticsearch.index.query.QueryParseContextTests)",
     "methodName": "testParseInnerQueryBuilder",
     "className": "org.elasticsearch.index.query.QueryParseContextTests",
     "children": []
    },
    {
     "id": "ID#testParseTopLevelBuilderUnknownParameter(org.elasticsearch.index.query.QueryParseContextTests)",
     "displayName": "testParseTopLevelBuilderUnknownParameter(org.elasticsearch.index.query.QueryParseContextTests)",
     "methodName": "testParseTopLevelBuilderUnknownParameter",
     "className": "org.elasticsearch.index.query.QueryParseContextTests",
     "children": []
    },
    {
     "id": "ID#testParseInnerQueryBuilderEmptyBody(org.elasticsearch.index.query.QueryParseContextTests)",
     "displayName": "testParseInnerQueryBuilderEmptyBody(org.elasticsearch.index.query.QueryParseContextTests)",
     "methodName": "testParseInnerQueryBuilderEmptyBody",
     "className": "org.elasticsearch.index.query.QueryParseContextTests",
     "children": []
    },
    {
     "id": "ID#testParseTopLevelBuilderEmptyObject(org.elasticsearch.index.query.QueryParseContextTests)",
     "displayName": "testParseTopLevelBuilderEmptyObject(org.elasticsearch.index.query.QueryParseContextTests)",
     "methodName": "testParseTopLevelBuilderEmptyObject",
     "className": "org.elasticsearch.index.query.QueryParseContextTests",
     "children": []
    },
    {
     "id": "ID#testParseInnerQueryBuilderExceptions(org.elasticsearch.index.query.QueryParseContextTests)",
     "displayName": "testParseInnerQueryBuilderExceptions(org.elasticsearch.index.query.QueryParseContextTests)",
     "methodName": "testParseInnerQueryBuilderExceptions",
     "className": "org.elasticsearch.index.query.QueryParseContextTests",
     "children": []
    },
    {
     "id": "ID#testParseTopLevelBuilder(org.elasticsearch.index.query.QueryParseContextTests)",
     "displayName": "testParseTopLevelBuilder(org.elasticsearch.index.query.QueryParseContextTests)",
     "methodName": "testParseTopLevelBuilder",
     "className": "org.elasticsearch.index.query.QueryParseContextTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936050106
 }
]

[
 "TEST_STARTED",
 "ID#testParseInnerQueryBuilder(org.elasticsearch.index.query.QueryParseContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseInnerQueryBuilder(org.elasticsearch.index.query.QueryParseContextTests)",
  "startTimestamp": 1473936050379,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseTopLevelBuilderUnknownParameter(org.elasticsearch.index.query.QueryParseContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseTopLevelBuilderUnknownParameter(org.elasticsearch.index.query.QueryParseContextTests)",
  "startTimestamp": 1473936050382,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParseInnerQueryBuilderEmptyBody(org.elasticsearch.index.query.QueryParseContextTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:50,388][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:2]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseInnerQueryBuilderEmptyBody(org.elasticsearch.index.query.QueryParseContextTests)",
  "startTimestamp": 1473936050386,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseTopLevelBuilderEmptyObject(org.elasticsearch.index.query.QueryParseContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseTopLevelBuilderEmptyObject(org.elasticsearch.index.query.QueryParseContextTests)",
  "startTimestamp": 1473936050388,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseInnerQueryBuilderExceptions(org.elasticsearch.index.query.QueryParseContextTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:50,393][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:2]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseInnerQueryBuilderExceptions(org.elasticsearch.index.query.QueryParseContextTests)",
  "startTimestamp": 1473936050390,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParseTopLevelBuilder(org.elasticsearch.index.query.QueryParseContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseTopLevelBuilder(org.elasticsearch.index.query.QueryParseContextTests)",
  "startTimestamp": 1473936050394,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.QueryParseContextTests",
  "startTimestamp": 1473936050106,
  "executionTime": 292
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.QueryShardContextTests",
   "displayName": "org.elasticsearch.index.query.QueryShardContextTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.QueryShardContextTests",
   "children": [
    {
     "id": "ID#testFailIfFieldMappingNotFound(org.elasticsearch.index.query.QueryShardContextTests)",
     "displayName": "testFailIfFieldMappingNotFound(org.elasticsearch.index.query.QueryShardContextTests)",
     "methodName": "testFailIfFieldMappingNotFound",
     "className": "org.elasticsearch.index.query.QueryShardContextTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936050765
 }
]

[
 "TEST_STARTED",
 "ID#testFailIfFieldMappingNotFound(org.elasticsearch.index.query.QueryShardContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailIfFieldMappingNotFound(org.elasticsearch.index.query.QueryShardContextTests)",
  "startTimestamp": 1473936050850,
  "executionTime": 28
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.QueryShardContextTests",
  "startTimestamp": 1473936050765,
  "executionTime": 115
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.QueryStringQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
   "children": [
    {
     "id": "ID#testToQueryRegExpQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryRegExpQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryRegExpQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryTermQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryTermQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryTermQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryBoosts",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryRegExpQueryTooComplex(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryRegExpQueryTooComplex(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryRegExpQueryTooComplex",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryDisMaxQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryWildcarQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryWildcarQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryWildcarQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testPrefixNumeric(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testPrefixNumeric(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testPrefixNumeric",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryFieldsWildcard(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryFieldsWildcard(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryFieldsWildcard",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testExactGeo(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testExactGeo(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testExactGeo",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryMultipleFieldsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryMultipleFieldsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryMultipleFieldsBooleanQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testTimezone(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testTimezone(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testTimezone",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryMatchAllQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryMatchAllQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryMatchAllQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryWilcardQueryWithSynonyms(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryWilcardQueryWithSynonyms(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryWilcardQueryWithSynonyms",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryMultipleFieldsDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryMultipleFieldsDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryMultipleFieldsDisMaxQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryPhraseQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryPhraseQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryPhraseQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryMultipleTermsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryMultipleTermsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryMultipleTermsBooleanQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFuzzyNumeric(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testFuzzyNumeric(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testFuzzyNumeric",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryPhraseQueryBoostAndSlop(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryPhraseQueryBoostAndSlop(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryPhraseQueryBoostAndSlop",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryBooleanQueryMultipleBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryBooleanQueryMultipleBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryBooleanQueryMultipleBoosts",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936051098
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryRegExpQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:40:51,120][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Vl8D4b1NTAGsV_FDyGosoQ}{local}{local[577]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:40:51,125][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:40:51,125][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:40:51,135][WARN ][org.elasticsearch.deprecation.index.mapper]  [hPl] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:40:51,135][WARN ][org.elasticsearch.deprecation.index.mapper]  [hPl] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:40:51,135][WARN ][org.elasticsearch.deprecation.index.mapper]  [hPl] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:40:51,136][WARN ][org.elasticsearch.deprecation.index.mapper]  [hPl] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:40:51,136][WARN ][org.elasticsearch.deprecation.index.mapper]  [hPl] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:40:51,136][WARN ][org.elasticsearch.deprecation.index.mapper]  [hPl] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:40:51,139][WARN ][org.elasticsearch.deprecation.index.mapper]  [hPl] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:40:51,139][WARN ][org.elasticsearch.deprecation.index.mapper]  [hPl] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:40:51,139][WARN ][org.elasticsearch.deprecation.index.mapper]  [hPl] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:40:51,141][WARN ][org.elasticsearch.deprecation.index.mapper]  [hPl] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:40:51,141][WARN ][org.elasticsearch.deprecation.index.mapper]  [hPl] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:40:51,141][WARN ][org.elasticsearch.deprecation.index.mapper]  [hPl] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:40:51,145][WARN ][org.elasticsearch.deprecation.index.mapper]  [hPl] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:40:51,145][WARN ][org.elasticsearch.deprecation.index.mapper]  [hPl] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:40:51,145][WARN ][org.elasticsearch.deprecation.index.mapper]  [hPl] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:40:51,149][WARN ][org.elasticsearch.deprecation.index.mapper]  [hPl] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:40:51,149][WARN ][org.elasticsearch.deprecation.index.mapper]  [hPl] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:40:51,150][WARN ][org.elasticsearch.deprecation.index.mapper]  [hPl] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:40:51,152][WARN ][org.elasticsearch.deprecation.index.mapper]  [hPl] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:40:51,152][WARN ][org.elasticsearch.deprecation.index.mapper]  [hPl] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:40:51,152][WARN ][org.elasticsearch.deprecation.index.mapper]  [hPl] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:40:51,154][WARN ][org.elasticsearch.deprecation.index.mapper]  [hPl] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:40:51,154][WARN ][org.elasticsearch.deprecation.index.mapper]  [hPl] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:40:51,154][WARN ][org.elasticsearch.deprecation.index.mapper]  [hPl] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:40:51,158][WARN ][org.elasticsearch.deprecation.index.mapper]  [hPl] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:40:51,158][WARN ][org.elasticsearch.deprecation.index.mapper]  [hPl] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T15:40:51,158][WARN ][org.elasticsearch.deprecation.index.mapper]  [hPl] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryRegExpQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1473936051116,
  "executionTime": 59
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryTermQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryTermQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1473936051175,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1473936051178,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1473936051182,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1473936051186,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryRegExpQueryTooComplex(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryRegExpQueryTooComplex(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1473936051189,
  "executionTime": 36
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1473936051226,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1473936051229,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryWildcarQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryWildcarQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1473936051232,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testPrefixNumeric(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrefixNumeric(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1473936051236,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryFieldsWildcard(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryFieldsWildcard(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1473936051241,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testExactGeo(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExactGeo(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1473936051244,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1473936051248,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryMultipleFieldsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryMultipleFieldsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1473936051255,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTimezone(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimezone(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1473936051257,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryMatchAllQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryMatchAllQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1473936051259,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryWilcardQueryWithSynonyms(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryWilcardQueryWithSynonyms(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1473936051261,
  "executionTime": 67
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1473936051328,
  "executionTime": 52
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1473936051380,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryMultipleFieldsDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryMultipleFieldsDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1473936051383,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1473936051385,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1473936051390,
  "executionTime": 45
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryPhraseQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryPhraseQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1473936051436,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryMultipleTermsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryMultipleTermsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1473936051439,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1473936051442,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFuzzyNumeric(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFuzzyNumeric(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1473936051445,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1473936051449,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryPhraseQueryBoostAndSlop(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryPhraseQueryBoostAndSlop(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1473936051455,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryBooleanQueryMultipleBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryBooleanQueryMultipleBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1473936051458,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.QueryStringQueryBuilderTests",
  "startTimestamp": 1473936051098,
  "executionTime": 368
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.SimpleQueryParserTests",
   "displayName": "org.elasticsearch.index.query.SimpleQueryParserTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.SimpleQueryParserTests",
   "children": [
    {
     "id": "ID#testAnalyzerWildcardWithSynonyms(org.elasticsearch.index.query.SimpleQueryParserTests)",
     "displayName": "testAnalyzerWildcardWithSynonyms(org.elasticsearch.index.query.SimpleQueryParserTests)",
     "methodName": "testAnalyzerWildcardWithSynonyms",
     "className": "org.elasticsearch.index.query.SimpleQueryParserTests",
     "children": []
    },
    {
     "id": "ID#testAnalyzeWildcard(org.elasticsearch.index.query.SimpleQueryParserTests)",
     "displayName": "testAnalyzeWildcard(org.elasticsearch.index.query.SimpleQueryParserTests)",
     "methodName": "testAnalyzeWildcard",
     "className": "org.elasticsearch.index.query.SimpleQueryParserTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936051593
 }
]

[
 "TEST_STARTED",
 "ID#testAnalyzerWildcardWithSynonyms(org.elasticsearch.index.query.SimpleQueryParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAnalyzerWildcardWithSynonyms(org.elasticsearch.index.query.SimpleQueryParserTests)",
  "startTimestamp": 1473936051621,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testAnalyzeWildcard(org.elasticsearch.index.query.SimpleQueryParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAnalyzeWildcard(org.elasticsearch.index.query.SimpleQueryParserTests)",
  "startTimestamp": 1473936051624,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.SimpleQueryParserTests",
  "startTimestamp": 1473936051593,
  "executionTime": 35
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.SpanTermQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
   "children": [
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "displayName": "testParseFailsWithMultipleFields(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "methodName": "testParseFailsWithMultipleFields",
     "className": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936051819
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.SpanTermQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:51,877][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{lFmZPirXSoWiiCSDFyJUaw}{local}{local[578]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:51,887][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:51,887][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
  "startTimestamp": 1473936051871,
  "executionTime": 30
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.SpanTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
  "startTimestamp": 1473936051901,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.SpanTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
  "startTimestamp": 1473936051913,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.SpanTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
  "startTimestamp": 1473936051916,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.SpanTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
  "startTimestamp": 1473936051919,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.SpanTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
  "startTimestamp": 1473936051930,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
  "startTimestamp": 1473936051932,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.SpanTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
  "startTimestamp": 1473936051936,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
  "startTimestamp": 1473936051939,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.SpanTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
  "startTimestamp": 1473936051942,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
  "startTimestamp": 1473936051945,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.SpanTermQueryBuilderTests",
  "startTimestamp": 1473936051819,
  "executionTime": 135
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.TermQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.TermQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.TermQueryBuilderTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.TermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testTermArray(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "displayName": "testTermArray(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "methodName": "testTermArray",
     "className": "org.elasticsearch.index.query.TermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.TermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.TermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.TermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testGeo(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "displayName": "testGeo(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "methodName": "testGeo",
     "className": "org.elasticsearch.index.query.TermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.TermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.TermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.TermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.TermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.TermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.TermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "displayName": "testParseFailsWithMultipleFields(org.elasticsearch.index.query.TermQueryBuilderTests)",
     "methodName": "testParseFailsWithMultipleFields",
     "className": "org.elasticsearch.index.query.TermQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936052073
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.TermQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:52,133][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{jW-9Q8BsTR6wn7sPkntRJw}{local}{local[579]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:52,140][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:52,140][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.TermQueryBuilderTests)",
  "startTimestamp": 1473936052105,
  "executionTime": 68
 }
]

[
 "TEST_STARTED",
 "ID#testTermArray(org.elasticsearch.index.query.TermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermArray(org.elasticsearch.index.query.TermQueryBuilderTests)",
  "startTimestamp": 1473936052174,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.TermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.TermQueryBuilderTests)",
  "startTimestamp": 1473936052177,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.TermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.TermQueryBuilderTests)",
  "startTimestamp": 1473936052180,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.TermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.TermQueryBuilderTests)",
  "startTimestamp": 1473936052182,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGeo(org.elasticsearch.index.query.TermQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testGeo(org.elasticsearch.index.query.TermQueryBuilderTests)",
  "message": "test runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered\r\n\tat __randomizedtesting.SeedInfo.seed([9CF13790D965C5A7:620DA5F0FC77B50D]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.TermQueryBuilderTests.testGeo(TermQueryBuilderTests.java:137)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:497)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeo(org.elasticsearch.index.query.TermQueryBuilderTests)",
  "startTimestamp": 1473936052185,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.TermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.TermQueryBuilderTests)",
  "startTimestamp": 1473936052187,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.TermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.TermQueryBuilderTests)",
  "startTimestamp": 1473936052201,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.TermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.TermQueryBuilderTests)",
  "startTimestamp": 1473936052205,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.TermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.TermQueryBuilderTests)",
  "startTimestamp": 1473936052208,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.TermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.TermQueryBuilderTests)",
  "startTimestamp": 1473936052209,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.TermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.TermQueryBuilderTests)",
  "startTimestamp": 1473936052223,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.TermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.TermQueryBuilderTests)",
  "startTimestamp": 1473936052233,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.TermQueryBuilderTests",
  "startTimestamp": 1473936052073,
  "executionTime": 168
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.TypeQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.TypeQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.TypeQueryBuilderTests",
   "children": [
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.TypeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.TypeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.TypeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArgument(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "displayName": "testIllegalArgument(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "methodName": "testIllegalArgument",
     "className": "org.elasticsearch.index.query.TypeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.TypeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.TypeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.TypeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.TypeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.TypeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.TypeQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936052390
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.TypeQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:52,407][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{_X-qk-i9SO-9lwVqJ9_Ldw}{local}{local[580]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:52,416][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:52,416][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:52,430][WARN ][org.elasticsearch.deprecation.index.mapper]  [gMrMWesOPY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:52,431][WARN ][org.elasticsearch.deprecation.index.mapper]  [gMrMWesOPY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:52,431][WARN ][org.elasticsearch.deprecation.index.mapper]  [gMrMWesOPY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:52,433][WARN ][org.elasticsearch.deprecation.index.mapper]  [gMrMWesOPY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:52,433][WARN ][org.elasticsearch.deprecation.index.mapper]  [gMrMWesOPY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:52,433][WARN ][org.elasticsearch.deprecation.index.mapper]  [gMrMWesOPY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:52,436][WARN ][org.elasticsearch.deprecation.index.mapper]  [gMrMWesOPY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:52,436][WARN ][org.elasticsearch.deprecation.index.mapper]  [gMrMWesOPY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:52,436][WARN ][org.elasticsearch.deprecation.index.mapper]  [gMrMWesOPY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:52,437][WARN ][org.elasticsearch.deprecation.index.mapper]  [gMrMWesOPY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:52,437][WARN ][org.elasticsearch.deprecation.index.mapper]  [gMrMWesOPY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:52,437][WARN ][org.elasticsearch.deprecation.index.mapper]  [gMrMWesOPY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:52,439][WARN ][org.elasticsearch.deprecation.index.mapper]  [gMrMWesOPY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:52,439][WARN ][org.elasticsearch.deprecation.index.mapper]  [gMrMWesOPY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:52,439][WARN ][org.elasticsearch.deprecation.index.mapper]  [gMrMWesOPY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:52,443][WARN ][org.elasticsearch.deprecation.index.mapper]  [gMrMWesOPY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:52,443][WARN ][org.elasticsearch.deprecation.index.mapper]  [gMrMWesOPY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:52,443][WARN ][org.elasticsearch.deprecation.index.mapper]  [gMrMWesOPY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:52,444][WARN ][org.elasticsearch.deprecation.index.mapper]  [gMrMWesOPY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:52,444][WARN ][org.elasticsearch.deprecation.index.mapper]  [gMrMWesOPY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:52,445][WARN ][org.elasticsearch.deprecation.index.mapper]  [gMrMWesOPY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:52,448][WARN ][org.elasticsearch.deprecation.index.mapper]  [gMrMWesOPY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:52,449][WARN ][org.elasticsearch.deprecation.index.mapper]  [gMrMWesOPY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:52,449][WARN ][org.elasticsearch.deprecation.index.mapper]  [gMrMWesOPY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:52,465][WARN ][org.elasticsearch.deprecation.index.mapper]  [gMrMWesOPY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:52,465][WARN ][org.elasticsearch.deprecation.index.mapper]  [gMrMWesOPY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:52,465][WARN ][org.elasticsearch.deprecation.index.mapper]  [gMrMWesOPY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:52,469][WARN ][org.elasticsearch.deprecation.index.mapper]  [gMrMWesOPY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:52,470][WARN ][org.elasticsearch.deprecation.index.mapper]  [gMrMWesOPY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:52,470][WARN ][org.elasticsearch.deprecation.index.mapper]  [gMrMWesOPY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:52,472][WARN ][org.elasticsearch.deprecation.index.mapper]  [gMrMWesOPY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:52,472][WARN ][org.elasticsearch.deprecation.index.mapper]  [gMrMWesOPY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:52,473][WARN ][org.elasticsearch.deprecation.index.mapper]  [gMrMWesOPY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:52,511][WARN ][org.elasticsearch.deprecation.index.mapper]  [gMrMWesOPY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:52,511][WARN ][org.elasticsearch.deprecation.index.mapper]  [gMrMWesOPY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T07:40:52,511][WARN ][org.elasticsearch.deprecation.index.mapper]  [gMrMWesOPY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.TypeQueryBuilderTests)",
  "startTimestamp": 1473936052403,
  "executionTime": 110
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.TypeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.TypeQueryBuilderTests)",
  "startTimestamp": 1473936052513,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.TypeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.TypeQueryBuilderTests)",
  "startTimestamp": 1473936052516,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArgument(org.elasticsearch.index.query.TypeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArgument(org.elasticsearch.index.query.TypeQueryBuilderTests)",
  "startTimestamp": 1473936052518,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.TypeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.TypeQueryBuilderTests)",
  "startTimestamp": 1473936052521,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.TypeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.TypeQueryBuilderTests)",
  "startTimestamp": 1473936052524,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.TypeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.TypeQueryBuilderTests)",
  "startTimestamp": 1473936052533,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.TypeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.TypeQueryBuilderTests)",
  "startTimestamp": 1473936052535,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.TypeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.TypeQueryBuilderTests)",
  "startTimestamp": 1473936052550,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.TypeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.TypeQueryBuilderTests)",
  "startTimestamp": 1473936052555,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.TypeQueryBuilderTests",
  "startTimestamp": 1473936052390,
  "executionTime": 176
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.monitor.jvm.JvmMonitorTests",
   "displayName": "org.elasticsearch.monitor.jvm.JvmMonitorTests",
   "methodName": null,
   "className": "org.elasticsearch.monitor.jvm.JvmMonitorTests",
   "children": [
    {
     "id": "ID#testSlowGc(org.elasticsearch.monitor.jvm.JvmMonitorTests)",
     "displayName": "testSlowGc(org.elasticsearch.monitor.jvm.JvmMonitorTests)",
     "methodName": "testSlowGc",
     "className": "org.elasticsearch.monitor.jvm.JvmMonitorTests",
     "children": []
    },
    {
     "id": "ID#testMonitorGc(org.elasticsearch.monitor.jvm.JvmMonitorTests)",
     "displayName": "testMonitorGc(org.elasticsearch.monitor.jvm.JvmMonitorTests)",
     "methodName": "testMonitorGc",
     "className": "org.elasticsearch.monitor.jvm.JvmMonitorTests",
     "children": []
    },
    {
     "id": "ID#testMonitorFailure(org.elasticsearch.monitor.jvm.JvmMonitorTests)",
     "displayName": "testMonitorFailure(org.elasticsearch.monitor.jvm.JvmMonitorTests)",
     "methodName": "testMonitorFailure",
     "className": "org.elasticsearch.monitor.jvm.JvmMonitorTests",
     "children": []
    },
    {
     "id": "ID#testCheckGcOverhead(org.elasticsearch.monitor.jvm.JvmMonitorTests)",
     "displayName": "testCheckGcOverhead(org.elasticsearch.monitor.jvm.JvmMonitorTests)",
     "methodName": "testCheckGcOverhead",
     "className": "org.elasticsearch.monitor.jvm.JvmMonitorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936052650
 }
]

[
 "TEST_STARTED",
 "ID#testSlowGc(org.elasticsearch.monitor.jvm.JvmMonitorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSlowGc(org.elasticsearch.monitor.jvm.JvmMonitorTests)",
  "startTimestamp": 1473936052660,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testMonitorGc(org.elasticsearch.monitor.jvm.JvmMonitorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMonitorGc(org.elasticsearch.monitor.jvm.JvmMonitorTests)",
  "startTimestamp": 1473936052687,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testMonitorFailure(org.elasticsearch.monitor.jvm.JvmMonitorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMonitorFailure(org.elasticsearch.monitor.jvm.JvmMonitorTests)",
  "startTimestamp": 1473936052693,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckGcOverhead(org.elasticsearch.monitor.jvm.JvmMonitorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckGcOverhead(org.elasticsearch.monitor.jvm.JvmMonitorTests)",
  "startTimestamp": 1473936052695,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.monitor.jvm.JvmMonitorTests",
  "startTimestamp": 1473936052650,
  "executionTime": 50
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.nodesinfo.NodeInfoStreamingTests",
   "displayName": "org.elasticsearch.nodesinfo.NodeInfoStreamingTests",
   "methodName": null,
   "className": "org.elasticsearch.nodesinfo.NodeInfoStreamingTests",
   "children": [
    {
     "id": "ID#testNodeInfoStreaming(org.elasticsearch.nodesinfo.NodeInfoStreamingTests)",
     "displayName": "testNodeInfoStreaming(org.elasticsearch.nodesinfo.NodeInfoStreamingTests)",
     "methodName": "testNodeInfoStreaming",
     "className": "org.elasticsearch.nodesinfo.NodeInfoStreamingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936052897
 }
]

[
 "TEST_STARTED",
 "ID#testNodeInfoStreaming(org.elasticsearch.nodesinfo.NodeInfoStreamingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNodeInfoStreaming(org.elasticsearch.nodesinfo.NodeInfoStreamingTests)",
  "startTimestamp": 1473936052914,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.nodesinfo.NodeInfoStreamingTests",
  "startTimestamp": 1473936052897,
  "executionTime": 28
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.plugins.PluginsServiceTests",
   "displayName": "org.elasticsearch.plugins.PluginsServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.plugins.PluginsServiceTests",
   "children": [
    {
     "id": "ID#testAdditionalSettings(org.elasticsearch.plugins.PluginsServiceTests)",
     "displayName": "testAdditionalSettings(org.elasticsearch.plugins.PluginsServiceTests)",
     "methodName": "testAdditionalSettings",
     "className": "org.elasticsearch.plugins.PluginsServiceTests",
     "children": []
    },
    {
     "id": "ID#testOnModuleExceptionsArePropagated(org.elasticsearch.plugins.PluginsServiceTests)",
     "displayName": "testOnModuleExceptionsArePropagated(org.elasticsearch.plugins.PluginsServiceTests)",
     "methodName": "testOnModuleExceptionsArePropagated",
     "className": "org.elasticsearch.plugins.PluginsServiceTests",
     "children": []
    },
    {
     "id": "ID#testExistingPluginMissingDescriptor(org.elasticsearch.plugins.PluginsServiceTests)",
     "displayName": "testExistingPluginMissingDescriptor(org.elasticsearch.plugins.PluginsServiceTests)",
     "methodName": "testExistingPluginMissingDescriptor",
     "className": "org.elasticsearch.plugins.PluginsServiceTests",
     "children": []
    },
    {
     "id": "ID#testFilterPlugins(org.elasticsearch.plugins.PluginsServiceTests)",
     "displayName": "testFilterPlugins(org.elasticsearch.plugins.PluginsServiceTests)",
     "methodName": "testFilterPlugins",
     "className": "org.elasticsearch.plugins.PluginsServiceTests",
     "children": []
    },
    {
     "id": "ID#testAdditionalSettingsClash(org.elasticsearch.plugins.PluginsServiceTests)",
     "displayName": "testAdditionalSettingsClash(org.elasticsearch.plugins.PluginsServiceTests)",
     "methodName": "testAdditionalSettingsClash",
     "className": "org.elasticsearch.plugins.PluginsServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936053233
 }
]

[
 "TEST_STARTED",
 "ID#testAdditionalSettings(org.elasticsearch.plugins.PluginsServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:53,258][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:53,259][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] loaded plugin [org.elasticsearch.plugins.PluginsServiceTests$AdditionalSettingsPlugin1]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAdditionalSettings(org.elasticsearch.plugins.PluginsServiceTests)",
  "startTimestamp": 1473936053244,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testOnModuleExceptionsArePropagated(org.elasticsearch.plugins.PluginsServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:53,274][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:53,274][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] loaded plugin [org.elasticsearch.plugins.PluginsServiceTests$FailOnModule]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:53,279][WARN ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] plugin java.lang.reflect.InvocationTargetException, failed to invoke custom onModule method%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOnModuleExceptionsArePropagated(org.elasticsearch.plugins.PluginsServiceTests)",
  "startTimestamp": 1473936053259,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testExistingPluginMissingDescriptor(org.elasticsearch.plugins.PluginsServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExistingPluginMissingDescriptor(org.elasticsearch.plugins.PluginsServiceTests)",
  "startTimestamp": 1473936053279,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testFilterPlugins(org.elasticsearch.plugins.PluginsServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:53,298][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:53,298][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] loaded plugin [org.elasticsearch.plugins.PluginsServiceTests$AdditionalSettingsPlugin1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:53,298][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] loaded plugin [org.elasticsearch.plugins.PluginsServiceTests$FilterablePlugin]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterPlugins(org.elasticsearch.plugins.PluginsServiceTests)",
  "startTimestamp": 1473936053285,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testAdditionalSettingsClash(org.elasticsearch.plugins.PluginsServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:53,309][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:53,309][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] loaded plugin [org.elasticsearch.plugins.PluginsServiceTests$AdditionalSettingsPlugin1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T03:40:53,309][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] loaded plugin [org.elasticsearch.plugins.PluginsServiceTests$AdditionalSettingsPlugin2]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAdditionalSettingsClash(org.elasticsearch.plugins.PluginsServiceTests)",
  "startTimestamp": 1473936053299,
  "executionTime": 11
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.plugins.PluginsServiceTests",
  "startTimestamp": 1473936053233,
  "executionTime": 81
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.script.ScriptContextRegistryTests",
   "displayName": "org.elasticsearch.script.ScriptContextRegistryTests",
   "methodName": null,
   "className": "org.elasticsearch.script.ScriptContextRegistryTests",
   "children": [
    {
     "id": "ID#testDuplicatedPluginScriptContexts(org.elasticsearch.script.ScriptContextRegistryTests)",
     "displayName": "testDuplicatedPluginScriptContexts(org.elasticsearch.script.ScriptContextRegistryTests)",
     "methodName": "testDuplicatedPluginScriptContexts",
     "className": "org.elasticsearch.script.ScriptContextRegistryTests",
     "children": []
    },
    {
     "id": "ID#testValidateCustomScriptContextsPluginName(org.elasticsearch.script.ScriptContextRegistryTests)",
     "displayName": "testValidateCustomScriptContextsPluginName(org.elasticsearch.script.ScriptContextRegistryTests)",
     "methodName": "testValidateCustomScriptContextsPluginName",
     "className": "org.elasticsearch.script.ScriptContextRegistryTests",
     "children": []
    },
    {
     "id": "ID#testNonDuplicatedPluginScriptContexts(org.elasticsearch.script.ScriptContextRegistryTests)",
     "displayName": "testNonDuplicatedPluginScriptContexts(org.elasticsearch.script.ScriptContextRegistryTests)",
     "methodName": "testNonDuplicatedPluginScriptContexts",
     "className": "org.elasticsearch.script.ScriptContextRegistryTests",
     "children": []
    },
    {
     "id": "ID#testValidateCustomScriptContextsOperation(org.elasticsearch.script.ScriptContextRegistryTests)",
     "displayName": "testValidateCustomScriptContextsOperation(org.elasticsearch.script.ScriptContextRegistryTests)",
     "methodName": "testValidateCustomScriptContextsOperation",
     "className": "org.elasticsearch.script.ScriptContextRegistryTests",
     "children": []
    },
    {
     "id": "ID#testValidateCustomScriptContextsEmptyOperation(org.elasticsearch.script.ScriptContextRegistryTests)",
     "displayName": "testValidateCustomScriptContextsEmptyOperation(org.elasticsearch.script.ScriptContextRegistryTests)",
     "methodName": "testValidateCustomScriptContextsEmptyOperation",
     "className": "org.elasticsearch.script.ScriptContextRegistryTests",
     "children": []
    },
    {
     "id": "ID#testValidateCustomScriptContextsEmptyPluginName(org.elasticsearch.script.ScriptContextRegistryTests)",
     "displayName": "testValidateCustomScriptContextsEmptyPluginName(org.elasticsearch.script.ScriptContextRegistryTests)",
     "methodName": "testValidateCustomScriptContextsEmptyPluginName",
     "className": "org.elasticsearch.script.ScriptContextRegistryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936053487
 }
]

[
 "TEST_STARTED",
 "ID#testDuplicatedPluginScriptContexts(org.elasticsearch.script.ScriptContextRegistryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuplicatedPluginScriptContexts(org.elasticsearch.script.ScriptContextRegistryTests)",
  "startTimestamp": 1473936053501,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testValidateCustomScriptContextsPluginName(org.elasticsearch.script.ScriptContextRegistryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidateCustomScriptContextsPluginName(org.elasticsearch.script.ScriptContextRegistryTests)",
  "startTimestamp": 1473936053502,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNonDuplicatedPluginScriptContexts(org.elasticsearch.script.ScriptContextRegistryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNonDuplicatedPluginScriptContexts(org.elasticsearch.script.ScriptContextRegistryTests)",
  "startTimestamp": 1473936053504,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testValidateCustomScriptContextsOperation(org.elasticsearch.script.ScriptContextRegistryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidateCustomScriptContextsOperation(org.elasticsearch.script.ScriptContextRegistryTests)",
  "startTimestamp": 1473936053505,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testValidateCustomScriptContextsEmptyOperation(org.elasticsearch.script.ScriptContextRegistryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidateCustomScriptContextsEmptyOperation(org.elasticsearch.script.ScriptContextRegistryTests)",
  "startTimestamp": 1473936053506,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testValidateCustomScriptContextsEmptyPluginName(org.elasticsearch.script.ScriptContextRegistryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidateCustomScriptContextsEmptyPluginName(org.elasticsearch.script.ScriptContextRegistryTests)",
  "startTimestamp": 1473936053508,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.script.ScriptContextRegistryTests",
  "startTimestamp": 1473936053487,
  "executionTime": 23
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.AggregatorParsingTests",
   "displayName": "org.elasticsearch.search.aggregations.AggregatorParsingTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.AggregatorParsingTests",
   "children": [
    {
     "id": "ID#testInvalidAggregationName(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "displayName": "testInvalidAggregationName(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "methodName": "testInvalidAggregationName",
     "className": "org.elasticsearch.search.aggregations.AggregatorParsingTests",
     "children": []
    },
    {
     "id": "ID#testTwoTypes(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "displayName": "testTwoTypes(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "methodName": "testTwoTypes",
     "className": "org.elasticsearch.search.aggregations.AggregatorParsingTests",
     "children": []
    },
    {
     "id": "ID#testMissingName(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "displayName": "testMissingName(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "methodName": "testMissingName",
     "className": "org.elasticsearch.search.aggregations.AggregatorParsingTests",
     "children": []
    },
    {
     "id": "ID#testTwoAggs(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "displayName": "testTwoAggs(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "methodName": "testTwoAggs",
     "className": "org.elasticsearch.search.aggregations.AggregatorParsingTests",
     "children": []
    },
    {
     "id": "ID#testMissingType(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "displayName": "testMissingType(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "methodName": "testMissingType",
     "className": "org.elasticsearch.search.aggregations.AggregatorParsingTests",
     "children": []
    },
    {
     "id": "ID#testSameAggregationName(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "displayName": "testSameAggregationName(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
     "methodName": "testSameAggregationName",
     "className": "org.elasticsearch.search.aggregations.AggregatorParsingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936053742
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:53,767][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{D8Df_2J7S_KQcwmqVPJ2hA}{local}{local[584]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidAggregationName(org.elasticsearch.search.aggregations.AggregatorParsingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidAggregationName(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
  "startTimestamp": 1473936053783,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTwoTypes(org.elasticsearch.search.aggregations.AggregatorParsingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTwoTypes(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
  "startTimestamp": 1473936053785,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMissingName(org.elasticsearch.search.aggregations.AggregatorParsingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingName(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
  "startTimestamp": 1473936053787,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testTwoAggs(org.elasticsearch.search.aggregations.AggregatorParsingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTwoAggs(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
  "startTimestamp": 1473936053801,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMissingType(org.elasticsearch.search.aggregations.AggregatorParsingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingType(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
  "startTimestamp": 1473936053803,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSameAggregationName(org.elasticsearch.search.aggregations.AggregatorParsingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSameAggregationName(org.elasticsearch.search.aggregations.AggregatorParsingTests)",
  "startTimestamp": 1473936053804,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.AggregatorParsingTests",
  "startTimestamp": 1473936053742,
  "executionTime": 66
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.BucketUtilsTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.BucketUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.BucketUtilsTests",
   "children": [
    {
     "id": "ID#testShardSizeIsGreaterThanGlobalSize(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
     "displayName": "testShardSizeIsGreaterThanGlobalSize(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
     "methodName": "testShardSizeIsGreaterThanGlobalSize",
     "className": "org.elasticsearch.search.aggregations.bucket.BucketUtilsTests",
     "children": []
    },
    {
     "id": "ID#testOverFlow(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
     "displayName": "testOverFlow(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
     "methodName": "testOverFlow",
     "className": "org.elasticsearch.search.aggregations.bucket.BucketUtilsTests",
     "children": []
    },
    {
     "id": "ID#testOptimizesSingleShard(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
     "displayName": "testOptimizesSingleShard(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
     "methodName": "testOptimizesSingleShard",
     "className": "org.elasticsearch.search.aggregations.bucket.BucketUtilsTests",
     "children": []
    },
    {
     "id": "ID#testBadInput(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
     "displayName": "testBadInput(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
     "methodName": "testBadInput",
     "className": "org.elasticsearch.search.aggregations.bucket.BucketUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936054000
 }
]

[
 "TEST_STARTED",
 "ID#testShardSizeIsGreaterThanGlobalSize(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardSizeIsGreaterThanGlobalSize(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
  "startTimestamp": 1473936054016,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testOverFlow(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOverFlow(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
  "startTimestamp": 1473936054019,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testOptimizesSingleShard(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOptimizesSingleShard(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
  "startTimestamp": 1473936054021,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testBadInput(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBadInput(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
  "startTimestamp": 1473936054022,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.BucketUtilsTests",
  "startTimestamp": 1473936054000,
  "executionTime": 25
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936054260
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T08:40:54,274][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{hr9PlhI6QDmv5zqBExsspw}{local}{local[585]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests)",
  "startTimestamp": 1473936054281,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests)",
  "startTimestamp": 1473936054289,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests)",
  "startTimestamp": 1473936054292,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests",
  "startTimestamp": 1473936054260,
  "executionTime": 38
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.FiltersTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.FiltersTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.FiltersTests",
   "children": [
    {
     "id": "ID#testFiltersSortedByKey(org.elasticsearch.search.aggregations.metrics.FiltersTests)",
     "displayName": "testFiltersSortedByKey(org.elasticsearch.search.aggregations.metrics.FiltersTests)",
     "methodName": "testFiltersSortedByKey",
     "className": "org.elasticsearch.search.aggregations.metrics.FiltersTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.FiltersTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.FiltersTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.FiltersTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.FiltersTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.FiltersTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.FiltersTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.FiltersTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.FiltersTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.FiltersTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936054520
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T10:40:54,539][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{sJ3FHrrTSjme4-fCOL-0vg}{local}{local[586]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testFiltersSortedByKey(org.elasticsearch.search.aggregations.metrics.FiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFiltersSortedByKey(org.elasticsearch.search.aggregations.metrics.FiltersTests)",
  "startTimestamp": 1473936054548,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.FiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.FiltersTests)",
  "startTimestamp": 1473936054552,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.FiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.FiltersTests)",
  "startTimestamp": 1473936054554,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.FiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.FiltersTests)",
  "startTimestamp": 1473936054560,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.FiltersTests",
  "startTimestamp": 1473936054520,
  "executionTime": 47
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.GeoCentroidTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.GeoCentroidTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.GeoCentroidTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.GeoCentroidTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.GeoCentroidTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.GeoCentroidTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.GeoCentroidTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.GeoCentroidTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.GeoCentroidTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.GeoCentroidTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.GeoCentroidTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.GeoCentroidTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936054776
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T05:40:54,790][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{nPpBPQZDSAGZk2usx2y30w}{local}{local[587]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.GeoCentroidTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.GeoCentroidTests)",
  "startTimestamp": 1473936054796,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.GeoCentroidTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.GeoCentroidTests)",
  "startTimestamp": 1473936054798,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.GeoCentroidTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.GeoCentroidTests)",
  "startTimestamp": 1473936054800,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.GeoCentroidTests",
  "startTimestamp": 1473936054776,
  "executionTime": 28
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.MinTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.MinTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.MinTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.MinTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.MinTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.MinTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.MinTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.MinTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.MinTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.MinTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.MinTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.MinTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936055034
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T06:40:55,046][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{KyfV12T8QCCd0okn6_gyGg}{local}{local[588]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.MinTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.MinTests)",
  "startTimestamp": 1473936055053,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.MinTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.MinTests)",
  "startTimestamp": 1473936055055,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.MinTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.MinTests)",
  "startTimestamp": 1473936055057,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.MinTests",
  "startTimestamp": 1473936055034,
  "executionTime": 27
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
   "displayName": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
   "children": [
    {
     "id": "ID#testBuildSearchContextHighlight(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "displayName": "testBuildSearchContextHighlight(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "methodName": "testBuildSearchContextHighlight",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectFieldnameExpection(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "displayName": "testUnknownObjectFieldnameExpection(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "methodName": "testUnknownObjectFieldnameExpection",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
     "children": []
    },
    {
     "id": "ID#testPreTagsWithoutPostTags(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "displayName": "testPreTagsWithoutPostTags(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "methodName": "testPreTagsWithoutPostTags",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
     "children": []
    },
    {
     "id": "ID#testTwoFieldsInObjectInFieldsArray(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "displayName": "testTwoFieldsInObjectInFieldsArray(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "methodName": "testTwoFieldsInObjectInFieldsArray",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
     "children": []
    },
    {
     "id": "ID#testValidOrderOrdinals(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "displayName": "testValidOrderOrdinals(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "methodName": "testValidOrderOrdinals",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
     "children": []
    },
    {
     "id": "ID#testStringInFieldsArray(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "displayName": "testStringInFieldsArray(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "methodName": "testStringInFieldsArray",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownFieldnameExpection(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "displayName": "testUnknownFieldnameExpection(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "methodName": "testUnknownFieldnameExpection",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownArrayNameExpection(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "displayName": "testUnknownArrayNameExpection(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "methodName": "testUnknownArrayNameExpection",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
     "children": []
    },
    {
     "id": "ID#testOrderSerialization(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "displayName": "testOrderSerialization(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "methodName": "testOrderSerialization",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingEmptyStructure(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "displayName": "testParsingEmptyStructure(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "methodName": "testParsingEmptyStructure",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNoFieldsInObjectInFieldsArray(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "displayName": "testNoFieldsInObjectInFieldsArray(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "methodName": "testNoFieldsInObjectInFieldsArray",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingTagsSchema(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "displayName": "testParsingTagsSchema(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
     "methodName": "testParsingTagsSchema",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936055292
 }
]

[
 "TEST_STARTED",
 "ID#testBuildSearchContextHighlight(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuildSearchContextHighlight(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
  "startTimestamp": 1473936055308,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
  "startTimestamp": 1473936055327,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectFieldnameExpection(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectFieldnameExpection(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
  "startTimestamp": 1473936055346,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
  "startTimestamp": 1473936055349,
  "executionTime": 62
 }
]

[
 "TEST_STARTED",
 "ID#testPreTagsWithoutPostTags(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreTagsWithoutPostTags(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
  "startTimestamp": 1473936055411,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testTwoFieldsInObjectInFieldsArray(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTwoFieldsInObjectInFieldsArray(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
  "startTimestamp": 1473936055414,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
  "startTimestamp": 1473936055416,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrderOrdinals(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrderOrdinals(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
  "startTimestamp": 1473936055431,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testStringInFieldsArray(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStringInFieldsArray(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
  "startTimestamp": 1473936055433,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownFieldnameExpection(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownFieldnameExpection(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
  "startTimestamp": 1473936055435,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownArrayNameExpection(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownArrayNameExpection(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
  "startTimestamp": 1473936055437,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testOrderSerialization(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOrderSerialization(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
  "startTimestamp": 1473936055439,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParsingEmptyStructure(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingEmptyStructure(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
  "startTimestamp": 1473936055444,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNoFieldsInObjectInFieldsArray(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoFieldsInObjectInFieldsArray(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
  "startTimestamp": 1473936055446,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParsingTagsSchema(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingTagsSchema(org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests)",
  "startTimestamp": 1473936055448,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilderTests",
  "startTimestamp": 1473936055292,
  "executionTime": 160
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.geo.GeoShapeQueryTests",
   "displayName": "org.elasticsearch.search.geo.GeoShapeQueryTests",
   "methodName": null,
   "className": "org.elasticsearch.search.geo.GeoShapeQueryTests",
   "children": [
    {
     "id": "ID#testShapeFilterWithRandomGeoCollection(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "displayName": "testShapeFilterWithRandomGeoCollection(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "methodName": "testShapeFilterWithRandomGeoCollection",
     "className": "org.elasticsearch.search.geo.GeoShapeQueryTests",
     "children": []
    },
    {
     "id": "ID#testPointsOnly(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "displayName": "testPointsOnly(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "methodName": "testPointsOnly",
     "className": "org.elasticsearch.search.geo.GeoShapeQueryTests",
     "children": []
    },
    {
     "id": "ID#testIndexPointsFilterRectangle(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "displayName": "testIndexPointsFilterRectangle(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "methodName": "testIndexPointsFilterRectangle",
     "className": "org.elasticsearch.search.geo.GeoShapeQueryTests",
     "children": []
    },
    {
     "id": "ID#testShapeFetchingPath(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "displayName": "testShapeFetchingPath(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "methodName": "testShapeFetchingPath",
     "className": "org.elasticsearch.search.geo.GeoShapeQueryTests",
     "children": []
    },
    {
     "id": "ID#testShapeFilterWithDefinedGeoCollection(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "displayName": "testShapeFilterWithDefinedGeoCollection(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "methodName": "testShapeFilterWithDefinedGeoCollection",
     "className": "org.elasticsearch.search.geo.GeoShapeQueryTests",
     "children": []
    },
    {
     "id": "ID#testIndexedShapeReference(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "displayName": "testIndexedShapeReference(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "methodName": "testIndexedShapeReference",
     "className": "org.elasticsearch.search.geo.GeoShapeQueryTests",
     "children": []
    },
    {
     "id": "ID#testEdgeCases(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "displayName": "testEdgeCases(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "methodName": "testEdgeCases",
     "className": "org.elasticsearch.search.geo.GeoShapeQueryTests",
     "children": []
    },
    {
     "id": "ID#testIndexedShapeReferenceSourceDisabled(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "displayName": "testIndexedShapeReferenceSourceDisabled(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "methodName": "testIndexedShapeReferenceSourceDisabled",
     "className": "org.elasticsearch.search.geo.GeoShapeQueryTests",
     "children": []
    },
    {
     "id": "ID#testNullShape(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "displayName": "testNullShape(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "methodName": "testNullShape",
     "className": "org.elasticsearch.search.geo.GeoShapeQueryTests",
     "children": []
    },
    {
     "id": "ID#testReusableBuilder(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "displayName": "testReusableBuilder(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "methodName": "testReusableBuilder",
     "className": "org.elasticsearch.search.geo.GeoShapeQueryTests",
     "children": []
    },
    {
     "id": "ID#testContainsShapeQuery(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "displayName": "testContainsShapeQuery(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "methodName": "testContainsShapeQuery",
     "className": "org.elasticsearch.search.geo.GeoShapeQueryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1473936055557
 }
]

[
 "TEST_STARTED",
 "ID#testShapeFilterWithRandomGeoCollection(org.elasticsearch.search.geo.GeoShapeQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:55,577][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:55,593][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[Acer (C:)]], net usable_space [789.1gb], net total_space [930.9gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:55,593][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:55,595][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[15428], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_65/25.65-b01]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:55,597][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:55,597][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:55,702][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:55,702][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:55,702][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[131]}, bound_addresses {local[131]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:55,703][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{K_hlJeUWRgOKQH2HMdeiKA}{zxCAwMG-TVChXVQpI3ppOg}{local}{local[131]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:55,703][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:55,712][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:55,724][INFO ][org.elasticsearch.search.geo] Created Random GeometryCollection containing 4 shapes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:55,728][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:40:55,778][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:20,161][INFO ][org.elasticsearch.search.geo] [GeoShapeQueryTests#testShapeFilterWithRandomGeoCollection]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShapeFilterWithRandomGeoCollection(org.elasticsearch.search.geo.GeoShapeQueryTests)",
  "startTimestamp": 1473936055572,
  "executionTime": 24619
 }
]

[
 "TEST_STARTED",
 "ID#testPointsOnly(org.elasticsearch.search.geo.GeoShapeQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:20,199][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [geo_points_only] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:20,232][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[geo_points_only][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:20,242][INFO ][org.elasticsearch.search.geo] [GeoShapeQueryTests#testPointsOnly]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPointsOnly(org.elasticsearch.search.geo.GeoShapeQueryTests)",
  "startTimestamp": 1473936080191,
  "executionTime": 72
 }
]

[
 "TEST_STARTED",
 "ID#testIndexPointsFilterRectangle(org.elasticsearch.search.geo.GeoShapeQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:20,270][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:20,328][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:20,342][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/uk_N_hFxTVOiDWdqo6tXcA] update_mapping [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:20,820][INFO ][org.elasticsearch.search.geo] [GeoShapeQueryTests#testIndexPointsFilterRectangle]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexPointsFilterRectangle(org.elasticsearch.search.geo.GeoShapeQueryTests)",
  "startTimestamp": 1473936080263,
  "executionTime": 580
 }
]

[
 "TEST_STARTED",
 "ID#testShapeFetchingPath(org.elasticsearch.search.geo.GeoShapeQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:20,850][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [shapes] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:20,880][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[shapes][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:20,895][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:20,929][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:20,943][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [shapes/_K_NKEoxT261IDq14B3s6A] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:21,547][INFO ][org.elasticsearch.search.geo] [GeoShapeQueryTests#testShapeFetchingPath]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShapeFetchingPath(org.elasticsearch.search.geo.GeoShapeQueryTests)",
  "startTimestamp": 1473936080843,
  "executionTime": 772
 }
]

[
 "TEST_STARTED",
 "ID#testShapeFilterWithDefinedGeoCollection(org.elasticsearch.search.geo.GeoShapeQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:21,623][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [shapes] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:21,670][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[shapes][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:21,689][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:21,759][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:22,006][INFO ][org.elasticsearch.search.geo] [GeoShapeQueryTests#testShapeFilterWithDefinedGeoCollection]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShapeFilterWithDefinedGeoCollection(org.elasticsearch.search.geo.GeoShapeQueryTests)",
  "startTimestamp": 1473936081615,
  "executionTime": 449
 }
]

[
 "TEST_STARTED",
 "ID#testIndexedShapeReference(org.elasticsearch.search.geo.GeoShapeQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:22,073][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:22,155][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:22,171][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [shapes] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:22,235][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[shapes][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:22,260][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [shapes/2l1p6L-9T6-AoTpHu6zaMQ] create_mapping [shape_type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:22,464][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/fYK3GZbKTXKtIr2-YsprUg] update_mapping [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:22,590][INFO ][org.elasticsearch.search.geo] [GeoShapeQueryTests#testIndexedShapeReference]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexedShapeReference(org.elasticsearch.search.geo.GeoShapeQueryTests)",
  "startTimestamp": 1473936082064,
  "executionTime": 573
 }
]

[
 "TEST_STARTED",
 "ID#testEdgeCases(org.elasticsearch.search.geo.GeoShapeQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:22,645][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:22,688][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:22,699][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/r4AUQpy5RtKfojpf1zU5sg] update_mapping [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:23,020][INFO ][org.elasticsearch.search.geo] [GeoShapeQueryTests#testEdgeCases]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEdgeCases(org.elasticsearch.search.geo.GeoShapeQueryTests)",
  "startTimestamp": 1473936082637,
  "executionTime": 413
 }
]

[
 "TEST_STARTED",
 "ID#testIndexedShapeReferenceSourceDisabled(org.elasticsearch.search.geo.GeoShapeQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:23,059][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:23,120][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:23,151][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [shapes] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [shape_type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:23,222][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[shapes][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:23,241][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [shapes/P6v7pjSHSDWxliyge4JjIw] update_mapping [shape_type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:23,526][INFO ][org.elasticsearch.search.geo] [GeoShapeQueryTests#testIndexedShapeReferenceSourceDisabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexedShapeReferenceSourceDisabled(org.elasticsearch.search.geo.GeoShapeQueryTests)",
  "startTimestamp": 1473936083050,
  "executionTime": 527
 }
]

[
 "TEST_STARTED",
 "ID#testNullShape(org.elasticsearch.search.geo.GeoShapeQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:23,588][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:23,634][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:23,749][INFO ][org.elasticsearch.search.geo] [GeoShapeQueryTests#testNullShape]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullShape(org.elasticsearch.search.geo.GeoShapeQueryTests)",
  "startTimestamp": 1473936083577,
  "executionTime": 212
 }
]

[
 "TEST_STARTED",
 "ID#testReusableBuilder(org.elasticsearch.search.geo.GeoShapeQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:23,797][INFO ][org.elasticsearch.search.geo] [GeoShapeQueryTests#testReusableBuilder]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReusableBuilder(org.elasticsearch.search.geo.GeoShapeQueryTests)",
  "startTimestamp": 1473936083790,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testContainsShapeQuery(org.elasticsearch.search.geo.GeoShapeQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:23,820][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:23,886][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:25,330][INFO ][org.elasticsearch.search.geo] [GeoShapeQueryTests#testContainsShapeQuery]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testContainsShapeQuery(org.elasticsearch.search.geo.GeoShapeQueryTests)",
  "startTimestamp": 1473936083798,
  "executionTime": 1614
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:25,412][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:25,413][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:25,413][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-15T20:41:25,416][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "APPEND_STDERR",
 {
  "chunk": "Sep 15, 2016 12:41:25 PM com.carrotsearch.randomizedtesting.ThreadLeakControl checkThreadLeaks%0D%0AWARNING: Will linger awaiting termination of 1 leaked thread(s).%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.geo.GeoShapeQueryTests",
  "startTimestamp": 1473936055557,
  "executionTime": 30121
 }
]

[
 "IDLE",
 {}
]

[
 "QUIT",
 {}
]

