[
 "BOOTSTRAP",
 {
  "defaultCharset": "windows-1252",
  "pidString": "1128@DESKTOP-HP7QPF3",
  "systemProperties": {
   "awt.toolkit": "sun.awt.windows.WToolkit",
   "file.encoding": "Cp1252",
   "file.encoding.pkg": "sun.io",
   "file.separator": "\\",
   "java.awt.graphicsenv": "sun.awt.Win32GraphicsEnvironment",
   "java.awt.headless": "true",
   "java.awt.printerjob": "sun.awt.windows.WPrinterJob",
   "java.class.path": "C:\\Users\\kmala\\workspace\\Team3\\core\\build\\classes\\test;C:\\Users\\kmala\\workspace\\Team3\\core\\build\\resources\\test;C:\\Users\\kmala\\workspace\\Team3\\core\\build\\classes\\main;C:\\Users\\kmala\\workspace\\Team3\\core\\build\\resources\\main;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-core\\6.2.0\\849ee62525a294416802be2cacc66c80352f6f13\\lucene-core-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-analyzers-common\\6.2.0\\d254d52dd394b5079129f3d5f3bf4f2d44a5936e\\lucene-analyzers-common-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-backward-codecs\\6.2.0\\b625bb21456b3c0d1e5e431bced125cb060c1abd\\lucene-backward-codecs-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-grouping\\6.2.0\\9527fedfd5acc624b2bb3f862bd99fb8f470b053\\lucene-grouping-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-highlighter\\6.2.0\\7ca342372a3f45e32bbd21cecaa757e38eccb8a5\\lucene-highlighter-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-join\\6.2.0\\da0b8de98511abd4fe9c7d48a353d17854c5ed46\\lucene-join-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-memory\\6.2.0\\bc9e075b1ee051c8e5246c237c38d8e71dab8a66\\lucene-memory-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-misc\\6.2.0\\94ddde6312566a4da4a50a88e453b6c82c759b41\\lucene-misc-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-queries\\6.2.0\\dce47238f78e3e97d91dc6fefa9f46f07866bc2b\\lucene-queries-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-queryparser\\6.2.0\\17ef728ac15e668bfa1105321611548424637645\\lucene-queryparser-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-sandbox\\6.2.0\\520183f7b9aba77a26e224760c420a3844b0631a\\lucene-sandbox-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-spatial\\6.2.0\\8dba929b66927b936fbc76103b109ad6c824daee\\lucene-spatial-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-spatial-extras\\6.2.0\\3b5a6ef5cd90c0218a72e9e2f7e60104be2447da\\lucene-spatial-extras-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-spatial3d\\6.2.0\\fcdb0567725722c5145149d1502848b6a96ec18d\\lucene-spatial3d-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-suggest\\6.2.0\\3d9d526c51f483d27f425c75d7e56bc0849242d6\\lucene-suggest-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.elasticsearch\\securesm\\1.1\\1e423447d020041534be94c0f31a49fbdc1f2950\\securesm-1.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\net.sf.jopt-simple\\jopt-simple\\5.0.2\\98cafc6081d5632b61be2c9e60650b64ddbc637c\\jopt-simple-5.0.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.carrotsearch\\hppc\\0.7.1\\8b5057f74ea378c0150a1860874a3ebdcb713767\\hppc-0.7.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\joda-time\\joda-time\\2.9.4\\1c295b462f16702ebe720bbb08f62e1ba80da41b\\joda-time-2.9.4.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.joda\\joda-convert\\1.2\\35ec554f0cd00c956cc69051514d9488b1374dec\\joda-convert-1.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.yaml\\snakeyaml\\1.15\\3b132bea69e8ee099f416044970997bde80f4ea6\\snakeyaml-1.15.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.8.1\\fd13b1c033741d48291315c6370f7d475a42dccf\\jackson-core-2.8.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.dataformat\\jackson-dataformat-smile\\2.8.1\\5b73867bc12224946fc67fc8d49d9f5e698d7f\\jackson-dataformat-smile-2.8.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.dataformat\\jackson-dataformat-yaml\\2.8.1\\eb63166c723b0b4b9fb5298fca232a2f6612ec34\\jackson-dataformat-yaml-2.8.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.dataformat\\jackson-dataformat-cbor\\2.8.1\\3a6fb7e75c9972559a78cf5cfc5a48a41a13ea40\\jackson-dataformat-cbor-2.8.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.tdunning\\t-digest\\3.0\\84ccf145ac2215e6bfa63baa3101c0af41017cfc\\t-digest-3.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.hdrhistogram\\HdrHistogram\\2.1.6\\7495feb7f71ee124bd2a7e7d83590e296d71d80e\\HdrHistogram-2.1.6.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.locationtech.spatial4j\\spatial4j\\0.6\\21b15310bddcfd8c72611c180f20cf23279809a3\\spatial4j-0.6.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.vividsolutions\\jts\\1.13\\3ccfb9b60f04d71add996a666ceb8902904fd805\\jts-1.13.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.logging.log4j\\log4j-api\\2.6.2\\bd1b74a5d170686362091c7cf596bbc3adf5c09b\\log4j-api-2.6.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.logging.log4j\\log4j-core\\2.6.2\\a91369f655eb1639c6aece5c5eb5108db18306\\log4j-core-2.6.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.logging.log4j\\log4j-1.2-api\\2.6.2\\3b4c5a8b734b6a29b2f03380535a48da6284b210\\log4j-1.2-api-2.6.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\net.java.dev.jna\\jna\\4.2.2\\5012450aee579c3118ff09461d5ce210e0cdc2a9\\jna-4.2.2.jar;C:\\Users\\kmala\\workspace\\Team3\\test\\framework\\build\\distributions\\framework-5.0.0-alpha6-SNAPSHOT.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.carrotsearch.randomizedtesting\\randomizedtesting-runner\\2.3.2\\307965917fe8a22b7ee72deba39ef4b8e6ebc069\\randomizedtesting-runner-2.3.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\junit\\junit\\4.11\\4e031bb61df09069aeb2bffb4019e7a5034a4ee0\\junit-4.11.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.hamcrest\\hamcrest-all\\1.3\\63a21ebc981131004ad02e0434e799fd7f3a8d5a\\hamcrest-all-1.3.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-test-framework\\6.2.0\\f5026be3983acfb40d4092dbfbc015ec6e6addab\\lucene-test-framework-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-codecs\\6.2.0\\99f887266b0ad9f2c286b3976c5bc48c8cd36624\\lucene-codecs-6.2.0.jar;C:\\Users\\kmala\\workspace\\Team3\\client\\rest\\build\\distributions\\rest-5.0.0-alpha6-SNAPSHOT.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.httpcomponents\\httpclient\\4.5.2\\733db77aa8d9b2d68015189df76ab06304406e50\\httpclient-4.5.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.httpcomponents\\httpcore\\4.4.5\\e7501a1b34325abb00d17dde96150604a0658b54\\httpcore-4.4.5.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\commons-logging\\commons-logging\\1.1.3\\f6f66e966c70a83ffbdb6f17a0919eaf7c8aca7f\\commons-logging-1.1.3.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.10\\4b95f4897fa13f2cd904aee711aeafc0c5295cd8\\commons-codec-1.10.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.elasticsearch\\securemock\\1.2\\98201d4ad5ac93f6b415ae9172d52b5e7cda490e\\securemock-1.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.httpcomponents\\httpasyncclient\\4.1.2\\95aa3e6fb520191a0970a73cf09f62948ee614be\\httpasyncclient-4.1.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.httpcomponents\\httpcore-nio\\4.4.5\\f4be009e7505f6ceddf21e7960c759f413f15056\\httpcore-nio-4.4.5.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.carrotsearch.randomizedtesting\\junit4-ant\\2.3.2\\dc8f03f6111974092491f35b8269eb0fc57f52f7\\junit4-ant-2.3.2.jar",
   "java.class.version": "52.0",
   "java.endorsed.dirs": "C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\endorsed",
   "java.ext.dirs": "C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\ext;C:\\Windows\\Sun\\Java\\lib\\ext",
   "java.home": "C:\\Program Files\\Java\\jdk1.8.0_102\\jre",
   "java.io.tmpdir": "./temp",
   "java.library.path": "C:\\Program Files\\Java\\jdk1.8.0_102\\bin;C:\\Windows\\Sun\\Java\\bin;C:\\Windows\\system32;C:\\Windows;C:\\ProgramData\\Oracle\\Java\\javapath;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\Skype\\Phone\\;C:\\Tools\\curl-7.50.1\\bin;C:\\Program Files\\Git\\cmd;C:\\Tools\\gradle-2.13\\bin;C:\\Tools\\apache-maven-3.3.9\\bin;C:\\Program Files\\doxygen\\bin;C:\\Tools\\sonar-scanner-2.7\\bin;C:\\Windows\\system32\\config\\systemprofile\\.dnx\\bin;C:\\Program Files\\Microsoft DNX\\Dnvm\\;C:\\Program Files\\Microsoft SQL Server\\120\\Tools\\Binn\\;C:\\Users\\kmala\\AppData\\Local\\Microsoft\\WindowsApps;;.",
   "java.runtime.name": "Java(TM) SE Runtime Environment",
   "java.runtime.version": "1.8.0_102-b14",
   "java.specification.name": "Java Platform API Specification",
   "java.specification.vendor": "Oracle Corporation",
   "java.specification.version": "1.8",
   "java.vendor": "Oracle Corporation",
   "java.vendor.url": "http://java.oracle.com/",
   "java.vendor.url.bug": "http://bugreport.sun.com/bugreport/",
   "java.version": "1.8.0_102",
   "java.vm.info": "mixed mode",
   "java.vm.name": "Java HotSpot(TM) 64-Bit Server VM",
   "java.vm.specification.name": "Java Virtual Machine Specification",
   "java.vm.specification.vendor": "Oracle Corporation",
   "java.vm.specification.version": "1.8",
   "java.vm.vendor": "Oracle Corporation",
   "java.vm.version": "25.102-b14",
   "jna.nosys": "true",
   "junit4.childvm.count": "3",
   "junit4.childvm.cwd": "C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J2",
   "junit4.childvm.id": "2",
   "junit4.memory.total": "514850816",
   "junit4.pidString": "1128@DESKTOP-HP7QPF3",
   "junit4.processors": "4",
   "line.separator": "\r\n",
   "os.arch": "amd64",
   "os.name": "Windows 10",
   "os.version": "10.0",
   "path.separator": ";",
   "sun.arch.data.model": "64",
   "sun.boot.class.path": "C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\resources.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\rt.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\sunrsasign.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\jsse.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\jce.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\charsets.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\jfr.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\classes",
   "sun.boot.library.path": "C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\bin",
   "sun.cpu.endian": "little",
   "sun.cpu.isalist": "amd64",
   "sun.desktop": "windows",
   "sun.io.unicode.encoding": "UnicodeLittle",
   "sun.java.command": "com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe -eventsfile C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\temp\\junit4-J2-20160916_193111_542.events @C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\temp\\junit4-J2-20160916_193111_542.suites -stdin",
   "sun.java.launcher": "SUN_STANDARD",
   "sun.jnu.encoding": "Cp1252",
   "sun.management.compiler": "HotSpot 64-Bit Tiered Compilers",
   "sun.os.patch.level": "",
   "tests.artifact": "core",
   "tests.gradle": "true",
   "tests.haltonfailure": "false",
   "tests.ifNoTests": "fail",
   "tests.logger.level": "WARN",
   "tests.prefix": "tests",
   "tests.security.manager": "true",
   "tests.seed": "229C635BFFC33CB2",
   "tests.task": ":core:test",
   "user.country": "US",
   "user.dir": "C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J2",
   "user.home": "C:\\Users\\kmala",
   "user.language": "en",
   "user.name": "kmala",
   "user.script": "",
   "user.timezone": "",
   "user.variant": ""
  }
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests",
   "displayName": "org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests",
   "children": [
    {
     "id": "ID#testPut(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)",
     "displayName": "testPut(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)",
     "methodName": "testPut",
     "className": "org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests",
     "children": []
    },
    {
     "id": "ID#testNullArguments(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)",
     "displayName": "testNullArguments(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)",
     "methodName": "testNullArguments",
     "className": "org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests",
     "children": []
    },
    {
     "id": "ID#testRandomFail(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)",
     "displayName": "testRandomFail(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)",
     "methodName": "testRandomFail",
     "className": "org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests",
     "children": []
    },
    {
     "id": "ID#testConsumerCanThrowExceptions(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)",
     "displayName": "testConsumerCanThrowExceptions(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)",
     "methodName": "testConsumerCanThrowExceptions",
     "className": "org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047072816
 }
]

[
 "TEST_STARTED",
 "ID#testPut(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPut(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)",
  "startTimestamp": 1474047077801,
  "executionTime": 615
 }
]

[
 "TEST_STARTED",
 "ID#testNullArguments(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullArguments(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)",
  "startTimestamp": 1474047078417,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testRandomFail(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomFail(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)",
  "startTimestamp": 1474047078430,
  "executionTime": 49
 }
]

[
 "TEST_STARTED",
 "ID#testConsumerCanThrowExceptions(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-16 22:31:18,699 TEST-AsyncIOProcessorTests.testConsumerCanThrowExceptions-seed#[229C635BFFC33CB2] ERROR An exception occurred processing Appender console java.security.AccessControlException: access denied (\"java.lang.RuntimePermission\" \"accessClassInPackage.sun.reflect\")%0D%0A%09at java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)%0D%0A%09at java.security.AccessController.checkPermission(AccessController.java:884)%0D%0A%09at java.lang.SecurityManager.checkPermission(SecurityManager.java:549)%0D%0A%09at java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1564)%0D%0A%09at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:311)%0D%0A%09at java.lang.ClassLoader.loadClass(ClassLoader.java:357)%0D%0A%09at java.lang.Class.forName0(Native Method)%0D%0A%09at java.lang.Class.forName(Class.java:264)%0D%0A%09at org.apache.logging.log4j.util.LoaderUtil.loadClass(LoaderUtil.java:122)%0D%0A%09at org.apache.logging.log4j.core.util.Loader.loadClass(Loader.java:228)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.loadClass(ThrowableProxy.java:496)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.toExtendedStackTrace(ThrowableProxy.java:617)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:135)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:117)%0D%0A%09at org.apache.logging.log4j.core.impl.MutableLogEvent.getThrownProxy(MutableLogEvent.java:314)%0D%0A%09at org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter.format(ExtendedThrowablePatternConverter.java:61)%0D%0A%09at org.apache.logging.log4j.core.pattern.PatternFormatter.format(PatternFormatter.java:38)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout$PatternSerializer.toSerializable(PatternLayout.java:294)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.toText(PatternLayout.java:195)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:180)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:57)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.directEncodeEvent(AbstractOutputStreamAppender.java:120)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.tryAppend(AbstractOutputStreamAppender.java:113)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.append(AbstractOutputStreamAppender.java:104)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.tryCallAppender(AppenderControl.java:155)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender0(AppenderControl.java:128)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppenderPreventRecursion(AppenderControl.java:119)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender(AppenderControl.java:84)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.callAppenders(LoggerConfig.java:390)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:375)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:359)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:349)%0D%0A%09at org.apache.logging.log4j.core.config.AwaitCompletionReliabilityStrategy.log(AwaitCompletionReliabilityStrategy.java:63)%0D%0A%09at org.apache.logging.log4j.core.Logger.logMessage(Logger.java:146)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logMessage(AbstractLogger.java:1988)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled(AbstractLogger.java:1960)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.warn(AbstractLogger.java:2526)%0D%0A%09at org.elasticsearch.common.util.concurrent.AsyncIOProcessor.processList(AsyncIOProcessor.java:119)%0D%0A%09at org.elasticsearch.common.util.concurrent.AsyncIOProcessor.drainAndProcess(AsyncIOProcessor.java:99)%0D%0A%09at org.elasticsearch.common.util.concurrent.AsyncIOProcessor.put(AsyncIOProcessor.java:82)%0D%0A%09at org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests.testConsumerCanThrowExceptions(AsyncIOProcessorTests.java:145)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0D%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0D%0A%09at java.lang.reflect.Method.invoke(Method.java:498)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at java.lang.Thread.run(Thread.java:745)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-16 22:31:18,765 TEST-AsyncIOProcessorTests.testConsumerCanThrowExceptions-seed#[229C635BFFC33CB2] ERROR An exception occurred processing Appender console java.security.AccessControlException: access denied (\"java.lang.RuntimePermission\" \"accessClassInPackage.sun.reflect\")%0D%0A%09at java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)%0D%0A%09at java.security.AccessController.checkPermission(AccessController.java:884)%0D%0A%09at java.lang.SecurityManager.checkPermission(SecurityManager.java:549)%0D%0A%09at java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1564)%0D%0A%09at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:311)%0D%0A%09at java.lang.ClassLoader.loadClass(ClassLoader.java:357)%0D%0A%09at java.lang.Class.forName0(Native Method)%0D%0A%09at java.lang.Class.forName(Class.java:264)%0D%0A%09at org.apache.logging.log4j.util.LoaderUtil.loadClass(LoaderUtil.java:122)%0D%0A%09at org.apache.logging.log4j.core.util.Loader.loadClass(Loader.java:228)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.loadClass(ThrowableProxy.java:496)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.toExtendedStackTrace(ThrowableProxy.java:617)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:135)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:117)%0D%0A%09at org.apache.logging.log4j.core.impl.MutableLogEvent.getThrownProxy(MutableLogEvent.java:314)%0D%0A%09at org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter.format(ExtendedThrowablePatternConverter.java:61)%0D%0A%09at org.apache.logging.log4j.core.pattern.PatternFormatter.format(PatternFormatter.java:38)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout$PatternSerializer.toSerializable(PatternLayout.java:294)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.toText(PatternLayout.java:195)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:180)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:57)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.directEncodeEvent(AbstractOutputStreamAppender.java:120)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.tryAppend(AbstractOutputStreamAppender.java:113)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.append(AbstractOutputStreamAppender.java:104)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.tryCallAppender(AppenderControl.java:155)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender0(AppenderControl.java:128)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppenderPreventRecursion(AppenderControl.java:119)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender(AppenderControl.java:84)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.callAppenders(LoggerConfig.java:390)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:375)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:359)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:349)%0D%0A%09at org.apache.logging.log4j.core.config.AwaitCompletionReliabilityStrategy.log(AwaitCompletionReliabilityStrategy.java:63)%0D%0A%09at org.apache.logging.log4j.core.Logger.logMessage(Logger.java:146)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logMessage(AbstractLogger.java:1988)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled(AbstractLogger.java:1960)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.warn(AbstractLogger.java:2526)%0D%0A%09at org.elasticsearch.common.util.concurrent.AsyncIOProcessor.processList(AsyncIOProcessor.java:119)%0D%0A%09at org.elasticsearch.common.util.concurrent.AsyncIOProcessor.drainAndProcess(AsyncIOProcessor.java:99)%0D%0A%09at org.elasticsearch.common.util.concurrent.AsyncIOProcessor.put(AsyncIOProcessor.java:82)%0D%0A%09at org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests.testConsumerCanThrowExceptions(AsyncIOProcessorTests.java:146)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0D%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0D%0A%09at java.lang.reflect.Method.invoke(Method.java:498)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at java.lang.Thread.run(Thread.java:745)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConsumerCanThrowExceptions(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)",
  "startTimestamp": 1474047078479,
  "executionTime": 292
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests",
  "startTimestamp": 1474047072816,
  "executionTime": 6030
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.PidFileTests",
   "displayName": "org.elasticsearch.common.PidFileTests",
   "methodName": null,
   "className": "org.elasticsearch.common.PidFileTests",
   "children": [
    {
     "id": "ID#testPidFile(org.elasticsearch.common.PidFileTests)",
     "displayName": "testPidFile(org.elasticsearch.common.PidFileTests)",
     "methodName": "testPidFile",
     "className": "org.elasticsearch.common.PidFileTests",
     "children": []
    },
    {
     "id": "ID#testParentIsFile(org.elasticsearch.common.PidFileTests)",
     "displayName": "testParentIsFile(org.elasticsearch.common.PidFileTests)",
     "methodName": "testParentIsFile",
     "className": "org.elasticsearch.common.PidFileTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047078861
 }
]

[
 "TEST_STARTED",
 "ID#testPidFile(org.elasticsearch.common.PidFileTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPidFile(org.elasticsearch.common.PidFileTests)",
  "startTimestamp": 1474047079111,
  "executionTime": 72
 }
]

[
 "TEST_STARTED",
 "ID#testParentIsFile(org.elasticsearch.common.PidFileTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParentIsFile(org.elasticsearch.common.PidFileTests)",
  "startTimestamp": 1474047079183,
  "executionTime": 169
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.PidFileTests",
  "startTimestamp": 1474047078861,
  "executionTime": 506
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests",
   "displayName": "org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests",
   "children": [
    {
     "id": "ID#testSimple(org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests)",
     "displayName": "testSimple(org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests",
     "children": []
    },
    {
     "id": "ID#testSearch(org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests)",
     "displayName": "testSearch(org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests)",
     "methodName": "testSearch",
     "className": "org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047079415
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests)",
  "startTimestamp": 1474047079445,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testSearch(org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearch(org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests)",
  "startTimestamp": 1474047079455,
  "executionTime": 2032
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests",
  "startTimestamp": 1474047079415,
  "executionTime": 2079
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.GeoDistanceTests",
   "displayName": "org.elasticsearch.common.geo.GeoDistanceTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.GeoDistanceTests",
   "children": [
    {
     "id": "ID#testGeoDistanceSerialization(org.elasticsearch.common.geo.GeoDistanceTests)",
     "displayName": "testGeoDistanceSerialization(org.elasticsearch.common.geo.GeoDistanceTests)",
     "methodName": "testGeoDistanceSerialization",
     "className": "org.elasticsearch.common.geo.GeoDistanceTests",
     "children": []
    },
    {
     "id": "ID#testDistanceCheck(org.elasticsearch.common.geo.GeoDistanceTests)",
     "displayName": "testDistanceCheck(org.elasticsearch.common.geo.GeoDistanceTests)",
     "methodName": "testDistanceCheck",
     "className": "org.elasticsearch.common.geo.GeoDistanceTests",
     "children": []
    },
    {
     "id": "ID#testInvalidReadFrom(org.elasticsearch.common.geo.GeoDistanceTests)",
     "displayName": "testInvalidReadFrom(org.elasticsearch.common.geo.GeoDistanceTests)",
     "methodName": "testInvalidReadFrom",
     "className": "org.elasticsearch.common.geo.GeoDistanceTests",
     "children": []
    },
    {
     "id": "ID#testArcDistanceVsPlaneInEllipsis(org.elasticsearch.common.geo.GeoDistanceTests)",
     "displayName": "testArcDistanceVsPlaneInEllipsis(org.elasticsearch.common.geo.GeoDistanceTests)",
     "methodName": "testArcDistanceVsPlaneInEllipsis",
     "className": "org.elasticsearch.common.geo.GeoDistanceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047081510
 }
]

[
 "TEST_STARTED",
 "ID#testGeoDistanceSerialization(org.elasticsearch.common.geo.GeoDistanceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoDistanceSerialization(org.elasticsearch.common.geo.GeoDistanceTests)",
  "startTimestamp": 1474047081535,
  "executionTime": 75
 }
]

[
 "TEST_STARTED",
 "ID#testDistanceCheck(org.elasticsearch.common.geo.GeoDistanceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDistanceCheck(org.elasticsearch.common.geo.GeoDistanceTests)",
  "startTimestamp": 1474047081610,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidReadFrom(org.elasticsearch.common.geo.GeoDistanceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidReadFrom(org.elasticsearch.common.geo.GeoDistanceTests)",
  "startTimestamp": 1474047081619,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testArcDistanceVsPlaneInEllipsis(org.elasticsearch.common.geo.GeoDistanceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArcDistanceVsPlaneInEllipsis(org.elasticsearch.common.geo.GeoDistanceTests)",
  "startTimestamp": 1474047081622,
  "executionTime": 131
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.GeoDistanceTests",
  "startTimestamp": 1474047081510,
  "executionTime": 245
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.node.internal.InternalSettingsPreparerTests",
   "displayName": "org.elasticsearch.node.internal.InternalSettingsPreparerTests",
   "methodName": null,
   "className": "org.elasticsearch.node.internal.InternalSettingsPreparerTests",
   "children": [
    {
     "id": "ID#testReplaceTextPromptPlaceholderWithNullTerminal(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "displayName": "testReplaceTextPromptPlaceholderWithNullTerminal(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "methodName": "testReplaceTextPromptPlaceholderWithNullTerminal",
     "className": "org.elasticsearch.node.internal.InternalSettingsPreparerTests",
     "children": []
    },
    {
     "id": "ID#testReplacePromptPlaceholders(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "displayName": "testReplacePromptPlaceholders(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "methodName": "testReplacePromptPlaceholders",
     "className": "org.elasticsearch.node.internal.InternalSettingsPreparerTests",
     "children": []
    },
    {
     "id": "ID#testReplaceSecretPromptPlaceholderWithNullTerminal(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "displayName": "testReplaceSecretPromptPlaceholderWithNullTerminal(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "methodName": "testReplaceSecretPromptPlaceholderWithNullTerminal",
     "className": "org.elasticsearch.node.internal.InternalSettingsPreparerTests",
     "children": []
    },
    {
     "id": "ID#testDefaultClusterName(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "displayName": "testDefaultClusterName(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "methodName": "testDefaultClusterName",
     "className": "org.elasticsearch.node.internal.InternalSettingsPreparerTests",
     "children": []
    },
    {
     "id": "ID#testEmptySettings(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "displayName": "testEmptySettings(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "methodName": "testEmptySettings",
     "className": "org.elasticsearch.node.internal.InternalSettingsPreparerTests",
     "children": []
    },
    {
     "id": "ID#testMultipleSettingsFileNotAllowed(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "displayName": "testMultipleSettingsFileNotAllowed(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "methodName": "testMultipleSettingsFileNotAllowed",
     "className": "org.elasticsearch.node.internal.InternalSettingsPreparerTests",
     "children": []
    },
    {
     "id": "ID#testGarbageIsNotSwallowed(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "displayName": "testGarbageIsNotSwallowed(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "methodName": "testGarbageIsNotSwallowed",
     "className": "org.elasticsearch.node.internal.InternalSettingsPreparerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047081770
 }
]

[
 "TEST_STARTED",
 "ID#testReplaceTextPromptPlaceholderWithNullTerminal(org.elasticsearch.node.internal.InternalSettingsPreparerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplaceTextPromptPlaceholderWithNullTerminal(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
  "startTimestamp": 1474047081823,
  "executionTime": 511
 }
]

[
 "TEST_STARTED",
 "ID#testReplacePromptPlaceholders(org.elasticsearch.node.internal.InternalSettingsPreparerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplacePromptPlaceholders(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
  "startTimestamp": 1474047082334,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testReplaceSecretPromptPlaceholderWithNullTerminal(org.elasticsearch.node.internal.InternalSettingsPreparerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplaceSecretPromptPlaceholderWithNullTerminal(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
  "startTimestamp": 1474047082362,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultClusterName(org.elasticsearch.node.internal.InternalSettingsPreparerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultClusterName(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
  "startTimestamp": 1474047082375,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testEmptySettings(org.elasticsearch.node.internal.InternalSettingsPreparerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptySettings(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
  "startTimestamp": 1474047082387,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleSettingsFileNotAllowed(org.elasticsearch.node.internal.InternalSettingsPreparerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleSettingsFileNotAllowed(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
  "startTimestamp": 1474047082400,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testGarbageIsNotSwallowed(org.elasticsearch.node.internal.InternalSettingsPreparerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGarbageIsNotSwallowed(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
  "startTimestamp": 1474047082430,
  "executionTime": 22
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.node.internal.InternalSettingsPreparerTests",
  "startTimestamp": 1474047081770,
  "executionTime": 704
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.AutoCreateIndexTests",
   "displayName": "org.elasticsearch.action.support.AutoCreateIndexTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
   "children": [
    {
     "id": "ID#testParseFailed(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testParseFailed(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testParseFailed",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testDynamicMappingDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testDynamicMappingDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testDynamicMappingDisabled",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testDefaultAutoCreation(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testDefaultAutoCreation(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testDefaultAutoCreation",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testParseFailedMissingIndex(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testParseFailedMissingIndex(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testParseFailedMissingIndex",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testAutoCreationMultipleIndexNames(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testAutoCreationMultipleIndexNames(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testAutoCreationMultipleIndexNames",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testAutoCreationPatternEnabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testAutoCreationPatternEnabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testAutoCreationPatternEnabled",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testAutoCreationMultiplePatternsNoWildcards(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testAutoCreationMultiplePatternsNoWildcards(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testAutoCreationMultiplePatternsNoWildcards",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testAutoCreationDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testAutoCreationDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testAutoCreationDisabled",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testAutoCreationPatternDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testAutoCreationPatternDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testAutoCreationPatternDisabled",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testAutoCreationMultiplePatternsWithWildcards(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testAutoCreationMultiplePatternsWithWildcards(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testAutoCreationMultiplePatternsWithWildcards",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testAutoCreationConflictingPatternsFirstWins(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testAutoCreationConflictingPatternsFirstWins(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testAutoCreationConflictingPatternsFirstWins",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testUpdate(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testUpdate(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testUpdate",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testExistingIndex(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testExistingIndex(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testExistingIndex",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testAutoCreationEnabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testAutoCreationEnabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testAutoCreationEnabled",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047082495
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailed(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailed(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1474047082597,
  "executionTime": 2089
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicMappingDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicMappingDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1474047084686,
  "executionTime": 662
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultAutoCreation(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultAutoCreation(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1474047085348,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailedMissingIndex(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailedMissingIndex(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1474047085362,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testAutoCreationMultipleIndexNames(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAutoCreationMultipleIndexNames(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1474047085370,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testAutoCreationPatternEnabled(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAutoCreationPatternEnabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1474047085378,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testAutoCreationMultiplePatternsNoWildcards(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAutoCreationMultiplePatternsNoWildcards(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1474047085383,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testAutoCreationDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAutoCreationDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1474047085387,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testAutoCreationPatternDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAutoCreationPatternDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1474047085393,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testAutoCreationMultiplePatternsWithWildcards(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAutoCreationMultiplePatternsWithWildcards(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1474047085398,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testAutoCreationConflictingPatternsFirstWins(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAutoCreationConflictingPatternsFirstWins(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1474047085403,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testUpdate(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:31:25,433][INFO ][org.elasticsearch.common.settings] updating [action.auto_create_index] from [false] to [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:31:25,438][INFO ][org.elasticsearch.common.settings] updating [action.auto_create_index] from [true] to [logs-*]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdate(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1474047085423,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testExistingIndex(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExistingIndex(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1474047085439,
  "executionTime": 186
 }
]

[
 "TEST_STARTED",
 "ID#testAutoCreationEnabled(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAutoCreationEnabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1474047085626,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.AutoCreateIndexTests",
  "startTimestamp": 1474047082495,
  "executionTime": 3153
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.TokenCountFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.TokenCountFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.TokenCountFieldMapperTests",
   "children": [
    {
     "id": "ID#testCountPositions(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)",
     "displayName": "testCountPositions(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)",
     "methodName": "testCountPositions",
     "className": "org.elasticsearch.index.mapper.TokenCountFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testMerge(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)",
     "displayName": "testMerge(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)",
     "methodName": "testMerge",
     "className": "org.elasticsearch.index.mapper.TokenCountFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testEmptyName(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)",
     "displayName": "testEmptyName(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)",
     "methodName": "testEmptyName",
     "className": "org.elasticsearch.index.mapper.TokenCountFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047085738
 }
]

[
 "TEST_STARTED",
 "ID#testCountPositions(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:01:25,998][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:01:26,167][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:01:26,168][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:01:26,175][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:01:26,188][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:01:26,189][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:01:37,560][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:01:37,561][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:01:37,605][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[1]}, bound_addresses {local[1]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:01:37,667][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{ZC-F_-9jTcq-mLJ88wUNzg}{wbuKnj8OR527IpB8xW1xZw}{local}{local[1]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:01:37,683][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:01:37,886][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:01:38,207][INFO ][org.elasticsearch.index.mapper] [node_s_0] [VW_CfjuUR6aFhhorCf8jQw] [TokenCountFieldMapperTests#testCountPositions]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCountPositions(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)",
  "startTimestamp": 1474047085925,
  "executionTime": 12324
 }
]

[
 "TEST_STARTED",
 "ID#testMerge(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:01:38,546][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:01:39,328][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:01:39,650][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TokenCountFieldMapperTests#testMerge]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMerge(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)",
  "startTimestamp": 1474047098250,
  "executionTime": 1461
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyName(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:01:39,722][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:01:39,786][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:01:39,832][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_old] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:01:39,893][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_old][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:01:39,925][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test_old] [TokenCountFieldMapperTests#testEmptyName]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyName(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)",
  "startTimestamp": 1474047099712,
  "executionTime": 305
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:01:40,017][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:01:40,021][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:01:40,022][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:01:40,034][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.TokenCountFieldMapperTests",
  "startTimestamp": 1474047085738,
  "executionTime": 14317
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.DocWriteResponseTests",
   "displayName": "org.elasticsearch.action.DocWriteResponseTests",
   "methodName": null,
   "className": "org.elasticsearch.action.DocWriteResponseTests",
   "children": [
    {
     "id": "ID#testToXContentDoesntIncludeForcedRefreshUnlessForced(org.elasticsearch.action.DocWriteResponseTests)",
     "displayName": "testToXContentDoesntIncludeForcedRefreshUnlessForced(org.elasticsearch.action.DocWriteResponseTests)",
     "methodName": "testToXContentDoesntIncludeForcedRefreshUnlessForced",
     "className": "org.elasticsearch.action.DocWriteResponseTests",
     "children": []
    },
    {
     "id": "ID#testGetLocation(org.elasticsearch.action.DocWriteResponseTests)",
     "displayName": "testGetLocation(org.elasticsearch.action.DocWriteResponseTests)",
     "methodName": "testGetLocation",
     "className": "org.elasticsearch.action.DocWriteResponseTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047100066
 }
]

[
 "TEST_STARTED",
 "ID#testToXContentDoesntIncludeForcedRefreshUnlessForced(org.elasticsearch.action.DocWriteResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToXContentDoesntIncludeForcedRefreshUnlessForced(org.elasticsearch.action.DocWriteResponseTests)",
  "startTimestamp": 1474047100086,
  "executionTime": 47
 }
]

[
 "TEST_STARTED",
 "ID#testGetLocation(org.elasticsearch.action.DocWriteResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetLocation(org.elasticsearch.action.DocWriteResponseTests)",
  "startTimestamp": 1474047100134,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.DocWriteResponseTests",
  "startTimestamp": 1474047100066,
  "executionTime": 72
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
   "children": [
    {
     "id": "ID#testClusterPrimariesActive1(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "displayName": "testClusterPrimariesActive1(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "methodName": "testClusterPrimariesActive1",
     "className": "org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
     "children": []
    },
    {
     "id": "ID#testClusterPrimariesActive2(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "displayName": "testClusterPrimariesActive2(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "methodName": "testClusterPrimariesActive2",
     "className": "org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
     "children": []
    },
    {
     "id": "ID#testAlways(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "displayName": "testAlways(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "methodName": "testAlways",
     "className": "org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
     "children": []
    },
    {
     "id": "ID#testClusterAllActive3(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "displayName": "testClusterAllActive3(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "methodName": "testClusterAllActive3",
     "className": "org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
     "children": []
    },
    {
     "id": "ID#testRebalanceWithIgnoredUnassignedShards(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "displayName": "testRebalanceWithIgnoredUnassignedShards(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "methodName": "testRebalanceWithIgnoredUnassignedShards",
     "className": "org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
     "children": []
    },
    {
     "id": "ID#testRebalanceWhileShardFetching(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "displayName": "testRebalanceWhileShardFetching(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "methodName": "testRebalanceWhileShardFetching",
     "className": "org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
     "children": []
    },
    {
     "id": "ID#testClusterAllActive2(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "displayName": "testClusterAllActive2(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "methodName": "testClusterAllActive2",
     "className": "org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
     "children": []
    },
    {
     "id": "ID#testClusterAllActive1(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "displayName": "testClusterAllActive1(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "methodName": "testClusterAllActive1",
     "className": "org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047100162
 }
]

[
 "TEST_STARTED",
 "ID#testClusterPrimariesActive1(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:40,198][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start two nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:40,213][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards for test1, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:40,215][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the test1 replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:40,216][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards for test2, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:40,220][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start 1 more node, check that rebalancing happen (for test1) because we set it to primaries_active%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterPrimariesActive1(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
  "startTimestamp": 1474047100185,
  "executionTime": 37
 }
]

[
 "TEST_STARTED",
 "ID#testClusterPrimariesActive2(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:40,231][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start two nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:40,233][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards for test1, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:40,234][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the test1 replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:40,235][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start 1 more node, check that rebalancing will not happen (for test1) because we set it to primaries_active%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterPrimariesActive2(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
  "startTimestamp": 1474047100222,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testAlways(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:40,246][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start two nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:40,250][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards for test1, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:40,251][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the test1 replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:40,253][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start 1 more node, check that rebalancing will happen (for test1) because we set it to always%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAlways(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
  "startTimestamp": 1474047100236,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testClusterAllActive3(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:40,263][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start two nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:40,264][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards for test1, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:40,266][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the test1 replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:40,267][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards for test2, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:40,268][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start 1 more node, check that rebalancing will not happen (for test1) because we set it to all_active%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterAllActive3(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
  "startTimestamp": 1474047100254,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testRebalanceWithIgnoredUnassignedShards(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:40,287][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start two nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:40,299][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0], [test1][1]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRebalanceWithIgnoredUnassignedShards(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
  "startTimestamp": 1474047100269,
  "executionTime": 30
 }
]

[
 "TEST_STARTED",
 "ID#testRebalanceWhileShardFetching(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:40,312][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start two nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:40,315][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRebalanceWhileShardFetching(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
  "startTimestamp": 1474047100299,
  "executionTime": 37
 }
]

[
 "TEST_STARTED",
 "ID#testClusterAllActive2(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:40,371][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start two nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:40,372][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards for test1, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:40,374][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the test1 replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:40,375][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start 1 more node, check that rebalancing will not happen (for test1) because we set it to all_active%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterAllActive2(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
  "startTimestamp": 1474047100336,
  "executionTime": 40
 }
]

[
 "TEST_STARTED",
 "ID#testClusterAllActive1(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:40,383][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start two nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:40,385][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards for test1, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:40,386][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the test1 replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:40,387][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards for test2, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:40,388][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the test2 replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:40,389][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:40,390][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start 1 more node, check that rebalancing happen (for test1) because we set it to all_active%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterAllActive1(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
  "startTimestamp": 1474047100376,
  "executionTime": 20
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
  "startTimestamp": 1474047100162,
  "executionTime": 238
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.QueryStringQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
   "children": [
    {
     "id": "ID#testToQueryPhraseQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryPhraseQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryPhraseQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testExactGeo(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testExactGeo(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testExactGeo",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryWilcardQueryWithSynonyms(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryWilcardQueryWithSynonyms(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryWilcardQueryWithSynonyms",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryRegExpQueryTooComplex(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryRegExpQueryTooComplex(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryRegExpQueryTooComplex",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryMultipleFieldsDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryMultipleFieldsDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryMultipleFieldsDisMaxQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testPrefixNumeric(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testPrefixNumeric(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testPrefixNumeric",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryPhraseQueryBoostAndSlop(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryPhraseQueryBoostAndSlop(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryPhraseQueryBoostAndSlop",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryDisMaxQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryMatchAllQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryMatchAllQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryMatchAllQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryMultipleTermsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryMultipleTermsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryMultipleTermsBooleanQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFuzzyNumeric(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testFuzzyNumeric(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testFuzzyNumeric",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryRegExpQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryRegExpQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryRegExpQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryMultipleFieldsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryMultipleFieldsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryMultipleFieldsBooleanQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testTimezone(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testTimezone(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testTimezone",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryBooleanQueryMultipleBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryBooleanQueryMultipleBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryBooleanQueryMultipleBoosts",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryFieldsWildcard(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryFieldsWildcard(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryFieldsWildcard",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryTermQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryTermQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryTermQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryBoosts",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryWildcarQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryWildcarQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryWildcarQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047100444
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryPhraseQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:31:40,611][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{lRvmBXOETweQxi8qlhf0Ig}{local}{local[23]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:31:40,635][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:31:40,635][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:31:40,791][WARN ][org.elasticsearch.deprecation.index.mapper]  [MopxAYCI] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:31:40,791][WARN ][org.elasticsearch.deprecation.index.mapper]  [MopxAYCI] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:31:40,791][WARN ][org.elasticsearch.deprecation.index.mapper]  [MopxAYCI] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:31:40,900][WARN ][org.elasticsearch.deprecation.index.mapper]  [MopxAYCI] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:31:40,900][WARN ][org.elasticsearch.deprecation.index.mapper]  [MopxAYCI] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:31:40,900][WARN ][org.elasticsearch.deprecation.index.mapper]  [MopxAYCI] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:31:40,906][WARN ][org.elasticsearch.deprecation.index.mapper]  [MopxAYCI] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:31:40,906][WARN ][org.elasticsearch.deprecation.index.mapper]  [MopxAYCI] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:31:40,906][WARN ][org.elasticsearch.deprecation.index.mapper]  [MopxAYCI] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:31:40,911][WARN ][org.elasticsearch.deprecation.index.mapper]  [MopxAYCI] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:31:40,911][WARN ][org.elasticsearch.deprecation.index.mapper]  [MopxAYCI] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:31:40,911][WARN ][org.elasticsearch.deprecation.index.mapper]  [MopxAYCI] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:31:40,917][WARN ][org.elasticsearch.deprecation.index.mapper]  [MopxAYCI] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:31:40,917][WARN ][org.elasticsearch.deprecation.index.mapper]  [MopxAYCI] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:31:40,917][WARN ][org.elasticsearch.deprecation.index.mapper]  [MopxAYCI] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:31:40,926][WARN ][org.elasticsearch.deprecation.index.mapper]  [MopxAYCI] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:31:40,926][WARN ][org.elasticsearch.deprecation.index.mapper]  [MopxAYCI] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:31:40,926][WARN ][org.elasticsearch.deprecation.index.mapper]  [MopxAYCI] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:31:40,930][WARN ][org.elasticsearch.deprecation.index.mapper]  [MopxAYCI] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:31:40,930][WARN ][org.elasticsearch.deprecation.index.mapper]  [MopxAYCI] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:31:40,930][WARN ][org.elasticsearch.deprecation.index.mapper]  [MopxAYCI] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:31:40,936][WARN ][org.elasticsearch.deprecation.index.mapper]  [MopxAYCI] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:31:40,936][WARN ][org.elasticsearch.deprecation.index.mapper]  [MopxAYCI] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:31:40,936][WARN ][org.elasticsearch.deprecation.index.mapper]  [MopxAYCI] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:31:40,946][WARN ][org.elasticsearch.deprecation.index.mapper]  [MopxAYCI] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:31:40,946][WARN ][org.elasticsearch.deprecation.index.mapper]  [MopxAYCI] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:31:40,946][WARN ][org.elasticsearch.deprecation.index.mapper]  [MopxAYCI] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryPhraseQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474047100477,
  "executionTime": 511
 }
]

[
 "TEST_STARTED",
 "ID#testExactGeo(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExactGeo(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474047100989,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryWilcardQueryWithSynonyms(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryWilcardQueryWithSynonyms(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474047100993,
  "executionTime": 39
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryRegExpQueryTooComplex(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryRegExpQueryTooComplex(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474047101032,
  "executionTime": 93
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474047101125,
  "executionTime": 64
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474047101190,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryMultipleFieldsDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryMultipleFieldsDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474047101204,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testPrefixNumeric(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrefixNumeric(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474047101210,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474047101213,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474047101217,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryPhraseQueryBoostAndSlop(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryPhraseQueryBoostAndSlop(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474047101235,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474047101238,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474047101242,
  "executionTime": 60
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryMatchAllQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryMatchAllQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474047101303,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryMultipleTermsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryMultipleTermsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474047101309,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474047101313,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testFuzzyNumeric(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFuzzyNumeric(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474047101330,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryRegExpQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryRegExpQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474047101334,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474047101351,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryMultipleFieldsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryMultipleFieldsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474047101358,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testTimezone(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimezone(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474047101362,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryBooleanQueryMultipleBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryBooleanQueryMultipleBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474047101368,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474047101372,
  "executionTime": 525
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474047101897,
  "executionTime": 180
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474047102078,
  "executionTime": 49
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryFieldsWildcard(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryFieldsWildcard(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474047102127,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryTermQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryTermQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474047102130,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474047102133,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryWildcarQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryWildcarQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474047102138,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.QueryStringQueryBuilderTests",
  "startTimestamp": 1474047100444,
  "executionTime": 1707
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.DelayedAllocationServiceTests",
   "displayName": "org.elasticsearch.cluster.routing.DelayedAllocationServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.DelayedAllocationServiceTests",
   "children": [
    {
     "id": "ID#testDelayedUnassignedScheduleRerouteRescheduledOnShorterDelay(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
     "displayName": "testDelayedUnassignedScheduleRerouteRescheduledOnShorterDelay(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
     "methodName": "testDelayedUnassignedScheduleRerouteRescheduledOnShorterDelay",
     "className": "org.elasticsearch.cluster.routing.DelayedAllocationServiceTests",
     "children": []
    },
    {
     "id": "ID#testDelayedUnassignedScheduleRerouteAfterDelayedReroute(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
     "displayName": "testDelayedUnassignedScheduleRerouteAfterDelayedReroute(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
     "methodName": "testDelayedUnassignedScheduleRerouteAfterDelayedReroute",
     "className": "org.elasticsearch.cluster.routing.DelayedAllocationServiceTests",
     "children": []
    },
    {
     "id": "ID#testNoDelayedUnassigned(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
     "displayName": "testNoDelayedUnassigned(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
     "methodName": "testNoDelayedUnassigned",
     "className": "org.elasticsearch.cluster.routing.DelayedAllocationServiceTests",
     "children": []
    },
    {
     "id": "ID#testDelayedUnassignedScheduleReroute(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
     "displayName": "testDelayedUnassignedScheduleReroute(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
     "methodName": "testDelayedUnassignedScheduleReroute",
     "className": "org.elasticsearch.cluster.routing.DelayedAllocationServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047102173
 }
]

[
 "TEST_STARTED",
 "ID#testDelayedUnassignedScheduleRerouteRescheduledOnShorterDelay(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:01:43,555][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[foo][0], [bar][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:01:43,573][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [fake node left]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:01:43,575][INFO ][org.elasticsearch.cluster.routing] [node_s_0] scheduling reroute for delayed shards in [29.9s] (1 delayed shards)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:01:43,579][INFO ][org.elasticsearch.cluster.routing] [node_s_0] scheduling reroute for delayed shards in [76.7ms] (2 delayed shards)%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDelayedUnassignedScheduleRerouteRescheduledOnShorterDelay(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
  "startTimestamp": 1474047102195,
  "executionTime": 1385
 }
]

[
 "TEST_STARTED",
 "ID#testDelayedUnassignedScheduleRerouteAfterDelayedReroute(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:01:43,596][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[short_delay][0], [long_delay][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:01:43,597][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:01:43,633][INFO ][org.elasticsearch.cluster.routing] [node_s_0] scheduling reroute for delayed shards in [81.9ms] (2 delayed shards)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:01:43,726][INFO ][org.elasticsearch.cluster.routing] [node_s_0] scheduling reroute for delayed shards in [880.9ms] (1 delayed shards)%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDelayedUnassignedScheduleRerouteAfterDelayedReroute(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
  "startTimestamp": 1474047103580,
  "executionTime": 1044
 }
]

[
 "TEST_STARTED",
 "ID#testNoDelayedUnassigned(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:01:44,640][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:01:44,641][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoDelayedUnassigned(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
  "startTimestamp": 1474047104624,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testDelayedUnassignedScheduleReroute(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:01:44,671][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:01:44,671][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:01:44,672][INFO ][org.elasticsearch.cluster.routing] [node_s_0] scheduling reroute for delayed shards in [63.3ms] (1 delayed shards)%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDelayedUnassignedScheduleReroute(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
  "startTimestamp": 1474047104643,
  "executionTime": 102
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.DelayedAllocationServiceTests",
  "startTimestamp": 1474047102173,
  "executionTime": 2575
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.nodes.TransportNodesActionTests",
   "displayName": "org.elasticsearch.action.support.nodes.TransportNodesActionTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.nodes.TransportNodesActionTests",
   "children": [
    {
     "id": "ID#testNewResponse(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
     "displayName": "testNewResponse(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
     "methodName": "testNewResponse",
     "className": "org.elasticsearch.action.support.nodes.TransportNodesActionTests",
     "children": []
    },
    {
     "id": "ID#testCustomResolving(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
     "displayName": "testCustomResolving(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
     "methodName": "testCustomResolving",
     "className": "org.elasticsearch.action.support.nodes.TransportNodesActionTests",
     "children": []
    },
    {
     "id": "ID#testRequestIsSentToEachNode(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
     "displayName": "testRequestIsSentToEachNode(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
     "methodName": "testRequestIsSentToEachNode",
     "className": "org.elasticsearch.action.support.nodes.TransportNodesActionTests",
     "children": []
    },
    {
     "id": "ID#testNodesSelectors(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
     "displayName": "testNodesSelectors(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
     "methodName": "testNodesSelectors",
     "className": "org.elasticsearch.action.support.nodes.TransportNodesActionTests",
     "children": []
    },
    {
     "id": "ID#testNewResponseNullArray(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
     "displayName": "testNewResponseNullArray(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
     "methodName": "testNewResponseNullArray",
     "className": "org.elasticsearch.action.support.nodes.TransportNodesActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047104763
 }
]

[
 "TEST_STARTED",
 "ID#testNewResponse(org.elasticsearch.action.support.nodes.TransportNodesActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:44,829][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{7665pyzCSjWvjkj8MUsR3w}{local}{local[38]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:44,834][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_0}{node_0}{ycFBesLsRgW-qjhE6t6V1w}{local}{local[39]}{custom=match}, previous {node}{7665pyzCSjWvjkj8MUsR3w}{local}{local[38]}}, removed {{node}{7665pyzCSjWvjkj8MUsR3w}{local}{local[38]},}, added {{node_1}{node_1}{WDcyvD6JS6SlT1pwlEt7Hg}{local}{local[40]}{custom=fEsH},{node_2}{node_2}{7-Qij6LVT6GViMtRVGR_2A}{local}{local[41]}{custom=match},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNewResponse(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
  "startTimestamp": 1474047104809,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testCustomResolving(org.elasticsearch.action.support.nodes.TransportNodesActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:44,919][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{V4P6nYkbR1-xzhD54wmV7w}{local}{local[42]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:44,922][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_4}{node_4}{YbOpTy6xTK-rncdO-65BGw}{local}{local[47]}{custom=bdr}, previous {node}{V4P6nYkbR1-xzhD54wmV7w}{local}{local[42]}}, removed {{node}{V4P6nYkbR1-xzhD54wmV7w}{local}{local[42]},}, added {{node_7}{node_7}{RI-UGRk2Qu-m2iIbujdLEQ}{local}{local[50]}{custom=match},{node_8}{node_8}{QFORB0VvRv6Tgc7j9dQZAw}{local}{local[51]}{custom=Sse},{node_1}{node_1}{5LZA4kUSTyC114cjvbaLxA}{local}{local[44]}{custom=bzzdi},{node_3}{node_3}{HlBlHMDdTEmlX9iP6XpZcw}{local}{local[46]}{custom=jahx},{node_6}{node_6}{Gv7VqWLKQJueEumBHL62iw}{local}{local[49]}{custom=dly},{node_2}{node_2}{6G_24HtVSeOpVvfo-BmxeQ}{local}{local[45]}{custom=chUXE},{node_4}{node_4}{YbOpTy6xTK-rncdO-65BGw}{local}{local[47]}{custom=bdr},{node_5}{node_5}{9aFJZzoUT-GYJxp2uZgsYQ}{local}{local[48]}{custom=EquXH},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCustomResolving(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
  "startTimestamp": 1474047104838,
  "executionTime": 92
 }
]

[
 "TEST_STARTED",
 "ID#testRequestIsSentToEachNode(org.elasticsearch.action.support.nodes.TransportNodesActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:44,936][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{fLkmAcalQcuJeva0tUq56g}{local}{local[52]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:44,949][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{node_1}{aS7Nl6WuTyqwuvzdelv-cg}{local}{local[54]}{custom=HdUFD}, previous {node}{fLkmAcalQcuJeva0tUq56g}{local}{local[52]}}, removed {{node}{fLkmAcalQcuJeva0tUq56g}{local}{local[52]},}, added {{node_1}{node_1}{aS7Nl6WuTyqwuvzdelv-cg}{local}{local[54]}{custom=HdUFD},{node_2}{node_2}{s4Nf41OXQ4ytPyGNZ9kfog}{local}{local[55]}{custom=PXIXr},{node_3}{node_3}{9F7WhKl5TDSgEhHrjsf7sQ}{local}{local[56]}{custom=fVYOq},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRequestIsSentToEachNode(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
  "startTimestamp": 1474047104930,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testNodesSelectors(org.elasticsearch.action.support.nodes.TransportNodesActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:44,987][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{x8pq2pADSNiG26B1CqIATA}{local}{local[57]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:44,989][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_5}{node_5}{tfDnvk_nT4KGjzXK7GIBMw}{local}{local[63]}{custom=match}, previous {node}{x8pq2pADSNiG26B1CqIATA}{local}{local[57]}}, removed {{node}{x8pq2pADSNiG26B1CqIATA}{local}{local[57]},}, added {{node_7}{node_7}{MxbhqawxT52X5drYJgwdgw}{local}{local[65]}{custom=match},{node_3}{node_3}{IoEpZdBXTgWwE-iLLu1Oig}{local}{local[61]}{custom=gsl},{node_6}{node_6}{jdhI9eTjQsuXc3CX_aP4gw}{local}{local[64]}{custom=JKz},{node_2}{node_2}{QMxg0YqQR16Xrs9CtaSJEA}{local}{local[60]}{custom=Jsj},{node_5}{node_5}{tfDnvk_nT4KGjzXK7GIBMw}{local}{local[63]}{custom=match},{node_0}{node_0}{4kuOyVEWQHWV8LXbhVd6yQ}{local}{local[58]}{custom=match},{node_1}{node_1}{MjUovXQCTbWkV3TDlIEb7w}{local}{local[59]}{custom=GxY},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNodesSelectors(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
  "startTimestamp": 1474047104950,
  "executionTime": 41
 }
]

[
 "TEST_STARTED",
 "ID#testNewResponseNullArray(org.elasticsearch.action.support.nodes.TransportNodesActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:44,998][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{gNQG8TCDRTWGdSAxrhIVvA}{local}{local[66]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:31:45,000][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_3}{node_3}{xsNZmkwMR3KFMm-NW5p6wA}{local}{local[70]}{custom=match}, previous {node}{gNQG8TCDRTWGdSAxrhIVvA}{local}{local[66]}}, removed {{node}{gNQG8TCDRTWGdSAxrhIVvA}{local}{local[66]},}, added {{node_5}{node_5}{qBA3zp2dTqi7PjRb3NaEDg}{local}{local[72]}{custom=nRR},{node_2}{node_2}{-H5wPnpnTjO5bxbptemtUw}{local}{local[69]}{custom=match},{node_1}{node_1}{gtcNes8wRbaVikM5LNfuCg}{local}{local[68]}{custom=match},{node_0}{node_0}{F9c48C6AQgG3W71XBpfttA}{local}{local[67]}{custom=yAgJJ},{node_6}{node_6}{kJpNPEBxQxyOWkaV1ZM3Bw}{local}{local[73]}{custom=giX},{node_7}{node_7}{T8pNJWODRzWxSge-MOfEcA}{local}{local[74]}{custom=Ijo},{node_3}{node_3}{xsNZmkwMR3KFMm-NW5p6wA}{local}{local[70]}{custom=match},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNewResponseNullArray(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
  "startTimestamp": 1474047104992,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.nodes.TransportNodesActionTests",
  "startTimestamp": 1474047104763,
  "executionTime": 242
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.ShapeBuilderTests",
   "displayName": "org.elasticsearch.common.geo.ShapeBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
   "children": [
    {
     "id": "ID#testShapeWithPointOnDateline(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testShapeWithPointOnDateline(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testShapeWithPointOnDateline",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInvalidShapeWithConsecutiveDuplicatePoints(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testInvalidShapeWithConsecutiveDuplicatePoints(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testInvalidShapeWithConsecutiveDuplicatePoints",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testShapeWithAlternateOrientation(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testShapeWithAlternateOrientation(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testShapeWithAlternateOrientation",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testComplexShapeWithHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testComplexShapeWithHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testComplexShapeWithHole",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNewRectangle(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testNewRectangle(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testNewRectangle",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testPolygonSelfIntersection(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testPolygonSelfIntersection(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testPolygonSelfIntersection",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testShapeWithEdgeAlongDateline(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testShapeWithEdgeAlongDateline(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testShapeWithEdgeAlongDateline",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNewPolygon_coordinate(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testNewPolygon_coordinate(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testNewPolygon_coordinate",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testShapeWithTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testShapeWithTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testShapeWithTangentialHole",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBoundaryShape(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testBoundaryShape(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testBoundaryShape",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDateline(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testDateline(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testDateline",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testLineStringBuilder(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testLineStringBuilder(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testLineStringBuilder",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBoundaryShapeWithInvalidTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testBoundaryShapeWithInvalidTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testBoundaryShapeWithInvalidTangentialHole",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBoundaryShapeWithTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testBoundaryShapeWithTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testBoundaryShapeWithTangentialHole",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testShapeWithBoundaryHoles(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testShapeWithBoundaryHoles(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testShapeWithBoundaryHoles",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testGeoCircle(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testGeoCircle(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testGeoCircle",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNewPolygon(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testNewPolygon(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testNewPolygon",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMultiLineString(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testMultiLineString(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testMultiLineString",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNewPolygon_coordinates(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testNewPolygon_coordinates(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testNewPolygon_coordinates",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDatelineOGC(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testDatelineOGC(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testDatelineOGC",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testLineStringWrapping(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testLineStringWrapping(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testLineStringWrapping",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNewPoint(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testNewPoint(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testNewPoint",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testShapeWithInvalidTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testShapeWithInvalidTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testShapeWithInvalidTangentialHole",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testShapeWithHoleAtEdgeEndPoints(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testShapeWithHoleAtEdgeEndPoints(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testShapeWithHoleAtEdgeEndPoints",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testPolygonWrapping(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testPolygonWrapping(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testPolygonWrapping",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047105015
 }
]

[
 "TEST_STARTED",
 "ID#testShapeWithPointOnDateline(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShapeWithPointOnDateline(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474047105049,
  "executionTime": 977
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidShapeWithConsecutiveDuplicatePoints(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidShapeWithConsecutiveDuplicatePoints(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474047106027,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testShapeWithAlternateOrientation(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShapeWithAlternateOrientation(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474047106031,
  "executionTime": 34
 }
]

[
 "TEST_STARTED",
 "ID#testComplexShapeWithHole(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testComplexShapeWithHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474047106065,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testNewRectangle(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNewRectangle(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474047106082,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testPolygonSelfIntersection(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPolygonSelfIntersection(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474047106084,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testShapeWithEdgeAlongDateline(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShapeWithEdgeAlongDateline(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474047106100,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testNewPolygon_coordinate(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNewPolygon_coordinate(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474047106104,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testShapeWithTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShapeWithTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474047106107,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testBoundaryShape(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBoundaryShape(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474047106111,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDateline(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDateline(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474047106114,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testLineStringBuilder(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLineStringBuilder(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474047106123,
  "executionTime": 97
 }
]

[
 "TEST_STARTED",
 "ID#testBoundaryShapeWithInvalidTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBoundaryShapeWithInvalidTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474047106220,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testBoundaryShapeWithTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBoundaryShapeWithTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474047106225,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testShapeWithBoundaryHoles(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShapeWithBoundaryHoles(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474047106230,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testGeoCircle(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoCircle(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474047106234,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testNewPolygon(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNewPolygon(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474047106249,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMultiLineString(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiLineString(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474047106252,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNewPolygon_coordinates(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNewPolygon_coordinates(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474047106256,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDatelineOGC(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDatelineOGC(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474047106258,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testLineStringWrapping(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLineStringWrapping(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474047106282,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testNewPoint(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNewPoint(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474047106286,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testShapeWithInvalidTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShapeWithInvalidTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474047106288,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testShapeWithHoleAtEdgeEndPoints(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShapeWithHoleAtEdgeEndPoints(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474047106292,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testPolygonWrapping(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPolygonWrapping(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474047106298,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.ShapeBuilderTests",
  "startTimestamp": 1474047105015,
  "executionTime": 1338
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.terms.TermsAggregatorFactoryTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.terms.TermsAggregatorFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.terms.TermsAggregatorFactoryTests",
   "children": [
    {
     "id": "ID#testSubAggCollectMode(org.elasticsearch.search.aggregations.bucket.terms.TermsAggregatorFactoryTests)",
     "displayName": "testSubAggCollectMode(org.elasticsearch.search.aggregations.bucket.terms.TermsAggregatorFactoryTests)",
     "methodName": "testSubAggCollectMode",
     "className": "org.elasticsearch.search.aggregations.bucket.terms.TermsAggregatorFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047106361
 }
]

[
 "TEST_STARTED",
 "ID#testSubAggCollectMode(org.elasticsearch.search.aggregations.bucket.terms.TermsAggregatorFactoryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:31:46,398][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:31:46,427][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:31:46,427][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:31:46,431][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:31:46,434][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:31:46,434][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:31:46,612][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:31:46,613][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:31:46,613][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[2]}, bound_addresses {local[2]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:31:46,687][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{qWZwhG6dQV-KQr0BJC1rmg}{-8dmhbWjTJq4jGyepLvNrw}{local}{local[2]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:31:46,689][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:31:46,791][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:31:46,968][INFO ][org.elasticsearch.search.aggregations.bucket.terms] [TermsAggregatorFactoryTests#testSubAggCollectMode]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSubAggCollectMode(org.elasticsearch.search.aggregations.bucket.terms.TermsAggregatorFactoryTests)",
  "startTimestamp": 1474047106387,
  "executionTime": 584
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:31:46,971][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:31:46,972][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:31:46,973][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:31:46,975][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.terms.TermsAggregatorFactoryTests",
  "startTimestamp": 1474047106361,
  "executionTime": 620
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.IndicesQueryCacheTests",
   "displayName": "org.elasticsearch.indices.IndicesQueryCacheTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.IndicesQueryCacheTests",
   "children": [
    {
     "id": "ID#testBasics(org.elasticsearch.indices.IndicesQueryCacheTests)",
     "displayName": "testBasics(org.elasticsearch.indices.IndicesQueryCacheTests)",
     "methodName": "testBasics",
     "className": "org.elasticsearch.indices.IndicesQueryCacheTests",
     "children": []
    },
    {
     "id": "ID#testTwoShards(org.elasticsearch.indices.IndicesQueryCacheTests)",
     "displayName": "testTwoShards(org.elasticsearch.indices.IndicesQueryCacheTests)",
     "methodName": "testTwoShards",
     "className": "org.elasticsearch.indices.IndicesQueryCacheTests",
     "children": []
    },
    {
     "id": "ID#testStatsOnEviction(org.elasticsearch.indices.IndicesQueryCacheTests)",
     "displayName": "testStatsOnEviction(org.elasticsearch.indices.IndicesQueryCacheTests)",
     "methodName": "testStatsOnEviction",
     "className": "org.elasticsearch.indices.IndicesQueryCacheTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047106989
 }
]

[
 "TEST_STARTED",
 "ID#testBasics(org.elasticsearch.indices.IndicesQueryCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasics(org.elasticsearch.indices.IndicesQueryCacheTests)",
  "startTimestamp": 1474047107011,
  "executionTime": 424
 }
]

[
 "TEST_STARTED",
 "ID#testTwoShards(org.elasticsearch.indices.IndicesQueryCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTwoShards(org.elasticsearch.indices.IndicesQueryCacheTests)",
  "startTimestamp": 1474047107436,
  "executionTime": 109
 }
]

[
 "TEST_STARTED",
 "ID#testStatsOnEviction(org.elasticsearch.indices.IndicesQueryCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStatsOnEviction(org.elasticsearch.indices.IndicesQueryCacheTests)",
  "startTimestamp": 1474047107545,
  "executionTime": 55
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.IndicesQueryCacheTests",
  "startTimestamp": 1474047106989,
  "executionTime": 613
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.unit.ByteSizeUnitTests",
   "displayName": "org.elasticsearch.common.unit.ByteSizeUnitTests",
   "methodName": null,
   "className": "org.elasticsearch.common.unit.ByteSizeUnitTests",
   "children": [
    {
     "id": "ID#testBytes(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "displayName": "testBytes(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "methodName": "testBytes",
     "className": "org.elasticsearch.common.unit.ByteSizeUnitTests",
     "children": []
    },
    {
     "id": "ID#testMB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "displayName": "testMB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "methodName": "testMB",
     "className": "org.elasticsearch.common.unit.ByteSizeUnitTests",
     "children": []
    },
    {
     "id": "ID#testGB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "displayName": "testGB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "methodName": "testGB",
     "className": "org.elasticsearch.common.unit.ByteSizeUnitTests",
     "children": []
    },
    {
     "id": "ID#testTB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "displayName": "testTB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "methodName": "testTB",
     "className": "org.elasticsearch.common.unit.ByteSizeUnitTests",
     "children": []
    },
    {
     "id": "ID#testKB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "displayName": "testKB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "methodName": "testKB",
     "className": "org.elasticsearch.common.unit.ByteSizeUnitTests",
     "children": []
    },
    {
     "id": "ID#testPB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "displayName": "testPB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "methodName": "testPB",
     "className": "org.elasticsearch.common.unit.ByteSizeUnitTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047107635
 }
]

[
 "TEST_STARTED",
 "ID#testBytes(org.elasticsearch.common.unit.ByteSizeUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBytes(org.elasticsearch.common.unit.ByteSizeUnitTests)",
  "startTimestamp": 1474047107739,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMB(org.elasticsearch.common.unit.ByteSizeUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
  "startTimestamp": 1474047107741,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testGB(org.elasticsearch.common.unit.ByteSizeUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
  "startTimestamp": 1474047107758,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testTB(org.elasticsearch.common.unit.ByteSizeUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
  "startTimestamp": 1474047107763,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testKB(org.elasticsearch.common.unit.ByteSizeUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testKB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
  "startTimestamp": 1474047107765,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testPB(org.elasticsearch.common.unit.ByteSizeUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
  "startTimestamp": 1474047107767,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.unit.ByteSizeUnitTests",
  "startTimestamp": 1474047107635,
  "executionTime": 1598
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.action.shard.ShardStateActionTests",
   "displayName": "org.elasticsearch.cluster.action.shard.ShardStateActionTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.action.shard.ShardStateActionTests",
   "children": [
    {
     "id": "ID#testMasterChannelException(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "displayName": "testMasterChannelException(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "methodName": "testMasterChannelException",
     "className": "org.elasticsearch.cluster.action.shard.ShardStateActionTests",
     "children": []
    },
    {
     "id": "ID#testShardNotFound(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "displayName": "testShardNotFound(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "methodName": "testShardNotFound",
     "className": "org.elasticsearch.cluster.action.shard.ShardStateActionTests",
     "children": []
    },
    {
     "id": "ID#testNoLongerPrimaryShardException(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "displayName": "testNoLongerPrimaryShardException(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "methodName": "testNoLongerPrimaryShardException",
     "className": "org.elasticsearch.cluster.action.shard.ShardStateActionTests",
     "children": []
    },
    {
     "id": "ID#testUnhandledFailure(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "displayName": "testUnhandledFailure(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "methodName": "testUnhandledFailure",
     "className": "org.elasticsearch.cluster.action.shard.ShardStateActionTests",
     "children": []
    },
    {
     "id": "ID#testNoMaster(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "displayName": "testNoMaster(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "methodName": "testNoMaster",
     "className": "org.elasticsearch.cluster.action.shard.ShardStateActionTests",
     "children": []
    },
    {
     "id": "ID#testSuccess(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "displayName": "testSuccess(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "methodName": "testSuccess",
     "className": "org.elasticsearch.cluster.action.shard.ShardStateActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047109244
 }
]

[
 "TEST_STARTED",
 "ID#testMasterChannelException(org.elasticsearch.cluster.action.shard.ShardStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:31:49,281][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{MiShehVNQiejSUE2pBpMbQ}{local}{local[75]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:31:49,293][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{3RRwXplMRAuyClkZd4K7KA}{local}{local[77]}, previous {node}{MiShehVNQiejSUE2pBpMbQ}{local}{local[75]}}, removed {{node}{MiShehVNQiejSUE2pBpMbQ}{local}{local[75]},}, added {{node_4}{ru2MzafzR66ev67vLcNkFA}{local}{local[80]},{node_1}{3RRwXplMRAuyClkZd4K7KA}{local}{local[77]},{node_2}{Td2RsXnrQWCWc5JITgs0_w}{local}{local[78]},{node_3}{7SZXtzGUQtG36ZKb9SGROQ}{local}{local[79]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:31:49,331][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_0}{1eXXDrCFTmi_z-ZyClSOeQ}{local}{local[76]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMasterChannelException(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
  "startTimestamp": 1474047109273,
  "executionTime": 493
 }
]

[
 "TEST_STARTED",
 "ID#testShardNotFound(org.elasticsearch.cluster.action.shard.ShardStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:31:49,788][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{dxwNK0OkQkCQq20cIg-T1A}{local}{local[84]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:31:49,794][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{FwO6tNYuRRuTtGp3Q0D2Hw}{local}{local[86]}, previous {node}{dxwNK0OkQkCQq20cIg-T1A}{local}{local[84]}}, removed {{node}{dxwNK0OkQkCQq20cIg-T1A}{local}{local[84]},}, added {{node_4}{splP7Hq_QZS8I58-hmRlFg}{local}{local[89]},{node_1}{FwO6tNYuRRuTtGp3Q0D2Hw}{local}{local[86]},{node_2}{G-bHRzEGQ-inYEYVJr-RVA}{local}{local[87]},{node_3}{BJxZMMJgQm6mJFpzeuYw7Q}{local}{local[88]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardNotFound(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
  "startTimestamp": 1474047109766,
  "executionTime": 31
 }
]

[
 "TEST_STARTED",
 "ID#testNoLongerPrimaryShardException(org.elasticsearch.cluster.action.shard.ShardStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:31:49,804][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{tCbmz9CRRXuiq8VgxQbf-w}{local}{local[93]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:31:49,807][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{pZuT2ephTkKsQUWmDF3IJw}{local}{local[95]}, previous {node}{tCbmz9CRRXuiq8VgxQbf-w}{local}{local[93]}}, removed {{node}{tCbmz9CRRXuiq8VgxQbf-w}{local}{local[93]},}, added {{node_4}{zhDF1R3OTcqW2qg4eDSOPg}{local}{local[98]},{node_1}{pZuT2ephTkKsQUWmDF3IJw}{local}{local[95]},{node_2}{noPh1arOT56hy_iaSuUkzg}{local}{local[96]},{node_3}{dmVUWCpWTGGBONRSRuw77Q}{local}{local[97]},{node_5}{ZcGa4yXeRDOE9_DBDwcU5Q}{local}{local[99]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-16 14:31:49,815 TEST-ShardStateActionTests.testNoLongerPrimaryShardException-seed#[229C635BFFC33CB2] ERROR An exception occurred processing Appender console java.security.AccessControlException: access denied (\"java.lang.RuntimePermission\" \"accessClassInPackage.sun.reflect\")%0D%0A%09at java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)%0D%0A%09at java.security.AccessController.checkPermission(AccessController.java:884)%0D%0A%09at java.lang.SecurityManager.checkPermission(SecurityManager.java:549)%0D%0A%09at java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1564)%0D%0A%09at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:311)%0D%0A%09at java.lang.ClassLoader.loadClass(ClassLoader.java:357)%0D%0A%09at java.lang.Class.forName0(Native Method)%0D%0A%09at java.lang.Class.forName(Class.java:264)%0D%0A%09at org.apache.logging.log4j.util.LoaderUtil.loadClass(LoaderUtil.java:122)%0D%0A%09at org.apache.logging.log4j.core.util.Loader.loadClass(Loader.java:228)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.loadClass(ThrowableProxy.java:496)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.toExtendedStackTrace(ThrowableProxy.java:617)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:163)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:138)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:117)%0D%0A%09at org.apache.logging.log4j.core.impl.MutableLogEvent.getThrownProxy(MutableLogEvent.java:314)%0D%0A%09at org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter.format(ExtendedThrowablePatternConverter.java:61)%0D%0A%09at org.apache.logging.log4j.core.pattern.PatternFormatter.format(PatternFormatter.java:38)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout$PatternSerializer.toSerializable(PatternLayout.java:294)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.toText(PatternLayout.java:195)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:180)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:57)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.directEncodeEvent(AbstractOutputStreamAppender.java:120)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.tryAppend(AbstractOutputStreamAppender.java:113)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.append(AbstractOutputStreamAppender.java:104)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.tryCallAppender(AppenderControl.java:155)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender0(AppenderControl.java:128)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppenderPreventRecursion(AppenderControl.java:119)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender(AppenderControl.java:84)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.callAppenders(LoggerConfig.java:390)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:375)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:359)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:349)%0D%0A%09at org.apache.logging.log4j.core.config.AwaitCompletionReliabilityStrategy.log(AwaitCompletionReliabilityStrategy.java:63)%0D%0A%09at org.apache.logging.log4j.core.Logger.logMessage(Logger.java:146)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logMessage(AbstractLogger.java:1983)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled(AbstractLogger.java:1845)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.warn(AbstractLogger.java:2536)%0D%0A%09at org.elasticsearch.cluster.action.shard.ShardStateAction$1.handleException(ShardStateAction.java:113)%0D%0A%09at org.elasticsearch.transport.TransportService$ContextRestoreResponseHandler.handleException(TransportService.java:957)%0D%0A%09at org.elasticsearch.test.transport.CapturingTransport.handleError(CapturingTransport.java:184)%0D%0A%09at org.elasticsearch.test.transport.CapturingTransport.handleRemoteError(CapturingTransport.java:169)%0D%0A%09at org.elasticsearch.cluster.action.shard.ShardStateActionTests.testNoLongerPrimaryShardException(ShardStateActionTests.java:360)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0D%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0D%0A%09at java.lang.reflect.Method.invoke(Method.java:498)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at java.lang.Thread.run(Thread.java:745)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoLongerPrimaryShardException(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
  "startTimestamp": 1474047109798,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testUnhandledFailure(org.elasticsearch.cluster.action.shard.ShardStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:31:49,830][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{PJKyDB9oSYaOi7F6nTUaKA}{local}{local[103]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:31:49,832][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{QSctopy0QSqdSSRKTIMjwQ}{local}{local[105]}, previous {node}{PJKyDB9oSYaOi7F6nTUaKA}{local}{local[103]}}, removed {{node}{PJKyDB9oSYaOi7F6nTUaKA}{local}{local[103]},}, added {{node_1}{QSctopy0QSqdSSRKTIMjwQ}{local}{local[105]},{node_2}{r4SaOgSPSDeWounIL7mUqw}{local}{local[106]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-16 14:31:49,835 TEST-ShardStateActionTests.testUnhandledFailure-seed#[229C635BFFC33CB2] ERROR An exception occurred processing Appender console java.security.AccessControlException: access denied (\"java.lang.RuntimePermission\" \"accessClassInPackage.sun.reflect\")%0D%0A%09at java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)%0D%0A%09at java.security.AccessController.checkPermission(AccessController.java:884)%0D%0A%09at java.lang.SecurityManager.checkPermission(SecurityManager.java:549)%0D%0A%09at java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1564)%0D%0A%09at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:311)%0D%0A%09at java.lang.ClassLoader.loadClass(ClassLoader.java:357)%0D%0A%09at java.lang.Class.forName0(Native Method)%0D%0A%09at java.lang.Class.forName(Class.java:264)%0D%0A%09at org.apache.logging.log4j.util.LoaderUtil.loadClass(LoaderUtil.java:122)%0D%0A%09at org.apache.logging.log4j.core.util.Loader.loadClass(Loader.java:228)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.loadClass(ThrowableProxy.java:496)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.toExtendedStackTrace(ThrowableProxy.java:617)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:163)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:138)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:117)%0D%0A%09at org.apache.logging.log4j.core.impl.MutableLogEvent.getThrownProxy(MutableLogEvent.java:314)%0D%0A%09at org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter.format(ExtendedThrowablePatternConverter.java:61)%0D%0A%09at org.apache.logging.log4j.core.pattern.PatternFormatter.format(PatternFormatter.java:38)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout$PatternSerializer.toSerializable(PatternLayout.java:294)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.toText(PatternLayout.java:195)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:180)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:57)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.directEncodeEvent(AbstractOutputStreamAppender.java:120)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.tryAppend(AbstractOutputStreamAppender.java:113)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.append(AbstractOutputStreamAppender.java:104)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.tryCallAppender(AppenderControl.java:155)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender0(AppenderControl.java:128)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppenderPreventRecursion(AppenderControl.java:119)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender(AppenderControl.java:84)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.callAppenders(LoggerConfig.java:390)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:375)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:359)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:349)%0D%0A%09at org.apache.logging.log4j.core.config.AwaitCompletionReliabilityStrategy.log(AwaitCompletionReliabilityStrategy.java:63)%0D%0A%09at org.apache.logging.log4j.core.Logger.logMessage(Logger.java:146)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logMessage(AbstractLogger.java:1983)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled(AbstractLogger.java:1845)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.warn(AbstractLogger.java:2536)%0D%0A%09at org.elasticsearch.cluster.action.shard.ShardStateAction$1.handleException(ShardStateAction.java:113)%0D%0A%09at org.elasticsearch.transport.TransportService$ContextRestoreResponseHandler.handleException(TransportService.java:957)%0D%0A%09at org.elasticsearch.test.transport.CapturingTransport.handleError(CapturingTransport.java:184)%0D%0A%09at org.elasticsearch.test.transport.CapturingTransport.handleRemoteError(CapturingTransport.java:169)%0D%0A%09at org.elasticsearch.cluster.action.shard.ShardStateActionTests.testUnhandledFailure(ShardStateActionTests.java:292)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0D%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0D%0A%09at java.lang.reflect.Method.invoke(Method.java:498)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at java.lang.Thread.run(Thread.java:745)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnhandledFailure(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
  "startTimestamp": 1474047109821,
  "executionTime": 25
 }
]

[
 "TEST_STARTED",
 "ID#testNoMaster(org.elasticsearch.cluster.action.shard.ShardStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:31:49,856][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{YfQ1fQGoRE-ddbNVhVzGbg}{local}{local[110]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:31:49,859][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{OCQRna2LTZeBkU6LnKxDiA}{local}{local[112]}, previous {node}{YfQ1fQGoRE-ddbNVhVzGbg}{local}{local[110]}}, removed {{node}{YfQ1fQGoRE-ddbNVhVzGbg}{local}{local[110]},}, added {{node_1}{OCQRna2LTZeBkU6LnKxDiA}{local}{local[112]},{node_2}{ZE1HcuHpTyWngtybgDlJ6Q}{local}{local[113]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:31:49,861][WARN ][org.elasticsearch.cluster.action.shard] [node_s_0] [test][0] no master known for action [internal:cluster/shard/failure] for shard entry [shard id [[test][0]], allocation id [WF5Cwi9QTi-zRWgQNY7PNg], primary term [0], message [test], failure [CorruptIndexException[simulated (resource=null)]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:31:49,862][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_0}{k_qniCqMT2StyC5MXNUFdw}{local}{local[111]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoMaster(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
  "startTimestamp": 1474047109846,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testSuccess(org.elasticsearch.cluster.action.shard.ShardStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:31:49,870][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{0su7e45MQYigl4k4Lb1xmw}{local}{local[117]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:31:49,872][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{qb3C6d6gQq-YoxxPa4zSsQ}{local}{local[119]}, previous {node}{0su7e45MQYigl4k4Lb1xmw}{local}{local[117]}}, removed {{node}{0su7e45MQYigl4k4Lb1xmw}{local}{local[117]},}, added {{node_4}{xIkDX16zSZKgx5XlYk81Nw}{local}{local[122]},{node_1}{qb3C6d6gQq-YoxxPa4zSsQ}{local}{local[119]},{node_2}{DwKWqrheR8CiBSMmv0f_Og}{local}{local[120]},{node_3}{Rm1IbvzvQXCwRYuXswfM7A}{local}{local[121]},{node_5}{FiUK46B1TZqSN0KHMge7qw}{local}{local[123]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSuccess(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
  "startTimestamp": 1474047109862,
  "executionTime": 15
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.action.shard.ShardStateActionTests",
  "startTimestamp": 1474047109244,
  "executionTime": 636
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
   "children": [
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueForSearch(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "displayName": "testValueForSearch(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "methodName": "testValueForSearch",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testTermsQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "displayName": "testTermsQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "methodName": "testTermsQuery",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFieldData(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "displayName": "testFieldData(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "methodName": "testFieldData",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testRangeQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "displayName": "testRangeQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "methodName": "testRangeQuery",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testTermQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "displayName": "testTermQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "methodName": "testTermQuery",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testStats(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "displayName": "testStats(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "methodName": "testStats",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047109927
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
  "startTimestamp": 1474047109964,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testValueForSearch(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueForSearch(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
  "startTimestamp": 1474047109978,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testTermsQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermsQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
  "startTimestamp": 1474047109980,
  "executionTime": 44
 }
]

[
 "TEST_STARTED",
 "ID#testFieldData(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldData(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
  "startTimestamp": 1474047110024,
  "executionTime": 517
 }
]

[
 "TEST_STARTED",
 "ID#testRangeQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRangeQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
  "startTimestamp": 1474047110541,
  "executionTime": 875
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
  "startTimestamp": 1474047111416,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testTermQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
  "startTimestamp": 1474047111419,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
  "startTimestamp": 1474047111421,
  "executionTime": 98
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
  "startTimestamp": 1474047111519,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testStats(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStats(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
  "startTimestamp": 1474047111521,
  "executionTime": 206
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
  "startTimestamp": 1474047111727,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
  "startTimestamp": 1474047109927,
  "executionTime": 1813
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.cluster.storedscripts.GetStoredScriptRequestTests",
   "displayName": "org.elasticsearch.action.admin.cluster.storedscripts.GetStoredScriptRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.cluster.storedscripts.GetStoredScriptRequestTests",
   "children": [
    {
     "id": "ID#testGetIndexedScriptRequestSerialization(org.elasticsearch.action.admin.cluster.storedscripts.GetStoredScriptRequestTests)",
     "displayName": "testGetIndexedScriptRequestSerialization(org.elasticsearch.action.admin.cluster.storedscripts.GetStoredScriptRequestTests)",
     "methodName": "testGetIndexedScriptRequestSerialization",
     "className": "org.elasticsearch.action.admin.cluster.storedscripts.GetStoredScriptRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047111746
 }
]

[
 "TEST_STARTED",
 "ID#testGetIndexedScriptRequestSerialization(org.elasticsearch.action.admin.cluster.storedscripts.GetStoredScriptRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetIndexedScriptRequestSerialization(org.elasticsearch.action.admin.cluster.storedscripts.GetStoredScriptRequestTests)",
  "startTimestamp": 1474047111789,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.cluster.storedscripts.GetStoredScriptRequestTests",
  "startTimestamp": 1474047111746,
  "executionTime": 48
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.OperatorTests",
   "displayName": "org.elasticsearch.index.query.OperatorTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.OperatorTests",
   "children": [
    {
     "id": "ID#testFromString(org.elasticsearch.index.query.OperatorTests)",
     "displayName": "testFromString(org.elasticsearch.index.query.OperatorTests)",
     "methodName": "testFromString",
     "className": "org.elasticsearch.index.query.OperatorTests",
     "children": []
    },
    {
     "id": "ID#testToQueryParserOperator(org.elasticsearch.index.query.OperatorTests)",
     "displayName": "testToQueryParserOperator(org.elasticsearch.index.query.OperatorTests)",
     "methodName": "testToQueryParserOperator",
     "className": "org.elasticsearch.index.query.OperatorTests",
     "children": []
    },
    {
     "id": "ID#testReadFrom(org.elasticsearch.index.query.OperatorTests)",
     "displayName": "testReadFrom(org.elasticsearch.index.query.OperatorTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.index.query.OperatorTests",
     "children": []
    },
    {
     "id": "ID#testWriteTo(org.elasticsearch.index.query.OperatorTests)",
     "displayName": "testWriteTo(org.elasticsearch.index.query.OperatorTests)",
     "methodName": "testWriteTo",
     "className": "org.elasticsearch.index.query.OperatorTests",
     "children": []
    },
    {
     "id": "ID#testToBooleanClauseOccur(org.elasticsearch.index.query.OperatorTests)",
     "displayName": "testToBooleanClauseOccur(org.elasticsearch.index.query.OperatorTests)",
     "methodName": "testToBooleanClauseOccur",
     "className": "org.elasticsearch.index.query.OperatorTests",
     "children": []
    },
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.index.query.OperatorTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.index.query.OperatorTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.index.query.OperatorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047111801
 }
]

[
 "TEST_STARTED",
 "ID#testFromString(org.elasticsearch.index.query.OperatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromString(org.elasticsearch.index.query.OperatorTests)",
  "startTimestamp": 1474047112111,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryParserOperator(org.elasticsearch.index.query.OperatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryParserOperator(org.elasticsearch.index.query.OperatorTests)",
  "startTimestamp": 1474047112113,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.index.query.OperatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.index.query.OperatorTests)",
  "startTimestamp": 1474047112118,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWriteTo(org.elasticsearch.index.query.OperatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteTo(org.elasticsearch.index.query.OperatorTests)",
  "startTimestamp": 1474047112120,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToBooleanClauseOccur(org.elasticsearch.index.query.OperatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBooleanClauseOccur(org.elasticsearch.index.query.OperatorTests)",
  "startTimestamp": 1474047112122,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.index.query.OperatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.index.query.OperatorTests)",
  "startTimestamp": 1474047112124,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.OperatorTests",
  "startTimestamp": 1474047111801,
  "executionTime": 329
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests",
   "displayName": "org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests",
   "children": [
    {
     "id": "ID#testSetSource(org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests)",
     "displayName": "testSetSource(org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests)",
     "methodName": "testSetSource",
     "className": "org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSetSettings(org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests)",
     "displayName": "testSetSettings(org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests)",
     "methodName": "testSetSettings",
     "className": "org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047112139
 }
]

[
 "TEST_STARTED",
 "ID#testSetSource(org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetSource(org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests)",
  "startTimestamp": 1474047112291,
  "executionTime": 116
 }
]

[
 "TEST_STARTED",
 "ID#testSetSettings(org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetSettings(org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests)",
  "startTimestamp": 1474047112407,
  "executionTime": 29
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests",
  "startTimestamp": 1474047112139,
  "executionTime": 299
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.ingest.TrackingResultProcessorTests",
   "displayName": "org.elasticsearch.action.ingest.TrackingResultProcessorTests",
   "methodName": null,
   "className": "org.elasticsearch.action.ingest.TrackingResultProcessorTests",
   "children": [
    {
     "id": "ID#testActualCompoundProcessorWithoutOnFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
     "displayName": "testActualCompoundProcessorWithoutOnFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
     "methodName": "testActualCompoundProcessorWithoutOnFailure",
     "className": "org.elasticsearch.action.ingest.TrackingResultProcessorTests",
     "children": []
    },
    {
     "id": "ID#testActualCompoundProcessorWithOnFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
     "displayName": "testActualCompoundProcessorWithOnFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
     "methodName": "testActualCompoundProcessorWithOnFailure",
     "className": "org.elasticsearch.action.ingest.TrackingResultProcessorTests",
     "children": []
    },
    {
     "id": "ID#testActualProcessor(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
     "displayName": "testActualProcessor(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
     "methodName": "testActualProcessor",
     "className": "org.elasticsearch.action.ingest.TrackingResultProcessorTests",
     "children": []
    },
    {
     "id": "ID#testActualCompoundProcessorWithIgnoreFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
     "displayName": "testActualCompoundProcessorWithIgnoreFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
     "methodName": "testActualCompoundProcessorWithIgnoreFailure",
     "className": "org.elasticsearch.action.ingest.TrackingResultProcessorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047112575
 }
]

[
 "TEST_STARTED",
 "ID#testActualCompoundProcessorWithoutOnFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActualCompoundProcessorWithoutOnFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
  "startTimestamp": 1474047112593,
  "executionTime": 84
 }
]

[
 "TEST_STARTED",
 "ID#testActualCompoundProcessorWithOnFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActualCompoundProcessorWithOnFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
  "startTimestamp": 1474047112677,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testActualProcessor(org.elasticsearch.action.ingest.TrackingResultProcessorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActualProcessor(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
  "startTimestamp": 1474047112700,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testActualCompoundProcessorWithIgnoreFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActualCompoundProcessorWithIgnoreFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
  "startTimestamp": 1474047112712,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.ingest.TrackingResultProcessorTests",
  "startTimestamp": 1474047112575,
  "executionTime": 150
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.script.FileScriptTests",
   "displayName": "org.elasticsearch.script.FileScriptTests",
   "methodName": null,
   "className": "org.elasticsearch.script.FileScriptTests",
   "children": [
    {
     "id": "ID#testFileScriptFound(org.elasticsearch.script.FileScriptTests)",
     "displayName": "testFileScriptFound(org.elasticsearch.script.FileScriptTests)",
     "methodName": "testFileScriptFound",
     "className": "org.elasticsearch.script.FileScriptTests",
     "children": []
    },
    {
     "id": "ID#testAllOpsDisabled(org.elasticsearch.script.FileScriptTests)",
     "displayName": "testAllOpsDisabled(org.elasticsearch.script.FileScriptTests)",
     "methodName": "testAllOpsDisabled",
     "className": "org.elasticsearch.script.FileScriptTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047112734
 }
]

[
 "TEST_STARTED",
 "ID#testFileScriptFound(org.elasticsearch.script.FileScriptTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:31:52,789][INFO ][org.elasticsearch.script ] [node_s_0] compiling script file [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J2\\temp\\org.elasticsearch.script.FileScriptTests_229C635BFFC33CB2-001\\tempDir-001\\config\\scripts\\script1.mockscript]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFileScriptFound(org.elasticsearch.script.FileScriptTests)",
  "startTimestamp": 1474047112760,
  "executionTime": 81
 }
]

[
 "TEST_STARTED",
 "ID#testAllOpsDisabled(org.elasticsearch.script.FileScriptTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:31:52,879][WARN ][org.elasticsearch.script ] [node_s_0] skipping compile of script file [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J2\\temp\\org.elasticsearch.script.FileScriptTests_229C635BFFC33CB2-001\\tempDir-002\\config\\scripts\\script1.mockscript] as all scripted operations are disabled for file scripts%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllOpsDisabled(org.elasticsearch.script.FileScriptTests)",
  "startTimestamp": 1474047112841,
  "executionTime": 40
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.script.FileScriptTests",
  "startTimestamp": 1474047112734,
  "executionTime": 186
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.BooleansTests",
   "displayName": "org.elasticsearch.common.BooleansTests",
   "methodName": null,
   "className": "org.elasticsearch.common.BooleansTests",
   "children": [
    {
     "id": "ID#testParseBoolean(org.elasticsearch.common.BooleansTests)",
     "displayName": "testParseBoolean(org.elasticsearch.common.BooleansTests)",
     "methodName": "testParseBoolean",
     "className": "org.elasticsearch.common.BooleansTests",
     "children": []
    },
    {
     "id": "ID#testIsExplicit(org.elasticsearch.common.BooleansTests)",
     "displayName": "testIsExplicit(org.elasticsearch.common.BooleansTests)",
     "methodName": "testIsExplicit",
     "className": "org.elasticsearch.common.BooleansTests",
     "children": []
    },
    {
     "id": "ID#testParseBooleanExact(org.elasticsearch.common.BooleansTests)",
     "displayName": "testParseBooleanExact(org.elasticsearch.common.BooleansTests)",
     "methodName": "testParseBooleanExact",
     "className": "org.elasticsearch.common.BooleansTests",
     "children": []
    },
    {
     "id": "ID#testIsBoolean(org.elasticsearch.common.BooleansTests)",
     "displayName": "testIsBoolean(org.elasticsearch.common.BooleansTests)",
     "methodName": "testIsBoolean",
     "className": "org.elasticsearch.common.BooleansTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047112933
 }
]

[
 "TEST_STARTED",
 "ID#testParseBoolean(org.elasticsearch.common.BooleansTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseBoolean(org.elasticsearch.common.BooleansTests)",
  "startTimestamp": 1474047112968,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIsExplicit(org.elasticsearch.common.BooleansTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsExplicit(org.elasticsearch.common.BooleansTests)",
  "startTimestamp": 1474047112971,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseBooleanExact(org.elasticsearch.common.BooleansTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseBooleanExact(org.elasticsearch.common.BooleansTests)",
  "startTimestamp": 1474047112973,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsBoolean(org.elasticsearch.common.BooleansTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsBoolean(org.elasticsearch.common.BooleansTests)",
  "startTimestamp": 1474047112975,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.BooleansTests",
  "startTimestamp": 1474047112933,
  "executionTime": 46
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.CollectionUtilsTests",
   "displayName": "org.elasticsearch.common.util.CollectionUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.CollectionUtilsTests",
   "children": [
    {
     "id": "ID#testPerfectPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
     "displayName": "testPerfectPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
     "methodName": "testPerfectPartition",
     "className": "org.elasticsearch.common.util.CollectionUtilsTests",
     "children": []
    },
    {
     "id": "ID#testSortAndDedupByteRefArray(org.elasticsearch.common.util.CollectionUtilsTests)",
     "displayName": "testSortAndDedupByteRefArray(org.elasticsearch.common.util.CollectionUtilsTests)",
     "methodName": "testSortAndDedupByteRefArray",
     "className": "org.elasticsearch.common.util.CollectionUtilsTests",
     "children": []
    },
    {
     "id": "ID#testSortByteRefArray(org.elasticsearch.common.util.CollectionUtilsTests)",
     "displayName": "testSortByteRefArray(org.elasticsearch.common.util.CollectionUtilsTests)",
     "methodName": "testSortByteRefArray",
     "className": "org.elasticsearch.common.util.CollectionUtilsTests",
     "children": []
    },
    {
     "id": "ID#testRotate(org.elasticsearch.common.util.CollectionUtilsTests)",
     "displayName": "testRotate(org.elasticsearch.common.util.CollectionUtilsTests)",
     "methodName": "testRotate",
     "className": "org.elasticsearch.common.util.CollectionUtilsTests",
     "children": []
    },
    {
     "id": "ID#testEmptyPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
     "displayName": "testEmptyPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
     "methodName": "testEmptyPartition",
     "className": "org.elasticsearch.common.util.CollectionUtilsTests",
     "children": []
    },
    {
     "id": "ID#testOversizedPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
     "displayName": "testOversizedPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
     "methodName": "testOversizedPartition",
     "className": "org.elasticsearch.common.util.CollectionUtilsTests",
     "children": []
    },
    {
     "id": "ID#testSimplePartition(org.elasticsearch.common.util.CollectionUtilsTests)",
     "displayName": "testSimplePartition(org.elasticsearch.common.util.CollectionUtilsTests)",
     "methodName": "testSimplePartition",
     "className": "org.elasticsearch.common.util.CollectionUtilsTests",
     "children": []
    },
    {
     "id": "ID#testSingletonPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
     "displayName": "testSingletonPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
     "methodName": "testSingletonPartition",
     "className": "org.elasticsearch.common.util.CollectionUtilsTests",
     "children": []
    },
    {
     "id": "ID#testRotateEmpty(org.elasticsearch.common.util.CollectionUtilsTests)",
     "displayName": "testRotateEmpty(org.elasticsearch.common.util.CollectionUtilsTests)",
     "methodName": "testRotateEmpty",
     "className": "org.elasticsearch.common.util.CollectionUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047112990
 }
]

[
 "TEST_STARTED",
 "ID#testPerfectPartition(org.elasticsearch.common.util.CollectionUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPerfectPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
  "startTimestamp": 1474047113018,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSortAndDedupByteRefArray(org.elasticsearch.common.util.CollectionUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortAndDedupByteRefArray(org.elasticsearch.common.util.CollectionUtilsTests)",
  "startTimestamp": 1474047113023,
  "executionTime": 116
 }
]

[
 "TEST_STARTED",
 "ID#testSortByteRefArray(org.elasticsearch.common.util.CollectionUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortByteRefArray(org.elasticsearch.common.util.CollectionUtilsTests)",
  "startTimestamp": 1474047113139,
  "executionTime": 84
 }
]

[
 "TEST_STARTED",
 "ID#testRotate(org.elasticsearch.common.util.CollectionUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRotate(org.elasticsearch.common.util.CollectionUtilsTests)",
  "startTimestamp": 1474047113223,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyPartition(org.elasticsearch.common.util.CollectionUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
  "startTimestamp": 1474047113235,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testOversizedPartition(org.elasticsearch.common.util.CollectionUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOversizedPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
  "startTimestamp": 1474047113238,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimplePartition(org.elasticsearch.common.util.CollectionUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimplePartition(org.elasticsearch.common.util.CollectionUtilsTests)",
  "startTimestamp": 1474047113240,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSingletonPartition(org.elasticsearch.common.util.CollectionUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingletonPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
  "startTimestamp": 1474047113242,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRotateEmpty(org.elasticsearch.common.util.CollectionUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRotateEmpty(org.elasticsearch.common.util.CollectionUtilsTests)",
  "startTimestamp": 1474047113244,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.CollectionUtilsTests",
  "startTimestamp": 1474047112990,
  "executionTime": 258
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.internal.ShardSearchTransportRequestTests",
   "displayName": "org.elasticsearch.search.internal.ShardSearchTransportRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.search.internal.ShardSearchTransportRequestTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.search.internal.ShardSearchTransportRequestTests)",
     "displayName": "testSerialization(org.elasticsearch.search.internal.ShardSearchTransportRequestTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.internal.ShardSearchTransportRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047113257
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.internal.ShardSearchTransportRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.internal.ShardSearchTransportRequestTests)",
  "startTimestamp": 1474047113276,
  "executionTime": 1002
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.internal.ShardSearchTransportRequestTests",
  "startTimestamp": 1474047113257,
  "executionTime": 1025
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.transport.TCPTransportTests",
   "displayName": "org.elasticsearch.transport.TCPTransportTests",
   "methodName": null,
   "className": "org.elasticsearch.transport.TCPTransportTests",
   "children": [
    {
     "id": "ID#testParseV6DefaultPort(org.elasticsearch.transport.TCPTransportTests)",
     "displayName": "testParseV6DefaultPort(org.elasticsearch.transport.TCPTransportTests)",
     "methodName": "testParseV6DefaultPort",
     "className": "org.elasticsearch.transport.TCPTransportTests",
     "children": []
    },
    {
     "id": "ID#testParseV6WithPortRange(org.elasticsearch.transport.TCPTransportTests)",
     "displayName": "testParseV6WithPortRange(org.elasticsearch.transport.TCPTransportTests)",
     "methodName": "testParseV6WithPortRange",
     "className": "org.elasticsearch.transport.TCPTransportTests",
     "children": []
    },
    {
     "id": "ID#testParseV4DefaultPort(org.elasticsearch.transport.TCPTransportTests)",
     "displayName": "testParseV4DefaultPort(org.elasticsearch.transport.TCPTransportTests)",
     "methodName": "testParseV4DefaultPort",
     "className": "org.elasticsearch.transport.TCPTransportTests",
     "children": []
    },
    {
     "id": "ID#testParseV6WithPort(org.elasticsearch.transport.TCPTransportTests)",
     "displayName": "testParseV6WithPort(org.elasticsearch.transport.TCPTransportTests)",
     "methodName": "testParseV6WithPort",
     "className": "org.elasticsearch.transport.TCPTransportTests",
     "children": []
    },
    {
     "id": "ID#testAddressLimit(org.elasticsearch.transport.TCPTransportTests)",
     "displayName": "testAddressLimit(org.elasticsearch.transport.TCPTransportTests)",
     "methodName": "testAddressLimit",
     "className": "org.elasticsearch.transport.TCPTransportTests",
     "children": []
    },
    {
     "id": "ID#testParseV4WithPort(org.elasticsearch.transport.TCPTransportTests)",
     "displayName": "testParseV4WithPort(org.elasticsearch.transport.TCPTransportTests)",
     "methodName": "testParseV4WithPort",
     "className": "org.elasticsearch.transport.TCPTransportTests",
     "children": []
    },
    {
     "id": "ID#testParseV6UnBracketed(org.elasticsearch.transport.TCPTransportTests)",
     "displayName": "testParseV6UnBracketed(org.elasticsearch.transport.TCPTransportTests)",
     "methodName": "testParseV6UnBracketed",
     "className": "org.elasticsearch.transport.TCPTransportTests",
     "children": []
    },
    {
     "id": "ID#testParseV4WithPortRange(org.elasticsearch.transport.TCPTransportTests)",
     "displayName": "testParseV4WithPortRange(org.elasticsearch.transport.TCPTransportTests)",
     "methodName": "testParseV4WithPortRange",
     "className": "org.elasticsearch.transport.TCPTransportTests",
     "children": []
    },
    {
     "id": "ID#testParseV6DefaultRange(org.elasticsearch.transport.TCPTransportTests)",
     "displayName": "testParseV6DefaultRange(org.elasticsearch.transport.TCPTransportTests)",
     "methodName": "testParseV6DefaultRange",
     "className": "org.elasticsearch.transport.TCPTransportTests",
     "children": []
    },
    {
     "id": "ID#testParseV4DefaultRange(org.elasticsearch.transport.TCPTransportTests)",
     "displayName": "testParseV4DefaultRange(org.elasticsearch.transport.TCPTransportTests)",
     "methodName": "testParseV4DefaultRange",
     "className": "org.elasticsearch.transport.TCPTransportTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047114301
 }
]

[
 "TEST_STARTED",
 "ID#testParseV6DefaultPort(org.elasticsearch.transport.TCPTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseV6DefaultPort(org.elasticsearch.transport.TCPTransportTests)",
  "startTimestamp": 1474047114323,
  "executionTime": 90
 }
]

[
 "TEST_STARTED",
 "ID#testParseV6WithPortRange(org.elasticsearch.transport.TCPTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseV6WithPortRange(org.elasticsearch.transport.TCPTransportTests)",
  "startTimestamp": 1474047114413,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseV4DefaultPort(org.elasticsearch.transport.TCPTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseV4DefaultPort(org.elasticsearch.transport.TCPTransportTests)",
  "startTimestamp": 1474047114415,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseV6WithPort(org.elasticsearch.transport.TCPTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseV6WithPort(org.elasticsearch.transport.TCPTransportTests)",
  "startTimestamp": 1474047114417,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAddressLimit(org.elasticsearch.transport.TCPTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddressLimit(org.elasticsearch.transport.TCPTransportTests)",
  "startTimestamp": 1474047114419,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseV4WithPort(org.elasticsearch.transport.TCPTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseV4WithPort(org.elasticsearch.transport.TCPTransportTests)",
  "startTimestamp": 1474047114422,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParseV6UnBracketed(org.elasticsearch.transport.TCPTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseV6UnBracketed(org.elasticsearch.transport.TCPTransportTests)",
  "startTimestamp": 1474047114424,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParseV4WithPortRange(org.elasticsearch.transport.TCPTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseV4WithPortRange(org.elasticsearch.transport.TCPTransportTests)",
  "startTimestamp": 1474047114425,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseV6DefaultRange(org.elasticsearch.transport.TCPTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseV6DefaultRange(org.elasticsearch.transport.TCPTransportTests)",
  "startTimestamp": 1474047114428,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseV4DefaultRange(org.elasticsearch.transport.TCPTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseV4DefaultRange(org.elasticsearch.transport.TCPTransportTests)",
  "startTimestamp": 1474047114430,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.transport.TCPTransportTests",
  "startTimestamp": 1474047114301,
  "executionTime": 133
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.slice.DocValuesSliceQueryTests",
   "displayName": "org.elasticsearch.search.slice.DocValuesSliceQueryTests",
   "methodName": null,
   "className": "org.elasticsearch.search.slice.DocValuesSliceQueryTests",
   "children": [
    {
     "id": "ID#testSearch(org.elasticsearch.search.slice.DocValuesSliceQueryTests)",
     "displayName": "testSearch(org.elasticsearch.search.slice.DocValuesSliceQueryTests)",
     "methodName": "testSearch",
     "className": "org.elasticsearch.search.slice.DocValuesSliceQueryTests",
     "children": []
    },
    {
     "id": "ID#testBasics(org.elasticsearch.search.slice.DocValuesSliceQueryTests)",
     "displayName": "testBasics(org.elasticsearch.search.slice.DocValuesSliceQueryTests)",
     "methodName": "testBasics",
     "className": "org.elasticsearch.search.slice.DocValuesSliceQueryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047114440
 }
]

[
 "TEST_STARTED",
 "ID#testSearch(org.elasticsearch.search.slice.DocValuesSliceQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearch(org.elasticsearch.search.slice.DocValuesSliceQueryTests)",
  "startTimestamp": 1474047114462,
  "executionTime": 302
 }
]

[
 "TEST_STARTED",
 "ID#testBasics(org.elasticsearch.search.slice.DocValuesSliceQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasics(org.elasticsearch.search.slice.DocValuesSliceQueryTests)",
  "startTimestamp": 1474047114765,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.slice.DocValuesSliceQueryTests",
  "startTimestamp": 1474047114440,
  "executionTime": 328
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.ByteUtilsTests",
   "displayName": "org.elasticsearch.common.util.ByteUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.ByteUtilsTests",
   "children": [
    {
     "id": "ID#testVLong(org.elasticsearch.common.util.ByteUtilsTests)",
     "displayName": "testVLong(org.elasticsearch.common.util.ByteUtilsTests)",
     "methodName": "testVLong",
     "className": "org.elasticsearch.common.util.ByteUtilsTests",
     "children": []
    },
    {
     "id": "ID#testFloat(org.elasticsearch.common.util.ByteUtilsTests)",
     "displayName": "testFloat(org.elasticsearch.common.util.ByteUtilsTests)",
     "methodName": "testFloat",
     "className": "org.elasticsearch.common.util.ByteUtilsTests",
     "children": []
    },
    {
     "id": "ID#testZigZag(org.elasticsearch.common.util.ByteUtilsTests)",
     "displayName": "testZigZag(org.elasticsearch.common.util.ByteUtilsTests)",
     "methodName": "testZigZag",
     "className": "org.elasticsearch.common.util.ByteUtilsTests",
     "children": []
    },
    {
     "id": "ID#testDouble(org.elasticsearch.common.util.ByteUtilsTests)",
     "displayName": "testDouble(org.elasticsearch.common.util.ByteUtilsTests)",
     "methodName": "testDouble",
     "className": "org.elasticsearch.common.util.ByteUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047114774
 }
]

[
 "TEST_STARTED",
 "ID#testVLong(org.elasticsearch.common.util.ByteUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVLong(org.elasticsearch.common.util.ByteUtilsTests)",
  "startTimestamp": 1474047114798,
  "executionTime": 35
 }
]

[
 "TEST_STARTED",
 "ID#testFloat(org.elasticsearch.common.util.ByteUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFloat(org.elasticsearch.common.util.ByteUtilsTests)",
  "startTimestamp": 1474047114834,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testZigZag(org.elasticsearch.common.util.ByteUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testZigZag(org.elasticsearch.common.util.ByteUtilsTests)",
  "startTimestamp": 1474047114846,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDouble(org.elasticsearch.common.util.ByteUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDouble(org.elasticsearch.common.util.ByteUtilsTests)",
  "startTimestamp": 1474047114850,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.ByteUtilsTests",
  "startTimestamp": 1474047114774,
  "executionTime": 82
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.PathMapperTests",
   "displayName": "org.elasticsearch.index.mapper.PathMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.PathMapperTests",
   "children": [
    {
     "id": "ID#testPathMapping(org.elasticsearch.index.mapper.PathMapperTests)",
     "displayName": "testPathMapping(org.elasticsearch.index.mapper.PathMapperTests)",
     "methodName": "testPathMapping",
     "className": "org.elasticsearch.index.mapper.PathMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047114862
 }
]

[
 "TEST_STARTED",
 "ID#testPathMapping(org.elasticsearch.index.mapper.PathMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:54,900][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:54,943][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:54,944][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:54,948][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:54,952][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:54,952][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:55,365][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:55,365][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:55,365][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[3]}, bound_addresses {local[3]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:55,369][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{PrpGhw7ySeys2_SEoKZMYw}{BmM8R7IRTYOtFLNb0Bz1OA}{local}{local[3]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:55,370][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:55,407][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:55,453][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:55,937][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:55,988][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [PathMapperTests#testPathMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPathMapping(org.elasticsearch.index.mapper.PathMapperTests)",
  "startTimestamp": 1474047114891,
  "executionTime": 1153
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:56,044][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:56,056][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:56,057][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:31:56,061][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.PathMapperTests",
  "startTimestamp": 1474047114862,
  "executionTime": 1213
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.ObjectMapperTests",
   "displayName": "org.elasticsearch.index.mapper.ObjectMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.ObjectMapperTests",
   "children": [
    {
     "id": "ID#testEmptyFieldsArray(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "displayName": "testEmptyFieldsArray(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "methodName": "testEmptyFieldsArray",
     "className": "org.elasticsearch.index.mapper.ObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testFieldsWithFilledArrayShouldThrowException(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "displayName": "testFieldsWithFilledArrayShouldThrowException(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "methodName": "testFieldsWithFilledArrayShouldThrowException",
     "className": "org.elasticsearch.index.mapper.ObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testMerge(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "displayName": "testMerge(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "methodName": "testMerge",
     "className": "org.elasticsearch.index.mapper.ObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testEmptyFieldsArrayMultiFields(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "displayName": "testEmptyFieldsArrayMultiFields(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "methodName": "testEmptyFieldsArrayMultiFields",
     "className": "org.elasticsearch.index.mapper.ObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testDifferentInnerObjectTokenFailure(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "displayName": "testDifferentInnerObjectTokenFailure(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "methodName": "testDifferentInnerObjectTokenFailure",
     "className": "org.elasticsearch.index.mapper.ObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testEmptyArrayProperties(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "displayName": "testEmptyArrayProperties(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "methodName": "testEmptyArrayProperties",
     "className": "org.elasticsearch.index.mapper.ObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testFieldPropertiesArray(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "displayName": "testFieldPropertiesArray(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "methodName": "testFieldPropertiesArray",
     "className": "org.elasticsearch.index.mapper.ObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testFieldsArrayMultiFieldsShouldThrowException(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "displayName": "testFieldsArrayMultiFieldsShouldThrowException(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "methodName": "testFieldsArrayMultiFieldsShouldThrowException",
     "className": "org.elasticsearch.index.mapper.ObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testEmptyName(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "displayName": "testEmptyName(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "methodName": "testEmptyName",
     "className": "org.elasticsearch.index.mapper.ObjectMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047116083
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyFieldsArray(org.elasticsearch.index.mapper.ObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:01:56,195][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:01:56,244][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:01:56,244][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:01:56,249][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:01:56,252][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:01:56,253][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:01:56,539][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:01:56,539][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:01:56,540][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[4]}, bound_addresses {local[4]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:01:56,553][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{DqMRACc7SCOMZHMb4ofi1A}{Y2bVbgY2Q9KmNyyrbO7_Dw}{local}{local[4]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:01:56,554][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:01:56,580][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:01:56,600][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:01:56,671][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:01:56,684][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ObjectMapperTests#testEmptyFieldsArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyFieldsArray(org.elasticsearch.index.mapper.ObjectMapperTests)",
  "startTimestamp": 1474047116186,
  "executionTime": 559
 }
]

[
 "TEST_STARTED",
 "ID#testFieldsWithFilledArrayShouldThrowException(org.elasticsearch.index.mapper.ObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:01:56,773][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:01:56,882][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:01:56,908][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ObjectMapperTests#testFieldsWithFilledArrayShouldThrowException]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldsWithFilledArrayShouldThrowException(org.elasticsearch.index.mapper.ObjectMapperTests)",
  "startTimestamp": 1474047116746,
  "executionTime": 197
 }
]

[
 "TEST_STARTED",
 "ID#testMerge(org.elasticsearch.index.mapper.ObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:01:56,951][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:01:57,075][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:01:57,203][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ObjectMapperTests#testMerge]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMerge(org.elasticsearch.index.mapper.ObjectMapperTests)",
  "startTimestamp": 1474047116944,
  "executionTime": 322
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyFieldsArrayMultiFields(org.elasticsearch.index.mapper.ObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:01:57,273][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:01:57,349][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:01:57,366][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ObjectMapperTests#testEmptyFieldsArrayMultiFields]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyFieldsArrayMultiFields(org.elasticsearch.index.mapper.ObjectMapperTests)",
  "startTimestamp": 1474047117266,
  "executionTime": 181
 }
]

[
 "TEST_STARTED",
 "ID#testDifferentInnerObjectTokenFailure(org.elasticsearch.index.mapper.ObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:01:57,458][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:01:57,535][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:01:57,599][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ObjectMapperTests#testDifferentInnerObjectTokenFailure]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDifferentInnerObjectTokenFailure(org.elasticsearch.index.mapper.ObjectMapperTests)",
  "startTimestamp": 1474047117447,
  "executionTime": 179
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyArrayProperties(org.elasticsearch.index.mapper.ObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:01:57,633][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:01:57,685][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:01:57,698][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ObjectMapperTests#testEmptyArrayProperties]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyArrayProperties(org.elasticsearch.index.mapper.ObjectMapperTests)",
  "startTimestamp": 1474047117626,
  "executionTime": 112
 }
]

[
 "TEST_STARTED",
 "ID#testFieldPropertiesArray(org.elasticsearch.index.mapper.ObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:01:57,746][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:01:57,822][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:01:57,838][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ObjectMapperTests#testFieldPropertiesArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldPropertiesArray(org.elasticsearch.index.mapper.ObjectMapperTests)",
  "startTimestamp": 1474047117738,
  "executionTime": 127
 }
]

[
 "TEST_STARTED",
 "ID#testFieldsArrayMultiFieldsShouldThrowException(org.elasticsearch.index.mapper.ObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:01:57,872][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:01:57,920][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:01:57,932][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ObjectMapperTests#testFieldsArrayMultiFieldsShouldThrowException]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldsArrayMultiFieldsShouldThrowException(org.elasticsearch.index.mapper.ObjectMapperTests)",
  "startTimestamp": 1474047117865,
  "executionTime": 94
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyName(org.elasticsearch.index.mapper.ObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:01:57,967][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:01:58,027][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:01:58,046][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_old] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:01:58,128][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_old][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:01:58,153][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test_old] [ObjectMapperTests#testEmptyName]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyName(org.elasticsearch.index.mapper.ObjectMapperTests)",
  "startTimestamp": 1474047117959,
  "executionTime": 283
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:01:58,243][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:01:58,243][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:01:58,244][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:01:58,245][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.ObjectMapperTests",
  "startTimestamp": 1474047116083,
  "executionTime": 2176
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests",
   "displayName": "org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests",
   "children": [
    {
     "id": "ID#testInclusiveFilters(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
     "displayName": "testInclusiveFilters(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
     "methodName": "testInclusiveFilters",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests",
     "children": []
    },
    {
     "id": "ID#testExclusiveFiltersWithDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
     "displayName": "testExclusiveFiltersWithDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
     "methodName": "testExclusiveFiltersWithDots",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests",
     "children": []
    },
    {
     "id": "ID#testInclusiveFiltersWithDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
     "displayName": "testInclusiveFiltersWithDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
     "methodName": "testInclusiveFiltersWithDots",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests",
     "children": []
    },
    {
     "id": "ID#testExclusiveFilters(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
     "displayName": "testExclusiveFilters(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
     "methodName": "testExclusiveFilters",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047118265
 }
]

[
 "TEST_STARTED",
 "ID#testInclusiveFilters(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInclusiveFilters(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
  "startTimestamp": 1474047118314,
  "executionTime": 77
 }
]

[
 "TEST_STARTED",
 "ID#testExclusiveFiltersWithDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExclusiveFiltersWithDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
  "startTimestamp": 1474047118391,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testInclusiveFiltersWithDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInclusiveFiltersWithDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
  "startTimestamp": 1474047118394,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testExclusiveFilters(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExclusiveFilters(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
  "startTimestamp": 1474047118398,
  "executionTime": 12
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests",
  "startTimestamp": 1474047118265,
  "executionTime": 148
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.watcher.ResourceWatcherServiceTests",
   "displayName": "org.elasticsearch.watcher.ResourceWatcherServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.watcher.ResourceWatcherServiceTests",
   "children": [
    {
     "id": "ID#testSettings(org.elasticsearch.watcher.ResourceWatcherServiceTests)",
     "displayName": "testSettings(org.elasticsearch.watcher.ResourceWatcherServiceTests)",
     "methodName": "testSettings",
     "className": "org.elasticsearch.watcher.ResourceWatcherServiceTests",
     "children": []
    },
    {
     "id": "ID#testHandle(org.elasticsearch.watcher.ResourceWatcherServiceTests)",
     "displayName": "testHandle(org.elasticsearch.watcher.ResourceWatcherServiceTests)",
     "methodName": "testHandle",
     "className": "org.elasticsearch.watcher.ResourceWatcherServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047118419
 }
]

[
 "TEST_STARTED",
 "ID#testSettings(org.elasticsearch.watcher.ResourceWatcherServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSettings(org.elasticsearch.watcher.ResourceWatcherServiceTests)",
  "startTimestamp": 1474047118516,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testHandle(org.elasticsearch.watcher.ResourceWatcherServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHandle(org.elasticsearch.watcher.ResourceWatcherServiceTests)",
  "startTimestamp": 1474047118525,
  "executionTime": 14
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.watcher.ResourceWatcherServiceTests",
  "startTimestamp": 1474047118419,
  "executionTime": 122
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests",
     "children": []
    },
    {
     "id": "ID#testDefaultParsing(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
     "displayName": "testDefaultParsing(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
     "methodName": "testDefaultParsing",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047118558
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:31:58,701][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{zMT8mT8hRS23cSLJc9cumA}{local}{local[127]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
  "startTimestamp": 1474047118722,
  "executionTime": 42
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:31:58,829][INFO ][org.elasticsearch.search.aggregations.pipeline.moving.avg] Content string: {%0A  \"GAIfhcofnsqIu\" : {%0A    \"moving_avg\" : {%0A      \"buckets_path\" : [%0A        \"KlSGNhSXuAHCzIAU\"%0A      ],%0A      \"gap_policy\" : \"insert_zeros\",%0A      \"model\" : \"holt_winters\",%0A      \"settings\" : {%0A        \"alpha\" : 0.21864009449940658,%0A        \"beta\" : 0.1130072035556493,%0A        \"gamma\" : 0.516212618209465,%0A        \"period\" : 70,%0A        \"pad\" : true,%0A        \"type\" : \"mult\"%0A      },%0A      \"window\" : 8841,%0A      \"predict\" : 13,%0A      \"minimize\" : false%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:31:58,831][INFO ][org.elasticsearch.search.aggregations.pipeline.moving.avg] Content string: {%0A  \"GAIfhcofnsqIu\" : {%0A    \"moving_avg\" : {%0A      \"buckets_path\" : [%0A        \"KlSGNhSXuAHCzIAU\"%0A      ],%0A      \"gap_policy\" : \"insert_zeros\",%0A      \"model\" : \"holt_winters\",%0A      \"settings\" : {%0A        \"alpha\" : 0.21864009449940658,%0A        \"beta\" : 0.1130072035556493,%0A        \"gamma\" : 0.516212618209465,%0A        \"period\" : 70,%0A        \"pad\" : true,%0A        \"type\" : \"mult\"%0A      },%0A      \"window\" : 8841,%0A      \"predict\" : 13,%0A      \"minimize\" : false%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
  "startTimestamp": 1474047118765,
  "executionTime": 67
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultParsing(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultParsing(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
  "startTimestamp": 1474047118833,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
  "startTimestamp": 1474047118835,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests",
  "startTimestamp": 1474047118558,
  "executionTime": 284
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.DiskUsageTests",
   "displayName": "org.elasticsearch.cluster.DiskUsageTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.DiskUsageTests",
   "children": [
    {
     "id": "ID#testDiskUsageCalc(org.elasticsearch.cluster.DiskUsageTests)",
     "displayName": "testDiskUsageCalc(org.elasticsearch.cluster.DiskUsageTests)",
     "methodName": "testDiskUsageCalc",
     "className": "org.elasticsearch.cluster.DiskUsageTests",
     "children": []
    },
    {
     "id": "ID#testFillShardLevelInfo(org.elasticsearch.cluster.DiskUsageTests)",
     "displayName": "testFillShardLevelInfo(org.elasticsearch.cluster.DiskUsageTests)",
     "methodName": "testFillShardLevelInfo",
     "className": "org.elasticsearch.cluster.DiskUsageTests",
     "children": []
    },
    {
     "id": "ID#testFillDiskUsage(org.elasticsearch.cluster.DiskUsageTests)",
     "displayName": "testFillDiskUsage(org.elasticsearch.cluster.DiskUsageTests)",
     "methodName": "testFillDiskUsage",
     "className": "org.elasticsearch.cluster.DiskUsageTests",
     "children": []
    },
    {
     "id": "ID#testRandomDiskUsage(org.elasticsearch.cluster.DiskUsageTests)",
     "displayName": "testRandomDiskUsage(org.elasticsearch.cluster.DiskUsageTests)",
     "methodName": "testRandomDiskUsage",
     "className": "org.elasticsearch.cluster.DiskUsageTests",
     "children": []
    },
    {
     "id": "ID#testFillDiskUsageSomeInvalidValues(org.elasticsearch.cluster.DiskUsageTests)",
     "displayName": "testFillDiskUsageSomeInvalidValues(org.elasticsearch.cluster.DiskUsageTests)",
     "methodName": "testFillDiskUsageSomeInvalidValues",
     "className": "org.elasticsearch.cluster.DiskUsageTests",
     "children": []
    },
    {
     "id": "ID#testFillShardsWithShadowIndices(org.elasticsearch.cluster.DiskUsageTests)",
     "displayName": "testFillShardsWithShadowIndices(org.elasticsearch.cluster.DiskUsageTests)",
     "methodName": "testFillShardsWithShadowIndices",
     "className": "org.elasticsearch.cluster.DiskUsageTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047118884
 }
]

[
 "TEST_STARTED",
 "ID#testDiskUsageCalc(org.elasticsearch.cluster.DiskUsageTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDiskUsageCalc(org.elasticsearch.cluster.DiskUsageTests)",
  "startTimestamp": 1474047118926,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFillShardLevelInfo(org.elasticsearch.cluster.DiskUsageTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFillShardLevelInfo(org.elasticsearch.cluster.DiskUsageTests)",
  "startTimestamp": 1474047118928,
  "executionTime": 35
 }
]

[
 "TEST_STARTED",
 "ID#testFillDiskUsage(org.elasticsearch.cluster.DiskUsageTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFillDiskUsage(org.elasticsearch.cluster.DiskUsageTests)",
  "startTimestamp": 1474047118963,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRandomDiskUsage(org.elasticsearch.cluster.DiskUsageTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomDiskUsage(org.elasticsearch.cluster.DiskUsageTests)",
  "startTimestamp": 1474047118967,
  "executionTime": 59
 }
]

[
 "TEST_STARTED",
 "ID#testFillDiskUsageSomeInvalidValues(org.elasticsearch.cluster.DiskUsageTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFillDiskUsageSomeInvalidValues(org.elasticsearch.cluster.DiskUsageTests)",
  "startTimestamp": 1474047119029,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFillShardsWithShadowIndices(org.elasticsearch.cluster.DiskUsageTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:31:59,045][INFO ][org.elasticsearch.cluster] [node_s_0] --> calling buildShardLevelInfo with state: {%0A  \"version\" : 0,%0A  \"state_uuid\" : \"03mRWOiVRoO9zo13U4ODrQ\",%0A  \"master_node\" : null,%0A  \"blocks\" : { },%0A  \"nodes\" : { },%0A  \"metadata\" : {%0A    \"cluster_uuid\" : \"_na_\",%0A    \"templates\" : { },%0A    \"indices\" : {%0A      \"shadow\" : {%0A        \"state\" : \"open\",%0A        \"settings\" : {%0A          \"index\" : {%0A            \"number_of_shards\" : \"1\",%0A            \"number_of_replicas\" : \"0\",%0A            \"uuid\" : \"0xcafe0001\",%0A            \"version\" : {%0A              \"created\" : \"5000006\"%0A            },%0A            \"shadow_replicas\" : \"true\"%0A          }%0A        },%0A        \"mappings\" : { },%0A        \"aliases\" : [ ],%0A        \"primary_terms\" : {%0A          \"0\" : 0%0A        },%0A        \"in_sync_allocations\" : {%0A          \"0\" : [ ]%0A        }%0A      },%0A      \"non-shadow\" : {%0A        \"state\" : \"open\",%0A        \"settings\" : {%0A          \"index\" : {%0A            \"number_of_shards\" : \"1\",%0A            \"number_of_replicas\" : \"0\",%0A            \"uuid\" : \"0xcafe0000\",%0A            \"version\" : {%0A              \"created\" : \"5000006\"%0A            }%0A          }%0A        },%0A        \"mappings\" : { },%0A        \"aliases\" : [ ],%0A        \"primary_terms\" : {%0A          \"0\" : 0%0A        },%0A        \"in_sync_allocations\" : {%0A          \"0\" : [ ]%0A        }%0A      }%0A    },%0A    \"index-graveyard\" : {%0A      \"tombstones\" : [ ]%0A    }%0A  },%0A  \"routing_table\" : {%0A    \"indices\" : { }%0A  },%0A  \"routing_nodes\" : {%0A    \"unassigned\" : [ ],%0A    \"nodes\" : { }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFillShardsWithShadowIndices(org.elasticsearch.cluster.DiskUsageTests)",
  "startTimestamp": 1474047119031,
  "executionTime": 17
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.DiskUsageTests",
  "startTimestamp": 1474047118884,
  "executionTime": 173
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.tasks.TaskResultTests",
   "displayName": "org.elasticsearch.tasks.TaskResultTests",
   "methodName": null,
   "className": "org.elasticsearch.tasks.TaskResultTests",
   "children": [
    {
     "id": "ID#testXContentRoundTrip(org.elasticsearch.tasks.TaskResultTests)",
     "displayName": "testXContentRoundTrip(org.elasticsearch.tasks.TaskResultTests)",
     "methodName": "testXContentRoundTrip",
     "className": "org.elasticsearch.tasks.TaskResultTests",
     "children": []
    },
    {
     "id": "ID#testBinaryRoundTrip(org.elasticsearch.tasks.TaskResultTests)",
     "displayName": "testBinaryRoundTrip(org.elasticsearch.tasks.TaskResultTests)",
     "methodName": "testBinaryRoundTrip",
     "className": "org.elasticsearch.tasks.TaskResultTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047119065
 }
]

[
 "TEST_STARTED",
 "ID#testXContentRoundTrip(org.elasticsearch.tasks.TaskResultTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testXContentRoundTrip(org.elasticsearch.tasks.TaskResultTests)",
  "startTimestamp": 1474047119113,
  "executionTime": 59
 }
]

[
 "TEST_STARTED",
 "ID#testBinaryRoundTrip(org.elasticsearch.tasks.TaskResultTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBinaryRoundTrip(org.elasticsearch.tasks.TaskResultTests)",
  "startTimestamp": 1474047119172,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.tasks.TaskResultTests",
  "startTimestamp": 1474047119065,
  "executionTime": 113
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.recycler.LockedRecyclerTests",
   "displayName": "org.elasticsearch.common.recycler.LockedRecyclerTests",
   "methodName": null,
   "className": "org.elasticsearch.common.recycler.LockedRecyclerTests",
   "children": [
    {
     "id": "ID#testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.LockedRecyclerTests)",
     "displayName": "testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.LockedRecyclerTests)",
     "methodName": "testDestroyWhenOverCapacity",
     "className": "org.elasticsearch.common.recycler.LockedRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testClose(org.elasticsearch.common.recycler.LockedRecyclerTests)",
     "displayName": "testClose(org.elasticsearch.common.recycler.LockedRecyclerTests)",
     "methodName": "testClose",
     "className": "org.elasticsearch.common.recycler.LockedRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testReuse(org.elasticsearch.common.recycler.LockedRecyclerTests)",
     "displayName": "testReuse(org.elasticsearch.common.recycler.LockedRecyclerTests)",
     "methodName": "testReuse",
     "className": "org.elasticsearch.common.recycler.LockedRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testRecycle(org.elasticsearch.common.recycler.LockedRecyclerTests)",
     "displayName": "testRecycle(org.elasticsearch.common.recycler.LockedRecyclerTests)",
     "methodName": "testRecycle",
     "className": "org.elasticsearch.common.recycler.LockedRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testDoubleRelease(org.elasticsearch.common.recycler.LockedRecyclerTests)",
     "displayName": "testDoubleRelease(org.elasticsearch.common.recycler.LockedRecyclerTests)",
     "methodName": "testDoubleRelease",
     "className": "org.elasticsearch.common.recycler.LockedRecyclerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047119189
 }
]

[
 "TEST_STARTED",
 "ID#testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.LockedRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.LockedRecyclerTests)",
  "startTimestamp": 1474047119510,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testClose(org.elasticsearch.common.recycler.LockedRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClose(org.elasticsearch.common.recycler.LockedRecyclerTests)",
  "startTimestamp": 1474047119518,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReuse(org.elasticsearch.common.recycler.LockedRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReuse(org.elasticsearch.common.recycler.LockedRecyclerTests)",
  "startTimestamp": 1474047119520,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecycle(org.elasticsearch.common.recycler.LockedRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecycle(org.elasticsearch.common.recycler.LockedRecyclerTests)",
  "startTimestamp": 1474047119522,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDoubleRelease(org.elasticsearch.common.recycler.LockedRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoubleRelease(org.elasticsearch.common.recycler.LockedRecyclerTests)",
  "startTimestamp": 1474047119525,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.recycler.LockedRecyclerTests",
  "startTimestamp": 1474047119189,
  "executionTime": 339
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.BinaryFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.BinaryFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.BinaryFieldMapperTests",
   "children": [
    {
     "id": "ID#testDefaultMapping(org.elasticsearch.index.mapper.BinaryFieldMapperTests)",
     "displayName": "testDefaultMapping(org.elasticsearch.index.mapper.BinaryFieldMapperTests)",
     "methodName": "testDefaultMapping",
     "className": "org.elasticsearch.index.mapper.BinaryFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testStoredValue(org.elasticsearch.index.mapper.BinaryFieldMapperTests)",
     "displayName": "testStoredValue(org.elasticsearch.index.mapper.BinaryFieldMapperTests)",
     "methodName": "testStoredValue",
     "className": "org.elasticsearch.index.mapper.BinaryFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testEmptyName(org.elasticsearch.index.mapper.BinaryFieldMapperTests)",
     "displayName": "testEmptyName(org.elasticsearch.index.mapper.BinaryFieldMapperTests)",
     "methodName": "testEmptyName",
     "className": "org.elasticsearch.index.mapper.BinaryFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047119536
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultMapping(org.elasticsearch.index.mapper.BinaryFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:01:59,781][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:01:59,812][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:01:59,812][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:01:59,817][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:01:59,820][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:01:59,820][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:02:00,052][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:02:00,053][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:02:00,053][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[5]}, bound_addresses {local[5]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:02:00,122][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{zKviZ5DQSL2XeDGW4lWoJQ}{ofj5PeE5Q6-FtbmpjIQyag}{local}{local[5]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:02:00,123][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:02:00,172][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:02:00,192][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:02:00,337][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:02:00,415][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [BinaryFieldMapperTests#testDefaultMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultMapping(org.elasticsearch.index.mapper.BinaryFieldMapperTests)",
  "startTimestamp": 1474047119760,
  "executionTime": 752
 }
]

[
 "TEST_STARTED",
 "ID#testStoredValue(org.elasticsearch.index.mapper.BinaryFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:02:00,579][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:02:00,638][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:02:00,662][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [BinaryFieldMapperTests#testStoredValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStoredValue(org.elasticsearch.index.mapper.BinaryFieldMapperTests)",
  "startTimestamp": 1474047120512,
  "executionTime": 191
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyName(org.elasticsearch.index.mapper.BinaryFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:02:00,710][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:02:00,772][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:02:00,820][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_old] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:02:00,905][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_old][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:02:00,920][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test_old] [BinaryFieldMapperTests#testEmptyName]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyName(org.elasticsearch.index.mapper.BinaryFieldMapperTests)",
  "startTimestamp": 1474047120703,
  "executionTime": 259
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:02:00,963][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:02:00,963][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:02:00,964][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:02:00,965][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.BinaryFieldMapperTests",
  "startTimestamp": 1474047119536,
  "executionTime": 1436
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.get.MultiGetShardRequestTests",
   "displayName": "org.elasticsearch.action.get.MultiGetShardRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.get.MultiGetShardRequestTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.action.get.MultiGetShardRequestTests)",
     "displayName": "testSerialization(org.elasticsearch.action.get.MultiGetShardRequestTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.action.get.MultiGetShardRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047120977
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.action.get.MultiGetShardRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.action.get.MultiGetShardRequestTests)",
  "startTimestamp": 1474047121010,
  "executionTime": 23
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.get.MultiGetShardRequestTests",
  "startTimestamp": 1474047120977,
  "executionTime": 58
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.DynamicMappingDisabledTests",
   "displayName": "org.elasticsearch.index.mapper.DynamicMappingDisabledTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.DynamicMappingDisabledTests",
   "children": [
    {
     "id": "ID#testDynamicDisabled(org.elasticsearch.index.mapper.DynamicMappingDisabledTests)",
     "displayName": "testDynamicDisabled(org.elasticsearch.index.mapper.DynamicMappingDisabledTests)",
     "methodName": "testDynamicDisabled",
     "className": "org.elasticsearch.index.mapper.DynamicMappingDisabledTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047121042
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDisabled(org.elasticsearch.index.mapper.DynamicMappingDisabledTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:32:01,076][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:32:01,097][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:32:01,098][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:32:01,101][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:32:01,103][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:32:01,104][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:32:01,216][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:32:01,216][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:32:01,217][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[6]}, bound_addresses {local[6]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:32:01,282][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{Y5UKYHJgTk-22scTTH0r5g}{g1FBoXjjTyq2Vafx3_HG4Q}{local}{local[6]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:32:01,283][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:32:01,555][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:32:01,654][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{NiwlCmzaRKKTYoLQ2UJTCw}{local}{local[134]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:32:01,704][INFO ][org.elasticsearch.index.mapper] [node_s_0] [t8ylG6WkQlWeYPrNuo4k8Q] [DynamicMappingDisabledTests#testDynamicDisabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDisabled(org.elasticsearch.index.mapper.DynamicMappingDisabledTests)",
  "startTimestamp": 1474047121064,
  "executionTime": 641
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:32:01,709][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:32:01,710][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:32:01,710][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:32:01,713][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.DynamicMappingDisabledTests",
  "startTimestamp": 1474047121042,
  "executionTime": 676
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.network.NetworkAddressTests",
   "displayName": "org.elasticsearch.common.network.NetworkAddressTests",
   "methodName": null,
   "className": "org.elasticsearch.common.network.NetworkAddressTests",
   "children": [
    {
     "id": "ID#testRoundTripV6(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testRoundTripV6(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testRoundTripV6",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    },
    {
     "id": "ID#testNoScopeID(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testNoScopeID(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testNoScopeID",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    },
    {
     "id": "ID#testRoundTripV4(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testRoundTripV4(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testRoundTripV4",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    },
    {
     "id": "ID#testFormatPortV4(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testFormatPortV4(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testFormatPortV4",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    },
    {
     "id": "ID#testFormatPortV6(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testFormatPortV6(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testFormatPortV6",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    },
    {
     "id": "ID#testFormatV6(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testFormatV6(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testFormatV6",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    },
    {
     "id": "ID#testFormatV4(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testFormatV4(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testFormatV4",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047121725
 }
]

[
 "TEST_STARTED",
 "ID#testRoundTripV6(org.elasticsearch.common.network.NetworkAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoundTripV6(org.elasticsearch.common.network.NetworkAddressTests)",
  "startTimestamp": 1474047121881,
  "executionTime": 187
 }
]

[
 "TEST_STARTED",
 "ID#testNoScopeID(org.elasticsearch.common.network.NetworkAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoScopeID(org.elasticsearch.common.network.NetworkAddressTests)",
  "startTimestamp": 1474047122069,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRoundTripV4(org.elasticsearch.common.network.NetworkAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoundTripV4(org.elasticsearch.common.network.NetworkAddressTests)",
  "startTimestamp": 1474047122071,
  "executionTime": 36
 }
]

[
 "TEST_STARTED",
 "ID#testFormatPortV4(org.elasticsearch.common.network.NetworkAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFormatPortV4(org.elasticsearch.common.network.NetworkAddressTests)",
  "startTimestamp": 1474047122107,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFormatPortV6(org.elasticsearch.common.network.NetworkAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFormatPortV6(org.elasticsearch.common.network.NetworkAddressTests)",
  "startTimestamp": 1474047122110,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFormatV6(org.elasticsearch.common.network.NetworkAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFormatV6(org.elasticsearch.common.network.NetworkAddressTests)",
  "startTimestamp": 1474047122112,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFormatV4(org.elasticsearch.common.network.NetworkAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFormatV4(org.elasticsearch.common.network.NetworkAddressTests)",
  "startTimestamp": 1474047122114,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.network.NetworkAddressTests",
  "startTimestamp": 1474047121725,
  "executionTime": 393
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.InnerHitBuilderTests",
   "displayName": "org.elasticsearch.index.query.InnerHitBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
   "children": [
    {
     "id": "ID#testInlineLeafInnerHitsHasParentQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "displayName": "testInlineLeafInnerHitsHasParentQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "methodName": "testInlineLeafInnerHitsHasParentQuery",
     "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInlineLeafInnerHitsNestedQueryViaFunctionScoreQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "displayName": "testInlineLeafInnerHitsNestedQueryViaFunctionScoreQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "methodName": "testInlineLeafInnerHitsNestedQueryViaFunctionScoreQuery",
     "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInlineLeafInnerHitsNestedQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "displayName": "testInlineLeafInnerHitsNestedQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "methodName": "testInlineLeafInnerHitsNestedQuery",
     "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInlineLeafInnerHitsNestedQueryViaBoolQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "displayName": "testInlineLeafInnerHitsNestedQueryViaBoolQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "methodName": "testInlineLeafInnerHitsNestedQueryViaBoolQuery",
     "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInlineLeafInnerHitsHasChildQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "displayName": "testInlineLeafInnerHitsHasChildQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "methodName": "testInlineLeafInnerHitsHasChildQuery",
     "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInlineLeafInnerHitsNestedQueryViaConstantScoreQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "displayName": "testInlineLeafInnerHitsNestedQueryViaConstantScoreQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "methodName": "testInlineLeafInnerHitsNestedQueryViaConstantScoreQuery",
     "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromAndToXContent(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "displayName": "testFromAndToXContent(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "methodName": "testFromAndToXContent",
     "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInlineLeafInnerHitsNestedQueryViaBoostingQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "displayName": "testInlineLeafInnerHitsNestedQueryViaBoostingQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "methodName": "testInlineLeafInnerHitsNestedQueryViaBoostingQuery",
     "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
     "children": []
    },
    {
     "id": "ID#testCopyConstructor(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "displayName": "testCopyConstructor(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "methodName": "testCopyConstructor",
     "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047122282
 }
]

[
 "TEST_STARTED",
 "ID#testInlineLeafInnerHitsHasParentQuery(org.elasticsearch.index.query.InnerHitBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInlineLeafInnerHitsHasParentQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
  "startTimestamp": 1474047122562,
  "executionTime": 120
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.InnerHitBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.InnerHitBuilderTests)",
  "startTimestamp": 1474047122682,
  "executionTime": 133
 }
]

[
 "TEST_STARTED",
 "ID#testInlineLeafInnerHitsNestedQueryViaFunctionScoreQuery(org.elasticsearch.index.query.InnerHitBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInlineLeafInnerHitsNestedQueryViaFunctionScoreQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
  "startTimestamp": 1474047122815,
  "executionTime": 169
 }
]

[
 "TEST_STARTED",
 "ID#testInlineLeafInnerHitsNestedQuery(org.elasticsearch.index.query.InnerHitBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInlineLeafInnerHitsNestedQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
  "startTimestamp": 1474047122985,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInlineLeafInnerHitsNestedQueryViaBoolQuery(org.elasticsearch.index.query.InnerHitBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInlineLeafInnerHitsNestedQueryViaBoolQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
  "startTimestamp": 1474047122987,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testInlineLeafInnerHitsHasChildQuery(org.elasticsearch.index.query.InnerHitBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInlineLeafInnerHitsHasChildQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
  "startTimestamp": 1474047122990,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testInlineLeafInnerHitsNestedQueryViaConstantScoreQuery(org.elasticsearch.index.query.InnerHitBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInlineLeafInnerHitsNestedQueryViaConstantScoreQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
  "startTimestamp": 1474047122993,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.InnerHitBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.InnerHitBuilderTests)",
  "startTimestamp": 1474047122999,
  "executionTime": 257
 }
]

[
 "TEST_STARTED",
 "ID#testFromAndToXContent(org.elasticsearch.index.query.InnerHitBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromAndToXContent(org.elasticsearch.index.query.InnerHitBuilderTests)",
  "startTimestamp": 1474047123256,
  "executionTime": 967
 }
]

[
 "TEST_STARTED",
 "ID#testInlineLeafInnerHitsNestedQueryViaBoostingQuery(org.elasticsearch.index.query.InnerHitBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInlineLeafInnerHitsNestedQueryViaBoostingQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
  "startTimestamp": 1474047124223,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testCopyConstructor(org.elasticsearch.index.query.InnerHitBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyConstructor(org.elasticsearch.index.query.InnerHitBuilderTests)",
  "startTimestamp": 1474047124229,
  "executionTime": 19
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.InnerHitBuilderTests",
  "startTimestamp": 1474047122282,
  "executionTime": 1969
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.FieldNamesFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.FieldNamesFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.FieldNamesFieldMapperTests",
   "children": [
    {
     "id": "ID#testSeesFieldsFromPlugins(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "displayName": "testSeesFieldsFromPlugins(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "methodName": "testSeesFieldsFromPlugins",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testInjectIntoDocDuringParsing(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "displayName": "testInjectIntoDocDuringParsing(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "methodName": "testInjectIntoDocDuringParsing",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testMergingMappings(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "displayName": "testMergingMappings(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "methodName": "testMergingMappings",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDisabled(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "displayName": "testDisabled(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "methodName": "testDisabled",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testExplicitEnabled(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "displayName": "testExplicitEnabled(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "methodName": "testExplicitEnabled",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testFieldType(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "displayName": "testFieldType(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "methodName": "testFieldType",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testExtractFieldNames(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "displayName": "testExtractFieldNames(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "methodName": "testExtractFieldNames",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047124259
 }
]

[
 "TEST_STARTED",
 "ID#testSeesFieldsFromPlugins(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:04,320][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:04,366][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:04,366][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:04,369][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:04,372][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:04,372][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:04,596][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:04,600][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:04,601][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[7]}, bound_addresses {local[7]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:04,604][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{BbTQwoy3QraEVCob8Kpg1Q}{lDVm5AVRTGiCXJpCa-ijlw}{local}{local[7]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:04,605][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:04,625][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:04,649][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:04,779][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:04,816][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [FieldNamesFieldMapperTests#testSeesFieldsFromPlugins]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSeesFieldsFromPlugins(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
  "startTimestamp": 1474047124311,
  "executionTime": 601
 }
]

[
 "TEST_STARTED",
 "ID#testInjectIntoDocDuringParsing(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:04,961][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:05,081][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:05,104][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [FieldNamesFieldMapperTests#testInjectIntoDocDuringParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInjectIntoDocDuringParsing(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
  "startTimestamp": 1474047124912,
  "executionTime": 233
 }
]

[
 "TEST_STARTED",
 "ID#testMergingMappings(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:05,156][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:05,253][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:05,344][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [FieldNamesFieldMapperTests#testMergingMappings]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergingMappings(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
  "startTimestamp": 1474047125146,
  "executionTime": 234
 }
]

[
 "TEST_STARTED",
 "ID#testDisabled(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:05,388][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:05,456][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:05,472][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [FieldNamesFieldMapperTests#testDisabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDisabled(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
  "startTimestamp": 1474047125380,
  "executionTime": 141
 }
]

[
 "TEST_STARTED",
 "ID#testExplicitEnabled(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:05,528][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:05,577][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:05,590][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [FieldNamesFieldMapperTests#testExplicitEnabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExplicitEnabled(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
  "startTimestamp": 1474047125521,
  "executionTime": 121
 }
]

[
 "TEST_STARTED",
 "ID#testFieldType(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:05,650][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:05,707][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:05,725][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [FieldNamesFieldMapperTests#testFieldType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldType(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
  "startTimestamp": 1474047125643,
  "executionTime": 127
 }
]

[
 "TEST_STARTED",
 "ID#testExtractFieldNames(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:05,773][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [FieldNamesFieldMapperTests#testExtractFieldNames]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractFieldNames(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
  "startTimestamp": 1474047125771,
  "executionTime": 4
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:05,775][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:05,776][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:05,776][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:05,779][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.FieldNamesFieldMapperTests",
  "startTimestamp": 1474047124259,
  "executionTime": 1526
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.settings.SettingsFilterTests",
   "displayName": "org.elasticsearch.common.settings.SettingsFilterTests",
   "methodName": null,
   "className": "org.elasticsearch.common.settings.SettingsFilterTests",
   "children": [
    {
     "id": "ID#testSettingsFiltering(org.elasticsearch.common.settings.SettingsFilterTests)",
     "displayName": "testSettingsFiltering(org.elasticsearch.common.settings.SettingsFilterTests)",
     "methodName": "testSettingsFiltering",
     "className": "org.elasticsearch.common.settings.SettingsFilterTests",
     "children": []
    },
    {
     "id": "ID#testAddingAndRemovingFilters(org.elasticsearch.common.settings.SettingsFilterTests)",
     "displayName": "testAddingAndRemovingFilters(org.elasticsearch.common.settings.SettingsFilterTests)",
     "methodName": "testAddingAndRemovingFilters",
     "className": "org.elasticsearch.common.settings.SettingsFilterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047125795
 }
]

[
 "TEST_STARTED",
 "ID#testSettingsFiltering(org.elasticsearch.common.settings.SettingsFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSettingsFiltering(org.elasticsearch.common.settings.SettingsFilterTests)",
  "startTimestamp": 1474047125858,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testAddingAndRemovingFilters(org.elasticsearch.common.settings.SettingsFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddingAndRemovingFilters(org.elasticsearch.common.settings.SettingsFilterTests)",
  "startTimestamp": 1474047125863,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.settings.SettingsFilterTests",
  "startTimestamp": 1474047125795,
  "executionTime": 73
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.CombineFunctionTests",
   "displayName": "org.elasticsearch.index.query.CombineFunctionTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.CombineFunctionTests",
   "children": [
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.index.query.CombineFunctionTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.index.query.CombineFunctionTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.index.query.CombineFunctionTests",
     "children": []
    },
    {
     "id": "ID#testReadFrom(org.elasticsearch.index.query.CombineFunctionTests)",
     "displayName": "testReadFrom(org.elasticsearch.index.query.CombineFunctionTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.index.query.CombineFunctionTests",
     "children": []
    },
    {
     "id": "ID#testWriteTo(org.elasticsearch.index.query.CombineFunctionTests)",
     "displayName": "testWriteTo(org.elasticsearch.index.query.CombineFunctionTests)",
     "methodName": "testWriteTo",
     "className": "org.elasticsearch.index.query.CombineFunctionTests",
     "children": []
    },
    {
     "id": "ID#testFromString(org.elasticsearch.index.query.CombineFunctionTests)",
     "displayName": "testFromString(org.elasticsearch.index.query.CombineFunctionTests)",
     "methodName": "testFromString",
     "className": "org.elasticsearch.index.query.CombineFunctionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047125883
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.index.query.CombineFunctionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.index.query.CombineFunctionTests)",
  "startTimestamp": 1474047125934,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.index.query.CombineFunctionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.index.query.CombineFunctionTests)",
  "startTimestamp": 1474047125936,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWriteTo(org.elasticsearch.index.query.CombineFunctionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteTo(org.elasticsearch.index.query.CombineFunctionTests)",
  "startTimestamp": 1474047125938,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromString(org.elasticsearch.index.query.CombineFunctionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromString(org.elasticsearch.index.query.CombineFunctionTests)",
  "startTimestamp": 1474047125941,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.CombineFunctionTests",
  "startTimestamp": 1474047125883,
  "executionTime": 65
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.all.SimpleAllTests",
   "displayName": "org.elasticsearch.common.lucene.all.SimpleAllTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.all.SimpleAllTests",
   "children": [
    {
     "id": "ID#testMultipleTokensAllNoBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)",
     "displayName": "testMultipleTokensAllNoBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)",
     "methodName": "testMultipleTokensAllNoBoost",
     "className": "org.elasticsearch.common.lucene.all.SimpleAllTests",
     "children": []
    },
    {
     "id": "ID#testSimpleAllNoBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)",
     "displayName": "testSimpleAllNoBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)",
     "methodName": "testSimpleAllNoBoost",
     "className": "org.elasticsearch.common.lucene.all.SimpleAllTests",
     "children": []
    },
    {
     "id": "ID#testMultipleTokensAllWithBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)",
     "displayName": "testMultipleTokensAllWithBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)",
     "methodName": "testMultipleTokensAllWithBoost",
     "className": "org.elasticsearch.common.lucene.all.SimpleAllTests",
     "children": []
    },
    {
     "id": "ID#testTermMissingFromOneSegment(org.elasticsearch.common.lucene.all.SimpleAllTests)",
     "displayName": "testTermMissingFromOneSegment(org.elasticsearch.common.lucene.all.SimpleAllTests)",
     "methodName": "testTermMissingFromOneSegment",
     "className": "org.elasticsearch.common.lucene.all.SimpleAllTests",
     "children": []
    },
    {
     "id": "ID#testNoTokens(org.elasticsearch.common.lucene.all.SimpleAllTests)",
     "displayName": "testNoTokens(org.elasticsearch.common.lucene.all.SimpleAllTests)",
     "methodName": "testNoTokens",
     "className": "org.elasticsearch.common.lucene.all.SimpleAllTests",
     "children": []
    },
    {
     "id": "ID#testSimpleAllWithBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)",
     "displayName": "testSimpleAllWithBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)",
     "methodName": "testSimpleAllWithBoost",
     "className": "org.elasticsearch.common.lucene.all.SimpleAllTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047125955
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleTokensAllNoBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleTokensAllNoBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)",
  "startTimestamp": 1474047125984,
  "executionTime": 63
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleAllNoBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleAllNoBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)",
  "startTimestamp": 1474047126048,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleTokensAllWithBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleTokensAllWithBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)",
  "startTimestamp": 1474047126072,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testTermMissingFromOneSegment(org.elasticsearch.common.lucene.all.SimpleAllTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermMissingFromOneSegment(org.elasticsearch.common.lucene.all.SimpleAllTests)",
  "startTimestamp": 1474047126084,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testNoTokens(org.elasticsearch.common.lucene.all.SimpleAllTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoTokens(org.elasticsearch.common.lucene.all.SimpleAllTests)",
  "startTimestamp": 1474047126101,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleAllWithBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleAllWithBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)",
  "startTimestamp": 1474047126118,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.all.SimpleAllTests",
  "startTimestamp": 1474047125955,
  "executionTime": 174
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests",
   "displayName": "org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests",
   "methodName": null,
   "className": "org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests",
   "children": [
    {
     "id": "ID#testIndexGenerationalFiles(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)",
     "displayName": "testIndexGenerationalFiles(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)",
     "methodName": "testIndexGenerationalFiles",
     "className": "org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests",
     "children": []
    },
    {
     "id": "ID#testRetrieveSnapshots(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)",
     "displayName": "testRetrieveSnapshots(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)",
     "methodName": "testRetrieveSnapshots",
     "className": "org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests",
     "children": []
    },
    {
     "id": "ID#testReadAndWriteSnapshotsThroughIndexFile(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)",
     "displayName": "testReadAndWriteSnapshotsThroughIndexFile(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)",
     "methodName": "testReadAndWriteSnapshotsThroughIndexFile",
     "className": "org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047126136
 }
]

[
 "TEST_STARTED",
 "ID#testIndexGenerationalFiles(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:32:06,168][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:32:06,224][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:32:06,224][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:32:06,229][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:32:06,231][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:32:06,231][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:32:06,369][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:32:06,369][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:32:06,370][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[8]}, bound_addresses {local[8]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:32:06,393][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{nDsyBU-nTCa6pAewcFz9Tg}{Yd7m6G4jQsO9r4GAlP2wdQ}{local}{local[8]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:32:06,395][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:32:06,441][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:32:06,596][INFO ][org.elasticsearch.repositories] [node_s_0] put repository [test-repo]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:32:06,847][INFO ][org.elasticsearch.repositories.blobstore] [BlobStoreRepositoryTests#testIndexGenerationalFiles]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexGenerationalFiles(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)",
  "startTimestamp": 1474047126155,
  "executionTime": 693
 }
]

[
 "TEST_STARTED",
 "ID#testRetrieveSnapshots(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:32:06,852][INFO ][org.elasticsearch.repositories.blobstore] -->  creating repository%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:32:06,855][INFO ][org.elasticsearch.repositories] [node_s_0] update repository [test-repo]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:32:06,905][INFO ][org.elasticsearch.repositories.blobstore] --> creating an index and indexing documents%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:32:06,910][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-idx] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:32:06,995][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-idx][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:32:07,253][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-idx/F9I1GTtTQlGHKUGLg0L_Og] create_mapping [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:32:08,306][INFO ][org.elasticsearch.repositories.blobstore] --> create first snapshot%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:32:08,616][INFO ][org.elasticsearch.snapshots] [node_s_0] snapshot [test-repo:test-snap-1/1tbYymwYQXy5QXqvrqf3jw] is done%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:32:08,644][INFO ][org.elasticsearch.repositories.blobstore] --> create second snapshot%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:32:08,707][INFO ][org.elasticsearch.snapshots] [node_s_0] snapshot [test-repo:test-snap-2/ra4GOri8SbqXoRIx6HeU7w] is done%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:32:08,745][INFO ][org.elasticsearch.repositories.blobstore] --> make sure the node's repository can resolve the snapshots%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:32:08,747][INFO ][org.elasticsearch.repositories.blobstore] [BlobStoreRepositoryTests#testRetrieveSnapshots]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRetrieveSnapshots(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)",
  "startTimestamp": 1474047126848,
  "executionTime": 2021
 }
]

[
 "TEST_STARTED",
 "ID#testReadAndWriteSnapshotsThroughIndexFile(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:32:08,887][INFO ][org.elasticsearch.repositories] [node_s_0] update repository [test-repo]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:32:09,029][INFO ][org.elasticsearch.repositories.blobstore] [BlobStoreRepositoryTests#testReadAndWriteSnapshotsThroughIndexFile]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadAndWriteSnapshotsThroughIndexFile(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)",
  "startTimestamp": 1474047128869,
  "executionTime": 161
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:32:09,031][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:32:09,031][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:32:09,032][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:32:09,033][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests",
  "startTimestamp": 1474047126136,
  "executionTime": 2944
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.LegacyTokenCountFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.LegacyTokenCountFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.LegacyTokenCountFieldMapperTests",
   "children": [
    {
     "id": "ID#testMerge(org.elasticsearch.index.mapper.LegacyTokenCountFieldMapperTests)",
     "displayName": "testMerge(org.elasticsearch.index.mapper.LegacyTokenCountFieldMapperTests)",
     "methodName": "testMerge",
     "className": "org.elasticsearch.index.mapper.LegacyTokenCountFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testCountPositions(org.elasticsearch.index.mapper.LegacyTokenCountFieldMapperTests)",
     "displayName": "testCountPositions(org.elasticsearch.index.mapper.LegacyTokenCountFieldMapperTests)",
     "methodName": "testCountPositions",
     "className": "org.elasticsearch.index.mapper.LegacyTokenCountFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047129087
 }
]

[
 "TEST_STARTED",
 "ID#testMerge(org.elasticsearch.index.mapper.LegacyTokenCountFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:09,141][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:09,171][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:09,171][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:09,175][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:09,177][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:09,178][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:09,409][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:09,409][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:09,409][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[9]}, bound_addresses {local[9]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:09,418][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{64atmOdISWqcQEFI41Y34Q}{SDo0wS7TTgyvmgoOLY8zNA}{local}{local[9]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:09,418][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:09,480][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:09,503][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:09,562][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:09,580][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyTokenCountFieldMapperTests#testMerge]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMerge(org.elasticsearch.index.mapper.LegacyTokenCountFieldMapperTests)",
  "startTimestamp": 1474047129124,
  "executionTime": 491
 }
]

[
 "TEST_STARTED",
 "ID#testCountPositions(org.elasticsearch.index.mapper.LegacyTokenCountFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:09,624][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyTokenCountFieldMapperTests#testCountPositions]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCountPositions(org.elasticsearch.index.mapper.LegacyTokenCountFieldMapperTests)",
  "startTimestamp": 1474047129616,
  "executionTime": 9
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:09,625][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:09,626][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:09,626][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:32:09,627][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.LegacyTokenCountFieldMapperTests",
  "startTimestamp": 1474047129087,
  "executionTime": 546
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.bootstrap.BootstrapSettingsTests",
   "displayName": "org.elasticsearch.bootstrap.BootstrapSettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.bootstrap.BootstrapSettingsTests",
   "children": [
    {
     "id": "ID#testDefaultSettings(org.elasticsearch.bootstrap.BootstrapSettingsTests)",
     "displayName": "testDefaultSettings(org.elasticsearch.bootstrap.BootstrapSettingsTests)",
     "methodName": "testDefaultSettings",
     "className": "org.elasticsearch.bootstrap.BootstrapSettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047129639
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultSettings(org.elasticsearch.bootstrap.BootstrapSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultSettings(org.elasticsearch.bootstrap.BootstrapSettingsTests)",
  "startTimestamp": 1474047129704,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.bootstrap.BootstrapSettingsTests",
  "startTimestamp": 1474047129639,
  "executionTime": 68
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.ingest.PipelineFactoryTests",
   "displayName": "org.elasticsearch.ingest.PipelineFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.ingest.PipelineFactoryTests",
   "children": [
    {
     "id": "ID#testCreateWithPipelineEmptyOnFailure(org.elasticsearch.ingest.PipelineFactoryTests)",
     "displayName": "testCreateWithPipelineEmptyOnFailure(org.elasticsearch.ingest.PipelineFactoryTests)",
     "methodName": "testCreateWithPipelineEmptyOnFailure",
     "className": "org.elasticsearch.ingest.PipelineFactoryTests",
     "children": []
    },
    {
     "id": "ID#testFlattenProcessors(org.elasticsearch.ingest.PipelineFactoryTests)",
     "displayName": "testFlattenProcessors(org.elasticsearch.ingest.PipelineFactoryTests)",
     "methodName": "testFlattenProcessors",
     "className": "org.elasticsearch.ingest.PipelineFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCreateProcessorsWithOnFailureProperties(org.elasticsearch.ingest.PipelineFactoryTests)",
     "displayName": "testCreateProcessorsWithOnFailureProperties(org.elasticsearch.ingest.PipelineFactoryTests)",
     "methodName": "testCreateProcessorsWithOnFailureProperties",
     "className": "org.elasticsearch.ingest.PipelineFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCreateWithPipelineOnFailure(org.elasticsearch.ingest.PipelineFactoryTests)",
     "displayName": "testCreateWithPipelineOnFailure(org.elasticsearch.ingest.PipelineFactoryTests)",
     "methodName": "testCreateWithPipelineOnFailure",
     "className": "org.elasticsearch.ingest.PipelineFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCreate(org.elasticsearch.ingest.PipelineFactoryTests)",
     "displayName": "testCreate(org.elasticsearch.ingest.PipelineFactoryTests)",
     "methodName": "testCreate",
     "className": "org.elasticsearch.ingest.PipelineFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCreateWithEmptyProcessorsField(org.elasticsearch.ingest.PipelineFactoryTests)",
     "displayName": "testCreateWithEmptyProcessorsField(org.elasticsearch.ingest.PipelineFactoryTests)",
     "methodName": "testCreateWithEmptyProcessorsField",
     "className": "org.elasticsearch.ingest.PipelineFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCreateWithPipelineIgnoreFailure(org.elasticsearch.ingest.PipelineFactoryTests)",
     "displayName": "testCreateWithPipelineIgnoreFailure(org.elasticsearch.ingest.PipelineFactoryTests)",
     "methodName": "testCreateWithPipelineIgnoreFailure",
     "className": "org.elasticsearch.ingest.PipelineFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCreateWithNoProcessorsField(org.elasticsearch.ingest.PipelineFactoryTests)",
     "displayName": "testCreateWithNoProcessorsField(org.elasticsearch.ingest.PipelineFactoryTests)",
     "methodName": "testCreateWithNoProcessorsField",
     "className": "org.elasticsearch.ingest.PipelineFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCreateWithPipelineEmptyOnFailureInProcessor(org.elasticsearch.ingest.PipelineFactoryTests)",
     "displayName": "testCreateWithPipelineEmptyOnFailureInProcessor(org.elasticsearch.ingest.PipelineFactoryTests)",
     "methodName": "testCreateWithPipelineEmptyOnFailureInProcessor",
     "className": "org.elasticsearch.ingest.PipelineFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCreateUnusedProcessorOptions(org.elasticsearch.ingest.PipelineFactoryTests)",
     "displayName": "testCreateUnusedProcessorOptions(org.elasticsearch.ingest.PipelineFactoryTests)",
     "methodName": "testCreateUnusedProcessorOptions",
     "className": "org.elasticsearch.ingest.PipelineFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047129715
 }
]

[
 "TEST_STARTED",
 "ID#testCreateWithPipelineEmptyOnFailure(org.elasticsearch.ingest.PipelineFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateWithPipelineEmptyOnFailure(org.elasticsearch.ingest.PipelineFactoryTests)",
  "startTimestamp": 1474047129740,
  "executionTime": 43
 }
]

[
 "TEST_STARTED",
 "ID#testFlattenProcessors(org.elasticsearch.ingest.PipelineFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFlattenProcessors(org.elasticsearch.ingest.PipelineFactoryTests)",
  "startTimestamp": 1474047129783,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testCreateProcessorsWithOnFailureProperties(org.elasticsearch.ingest.PipelineFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateProcessorsWithOnFailureProperties(org.elasticsearch.ingest.PipelineFactoryTests)",
  "startTimestamp": 1474047129806,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testCreateWithPipelineOnFailure(org.elasticsearch.ingest.PipelineFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateWithPipelineOnFailure(org.elasticsearch.ingest.PipelineFactoryTests)",
  "startTimestamp": 1474047129808,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testCreate(org.elasticsearch.ingest.PipelineFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreate(org.elasticsearch.ingest.PipelineFactoryTests)",
  "startTimestamp": 1474047129810,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testCreateWithEmptyProcessorsField(org.elasticsearch.ingest.PipelineFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateWithEmptyProcessorsField(org.elasticsearch.ingest.PipelineFactoryTests)",
  "startTimestamp": 1474047129812,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testCreateWithPipelineIgnoreFailure(org.elasticsearch.ingest.PipelineFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateWithPipelineIgnoreFailure(org.elasticsearch.ingest.PipelineFactoryTests)",
  "startTimestamp": 1474047129817,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testCreateWithNoProcessorsField(org.elasticsearch.ingest.PipelineFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateWithNoProcessorsField(org.elasticsearch.ingest.PipelineFactoryTests)",
  "startTimestamp": 1474047129819,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCreateWithPipelineEmptyOnFailureInProcessor(org.elasticsearch.ingest.PipelineFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateWithPipelineEmptyOnFailureInProcessor(org.elasticsearch.ingest.PipelineFactoryTests)",
  "startTimestamp": 1474047129821,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCreateUnusedProcessorOptions(org.elasticsearch.ingest.PipelineFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateUnusedProcessorOptions(org.elasticsearch.ingest.PipelineFactoryTests)",
  "startTimestamp": 1474047129823,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.ingest.PipelineFactoryTests",
  "startTimestamp": 1474047129715,
  "executionTime": 113
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests",
   "displayName": "org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests",
   "children": [
    {
     "id": "ID#testPatternCaptureTokenFilter(org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests)",
     "displayName": "testPatternCaptureTokenFilter(org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests)",
     "methodName": "testPatternCaptureTokenFilter",
     "className": "org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests",
     "children": []
    },
    {
     "id": "ID#testNoPatterns(org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests)",
     "displayName": "testNoPatterns(org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests)",
     "methodName": "testNoPatterns",
     "className": "org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047129837
 }
]

[
 "TEST_STARTED",
 "ID#testPatternCaptureTokenFilter(org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPatternCaptureTokenFilter(org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests)",
  "startTimestamp": 1474047129851,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testNoPatterns(org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoPatterns(org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests)",
  "startTimestamp": 1474047129873,
  "executionTime": 14
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests",
  "startTimestamp": 1474047129837,
  "executionTime": 52
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.CompletionFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
   "children": [
    {
     "id": "ID#testDefaultConfiguration(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testDefaultConfiguration(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testDefaultConfiguration",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testEmptyName(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testEmptyName(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testEmptyName",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testFieldValueValidation(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testFieldValueValidation(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testFieldValueValidation",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testFuzzyQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testFuzzyQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testFuzzyQueryType",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testParsingWithWeight(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testParsingWithWeight(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testParsingWithWeight",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testRegexQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testRegexQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testRegexQueryType",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testCompletionAnalyzerSettings(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testCompletionAnalyzerSettings(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testCompletionAnalyzerSettings",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testPrefixQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testPrefixQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testPrefixQueryType",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testParsingFull(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testParsingFull(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testParsingFull",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testParsingMultiValued(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testParsingMultiValued(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testParsingMultiValued",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNonContextEnabledParsingWithContexts(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testNonContextEnabledParsingWithContexts(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testNonContextEnabledParsingWithContexts",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testTypeParsing(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testTypeParsing(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testTypeParsing",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testParsingMixed(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testParsingMixed(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testParsingMixed",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testParsingMultiValueWithWeight(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testParsingMultiValueWithWeight(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testParsingMultiValueWithWeight",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testParsingMinimal(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testParsingMinimal(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testParsingMinimal",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047129898
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultConfiguration(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:09,923][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:09,945][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:09,945][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:09,948][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:09,951][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:09,951][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:10,097][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:10,097][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:10,098][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[10]}, bound_addresses {local[10]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:10,111][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{wFB48xHmRMyZszGE-hRBIQ}{IYgrT19oRhSqZY6y-mrWYA}{local}{local[10]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:10,112][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:10,138][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:10,156][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:10,215][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:10,507][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testDefaultConfiguration]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultConfiguration(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1474047129913,
  "executionTime": 701
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyName(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:10,620][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:10,679][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:10,705][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testEmptyName]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyName(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1474047130614,
  "executionTime": 125
 }
]

[
 "TEST_STARTED",
 "ID#testFieldValueValidation(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:10,747][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:10,805][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:10,827][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testFieldValueValidation]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldValueValidation(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1474047130740,
  "executionTime": 138
 }
]

[
 "TEST_STARTED",
 "ID#testFuzzyQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:10,886][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:10,956][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:10,986][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testFuzzyQueryType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFuzzyQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1474047130879,
  "executionTime": 292
 }
]

[
 "TEST_STARTED",
 "ID#testParsingWithWeight(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:11,181][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:11,247][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:11,266][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testParsingWithWeight]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingWithWeight(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1474047131172,
  "executionTime": 126
 }
]

[
 "TEST_STARTED",
 "ID#testRegexQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:11,304][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:11,437][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:11,455][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testRegexQueryType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegexQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1474047131298,
  "executionTime": 188
 }
]

[
 "TEST_STARTED",
 "ID#testCompletionAnalyzerSettings(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:11,492][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:11,544][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:11,557][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testCompletionAnalyzerSettings]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompletionAnalyzerSettings(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1474047131486,
  "executionTime": 104
 }
]

[
 "TEST_STARTED",
 "ID#testPrefixQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:11,598][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:11,664][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:11,681][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testPrefixQueryType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrefixQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1474047131590,
  "executionTime": 156
 }
]

[
 "TEST_STARTED",
 "ID#testParsingFull(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:11,754][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:11,803][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:11,817][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testParsingFull]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingFull(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1474047131747,
  "executionTime": 99
 }
]

[
 "TEST_STARTED",
 "ID#testParsingMultiValued(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:11,853][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:11,902][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:11,917][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testParsingMultiValued]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingMultiValued(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1474047131847,
  "executionTime": 99
 }
]

[
 "TEST_STARTED",
 "ID#testNonContextEnabledParsingWithContexts(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:11,952][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:11,999][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:12,013][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testNonContextEnabledParsingWithContexts]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNonContextEnabledParsingWithContexts(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1474047131946,
  "executionTime": 92
 }
]

[
 "TEST_STARTED",
 "ID#testTypeParsing(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:12,047][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:12,096][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:12,113][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testTypeParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeParsing(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1474047132038,
  "executionTime": 186
 }
]

[
 "TEST_STARTED",
 "ID#testParsingMixed(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:12,232][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:12,293][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:12,336][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testParsingMixed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingMixed(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1474047132224,
  "executionTime": 140
 }
]

[
 "TEST_STARTED",
 "ID#testParsingMultiValueWithWeight(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:12,371][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:12,433][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:12,448][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testParsingMultiValueWithWeight]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingMultiValueWithWeight(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1474047132364,
  "executionTime": 120
 }
]

[
 "TEST_STARTED",
 "ID#testParsingMinimal(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:12,491][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:12,548][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:12,562][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testParsingMinimal]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingMinimal(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1474047132484,
  "executionTime": 168
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:12,652][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:12,653][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:12,653][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:32:12,655][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.CompletionFieldMapperTests",
  "startTimestamp": 1474047129898,
  "executionTime": 2768
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.FilterTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.FilterTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.FilterTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.FilterTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.FilterTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.FilterTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.FilterTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.FilterTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.FilterTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.FilterTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.FilterTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.FilterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047132672
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:32:12,717][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{hF0MgFwGRRq4S4VD9twmhA}{local}{local[135]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.FilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.FilterTests)",
  "startTimestamp": 1474047132728,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.FilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.FilterTests)",
  "startTimestamp": 1474047132731,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.FilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.FilterTests)",
  "startTimestamp": 1474047132733,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.FilterTests",
  "startTimestamp": 1474047132672,
  "executionTime": 68
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests",
   "children": [
    {
     "id": "ID#testEncodeDecode(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
     "displayName": "testEncodeDecode(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
     "methodName": "testEncodeDecode",
     "className": "org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests",
     "children": []
    },
    {
     "id": "ID#testAccuracy(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
     "displayName": "testAccuracy(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
     "methodName": "testAccuracy",
     "className": "org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests",
     "children": []
    },
    {
     "id": "ID#testPrecisionFromThreshold(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
     "displayName": "testPrecisionFromThreshold(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
     "methodName": "testPrecisionFromThreshold",
     "className": "org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests",
     "children": []
    },
    {
     "id": "ID#testMerge(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
     "displayName": "testMerge(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
     "methodName": "testMerge",
     "className": "org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests",
     "children": []
    },
    {
     "id": "ID#testFakeHashes(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
     "displayName": "testFakeHashes(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
     "methodName": "testFakeHashes",
     "className": "org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047132746
 }
]

[
 "TEST_STARTED",
 "ID#testEncodeDecode(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEncodeDecode(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
  "startTimestamp": 1474047132764,
  "executionTime": 308
 }
]

[
 "TEST_STARTED",
 "ID#testAccuracy(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAccuracy(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
  "startTimestamp": 1474047133072,
  "executionTime": 390
 }
]

[
 "TEST_STARTED",
 "ID#testPrecisionFromThreshold(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrecisionFromThreshold(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
  "startTimestamp": 1474047133462,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMerge(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMerge(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
  "startTimestamp": 1474047133464,
  "executionTime": 94
 }
]

[
 "TEST_STARTED",
 "ID#testFakeHashes(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFakeHashes(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
  "startTimestamp": 1474047133558,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests",
  "startTimestamp": 1474047132746,
  "executionTime": 902
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.sort.FieldSortBuilderTests",
   "displayName": "org.elasticsearch.search.sort.FieldSortBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.sort.FieldSortBuilderTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.sort.FieldSortBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.sort.FieldSortBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.sort.FieldSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBuildSortField(org.elasticsearch.search.sort.FieldSortBuilderTests)",
     "displayName": "testBuildSortField(org.elasticsearch.search.sort.FieldSortBuilderTests)",
     "methodName": "testBuildSortField",
     "className": "org.elasticsearch.search.sort.FieldSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testReverseOptionFails(org.elasticsearch.search.sort.FieldSortBuilderTests)",
     "displayName": "testReverseOptionFails(org.elasticsearch.search.sort.FieldSortBuilderTests)",
     "methodName": "testReverseOptionFails",
     "className": "org.elasticsearch.search.sort.FieldSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.sort.FieldSortBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.sort.FieldSortBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.sort.FieldSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.sort.FieldSortBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.sort.FieldSortBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.sort.FieldSortBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047133658
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.sort.FieldSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.sort.FieldSortBuilderTests)",
  "startTimestamp": 1474047133703,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testBuildSortField(org.elasticsearch.search.sort.FieldSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuildSortField(org.elasticsearch.search.sort.FieldSortBuilderTests)",
  "startTimestamp": 1474047133714,
  "executionTime": 129
 }
]

[
 "TEST_STARTED",
 "ID#testReverseOptionFails(org.elasticsearch.search.sort.FieldSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReverseOptionFails(org.elasticsearch.search.sort.FieldSortBuilderTests)",
  "startTimestamp": 1474047133843,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.sort.FieldSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.sort.FieldSortBuilderTests)",
  "startTimestamp": 1474047133850,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.sort.FieldSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.sort.FieldSortBuilderTests)",
  "startTimestamp": 1474047133853,
  "executionTime": 13
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.sort.FieldSortBuilderTests",
  "startTimestamp": 1474047133658,
  "executionTime": 211
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.collect.IteratorsTests",
   "displayName": "org.elasticsearch.common.collect.IteratorsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.collect.IteratorsTests",
   "children": [
    {
     "id": "ID#testRandomIterators(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testRandomIterators(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testRandomIterators",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    },
    {
     "id": "ID#testNoConcatenation(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testNoConcatenation(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testNoConcatenation",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    },
    {
     "id": "ID#testEmptyBeforeSingleton(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testEmptyBeforeSingleton(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testEmptyBeforeSingleton",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    },
    {
     "id": "ID#testEmptyConcatenation(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testEmptyConcatenation(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testEmptyConcatenation",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    },
    {
     "id": "ID#testNullIterator(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testNullIterator(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testNullIterator",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    },
    {
     "id": "ID#testConcatentation(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testConcatentation(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testConcatentation",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    },
    {
     "id": "ID#testSingleton(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testSingleton(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testSingleton",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    },
    {
     "id": "ID#testRandomSingleton(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testRandomSingleton(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testRandomSingleton",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    },
    {
     "id": "ID#testEmptyAfterSingleton(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testEmptyAfterSingleton(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testEmptyAfterSingleton",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    },
    {
     "id": "ID#testNull(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testNull(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testNull",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    },
    {
     "id": "ID#testTwoEntries(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testTwoEntries(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testTwoEntries",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    },
    {
     "id": "ID#testMultipleEmptyConcatenation(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testMultipleEmptyConcatenation(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testMultipleEmptyConcatenation",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047133876
 }
]

[
 "TEST_STARTED",
 "ID#testRandomIterators(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomIterators(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1474047133945,
  "executionTime": 59
 }
]

[
 "TEST_STARTED",
 "ID#testNoConcatenation(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoConcatenation(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1474047134004,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyBeforeSingleton(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyBeforeSingleton(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1474047134007,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyConcatenation(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyConcatenation(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1474047134009,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testNullIterator(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullIterator(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1474047134015,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testConcatentation(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcatentation(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1474047134019,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSingleton(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleton(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1474047134021,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRandomSingleton(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomSingleton(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1474047134023,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyAfterSingleton(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyAfterSingleton(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1474047134027,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNull(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNull(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1474047134030,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTwoEntries(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTwoEntries(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1474047134032,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleEmptyConcatenation(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleEmptyConcatenation(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1474047134034,
  "executionTime": 26
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.collect.IteratorsTests",
  "startTimestamp": 1474047133876,
  "executionTime": 186
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
   "displayName": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
   "children": [
    {
     "id": "ID#testNameMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testNameMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testNameMatch",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testIpPublishFilteringNotMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testIpPublishFilteringNotMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testIpPublishFilteringNotMatchingAnd",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testIpPublishFilteringMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testIpPublishFilteringMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testIpPublishFilteringMatchingOr",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testStarMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testStarMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testStarMatch",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testIpBindFilteringMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testIpBindFilteringMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testIpBindFilteringMatchingOr",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testIpPublishFilteringMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testIpPublishFilteringMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testIpPublishFilteringMatchingAnd",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testIpBindFilteringNotMatching(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testIpBindFilteringNotMatching(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testIpBindFilteringNotMatching",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testIdOrNameMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testIdOrNameMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testIdOrNameMatch",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testIpBindFilteringNotMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testIpBindFilteringNotMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testIpBindFilteringNotMatchingOr",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testIpBindFilteringNotMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testIpBindFilteringNotMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testIpBindFilteringNotMatchingAnd",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testIdMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testIdMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testIdMatch",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testTagAndGroupMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testTagAndGroupMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testTagAndGroupMatch",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testIpPublishFilteringNotMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testIpPublishFilteringNotMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testIpPublishFilteringNotMatchingOr",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testIpBindFilteringMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testIpBindFilteringMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testIpBindFilteringMatchingAnd",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047134072
 }
]

[
 "TEST_STARTED",
 "ID#testNameMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNameMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1474047134097,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIpPublishFilteringNotMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIpPublishFilteringNotMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1474047134099,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIpPublishFilteringMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIpPublishFilteringMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1474047134103,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testStarMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStarMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1474047134105,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIpBindFilteringMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIpBindFilteringMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1474047134107,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIpPublishFilteringMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIpPublishFilteringMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1474047134109,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIpBindFilteringNotMatching(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIpBindFilteringNotMatching(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1474047134111,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIdOrNameMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIdOrNameMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1474047134113,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIpBindFilteringNotMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIpBindFilteringNotMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1474047134116,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testIpBindFilteringNotMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIpBindFilteringNotMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1474047134118,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testIdMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIdMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1474047134123,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTagAndGroupMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTagAndGroupMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1474047134125,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIpPublishFilteringNotMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIpPublishFilteringNotMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1474047134128,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIpBindFilteringMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIpBindFilteringMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1474047134130,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
  "startTimestamp": 1474047134072,
  "executionTime": 65
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests",
   "displayName": "org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests",
   "children": [
    {
     "id": "ID#testMultiGenerator(org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests)",
     "displayName": "testMultiGenerator(org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests)",
     "methodName": "testMultiGenerator",
     "className": "org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests",
     "children": []
    },
    {
     "id": "ID#testTrigram(org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests)",
     "displayName": "testTrigram(org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests)",
     "methodName": "testTrigram",
     "className": "org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests",
     "children": []
    },
    {
     "id": "ID#testNgram(org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests)",
     "displayName": "testNgram(org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests)",
     "methodName": "testNgram",
     "className": "org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047134203
 }
]

[
 "TEST_STARTED",
 "ID#testMultiGenerator(org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiGenerator(org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests)",
  "startTimestamp": 1474047134233,
  "executionTime": 448
 }
]

[
 "TEST_STARTED",
 "ID#testTrigram(org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTrigram(org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests)",
  "startTimestamp": 1474047134681,
  "executionTime": 114
 }
]

[
 "TEST_STARTED",
 "ID#testNgram(org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNgram(org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests)",
  "startTimestamp": 1474047134796,
  "executionTime": 72
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests",
  "startTimestamp": 1474047134203,
  "executionTime": 671
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.HumanReadableIndexSettingsTests",
   "displayName": "org.elasticsearch.cluster.metadata.HumanReadableIndexSettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.HumanReadableIndexSettingsTests",
   "children": [
    {
     "id": "ID#testHumanReadableSettings(org.elasticsearch.cluster.metadata.HumanReadableIndexSettingsTests)",
     "displayName": "testHumanReadableSettings(org.elasticsearch.cluster.metadata.HumanReadableIndexSettingsTests)",
     "methodName": "testHumanReadableSettings",
     "className": "org.elasticsearch.cluster.metadata.HumanReadableIndexSettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047134880
 }
]

[
 "TEST_STARTED",
 "ID#testHumanReadableSettings(org.elasticsearch.cluster.metadata.HumanReadableIndexSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHumanReadableSettings(org.elasticsearch.cluster.metadata.HumanReadableIndexSettingsTests)",
  "startTimestamp": 1474047135143,
  "executionTime": 81
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.HumanReadableIndexSettingsTests",
  "startTimestamp": 1474047134880,
  "executionTime": 346
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.RecoverySourceTests",
   "displayName": "org.elasticsearch.cluster.routing.RecoverySourceTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.RecoverySourceTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.cluster.routing.RecoverySourceTests)",
     "displayName": "testSerialization(org.elasticsearch.cluster.routing.RecoverySourceTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.cluster.routing.RecoverySourceTests",
     "children": []
    },
    {
     "id": "ID#testRecoverySourceTypeOrder(org.elasticsearch.cluster.routing.RecoverySourceTests)",
     "displayName": "testRecoverySourceTypeOrder(org.elasticsearch.cluster.routing.RecoverySourceTests)",
     "methodName": "testRecoverySourceTypeOrder",
     "className": "org.elasticsearch.cluster.routing.RecoverySourceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047135232
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.cluster.routing.RecoverySourceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.cluster.routing.RecoverySourceTests)",
  "startTimestamp": 1474047135286,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverySourceTypeOrder(org.elasticsearch.cluster.routing.RecoverySourceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverySourceTypeOrder(org.elasticsearch.cluster.routing.RecoverySourceTests)",
  "startTimestamp": 1474047135290,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.RecoverySourceTests",
  "startTimestamp": 1474047135232,
  "executionTime": 63
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.BucketUtilsTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.BucketUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.BucketUtilsTests",
   "children": [
    {
     "id": "ID#testOverFlow(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
     "displayName": "testOverFlow(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
     "methodName": "testOverFlow",
     "className": "org.elasticsearch.search.aggregations.bucket.BucketUtilsTests",
     "children": []
    },
    {
     "id": "ID#testOptimizesSingleShard(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
     "displayName": "testOptimizesSingleShard(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
     "methodName": "testOptimizesSingleShard",
     "className": "org.elasticsearch.search.aggregations.bucket.BucketUtilsTests",
     "children": []
    },
    {
     "id": "ID#testShardSizeIsGreaterThanGlobalSize(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
     "displayName": "testShardSizeIsGreaterThanGlobalSize(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
     "methodName": "testShardSizeIsGreaterThanGlobalSize",
     "className": "org.elasticsearch.search.aggregations.bucket.BucketUtilsTests",
     "children": []
    },
    {
     "id": "ID#testBadInput(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
     "displayName": "testBadInput(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
     "methodName": "testBadInput",
     "className": "org.elasticsearch.search.aggregations.bucket.BucketUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047135301
 }
]

[
 "TEST_STARTED",
 "ID#testOverFlow(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOverFlow(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
  "startTimestamp": 1474047135335,
  "executionTime": 71
 }
]

[
 "TEST_STARTED",
 "ID#testOptimizesSingleShard(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOptimizesSingleShard(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
  "startTimestamp": 1474047135407,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testShardSizeIsGreaterThanGlobalSize(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardSizeIsGreaterThanGlobalSize(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
  "startTimestamp": 1474047135409,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testBadInput(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBadInput(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
  "startTimestamp": 1474047135411,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.BucketUtilsTests",
  "startTimestamp": 1474047135301,
  "executionTime": 114
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.CopyToMapperTests",
   "displayName": "org.elasticsearch.index.mapper.CopyToMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.CopyToMapperTests",
   "children": [
    {
     "id": "ID#testCopyToDynamicNestedObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "displayName": "testCopyToDynamicNestedObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "methodName": "testCopyToDynamicNestedObjectParsing",
     "className": "org.elasticsearch.index.mapper.CopyToMapperTests",
     "children": []
    },
    {
     "id": "ID#testCopyToNestedField(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "displayName": "testCopyToNestedField(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "methodName": "testCopyToNestedField",
     "className": "org.elasticsearch.index.mapper.CopyToMapperTests",
     "children": []
    },
    {
     "id": "ID#testCopyToStrictDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "displayName": "testCopyToStrictDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "methodName": "testCopyToStrictDynamicInnerObjectParsing",
     "className": "org.elasticsearch.index.mapper.CopyToMapperTests",
     "children": []
    },
    {
     "id": "ID#testCopyToFieldMerge(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "displayName": "testCopyToFieldMerge(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "methodName": "testCopyToFieldMerge",
     "className": "org.elasticsearch.index.mapper.CopyToMapperTests",
     "children": []
    },
    {
     "id": "ID#testCopyToDynamicInnerInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "displayName": "testCopyToDynamicInnerInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "methodName": "testCopyToDynamicInnerInnerObjectParsing",
     "className": "org.elasticsearch.index.mapper.CopyToMapperTests",
     "children": []
    },
    {
     "id": "ID#testCopyToDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "displayName": "testCopyToDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "methodName": "testCopyToDynamicInnerObjectParsing",
     "className": "org.elasticsearch.index.mapper.CopyToMapperTests",
     "children": []
    },
    {
     "id": "ID#testCopyToFieldsParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "displayName": "testCopyToFieldsParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "methodName": "testCopyToFieldsParsing",
     "className": "org.elasticsearch.index.mapper.CopyToMapperTests",
     "children": []
    },
    {
     "id": "ID#testCopyToInnerStrictDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "displayName": "testCopyToInnerStrictDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "methodName": "testCopyToInnerStrictDynamicInnerObjectParsing",
     "className": "org.elasticsearch.index.mapper.CopyToMapperTests",
     "children": []
    },
    {
     "id": "ID#testCopyToFieldsInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "displayName": "testCopyToFieldsInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "methodName": "testCopyToFieldsInnerObjectParsing",
     "className": "org.elasticsearch.index.mapper.CopyToMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047135420
 }
]

[
 "TEST_STARTED",
 "ID#testCopyToDynamicNestedObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:15,449][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:15,477][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:15,477][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:15,480][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:15,489][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:15,490][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:15,630][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:15,631][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:15,631][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[11]}, bound_addresses {local[11]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:15,638][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{S4Sx3OHTRU-0drdvHO9MLA}{v0ZuzN1ET1mn-mz93trsYA}{local}{local[11]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:15,639][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:15,652][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:15,677][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:15,736][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:15,853][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CopyToMapperTests#testCopyToDynamicNestedObjectParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyToDynamicNestedObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
  "startTimestamp": 1474047135439,
  "executionTime": 438
 }
]

[
 "TEST_STARTED",
 "ID#testCopyToNestedField(org.elasticsearch.index.mapper.CopyToMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:15,885][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:15,921][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:15,938][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CopyToMapperTests#testCopyToNestedField]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyToNestedField(org.elasticsearch.index.mapper.CopyToMapperTests)",
  "startTimestamp": 1474047135878,
  "executionTime": 97
 }
]

[
 "TEST_STARTED",
 "ID#testCopyToStrictDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:15,982][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:16,049][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:16,063][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CopyToMapperTests#testCopyToStrictDynamicInnerObjectParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyToStrictDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
  "startTimestamp": 1474047135975,
  "executionTime": 121
 }
]

[
 "TEST_STARTED",
 "ID#testCopyToFieldMerge(org.elasticsearch.index.mapper.CopyToMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:16,103][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:16,166][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:16,190][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CopyToMapperTests#testCopyToFieldMerge]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyToFieldMerge(org.elasticsearch.index.mapper.CopyToMapperTests)",
  "startTimestamp": 1474047136096,
  "executionTime": 137
 }
]

[
 "TEST_STARTED",
 "ID#testCopyToDynamicInnerInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:16,240][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:16,289][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:16,304][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CopyToMapperTests#testCopyToDynamicInnerInnerObjectParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyToDynamicInnerInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
  "startTimestamp": 1474047136233,
  "executionTime": 112
 }
]

[
 "TEST_STARTED",
 "ID#testCopyToDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:16,352][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:16,446][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:16,464][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CopyToMapperTests#testCopyToDynamicInnerObjectParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyToDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
  "startTimestamp": 1474047136345,
  "executionTime": 160
 }
]

[
 "TEST_STARTED",
 "ID#testCopyToFieldsParsing(org.elasticsearch.index.mapper.CopyToMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:16,513][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:16,589][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:16,606][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/jtqm6PG3SCKA9nwUGaopYA] create_mapping [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:16,646][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/jtqm6PG3SCKA9nwUGaopYA] update_mapping [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:16,664][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CopyToMapperTests#testCopyToFieldsParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyToFieldsParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
  "startTimestamp": 1474047136506,
  "executionTime": 188
 }
]

[
 "TEST_STARTED",
 "ID#testCopyToInnerStrictDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:16,700][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:16,758][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:16,839][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CopyToMapperTests#testCopyToInnerStrictDynamicInnerObjectParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyToInnerStrictDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
  "startTimestamp": 1474047136694,
  "executionTime": 168
 }
]

[
 "TEST_STARTED",
 "ID#testCopyToFieldsInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:16,869][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:16,940][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:16,954][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CopyToMapperTests#testCopyToFieldsInnerObjectParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyToFieldsInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
  "startTimestamp": 1474047136863,
  "executionTime": 136
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:16,999][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:17,002][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:17,002][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:17,004][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.CopyToMapperTests",
  "startTimestamp": 1474047135420,
  "executionTime": 1594
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.IndexingMemoryControllerTests",
   "displayName": "org.elasticsearch.indices.IndexingMemoryControllerTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.IndexingMemoryControllerTests",
   "children": [
    {
     "id": "ID#testNegativeInterval(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "displayName": "testNegativeInterval(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "methodName": "testNegativeInterval",
     "className": "org.elasticsearch.indices.IndexingMemoryControllerTests",
     "children": []
    },
    {
     "id": "ID#testTranslogRecoveryWorksWithIMC(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "displayName": "testTranslogRecoveryWorksWithIMC(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "methodName": "testTranslogRecoveryWorksWithIMC",
     "className": "org.elasticsearch.indices.IndexingMemoryControllerTests",
     "children": []
    },
    {
     "id": "ID#testThrottling(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "displayName": "testThrottling(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "methodName": "testThrottling",
     "className": "org.elasticsearch.indices.IndexingMemoryControllerTests",
     "children": []
    },
    {
     "id": "ID#testNegativeMaxIndexBufferSize(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "displayName": "testNegativeMaxIndexBufferSize(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "methodName": "testNegativeMaxIndexBufferSize",
     "className": "org.elasticsearch.indices.IndexingMemoryControllerTests",
     "children": []
    },
    {
     "id": "ID#testNegativeMinIndexBufferSize(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "displayName": "testNegativeMinIndexBufferSize(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "methodName": "testNegativeMinIndexBufferSize",
     "className": "org.elasticsearch.indices.IndexingMemoryControllerTests",
     "children": []
    },
    {
     "id": "ID#testMinBufferSizes(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "displayName": "testMinBufferSizes(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "methodName": "testMinBufferSizes",
     "className": "org.elasticsearch.indices.IndexingMemoryControllerTests",
     "children": []
    },
    {
     "id": "ID#testShardAdditionAndRemoval(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "displayName": "testShardAdditionAndRemoval(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "methodName": "testShardAdditionAndRemoval",
     "className": "org.elasticsearch.indices.IndexingMemoryControllerTests",
     "children": []
    },
    {
     "id": "ID#testDeletesAloneCanTriggerRefresh(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "displayName": "testDeletesAloneCanTriggerRefresh(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "methodName": "testDeletesAloneCanTriggerRefresh",
     "className": "org.elasticsearch.indices.IndexingMemoryControllerTests",
     "children": []
    },
    {
     "id": "ID#testMaxBufferSizes(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "displayName": "testMaxBufferSizes(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "methodName": "testMaxBufferSizes",
     "className": "org.elasticsearch.indices.IndexingMemoryControllerTests",
     "children": []
    },
    {
     "id": "ID#testNegativeShardInactiveTime(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "displayName": "testNegativeShardInactiveTime(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "methodName": "testNegativeShardInactiveTime",
     "className": "org.elasticsearch.indices.IndexingMemoryControllerTests",
     "children": []
    },
    {
     "id": "ID#testActiveInactive(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "displayName": "testActiveInactive(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "methodName": "testActiveInactive",
     "className": "org.elasticsearch.indices.IndexingMemoryControllerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047137024
 }
]

[
 "TEST_STARTED",
 "ID#testNegativeInterval(org.elasticsearch.indices.IndexingMemoryControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:17,063][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:17,091][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:17,091][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:17,094][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:17,097][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:17,097][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:17,276][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:17,276][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:17,277][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[12]}, bound_addresses {local[12]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:17,293][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{8ogleM-KS6GniBO6VmqmjQ}{er6xVj2iSNiluEjw9UXugw}{local}{local[12]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:17,294][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:17,335][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:17,351][INFO ][org.elasticsearch.indices] [node_s_0] [IndexingMemoryControllerTests#testNegativeInterval]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNegativeInterval(org.elasticsearch.indices.IndexingMemoryControllerTests)",
  "startTimestamp": 1474047137047,
  "executionTime": 305
 }
]

[
 "TEST_STARTED",
 "ID#testTranslogRecoveryWorksWithIMC(org.elasticsearch.indices.IndexingMemoryControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:17,359][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:17,497][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:17,535][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/RxC-Wm5NSbOxx7Vz2R1IAg] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:19,654][INFO ][org.elasticsearch.indices] [node_s_0] now throttling indexing for shard [[test][0]]: segment writing can't keep up%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:20,075][INFO ][org.elasticsearch.indices] [node_s_0] [IndexingMemoryControllerTests#testTranslogRecoveryWorksWithIMC]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTranslogRecoveryWorksWithIMC(org.elasticsearch.indices.IndexingMemoryControllerTests)",
  "startTimestamp": 1474047137353,
  "executionTime": 2761
 }
]

[
 "TEST_STARTED",
 "ID#testThrottling(org.elasticsearch.indices.IndexingMemoryControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:20,121][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [3]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:20,258][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:20,274][INFO ][org.elasticsearch.indices] [node_s_0] now throttling indexing for shard [[test][1]]: segment writing can't keep up%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:20,274][INFO ][org.elasticsearch.indices] [node_s_0] --> Indexing more data%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:20,274][INFO ][org.elasticsearch.indices] [node_s_0] now throttling indexing for shard [[test][0]]: segment writing can't keep up%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:20,275][INFO ][org.elasticsearch.indices] [node_s_0] stop throttling indexing for shard [[test][0]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:20,275][INFO ][org.elasticsearch.indices] [node_s_0] stop throttling indexing for shard [[test][1]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:20,275][INFO ][org.elasticsearch.indices] [node_s_0] [IndexingMemoryControllerTests#testThrottling]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThrottling(org.elasticsearch.indices.IndexingMemoryControllerTests)",
  "startTimestamp": 1474047140114,
  "executionTime": 243
 }
]

[
 "TEST_STARTED",
 "ID#testNegativeMaxIndexBufferSize(org.elasticsearch.indices.IndexingMemoryControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:20,361][INFO ][org.elasticsearch.indices] [node_s_0] [IndexingMemoryControllerTests#testNegativeMaxIndexBufferSize]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNegativeMaxIndexBufferSize(org.elasticsearch.indices.IndexingMemoryControllerTests)",
  "startTimestamp": 1474047140357,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testNegativeMinIndexBufferSize(org.elasticsearch.indices.IndexingMemoryControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:20,367][INFO ][org.elasticsearch.indices] [node_s_0] [IndexingMemoryControllerTests#testNegativeMinIndexBufferSize]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNegativeMinIndexBufferSize(org.elasticsearch.indices.IndexingMemoryControllerTests)",
  "startTimestamp": 1474047140363,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testMinBufferSizes(org.elasticsearch.indices.IndexingMemoryControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:20,372][INFO ][org.elasticsearch.indices] [node_s_0] [IndexingMemoryControllerTests#testMinBufferSizes]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinBufferSizes(org.elasticsearch.indices.IndexingMemoryControllerTests)",
  "startTimestamp": 1474047140368,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testShardAdditionAndRemoval(org.elasticsearch.indices.IndexingMemoryControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:20,380][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [3]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:20,526][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][2], [test][1], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:20,541][INFO ][org.elasticsearch.indices] [node_s_0] [IndexingMemoryControllerTests#testShardAdditionAndRemoval]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardAdditionAndRemoval(org.elasticsearch.indices.IndexingMemoryControllerTests)",
  "startTimestamp": 1474047140373,
  "executionTime": 234
 }
]

[
 "TEST_STARTED",
 "ID#testDeletesAloneCanTriggerRefresh(org.elasticsearch.indices.IndexingMemoryControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:20,614][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:20,708][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:20,731][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index/Ri_q62fESZ6Xt70m7BEBHw] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:23,140][INFO ][org.elasticsearch.indices] [node_s_0] now throttling indexing for shard [[index][0]]: segment writing can't keep up%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:23,141][INFO ][org.elasticsearch.indices] [node_s_0] [IndexingMemoryControllerTests#testDeletesAloneCanTriggerRefresh]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeletesAloneCanTriggerRefresh(org.elasticsearch.indices.IndexingMemoryControllerTests)",
  "startTimestamp": 1474047140607,
  "executionTime": 2592
 }
]

[
 "TEST_STARTED",
 "ID#testMaxBufferSizes(org.elasticsearch.indices.IndexingMemoryControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:23,203][INFO ][org.elasticsearch.indices] [node_s_0] [IndexingMemoryControllerTests#testMaxBufferSizes]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMaxBufferSizes(org.elasticsearch.indices.IndexingMemoryControllerTests)",
  "startTimestamp": 1474047143199,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testNegativeShardInactiveTime(org.elasticsearch.indices.IndexingMemoryControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:23,207][INFO ][org.elasticsearch.indices] [node_s_0] [IndexingMemoryControllerTests#testNegativeShardInactiveTime]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNegativeShardInactiveTime(org.elasticsearch.indices.IndexingMemoryControllerTests)",
  "startTimestamp": 1474047143204,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testActiveInactive(org.elasticsearch.indices.IndexingMemoryControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:23,217][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [2]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:23,317][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:23,330][INFO ][org.elasticsearch.indices] [node_s_0] now throttling indexing for shard [[test][1]]: segment writing can't keep up%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:23,330][INFO ][org.elasticsearch.indices] [node_s_0] [IndexingMemoryControllerTests#testActiveInactive]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActiveInactive(org.elasticsearch.indices.IndexingMemoryControllerTests)",
  "startTimestamp": 1474047143208,
  "executionTime": 169
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:23,377][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:23,377][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:23,378][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:32:23,381][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.IndexingMemoryControllerTests",
  "startTimestamp": 1474047137024,
  "executionTime": 6374
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.TypeQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.TypeQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.TypeQueryBuilderTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.TypeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.TypeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.TypeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.TypeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.TypeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArgument(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "displayName": "testIllegalArgument(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "methodName": "testIllegalArgument",
     "className": "org.elasticsearch.index.query.TypeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.TypeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.TypeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.TypeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.TypeQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047143406
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.TypeQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:23,558][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{_hZfFkLuRlaSR6-dsjhICA}{local}{local[149]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:23,566][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:23,566][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.TypeQueryBuilderTests)",
  "startTimestamp": 1474047143476,
  "executionTime": 108
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.TypeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.TypeQueryBuilderTests)",
  "startTimestamp": 1474047143584,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.TypeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.TypeQueryBuilderTests)",
  "startTimestamp": 1474047143590,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.TypeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.TypeQueryBuilderTests)",
  "startTimestamp": 1474047143595,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.TypeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.TypeQueryBuilderTests)",
  "startTimestamp": 1474047143623,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArgument(org.elasticsearch.index.query.TypeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArgument(org.elasticsearch.index.query.TypeQueryBuilderTests)",
  "startTimestamp": 1474047143626,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.TypeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.TypeQueryBuilderTests)",
  "startTimestamp": 1474047143628,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.TypeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.TypeQueryBuilderTests)",
  "startTimestamp": 1474047143631,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.TypeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.TypeQueryBuilderTests)",
  "startTimestamp": 1474047143633,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.TypeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.TypeQueryBuilderTests)",
  "startTimestamp": 1474047143636,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.TypeQueryBuilderTests",
  "startTimestamp": 1474047143406,
  "executionTime": 236
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests",
   "displayName": "org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests",
   "methodName": null,
   "className": "org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests",
   "children": [
    {
     "id": "ID#testNotEnoughMasterNodesAfterRemove(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)",
     "displayName": "testNotEnoughMasterNodesAfterRemove(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)",
     "methodName": "testNotEnoughMasterNodesAfterRemove",
     "className": "org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests",
     "children": []
    },
    {
     "id": "ID#testRerouteAfterRemovingNodes(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)",
     "displayName": "testRerouteAfterRemovingNodes(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)",
     "methodName": "testRerouteAfterRemovingNodes",
     "className": "org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests",
     "children": []
    },
    {
     "id": "ID#testRemovingNonExistentNodes(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)",
     "displayName": "testRemovingNonExistentNodes(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)",
     "methodName": "testRemovingNonExistentNodes",
     "className": "org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047143701
 }
]

[
 "TEST_STARTED",
 "ID#testNotEnoughMasterNodesAfterRemove(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotEnoughMasterNodesAfterRemove(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)",
  "startTimestamp": 1474047143727,
  "executionTime": 211
 }
]

[
 "TEST_STARTED",
 "ID#testRerouteAfterRemovingNodes(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRerouteAfterRemovingNodes(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)",
  "startTimestamp": 1474047143939,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testRemovingNonExistentNodes(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemovingNonExistentNodes(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)",
  "startTimestamp": 1474047143947,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests",
  "startTimestamp": 1474047143701,
  "executionTime": 254
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.URIPatternTests",
   "displayName": "org.elasticsearch.common.util.URIPatternTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.URIPatternTests",
   "children": [
    {
     "id": "ID#testURIPattern(org.elasticsearch.common.util.URIPatternTests)",
     "displayName": "testURIPattern(org.elasticsearch.common.util.URIPatternTests)",
     "methodName": "testURIPattern",
     "className": "org.elasticsearch.common.util.URIPatternTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047143961
 }
]

[
 "TEST_STARTED",
 "ID#testURIPattern(org.elasticsearch.common.util.URIPatternTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testURIPattern(org.elasticsearch.common.util.URIPatternTests)",
  "startTimestamp": 1474047144025,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.URIPatternTests",
  "startTimestamp": 1474047143961,
  "executionTime": 69
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.KeywordFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
   "children": [
    {
     "id": "ID#testFuzzyQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "displayName": "testFuzzyQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "methodName": "testFuzzyQuery",
     "className": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testTermsQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "displayName": "testTermsQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "methodName": "testTermsQuery",
     "className": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testTermQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "displayName": "testTermQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "methodName": "testTermQuery",
     "className": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testRegexpQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "displayName": "testRegexpQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "methodName": "testRegexpQuery",
     "className": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "displayName": "testIsFieldWithinQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "methodName": "testIsFieldWithinQuery",
     "className": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047144036
 }
]

[
 "TEST_STARTED",
 "ID#testFuzzyQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFuzzyQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
  "startTimestamp": 1474047144085,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTermsQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermsQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
  "startTimestamp": 1474047144087,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.KeywordFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
  "startTimestamp": 1474047144093,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTermQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
  "startTimestamp": 1474047144095,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.KeywordFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
  "startTimestamp": 1474047144097,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.KeywordFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
  "startTimestamp": 1474047144100,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRegexpQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegexpQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
  "startTimestamp": 1474047144102,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.KeywordFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
  "startTimestamp": 1474047144114,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
  "startTimestamp": 1474047144116,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.KeywordFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
  "startTimestamp": 1474047144120,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.KeywordFieldTypeTests",
  "startTimestamp": 1474047144036,
  "executionTime": 88
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.gateway.GatewayServiceTests",
   "displayName": "org.elasticsearch.gateway.GatewayServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.gateway.GatewayServiceTests",
   "children": [
    {
     "id": "ID#testDefaultRecoverAfterTime(org.elasticsearch.gateway.GatewayServiceTests)",
     "displayName": "testDefaultRecoverAfterTime(org.elasticsearch.gateway.GatewayServiceTests)",
     "methodName": "testDefaultRecoverAfterTime",
     "className": "org.elasticsearch.gateway.GatewayServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047144130
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultRecoverAfterTime(org.elasticsearch.gateway.GatewayServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultRecoverAfterTime(org.elasticsearch.gateway.GatewayServiceTests)",
  "startTimestamp": 1474047144152,
  "executionTime": 13
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.gateway.GatewayServiceTests",
  "startTimestamp": 1474047144130,
  "executionTime": 37
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.SpecialPermissionTests",
   "displayName": "org.elasticsearch.SpecialPermissionTests",
   "methodName": null,
   "className": "org.elasticsearch.SpecialPermissionTests",
   "children": [
    {
     "id": "ID#testImplies(org.elasticsearch.SpecialPermissionTests)",
     "displayName": "testImplies(org.elasticsearch.SpecialPermissionTests)",
     "methodName": "testImplies",
     "className": "org.elasticsearch.SpecialPermissionTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.SpecialPermissionTests)",
     "displayName": "testEquals(org.elasticsearch.SpecialPermissionTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.SpecialPermissionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047144180
 }
]

[
 "TEST_STARTED",
 "ID#testImplies(org.elasticsearch.SpecialPermissionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testImplies(org.elasticsearch.SpecialPermissionTests)",
  "startTimestamp": 1474047144393,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.SpecialPermissionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.SpecialPermissionTests)",
  "startTimestamp": 1474047144421,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.SpecialPermissionTests",
  "startTimestamp": 1474047144180,
  "executionTime": 246
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests",
   "displayName": "org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests",
   "children": [
    {
     "id": "ID#testRemoveIndexTwice(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)",
     "displayName": "testRemoveIndexTwice(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)",
     "methodName": "testRemoveIndexTwice",
     "className": "org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests",
     "children": []
    },
    {
     "id": "ID#testAddAndRemove(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)",
     "displayName": "testAddAndRemove(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)",
     "methodName": "testAddAndRemove",
     "className": "org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests",
     "children": []
    },
    {
     "id": "ID#testSwapIndexWithAlias(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)",
     "displayName": "testSwapIndexWithAlias(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)",
     "methodName": "testSwapIndexWithAlias",
     "className": "org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests",
     "children": []
    },
    {
     "id": "ID#testAddAliasToRemovedIndex(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)",
     "displayName": "testAddAliasToRemovedIndex(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)",
     "methodName": "testAddAliasToRemovedIndex",
     "className": "org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047144432
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveIndexTwice(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveIndexTwice(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)",
  "startTimestamp": 1474047144747,
  "executionTime": 133
 }
]

[
 "TEST_STARTED",
 "ID#testAddAndRemove(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddAndRemove(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)",
  "startTimestamp": 1474047144880,
  "executionTime": 125
 }
]

[
 "TEST_STARTED",
 "ID#testSwapIndexWithAlias(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSwapIndexWithAlias(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)",
  "startTimestamp": 1474047145006,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAddAliasToRemovedIndex(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddAliasToRemovedIndex(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)",
  "startTimestamp": 1474047145009,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests",
  "startTimestamp": 1474047144432,
  "executionTime": 583
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.TextFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.TextFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.TextFieldTypeTests",
   "children": [
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.TextFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testTermQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "displayName": "testTermQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "methodName": "testTermQuery",
     "className": "org.elasticsearch.index.mapper.TextFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testTermsQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "displayName": "testTermsQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "methodName": "testTermsQuery",
     "className": "org.elasticsearch.index.mapper.TextFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.TextFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.TextFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.TextFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFuzzyQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "displayName": "testFuzzyQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "methodName": "testFuzzyQuery",
     "className": "org.elasticsearch.index.mapper.TextFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testRegexpQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "displayName": "testRegexpQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "methodName": "testRegexpQuery",
     "className": "org.elasticsearch.index.mapper.TextFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.TextFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047145022
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.TextFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.TextFieldTypeTests)",
  "startTimestamp": 1474047145039,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTermQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
  "startTimestamp": 1474047145042,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTermsQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermsQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
  "startTimestamp": 1474047145044,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.TextFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.TextFieldTypeTests)",
  "startTimestamp": 1474047145047,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.TextFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.TextFieldTypeTests)",
  "startTimestamp": 1474047145062,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.TextFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.TextFieldTypeTests)",
  "startTimestamp": 1474047145065,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFuzzyQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFuzzyQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
  "startTimestamp": 1474047145067,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRegexpQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegexpQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
  "startTimestamp": 1474047145070,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.TextFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.TextFieldTypeTests)",
  "startTimestamp": 1474047145073,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.TextFieldTypeTests",
  "startTimestamp": 1474047145022,
  "executionTime": 58
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.QueryDSLDocumentationTests",
   "displayName": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
   "children": [
    {
     "id": "ID#testSpanTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testSpanTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testSpanTerm",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testPrefix(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testPrefix(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testPrefix",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testSpanFirst(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testSpanFirst(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testSpanFirst",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testQueryString(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testQueryString(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testQueryString",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testGeoHashCell(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testGeoHashCell(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testGeoHashCell",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testMatch(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testMatch(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testMatch",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testBool(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testBool(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testBool",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testWildcard(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testWildcard(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testWildcard",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testSimpleQueryString(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testSimpleQueryString(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testSimpleQueryString",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testGeoDistance(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testGeoDistance(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testGeoDistance",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testIndices(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testIndices(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testIndices",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testMatchAll(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testMatchAll(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testMatchAll",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testExists(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testExists(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testExists",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testType(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testType(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testType",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testMLT(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testMLT(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testMLT",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testScript(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testScript(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testScript",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testRegExp(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testRegExp(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testRegExp",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testGeoShape(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testGeoShape(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testGeoShape",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testHasParent(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testHasParent(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testHasParent",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testBoosting(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testBoosting(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testBoosting",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testConstantScore(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testConstantScore(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testConstantScore",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testMultiMatch(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testMultiMatch(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testMultiMatch",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testSpanWithin(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testSpanWithin(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testSpanWithin",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testNested(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testNested(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testNested",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testHasChild(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testHasChild(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testHasChild",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testFunctionScore(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testFunctionScore(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testFunctionScore",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testRange(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testRange(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testRange",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testDisMax(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testDisMax(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testDisMax",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testSpanOr(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testSpanOr(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testSpanOr",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testSpanMultiTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testSpanMultiTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testSpanMultiTerm",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testTerms(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testTerms(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testTerms",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testGeoPolygon(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testGeoPolygon(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testGeoPolygon",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testFuzzy(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testFuzzy(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testFuzzy",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testCommonTerms(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testCommonTerms(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testCommonTerms",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testSpanNear(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testSpanNear(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testSpanNear",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testSpanNot(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testSpanNot(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testSpanNot",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testIds(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testIds(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testIds",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testSpanContaining(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testSpanContaining(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testSpanContaining",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testGeoBoundingBox(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testGeoBoundingBox(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testGeoBoundingBox",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testTerm",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testGeoDistanceRange(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testGeoDistanceRange(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testGeoDistanceRange",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047145090
 }
]

[
 "TEST_STARTED",
 "ID#testSpanTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSpanTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474047145112,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testPrefix(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrefix(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474047145114,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSpanFirst(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSpanFirst(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474047145117,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testQueryString(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryString(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474047145119,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGeoHashCell(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoHashCell(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474047145121,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testMatch(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMatch(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474047145146,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testBool(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBool(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474047145148,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testWildcard(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWildcard(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474047145149,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleQueryString(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleQueryString(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474047145151,
  "executionTime": 58
 }
]

[
 "TEST_STARTED",
 "ID#testGeoDistance(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoDistance(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474047145210,
  "executionTime": 25
 }
]

[
 "TEST_STARTED",
 "ID#testIndices(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:25,237][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:25,240][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndices(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474047145235,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testMatchAll(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMatchAll(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474047145241,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testExists(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExists(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474047145244,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testType(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testType(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474047145246,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMLT(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMLT(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474047145248,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testScript(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScript(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474047145277,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testRegExp(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegExp(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474047145282,
  "executionTime": 33
 }
]

[
 "TEST_STARTED",
 "ID#testGeoShape(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoShape(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474047145315,
  "executionTime": 36
 }
]

[
 "TEST_STARTED",
 "ID#testHasParent(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasParent(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474047145351,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBoosting(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBoosting(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474047145353,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConstantScore(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConstantScore(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474047145355,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMultiMatch(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiMatch(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474047145357,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSpanWithin(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSpanWithin(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474047145361,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNested(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNested(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474047145363,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHasChild(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasChild(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474047145365,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFunctionScore(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFunctionScore(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474047145367,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testRange(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRange(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474047145389,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDisMax(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDisMax(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474047145391,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSpanOr(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSpanOr(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474047145393,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSpanMultiTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSpanMultiTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474047145396,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testTerms(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTerms(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474047145397,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGeoPolygon(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoPolygon(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474047145400,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFuzzy(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFuzzy(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474047145402,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testCommonTerms(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCommonTerms(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474047145403,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSpanNear(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSpanNear(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474047145405,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSpanNot(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSpanNot(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474047145409,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIds(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIds(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474047145411,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSpanContaining(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSpanContaining(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474047145414,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGeoBoundingBox(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoBoundingBox(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474047145416,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474047145418,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testGeoDistanceRange(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoDistanceRange(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474047145419,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.QueryDSLDocumentationTests",
  "startTimestamp": 1474047145090,
  "executionTime": 334
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.FieldDataCacheTests",
   "displayName": "org.elasticsearch.index.fielddata.FieldDataCacheTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.FieldDataCacheTests",
   "children": [
    {
     "id": "ID#testLoadGlobal_neverCacheIfFieldIsMissing(org.elasticsearch.index.fielddata.FieldDataCacheTests)",
     "displayName": "testLoadGlobal_neverCacheIfFieldIsMissing(org.elasticsearch.index.fielddata.FieldDataCacheTests)",
     "methodName": "testLoadGlobal_neverCacheIfFieldIsMissing",
     "className": "org.elasticsearch.index.fielddata.FieldDataCacheTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047145522
 }
]

[
 "TEST_STARTED",
 "ID#testLoadGlobal_neverCacheIfFieldIsMissing(org.elasticsearch.index.fielddata.FieldDataCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLoadGlobal_neverCacheIfFieldIsMissing(org.elasticsearch.index.fielddata.FieldDataCacheTests)",
  "startTimestamp": 1474047145539,
  "executionTime": 243
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.FieldDataCacheTests",
  "startTimestamp": 1474047145522,
  "executionTime": 262
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests",
   "displayName": "org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests",
   "methodName": null,
   "className": "org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests",
   "children": [
    {
     "id": "ID#testIsFatalCause(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)",
     "displayName": "testIsFatalCause(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)",
     "methodName": "testIsFatalCause",
     "className": "org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests",
     "children": []
    },
    {
     "id": "ID#testUncaughtException(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)",
     "displayName": "testUncaughtException(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)",
     "methodName": "testUncaughtException",
     "className": "org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests",
     "children": []
    },
    {
     "id": "ID#testUncaughtError(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)",
     "displayName": "testUncaughtError(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)",
     "methodName": "testUncaughtError",
     "className": "org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047145788
 }
]

[
 "TEST_STARTED",
 "ID#testIsFatalCause(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsFatalCause(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)",
  "startTimestamp": 1474047145797,
  "executionTime": 40
 }
]

[
 "TEST_STARTED",
 "ID#testUncaughtException(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUncaughtException(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)",
  "startTimestamp": 1474047145837,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUncaughtError(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUncaughtError(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)",
  "startTimestamp": 1474047145840,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests",
  "startTimestamp": 1474047145788,
  "executionTime": 57
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests",
   "children": [
    {
     "id": "ID#testSettings(org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests)",
     "displayName": "testSettings(org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests)",
     "methodName": "testSettings",
     "className": "org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testDefault(org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests)",
     "displayName": "testDefault(org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests)",
     "methodName": "testDefault",
     "className": "org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047145850
 }
]

[
 "TEST_STARTED",
 "ID#testSettings(org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSettings(org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests)",
  "startTimestamp": 1474047145863,
  "executionTime": 30
 }
]

[
 "TEST_STARTED",
 "ID#testDefault(org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefault(org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests)",
  "startTimestamp": 1474047145893,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests",
  "startTimestamp": 1474047145850,
  "executionTime": 58
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.plugins.PluginsServiceTests",
   "displayName": "org.elasticsearch.plugins.PluginsServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.plugins.PluginsServiceTests",
   "children": [
    {
     "id": "ID#testAdditionalSettingsClash(org.elasticsearch.plugins.PluginsServiceTests)",
     "displayName": "testAdditionalSettingsClash(org.elasticsearch.plugins.PluginsServiceTests)",
     "methodName": "testAdditionalSettingsClash",
     "className": "org.elasticsearch.plugins.PluginsServiceTests",
     "children": []
    },
    {
     "id": "ID#testAdditionalSettings(org.elasticsearch.plugins.PluginsServiceTests)",
     "displayName": "testAdditionalSettings(org.elasticsearch.plugins.PluginsServiceTests)",
     "methodName": "testAdditionalSettings",
     "className": "org.elasticsearch.plugins.PluginsServiceTests",
     "children": []
    },
    {
     "id": "ID#testOnModuleExceptionsArePropagated(org.elasticsearch.plugins.PluginsServiceTests)",
     "displayName": "testOnModuleExceptionsArePropagated(org.elasticsearch.plugins.PluginsServiceTests)",
     "methodName": "testOnModuleExceptionsArePropagated",
     "className": "org.elasticsearch.plugins.PluginsServiceTests",
     "children": []
    },
    {
     "id": "ID#testFilterPlugins(org.elasticsearch.plugins.PluginsServiceTests)",
     "displayName": "testFilterPlugins(org.elasticsearch.plugins.PluginsServiceTests)",
     "methodName": "testFilterPlugins",
     "className": "org.elasticsearch.plugins.PluginsServiceTests",
     "children": []
    },
    {
     "id": "ID#testExistingPluginMissingDescriptor(org.elasticsearch.plugins.PluginsServiceTests)",
     "displayName": "testExistingPluginMissingDescriptor(org.elasticsearch.plugins.PluginsServiceTests)",
     "methodName": "testExistingPluginMissingDescriptor",
     "className": "org.elasticsearch.plugins.PluginsServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047145914
 }
]

[
 "TEST_STARTED",
 "ID#testAdditionalSettingsClash(org.elasticsearch.plugins.PluginsServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:25,937][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:26,087][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] loaded plugin [org.elasticsearch.plugins.PluginsServiceTests$AdditionalSettingsPlugin1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:26,087][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] loaded plugin [org.elasticsearch.plugins.PluginsServiceTests$AdditionalSettingsPlugin2]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAdditionalSettingsClash(org.elasticsearch.plugins.PluginsServiceTests)",
  "startTimestamp": 1474047145930,
  "executionTime": 158
 }
]

[
 "TEST_STARTED",
 "ID#testAdditionalSettings(org.elasticsearch.plugins.PluginsServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:26,095][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:26,095][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] loaded plugin [org.elasticsearch.plugins.PluginsServiceTests$AdditionalSettingsPlugin1]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAdditionalSettings(org.elasticsearch.plugins.PluginsServiceTests)",
  "startTimestamp": 1474047146088,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testOnModuleExceptionsArePropagated(org.elasticsearch.plugins.PluginsServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:26,103][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:26,103][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] loaded plugin [org.elasticsearch.plugins.PluginsServiceTests$FailOnModule]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:26,104][WARN ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] plugin java.lang.reflect.InvocationTargetException, failed to invoke custom onModule method%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOnModuleExceptionsArePropagated(org.elasticsearch.plugins.PluginsServiceTests)",
  "startTimestamp": 1474047146096,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testFilterPlugins(org.elasticsearch.plugins.PluginsServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:26,112][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:26,112][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] loaded plugin [org.elasticsearch.plugins.PluginsServiceTests$AdditionalSettingsPlugin1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:32:26,112][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] loaded plugin [org.elasticsearch.plugins.PluginsServiceTests$FilterablePlugin]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterPlugins(org.elasticsearch.plugins.PluginsServiceTests)",
  "startTimestamp": 1474047146104,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testExistingPluginMissingDescriptor(org.elasticsearch.plugins.PluginsServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExistingPluginMissingDescriptor(org.elasticsearch.plugins.PluginsServiceTests)",
  "startTimestamp": 1474047146112,
  "executionTime": 11
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.plugins.PluginsServiceTests",
  "startTimestamp": 1474047145914,
  "executionTime": 218
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.SuggestTests",
   "displayName": "org.elasticsearch.search.suggest.SuggestTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.SuggestTests",
   "children": [
    {
     "id": "ID#testSuggestionOrdering(org.elasticsearch.search.suggest.SuggestTests)",
     "displayName": "testSuggestionOrdering(org.elasticsearch.search.suggest.SuggestTests)",
     "methodName": "testSuggestionOrdering",
     "className": "org.elasticsearch.search.suggest.SuggestTests",
     "children": []
    },
    {
     "id": "ID#testFilter(org.elasticsearch.search.suggest.SuggestTests)",
     "displayName": "testFilter(org.elasticsearch.search.suggest.SuggestTests)",
     "methodName": "testFilter",
     "className": "org.elasticsearch.search.suggest.SuggestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047146138
 }
]

[
 "TEST_STARTED",
 "ID#testSuggestionOrdering(org.elasticsearch.search.suggest.SuggestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSuggestionOrdering(org.elasticsearch.search.suggest.SuggestTests)",
  "startTimestamp": 1474047146196,
  "executionTime": 39
 }
]

[
 "TEST_STARTED",
 "ID#testFilter(org.elasticsearch.search.suggest.SuggestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilter(org.elasticsearch.search.suggest.SuggestTests)",
  "startTimestamp": 1474047146235,
  "executionTime": 27
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.SuggestTests",
  "startTimestamp": 1474047146138,
  "executionTime": 126
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests",
   "displayName": "org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDefaultValuesSet(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "displayName": "testDefaultValuesSet(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "methodName": "testDefaultValuesSet",
     "className": "org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMalformedJson(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "displayName": "testMalformedJson(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "methodName": "testMalformedJson",
     "className": "org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInvalidParameters(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "displayName": "testInvalidParameters(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "methodName": "testInvalidParameters",
     "className": "org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047146446
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
  "startTimestamp": 1474047146526,
  "executionTime": 43
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultValuesSet(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultValuesSet(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
  "startTimestamp": 1474047146569,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
  "startTimestamp": 1474047146572,
  "executionTime": 87
 }
]

[
 "TEST_STARTED",
 "ID#testMalformedJson(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMalformedJson(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
  "startTimestamp": 1474047146659,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
  "startTimestamp": 1474047146662,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidParameters(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidParameters(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
  "startTimestamp": 1474047146665,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests",
  "startTimestamp": 1474047146446,
  "executionTime": 231
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.snapshots.blobstore.FileInfoTests",
   "displayName": "org.elasticsearch.index.snapshots.blobstore.FileInfoTests",
   "methodName": null,
   "className": "org.elasticsearch.index.snapshots.blobstore.FileInfoTests",
   "children": [
    {
     "id": "ID#testGetPartSize(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)",
     "displayName": "testGetPartSize(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)",
     "methodName": "testGetPartSize",
     "className": "org.elasticsearch.index.snapshots.blobstore.FileInfoTests",
     "children": []
    },
    {
     "id": "ID#testToFromXContent(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)",
     "displayName": "testToFromXContent(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)",
     "methodName": "testToFromXContent",
     "className": "org.elasticsearch.index.snapshots.blobstore.FileInfoTests",
     "children": []
    },
    {
     "id": "ID#testInvalidFieldsInFromXContent(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)",
     "displayName": "testInvalidFieldsInFromXContent(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)",
     "methodName": "testInvalidFieldsInFromXContent",
     "className": "org.elasticsearch.index.snapshots.blobstore.FileInfoTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047146685
 }
]

[
 "TEST_STARTED",
 "ID#testGetPartSize(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetPartSize(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)",
  "startTimestamp": 1474047146707,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToFromXContent(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToFromXContent(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)",
  "startTimestamp": 1474047146710,
  "executionTime": 420
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidFieldsInFromXContent(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidFieldsInFromXContent(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)",
  "startTimestamp": 1474047147130,
  "executionTime": 422
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.snapshots.blobstore.FileInfoTests",
  "startTimestamp": 1474047146685,
  "executionTime": 869
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.rest.RestControllerTests",
   "displayName": "org.elasticsearch.rest.RestControllerTests",
   "methodName": null,
   "className": "org.elasticsearch.rest.RestControllerTests",
   "children": [
    {
     "id": "ID#testRegisterAsDeprecatedHandler(org.elasticsearch.rest.RestControllerTests)",
     "displayName": "testRegisterAsDeprecatedHandler(org.elasticsearch.rest.RestControllerTests)",
     "methodName": "testRegisterAsDeprecatedHandler",
     "className": "org.elasticsearch.rest.RestControllerTests",
     "children": []
    },
    {
     "id": "ID#testCanTripCircuitBreaker(org.elasticsearch.rest.RestControllerTests)",
     "displayName": "testCanTripCircuitBreaker(org.elasticsearch.rest.RestControllerTests)",
     "methodName": "testCanTripCircuitBreaker",
     "className": "org.elasticsearch.rest.RestControllerTests",
     "children": []
    },
    {
     "id": "ID#testRegisterWithDeprecatedHandler(org.elasticsearch.rest.RestControllerTests)",
     "displayName": "testRegisterWithDeprecatedHandler(org.elasticsearch.rest.RestControllerTests)",
     "methodName": "testRegisterWithDeprecatedHandler",
     "className": "org.elasticsearch.rest.RestControllerTests",
     "children": []
    },
    {
     "id": "ID#testApplyRelevantHeaders(org.elasticsearch.rest.RestControllerTests)",
     "displayName": "testApplyRelevantHeaders(org.elasticsearch.rest.RestControllerTests)",
     "methodName": "testApplyRelevantHeaders",
     "className": "org.elasticsearch.rest.RestControllerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047147561
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterAsDeprecatedHandler(org.elasticsearch.rest.RestControllerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterAsDeprecatedHandler(org.elasticsearch.rest.RestControllerTests)",
  "startTimestamp": 1474047147591,
  "executionTime": 125
 }
]

[
 "TEST_STARTED",
 "ID#testCanTripCircuitBreaker(org.elasticsearch.rest.RestControllerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCanTripCircuitBreaker(org.elasticsearch.rest.RestControllerTests)",
  "startTimestamp": 1474047147716,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterWithDeprecatedHandler(org.elasticsearch.rest.RestControllerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterWithDeprecatedHandler(org.elasticsearch.rest.RestControllerTests)",
  "startTimestamp": 1474047147723,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testApplyRelevantHeaders(org.elasticsearch.rest.RestControllerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testApplyRelevantHeaders(org.elasticsearch.rest.RestControllerTests)",
  "startTimestamp": 1474047147730,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.rest.RestControllerTests",
  "startTimestamp": 1474047147561,
  "executionTime": 174
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.bytes.BytesArrayTests",
   "displayName": "org.elasticsearch.common.bytes.BytesArrayTests",
   "methodName": null,
   "className": "org.elasticsearch.common.bytes.BytesArrayTests",
   "children": [
    {
     "id": "ID#testHashCode(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testHashCode(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testHashCode",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testToBytesRef(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testToBytesRef(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testToBytesRef",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testSliceArrayOffset(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testSliceArrayOffset(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testSliceArrayOffset",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testEmptyToBytesRefIterator(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testEmptyToBytesRefIterator(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testEmptyToBytesRefIterator",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testToBytesRefMaterializedPages(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testToBytesRefMaterializedPages(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testToBytesRefMaterializedPages",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testIteratorRandom(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testIteratorRandom(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testIteratorRandom",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testSliceEquals(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testSliceEquals(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testSliceEquals",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testArrayOffset(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testArrayOffset(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testArrayOffset",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testStreamInput(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testStreamInput(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testStreamInput",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testCompareTo(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testCompareTo(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testCompareTo",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testStreamInputMarkAndReset(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testStreamInputMarkAndReset(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testStreamInputMarkAndReset",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testWriteToOutputStream(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testWriteToOutputStream(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testWriteToOutputStream",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testGet(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testGet(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testGet",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testBasicEquals(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testBasicEquals(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testBasicEquals",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testEquals(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testStreamInputBulkReadWithOffset",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testLength(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testLength(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testLength",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testSliceCopyBytesRef(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testSliceCopyBytesRef(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testSliceCopyBytesRef",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testArray(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testArray(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testArray",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testToBytesRefSharedPage(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testToBytesRefSharedPage(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testToBytesRefSharedPage",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testSliceStreamInput(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testSliceStreamInput(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testSliceStreamInput",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testSliceWriteToOutputStream(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testSliceWriteToOutputStream(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testSliceWriteToOutputStream",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testSliceToBytesRef(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testSliceToBytesRef(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testSliceToBytesRef",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testSliceIterator(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testSliceIterator(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testSliceIterator",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testCopyBytesRefSharesBytes(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testCopyBytesRefSharesBytes(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testCopyBytesRefSharesBytes",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testToBytes(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testToBytes(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testToBytes",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testSlice(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testSlice(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testSlice",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testRandomReads(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testRandomReads(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testRandomReads",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testInputStreamSkip(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testInputStreamSkip(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testInputStreamSkip",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testToUtf8(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testToUtf8(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testToUtf8",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testIterator(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testIterator(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testIterator",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047147747
 }
]

[
 "TEST_STARTED",
 "ID#testHashCode(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHashCode(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474047147779,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testToBytesRef(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytesRef(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474047147795,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSliceArrayOffset(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceArrayOffset(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474047147800,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyToBytesRefIterator(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyToBytesRefIterator(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474047147824,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testToBytesRefMaterializedPages(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytesRefMaterializedPages(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474047147831,
  "executionTime": 32
 }
]

[
 "TEST_STARTED",
 "ID#testIteratorRandom(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIteratorRandom(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474047147863,
  "executionTime": 42
 }
]

[
 "TEST_STARTED",
 "ID#testSliceEquals(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceEquals(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474047147905,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testArrayOffset(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArrayOffset(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474047147910,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testStreamInput(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamInput(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474047147927,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testCompareTo(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompareTo(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474047147935,
  "executionTime": 722
 }
]

[
 "TEST_STARTED",
 "ID#testStreamInputMarkAndReset(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamInputMarkAndReset(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474047148658,
  "executionTime": 101
 }
]

[
 "TEST_STARTED",
 "ID#testWriteToOutputStream(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteToOutputStream(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474047148759,
  "executionTime": 83
 }
]

[
 "TEST_STARTED",
 "ID#testGet(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGet(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474047148842,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testBasicEquals(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicEquals(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474047148854,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474047148861,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474047148868,
  "executionTime": 32
 }
]

[
 "TEST_STARTED",
 "ID#testLength(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLength(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474047148900,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testSliceCopyBytesRef(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceCopyBytesRef(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474047148914,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testArray(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArray(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474047148932,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testToBytesRefSharedPage(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytesRefSharedPage(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474047148956,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSliceStreamInput(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceStreamInput(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474047148959,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testSliceWriteToOutputStream(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceWriteToOutputStream(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474047148967,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testSliceToBytesRef(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceToBytesRef(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474047148991,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSliceIterator(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceIterator(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474047148993,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testCopyBytesRefSharesBytes(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyBytesRefSharesBytes(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474047149008,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testToBytes(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytes(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474047149012,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testSlice(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSlice(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474047149033,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testRandomReads(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomReads(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474047149039,
  "executionTime": 35
 }
]

[
 "TEST_STARTED",
 "ID#testInputStreamSkip(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInputStreamSkip(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474047149074,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testToUtf8(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToUtf8(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474047149081,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testIterator(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIterator(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474047149083,
  "executionTime": 17
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.bytes.BytesArrayTests",
  "startTimestamp": 1474047147747,
  "executionTime": 1355
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.DateRangeTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.DateRangeTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.DateRangeTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.DateRangeTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.DateRangeTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.DateRangeTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.DateRangeTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.DateRangeTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.DateRangeTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.DateRangeTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.DateRangeTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.DateRangeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047149122
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:29,150][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{TSAFyjbmQ2GUoLQ046-uHg}{local}{local[185]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.DateRangeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.DateRangeTests)",
  "startTimestamp": 1474047149163,
  "executionTime": 56
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.DateRangeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.DateRangeTests)",
  "startTimestamp": 1474047149219,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.DateRangeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.DateRangeTests)",
  "startTimestamp": 1474047149222,
  "executionTime": 23
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.DateRangeTests",
  "startTimestamp": 1474047149122,
  "executionTime": 129
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests",
     "children": []
    },
    {
     "id": "ID#testPercentsFromMixedArray(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
     "displayName": "testPercentsFromMixedArray(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
     "methodName": "testPercentsFromMixedArray",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047149257
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:29,286][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Fk5U5HISTLiZl3RAHxhPIQ}{local}{local[186]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
  "startTimestamp": 1474047149296,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:29,301][INFO ][org.elasticsearch.search.aggregations.pipeline.bucketmetrics] Content string: {%0A  \"GAIfhcofnsqIu\" : {%0A    \"percentiles_bucket\" : {%0A      \"buckets_path\" : [%0A        \"KlSGNhSXuAHCzIAU\"%0A      ],%0A      \"format\" : \"oTlPJPSi\",%0A      \"gap_policy\" : \"insert_zeros\",%0A      \"percents\" : [%0A        1.0,%0A        5.0,%0A        25.0,%0A        50.0,%0A        75.0,%0A        95.0,%0A        99.0%0A      ]%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:29,302][INFO ][org.elasticsearch.search.aggregations.pipeline.bucketmetrics] Content string: {%0A  \"GAIfhcofnsqIu\" : {%0A    \"percentiles_bucket\" : {%0A      \"buckets_path\" : [%0A        \"KlSGNhSXuAHCzIAU\"%0A      ],%0A      \"format\" : \"oTlPJPSi\",%0A      \"gap_policy\" : \"insert_zeros\",%0A      \"percents\" : [%0A        1.0,%0A        5.0,%0A        25.0,%0A        50.0,%0A        75.0,%0A        95.0,%0A        99.0%0A      ]%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
  "startTimestamp": 1474047149299,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testPercentsFromMixedArray(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPercentsFromMixedArray(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
  "startTimestamp": 1474047149321,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
  "startTimestamp": 1474047149324,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests",
  "startTimestamp": 1474047149257,
  "executionTime": 73
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.serialization.ClusterSerializationTests",
   "displayName": "org.elasticsearch.cluster.serialization.ClusterSerializationTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.serialization.ClusterSerializationTests",
   "children": [
    {
     "id": "ID#testRoutingTableSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)",
     "displayName": "testRoutingTableSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)",
     "methodName": "testRoutingTableSerialization",
     "className": "org.elasticsearch.cluster.serialization.ClusterSerializationTests",
     "children": []
    },
    {
     "id": "ID#testClusterStateSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)",
     "displayName": "testClusterStateSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)",
     "methodName": "testClusterStateSerialization",
     "className": "org.elasticsearch.cluster.serialization.ClusterSerializationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047149337
 }
]

[
 "TEST_STARTED",
 "ID#testRoutingTableSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoutingTableSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)",
  "startTimestamp": 1474047149353,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testClusterStateSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterStateSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)",
  "startTimestamp": 1474047149366,
  "executionTime": 76
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.serialization.ClusterSerializationTests",
  "startTimestamp": 1474047149337,
  "executionTime": 107
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.TransportActionFilterChainTests",
   "displayName": "org.elasticsearch.action.support.TransportActionFilterChainTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.TransportActionFilterChainTests",
   "children": [
    {
     "id": "ID#testTooManyContinueProcessingRequest(org.elasticsearch.action.support.TransportActionFilterChainTests)",
     "displayName": "testTooManyContinueProcessingRequest(org.elasticsearch.action.support.TransportActionFilterChainTests)",
     "methodName": "testTooManyContinueProcessingRequest",
     "className": "org.elasticsearch.action.support.TransportActionFilterChainTests",
     "children": []
    },
    {
     "id": "ID#testActionFiltersResponse(org.elasticsearch.action.support.TransportActionFilterChainTests)",
     "displayName": "testActionFiltersResponse(org.elasticsearch.action.support.TransportActionFilterChainTests)",
     "methodName": "testActionFiltersResponse",
     "className": "org.elasticsearch.action.support.TransportActionFilterChainTests",
     "children": []
    },
    {
     "id": "ID#testTooManyContinueProcessingResponse(org.elasticsearch.action.support.TransportActionFilterChainTests)",
     "displayName": "testTooManyContinueProcessingResponse(org.elasticsearch.action.support.TransportActionFilterChainTests)",
     "methodName": "testTooManyContinueProcessingResponse",
     "className": "org.elasticsearch.action.support.TransportActionFilterChainTests",
     "children": []
    },
    {
     "id": "ID#testActionFiltersRequest(org.elasticsearch.action.support.TransportActionFilterChainTests)",
     "displayName": "testActionFiltersRequest(org.elasticsearch.action.support.TransportActionFilterChainTests)",
     "methodName": "testActionFiltersRequest",
     "className": "org.elasticsearch.action.support.TransportActionFilterChainTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047149458
 }
]

[
 "TEST_STARTED",
 "ID#testTooManyContinueProcessingRequest(org.elasticsearch.action.support.TransportActionFilterChainTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTooManyContinueProcessingRequest(org.elasticsearch.action.support.TransportActionFilterChainTests)",
  "startTimestamp": 1474047149473,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testActionFiltersResponse(org.elasticsearch.action.support.TransportActionFilterChainTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActionFiltersResponse(org.elasticsearch.action.support.TransportActionFilterChainTests)",
  "startTimestamp": 1474047149480,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testTooManyContinueProcessingResponse(org.elasticsearch.action.support.TransportActionFilterChainTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTooManyContinueProcessingResponse(org.elasticsearch.action.support.TransportActionFilterChainTests)",
  "startTimestamp": 1474047149488,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testActionFiltersRequest(org.elasticsearch.action.support.TransportActionFilterChainTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActionFiltersRequest(org.elasticsearch.action.support.TransportActionFilterChainTests)",
  "startTimestamp": 1474047149492,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.TransportActionFilterChainTests",
  "startTimestamp": 1474047149458,
  "executionTime": 43
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.TopHitsTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.TopHitsTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.TopHitsTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.TopHitsTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.TopHitsTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.TopHitsTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.TopHitsTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.TopHitsTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.TopHitsTests",
     "children": []
    },
    {
     "id": "ID#testFailWithSubAgg(org.elasticsearch.search.aggregations.metrics.TopHitsTests)",
     "displayName": "testFailWithSubAgg(org.elasticsearch.search.aggregations.metrics.TopHitsTests)",
     "methodName": "testFailWithSubAgg",
     "className": "org.elasticsearch.search.aggregations.metrics.TopHitsTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.TopHitsTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.TopHitsTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.TopHitsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047149507
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:32:29,531][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{rBiXLwLMSAuRz7v5DciXWQ}{local}{local[194]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.TopHitsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.TopHitsTests)",
  "startTimestamp": 1474047149543,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.TopHitsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.TopHitsTests)",
  "startTimestamp": 1474047149546,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFailWithSubAgg(org.elasticsearch.search.aggregations.metrics.TopHitsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailWithSubAgg(org.elasticsearch.search.aggregations.metrics.TopHitsTests)",
  "startTimestamp": 1474047149550,
  "executionTime": 137
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.TopHitsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.TopHitsTests)",
  "startTimestamp": 1474047149687,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.TopHitsTests",
  "startTimestamp": 1474047149507,
  "executionTime": 188
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.recovery.RecoverySettingsTests",
   "displayName": "org.elasticsearch.recovery.RecoverySettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.recovery.RecoverySettingsTests",
   "children": [
    {
     "id": "ID#testAllSettingsAreDynamicallyUpdatable(org.elasticsearch.recovery.RecoverySettingsTests)",
     "displayName": "testAllSettingsAreDynamicallyUpdatable(org.elasticsearch.recovery.RecoverySettingsTests)",
     "methodName": "testAllSettingsAreDynamicallyUpdatable",
     "className": "org.elasticsearch.recovery.RecoverySettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047149706
 }
]

[
 "TEST_STARTED",
 "ID#testAllSettingsAreDynamicallyUpdatable(org.elasticsearch.recovery.RecoverySettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:32:29,736][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:32:29,759][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:32:29,759][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:32:29,763][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:32:29,766][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:32:29,766][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:32:29,857][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:32:29,858][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:32:29,858][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[13]}, bound_addresses {local[13]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:32:29,859][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{Wj0yZwUAR7KrLnQzt4u3NA}{uGp0IXWtQQSMCDicpEx7yg}{local}{local[13]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:32:29,860][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:32:29,870][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:32:29,890][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [indices.recovery.max_bytes_per_sec] from [40mb] to [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:32:29,893][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [indices.recovery.retry_delay_state_sync] from [500ms] to [99ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:32:29,896][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [indices.recovery.retry_delay_network] from [5s] to [1ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:32:29,898][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [indices.recovery.recovery_activity_timeout] from [30m] to [152ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:32:29,901][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [indices.recovery.internal_action_timeout] from [15m] to [153ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:32:29,901][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [indices.recovery.internal_action_long_timeout] from [30m] to [306ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:32:29,904][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [indices.recovery.internal_action_long_timeout] from [306ms] to [108ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:32:29,905][INFO ][org.elasticsearch.recovery] [RecoverySettingsTests#testAllSettingsAreDynamicallyUpdatable]: cleaning up after test%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:32:29,906][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:32:29,907][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:32:29,907][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:32:29,909][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:32:29,917][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:32:29,936][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:32:29,937][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:32:29,939][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:32:29,941][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:32:29,941][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:32:30,041][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:32:30,041][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:32:30,042][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[14]}, bound_addresses {local[14]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:32:30,043][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{PYsVNpSpRu-D89YO78byRA}{IFN_2F5yT7qfHBbtJDH2yw}{local}{local[14]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:32:30,044][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:32:30,055][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllSettingsAreDynamicallyUpdatable(org.elasticsearch.recovery.RecoverySettingsTests)",
  "startTimestamp": 1474047149727,
  "executionTime": 342
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:32:30,069][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:32:30,070][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:32:30,070][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:32:30,072][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.recovery.RecoverySettingsTests",
  "startTimestamp": 1474047149706,
  "executionTime": 374
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.cache.CacheTests",
   "displayName": "org.elasticsearch.common.cache.CacheTests",
   "methodName": null,
   "className": "org.elasticsearch.common.cache.CacheTests",
   "children": [
    {
     "id": "ID#testWeight(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testWeight(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testWeight",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testComputeIfAbsentCallsOnce(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testComputeIfAbsentCallsOnce(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testComputeIfAbsentCallsOnce",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testCachePollution(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testCachePollution(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testCachePollution",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testTorture(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testTorture(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testTorture",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testInvalidate(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testInvalidate(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testInvalidate",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testWeigher(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testWeigher(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testWeigher",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testInvalidateAll(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testInvalidateAll(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testInvalidateAll",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testPromotion(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testPromotion(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testPromotion",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testNotificationOnReplace(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testNotificationOnReplace(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testNotificationOnReplace",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testReplaceRecomputesSize(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testReplaceRecomputesSize(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testReplaceRecomputesSize",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testExpirationAfterAccess(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testExpirationAfterAccess(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testExpirationAfterAccess",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testDependentKeyDeadlock(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testDependentKeyDeadlock(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testDependentKeyDeadlock",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testExpirationAfterWrite(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testExpirationAfterWrite(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testExpirationAfterWrite",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testComputeIfAbsentLoadsSuccessfully(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testComputeIfAbsentLoadsSuccessfully(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testComputeIfAbsentLoadsSuccessfully",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testCacheEvictions(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testCacheEvictions(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testCacheEvictions",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testNotificationOnInvalidateAll(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testNotificationOnInvalidateAll(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testNotificationOnInvalidateAll",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testComputeIfAbsentThrowsExceptionIfLoaderReturnsANullValue(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testComputeIfAbsentThrowsExceptionIfLoaderReturnsANullValue(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testComputeIfAbsentThrowsExceptionIfLoaderReturnsANullValue",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testCacheStats(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testCacheStats(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testCacheStats",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testCount(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testCount(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testCount",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testNotificationOnInvalidate(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testNotificationOnInvalidate(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testNotificationOnInvalidate",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047150094
 }
]

[
 "TEST_STARTED",
 "ID#testWeight(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWeight(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474047150110,
  "executionTime": 279
 }
]

[
 "TEST_STARTED",
 "ID#testComputeIfAbsentCallsOnce(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testComputeIfAbsentCallsOnce(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474047150389,
  "executionTime": 54
 }
]

[
 "TEST_STARTED",
 "ID#testCachePollution(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCachePollution(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474047150444,
  "executionTime": 140
 }
]

[
 "TEST_STARTED",
 "ID#testTorture(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTorture(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474047150584,
  "executionTime": 144
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidate(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidate(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474047150728,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testWeigher(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWeigher(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474047150757,
  "executionTime": 35
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidateAll(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidateAll(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474047150792,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testPromotion(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPromotion(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474047150809,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testNotificationOnReplace(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotificationOnReplace(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474047150832,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testReplaceRecomputesSize(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplaceRecomputesSize(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474047150848,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testExpirationAfterAccess(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExpirationAfterAccess(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474047150868,
  "executionTime": 25
 }
]

[
 "TEST_STARTED",
 "ID#testDependentKeyDeadlock(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDependentKeyDeadlock(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474047150893,
  "executionTime": 925
 }
]

[
 "TEST_STARTED",
 "ID#testExpirationAfterWrite(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExpirationAfterWrite(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474047151818,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testComputeIfAbsentLoadsSuccessfully(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testComputeIfAbsentLoadsSuccessfully(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474047151843,
  "executionTime": 43
 }
]

[
 "TEST_STARTED",
 "ID#testCacheEvictions(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCacheEvictions(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474047151887,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testNotificationOnInvalidateAll(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotificationOnInvalidateAll(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474047151893,
  "executionTime": 30
 }
]

[
 "TEST_STARTED",
 "ID#testComputeIfAbsentThrowsExceptionIfLoaderReturnsANullValue(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testComputeIfAbsentThrowsExceptionIfLoaderReturnsANullValue(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474047151924,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCacheStats(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCacheStats(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474047151928,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testCount(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCount(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474047151946,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testNotificationOnInvalidate(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotificationOnInvalidate(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474047151950,
  "executionTime": 12
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.cache.CacheTests",
  "startTimestamp": 1474047150094,
  "executionTime": 1870
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.fetch.subphase.NestedChildrenFilterTests",
   "displayName": "org.elasticsearch.search.fetch.subphase.NestedChildrenFilterTests",
   "methodName": null,
   "className": "org.elasticsearch.search.fetch.subphase.NestedChildrenFilterTests",
   "children": [
    {
     "id": "ID#testNestedChildrenFilter(org.elasticsearch.search.fetch.subphase.NestedChildrenFilterTests)",
     "displayName": "testNestedChildrenFilter(org.elasticsearch.search.fetch.subphase.NestedChildrenFilterTests)",
     "methodName": "testNestedChildrenFilter",
     "className": "org.elasticsearch.search.fetch.subphase.NestedChildrenFilterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047151996
 }
]

[
 "TEST_STARTED",
 "ID#testNestedChildrenFilter(org.elasticsearch.search.fetch.subphase.NestedChildrenFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedChildrenFilter(org.elasticsearch.search.fetch.subphase.NestedChildrenFilterTests)",
  "startTimestamp": 1474047152013,
  "executionTime": 123
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.fetch.subphase.NestedChildrenFilterTests",
  "startTimestamp": 1474047151996,
  "executionTime": 144
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.client.transport.TransportClientNodesServiceTests",
   "displayName": "org.elasticsearch.client.transport.TransportClientNodesServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.client.transport.TransportClientNodesServiceTests",
   "children": [
    {
     "id": "ID#testListenerFailures(org.elasticsearch.client.transport.TransportClientNodesServiceTests)",
     "displayName": "testListenerFailures(org.elasticsearch.client.transport.TransportClientNodesServiceTests)",
     "methodName": "testListenerFailures",
     "className": "org.elasticsearch.client.transport.TransportClientNodesServiceTests",
     "children": []
    },
    {
     "id": "ID#testConnectedNodes(org.elasticsearch.client.transport.TransportClientNodesServiceTests)",
     "displayName": "testConnectedNodes(org.elasticsearch.client.transport.TransportClientNodesServiceTests)",
     "methodName": "testConnectedNodes",
     "className": "org.elasticsearch.client.transport.TransportClientNodesServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047152148
 }
]

[
 "TEST_STARTED",
 "ID#testListenerFailures(org.elasticsearch.client.transport.TransportClientNodesServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListenerFailures(org.elasticsearch.client.transport.TransportClientNodesServiceTests)",
  "startTimestamp": 1474047152164,
  "executionTime": 386
 }
]

[
 "TEST_STARTED",
 "ID#testConnectedNodes(org.elasticsearch.client.transport.TransportClientNodesServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConnectedNodes(org.elasticsearch.client.transport.TransportClientNodesServiceTests)",
  "startTimestamp": 1474047152550,
  "executionTime": 107
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.client.transport.TransportClientNodesServiceTests",
  "startTimestamp": 1474047152148,
  "executionTime": 511
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.replication.RecoveryDuringReplicationTests",
   "displayName": "org.elasticsearch.index.replication.RecoveryDuringReplicationTests",
   "methodName": null,
   "className": "org.elasticsearch.index.replication.RecoveryDuringReplicationTests",
   "children": [
    {
     "id": "ID#testIndexingDuringFileRecovery(org.elasticsearch.index.replication.RecoveryDuringReplicationTests)",
     "displayName": "testIndexingDuringFileRecovery(org.elasticsearch.index.replication.RecoveryDuringReplicationTests)",
     "methodName": "testIndexingDuringFileRecovery",
     "className": "org.elasticsearch.index.replication.RecoveryDuringReplicationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047152709
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingDuringFileRecovery(org.elasticsearch.index.replication.RecoveryDuringReplicationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:35,072][INFO ][org.elasticsearch.index.replication] [s2] [test][0] --> blocking recovery on stage [TRANSLOG]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:32:35,129][INFO ][org.elasticsearch.index.replication] [s2] [test][0] --> recovery continues from stage [TRANSLOG]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingDuringFileRecovery(org.elasticsearch.index.replication.RecoveryDuringReplicationTests)",
  "startTimestamp": 1474047152920,
  "executionTime": 2849
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.replication.RecoveryDuringReplicationTests",
  "startTimestamp": 1474047152709,
  "executionTime": 3079
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.GeoHashGridTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.GeoHashGridTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.GeoHashGridTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.GeoHashGridTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.GeoHashGridTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.GeoHashGridTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047155794
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:32:35,861][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{nNxrHTtpTpKLCXwJeB9fxw}{local}{local[195]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)",
  "startTimestamp": 1474047155937,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)",
  "startTimestamp": 1474047155944,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)",
  "startTimestamp": 1474047155946,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.GeoHashGridTests",
  "startTimestamp": 1474047155794,
  "executionTime": 168
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.concurrent.KeyedLockTests",
   "displayName": "org.elasticsearch.common.util.concurrent.KeyedLockTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.concurrent.KeyedLockTests",
   "children": [
    {
     "id": "ID#testIfMapEmptyAfterLotsOfAcquireAndReleases(org.elasticsearch.common.util.concurrent.KeyedLockTests)",
     "displayName": "testIfMapEmptyAfterLotsOfAcquireAndReleases(org.elasticsearch.common.util.concurrent.KeyedLockTests)",
     "methodName": "testIfMapEmptyAfterLotsOfAcquireAndReleases",
     "className": "org.elasticsearch.common.util.concurrent.KeyedLockTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047155968
 }
]

[
 "TEST_STARTED",
 "ID#testIfMapEmptyAfterLotsOfAcquireAndReleases(org.elasticsearch.common.util.concurrent.KeyedLockTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIfMapEmptyAfterLotsOfAcquireAndReleases(org.elasticsearch.common.util.concurrent.KeyedLockTests)",
  "startTimestamp": 1474047155991,
  "executionTime": 261
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.concurrent.KeyedLockTests",
  "startTimestamp": 1474047155968,
  "executionTime": 287
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.PrimaryNotRelocatedWhileBeingRecoveredTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.PrimaryNotRelocatedWhileBeingRecoveredTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.PrimaryNotRelocatedWhileBeingRecoveredTests",
   "children": [
    {
     "id": "ID#testPrimaryNotRelocatedWhileBeingRecoveredFrom(org.elasticsearch.cluster.routing.allocation.PrimaryNotRelocatedWhileBeingRecoveredTests)",
     "displayName": "testPrimaryNotRelocatedWhileBeingRecoveredFrom(org.elasticsearch.cluster.routing.allocation.PrimaryNotRelocatedWhileBeingRecoveredTests)",
     "methodName": "testPrimaryNotRelocatedWhileBeingRecoveredFrom",
     "className": "org.elasticsearch.cluster.routing.allocation.PrimaryNotRelocatedWhileBeingRecoveredTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047156261
 }
]

[
 "TEST_STARTED",
 "ID#testPrimaryNotRelocatedWhileBeingRecoveredFrom(org.elasticsearch.cluster.routing.allocation.PrimaryNotRelocatedWhileBeingRecoveredTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:32:36,288][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:32:36,290][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding two nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:32:36,291][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the primary shard (on node1)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:32:36,292][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start another node, replica will start recovering form primary%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:32:36,293][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start another node, make sure the primary is not relocated%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrimaryNotRelocatedWhileBeingRecoveredFrom(org.elasticsearch.cluster.routing.allocation.PrimaryNotRelocatedWhileBeingRecoveredTests)",
  "startTimestamp": 1474047156279,
  "executionTime": 15
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.PrimaryNotRelocatedWhileBeingRecoveredTests",
  "startTimestamp": 1474047156261,
  "executionTime": 34
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.script.ScriptModesTests",
   "displayName": "org.elasticsearch.script.ScriptModesTests",
   "methodName": null,
   "className": "org.elasticsearch.script.ScriptModesTests",
   "children": [
    {
     "id": "ID#testDefaultSettings(org.elasticsearch.script.ScriptModesTests)",
     "displayName": "testDefaultSettings(org.elasticsearch.script.ScriptModesTests)",
     "methodName": "testDefaultSettings",
     "className": "org.elasticsearch.script.ScriptModesTests",
     "children": []
    },
    {
     "id": "ID#testConflictingScriptTypeAndOpGenericSettings(org.elasticsearch.script.ScriptModesTests)",
     "displayName": "testConflictingScriptTypeAndOpGenericSettings(org.elasticsearch.script.ScriptModesTests)",
     "methodName": "testConflictingScriptTypeAndOpGenericSettings",
     "className": "org.elasticsearch.script.ScriptModesTests",
     "children": []
    },
    {
     "id": "ID#testScriptTypeGenericSettings(org.elasticsearch.script.ScriptModesTests)",
     "displayName": "testScriptTypeGenericSettings(org.elasticsearch.script.ScriptModesTests)",
     "methodName": "testScriptTypeGenericSettings",
     "className": "org.elasticsearch.script.ScriptModesTests",
     "children": []
    },
    {
     "id": "ID#testScriptContextGenericSettings(org.elasticsearch.script.ScriptModesTests)",
     "displayName": "testScriptContextGenericSettings(org.elasticsearch.script.ScriptModesTests)",
     "methodName": "testScriptContextGenericSettings",
     "className": "org.elasticsearch.script.ScriptModesTests",
     "children": []
    },
    {
     "id": "ID#testMissingSetting(org.elasticsearch.script.ScriptModesTests)",
     "displayName": "testMissingSetting(org.elasticsearch.script.ScriptModesTests)",
     "methodName": "testMissingSetting",
     "className": "org.elasticsearch.script.ScriptModesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047156303
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultSettings(org.elasticsearch.script.ScriptModesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultSettings(org.elasticsearch.script.ScriptModesTests)",
  "startTimestamp": 1474047156334,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testConflictingScriptTypeAndOpGenericSettings(org.elasticsearch.script.ScriptModesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConflictingScriptTypeAndOpGenericSettings(org.elasticsearch.script.ScriptModesTests)",
  "startTimestamp": 1474047156338,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testScriptTypeGenericSettings(org.elasticsearch.script.ScriptModesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScriptTypeGenericSettings(org.elasticsearch.script.ScriptModesTests)",
  "startTimestamp": 1474047156346,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testScriptContextGenericSettings(org.elasticsearch.script.ScriptModesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScriptContextGenericSettings(org.elasticsearch.script.ScriptModesTests)",
  "startTimestamp": 1474047156349,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMissingSetting(org.elasticsearch.script.ScriptModesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingSetting(org.elasticsearch.script.ScriptModesTests)",
  "startTimestamp": 1474047156351,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.script.ScriptModesTests",
  "startTimestamp": 1474047156303,
  "executionTime": 53
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.monitor.jvm.JvmStatsTests",
   "displayName": "org.elasticsearch.monitor.jvm.JvmStatsTests",
   "methodName": null,
   "className": "org.elasticsearch.monitor.jvm.JvmStatsTests",
   "children": [
    {
     "id": "ID#testJvmStats(org.elasticsearch.monitor.jvm.JvmStatsTests)",
     "displayName": "testJvmStats(org.elasticsearch.monitor.jvm.JvmStatsTests)",
     "methodName": "testJvmStats",
     "className": "org.elasticsearch.monitor.jvm.JvmStatsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047156362
 }
]

[
 "TEST_STARTED",
 "ID#testJvmStats(org.elasticsearch.monitor.jvm.JvmStatsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testJvmStats(org.elasticsearch.monitor.jvm.JvmStatsTests)",
  "startTimestamp": 1474047156398,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.monitor.jvm.JvmStatsTests",
  "startTimestamp": 1474047156362,
  "executionTime": 42
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.bootstrap.JavaVersionTests",
   "displayName": "org.elasticsearch.bootstrap.JavaVersionTests",
   "methodName": null,
   "className": "org.elasticsearch.bootstrap.JavaVersionTests",
   "children": [
    {
     "id": "ID#testCompare(org.elasticsearch.bootstrap.JavaVersionTests)",
     "displayName": "testCompare(org.elasticsearch.bootstrap.JavaVersionTests)",
     "methodName": "testCompare",
     "className": "org.elasticsearch.bootstrap.JavaVersionTests",
     "children": []
    },
    {
     "id": "ID#testParse(org.elasticsearch.bootstrap.JavaVersionTests)",
     "displayName": "testParse(org.elasticsearch.bootstrap.JavaVersionTests)",
     "methodName": "testParse",
     "className": "org.elasticsearch.bootstrap.JavaVersionTests",
     "children": []
    },
    {
     "id": "ID#testInvalidVersions(org.elasticsearch.bootstrap.JavaVersionTests)",
     "displayName": "testInvalidVersions(org.elasticsearch.bootstrap.JavaVersionTests)",
     "methodName": "testInvalidVersions",
     "className": "org.elasticsearch.bootstrap.JavaVersionTests",
     "children": []
    },
    {
     "id": "ID#testValidVersions(org.elasticsearch.bootstrap.JavaVersionTests)",
     "displayName": "testValidVersions(org.elasticsearch.bootstrap.JavaVersionTests)",
     "methodName": "testValidVersions",
     "className": "org.elasticsearch.bootstrap.JavaVersionTests",
     "children": []
    },
    {
     "id": "ID#testJava8Compat(org.elasticsearch.bootstrap.JavaVersionTests)",
     "displayName": "testJava8Compat(org.elasticsearch.bootstrap.JavaVersionTests)",
     "methodName": "testJava8Compat",
     "className": "org.elasticsearch.bootstrap.JavaVersionTests",
     "children": []
    },
    {
     "id": "ID#testToString(org.elasticsearch.bootstrap.JavaVersionTests)",
     "displayName": "testToString(org.elasticsearch.bootstrap.JavaVersionTests)",
     "methodName": "testToString",
     "className": "org.elasticsearch.bootstrap.JavaVersionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047156409
 }
]

[
 "TEST_STARTED",
 "ID#testCompare(org.elasticsearch.bootstrap.JavaVersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompare(org.elasticsearch.bootstrap.JavaVersionTests)",
  "startTimestamp": 1474047156438,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParse(org.elasticsearch.bootstrap.JavaVersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParse(org.elasticsearch.bootstrap.JavaVersionTests)",
  "startTimestamp": 1474047156441,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidVersions(org.elasticsearch.bootstrap.JavaVersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidVersions(org.elasticsearch.bootstrap.JavaVersionTests)",
  "startTimestamp": 1474047156443,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValidVersions(org.elasticsearch.bootstrap.JavaVersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidVersions(org.elasticsearch.bootstrap.JavaVersionTests)",
  "startTimestamp": 1474047156445,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testJava8Compat(org.elasticsearch.bootstrap.JavaVersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testJava8Compat(org.elasticsearch.bootstrap.JavaVersionTests)",
  "startTimestamp": 1474047156447,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testToString(org.elasticsearch.bootstrap.JavaVersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToString(org.elasticsearch.bootstrap.JavaVersionTests)",
  "startTimestamp": 1474047156449,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.bootstrap.JavaVersionTests",
  "startTimestamp": 1474047156409,
  "executionTime": 43
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.GeoPointFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.GeoPointFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.GeoPointFieldTypeTests",
   "children": [
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047156458
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)",
  "startTimestamp": 1474047156539,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)",
  "startTimestamp": 1474047156543,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)",
  "startTimestamp": 1474047156551,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)",
  "startTimestamp": 1474047156555,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.GeoPointFieldTypeTests)",
  "startTimestamp": 1474047156560,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.GeoPointFieldTypeTests",
  "startTimestamp": 1474047156458,
  "executionTime": 109
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.threadpool.ThreadPoolTests",
   "displayName": "org.elasticsearch.threadpool.ThreadPoolTests",
   "methodName": null,
   "className": "org.elasticsearch.threadpool.ThreadPoolTests",
   "children": [
    {
     "id": "ID#testBoundedByAboveMax(org.elasticsearch.threadpool.ThreadPoolTests)",
     "displayName": "testBoundedByAboveMax(org.elasticsearch.threadpool.ThreadPoolTests)",
     "methodName": "testBoundedByAboveMax",
     "className": "org.elasticsearch.threadpool.ThreadPoolTests",
     "children": []
    },
    {
     "id": "ID#testBoundedByBetweenMinAndMax(org.elasticsearch.threadpool.ThreadPoolTests)",
     "displayName": "testBoundedByBetweenMinAndMax(org.elasticsearch.threadpool.ThreadPoolTests)",
     "methodName": "testBoundedByBetweenMinAndMax",
     "className": "org.elasticsearch.threadpool.ThreadPoolTests",
     "children": []
    },
    {
     "id": "ID#testBoundedByBelowMin(org.elasticsearch.threadpool.ThreadPoolTests)",
     "displayName": "testBoundedByBelowMin(org.elasticsearch.threadpool.ThreadPoolTests)",
     "methodName": "testBoundedByBelowMin",
     "className": "org.elasticsearch.threadpool.ThreadPoolTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047156588
 }
]

[
 "TEST_STARTED",
 "ID#testBoundedByAboveMax(org.elasticsearch.threadpool.ThreadPoolTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBoundedByAboveMax(org.elasticsearch.threadpool.ThreadPoolTests)",
  "startTimestamp": 1474047157003,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testBoundedByBetweenMinAndMax(org.elasticsearch.threadpool.ThreadPoolTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBoundedByBetweenMinAndMax(org.elasticsearch.threadpool.ThreadPoolTests)",
  "startTimestamp": 1474047157004,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBoundedByBelowMin(org.elasticsearch.threadpool.ThreadPoolTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBoundedByBelowMin(org.elasticsearch.threadpool.ThreadPoolTests)",
  "startTimestamp": 1474047157006,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.threadpool.ThreadPoolTests",
  "startTimestamp": 1474047156588,
  "executionTime": 422
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.geo.GeoShapeQueryTests",
   "displayName": "org.elasticsearch.search.geo.GeoShapeQueryTests",
   "methodName": null,
   "className": "org.elasticsearch.search.geo.GeoShapeQueryTests",
   "children": [
    {
     "id": "ID#testIndexedShapeReferenceSourceDisabled(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "displayName": "testIndexedShapeReferenceSourceDisabled(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "methodName": "testIndexedShapeReferenceSourceDisabled",
     "className": "org.elasticsearch.search.geo.GeoShapeQueryTests",
     "children": []
    },
    {
     "id": "ID#testShapeFilterWithRandomGeoCollection(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "displayName": "testShapeFilterWithRandomGeoCollection(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "methodName": "testShapeFilterWithRandomGeoCollection",
     "className": "org.elasticsearch.search.geo.GeoShapeQueryTests",
     "children": []
    },
    {
     "id": "ID#testShapeFilterWithDefinedGeoCollection(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "displayName": "testShapeFilterWithDefinedGeoCollection(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "methodName": "testShapeFilterWithDefinedGeoCollection",
     "className": "org.elasticsearch.search.geo.GeoShapeQueryTests",
     "children": []
    },
    {
     "id": "ID#testNullShape(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "displayName": "testNullShape(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "methodName": "testNullShape",
     "className": "org.elasticsearch.search.geo.GeoShapeQueryTests",
     "children": []
    },
    {
     "id": "ID#testPointsOnly(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "displayName": "testPointsOnly(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "methodName": "testPointsOnly",
     "className": "org.elasticsearch.search.geo.GeoShapeQueryTests",
     "children": []
    },
    {
     "id": "ID#testIndexedShapeReference(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "displayName": "testIndexedShapeReference(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "methodName": "testIndexedShapeReference",
     "className": "org.elasticsearch.search.geo.GeoShapeQueryTests",
     "children": []
    },
    {
     "id": "ID#testShapeFetchingPath(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "displayName": "testShapeFetchingPath(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "methodName": "testShapeFetchingPath",
     "className": "org.elasticsearch.search.geo.GeoShapeQueryTests",
     "children": []
    },
    {
     "id": "ID#testEdgeCases(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "displayName": "testEdgeCases(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "methodName": "testEdgeCases",
     "className": "org.elasticsearch.search.geo.GeoShapeQueryTests",
     "children": []
    },
    {
     "id": "ID#testIndexPointsFilterRectangle(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "displayName": "testIndexPointsFilterRectangle(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "methodName": "testIndexPointsFilterRectangle",
     "className": "org.elasticsearch.search.geo.GeoShapeQueryTests",
     "children": []
    },
    {
     "id": "ID#testReusableBuilder(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "displayName": "testReusableBuilder(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "methodName": "testReusableBuilder",
     "className": "org.elasticsearch.search.geo.GeoShapeQueryTests",
     "children": []
    },
    {
     "id": "ID#testContainsShapeQuery(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "displayName": "testContainsShapeQuery(org.elasticsearch.search.geo.GeoShapeQueryTests)",
     "methodName": "testContainsShapeQuery",
     "className": "org.elasticsearch.search.geo.GeoShapeQueryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047157018
 }
]

[
 "TEST_STARTED",
 "ID#testIndexedShapeReferenceSourceDisabled(org.elasticsearch.search.geo.GeoShapeQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:37,113][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:37,197][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:37,197][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:37,202][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:37,231][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:37,231][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:37,565][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:37,566][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:37,566][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[15]}, bound_addresses {local[15]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:37,637][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{awSlwGmFS6ad5WhsmT4Tgw}{qQGiF0_VQ-WVp7AgMIXjag}{local}{local[15]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:37,638][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:37,704][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:37,778][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:37,861][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:37,881][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [shapes] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [shape_type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:37,931][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[shapes][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:37,967][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [shapes/zzzeaF_HRZSKUv5Y47Bw9w] update_mapping [shape_type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:38,422][INFO ][org.elasticsearch.search.geo] [GeoShapeQueryTests#testIndexedShapeReferenceSourceDisabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexedShapeReferenceSourceDisabled(org.elasticsearch.search.geo.GeoShapeQueryTests)",
  "startTimestamp": 1474047157098,
  "executionTime": 1376
 }
]

[
 "TEST_STARTED",
 "ID#testShapeFilterWithRandomGeoCollection(org.elasticsearch.search.geo.GeoShapeQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:38,485][INFO ][org.elasticsearch.search.geo] Created Random GeometryCollection containing 4 shapes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:38,490][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:38,539][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:40,952][INFO ][org.elasticsearch.search.geo] [GeoShapeQueryTests#testShapeFilterWithRandomGeoCollection]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShapeFilterWithRandomGeoCollection(org.elasticsearch.search.geo.GeoShapeQueryTests)",
  "startTimestamp": 1474047158474,
  "executionTime": 3103
 }
]

[
 "TEST_STARTED",
 "ID#testShapeFilterWithDefinedGeoCollection(org.elasticsearch.search.geo.GeoShapeQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:41,584][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [shapes] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:41,631][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[shapes][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:41,650][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:41,743][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:42,190][INFO ][org.elasticsearch.search.geo] [GeoShapeQueryTests#testShapeFilterWithDefinedGeoCollection]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShapeFilterWithDefinedGeoCollection(org.elasticsearch.search.geo.GeoShapeQueryTests)",
  "startTimestamp": 1474047161578,
  "executionTime": 842
 }
]

[
 "TEST_STARTED",
 "ID#testNullShape(org.elasticsearch.search.geo.GeoShapeQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:42,430][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:42,580][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:42,957][INFO ][org.elasticsearch.search.geo] [GeoShapeQueryTests#testNullShape]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullShape(org.elasticsearch.search.geo.GeoShapeQueryTests)",
  "startTimestamp": 1474047162420,
  "executionTime": 583
 }
]

[
 "TEST_STARTED",
 "ID#testPointsOnly(org.elasticsearch.search.geo.GeoShapeQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:43,014][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [geo_points_only] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:43,110][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[geo_points_only][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:43,128][INFO ][org.elasticsearch.search.geo] [GeoShapeQueryTests#testPointsOnly]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPointsOnly(org.elasticsearch.search.geo.GeoShapeQueryTests)",
  "startTimestamp": 1474047163003,
  "executionTime": 179
 }
]

[
 "TEST_STARTED",
 "ID#testIndexedShapeReference(org.elasticsearch.search.geo.GeoShapeQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:43,191][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:43,259][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:43,274][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [shapes] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:43,330][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[shapes][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:43,351][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [shapes/xJSGsYdFSE60fkKeTN1i1w] create_mapping [shape_type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:43,935][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/5uozh-56SEySGEJBSUpYFw] update_mapping [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:44,127][INFO ][org.elasticsearch.search.geo] [GeoShapeQueryTests#testIndexedShapeReference]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexedShapeReference(org.elasticsearch.search.geo.GeoShapeQueryTests)",
  "startTimestamp": 1474047163182,
  "executionTime": 1001
 }
]

[
 "TEST_STARTED",
 "ID#testShapeFetchingPath(org.elasticsearch.search.geo.GeoShapeQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:44,190][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [shapes] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:44,239][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[shapes][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:44,257][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:44,312][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:44,339][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [shapes/EwAmp9B-TyKgLJaxss6TOA] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:45,084][INFO ][org.elasticsearch.search.geo] [GeoShapeQueryTests#testShapeFetchingPath]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShapeFetchingPath(org.elasticsearch.search.geo.GeoShapeQueryTests)",
  "startTimestamp": 1474047164183,
  "executionTime": 1954
 }
]

[
 "TEST_STARTED",
 "ID#testEdgeCases(org.elasticsearch.search.geo.GeoShapeQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:46,146][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:46,222][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:46,241][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/WJvmrBTIQseD9VQUaBd7Dg] update_mapping [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:46,640][INFO ][org.elasticsearch.search.geo] [GeoShapeQueryTests#testEdgeCases]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEdgeCases(org.elasticsearch.search.geo.GeoShapeQueryTests)",
  "startTimestamp": 1474047166137,
  "executionTime": 557
 }
]

[
 "TEST_STARTED",
 "ID#testIndexPointsFilterRectangle(org.elasticsearch.search.geo.GeoShapeQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:46,705][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:46,760][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:46,774][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/2ddiw1GLTHm-P2Kve7Dnlg] update_mapping [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:47,231][INFO ][org.elasticsearch.search.geo] [GeoShapeQueryTests#testIndexPointsFilterRectangle]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexPointsFilterRectangle(org.elasticsearch.search.geo.GeoShapeQueryTests)",
  "startTimestamp": 1474047166694,
  "executionTime": 590
 }
]

[
 "TEST_STARTED",
 "ID#testReusableBuilder(org.elasticsearch.search.geo.GeoShapeQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:47,290][INFO ][org.elasticsearch.search.geo] [GeoShapeQueryTests#testReusableBuilder]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReusableBuilder(org.elasticsearch.search.geo.GeoShapeQueryTests)",
  "startTimestamp": 1474047167284,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testContainsShapeQuery(org.elasticsearch.search.geo.GeoShapeQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:47,316][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:32:47,373][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:05,259][INFO ][org.elasticsearch.search.geo] [GeoShapeQueryTests#testContainsShapeQuery]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testContainsShapeQuery(org.elasticsearch.search.geo.GeoShapeQueryTests)",
  "startTimestamp": 1474047167292,
  "executionTime": 18017
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:05,309][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:05,310][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:05,310][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:33:05,312][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.geo.GeoShapeQueryTests",
  "startTimestamp": 1474047157018,
  "executionTime": 28304
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.unit.TimeValueTests",
   "displayName": "org.elasticsearch.common.unit.TimeValueTests",
   "methodName": null,
   "className": "org.elasticsearch.common.unit.TimeValueTests",
   "children": [
    {
     "id": "ID#testRoundTrip(org.elasticsearch.common.unit.TimeValueTests)",
     "displayName": "testRoundTrip(org.elasticsearch.common.unit.TimeValueTests)",
     "methodName": "testRoundTrip",
     "className": "org.elasticsearch.common.unit.TimeValueTests",
     "children": []
    },
    {
     "id": "ID#testFailOnMissingUnits(org.elasticsearch.common.unit.TimeValueTests)",
     "displayName": "testFailOnMissingUnits(org.elasticsearch.common.unit.TimeValueTests)",
     "methodName": "testFailOnMissingUnits",
     "className": "org.elasticsearch.common.unit.TimeValueTests",
     "children": []
    },
    {
     "id": "ID#testNoDotsAllowed(org.elasticsearch.common.unit.TimeValueTests)",
     "displayName": "testNoDotsAllowed(org.elasticsearch.common.unit.TimeValueTests)",
     "methodName": "testNoDotsAllowed",
     "className": "org.elasticsearch.common.unit.TimeValueTests",
     "children": []
    },
    {
     "id": "ID#testToString(org.elasticsearch.common.unit.TimeValueTests)",
     "displayName": "testToString(org.elasticsearch.common.unit.TimeValueTests)",
     "methodName": "testToString",
     "className": "org.elasticsearch.common.unit.TimeValueTests",
     "children": []
    },
    {
     "id": "ID#testSimple(org.elasticsearch.common.unit.TimeValueTests)",
     "displayName": "testSimple(org.elasticsearch.common.unit.TimeValueTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.common.unit.TimeValueTests",
     "children": []
    },
    {
     "id": "ID#testParseTimeValue(org.elasticsearch.common.unit.TimeValueTests)",
     "displayName": "testParseTimeValue(org.elasticsearch.common.unit.TimeValueTests)",
     "methodName": "testParseTimeValue",
     "className": "org.elasticsearch.common.unit.TimeValueTests",
     "children": []
    },
    {
     "id": "ID#testToStringRep(org.elasticsearch.common.unit.TimeValueTests)",
     "displayName": "testToStringRep(org.elasticsearch.common.unit.TimeValueTests)",
     "methodName": "testToStringRep",
     "className": "org.elasticsearch.common.unit.TimeValueTests",
     "children": []
    },
    {
     "id": "ID#testNonFractionalTimeValues(org.elasticsearch.common.unit.TimeValueTests)",
     "displayName": "testNonFractionalTimeValues(org.elasticsearch.common.unit.TimeValueTests)",
     "methodName": "testNonFractionalTimeValues",
     "className": "org.elasticsearch.common.unit.TimeValueTests",
     "children": []
    },
    {
     "id": "ID#testFractionalTimeValues(org.elasticsearch.common.unit.TimeValueTests)",
     "displayName": "testFractionalTimeValues(org.elasticsearch.common.unit.TimeValueTests)",
     "methodName": "testFractionalTimeValues",
     "className": "org.elasticsearch.common.unit.TimeValueTests",
     "children": []
    },
    {
     "id": "ID#testFailOnUnknownUnits(org.elasticsearch.common.unit.TimeValueTests)",
     "displayName": "testFailOnUnknownUnits(org.elasticsearch.common.unit.TimeValueTests)",
     "methodName": "testFailOnUnknownUnits",
     "className": "org.elasticsearch.common.unit.TimeValueTests",
     "children": []
    },
    {
     "id": "ID#testFormat(org.elasticsearch.common.unit.TimeValueTests)",
     "displayName": "testFormat(org.elasticsearch.common.unit.TimeValueTests)",
     "methodName": "testFormat",
     "className": "org.elasticsearch.common.unit.TimeValueTests",
     "children": []
    },
    {
     "id": "ID#testSerialize(org.elasticsearch.common.unit.TimeValueTests)",
     "displayName": "testSerialize(org.elasticsearch.common.unit.TimeValueTests)",
     "methodName": "testSerialize",
     "className": "org.elasticsearch.common.unit.TimeValueTests",
     "children": []
    },
    {
     "id": "ID#testMinusOne(org.elasticsearch.common.unit.TimeValueTests)",
     "displayName": "testMinusOne(org.elasticsearch.common.unit.TimeValueTests)",
     "methodName": "testMinusOne",
     "className": "org.elasticsearch.common.unit.TimeValueTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047185329
 }
]

[
 "TEST_STARTED",
 "ID#testRoundTrip(org.elasticsearch.common.unit.TimeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoundTrip(org.elasticsearch.common.unit.TimeValueTests)",
  "startTimestamp": 1474047185409,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnMissingUnits(org.elasticsearch.common.unit.TimeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnMissingUnits(org.elasticsearch.common.unit.TimeValueTests)",
  "startTimestamp": 1474047185411,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNoDotsAllowed(org.elasticsearch.common.unit.TimeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoDotsAllowed(org.elasticsearch.common.unit.TimeValueTests)",
  "startTimestamp": 1474047185413,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToString(org.elasticsearch.common.unit.TimeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToString(org.elasticsearch.common.unit.TimeValueTests)",
  "startTimestamp": 1474047185415,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.common.unit.TimeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.common.unit.TimeValueTests)",
  "startTimestamp": 1474047185419,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseTimeValue(org.elasticsearch.common.unit.TimeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseTimeValue(org.elasticsearch.common.unit.TimeValueTests)",
  "startTimestamp": 1474047185421,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToStringRep(org.elasticsearch.common.unit.TimeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToStringRep(org.elasticsearch.common.unit.TimeValueTests)",
  "startTimestamp": 1474047185424,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testNonFractionalTimeValues(org.elasticsearch.common.unit.TimeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNonFractionalTimeValues(org.elasticsearch.common.unit.TimeValueTests)",
  "startTimestamp": 1474047185430,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testFractionalTimeValues(org.elasticsearch.common.unit.TimeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFractionalTimeValues(org.elasticsearch.common.unit.TimeValueTests)",
  "startTimestamp": 1474047185444,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnUnknownUnits(org.elasticsearch.common.unit.TimeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnUnknownUnits(org.elasticsearch.common.unit.TimeValueTests)",
  "startTimestamp": 1474047185448,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFormat(org.elasticsearch.common.unit.TimeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFormat(org.elasticsearch.common.unit.TimeValueTests)",
  "startTimestamp": 1474047185450,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testSerialize(org.elasticsearch.common.unit.TimeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialize(org.elasticsearch.common.unit.TimeValueTests)",
  "startTimestamp": 1474047185476,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMinusOne(org.elasticsearch.common.unit.TimeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinusOne(org.elasticsearch.common.unit.TimeValueTests)",
  "startTimestamp": 1474047185478,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.unit.TimeValueTests",
  "startTimestamp": 1474047185329,
  "executionTime": 158
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.builders.CircleBuilderTests",
   "displayName": "org.elasticsearch.common.geo.builders.CircleBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.builders.CircleBuilderTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.CircleBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.common.geo.builders.CircleBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.common.geo.builders.CircleBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.common.geo.builders.CircleBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.common.geo.builders.CircleBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.common.geo.builders.CircleBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.common.geo.builders.CircleBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.common.geo.builders.CircleBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.common.geo.builders.CircleBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047185494
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.CircleBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.CircleBuilderTests)",
  "startTimestamp": 1474047185603,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.common.geo.builders.CircleBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.common.geo.builders.CircleBuilderTests)",
  "startTimestamp": 1474047185606,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.common.geo.builders.CircleBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.common.geo.builders.CircleBuilderTests)",
  "startTimestamp": 1474047185608,
  "executionTime": 20
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.builders.CircleBuilderTests",
  "startTimestamp": 1474047185494,
  "executionTime": 136
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
   "children": [
    {
     "id": "ID#testNoFieldName(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testNoFieldName(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testNoFieldName",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNoIndexedShapeType(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testNoIndexedShapeType(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testNoIndexedShapeType",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNoIndexedShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testNoIndexedShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testNoIndexedShape",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNoShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testNoShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testNoShape",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInvalidRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testInvalidRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testInvalidRelation",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNoRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testNoRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testNoRelation",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testThatXContentSerializationInsideOfArrayWorks(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testThatXContentSerializationInsideOfArrayWorks(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testThatXContentSerializationInsideOfArrayWorks",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testIgnoreUnmapped(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testIgnoreUnmapped",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047185639
 }
]

[
 "TEST_STARTED",
 "ID#testNoFieldName(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:05,793][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{gBvetZzRTmir__cRBO7AGw}{local}{local[199]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:05,814][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:05,814][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:05,866][WARN ][org.elasticsearch.deprecation.index.mapper]  [NoEKY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:05,866][WARN ][org.elasticsearch.deprecation.index.mapper]  [NoEKY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:05,866][WARN ][org.elasticsearch.deprecation.index.mapper]  [NoEKY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:05,869][WARN ][org.elasticsearch.deprecation.index.mapper]  [NoEKY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:05,869][WARN ][org.elasticsearch.deprecation.index.mapper]  [NoEKY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:05,869][WARN ][org.elasticsearch.deprecation.index.mapper]  [NoEKY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:05,904][WARN ][org.elasticsearch.deprecation.index.mapper]  [NoEKY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:05,904][WARN ][org.elasticsearch.deprecation.index.mapper]  [NoEKY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:05,904][WARN ][org.elasticsearch.deprecation.index.mapper]  [NoEKY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:05,913][WARN ][org.elasticsearch.deprecation.index.mapper]  [NoEKY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:05,914][WARN ][org.elasticsearch.deprecation.index.mapper]  [NoEKY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:05,914][WARN ][org.elasticsearch.deprecation.index.mapper]  [NoEKY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:05,918][WARN ][org.elasticsearch.deprecation.index.mapper]  [NoEKY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:05,918][WARN ][org.elasticsearch.deprecation.index.mapper]  [NoEKY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:05,918][WARN ][org.elasticsearch.deprecation.index.mapper]  [NoEKY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:05,922][WARN ][org.elasticsearch.deprecation.index.mapper]  [NoEKY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:05,922][WARN ][org.elasticsearch.deprecation.index.mapper]  [NoEKY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:05,922][WARN ][org.elasticsearch.deprecation.index.mapper]  [NoEKY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:05,925][WARN ][org.elasticsearch.deprecation.index.mapper]  [NoEKY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:05,925][WARN ][org.elasticsearch.deprecation.index.mapper]  [NoEKY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:05,925][WARN ][org.elasticsearch.deprecation.index.mapper]  [NoEKY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:05,928][WARN ][org.elasticsearch.deprecation.index.mapper]  [NoEKY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:05,928][WARN ][org.elasticsearch.deprecation.index.mapper]  [NoEKY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:05,928][WARN ][org.elasticsearch.deprecation.index.mapper]  [NoEKY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:05,934][WARN ][org.elasticsearch.deprecation.index.mapper]  [NoEKY] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:05,934][WARN ][org.elasticsearch.deprecation.index.mapper]  [NoEKY] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T15:33:05,934][WARN ][org.elasticsearch.deprecation.index.mapper]  [NoEKY] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoFieldName(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474047185720,
  "executionTime": 215
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474047185936,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474047185938,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474047185953,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testNoIndexedShapeType(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoIndexedShapeType(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474047185960,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474047185963,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNoIndexedShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoIndexedShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474047185965,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNoShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474047185968,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474047185970,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474047185974,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474047185978,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNoRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474047185981,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474047185983,
  "executionTime": 49
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474047186032,
  "executionTime": 60
 }
]

[
 "TEST_STARTED",
 "ID#testThatXContentSerializationInsideOfArrayWorks(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatXContentSerializationInsideOfArrayWorks(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474047186093,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474047186095,
  "executionTime": 67
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474047186163,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
  "startTimestamp": 1474047185639,
  "executionTime": 530
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.transport.local.SimpleLocalTransportTests",
   "displayName": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
   "methodName": null,
   "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
   "children": [
    {
     "id": "ID#testSendRandomRequests(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testSendRandomRequests(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testSendRandomRequests",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testVoidMessageCompressed(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testVoidMessageCompressed(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testVoidMessageCompressed",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testErrorMessage(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testErrorMessage(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testErrorMessage",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testTimeoutSendExceptionWithNeverSendingBackResponse(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testTimeoutSendExceptionWithNeverSendingBackResponse(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testTimeoutSendExceptionWithNeverSendingBackResponse",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testTracerLog(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testTracerLog(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testTracerLog",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testMockUnresponsiveRule(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testMockUnresponsiveRule(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testMockUnresponsiveRule",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testHostOnMessages(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testHostOnMessages(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testHostOnMessages",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testMockFailToSendNoConnectRule(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testMockFailToSendNoConnectRule(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testMockFailToSendNoConnectRule",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testBlockingIncomingRequests(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testBlockingIncomingRequests(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testBlockingIncomingRequests",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testDisconnectListener(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testDisconnectListener(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testDisconnectListener",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testLocalNodeConnection(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testLocalNodeConnection(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testLocalNodeConnection",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testHelloWorldCompressed(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testHelloWorldCompressed(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testHelloWorldCompressed",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testVersionFrom1to1(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testVersionFrom1to1(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testVersionFrom1to1",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testHelloWorld(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testHelloWorld(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testHelloWorld",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testThreadContext(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testThreadContext(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testThreadContext",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testTimeoutSendExceptionWithDelayedResponse(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testTimeoutSendExceptionWithDelayedResponse(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testTimeoutSendExceptionWithDelayedResponse",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testNotifyOnShutdown(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testNotifyOnShutdown(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testNotifyOnShutdown",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testVersionFrom1to0(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testVersionFrom1to0(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testVersionFrom1to0",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testConcurrentSendRespondAndDisconnect(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testConcurrentSendRespondAndDisconnect(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testConcurrentSendRespondAndDisconnect",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testVersionFrom0to1(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testVersionFrom0to1(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testVersionFrom0to1",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testVersionFrom0to0(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testVersionFrom0to0(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testVersionFrom0to0",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047186235
 }
]

[
 "TEST_STARTED",
 "ID#testSendRandomRequests(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,323][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[16]}, bound_addresses {local[16]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,340][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[17]}, bound_addresses {local[17]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,343][INFO ][org.elasticsearch.transport.local] [node_s_0] --> actively connecting to local node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,349][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[18]}, bound_addresses {local[18]}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSendRandomRequests(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474047186282,
  "executionTime": 187
 }
]

[
 "TEST_STARTED",
 "ID#testVoidMessageCompressed(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,473][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[19]}, bound_addresses {local[19]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,474][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[20]}, bound_addresses {local[20]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,474][INFO ][org.elasticsearch.transport.local] [node_s_0] --> actively connecting to local node%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVoidMessageCompressed(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474047186469,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testErrorMessage(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,501][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[21]}, bound_addresses {local[21]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,503][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[22]}, bound_addresses {local[22]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,503][INFO ][org.elasticsearch.transport.local] [node_s_0] --> actively connecting to local node%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testErrorMessage(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474047186496,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testTimeoutSendExceptionWithNeverSendingBackResponse(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,528][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[23]}, bound_addresses {local[23]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,530][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[24]}, bound_addresses {local[24]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,530][INFO ][org.elasticsearch.transport.local] [node_s_0] --> actively connecting to local node%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeoutSendExceptionWithNeverSendingBackResponse(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474047186524,
  "executionTime": 128
 }
]

[
 "TEST_STARTED",
 "ID#testTracerLog(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,656][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[25]}, bound_addresses {local[25]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,657][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[26]}, bound_addresses {local[26]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,657][INFO ][org.elasticsearch.transport.local] [node_s_0] --> actively connecting to local node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,667][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [0][test] sent to [{TS_B}{0FKVSGXAR8CKA1VPfy0-uA}{local}{local[26]}] (timeout: [1ms])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,667][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [0][test] received request%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,668][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [0][test] sent response%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,669][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [0][test] received response from [{TS_B}{0FKVSGXAR8CKA1VPfy0-uA}{local}{local[26]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,669][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [1][testError] sent to [{TS_B}{0FKVSGXAR8CKA1VPfy0-uA}{local}{local[26]}] (timeout: [null])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,670][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [1][testError] received request%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,676][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [1][testError] received response from [{TS_B}{0FKVSGXAR8CKA1VPfy0-uA}{local}{local[26]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,671][TRACE][org.elasticsearch.test.transport.tracer] [1][testError] sent error response%0D%0Ajava.lang.RuntimeException: %0A%09at org.elasticsearch.transport.AbstractSimpleTransportTestCase$23.messageReceived(AbstractSimpleTransportTestCase.java:809) ~[framework-5.0.0-alpha6-SNAPSHOT.jar:?]%0A%09at org.elasticsearch.transport.AbstractSimpleTransportTestCase$23.messageReceived(AbstractSimpleTransportTestCase.java:803) ~[framework-5.0.0-alpha6-SNAPSHOT.jar:?]%0A%09at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33) ~[main/:?]%0A%09at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:69) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.handleRequest(LocalTransport.java:335) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.processReceivedMessage(LocalTransport.java:283) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.lambda$receiveMessage$0(LocalTransport.java:251) ~[main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:444) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,678][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [transport.tracer.exclude] from [[\"internal:discovery/zen/fd*\",\"cluster:monitor/nodes/liveness\"]] to [[\"*Error\"]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,679][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [2][test] sent to [{TS_B}{0FKVSGXAR8CKA1VPfy0-uA}{local}{local[26]}] (timeout: [null])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,680][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [2][test] received request%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,681][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [2][test] sent response%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,681][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [2][test] received response from [{TS_B}{0FKVSGXAR8CKA1VPfy0-uA}{local}{local[26]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,682][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [3][testError] received request%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,682][TRACE][org.elasticsearch.test.transport.tracer] [3][testError] sent error response%0D%0Ajava.lang.RuntimeException: %0A%09at org.elasticsearch.transport.AbstractSimpleTransportTestCase$23.messageReceived(AbstractSimpleTransportTestCase.java:809) ~[framework-5.0.0-alpha6-SNAPSHOT.jar:?]%0A%09at org.elasticsearch.transport.AbstractSimpleTransportTestCase$23.messageReceived(AbstractSimpleTransportTestCase.java:803) ~[framework-5.0.0-alpha6-SNAPSHOT.jar:?]%0A%09at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33) ~[main/:?]%0A%09at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:69) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.handleRequest(LocalTransport.java:335) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.processReceivedMessage(LocalTransport.java:283) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.lambda$receiveMessage$0(LocalTransport.java:251) ~[main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:444) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTracerLog(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474047186652,
  "executionTime": 33
 }
]

[
 "TEST_STARTED",
 "ID#testMockUnresponsiveRule(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,689][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[27]}, bound_addresses {local[27]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,690][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[28]}, bound_addresses {local[28]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,690][INFO ][org.elasticsearch.transport.local] [node_s_0] --> using local node optimization%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMockUnresponsiveRule(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474047186685,
  "executionTime": 120
 }
]

[
 "TEST_STARTED",
 "ID#testHostOnMessages(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,808][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[29]}, bound_addresses {local[29]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,809][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[30]}, bound_addresses {local[30]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,809][INFO ][org.elasticsearch.transport.local] [node_s_0] --> using local node optimization%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHostOnMessages(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474047186805,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testMockFailToSendNoConnectRule(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,818][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[31]}, bound_addresses {local[31]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,818][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[32]}, bound_addresses {local[32]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,818][INFO ][org.elasticsearch.transport.local] [node_s_0] --> using local node optimization%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMockFailToSendNoConnectRule(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474047186815,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testBlockingIncomingRequests(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,830][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[33]}, bound_addresses {local[33]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,831][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[34]}, bound_addresses {local[34]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,831][INFO ][org.elasticsearch.transport.local] [node_s_0] --> actively connecting to local node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,835][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[35]}, bound_addresses {local[35]}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBlockingIncomingRequests(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474047186826,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testDisconnectListener(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,843][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[36]}, bound_addresses {local[36]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,846][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[37]}, bound_addresses {local[37]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,846][INFO ][org.elasticsearch.transport.local] [node_s_0] --> actively connecting to local node%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDisconnectListener(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474047186840,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testLocalNodeConnection(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,858][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[38]}, bound_addresses {local[38]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,859][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[39]}, bound_addresses {local[39]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,859][INFO ][org.elasticsearch.transport.local] [node_s_0] --> actively connecting to local node%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLocalNodeConnection(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474047186854,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testHelloWorldCompressed(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,875][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[40]}, bound_addresses {local[40]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,876][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[41]}, bound_addresses {local[41]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,876][INFO ][org.elasticsearch.transport.local] [node_s_0] --> actively connecting to local node%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHelloWorldCompressed(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474047186871,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testVersionFrom1to1(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,887][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[42]}, bound_addresses {local[42]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,888][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[43]}, bound_addresses {local[43]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,888][INFO ][org.elasticsearch.transport.local] [node_s_0] --> using local node optimization%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionFrom1to1(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474047186883,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testHelloWorld(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,899][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[44]}, bound_addresses {local[44]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,902][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[45]}, bound_addresses {local[45]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,902][INFO ][org.elasticsearch.transport.local] [node_s_0] --> using local node optimization%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHelloWorld(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474047186896,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testThreadContext(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,924][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[46]}, bound_addresses {local[46]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,925][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[47]}, bound_addresses {local[47]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,925][INFO ][org.elasticsearch.transport.local] [node_s_0] --> using local node optimization%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThreadContext(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474047186920,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testTimeoutSendExceptionWithDelayedResponse(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,938][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[48]}, bound_addresses {local[48]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,939][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[49]}, bound_addresses {local[49]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:06,939][INFO ][org.elasticsearch.transport.local] [node_s_0] --> actively connecting to local node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:07,069][WARN ][org.elasticsearch.test.transport] [TS_B] Received response for a request that has timed out, sent [123ms] ago, timed out [18ms] ago, action [sayHelloTimeoutDelayedResponse], node [{TS_A}{6udGNPkJTyCNStCyA8Ecyg}{local}{local[48]}], id [0]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeoutSendExceptionWithDelayedResponse(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474047186933,
  "executionTime": 139
 }
]

[
 "TEST_STARTED",
 "ID#testNotifyOnShutdown(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:07,077][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[50]}, bound_addresses {local[50]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:07,078][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[51]}, bound_addresses {local[51]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:07,078][INFO ][org.elasticsearch.transport.local] [node_s_0] --> using local node optimization%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:07,083][INFO ][org.elasticsearch.transport.local] [node_s_0] Stop ServiceB now%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotifyOnShutdown(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474047187072,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testVersionFrom1to0(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:07,092][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[52]}, bound_addresses {local[52]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:07,093][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[53]}, bound_addresses {local[53]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:07,093][INFO ][org.elasticsearch.transport.local] [node_s_0] --> actively connecting to local node%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionFrom1to0(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474047187088,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testConcurrentSendRespondAndDisconnect(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:07,115][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[54]}, bound_addresses {local[54]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:07,116][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[55]}, bound_addresses {local[55]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:07,116][INFO ][org.elasticsearch.transport.local] [node_s_0] --> actively connecting to local node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:07,125][INFO ][org.elasticsearch.test.transport] [TS_B_0] publish_address {local[56]}, bound_addresses {local[56]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:07,127][INFO ][org.elasticsearch.test.transport] [TS_B_3] publish_address {local[57]}, bound_addresses {local[57]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:07,129][INFO ][org.elasticsearch.test.transport] [TS_B_6] publish_address {local[58]}, bound_addresses {local[58]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:07,131][INFO ][org.elasticsearch.test.transport] [TS_B_9] publish_address {local[59]}, bound_addresses {local[59]}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcurrentSendRespondAndDisconnect(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474047187106,
  "executionTime": 59
 }
]

[
 "TEST_STARTED",
 "ID#testVersionFrom0to1(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:07,169][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[60]}, bound_addresses {local[60]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:07,171][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[61]}, bound_addresses {local[61]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:07,171][INFO ][org.elasticsearch.transport.local] [node_s_0] --> actively connecting to local node%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionFrom0to1(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474047187166,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testVersionFrom0to0(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:07,187][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[62]}, bound_addresses {local[62]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:07,188][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[63]}, bound_addresses {local[63]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:07,188][INFO ][org.elasticsearch.transport.local] [node_s_0] --> actively connecting to local node%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionFrom0to0(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474047187180,
  "executionTime": 24
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.transport.local.SimpleLocalTransportTests",
  "startTimestamp": 1474047186235,
  "executionTime": 973
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
   "displayName": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
   "children": [
    {
     "id": "ID#testSingleValueWithMissing(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testSingleValueWithMissing(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testSingleValueWithMissing",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMissingFirst(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testSortMissingFirst(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testSortMissingFirst",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testSortMultiValuesFields(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testSortMultiValuesFields",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testNestedSortingMax(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testNestedSortingMax(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testNestedSortingMax",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMissingLast(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testSortMissingLast(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testSortMissingLast",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testActualMissingValue(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testActualMissingValue(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testActualMissingValue",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testNestedSortingMin(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testNestedSortingMin(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testNestedSortingMin",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testMissingValueForAll(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testMissingValueForAll(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testMissingValueForAll",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMissingLastReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testSortMissingLastReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testSortMissingLastReverse",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testMultiValueWithMissing(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testMultiValueWithMissing(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testMultiValueWithMissing",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testEmpty(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSingleValueAllSet(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testSingleValueAllSet(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testSingleValueAllSet",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testActualMissingValueReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testActualMissingValueReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testActualMissingValueReverse",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testTermsEnum(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testTermsEnum(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testTermsEnum",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testDeletedDocs(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testDeletedDocs(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testDeletedDocs",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testMultiValueAllSet(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testMultiValueAllSet(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testMultiValueAllSet",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testGlobalOrdinals(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testGlobalOrdinals(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testGlobalOrdinals",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMissingFirstReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testSortMissingFirstReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testSortMissingFirstReverse",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testGlobalOrdinalsGetRemovedOnceIndexReaderCloses(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testGlobalOrdinalsGetRemovedOnceIndexReaderCloses(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testGlobalOrdinalsGetRemovedOnceIndexReaderCloses",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047187233
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValueWithMissing(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:07,318][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:07,340][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:07,340][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:07,343][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:07,346][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:07,346][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:07,593][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:07,594][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:07,596][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[64]}, bound_addresses {local[64]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:07,597][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{iDFCDqRjTSCWf0uhDOIzmA}{Ba-PhUweSJC8j3ZwpPw4uw}{local}{local[64]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:07,598][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:07,614][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:07,634][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:07,690][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:07,732][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testSingleValueWithMissing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValueWithMissing(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474047187252,
  "executionTime": 519
 }
]

[
 "TEST_STARTED",
 "ID#testSortMissingFirst(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:07,780][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:07,832][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:08,287][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testSortMissingFirst]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMissingFirst(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474047187771,
  "executionTime": 544
 }
]

[
 "TEST_STARTED",
 "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:08,322][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:08,421][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:08,444][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testSortMultiValuesFields]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474047188315,
  "executionTime": 159
 }
]

[
 "TEST_STARTED",
 "ID#testNestedSortingMax(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:08,482][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:08,561][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:09,104][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testNestedSortingMax]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedSortingMax(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474047188474,
  "executionTime": 668
 }
]

[
 "TEST_STARTED",
 "ID#testSortMissingLast(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:09,150][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:09,202][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:09,234][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testSortMissingLast]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMissingLast(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474047189142,
  "executionTime": 118
 }
]

[
 "TEST_STARTED",
 "ID#testActualMissingValue(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:09,266][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:09,322][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:09,468][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testActualMissingValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActualMissingValue(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474047189260,
  "executionTime": 275
 }
]

[
 "TEST_STARTED",
 "ID#testNestedSortingMin(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:09,542][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:09,607][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:10,488][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testNestedSortingMin]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedSortingMin(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474047189535,
  "executionTime": 992
 }
]

[
 "TEST_STARTED",
 "ID#testMissingValueForAll(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:10,535][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:10,605][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:10,622][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testMissingValueForAll]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingValueForAll(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474047190527,
  "executionTime": 125
 }
]

[
 "TEST_STARTED",
 "ID#testSortMissingLastReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:10,663][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:10,731][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:10,960][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testSortMissingLastReverse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMissingLastReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474047190652,
  "executionTime": 378
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValueWithMissing(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:11,041][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:11,138][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:11,155][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testMultiValueWithMissing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValueWithMissing(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474047191030,
  "executionTime": 159
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:11,196][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:11,259][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:11,277][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testEmpty]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474047191189,
  "executionTime": 127
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValueAllSet(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:11,325][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:11,436][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:11,461][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testSingleValueAllSet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValueAllSet(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474047191317,
  "executionTime": 178
 }
]

[
 "TEST_STARTED",
 "ID#testActualMissingValueReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:11,501][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:11,779][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:11,990][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testActualMissingValueReverse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActualMissingValueReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474047191495,
  "executionTime": 556
 }
]

[
 "TEST_STARTED",
 "ID#testTermsEnum(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:12,071][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:12,157][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:12,179][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testTermsEnum]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermsEnum(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474047192051,
  "executionTime": 157
 }
]

[
 "TEST_STARTED",
 "ID#testDeletedDocs(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:12,215][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:12,288][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:12,355][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testDeletedDocs]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeletedDocs(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474047192208,
  "executionTime": 173
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValueAllSet(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:12,389][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:12,462][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:12,476][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testMultiValueAllSet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValueAllSet(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474047192381,
  "executionTime": 144
 }
]

[
 "TEST_STARTED",
 "ID#testGlobalOrdinals(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:12,531][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:12,638][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:12,654][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testGlobalOrdinals]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGlobalOrdinals(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474047192525,
  "executionTime": 159
 }
]

[
 "TEST_STARTED",
 "ID#testSortMissingFirstReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:12,693][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:12,841][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:12,872][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testSortMissingFirstReverse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMissingFirstReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474047192684,
  "executionTime": 221
 }
]

[
 "TEST_STARTED",
 "ID#testGlobalOrdinalsGetRemovedOnceIndexReaderCloses(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:12,910][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:12,949][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:12,971][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testGlobalOrdinalsGetRemovedOnceIndexReaderCloses]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGlobalOrdinalsGetRemovedOnceIndexReaderCloses(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474047192905,
  "executionTime": 94
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:12,999][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:12,999][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:13,000][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:13,001][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
  "startTimestamp": 1474047187233,
  "executionTime": 5779
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
   "displayName": "org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
   "children": [
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
     "children": []
    },
    {
     "id": "ID#testReadFrom(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "displayName": "testReadFrom(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
     "children": []
    },
    {
     "id": "ID#testWriteTo(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "displayName": "testWriteTo(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "methodName": "testWriteTo",
     "className": "org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
     "children": []
    },
    {
     "id": "ID#testFromString(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "displayName": "testFromString(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "methodName": "testFromString",
     "className": "org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047193027
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
  "startTimestamp": 1474047193042,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
  "startTimestamp": 1474047193065,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWriteTo(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteTo(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
  "startTimestamp": 1474047193067,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromString(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromString(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
  "startTimestamp": 1474047193069,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
  "startTimestamp": 1474047193027,
  "executionTime": 46
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.main.MainActionTests",
   "displayName": "org.elasticsearch.action.main.MainActionTests",
   "methodName": null,
   "className": "org.elasticsearch.action.main.MainActionTests",
   "children": [
    {
     "id": "ID#testMainActionClusterAvailable(org.elasticsearch.action.main.MainActionTests)",
     "displayName": "testMainActionClusterAvailable(org.elasticsearch.action.main.MainActionTests)",
     "methodName": "testMainActionClusterAvailable",
     "className": "org.elasticsearch.action.main.MainActionTests",
     "children": []
    },
    {
     "id": "ID#testMainResponseXContent(org.elasticsearch.action.main.MainActionTests)",
     "displayName": "testMainResponseXContent(org.elasticsearch.action.main.MainActionTests)",
     "methodName": "testMainResponseXContent",
     "className": "org.elasticsearch.action.main.MainActionTests",
     "children": []
    },
    {
     "id": "ID#testMainResponseSerialization(org.elasticsearch.action.main.MainActionTests)",
     "displayName": "testMainResponseSerialization(org.elasticsearch.action.main.MainActionTests)",
     "methodName": "testMainResponseSerialization",
     "className": "org.elasticsearch.action.main.MainActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047193079
 }
]

[
 "TEST_STARTED",
 "ID#testMainActionClusterAvailable(org.elasticsearch.action.main.MainActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMainActionClusterAvailable(org.elasticsearch.action.main.MainActionTests)",
  "startTimestamp": 1474047193109,
  "executionTime": 52
 }
]

[
 "TEST_STARTED",
 "ID#testMainResponseXContent(org.elasticsearch.action.main.MainActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMainResponseXContent(org.elasticsearch.action.main.MainActionTests)",
  "startTimestamp": 1474047193161,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMainResponseSerialization(org.elasticsearch.action.main.MainActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMainResponseSerialization(org.elasticsearch.action.main.MainActionTests)",
  "startTimestamp": 1474047193163,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.main.MainActionTests",
  "startTimestamp": 1474047193079,
  "executionTime": 89
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.MergePolicySettingsTests",
   "displayName": "org.elasticsearch.index.MergePolicySettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.index.MergePolicySettingsTests",
   "children": [
    {
     "id": "ID#testTieredMergePolicySettingsUpdate(org.elasticsearch.index.MergePolicySettingsTests)",
     "displayName": "testTieredMergePolicySettingsUpdate(org.elasticsearch.index.MergePolicySettingsTests)",
     "methodName": "testTieredMergePolicySettingsUpdate",
     "className": "org.elasticsearch.index.MergePolicySettingsTests",
     "children": []
    },
    {
     "id": "ID#testNoMerges(org.elasticsearch.index.MergePolicySettingsTests)",
     "displayName": "testNoMerges(org.elasticsearch.index.MergePolicySettingsTests)",
     "methodName": "testNoMerges",
     "className": "org.elasticsearch.index.MergePolicySettingsTests",
     "children": []
    },
    {
     "id": "ID#testUpdateSettings(org.elasticsearch.index.MergePolicySettingsTests)",
     "displayName": "testUpdateSettings(org.elasticsearch.index.MergePolicySettingsTests)",
     "methodName": "testUpdateSettings",
     "className": "org.elasticsearch.index.MergePolicySettingsTests",
     "children": []
    },
    {
     "id": "ID#testCompoundFileSettings(org.elasticsearch.index.MergePolicySettingsTests)",
     "displayName": "testCompoundFileSettings(org.elasticsearch.index.MergePolicySettingsTests)",
     "methodName": "testCompoundFileSettings",
     "className": "org.elasticsearch.index.MergePolicySettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047193176
 }
]

[
 "TEST_STARTED",
 "ID#testTieredMergePolicySettingsUpdate(org.elasticsearch.index.MergePolicySettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:13,203][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.merge.policy.expunge_deletes_allowed] from [10.0] to [11.0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:13,205][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.merge.policy.expunge_deletes_allowed] from [11.0] to [10.0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:13,205][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.merge.policy.floor_segment] from [2mb] to [3mb]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:13,205][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.merge.policy.floor_segment] from [3mb] to [2mb]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:13,205][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.merge.policy.max_merge_at_once] from [10] to [9]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:13,205][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.merge.policy.max_merge_at_once] from [9] to [10]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:13,205][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.merge.policy.max_merge_at_once_explicit] from [30] to [29]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:13,206][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.merge.policy.max_merge_at_once_explicit] from [29] to [30]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:13,206][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.merge.policy.reclaim_deletes_weight] from [2.0] to [3.0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:13,206][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.merge.policy.segments_per_tier] from [10.0] to [11.0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:13,206][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.merge.policy.reclaim_deletes_weight] from [3.0] to [2.0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:13,207][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.merge.policy.segments_per_tier] from [11.0] to [10.0]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTieredMergePolicySettingsUpdate(org.elasticsearch.index.MergePolicySettingsTests)",
  "startTimestamp": 1474047193196,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testNoMerges(org.elasticsearch.index.MergePolicySettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:13,210][WARN ][org.elasticsearch.index  ]  [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:13,210][WARN ][org.elasticsearch.index  ]  [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoMerges(org.elasticsearch.index.MergePolicySettingsTests)",
  "startTimestamp": 1474047193207,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUpdateSettings(org.elasticsearch.index.MergePolicySettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:13,214][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.compound_format] from [0.9] to [0.1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:13,215][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.compound_format] from [0.1] to [0.0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:13,215][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.compound_format] from [0.0] to [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:13,215][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.compound_format] from [true] to [false]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdateSettings(org.elasticsearch.index.MergePolicySettingsTests)",
  "startTimestamp": 1474047193210,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testCompoundFileSettings(org.elasticsearch.index.MergePolicySettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompoundFileSettings(org.elasticsearch.index.MergePolicySettingsTests)",
  "startTimestamp": 1474047193216,
  "executionTime": 12
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.MergePolicySettingsTests",
  "startTimestamp": 1474047193176,
  "executionTime": 58
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.GeohashMappingGeoPointTests",
   "displayName": "org.elasticsearch.index.mapper.GeohashMappingGeoPointTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.GeohashMappingGeoPointTests",
   "children": [
    {
     "id": "ID#testGeoHashPrecisionAsInteger(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
     "displayName": "testGeoHashPrecisionAsInteger(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
     "methodName": "testGeoHashPrecisionAsInteger",
     "className": "org.elasticsearch.index.mapper.GeohashMappingGeoPointTests",
     "children": []
    },
    {
     "id": "ID#testLatLonInOneValue(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
     "displayName": "testLatLonInOneValue(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
     "methodName": "testLatLonInOneValue",
     "className": "org.elasticsearch.index.mapper.GeohashMappingGeoPointTests",
     "children": []
    },
    {
     "id": "ID#testGeoHashPrecisionAsLength(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
     "displayName": "testGeoHashPrecisionAsLength(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
     "methodName": "testGeoHashPrecisionAsLength",
     "className": "org.elasticsearch.index.mapper.GeohashMappingGeoPointTests",
     "children": []
    },
    {
     "id": "ID#testNullValue(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
     "displayName": "testNullValue(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
     "methodName": "testNullValue",
     "className": "org.elasticsearch.index.mapper.GeohashMappingGeoPointTests",
     "children": []
    },
    {
     "id": "ID#testGeoHashValue(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
     "displayName": "testGeoHashValue(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
     "methodName": "testGeoHashValue",
     "className": "org.elasticsearch.index.mapper.GeohashMappingGeoPointTests",
     "children": []
    },
    {
     "id": "ID#testLatLonValues(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
     "displayName": "testLatLonValues(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
     "methodName": "testLatLonValues",
     "className": "org.elasticsearch.index.mapper.GeohashMappingGeoPointTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047193242
 }
]

[
 "TEST_STARTED",
 "ID#testGeoHashPrecisionAsInteger(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:13,375][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:13,434][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:13,434][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:13,438][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:13,441][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:13,441][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:13,656][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:13,656][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:13,657][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[65]}, bound_addresses {local[65]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:13,669][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{N7I3xwK6RvilmOnNJ0mfYQ}{d6aCHHV1QHSjDE24KCTkeg}{local}{local[65]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:13,670][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:13,690][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:13,712][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:13,776][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:13,798][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:13,798][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_precision parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:13,800][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeohashMappingGeoPointTests#testGeoHashPrecisionAsInteger]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoHashPrecisionAsInteger(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
  "startTimestamp": 1474047193356,
  "executionTime": 484
 }
]

[
 "TEST_STARTED",
 "ID#testLatLonInOneValue(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:13,849][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:13,928][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:13,944][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:13,946][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeohashMappingGeoPointTests#testLatLonInOneValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLatLonInOneValue(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
  "startTimestamp": 1474047193840,
  "executionTime": 146
 }
]

[
 "TEST_STARTED",
 "ID#testGeoHashPrecisionAsLength(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:13,992][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:14,114][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:14,131][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:14,131][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_precision parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:14,132][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeohashMappingGeoPointTests#testGeoHashPrecisionAsLength]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoHashPrecisionAsLength(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
  "startTimestamp": 1474047193986,
  "executionTime": 183
 }
]

[
 "TEST_STARTED",
 "ID#testNullValue(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:14,176][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:14,259][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:14,276][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeohashMappingGeoPointTests#testNullValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullValue(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
  "startTimestamp": 1474047194169,
  "executionTime": 139
 }
]

[
 "TEST_STARTED",
 "ID#testGeoHashValue(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:14,315][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:14,395][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:14,411][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:14,416][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeohashMappingGeoPointTests#testGeoHashValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoHashValue(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
  "startTimestamp": 1474047194308,
  "executionTime": 141
 }
]

[
 "TEST_STARTED",
 "ID#testLatLonValues(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:14,457][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:14,513][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:14,533][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:14,537][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeohashMappingGeoPointTests#testLatLonValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLatLonValues(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
  "startTimestamp": 1474047194449,
  "executionTime": 118
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:14,568][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:14,569][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:14,569][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T06:33:14,572][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.GeohashMappingGeoPointTests",
  "startTimestamp": 1474047193242,
  "executionTime": 1339
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.AnalysisTests",
   "displayName": "org.elasticsearch.index.analysis.AnalysisTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.AnalysisTests",
   "children": [
    {
     "id": "ID#testParseStemExclusion(org.elasticsearch.index.analysis.AnalysisTests)",
     "displayName": "testParseStemExclusion(org.elasticsearch.index.analysis.AnalysisTests)",
     "methodName": "testParseStemExclusion",
     "className": "org.elasticsearch.index.analysis.AnalysisTests",
     "children": []
    },
    {
     "id": "ID#testParseNonExistingFile(org.elasticsearch.index.analysis.AnalysisTests)",
     "displayName": "testParseNonExistingFile(org.elasticsearch.index.analysis.AnalysisTests)",
     "methodName": "testParseNonExistingFile",
     "className": "org.elasticsearch.index.analysis.AnalysisTests",
     "children": []
    },
    {
     "id": "ID#testParseWordList(org.elasticsearch.index.analysis.AnalysisTests)",
     "displayName": "testParseWordList(org.elasticsearch.index.analysis.AnalysisTests)",
     "methodName": "testParseWordList",
     "className": "org.elasticsearch.index.analysis.AnalysisTests",
     "children": []
    },
    {
     "id": "ID#testParseFalseEncodedFile(org.elasticsearch.index.analysis.AnalysisTests)",
     "displayName": "testParseFalseEncodedFile(org.elasticsearch.index.analysis.AnalysisTests)",
     "methodName": "testParseFalseEncodedFile",
     "className": "org.elasticsearch.index.analysis.AnalysisTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047194590
 }
]

[
 "TEST_STARTED",
 "ID#testParseStemExclusion(org.elasticsearch.index.analysis.AnalysisTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseStemExclusion(org.elasticsearch.index.analysis.AnalysisTests)",
  "startTimestamp": 1474047194662,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseNonExistingFile(org.elasticsearch.index.analysis.AnalysisTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseNonExistingFile(org.elasticsearch.index.analysis.AnalysisTests)",
  "startTimestamp": 1474047194665,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testParseWordList(org.elasticsearch.index.analysis.AnalysisTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseWordList(org.elasticsearch.index.analysis.AnalysisTests)",
  "startTimestamp": 1474047194672,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testParseFalseEncodedFile(org.elasticsearch.index.analysis.AnalysisTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFalseEncodedFile(org.elasticsearch.index.analysis.AnalysisTests)",
  "startTimestamp": 1474047194687,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.AnalysisTests",
  "startTimestamp": 1474047194590,
  "executionTime": 111
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.NullValueTests",
   "displayName": "org.elasticsearch.index.mapper.NullValueTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.NullValueTests",
   "children": [
    {
     "id": "ID#testNullNullValue(org.elasticsearch.index.mapper.NullValueTests)",
     "displayName": "testNullNullValue(org.elasticsearch.index.mapper.NullValueTests)",
     "methodName": "testNullNullValue",
     "className": "org.elasticsearch.index.mapper.NullValueTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047194706
 }
]

[
 "TEST_STARTED",
 "ID#testNullNullValue(org.elasticsearch.index.mapper.NullValueTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:14,749][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:14,797][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:14,797][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:14,800][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:14,803][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:14,803][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:14,931][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:14,931][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:14,932][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[66]}, bound_addresses {local[66]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:14,934][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{KrY_SDOkQluuB8HMBqybiQ}{bku1ydmpR1G-x2QejDzoRA}{local}{local[66]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:14,935][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:14,948][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:14,968][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:15,046][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:15,141][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NullValueTests#testNullNullValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullNullValue(org.elasticsearch.index.mapper.NullValueTests)",
  "startTimestamp": 1474047194738,
  "executionTime": 482
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:15,220][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:15,222][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:15,223][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:15,225][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.NullValueTests",
  "startTimestamp": 1474047194706,
  "executionTime": 529
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
   "children": [
    {
     "id": "ID#testPrecisionStepDefaultsMapped(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "displayName": "testPrecisionStepDefaultsMapped(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "methodName": "testPrecisionStepDefaultsMapped",
     "className": "org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreFielddata(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "displayName": "testIgnoreFielddata(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "methodName": "testIgnoreFielddata",
     "className": "org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testCoerceOption(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "displayName": "testCoerceOption(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "methodName": "testCoerceOption",
     "className": "org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDocValues(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "displayName": "testDocValues(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "methodName": "testDocValues",
     "className": "org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testPrecisionStepDefaultsDetected(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "displayName": "testPrecisionStepDefaultsDetected(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "methodName": "testPrecisionStepDefaultsDetected",
     "className": "org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testAnalyzerBackCompat(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "displayName": "testAnalyzerBackCompat(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "methodName": "testAnalyzerBackCompat",
     "className": "org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testTermVectorsBackCompat(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "displayName": "testTermVectorsBackCompat(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "methodName": "testTermVectorsBackCompat",
     "className": "org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testPrecisionStepExplicit(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "displayName": "testPrecisionStepExplicit(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "methodName": "testPrecisionStepExplicit",
     "className": "org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testBwCompatIndex(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "displayName": "testBwCompatIndex(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "methodName": "testBwCompatIndex",
     "className": "org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreMalformedOption(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "displayName": "testIgnoreMalformedOption(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "methodName": "testIgnoreMalformedOption",
     "className": "org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testUnIndex(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "displayName": "testUnIndex(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "methodName": "testUnIndex",
     "className": "org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDocValuesOnNested(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "displayName": "testDocValuesOnNested(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "methodName": "testDocValuesOnNested",
     "className": "org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047195244
 }
]

[
 "TEST_STARTED",
 "ID#testPrecisionStepDefaultsMapped(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:15,270][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:15,294][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:15,295][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:15,298][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:15,301][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:15,301][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:15,641][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:15,641][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:15,642][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[67]}, bound_addresses {local[67]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:15,857][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{zpcKsMjQTNu3OcGC9le8Ew}{qLtB88IUTj2t9Rw8jv5C2g}{local}{local[67]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:15,858][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:16,123][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:16,158][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:16,293][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:16,509][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyNumberFieldMapperTests#testPrecisionStepDefaultsMapped]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrecisionStepDefaultsMapped(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
  "startTimestamp": 1474047195261,
  "executionTime": 1326
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreFielddata(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:16,596][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-byte] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:16,676][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-byte][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:16,720][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-short] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:16,810][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-short][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:16,841][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-integer] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:16,908][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-integer][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:16,945][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-long] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:17,042][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-long][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:17,064][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-float] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:17,115][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-float][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:17,133][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-double] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:17,251][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-double][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:17,265][INFO ][org.elasticsearch.index.mapper] [node_s_0] [index-double] [LegacyNumberFieldMapperTests#testIgnoreFielddata]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreFielddata(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
  "startTimestamp": 1474047196587,
  "executionTime": 810
 }
]

[
 "TEST_STARTED",
 "ID#testCoerceOption(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:17,405][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:17,509][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:17,624][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyNumberFieldMapperTests#testCoerceOption]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCoerceOption(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
  "startTimestamp": 1474047197398,
  "executionTime": 405
 }
]

[
 "TEST_STARTED",
 "ID#testDocValues(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:17,812][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:17,932][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:17,945][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] Expected a boolean for property [index] but got [no]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:17,945][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] Expected a boolean for property [index] but got [no]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:17,952][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyNumberFieldMapperTests#testDocValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDocValues(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
  "startTimestamp": 1474047197804,
  "executionTime": 200
 }
]

[
 "TEST_STARTED",
 "ID#testPrecisionStepDefaultsDetected(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:18,012][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:18,092][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:18,116][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyNumberFieldMapperTests#testPrecisionStepDefaultsDetected]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrecisionStepDefaultsDetected(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
  "startTimestamp": 1474047198005,
  "executionTime": 166
 }
]

[
 "TEST_STARTED",
 "ID#testAnalyzerBackCompat(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:18,201][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-byte] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:18,320][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-byte][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:18,351][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index2-byte] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:18,427][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index2-byte][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:18,457][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-short] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:18,519][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-short][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:18,538][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index2-short] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:18,667][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index2-short][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:18,692][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-integer] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:18,914][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-integer][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:18,955][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index2-integer] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:19,057][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index2-integer][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:19,091][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-long] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:19,164][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-long][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:19,181][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index2-long] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:19,281][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index2-long][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:19,297][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-float] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:19,429][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-float][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:19,459][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index2-float] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:19,589][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index2-float][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:19,608][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-double] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:19,676][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-double][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:19,693][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index2-double] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:19,810][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index2-double][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:19,880][INFO ][org.elasticsearch.index.mapper] [node_s_0] [index2-double] [LegacyNumberFieldMapperTests#testAnalyzerBackCompat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAnalyzerBackCompat(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
  "startTimestamp": 1474047198171,
  "executionTime": 2694
 }
]

[
 "TEST_STARTED",
 "ID#testTermVectorsBackCompat(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:20,872][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-byte] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:20,927][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-byte][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:20,948][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index2-byte] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:21,061][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index2-byte][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:21,081][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-short] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:21,172][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-short][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:21,194][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index2-short] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:21,325][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index2-short][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:21,342][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-integer] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:21,390][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-integer][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:21,406][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index2-integer] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:21,469][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index2-integer][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:21,485][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-long] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:21,535][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-long][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:21,554][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index2-long] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:21,600][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index2-long][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:21,622][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-float] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:21,684][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-float][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:21,702][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index2-float] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:21,755][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index2-float][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:21,772][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-double] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:21,837][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-double][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:21,859][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index2-double] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:21,929][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index2-double][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:21,944][INFO ][org.elasticsearch.index.mapper] [node_s_0] [index2-double] [LegacyNumberFieldMapperTests#testTermVectorsBackCompat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermVectorsBackCompat(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
  "startTimestamp": 1474047200865,
  "executionTime": 1500
 }
]

[
 "TEST_STARTED",
 "ID#testPrecisionStepExplicit(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:22,372][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:22,441][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:22,456][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyNumberFieldMapperTests#testPrecisionStepExplicit]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrecisionStepExplicit(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
  "startTimestamp": 1474047202365,
  "executionTime": 123
 }
]

[
 "TEST_STARTED",
 "ID#testBwCompatIndex(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:22,496][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:22,559][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:22,575][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] Expected a boolean for property [index] but got [no]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:22,575][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] Expected a boolean for property [index] but got [not_analyzed]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:22,576][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyNumberFieldMapperTests#testBwCompatIndex]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBwCompatIndex(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
  "startTimestamp": 1474047202488,
  "executionTime": 144
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreMalformedOption(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:22,638][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:22,702][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:22,732][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:22,814][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:22,829][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test2] [LegacyNumberFieldMapperTests#testIgnoreMalformedOption]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreMalformedOption(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
  "startTimestamp": 1474047202632,
  "executionTime": 245
 }
]

[
 "TEST_STARTED",
 "ID#testUnIndex(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:22,884][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:22,925][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:22,937][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyNumberFieldMapperTests#testUnIndex]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnIndex(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
  "startTimestamp": 1474047202878,
  "executionTime": 202
 }
]

[
 "TEST_STARTED",
 "ID#testDocValuesOnNested(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:23,087][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:23,192][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:23,206][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyNumberFieldMapperTests#testDocValuesOnNested]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDocValuesOnNested(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
  "startTimestamp": 1474047203080,
  "executionTime": 161
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:23,241][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:23,242][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:23,242][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:23,244][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
  "startTimestamp": 1474047195244,
  "executionTime": 8012
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
   "displayName": "org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
   "children": [
    {
     "id": "ID#testMissingSecondConstructorArg(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "displayName": "testMissingSecondConstructorArg(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "methodName": "testMissingSecondConstructorArg",
     "className": "org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testMissingAllConstructorArgsButNotRequired(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "displayName": "testMissingAllConstructorArgsButNotRequired(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "methodName": "testMissingAllConstructorArgsButNotRequired",
     "className": "org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testCalledOneTime(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "displayName": "testCalledOneTime(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "methodName": "testCalledOneTime",
     "className": "org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testConstructorArgsMustBeConfigured(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "displayName": "testConstructorArgsMustBeConfigured(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "methodName": "testConstructorArgsMustBeConfigured",
     "className": "org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testMissingFirstConstructorArgButNotRequired(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "displayName": "testMissingFirstConstructorArgButNotRequired(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "methodName": "testMissingFirstConstructorArgButNotRequired",
     "className": "org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testBadParam(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "displayName": "testBadParam(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "methodName": "testBadParam",
     "className": "org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testRandomOrder(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "displayName": "testRandomOrder(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "methodName": "testRandomOrder",
     "className": "org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testMissingSecondConstructorArgButNotRequired(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "displayName": "testMissingSecondConstructorArgButNotRequired(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "methodName": "testMissingSecondConstructorArgButNotRequired",
     "className": "org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testBadParamBeforeObjectBuilt(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "displayName": "testBadParamBeforeObjectBuilt(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "methodName": "testBadParamBeforeObjectBuilt",
     "className": "org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testMissingFirstConstructorArg(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "displayName": "testMissingFirstConstructorArg(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "methodName": "testMissingFirstConstructorArg",
     "className": "org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testRepeatedConstructorParam(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "displayName": "testRepeatedConstructorParam(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "methodName": "testRepeatedConstructorParam",
     "className": "org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testMissingAllConstructorArgs(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "displayName": "testMissingAllConstructorArgs(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "methodName": "testMissingAllConstructorArgs",
     "className": "org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047203265
 }
]

[
 "TEST_STARTED",
 "ID#testMissingSecondConstructorArg(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingSecondConstructorArg(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
  "startTimestamp": 1474047203411,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testMissingAllConstructorArgsButNotRequired(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingAllConstructorArgsButNotRequired(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
  "startTimestamp": 1474047203420,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCalledOneTime(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCalledOneTime(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
  "startTimestamp": 1474047203422,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testConstructorArgsMustBeConfigured(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConstructorArgsMustBeConfigured(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
  "startTimestamp": 1474047203426,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMissingFirstConstructorArgButNotRequired(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingFirstConstructorArgButNotRequired(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
  "startTimestamp": 1474047203428,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBadParam(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBadParam(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
  "startTimestamp": 1474047203431,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRandomOrder(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomOrder(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
  "startTimestamp": 1474047203434,
  "executionTime": 48
 }
]

[
 "TEST_STARTED",
 "ID#testMissingSecondConstructorArgButNotRequired(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingSecondConstructorArgButNotRequired(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
  "startTimestamp": 1474047203482,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBadParamBeforeObjectBuilt(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBadParamBeforeObjectBuilt(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
  "startTimestamp": 1474047203484,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testMissingFirstConstructorArg(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingFirstConstructorArg(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
  "startTimestamp": 1474047203495,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRepeatedConstructorParam(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRepeatedConstructorParam(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
  "startTimestamp": 1474047203497,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMissingAllConstructorArgs(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingAllConstructorArgs(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
  "startTimestamp": 1474047203499,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
  "startTimestamp": 1474047203265,
  "executionTime": 238
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.PipelineAggregationHelperTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.PipelineAggregationHelperTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.PipelineAggregationHelperTests",
   "children": []
  },
  "startTimestamp": 1474047203510
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.PipelineAggregationHelperTests",
  "startTimestamp": 1474047203510,
  "executionTime": 56
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.service.ClusterServiceTests",
   "displayName": "org.elasticsearch.cluster.service.ClusterServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.service.ClusterServiceTests",
   "children": [
    {
     "id": "ID#testLongClusterStateUpdateLogging(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "displayName": "testLongClusterStateUpdateLogging(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "methodName": "testLongClusterStateUpdateLogging",
     "className": "org.elasticsearch.cluster.service.ClusterServiceTests",
     "children": []
    },
    {
     "id": "ID#testTimeoutUpdateTask(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "displayName": "testTimeoutUpdateTask(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "methodName": "testTimeoutUpdateTask",
     "className": "org.elasticsearch.cluster.service.ClusterServiceTests",
     "children": []
    },
    {
     "id": "ID#testClusterStateTaskListenerThrowingExceptionIsOkay(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "displayName": "testClusterStateTaskListenerThrowingExceptionIsOkay(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "methodName": "testClusterStateTaskListenerThrowingExceptionIsOkay",
     "className": "org.elasticsearch.cluster.service.ClusterServiceTests",
     "children": []
    },
    {
     "id": "ID#testSingleBatchSubmission(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "displayName": "testSingleBatchSubmission(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "methodName": "testSingleBatchSubmission",
     "className": "org.elasticsearch.cluster.service.ClusterServiceTests",
     "children": []
    },
    {
     "id": "ID#testClusterStateBatchedUpdates(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "displayName": "testClusterStateBatchedUpdates(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "methodName": "testClusterStateBatchedUpdates",
     "className": "org.elasticsearch.cluster.service.ClusterServiceTests",
     "children": []
    },
    {
     "id": "ID#testClusterStateUpdateTasksAreExecutedInOrder(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "displayName": "testClusterStateUpdateTasksAreExecutedInOrder(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "methodName": "testClusterStateUpdateTasksAreExecutedInOrder",
     "className": "org.elasticsearch.cluster.service.ClusterServiceTests",
     "children": []
    },
    {
     "id": "ID#testPrioritizedTasks(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "displayName": "testPrioritizedTasks(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "methodName": "testPrioritizedTasks",
     "className": "org.elasticsearch.cluster.service.ClusterServiceTests",
     "children": []
    },
    {
     "id": "ID#testDuplicateSubmission(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "displayName": "testDuplicateSubmission(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "methodName": "testDuplicateSubmission",
     "className": "org.elasticsearch.cluster.service.ClusterServiceTests",
     "children": []
    },
    {
     "id": "ID#testMasterAwareExecution(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "displayName": "testMasterAwareExecution(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "methodName": "testMasterAwareExecution",
     "className": "org.elasticsearch.cluster.service.ClusterServiceTests",
     "children": []
    },
    {
     "id": "ID#testClusterStateUpdateLogging(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "displayName": "testClusterStateUpdateLogging(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "methodName": "testClusterStateUpdateLogging",
     "className": "org.elasticsearch.cluster.service.ClusterServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047203589
 }
]

[
 "TEST_STARTED",
 "ID#testLongClusterStateUpdateLogging(org.elasticsearch.cluster.service.ClusterServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:23,714][WARN ][org.elasticsearch.cluster.service] [node_s_0] cluster state update task [test2] took [32s] above the warn threshold of 30s%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-16 21:33:23,716 elasticsearch[clusterService#updateTask][T#1] ERROR Attempted to append to non-started appender mock"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:23,718][WARN ][org.elasticsearch.cluster.service] [node_s_0] cluster state update task [test2] took [32s] above the warn threshold of 30s%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-16 21:33:23,718 elasticsearch[clusterService#updateTask][T#1] ERROR Attempted to append to non-started appender mock"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:23,719][WARN ][org.elasticsearch.cluster.service] [node_s_0] cluster state update task [test3] took [33s] above the warn threshold of 30s%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-16 21:33:23,719 elasticsearch[clusterService#updateTask][T#1] ERROR Attempted to append to non-started appender mock"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:23,719][WARN ][org.elasticsearch.cluster.service] [node_s_0] cluster state update task [test4] took [34s] above the warn threshold of 30s%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-16 21:33:23,720 elasticsearch[clusterService#updateTask][T#1] ERROR Attempted to append to non-started appender mock"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLongClusterStateUpdateLogging(org.elasticsearch.cluster.service.ClusterServiceTests)",
  "startTimestamp": 1474047203651,
  "executionTime": 70
 }
]

[
 "TEST_STARTED",
 "ID#testTimeoutUpdateTask(org.elasticsearch.cluster.service.ClusterServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:23,754][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node1}{PjU8Bq1CQVGEG9tKLhFvCA}{local}{local[201]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeoutUpdateTask(org.elasticsearch.cluster.service.ClusterServiceTests)",
  "startTimestamp": 1474047203722,
  "executionTime": 112
 }
]

[
 "TEST_STARTED",
 "ID#testClusterStateTaskListenerThrowingExceptionIsOkay(org.elasticsearch.cluster.service.ClusterServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:23,857][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node1}{FREGSgXmT5aKsaafnhnakw}{local}{local[202]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:23,860][ERROR][org.elasticsearch.cluster.service] exception thrown by listener while notifying of cluster state processed from [testClusterStateTaskListenerThrowingExceptionIsOkay], old cluster state:%0Acluster uuid: _na_%0Aversion: 2%0Astate uuid: yQ1zcu_JSvignGxgpET3Rw%0Afrom_diff: false%0Ameta data version: 0%0Anodes: %0A   {node1}{FREGSgXmT5aKsaafnhnakw}{local}{local[202]}, local, master%0Arouting_table (version 0):%0Arouting_nodes:%0A---- unassigned%0A%0Anew cluster state:%0Acluster uuid: _na_%0Aversion: 3%0Astate uuid: dLyfpnpQTMeW0q_toaqVUQ%0Afrom_diff: false%0Ameta data version: 0%0Anodes: %0A   {node1}{FREGSgXmT5aKsaafnhnakw}{local}{local[202]}, local, master%0Arouting_table (version 0):%0Arouting_nodes:%0A---- unassigned%0A%0D%0Ajava.lang.IllegalStateException: testClusterStateTaskListenerThrowingExceptionIsOkay%0A%09at org.elasticsearch.cluster.service.ClusterServiceTests$8.clusterStateProcessed(ClusterServiceTests.java:291) ~[test/:?]%0A%09at org.elasticsearch.cluster.service.ClusterService$SafeClusterStateTaskListener.clusterStateProcessed(ClusterService.java:821) [main/:?]%0A%09at org.elasticsearch.cluster.service.ClusterService.runTasksForExecutor(ClusterService.java:739) [main/:?]%0A%09at org.elasticsearch.cluster.service.ClusterService$UpdateTask.run(ClusterService.java:894) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:444) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:237) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:200) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterStateTaskListenerThrowingExceptionIsOkay(org.elasticsearch.cluster.service.ClusterServiceTests)",
  "startTimestamp": 1474047203835,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testSingleBatchSubmission(org.elasticsearch.cluster.service.ClusterServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:23,878][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node1}{YAFCXcVSTBiaPBH7dyYUIg}{local}{local[203]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleBatchSubmission(org.elasticsearch.cluster.service.ClusterServiceTests)",
  "startTimestamp": 1474047203862,
  "executionTime": 39
 }
]

[
 "TEST_STARTED",
 "ID#testClusterStateBatchedUpdates(org.elasticsearch.cluster.service.ClusterServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:23,907][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node1}{cab1E2IDTROOV4ZKQs8A_g}{local}{local[204]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterStateBatchedUpdates(org.elasticsearch.cluster.service.ClusterServiceTests)",
  "startTimestamp": 1474047203901,
  "executionTime": 423
 }
]

[
 "TEST_STARTED",
 "ID#testClusterStateUpdateTasksAreExecutedInOrder(org.elasticsearch.cluster.service.ClusterServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:24,529][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node1}{kITKCn34T_iNxDhCBJMo5Q}{local}{local[205]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterStateUpdateTasksAreExecutedInOrder(org.elasticsearch.cluster.service.ClusterServiceTests)",
  "startTimestamp": 1474047204324,
  "executionTime": 486
 }
]

[
 "TEST_STARTED",
 "ID#testPrioritizedTasks(org.elasticsearch.cluster.service.ClusterServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:24,820][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node1}{TcbEJCg4TRi9VFMnirOeNQ}{local}{local[206]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrioritizedTasks(org.elasticsearch.cluster.service.ClusterServiceTests)",
  "startTimestamp": 1474047204811,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testDuplicateSubmission(org.elasticsearch.cluster.service.ClusterServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:24,844][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node1}{bgdPi8ffRYukM3JwiS4yEw}{local}{local[207]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuplicateSubmission(org.elasticsearch.cluster.service.ClusterServiceTests)",
  "startTimestamp": 1474047204821,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testMasterAwareExecution(org.elasticsearch.cluster.service.ClusterServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:24,925][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node1}{a5diAzxgQMWB5Hdx71CdAg}{local}{local[208]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMasterAwareExecution(org.elasticsearch.cluster.service.ClusterServiceTests)",
  "startTimestamp": 1474047204847,
  "executionTime": 122
 }
]

[
 "TEST_STARTED",
 "ID#testClusterStateUpdateLogging(org.elasticsearch.cluster.service.ClusterServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:25,010][TRACE][org.elasticsearch.cluster.service] [node_s_0] will process [test setting state]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:25,010][DEBUG][org.elasticsearch.cluster.service] [node_s_0] processing [test setting state]: execute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:25,010][TRACE][org.elasticsearch.cluster.service] [node_s_0] cluster state updated, source [test setting state]%0Acluster uuid: _na_%0Aversion: 2%0Astate uuid: gGoXy2saTriT9SwPGwBzgg%0Afrom_diff: false%0Ameta data version: 0%0Anodes: %0A   {node1}{5Z63MRk1QkKT4G6zvYO7Kw}{local}{local[210]}, local, master%0Arouting_table (version 0):%0Arouting_nodes:%0A---- unassigned%0A%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:25,010][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node1}{5Z63MRk1QkKT4G6zvYO7Kw}{local}{local[210]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:25,011][DEBUG][org.elasticsearch.cluster.service] [node_s_0] publishing cluster state version [2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:25,011][DEBUG][org.elasticsearch.cluster.service] [node_s_0] set local cluster state to version 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:25,012][DEBUG][org.elasticsearch.cluster.service] [node_s_0] processing [test setting state]: took [1ms] done applying updated cluster_state (version: 2, uuid: gGoXy2saTriT9SwPGwBzgg)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-16 21:33:25,012 elasticsearch[clusterService#updateTask][T#1] ERROR Attempted to append to non-started appender mock"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:25,015][TRACE][org.elasticsearch.cluster.service] [node_s_0] will process [test1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-16 21:33:25,015 elasticsearch[clusterService#updateTask][T#1] ERROR Attempted to append to non-started appender mock"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:25,015][DEBUG][org.elasticsearch.cluster.service] [node_s_0] processing [test1]: execute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-16 21:33:25,016 elasticsearch[clusterService#updateTask][T#1] ERROR Attempted to append to non-started appender mock"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:25,016][DEBUG][org.elasticsearch.cluster.service] [node_s_0] processing [test1]: took [1s] no change in cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-16 21:33:25,016 elasticsearch[clusterService#updateTask][T#1] ERROR Attempted to append to non-started appender mock"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:25,016][TRACE][org.elasticsearch.cluster.service] [node_s_0] will process [test2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:25,016][DEBUG][org.elasticsearch.cluster.service] [node_s_0] processing [test2]: execute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:25,017][TRACE][org.elasticsearch.cluster.service] failed to execute cluster state update in [2s], state:%0Aversion [2], source [test2]%0Anodes: %0A   {node1}{5Z63MRk1QkKT4G6zvYO7Kw}{local}{local[210]}, local, master%0Arouting_table (version 0):%0Arouting_nodes:%0A---- unassigned%0A%0D%0Ajava.lang.IllegalArgumentException: Testing handling of exceptions in the cluster state task%0A%09at org.elasticsearch.cluster.service.ClusterServiceTests$14.execute(ClusterServiceTests.java:716) ~[test/:?]%0A%09at org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:45) ~[main/:?]%0A%09at org.elasticsearch.cluster.service.ClusterService.runTasksForExecutor(ClusterService.java:555) [main/:?]%0A%09at org.elasticsearch.cluster.service.ClusterService$UpdateTask.run(ClusterService.java:894) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:444) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:237) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:200) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:25,018][DEBUG][org.elasticsearch.cluster.service] cluster state update task [test2] failed%0D%0Ajava.lang.IllegalArgumentException: Testing handling of exceptions in the cluster state task%0A%09at org.elasticsearch.cluster.service.ClusterServiceTests$14.execute(ClusterServiceTests.java:716) ~[test/:?]%0A%09at org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:45) ~[main/:?]%0A%09at org.elasticsearch.cluster.service.ClusterService.runTasksForExecutor(ClusterService.java:555) [main/:?]%0A%09at org.elasticsearch.cluster.service.ClusterService$UpdateTask.run(ClusterService.java:894) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:444) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:237) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:200) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:25,022][DEBUG][org.elasticsearch.cluster.service] [node_s_0] processing [test2]: took [2s] no change in cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:25,023][TRACE][org.elasticsearch.cluster.service] [node_s_0] will process [test3]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:25,023][DEBUG][org.elasticsearch.cluster.service] [node_s_0] processing [test3]: execute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:25,023][TRACE][org.elasticsearch.cluster.service] [node_s_0] cluster state updated, source [test3]%0Acluster uuid: _na_%0Aversion: 4%0Astate uuid: ht5Xwr-iSSG87crrbwSHcw%0Afrom_diff: false%0Ameta data version: 0%0Anodes: %0A   {node1}{5Z63MRk1QkKT4G6zvYO7Kw}{local}{local[210]}, local, master%0Arouting_table (version 0):%0Arouting_nodes:%0A---- unassigned%0A%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:25,023][DEBUG][org.elasticsearch.cluster.service] [node_s_0] publishing cluster state version [4]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:25,023][DEBUG][org.elasticsearch.cluster.service] [node_s_0] set local cluster state to version 4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:25,023][DEBUG][org.elasticsearch.cluster.service] [node_s_0] processing [test3]: took [3s] done applying updated cluster_state (version: 4, uuid: ht5Xwr-iSSG87crrbwSHcw)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:25,023][TRACE][org.elasticsearch.cluster.service] [node_s_0] will process [test4]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:25,023][DEBUG][org.elasticsearch.cluster.service] [node_s_0] processing [test4]: execute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T21:33:25,024][DEBUG][org.elasticsearch.cluster.service] [node_s_0] processing [test4]: took [0s] no change in cluster_state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterStateUpdateLogging(org.elasticsearch.cluster.service.ClusterServiceTests)",
  "startTimestamp": 1474047204969,
  "executionTime": 56
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.service.ClusterServiceTests",
  "startTimestamp": 1474047203589,
  "executionTime": 1440
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests",
   "children": [
    {
     "id": "ID#testPrimaryShardNoDecisionOnIndexCreation(org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests)",
     "displayName": "testPrimaryShardNoDecisionOnIndexCreation(org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests)",
     "methodName": "testPrimaryShardNoDecisionOnIndexCreation",
     "className": "org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests",
     "children": []
    },
    {
     "id": "ID#testPrimaryShardYesDecisionOnIndexCreation(org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests)",
     "displayName": "testPrimaryShardYesDecisionOnIndexCreation(org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests)",
     "methodName": "testPrimaryShardYesDecisionOnIndexCreation",
     "className": "org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests",
     "children": []
    },
    {
     "id": "ID#testPrimaryShardThrottleDecisionOnIndexCreation(org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests)",
     "displayName": "testPrimaryShardThrottleDecisionOnIndexCreation(org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests)",
     "methodName": "testPrimaryShardThrottleDecisionOnIndexCreation",
     "className": "org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047205059
 }
]

[
 "TEST_STARTED",
 "ID#testPrimaryShardNoDecisionOnIndexCreation(org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:25,103][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:25,105][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:25,105][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do the reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:25,106][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:25,106][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> assert cluster health%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrimaryShardNoDecisionOnIndexCreation(org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests)",
  "startTimestamp": 1474047205094,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testPrimaryShardYesDecisionOnIndexCreation(org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:25,113][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:25,113][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:25,114][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do the reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:25,114][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> assert cluster health%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrimaryShardYesDecisionOnIndexCreation(org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests)",
  "startTimestamp": 1474047205107,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testPrimaryShardThrottleDecisionOnIndexCreation(org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:25,129][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:25,129][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:25,130][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do the reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:25,132][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> assert cluster health%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrimaryShardThrottleDecisionOnIndexCreation(org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests)",
  "startTimestamp": 1474047205115,
  "executionTime": 17
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests",
  "startTimestamp": 1474047205059,
  "executionTime": 77
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.shard.StoreRecoveryTests",
   "displayName": "org.elasticsearch.index.shard.StoreRecoveryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.shard.StoreRecoveryTests",
   "children": [
    {
     "id": "ID#testStatsDirWrapper(org.elasticsearch.index.shard.StoreRecoveryTests)",
     "displayName": "testStatsDirWrapper(org.elasticsearch.index.shard.StoreRecoveryTests)",
     "methodName": "testStatsDirWrapper",
     "className": "org.elasticsearch.index.shard.StoreRecoveryTests",
     "children": []
    },
    {
     "id": "ID#testAddIndices(org.elasticsearch.index.shard.StoreRecoveryTests)",
     "displayName": "testAddIndices(org.elasticsearch.index.shard.StoreRecoveryTests)",
     "methodName": "testAddIndices",
     "className": "org.elasticsearch.index.shard.StoreRecoveryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047205143
 }
]

[
 "TEST_STARTED",
 "ID#testStatsDirWrapper(org.elasticsearch.index.shard.StoreRecoveryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStatsDirWrapper(org.elasticsearch.index.shard.StoreRecoveryTests)",
  "startTimestamp": 1474047205202,
  "executionTime": 59
 }
]

[
 "TEST_STARTED",
 "ID#testAddIndices(org.elasticsearch.index.shard.StoreRecoveryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddIndices(org.elasticsearch.index.shard.StoreRecoveryTests)",
  "startTimestamp": 1474047205261,
  "executionTime": 2519
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.shard.StoreRecoveryTests",
  "startTimestamp": 1474047205143,
  "executionTime": 2986
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.IndexFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.IndexFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.IndexFieldMapperTests",
   "children": [
    {
     "id": "ID#testBwCompatIndexNotConfigurable(org.elasticsearch.index.mapper.IndexFieldMapperTests)",
     "displayName": "testBwCompatIndexNotConfigurable(org.elasticsearch.index.mapper.IndexFieldMapperTests)",
     "methodName": "testBwCompatIndexNotConfigurable",
     "className": "org.elasticsearch.index.mapper.IndexFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIndexNotConfigurable(org.elasticsearch.index.mapper.IndexFieldMapperTests)",
     "displayName": "testIndexNotConfigurable(org.elasticsearch.index.mapper.IndexFieldMapperTests)",
     "methodName": "testIndexNotConfigurable",
     "className": "org.elasticsearch.index.mapper.IndexFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaultDisabledIndexMapper(org.elasticsearch.index.mapper.IndexFieldMapperTests)",
     "displayName": "testDefaultDisabledIndexMapper(org.elasticsearch.index.mapper.IndexFieldMapperTests)",
     "methodName": "testDefaultDisabledIndexMapper",
     "className": "org.elasticsearch.index.mapper.IndexFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047208136
 }
]

[
 "TEST_STARTED",
 "ID#testBwCompatIndexNotConfigurable(org.elasticsearch.index.mapper.IndexFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:28,163][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:28,202][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:28,202][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:28,210][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:28,213][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:28,213][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:28,468][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:28,469][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:28,469][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[68]}, bound_addresses {local[68]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:28,495][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{AAcC94MTSNCsDcueGHTFig}{eki1b07zSka9hua9S0Q2uw}{local}{local[68]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:28,496][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:28,509][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:28,543][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:28,767][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:28,780][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [IndexFieldMapperTests#testBwCompatIndexNotConfigurable]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBwCompatIndexNotConfigurable(org.elasticsearch.index.mapper.IndexFieldMapperTests)",
  "startTimestamp": 1474047208153,
  "executionTime": 669
 }
]

[
 "TEST_STARTED",
 "ID#testIndexNotConfigurable(org.elasticsearch.index.mapper.IndexFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:28,839][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:29,003][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:29,019][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [IndexFieldMapperTests#testIndexNotConfigurable]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexNotConfigurable(org.elasticsearch.index.mapper.IndexFieldMapperTests)",
  "startTimestamp": 1474047208822,
  "executionTime": 240
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultDisabledIndexMapper(org.elasticsearch.index.mapper.IndexFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:29,068][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:29,179][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:29,248][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [IndexFieldMapperTests#testDefaultDisabledIndexMapper]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultDisabledIndexMapper(org.elasticsearch.index.mapper.IndexFieldMapperTests)",
  "startTimestamp": 1474047209062,
  "executionTime": 464
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:29,526][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:29,526][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:29,527][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:29,533][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.IndexFieldMapperTests",
  "startTimestamp": 1474047208136,
  "executionTime": 1411
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.termvectors.TermVectorsUnitTests",
   "displayName": "org.elasticsearch.action.termvectors.TermVectorsUnitTests",
   "methodName": null,
   "className": "org.elasticsearch.action.termvectors.TermVectorsUnitTests",
   "children": [
    {
     "id": "ID#testRestRequestParsing(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "displayName": "testRestRequestParsing(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "methodName": "testRestRequestParsing",
     "className": "org.elasticsearch.action.termvectors.TermVectorsUnitTests",
     "children": []
    },
    {
     "id": "ID#testStreamRequest(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "displayName": "testStreamRequest(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "methodName": "testStreamRequest",
     "className": "org.elasticsearch.action.termvectors.TermVectorsUnitTests",
     "children": []
    },
    {
     "id": "ID#testFieldTypeToTermVectorString(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "displayName": "testFieldTypeToTermVectorString(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "methodName": "testFieldTypeToTermVectorString",
     "className": "org.elasticsearch.action.termvectors.TermVectorsUnitTests",
     "children": []
    },
    {
     "id": "ID#testRequestParsingThrowsException(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "displayName": "testRequestParsingThrowsException(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "methodName": "testRequestParsingThrowsException",
     "className": "org.elasticsearch.action.termvectors.TermVectorsUnitTests",
     "children": []
    },
    {
     "id": "ID#testTermVectorStringGenerationWithoutPositions(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "displayName": "testTermVectorStringGenerationWithoutPositions(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "methodName": "testTermVectorStringGenerationWithoutPositions",
     "className": "org.elasticsearch.action.termvectors.TermVectorsUnitTests",
     "children": []
    },
    {
     "id": "ID#testStreamResponse(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "displayName": "testStreamResponse(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "methodName": "testStreamResponse",
     "className": "org.elasticsearch.action.termvectors.TermVectorsUnitTests",
     "children": []
    },
    {
     "id": "ID#testMultiParserFilter(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "displayName": "testMultiParserFilter(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "methodName": "testMultiParserFilter",
     "className": "org.elasticsearch.action.termvectors.TermVectorsUnitTests",
     "children": []
    },
    {
     "id": "ID#testMultiParser(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "displayName": "testMultiParser(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "methodName": "testMultiParser",
     "className": "org.elasticsearch.action.termvectors.TermVectorsUnitTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047209554
 }
]

[
 "TEST_STARTED",
 "ID#testRestRequestParsing(org.elasticsearch.action.termvectors.TermVectorsUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestRequestParsing(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
  "startTimestamp": 1474047209737,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testStreamRequest(org.elasticsearch.action.termvectors.TermVectorsUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamRequest(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
  "startTimestamp": 1474047209743,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testFieldTypeToTermVectorString(org.elasticsearch.action.termvectors.TermVectorsUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldTypeToTermVectorString(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
  "startTimestamp": 1474047209749,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRequestParsingThrowsException(org.elasticsearch.action.termvectors.TermVectorsUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRequestParsingThrowsException(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
  "startTimestamp": 1474047209751,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTermVectorStringGenerationWithoutPositions(org.elasticsearch.action.termvectors.TermVectorsUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermVectorStringGenerationWithoutPositions(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
  "startTimestamp": 1474047209753,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testStreamResponse(org.elasticsearch.action.termvectors.TermVectorsUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamResponse(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
  "startTimestamp": 1474047209754,
  "executionTime": 477
 }
]

[
 "TEST_STARTED",
 "ID#testMultiParserFilter(org.elasticsearch.action.termvectors.TermVectorsUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiParserFilter(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
  "startTimestamp": 1474047210231,
  "executionTime": 44
 }
]

[
 "TEST_STARTED",
 "ID#testMultiParser(org.elasticsearch.action.termvectors.TermVectorsUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiParser(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
  "startTimestamp": 1474047210275,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.termvectors.TermVectorsUnitTests",
  "startTimestamp": 1474047209554,
  "executionTime": 726
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.SimpleQueryParserTests",
   "displayName": "org.elasticsearch.index.query.SimpleQueryParserTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.SimpleQueryParserTests",
   "children": [
    {
     "id": "ID#testAnalyzerWildcardWithSynonyms(org.elasticsearch.index.query.SimpleQueryParserTests)",
     "displayName": "testAnalyzerWildcardWithSynonyms(org.elasticsearch.index.query.SimpleQueryParserTests)",
     "methodName": "testAnalyzerWildcardWithSynonyms",
     "className": "org.elasticsearch.index.query.SimpleQueryParserTests",
     "children": []
    },
    {
     "id": "ID#testAnalyzeWildcard(org.elasticsearch.index.query.SimpleQueryParserTests)",
     "displayName": "testAnalyzeWildcard(org.elasticsearch.index.query.SimpleQueryParserTests)",
     "methodName": "testAnalyzeWildcard",
     "className": "org.elasticsearch.index.query.SimpleQueryParserTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047210354
 }
]

[
 "TEST_STARTED",
 "ID#testAnalyzerWildcardWithSynonyms(org.elasticsearch.index.query.SimpleQueryParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAnalyzerWildcardWithSynonyms(org.elasticsearch.index.query.SimpleQueryParserTests)",
  "startTimestamp": 1474047210391,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testAnalyzeWildcard(org.elasticsearch.index.query.SimpleQueryParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAnalyzeWildcard(org.elasticsearch.index.query.SimpleQueryParserTests)",
  "startTimestamp": 1474047210405,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.SimpleQueryParserTests",
  "startTimestamp": 1474047210354,
  "executionTime": 56
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.MissingTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.MissingTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.MissingTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.MissingTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.MissingTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.MissingTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.MissingTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.MissingTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.MissingTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.MissingTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.MissingTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.MissingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047210418
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:30,452][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{exIn6LH1TfGioNqYTy4MMA}{local}{local[219]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.MissingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.MissingTests)",
  "startTimestamp": 1474047210463,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.MissingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.MissingTests)",
  "startTimestamp": 1474047210467,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.MissingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.MissingTests)",
  "startTimestamp": 1474047210469,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.MissingTests",
  "startTimestamp": 1474047210418,
  "executionTime": 60
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.cbor.CborXContentParserTests",
   "displayName": "org.elasticsearch.common.xcontent.cbor.CborXContentParserTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.cbor.CborXContentParserTests",
   "children": [
    {
     "id": "ID#testEmptyValue(org.elasticsearch.common.xcontent.cbor.CborXContentParserTests)",
     "displayName": "testEmptyValue(org.elasticsearch.common.xcontent.cbor.CborXContentParserTests)",
     "methodName": "testEmptyValue",
     "className": "org.elasticsearch.common.xcontent.cbor.CborXContentParserTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047210494
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyValue(org.elasticsearch.common.xcontent.cbor.CborXContentParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyValue(org.elasticsearch.common.xcontent.cbor.CborXContentParserTests)",
  "startTimestamp": 1474047210515,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.cbor.CborXContentParserTests",
  "startTimestamp": 1474047210494,
  "executionTime": 25
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.UidFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.UidFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.UidFieldTypeTests",
   "children": [
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.UidFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.UidFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.UidFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testRangeQuery(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "displayName": "testRangeQuery(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "methodName": "testRangeQuery",
     "className": "org.elasticsearch.index.mapper.UidFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.UidFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.UidFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047210524
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.UidFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.UidFieldTypeTests)",
  "startTimestamp": 1474047210548,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.UidFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.UidFieldTypeTests)",
  "startTimestamp": 1474047210553,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.UidFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.UidFieldTypeTests)",
  "startTimestamp": 1474047210556,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testRangeQuery(org.elasticsearch.index.mapper.UidFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRangeQuery(org.elasticsearch.index.mapper.UidFieldTypeTests)",
  "startTimestamp": 1474047210557,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.UidFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.UidFieldTypeTests)",
  "startTimestamp": 1474047210560,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.UidFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.UidFieldTypeTests)",
  "startTimestamp": 1474047210562,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.UidFieldTypeTests",
  "startTimestamp": 1474047210524,
  "executionTime": 45
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.HasParentQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryInnerQueryType(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testToQueryInnerQueryType(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testToQueryInnerQueryType",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testFromJsonEmptyQueryBody(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testFromJsonEmptyQueryBody",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalValues(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testIllegalValues(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testIllegalValues",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testIgnoreUnmapped(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testIgnoreUnmapped",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDeprecatedXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testDeprecatedXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testDeprecatedXContent",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047210576
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:33:30,614][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{ICVym-HwQKei38bxZQqNmA}{local}{local[220]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:33:30,623][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:33:30,623][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:33:30,640][WARN ][org.elasticsearch.deprecation.index.mapper]  [YIJOnr] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:33:30,640][WARN ][org.elasticsearch.deprecation.index.mapper]  [YIJOnr] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:33:30,640][WARN ][org.elasticsearch.deprecation.index.mapper]  [YIJOnr] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:33:30,642][WARN ][org.elasticsearch.deprecation.index.mapper]  [YIJOnr] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:33:30,642][WARN ][org.elasticsearch.deprecation.index.mapper]  [YIJOnr] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:33:30,642][WARN ][org.elasticsearch.deprecation.index.mapper]  [YIJOnr] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:33:30,645][WARN ][org.elasticsearch.deprecation.index.mapper]  [YIJOnr] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:33:30,645][WARN ][org.elasticsearch.deprecation.index.mapper]  [YIJOnr] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:33:30,645][WARN ][org.elasticsearch.deprecation.index.mapper]  [YIJOnr] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:33:30,647][WARN ][org.elasticsearch.deprecation.index.mapper]  [YIJOnr] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:33:30,647][WARN ][org.elasticsearch.deprecation.index.mapper]  [YIJOnr] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:33:30,647][WARN ][org.elasticsearch.deprecation.index.mapper]  [YIJOnr] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:33:30,649][WARN ][org.elasticsearch.deprecation.index.mapper]  [YIJOnr] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:33:30,650][WARN ][org.elasticsearch.deprecation.index.mapper]  [YIJOnr] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:33:30,650][WARN ][org.elasticsearch.deprecation.index.mapper]  [YIJOnr] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:33:30,653][WARN ][org.elasticsearch.deprecation.index.mapper]  [YIJOnr] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:33:30,653][WARN ][org.elasticsearch.deprecation.index.mapper]  [YIJOnr] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:33:30,653][WARN ][org.elasticsearch.deprecation.index.mapper]  [YIJOnr] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:33:30,654][WARN ][org.elasticsearch.deprecation.index.mapper]  [YIJOnr] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:33:30,654][WARN ][org.elasticsearch.deprecation.index.mapper]  [YIJOnr] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:33:30,654][WARN ][org.elasticsearch.deprecation.index.mapper]  [YIJOnr] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:33:30,657][WARN ][org.elasticsearch.deprecation.index.mapper]  [YIJOnr] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:33:30,657][WARN ][org.elasticsearch.deprecation.index.mapper]  [YIJOnr] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:33:30,657][WARN ][org.elasticsearch.deprecation.index.mapper]  [YIJOnr] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:33:30,661][WARN ][org.elasticsearch.deprecation.index.mapper]  [YIJOnr] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:33:30,661][WARN ][org.elasticsearch.deprecation.index.mapper]  [YIJOnr] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:33:30,661][WARN ][org.elasticsearch.deprecation.index.mapper]  [YIJOnr] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1474047210607,
  "executionTime": 108
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1474047210717,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryInnerQueryType(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryInnerQueryType(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1474047210731,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1474047210738,
  "executionTime": 139
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1474047210878,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1474047210883,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:33:30,890][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [3:17]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:33:30,892][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [3:17]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1474047210887,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1474047210892,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalValues(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalValues(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1474047210896,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreUnmapped(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1474047210902,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1474047210906,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1474047210909,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1474047210912,
  "executionTime": 41
 }
]

[
 "TEST_STARTED",
 "ID#testDeprecatedXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:33:30,960][WARN ][org.elasticsearch.deprecation.common] Deprecated field [type] used, expected [parent_type] instead%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeprecatedXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1474047210953,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.HasParentQueryBuilderTests",
  "startTimestamp": 1474047210576,
  "executionTime": 428
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests",
   "children": [
    {
     "id": "ID#testShardSizeAndRelocatingSize(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)",
     "displayName": "testShardSizeAndRelocatingSize(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)",
     "methodName": "testShardSizeAndRelocatingSize",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests",
     "children": []
    },
    {
     "id": "ID#testCanRemainUsesLeastAvailableSpace(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)",
     "displayName": "testCanRemainUsesLeastAvailableSpace(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)",
     "methodName": "testCanRemainUsesLeastAvailableSpace",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests",
     "children": []
    },
    {
     "id": "ID#testSizeShrinkIndex(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)",
     "displayName": "testSizeShrinkIndex(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)",
     "methodName": "testSizeShrinkIndex",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests",
     "children": []
    },
    {
     "id": "ID#testCanAllocateUsesMaxAvailableSpace(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)",
     "displayName": "testCanAllocateUsesMaxAvailableSpace(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)",
     "methodName": "testCanAllocateUsesMaxAvailableSpace",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047211016
 }
]

[
 "TEST_STARTED",
 "ID#testShardSizeAndRelocatingSize(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardSizeAndRelocatingSize(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)",
  "startTimestamp": 1474047211053,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCanRemainUsesLeastAvailableSpace(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:33:31,060][INFO ][org.elasticsearch.cluster.routing.allocation.decider] [node_s_0] --> adding two nodes%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCanRemainUsesLeastAvailableSpace(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)",
  "startTimestamp": 1474047211056,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSizeShrinkIndex(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSizeShrinkIndex(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)",
  "startTimestamp": 1474047211061,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testCanAllocateUsesMaxAvailableSpace(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCanAllocateUsesMaxAvailableSpace(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)",
  "startTimestamp": 1474047211070,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests",
  "startTimestamp": 1474047211016,
  "executionTime": 70
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.RegexpQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
   "children": [
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testParseFailsWithMultipleFields(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testParseFailsWithMultipleFields",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNumeric(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testNumeric(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testNumeric",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047211093
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:31,140][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{fh3B-_wpS2SNIWb2SShxBw}{local}{local[226]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:31,150][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:31,150][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:31,166][WARN ][org.elasticsearch.deprecation.index.mapper]  [g] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:31,166][WARN ][org.elasticsearch.deprecation.index.mapper]  [g] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:31,166][WARN ][org.elasticsearch.deprecation.index.mapper]  [g] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:31,170][WARN ][org.elasticsearch.deprecation.index.mapper]  [g] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:31,170][WARN ][org.elasticsearch.deprecation.index.mapper]  [g] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:31,170][WARN ][org.elasticsearch.deprecation.index.mapper]  [g] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:31,175][WARN ][org.elasticsearch.deprecation.index.mapper]  [g] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:31,175][WARN ][org.elasticsearch.deprecation.index.mapper]  [g] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:31,175][WARN ][org.elasticsearch.deprecation.index.mapper]  [g] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:31,178][WARN ][org.elasticsearch.deprecation.index.mapper]  [g] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:31,178][WARN ][org.elasticsearch.deprecation.index.mapper]  [g] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:31,178][WARN ][org.elasticsearch.deprecation.index.mapper]  [g] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:31,180][WARN ][org.elasticsearch.deprecation.index.mapper]  [g] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:31,181][WARN ][org.elasticsearch.deprecation.index.mapper]  [g] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:31,181][WARN ][org.elasticsearch.deprecation.index.mapper]  [g] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:31,184][WARN ][org.elasticsearch.deprecation.index.mapper]  [g] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:31,184][WARN ][org.elasticsearch.deprecation.index.mapper]  [g] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:31,185][WARN ][org.elasticsearch.deprecation.index.mapper]  [g] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:31,187][WARN ][org.elasticsearch.deprecation.index.mapper]  [g] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:31,187][WARN ][org.elasticsearch.deprecation.index.mapper]  [g] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:31,187][WARN ][org.elasticsearch.deprecation.index.mapper]  [g] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:31,189][WARN ][org.elasticsearch.deprecation.index.mapper]  [g] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:31,189][WARN ][org.elasticsearch.deprecation.index.mapper]  [g] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:31,189][WARN ][org.elasticsearch.deprecation.index.mapper]  [g] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:31,193][WARN ][org.elasticsearch.deprecation.index.mapper]  [g] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:31,194][WARN ][org.elasticsearch.deprecation.index.mapper]  [g] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:31,194][WARN ][org.elasticsearch.deprecation.index.mapper]  [g] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:31,203][WARN ][org.elasticsearch.deprecation.index.mapper]  [g] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:31,203][WARN ][org.elasticsearch.deprecation.index.mapper]  [g] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:31,203][WARN ][org.elasticsearch.deprecation.index.mapper]  [g] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:31,206][WARN ][org.elasticsearch.deprecation.index.mapper]  [g] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:31,206][WARN ][org.elasticsearch.deprecation.index.mapper]  [g] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:31,206][WARN ][org.elasticsearch.deprecation.index.mapper]  [g] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:31,211][WARN ][org.elasticsearch.deprecation.index.mapper]  [g] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:31,211][WARN ][org.elasticsearch.deprecation.index.mapper]  [g] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:33:31,211][WARN ][org.elasticsearch.deprecation.index.mapper]  [g] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1474047211134,
  "executionTime": 78
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1474047211213,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1474047211216,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1474047211219,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1474047211222,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1474047211234,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1474047211236,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1474047211259,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1474047211261,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1474047211268,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1474047211271,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNumeric(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNumeric(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1474047211273,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.RegexpQueryBuilderTests",
  "startTimestamp": 1474047211093,
  "executionTime": 189
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.builders.LineStringBuilderTests",
   "displayName": "org.elasticsearch.common.geo.builders.LineStringBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.builders.LineStringBuilderTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.common.geo.builders.LineStringBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.common.geo.builders.LineStringBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.common.geo.builders.LineStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.common.geo.builders.LineStringBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.common.geo.builders.LineStringBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.common.geo.builders.LineStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInvalidConstructorArgs(org.elasticsearch.common.geo.builders.LineStringBuilderTests)",
     "displayName": "testInvalidConstructorArgs(org.elasticsearch.common.geo.builders.LineStringBuilderTests)",
     "methodName": "testInvalidConstructorArgs",
     "className": "org.elasticsearch.common.geo.builders.LineStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.LineStringBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.common.geo.builders.LineStringBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.common.geo.builders.LineStringBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047211289
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.common.geo.builders.LineStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.common.geo.builders.LineStringBuilderTests)",
  "startTimestamp": 1474047211330,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.common.geo.builders.LineStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.common.geo.builders.LineStringBuilderTests)",
  "startTimestamp": 1474047211336,
  "executionTime": 32
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidConstructorArgs(org.elasticsearch.common.geo.builders.LineStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidConstructorArgs(org.elasticsearch.common.geo.builders.LineStringBuilderTests)",
  "startTimestamp": 1474047211368,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.LineStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.LineStringBuilderTests)",
  "startTimestamp": 1474047211372,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.builders.LineStringBuilderTests",
  "startTimestamp": 1474047211289,
  "executionTime": 90
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
   "displayName": "org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
   "children": [
    {
     "id": "ID#testIndexingWithNoContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "displayName": "testIndexingWithNoContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "methodName": "testIndexingWithNoContexts",
     "className": "org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testParsingQueryContextObject(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "displayName": "testParsingQueryContextObject(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "methodName": "testParsingQueryContextObject",
     "className": "org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testParsingQueryContextObjectArray(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "displayName": "testParsingQueryContextObjectArray(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "methodName": "testParsingQueryContextObjectArray",
     "className": "org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testIndexingWithSimpleContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "displayName": "testIndexingWithSimpleContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "methodName": "testIndexingWithSimpleContexts",
     "className": "org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testIndexingWithContextList(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "displayName": "testIndexingWithContextList(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "methodName": "testIndexingWithContextList",
     "className": "org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testIndexingWithMultipleContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "displayName": "testIndexingWithMultipleContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "methodName": "testIndexingWithMultipleContexts",
     "className": "org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testParsingQueryContextGeoPoint(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "displayName": "testParsingQueryContextGeoPoint(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "methodName": "testParsingQueryContextGeoPoint",
     "className": "org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testParsingQueryContextMixed(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "displayName": "testParsingQueryContextMixed(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "methodName": "testParsingQueryContextMixed",
     "className": "org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testParsingQueryContextBasic(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "displayName": "testParsingQueryContextBasic(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "methodName": "testParsingQueryContextBasic",
     "className": "org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047211387
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingWithNoContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:31,601][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:31,676][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:31,676][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:31,680][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:31,690][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:31,690][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:31,956][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:31,956][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:31,956][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[69]}, bound_addresses {local[69]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:32,045][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{TYTCQ1LkTRCN8AVBGhqnyw}{WXOKjusbT5C4ylVxL-HhkA}{local}{local[69]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:32,046][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:32,167][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:32,257][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:32,462][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:32,589][INFO ][org.elasticsearch.search.suggest.completion] [GeoContextMappingTests#testIndexingWithNoContexts]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingWithNoContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
  "startTimestamp": 1474047211593,
  "executionTime": 1032
 }
]

[
 "TEST_STARTED",
 "ID#testParsingQueryContextObject(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:32,752][INFO ][org.elasticsearch.search.suggest.completion] [GeoContextMappingTests#testParsingQueryContextObject]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingQueryContextObject(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
  "startTimestamp": 1474047212625,
  "executionTime": 128
 }
]

[
 "TEST_STARTED",
 "ID#testParsingQueryContextObjectArray(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:32,756][INFO ][org.elasticsearch.search.suggest.completion] [GeoContextMappingTests#testParsingQueryContextObjectArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingQueryContextObjectArray(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
  "startTimestamp": 1474047212754,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingWithSimpleContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:32,763][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:32,840][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:32,858][INFO ][org.elasticsearch.search.suggest.completion] [GeoContextMappingTests#testIndexingWithSimpleContexts]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingWithSimpleContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
  "startTimestamp": 1474047212757,
  "executionTime": 129
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingWithContextList(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:32,894][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:32,956][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:32,973][INFO ][org.elasticsearch.search.suggest.completion] [GeoContextMappingTests#testIndexingWithContextList]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingWithContextList(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
  "startTimestamp": 1474047212887,
  "executionTime": 132
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingWithMultipleContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:33,025][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:33,072][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:33,084][INFO ][org.elasticsearch.search.suggest.completion] [GeoContextMappingTests#testIndexingWithMultipleContexts]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingWithMultipleContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
  "startTimestamp": 1474047213019,
  "executionTime": 91
 }
]

[
 "TEST_STARTED",
 "ID#testParsingQueryContextGeoPoint(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:33,113][INFO ][org.elasticsearch.search.suggest.completion] [GeoContextMappingTests#testParsingQueryContextGeoPoint]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingQueryContextGeoPoint(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
  "startTimestamp": 1474047213110,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParsingQueryContextMixed(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:33,117][INFO ][org.elasticsearch.search.suggest.completion] [GeoContextMappingTests#testParsingQueryContextMixed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingQueryContextMixed(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
  "startTimestamp": 1474047213114,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParsingQueryContextBasic(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:33,120][INFO ][org.elasticsearch.search.suggest.completion] [GeoContextMappingTests#testParsingQueryContextBasic]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingQueryContextBasic(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
  "startTimestamp": 1474047213118,
  "executionTime": 3
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:33,121][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:33,122][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:33,122][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:33,126][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
  "startTimestamp": 1474047211387,
  "executionTime": 1744
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.blobstore.FsBlobStoreContainerTests",
   "displayName": "org.elasticsearch.common.blobstore.FsBlobStoreContainerTests",
   "methodName": null,
   "className": "org.elasticsearch.common.blobstore.FsBlobStoreContainerTests",
   "children": [
    {
     "id": "ID#testVerifyOverwriteFails(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
     "displayName": "testVerifyOverwriteFails(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
     "methodName": "testVerifyOverwriteFails",
     "className": "org.elasticsearch.common.blobstore.FsBlobStoreContainerTests",
     "children": []
    },
    {
     "id": "ID#testMoveAndList(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
     "displayName": "testMoveAndList(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
     "methodName": "testMoveAndList",
     "className": "org.elasticsearch.common.blobstore.FsBlobStoreContainerTests",
     "children": []
    },
    {
     "id": "ID#testWriteRead(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
     "displayName": "testWriteRead(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
     "methodName": "testWriteRead",
     "className": "org.elasticsearch.common.blobstore.FsBlobStoreContainerTests",
     "children": []
    },
    {
     "id": "ID#testDeleteBlob(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
     "displayName": "testDeleteBlob(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
     "methodName": "testDeleteBlob",
     "className": "org.elasticsearch.common.blobstore.FsBlobStoreContainerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047213143
 }
]

[
 "TEST_STARTED",
 "ID#testVerifyOverwriteFails(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVerifyOverwriteFails(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
  "startTimestamp": 1474047213189,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testMoveAndList(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMoveAndList(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
  "startTimestamp": 1474047213207,
  "executionTime": 148
 }
]

[
 "TEST_STARTED",
 "ID#testWriteRead(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteRead(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
  "startTimestamp": 1474047213355,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testDeleteBlob(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeleteBlob(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
  "startTimestamp": 1474047213373,
  "executionTime": 11
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.blobstore.FsBlobStoreContainerTests",
  "startTimestamp": 1474047213143,
  "executionTime": 254
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.bulk.BulkItemResponseTests",
   "displayName": "org.elasticsearch.action.bulk.BulkItemResponseTests",
   "methodName": null,
   "className": "org.elasticsearch.action.bulk.BulkItemResponseTests",
   "children": [
    {
     "id": "ID#testFailureToString(org.elasticsearch.action.bulk.BulkItemResponseTests)",
     "displayName": "testFailureToString(org.elasticsearch.action.bulk.BulkItemResponseTests)",
     "methodName": "testFailureToString",
     "className": "org.elasticsearch.action.bulk.BulkItemResponseTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047213403
 }
]

[
 "TEST_STARTED",
 "ID#testFailureToString(org.elasticsearch.action.bulk.BulkItemResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailureToString(org.elasticsearch.action.bulk.BulkItemResponseTests)",
  "startTimestamp": 1474047213429,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.bulk.BulkItemResponseTests",
  "startTimestamp": 1474047213403,
  "executionTime": 32
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.env.EnvironmentTests",
   "displayName": "org.elasticsearch.env.EnvironmentTests",
   "methodName": null,
   "className": "org.elasticsearch.env.EnvironmentTests",
   "children": [
    {
     "id": "ID#testRepositoryResolution(org.elasticsearch.env.EnvironmentTests)",
     "displayName": "testRepositoryResolution(org.elasticsearch.env.EnvironmentTests)",
     "methodName": "testRepositoryResolution",
     "className": "org.elasticsearch.env.EnvironmentTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047213441
 }
]

[
 "TEST_STARTED",
 "ID#testRepositoryResolution(org.elasticsearch.env.EnvironmentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRepositoryResolution(org.elasticsearch.env.EnvironmentTests)",
  "startTimestamp": 1474047213459,
  "executionTime": 15
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.env.EnvironmentTests",
  "startTimestamp": 1474047213441,
  "executionTime": 38
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.discovery.ZenFaultDetectionTests",
   "displayName": "org.elasticsearch.discovery.ZenFaultDetectionTests",
   "methodName": null,
   "className": "org.elasticsearch.discovery.ZenFaultDetectionTests",
   "children": [
    {
     "id": "ID#testMasterFaultDetectionConnectOnDisconnect(org.elasticsearch.discovery.ZenFaultDetectionTests)",
     "displayName": "testMasterFaultDetectionConnectOnDisconnect(org.elasticsearch.discovery.ZenFaultDetectionTests)",
     "methodName": "testMasterFaultDetectionConnectOnDisconnect",
     "className": "org.elasticsearch.discovery.ZenFaultDetectionTests",
     "children": []
    },
    {
     "id": "ID#testNodesFaultDetectionConnectOnDisconnect(org.elasticsearch.discovery.ZenFaultDetectionTests)",
     "displayName": "testNodesFaultDetectionConnectOnDisconnect(org.elasticsearch.discovery.ZenFaultDetectionTests)",
     "methodName": "testNodesFaultDetectionConnectOnDisconnect",
     "className": "org.elasticsearch.discovery.ZenFaultDetectionTests",
     "children": []
    },
    {
     "id": "ID#testMasterFaultDetectionNotSizeLimited(org.elasticsearch.discovery.ZenFaultDetectionTests)",
     "displayName": "testMasterFaultDetectionNotSizeLimited(org.elasticsearch.discovery.ZenFaultDetectionTests)",
     "methodName": "testMasterFaultDetectionNotSizeLimited",
     "className": "org.elasticsearch.discovery.ZenFaultDetectionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047213487
 }
]

[
 "TEST_STARTED",
 "ID#testMasterFaultDetectionConnectOnDisconnect(org.elasticsearch.discovery.ZenFaultDetectionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:33,511][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{8c3u7wSqRume7Wp1ejQOqQ}{local}{local[227]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:33,528][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Xit2Ra3bQTyfdzAX2O0oag}{local}{local[228]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:33,531][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[70]}, bound_addresses {local[70]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:33,532][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[71]}, bound_addresses {local[71]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:33,536][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {TS_B}{TS_B}{6aV1b6lnQOaLUjpFNEm8qA}{local}{local[71]}, previous {node}{8c3u7wSqRume7Wp1ejQOqQ}{local}{local[227]}}, removed {{node}{8c3u7wSqRume7Wp1ejQOqQ}{local}{local[227]},}, added {{TS_B}{TS_B}{6aV1b6lnQOaLUjpFNEm8qA}{local}{local[71]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMasterFaultDetectionConnectOnDisconnect(org.elasticsearch.discovery.ZenFaultDetectionTests)",
  "startTimestamp": 1474047213503,
  "executionTime": 87
 }
]

[
 "TEST_STARTED",
 "ID#testNodesFaultDetectionConnectOnDisconnect(org.elasticsearch.discovery.ZenFaultDetectionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:33,601][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{EnZMox0BRkSQIM5rWADaUw}{local}{local[229]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:33,603][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{zRSaGYfJQrq8fSGFgb0sgQ}{local}{local[230]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:33,605][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[72]}, bound_addresses {local[72]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:33,606][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[73]}, bound_addresses {local[73]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:33,651][WARN ][org.elasticsearch.test.transport] [TS_B] Transport response handler not found of id [0]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNodesFaultDetectionConnectOnDisconnect(org.elasticsearch.discovery.ZenFaultDetectionTests)",
  "startTimestamp": 1474047213590,
  "executionTime": 67
 }
]

[
 "TEST_STARTED",
 "ID#testMasterFaultDetectionNotSizeLimited(org.elasticsearch.discovery.ZenFaultDetectionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:33,662][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{hWoSWcl2Q1eGuvDR5UmuUA}{local}{local[231]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:33,665][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{nC9O3sciSWyHWiMOVtT-OA}{local}{local[232]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:33,667][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[74]}, bound_addresses {local[74]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:33,668][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[75]}, bound_addresses {local[75]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:33,669][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {TS_B}{TS_B}{WTwbaxtIQxmMsOkm4r4ntA}{local}{local[75]}, previous {node}{hWoSWcl2Q1eGuvDR5UmuUA}{local}{local[231]}}, removed {{node}{hWoSWcl2Q1eGuvDR5UmuUA}{local}{local[231]},}, added {{TS_B}{TS_B}{WTwbaxtIQxmMsOkm4r4ntA}{local}{local[75]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:33,670][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {TS_B}{TS_B}{WTwbaxtIQxmMsOkm4r4ntA}{local}{local[75]}, previous {node}{nC9O3sciSWyHWiMOVtT-OA}{local}{local[232]}}, removed {{node}{nC9O3sciSWyHWiMOVtT-OA}{local}{local[232]},}, added {{TS_A}{TS_A}{8Qesp3FRR_GrkFieRNaOMw}{local}{local[74]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMasterFaultDetectionNotSizeLimited(org.elasticsearch.discovery.ZenFaultDetectionTests)",
  "startTimestamp": 1474047213657,
  "executionTime": 2303
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.discovery.ZenFaultDetectionTests",
  "startTimestamp": 1474047213487,
  "executionTime": 2475
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.CharMatcherTests",
   "displayName": "org.elasticsearch.index.analysis.CharMatcherTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.CharMatcherTests",
   "children": [
    {
     "id": "ID#testNumber(org.elasticsearch.index.analysis.CharMatcherTests)",
     "displayName": "testNumber(org.elasticsearch.index.analysis.CharMatcherTests)",
     "methodName": "testNumber",
     "className": "org.elasticsearch.index.analysis.CharMatcherTests",
     "children": []
    },
    {
     "id": "ID#testLetter(org.elasticsearch.index.analysis.CharMatcherTests)",
     "displayName": "testLetter(org.elasticsearch.index.analysis.CharMatcherTests)",
     "methodName": "testLetter",
     "className": "org.elasticsearch.index.analysis.CharMatcherTests",
     "children": []
    },
    {
     "id": "ID#testSymbol(org.elasticsearch.index.analysis.CharMatcherTests)",
     "displayName": "testSymbol(org.elasticsearch.index.analysis.CharMatcherTests)",
     "methodName": "testSymbol",
     "className": "org.elasticsearch.index.analysis.CharMatcherTests",
     "children": []
    },
    {
     "id": "ID#testSpace(org.elasticsearch.index.analysis.CharMatcherTests)",
     "displayName": "testSpace(org.elasticsearch.index.analysis.CharMatcherTests)",
     "methodName": "testSpace",
     "className": "org.elasticsearch.index.analysis.CharMatcherTests",
     "children": []
    },
    {
     "id": "ID#testPunctuation(org.elasticsearch.index.analysis.CharMatcherTests)",
     "displayName": "testPunctuation(org.elasticsearch.index.analysis.CharMatcherTests)",
     "methodName": "testPunctuation",
     "className": "org.elasticsearch.index.analysis.CharMatcherTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047215967
 }
]

[
 "TEST_STARTED",
 "ID#testNumber(org.elasticsearch.index.analysis.CharMatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNumber(org.elasticsearch.index.analysis.CharMatcherTests)",
  "startTimestamp": 1474047215991,
  "executionTime": 49
 }
]

[
 "TEST_STARTED",
 "ID#testLetter(org.elasticsearch.index.analysis.CharMatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLetter(org.elasticsearch.index.analysis.CharMatcherTests)",
  "startTimestamp": 1474047216040,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSymbol(org.elasticsearch.index.analysis.CharMatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSymbol(org.elasticsearch.index.analysis.CharMatcherTests)",
  "startTimestamp": 1474047216042,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSpace(org.elasticsearch.index.analysis.CharMatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSpace(org.elasticsearch.index.analysis.CharMatcherTests)",
  "startTimestamp": 1474047216044,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testPunctuation(org.elasticsearch.index.analysis.CharMatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPunctuation(org.elasticsearch.index.analysis.CharMatcherTests)",
  "startTimestamp": 1474047216046,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.CharMatcherTests",
  "startTimestamp": 1474047215967,
  "executionTime": 157
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.builder.SearchSourceBuilderTests",
   "displayName": "org.elasticsearch.search.builder.SearchSourceBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.builder.SearchSourceBuilderTests",
   "children": [
    {
     "id": "ID#testSearchRequestBuilderSerializationWithIndexBoost(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "displayName": "testSearchRequestBuilderSerializationWithIndexBoost(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "methodName": "testSearchRequestBuilderSerializationWithIndexBoost",
     "className": "org.elasticsearch.search.builder.SearchSourceBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseIncludeExclude(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "displayName": "testParseIncludeExclude(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "methodName": "testParseIncludeExclude",
     "className": "org.elasticsearch.search.builder.SearchSourceBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEmptyQuery(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "displayName": "testEmptyQuery(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "methodName": "testEmptyQuery",
     "className": "org.elasticsearch.search.builder.SearchSourceBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.builder.SearchSourceBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseSort(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "displayName": "testParseSort(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "methodName": "testParseSort",
     "className": "org.elasticsearch.search.builder.SearchSourceBuilderTests",
     "children": []
    },
    {
     "id": "ID#testAggsParsing(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "displayName": "testAggsParsing(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "methodName": "testAggsParsing",
     "className": "org.elasticsearch.search.builder.SearchSourceBuilderTests",
     "children": []
    },
    {
     "id": "ID#testTimeoutWithUnits(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "displayName": "testTimeoutWithUnits(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "methodName": "testTimeoutWithUnits",
     "className": "org.elasticsearch.search.builder.SearchSourceBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.builder.SearchSourceBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEmptyPostFilter(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "displayName": "testEmptyPostFilter(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "methodName": "testEmptyPostFilter",
     "className": "org.elasticsearch.search.builder.SearchSourceBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseRescore(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "displayName": "testParseRescore(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "methodName": "testParseRescore",
     "className": "org.elasticsearch.search.builder.SearchSourceBuilderTests",
     "children": []
    },
    {
     "id": "ID#testTimeoutWithoutUnits(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "displayName": "testTimeoutWithoutUnits(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "methodName": "testTimeoutWithoutUnits",
     "className": "org.elasticsearch.search.builder.SearchSourceBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.builder.SearchSourceBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047216203
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:36,273][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{S4RuoohRTV2LAB0wG3s5Cg}{local}{local[233]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testSearchRequestBuilderSerializationWithIndexBoost(org.elasticsearch.search.builder.SearchSourceBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearchRequestBuilderSerializationWithIndexBoost(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
  "startTimestamp": 1474047216286,
  "executionTime": 53
 }
]

[
 "TEST_STARTED",
 "ID#testParseIncludeExclude(org.elasticsearch.search.builder.SearchSourceBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseIncludeExclude(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
  "startTimestamp": 1474047216339,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyQuery(org.elasticsearch.search.builder.SearchSourceBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:36,345][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:13]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyQuery(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
  "startTimestamp": 1474047216343,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.builder.SearchSourceBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
  "startTimestamp": 1474047216345,
  "executionTime": 112
 }
]

[
 "TEST_STARTED",
 "ID#testParseSort(org.elasticsearch.search.builder.SearchSourceBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseSort(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
  "startTimestamp": 1474047216457,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAggsParsing(org.elasticsearch.search.builder.SearchSourceBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAggsParsing(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
  "startTimestamp": 1474047216460,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTimeoutWithUnits(org.elasticsearch.search.builder.SearchSourceBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeoutWithUnits(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
  "startTimestamp": 1474047216462,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.builder.SearchSourceBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
  "startTimestamp": 1474047216466,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyPostFilter(org.elasticsearch.search.builder.SearchSourceBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:33:36,477][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:19]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyPostFilter(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
  "startTimestamp": 1474047216475,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseRescore(org.elasticsearch.search.builder.SearchSourceBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseRescore(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
  "startTimestamp": 1474047216477,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testTimeoutWithoutUnits(org.elasticsearch.search.builder.SearchSourceBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeoutWithoutUnits(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
  "startTimestamp": 1474047216499,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.builder.SearchSourceBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
  "startTimestamp": 1474047216502,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.builder.SearchSourceBuilderTests",
  "startTimestamp": 1474047216203,
  "executionTime": 308
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.ShardVersioningTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.ShardVersioningTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.ShardVersioningTests",
   "children": [
    {
     "id": "ID#testSimple(org.elasticsearch.cluster.routing.allocation.ShardVersioningTests)",
     "displayName": "testSimple(org.elasticsearch.cluster.routing.allocation.ShardVersioningTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.cluster.routing.allocation.ShardVersioningTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047216517
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.cluster.routing.allocation.ShardVersioningTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:36,564][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start two nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:36,571][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards for test1, replicas will start initializing%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.cluster.routing.allocation.ShardVersioningTests)",
  "startTimestamp": 1474047216555,
  "executionTime": 18
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.ShardVersioningTests",
  "startTimestamp": 1474047216517,
  "executionTime": 58
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests",
   "displayName": "org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests",
   "children": [
    {
     "id": "ID#testSvValues(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)",
     "displayName": "testSvValues(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)",
     "methodName": "testSvValues",
     "className": "org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests",
     "children": []
    },
    {
     "id": "ID#testMvOrdinalsTrigger(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)",
     "displayName": "testMvOrdinalsTrigger(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)",
     "methodName": "testMvOrdinalsTrigger",
     "className": "org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047216581
 }
]

[
 "TEST_STARTED",
 "ID#testSvValues(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSvValues(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)",
  "startTimestamp": 1474047216605,
  "executionTime": 320
 }
]

[
 "TEST_STARTED",
 "ID#testMvOrdinalsTrigger(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMvOrdinalsTrigger(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)",
  "startTimestamp": 1474047216925,
  "executionTime": 256
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests",
  "startTimestamp": 1474047216581,
  "executionTime": 603
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.LongHashTests",
   "displayName": "org.elasticsearch.common.util.LongHashTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.LongHashTests",
   "children": [
    {
     "id": "ID#testDuell(org.elasticsearch.common.util.LongHashTests)",
     "displayName": "testDuell(org.elasticsearch.common.util.LongHashTests)",
     "methodName": "testDuell",
     "className": "org.elasticsearch.common.util.LongHashTests",
     "children": []
    },
    {
     "id": "ID#testAdd(org.elasticsearch.common.util.LongHashTests)",
     "displayName": "testAdd(org.elasticsearch.common.util.LongHashTests)",
     "methodName": "testAdd",
     "className": "org.elasticsearch.common.util.LongHashTests",
     "children": []
    },
    {
     "id": "ID#testSize(org.elasticsearch.common.util.LongHashTests)",
     "displayName": "testSize(org.elasticsearch.common.util.LongHashTests)",
     "methodName": "testSize",
     "className": "org.elasticsearch.common.util.LongHashTests",
     "children": []
    },
    {
     "id": "ID#testKey(org.elasticsearch.common.util.LongHashTests)",
     "displayName": "testKey(org.elasticsearch.common.util.LongHashTests)",
     "methodName": "testKey",
     "className": "org.elasticsearch.common.util.LongHashTests",
     "children": []
    },
    {
     "id": "ID#testFind(org.elasticsearch.common.util.LongHashTests)",
     "displayName": "testFind(org.elasticsearch.common.util.LongHashTests)",
     "methodName": "testFind",
     "className": "org.elasticsearch.common.util.LongHashTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047217227
 }
]

[
 "TEST_STARTED",
 "ID#testDuell(org.elasticsearch.common.util.LongHashTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:37,262][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:37,288][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:37,289][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:37,292][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:37,294][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:37,294][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:37,417][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:37,417][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:37,417][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[76]}, bound_addresses {local[76]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:37,428][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{VAfEsvlMTNGNko2tu_OSvA}{jsJCW5IYRzyJz2DQkcpuJg}{local}{local[76]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:37,429][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:37,455][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:38,222][INFO ][org.elasticsearch.common.util] [node_s_0] [LongHashTests#testDuell]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuell(org.elasticsearch.common.util.LongHashTests)",
  "startTimestamp": 1474047217253,
  "executionTime": 970
 }
]

[
 "TEST_STARTED",
 "ID#testAdd(org.elasticsearch.common.util.LongHashTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:38,246][INFO ][org.elasticsearch.common.util] [node_s_0] [LongHashTests#testAdd]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAdd(org.elasticsearch.common.util.LongHashTests)",
  "startTimestamp": 1474047218223,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testSize(org.elasticsearch.common.util.LongHashTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:38,560][INFO ][org.elasticsearch.common.util] [node_s_0] [LongHashTests#testSize]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSize(org.elasticsearch.common.util.LongHashTests)",
  "startTimestamp": 1474047218247,
  "executionTime": 314
 }
]

[
 "TEST_STARTED",
 "ID#testKey(org.elasticsearch.common.util.LongHashTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:38,577][INFO ][org.elasticsearch.common.util] [node_s_0] [LongHashTests#testKey]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testKey(org.elasticsearch.common.util.LongHashTests)",
  "startTimestamp": 1474047218561,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testFind(org.elasticsearch.common.util.LongHashTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:38,645][INFO ][org.elasticsearch.common.util] [node_s_0] [LongHashTests#testFind]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFind(org.elasticsearch.common.util.LongHashTests)",
  "startTimestamp": 1474047218578,
  "executionTime": 68
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:38,646][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:38,647][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:38,647][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:38,649][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.LongHashTests",
  "startTimestamp": 1474047217227,
  "executionTime": 1427
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.ingest.ConfigurationUtilsTests",
   "displayName": "org.elasticsearch.ingest.ConfigurationUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.ingest.ConfigurationUtilsTests",
   "children": [
    {
     "id": "ID#testReadStringPropertyInvalidType(org.elasticsearch.ingest.ConfigurationUtilsTests)",
     "displayName": "testReadStringPropertyInvalidType(org.elasticsearch.ingest.ConfigurationUtilsTests)",
     "methodName": "testReadStringPropertyInvalidType",
     "className": "org.elasticsearch.ingest.ConfigurationUtilsTests",
     "children": []
    },
    {
     "id": "ID#testReadProcessors(org.elasticsearch.ingest.ConfigurationUtilsTests)",
     "displayName": "testReadProcessors(org.elasticsearch.ingest.ConfigurationUtilsTests)",
     "methodName": "testReadProcessors",
     "className": "org.elasticsearch.ingest.ConfigurationUtilsTests",
     "children": []
    },
    {
     "id": "ID#testReadStringProperty(org.elasticsearch.ingest.ConfigurationUtilsTests)",
     "displayName": "testReadStringProperty(org.elasticsearch.ingest.ConfigurationUtilsTests)",
     "methodName": "testReadStringProperty",
     "className": "org.elasticsearch.ingest.ConfigurationUtilsTests",
     "children": []
    },
    {
     "id": "ID#testOptional_InvalidType(org.elasticsearch.ingest.ConfigurationUtilsTests)",
     "displayName": "testOptional_InvalidType(org.elasticsearch.ingest.ConfigurationUtilsTests)",
     "methodName": "testOptional_InvalidType",
     "className": "org.elasticsearch.ingest.ConfigurationUtilsTests",
     "children": []
    },
    {
     "id": "ID#testReadBooleanProperty(org.elasticsearch.ingest.ConfigurationUtilsTests)",
     "displayName": "testReadBooleanProperty(org.elasticsearch.ingest.ConfigurationUtilsTests)",
     "methodName": "testReadBooleanProperty",
     "className": "org.elasticsearch.ingest.ConfigurationUtilsTests",
     "children": []
    },
    {
     "id": "ID#testReadNullBooleanProperty(org.elasticsearch.ingest.ConfigurationUtilsTests)",
     "displayName": "testReadNullBooleanProperty(org.elasticsearch.ingest.ConfigurationUtilsTests)",
     "methodName": "testReadNullBooleanProperty",
     "className": "org.elasticsearch.ingest.ConfigurationUtilsTests",
     "children": []
    },
    {
     "id": "ID#testReadBooleanPropertyInvalidType(org.elasticsearch.ingest.ConfigurationUtilsTests)",
     "displayName": "testReadBooleanPropertyInvalidType(org.elasticsearch.ingest.ConfigurationUtilsTests)",
     "methodName": "testReadBooleanPropertyInvalidType",
     "className": "org.elasticsearch.ingest.ConfigurationUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047218661
 }
]

[
 "TEST_STARTED",
 "ID#testReadStringPropertyInvalidType(org.elasticsearch.ingest.ConfigurationUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadStringPropertyInvalidType(org.elasticsearch.ingest.ConfigurationUtilsTests)",
  "startTimestamp": 1474047218717,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReadProcessors(org.elasticsearch.ingest.ConfigurationUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadProcessors(org.elasticsearch.ingest.ConfigurationUtilsTests)",
  "startTimestamp": 1474047218719,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testReadStringProperty(org.elasticsearch.ingest.ConfigurationUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadStringProperty(org.elasticsearch.ingest.ConfigurationUtilsTests)",
  "startTimestamp": 1474047218728,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testOptional_InvalidType(org.elasticsearch.ingest.ConfigurationUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOptional_InvalidType(org.elasticsearch.ingest.ConfigurationUtilsTests)",
  "startTimestamp": 1474047218729,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReadBooleanProperty(org.elasticsearch.ingest.ConfigurationUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadBooleanProperty(org.elasticsearch.ingest.ConfigurationUtilsTests)",
  "startTimestamp": 1474047218731,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReadNullBooleanProperty(org.elasticsearch.ingest.ConfigurationUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadNullBooleanProperty(org.elasticsearch.ingest.ConfigurationUtilsTests)",
  "startTimestamp": 1474047218733,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReadBooleanPropertyInvalidType(org.elasticsearch.ingest.ConfigurationUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadBooleanPropertyInvalidType(org.elasticsearch.ingest.ConfigurationUtilsTests)",
  "startTimestamp": 1474047218735,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.ingest.ConfigurationUtilsTests",
  "startTimestamp": 1474047218661,
  "executionTime": 81
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests",
   "displayName": "org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests",
   "children": [
    {
     "id": "ID#testIllegalXContent(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
     "displayName": "testIllegalXContent(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
     "methodName": "testIllegalXContent",
     "className": "org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
     "displayName": "testSerialization(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047218777
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalXContent(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalXContent(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
  "startTimestamp": 1474047218886,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
  "startTimestamp": 1474047218889,
  "executionTime": 290
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
  "startTimestamp": 1474047219179,
  "executionTime": 100
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
  "startTimestamp": 1474047219279,
  "executionTime": 45
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests",
  "startTimestamp": 1474047218777,
  "executionTime": 550
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.StringMappingUpgradeTests",
   "displayName": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
   "children": [
    {
     "id": "ID#testUpgradeTemplateWithDynamicType(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeTemplateWithDynamicType(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeTemplateWithDynamicType",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeFielddataSettings(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeFielddataSettings(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeFielddataSettings",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeIgnoreAbove(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeIgnoreAbove(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeIgnoreAbove",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeTemplateWithDynamicTypeKeyword2(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeTemplateWithDynamicTypeKeyword2(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeTemplateWithDynamicTypeKeyword2",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeTemplateWithDynamicType2(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeTemplateWithDynamicType2(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeTemplateWithDynamicType2",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeAnalyzer(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeAnalyzer(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeAnalyzer",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeRandomMapping(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeRandomMapping(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeRandomMapping",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradePositionGap(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradePositionGap(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradePositionGap",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeAnalyzedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeAnalyzedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeAnalyzedString",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeIndexOptions(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeIndexOptions(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeIndexOptions",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeKeywordIncludeInAll(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeKeywordIncludeInAll(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeKeywordIncludeInAll",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testIllegalIndexValue(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testIllegalIndexValue(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testIllegalIndexValue",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeNotIndexedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeNotIndexedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeNotIndexedString",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeTemplateWithDynamicTypeKeyword(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeTemplateWithDynamicTypeKeyword(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeTemplateWithDynamicTypeKeyword",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testNotSupportedUpgrade(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testNotSupportedUpgrade(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testNotSupportedUpgrade",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeNotAnalyzedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeNotAnalyzedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeNotAnalyzedString",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeTextIncludeInAll(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeTextIncludeInAll(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeTextIncludeInAll",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeDefaults(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeDefaults(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeDefaults",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047219336
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeTemplateWithDynamicType(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:39,417][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:39,442][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:39,442][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:39,445][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:39,449][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:39,449][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:39,579][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:39,579][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:39,580][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[77]}, bound_addresses {local[77]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:39,585][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{ZjymKcrQSb6j27ZVhL4yXQ}{6Kf9uT2JREO2mkAEW9xVhg}{local}{local[77]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:39,585][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:39,601][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:39,619][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:39,693][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:39,706][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeTemplateWithDynamicType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeTemplateWithDynamicType(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474047219408,
  "executionTime": 335
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeFielddataSettings(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:39,750][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:39,801][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:39,814][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:39,814][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeFielddataSettings]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeFielddataSettings(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474047219744,
  "executionTime": 126
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeIgnoreAbove(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:39,877][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:39,931][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:39,946][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:39,946][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeIgnoreAbove]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeIgnoreAbove(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474047219870,
  "executionTime": 105
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeTemplateWithDynamicTypeKeyword2(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:39,982][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:40,041][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:40,055][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] Expected a boolean for property [index] but got [not_analyzed]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:40,055][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeTemplateWithDynamicTypeKeyword2]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeTemplateWithDynamicTypeKeyword2(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474047219975,
  "executionTime": 109
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeTemplateWithDynamicType2(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:40,091][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:40,154][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:40,168][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeTemplateWithDynamicType2]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeTemplateWithDynamicType2(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474047220085,
  "executionTime": 109
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeAnalyzer(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:40,200][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:40,246][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:40,260][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:40,262][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeAnalyzer]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeAnalyzer(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474047220194,
  "executionTime": 100
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeRandomMapping(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:40,300][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test0] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:40,381][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test0][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:40,394][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test0] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:40,394][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test0] Expected a boolean for property [store] but got [yes]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:40,398][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:40,454][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:40,481][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test1] [omit_norms] is deprecated, please use [norms] instead with the opposite boolean value%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:40,486][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:40,651][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:40,674][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test2] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:40,678][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test3] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:40,785][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test3][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:40,804][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test3] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:40,807][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test4] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:40,925][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test4][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:40,947][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test5] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:40,994][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test5][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:41,010][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test5] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:41,015][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test6] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:41,112][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test6][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:41,129][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test6] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:41,133][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test7] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:41,188][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test7][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:41,209][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test8] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:41,266][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test8][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:41,283][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test8] [omit_norms] is deprecated, please use [norms] instead with the opposite boolean value%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:41,288][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test9] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:41,348][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test9][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:41,360][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test9] Expected a boolean for property [store] but got [no]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:41,364][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test10] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:41,419][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test10][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:41,436][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test11] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:41,484][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test11][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:41,500][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test11] [omit_norms] is deprecated, please use [norms] instead with the opposite boolean value%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:41,506][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test12] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:41,559][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test12][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:41,579][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test13] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:41,625][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test13][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:41,640][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test13] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:41,645][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test14] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:41,707][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test14][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:41,724][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test15] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:41,770][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test15][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:41,793][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test15] Expected a boolean for property [store] but got [no]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:41,793][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test15] [omit_norms] is deprecated, please use [norms] instead with the opposite boolean value%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:41,807][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test16] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:41,902][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test16][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:41,948][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test17] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:42,035][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test17][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:42,061][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test17] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:42,065][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test18] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:42,144][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test18][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:42,161][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test18] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:42,165][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test19] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:42,231][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test19][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:42,254][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test19] [StringMappingUpgradeTests#testUpgradeRandomMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeRandomMapping(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474047220294,
  "executionTime": 2468
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradePositionGap(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:42,770][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:42,815][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:42,827][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:42,828][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradePositionGap]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradePositionGap(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474047222762,
  "executionTime": 95
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeAnalyzedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:42,863][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:42,935][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:42,946][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:42,947][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeAnalyzedString]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeAnalyzedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474047222857,
  "executionTime": 118
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeIndexOptions(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:42,981][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:43,028][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:43,041][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:43,043][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeIndexOptions]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeIndexOptions(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474047222975,
  "executionTime": 93
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeKeywordIncludeInAll(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:43,075][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:43,116][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:43,129][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:43,130][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeKeywordIncludeInAll]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeKeywordIncludeInAll(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474047223069,
  "executionTime": 86
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalIndexValue(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:43,161][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:43,206][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:43,216][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testIllegalIndexValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalIndexValue(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474047223155,
  "executionTime": 85
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeNotIndexedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:43,246][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:43,289][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:43,302][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:43,303][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeNotIndexedString]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeNotIndexedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474047223240,
  "executionTime": 90
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeTemplateWithDynamicTypeKeyword(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:43,337][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:43,404][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:43,419][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] Expected a boolean for property [index] but got [not_analyzed]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:43,419][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeTemplateWithDynamicTypeKeyword]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeTemplateWithDynamicTypeKeyword(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474047223330,
  "executionTime": 125
 }
]

[
 "TEST_STARTED",
 "ID#testNotSupportedUpgrade(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:43,463][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:43,509][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:43,525][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testNotSupportedUpgrade]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotSupportedUpgrade(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474047223455,
  "executionTime": 107
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeNotAnalyzedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:43,569][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:43,625][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:43,637][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:43,638][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeNotAnalyzedString]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeNotAnalyzedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474047223562,
  "executionTime": 105
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeTextIncludeInAll(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:43,673][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:43,729][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:43,746][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:43,747][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeTextIncludeInAll]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeTextIncludeInAll(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474047223667,
  "executionTime": 113
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeDefaults(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:43,787][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:43,841][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:43,853][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:43,853][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeDefaults]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeDefaults(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474047223780,
  "executionTime": 103
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:43,884][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:43,884][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:43,885][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T22:33:43,886][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.StringMappingUpgradeTests",
  "startTimestamp": 1474047219336,
  "executionTime": 4562
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
   "children": [
    {
     "id": "ID#testMoveShardOnceNewNodeWithAttributeAdded2(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "displayName": "testMoveShardOnceNewNodeWithAttributeAdded2(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "methodName": "testMoveShardOnceNewNodeWithAttributeAdded2",
     "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
     "children": []
    },
    {
     "id": "ID#testUnbalancedZones(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "displayName": "testUnbalancedZones(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "methodName": "testUnbalancedZones",
     "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
     "children": []
    },
    {
     "id": "ID#testUnassignedShardsWithUnbalancedZones(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "displayName": "testUnassignedShardsWithUnbalancedZones(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "methodName": "testUnassignedShardsWithUnbalancedZones",
     "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
     "children": []
    },
    {
     "id": "ID#testMoveShardOnceNewNodeWithAttributeAdded3(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "displayName": "testMoveShardOnceNewNodeWithAttributeAdded3(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "methodName": "testMoveShardOnceNewNodeWithAttributeAdded3",
     "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
     "children": []
    },
    {
     "id": "ID#testMoveShardOnceNewNodeWithAttributeAdded4(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "displayName": "testMoveShardOnceNewNodeWithAttributeAdded4(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "methodName": "testMoveShardOnceNewNodeWithAttributeAdded4",
     "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
     "children": []
    },
    {
     "id": "ID#testMoveShardOnceNewNodeWithAttributeAdded1(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "displayName": "testMoveShardOnceNewNodeWithAttributeAdded1(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "methodName": "testMoveShardOnceNewNodeWithAttributeAdded1",
     "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
     "children": []
    },
    {
     "id": "ID#testMoveShardOnceNewNodeWithAttributeAdded6(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "displayName": "testMoveShardOnceNewNodeWithAttributeAdded6(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "methodName": "testMoveShardOnceNewNodeWithAttributeAdded6",
     "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
     "children": []
    },
    {
     "id": "ID#testFullAwareness2(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "displayName": "testFullAwareness2(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "methodName": "testFullAwareness2",
     "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
     "children": []
    },
    {
     "id": "ID#testFullAwareness3(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "displayName": "testFullAwareness3(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "methodName": "testFullAwareness3",
     "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
     "children": []
    },
    {
     "id": "ID#testMoveShardOnceNewNodeWithAttributeAdded5(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "displayName": "testMoveShardOnceNewNodeWithAttributeAdded5(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "methodName": "testMoveShardOnceNewNodeWithAttributeAdded5",
     "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
     "children": []
    },
    {
     "id": "ID#testFullAwareness1(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "displayName": "testFullAwareness1(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "methodName": "testFullAwareness1",
     "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047223909
 }
]

[
 "TEST_STARTED",
 "ID#testMoveShardOnceNewNodeWithAttributeAdded2(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:43,987][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table for 'moveShardOnceNewNodeWithAttributeAdded2'%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:43,989][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes on same rack and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,006][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,008][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (replicas)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,010][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,010][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add a new node with a new rack and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,011][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,012][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,012][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add another node with a new rack, make sure nothing moves%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMoveShardOnceNewNodeWithAttributeAdded2(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
  "startTimestamp": 1474047223977,
  "executionTime": 36
 }
]

[
 "TEST_STARTED",
 "ID#testUnbalancedZones(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,022][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table for 'testUnbalancedZones'%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,022][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes in different zones and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,024][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,026][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][3], [test][1], [test][2], [test][4], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,026][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> all replicas are allocated and started since we have on node in each zone%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,026][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add a new node in zone 'a' and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,030][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> starting initializing shards on the new node%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnbalancedZones(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
  "startTimestamp": 1474047224014,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testUnassignedShardsWithUnbalancedZones(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,040][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table for 'testUnassignedShardsWithUnbalancedZones'%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,041][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding 5 nodes in different zones and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,044][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shard (primary)%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnassignedShardsWithUnbalancedZones(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
  "startTimestamp": 1474047224032,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testMoveShardOnceNewNodeWithAttributeAdded3(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,063][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table for 'moveShardOnceNewNodeWithAttributeAdded3'%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,063][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes on same rack and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,064][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Initializing shards: [[test][2], node[node2], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=FtdAWaJtQOGtysytdAaN2Q], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:33:44.063Z], delayed=false, allocation_status[no_attempt]], [test][4], node[node2], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=0uCWTTylRMm7JlexnfumSw], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:33:44.063Z], delayed=false, allocation_status[no_attempt]], [test][0], node[node2], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=nYbi1VOzT3mWAC4YQ3k1yg], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:33:44.063Z], delayed=false, allocation_status[no_attempt]], [test][3], node[node1], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=l3cFo1GzQQOBNSLolwYTtg], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:33:44.063Z], delayed=false, allocation_status[no_attempt]], [test][1], node[node1], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=4OTu0NdLSiSP0Gp7YyUa5A], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:33:44.063Z], delayed=false, allocation_status[no_attempt]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,065][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Started shards: []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,065][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Relocating shards: []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,065][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Unassigned shards: [[test][3], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:33:44.063Z], delayed=false, allocation_status[no_attempt]], [test][2], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:33:44.063Z], delayed=false, allocation_status[no_attempt]], [test][4], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:33:44.063Z], delayed=false, allocation_status[no_attempt]], [test][1], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:33:44.063Z], delayed=false, allocation_status[no_attempt]], [test][0], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-16T17:33:44.063Z], delayed=false, allocation_status[no_attempt]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,065][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,066][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (replicas)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,067][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][3], [test][1], [test][2], [test][4], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,067][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add a new node with a new rack and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,068][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,070][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> run it again, since we still might have relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,070][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,071][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add another node with a new rack, some more relocation should happen%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,072][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,074][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMoveShardOnceNewNodeWithAttributeAdded3(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
  "startTimestamp": 1474047224056,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testMoveShardOnceNewNodeWithAttributeAdded4(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,084][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table for 'moveShardOnceNewNodeWithAttributeAdded4'%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,084][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes on same rack and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,086][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,087][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (replicas)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,088][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][3], [test2][1], [test1][2], [test1][4], [test1][0], [test2][2], [test2][4], [test2][0], [test1][3], [test1][1]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,088][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add a new node with a new rack and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,090][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,090][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete initializing round: [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,095][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete initializing round: [1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,101][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,101][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add another node with a new rack, some more relocation should happen%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,103][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,103][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete initializing round: [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,104][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete initializing round: [1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,105][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMoveShardOnceNewNodeWithAttributeAdded4(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
  "startTimestamp": 1474047224077,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testMoveShardOnceNewNodeWithAttributeAdded1(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,112][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table for 'moveShardOnceNewNodeWithAttributeAdded1'%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,113][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes on same rack and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,113][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,114][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (replicas)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,114][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,115][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add a new node with a new rack and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,115][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,115][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,116][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add another node with a new rack, make sure nothing moves%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMoveShardOnceNewNodeWithAttributeAdded1(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
  "startTimestamp": 1474047224106,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testMoveShardOnceNewNodeWithAttributeAdded6(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,124][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table for 'moveShardOnceNewNodeWithAttributeAdded6'%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,124][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes on same rack and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,125][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,126][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (replicas)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,126][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0], [test][0], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,127][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add a new node with a new rack and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,127][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,128][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,129][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add another node with a new rack, we will have another relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,130][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,130][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> make sure another reroute does not move things%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMoveShardOnceNewNodeWithAttributeAdded6(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
  "startTimestamp": 1474047224116,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testFullAwareness2(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,137][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table for 'fullAwareness2'%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,137][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes on same rack and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,138][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,139][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> replica will not start because we have only one rack value%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,139][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add a new node with a new rack and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,139][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,140][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,140][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,140][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add another node with a new rack, make sure nothing moves%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFullAwareness2(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
  "startTimestamp": 1474047224131,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testFullAwareness3(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,148][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table for 'fullAwareness3'%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,148][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes on same rack and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,149][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,151][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add a new node with a new rack and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,152][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,153][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][3], [test2][2], [test2][4], [test2][1], [test2][0], [test1][3], [test1][2], [test1][1], [test1][4], [test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,153][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> run it again, since we still might have relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,154][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,155][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add another node with a new rack, some more relocation should happen%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,158][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,159][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFullAwareness3(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
  "startTimestamp": 1474047224141,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testMoveShardOnceNewNodeWithAttributeAdded5(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,167][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table for 'moveShardOnceNewNodeWithAttributeAdded5'%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,167][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes on same rack and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,168][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,169][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (replicas)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,170][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add a new node with a new rack and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,171][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,171][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,171][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,171][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add another node with a new rack, we will have another relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,172][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,172][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> make sure another reroute does not move things%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMoveShardOnceNewNodeWithAttributeAdded5(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
  "startTimestamp": 1474047224160,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testFullAwareness1(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,179][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table for 'fullAwareness1'%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,180][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes on same rack and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,180][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,181][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> replica will not start because we have only one rack value%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,181][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add a new node with a new rack and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,181][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,182][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,182][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:33:44,182][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add another node with a new rack, make sure nothing moves%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFullAwareness1(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
  "startTimestamp": 1474047224173,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
  "startTimestamp": 1474047223909,
  "executionTime": 275
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.ingest.BulkRequestModifierTests",
   "displayName": "org.elasticsearch.action.ingest.BulkRequestModifierTests",
   "methodName": null,
   "className": "org.elasticsearch.action.ingest.BulkRequestModifierTests",
   "children": [
    {
     "id": "ID#testBulkRequestModifier(org.elasticsearch.action.ingest.BulkRequestModifierTests)",
     "displayName": "testBulkRequestModifier(org.elasticsearch.action.ingest.BulkRequestModifierTests)",
     "methodName": "testBulkRequestModifier",
     "className": "org.elasticsearch.action.ingest.BulkRequestModifierTests",
     "children": []
    },
    {
     "id": "ID#testPipelineFailures(org.elasticsearch.action.ingest.BulkRequestModifierTests)",
     "displayName": "testPipelineFailures(org.elasticsearch.action.ingest.BulkRequestModifierTests)",
     "methodName": "testPipelineFailures",
     "className": "org.elasticsearch.action.ingest.BulkRequestModifierTests",
     "children": []
    },
    {
     "id": "ID#testNoFailures(org.elasticsearch.action.ingest.BulkRequestModifierTests)",
     "displayName": "testNoFailures(org.elasticsearch.action.ingest.BulkRequestModifierTests)",
     "methodName": "testNoFailures",
     "className": "org.elasticsearch.action.ingest.BulkRequestModifierTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047224190
 }
]

[
 "TEST_STARTED",
 "ID#testBulkRequestModifier(org.elasticsearch.action.ingest.BulkRequestModifierTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBulkRequestModifier(org.elasticsearch.action.ingest.BulkRequestModifierTests)",
  "startTimestamp": 1474047224206,
  "executionTime": 30
 }
]

[
 "TEST_STARTED",
 "ID#testPipelineFailures(org.elasticsearch.action.ingest.BulkRequestModifierTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPipelineFailures(org.elasticsearch.action.ingest.BulkRequestModifierTests)",
  "startTimestamp": 1474047224237,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNoFailures(org.elasticsearch.action.ingest.BulkRequestModifierTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoFailures(org.elasticsearch.action.ingest.BulkRequestModifierTests)",
  "startTimestamp": 1474047224240,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.ingest.BulkRequestModifierTests",
  "startTimestamp": 1474047224190,
  "executionTime": 62
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.io.FileSystemUtilsTests",
   "displayName": "org.elasticsearch.common.io.FileSystemUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.io.FileSystemUtilsTests",
   "children": [
    {
     "id": "ID#testIsHidden(org.elasticsearch.common.io.FileSystemUtilsTests)",
     "displayName": "testIsHidden(org.elasticsearch.common.io.FileSystemUtilsTests)",
     "methodName": "testIsHidden",
     "className": "org.elasticsearch.common.io.FileSystemUtilsTests",
     "children": []
    },
    {
     "id": "ID#testAppend(org.elasticsearch.common.io.FileSystemUtilsTests)",
     "displayName": "testAppend(org.elasticsearch.common.io.FileSystemUtilsTests)",
     "methodName": "testAppend",
     "className": "org.elasticsearch.common.io.FileSystemUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047224258
 }
]

[
 "TEST_STARTED",
 "ID#testIsHidden(org.elasticsearch.common.io.FileSystemUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsHidden(org.elasticsearch.common.io.FileSystemUtilsTests)",
  "startTimestamp": 1474047224278,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testAppend(org.elasticsearch.common.io.FileSystemUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppend(org.elasticsearch.common.io.FileSystemUtilsTests)",
  "startTimestamp": 1474047224285,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.io.FileSystemUtilsTests",
  "startTimestamp": 1474047224258,
  "executionTime": 41
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.settings.PropertyPlaceholderTests",
   "displayName": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
   "children": [
    {
     "id": "ID#testShouldIgnoreMissing(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testShouldIgnoreMissing(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testShouldIgnoreMissing",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    },
    {
     "id": "ID#testNestedShorterPrefix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testNestedShorterPrefix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testNestedShorterPrefix",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    },
    {
     "id": "ID#testIgnoredUnresolvedPlaceholder(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testIgnoredUnresolvedPlaceholder(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testIgnoredUnresolvedPlaceholder",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    },
    {
     "id": "ID#testNestedLongerPrefix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testNestedLongerPrefix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testNestedLongerPrefix",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    },
    {
     "id": "ID#testRecursive(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testRecursive(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testRecursive",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    },
    {
     "id": "ID#testCircularReference(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testCircularReference(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testCircularReference",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    },
    {
     "id": "ID#testSimple(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testSimple(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    },
    {
     "id": "ID#testShouldRemoveMissing(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testShouldRemoveMissing(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testShouldRemoveMissing",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    },
    {
     "id": "ID#testDefaultValue(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testDefaultValue(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testDefaultValue",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    },
    {
     "id": "ID#testNotIgnoredUnresolvedPlaceholder(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testNotIgnoredUnresolvedPlaceholder(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testNotIgnoredUnresolvedPlaceholder",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    },
    {
     "id": "ID#testVariousPrefixSuffix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testVariousPrefixSuffix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testVariousPrefixSuffix",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    },
    {
     "id": "ID#testNestedSameLengthPrefixSuffix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testNestedSameLengthPrefixSuffix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testNestedSameLengthPrefixSuffix",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047224313
 }
]

[
 "TEST_STARTED",
 "ID#testShouldIgnoreMissing(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShouldIgnoreMissing(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1474047224329,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testNestedShorterPrefix(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedShorterPrefix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1474047224333,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoredUnresolvedPlaceholder(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoredUnresolvedPlaceholder(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1474047224335,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNestedLongerPrefix(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedLongerPrefix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1474047224337,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testRecursive(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursive(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1474047224339,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCircularReference(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCircularReference(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1474047224341,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1474047224343,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testShouldRemoveMissing(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShouldRemoveMissing(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1474047224345,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultValue(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultValue(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1474047224347,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNotIgnoredUnresolvedPlaceholder(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotIgnoredUnresolvedPlaceholder(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1474047224349,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testVariousPrefixSuffix(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVariousPrefixSuffix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1474047224351,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNestedSameLengthPrefixSuffix(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedSameLengthPrefixSuffix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1474047224353,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.settings.PropertyPlaceholderTests",
  "startTimestamp": 1474047224313,
  "executionTime": 44
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.gateway.AsyncShardFetchTests",
   "displayName": "org.elasticsearch.gateway.AsyncShardFetchTests",
   "methodName": null,
   "className": "org.elasticsearch.gateway.AsyncShardFetchTests",
   "children": [
    {
     "id": "ID#testClose(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "displayName": "testClose(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "methodName": "testClose",
     "className": "org.elasticsearch.gateway.AsyncShardFetchTests",
     "children": []
    },
    {
     "id": "ID#testTwoNodesAddedInBetween(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "displayName": "testTwoNodesAddedInBetween(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "methodName": "testTwoNodesAddedInBetween",
     "className": "org.elasticsearch.gateway.AsyncShardFetchTests",
     "children": []
    },
    {
     "id": "ID#testFullCircleSingleNodeFailure(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "displayName": "testFullCircleSingleNodeFailure(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "methodName": "testFullCircleSingleNodeFailure",
     "className": "org.elasticsearch.gateway.AsyncShardFetchTests",
     "children": []
    },
    {
     "id": "ID#testTwoNodesOnSetupAndFailure(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "displayName": "testTwoNodesOnSetupAndFailure(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "methodName": "testTwoNodesOnSetupAndFailure",
     "className": "org.elasticsearch.gateway.AsyncShardFetchTests",
     "children": []
    },
    {
     "id": "ID#testFullCircleSingleNodeSuccess(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "displayName": "testFullCircleSingleNodeSuccess(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "methodName": "testFullCircleSingleNodeSuccess",
     "className": "org.elasticsearch.gateway.AsyncShardFetchTests",
     "children": []
    },
    {
     "id": "ID#testTwoNodesOnSetup(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "displayName": "testTwoNodesOnSetup(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "methodName": "testTwoNodesOnSetup",
     "className": "org.elasticsearch.gateway.AsyncShardFetchTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047224365
 }
]

[
 "TEST_STARTED",
 "ID#testClose(org.elasticsearch.gateway.AsyncShardFetchTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClose(org.elasticsearch.gateway.AsyncShardFetchTests)",
  "startTimestamp": 1474047224379,
  "executionTime": 43
 }
]

[
 "TEST_STARTED",
 "ID#testTwoNodesAddedInBetween(org.elasticsearch.gateway.AsyncShardFetchTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTwoNodesAddedInBetween(org.elasticsearch.gateway.AsyncShardFetchTests)",
  "startTimestamp": 1474047224422,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testFullCircleSingleNodeFailure(org.elasticsearch.gateway.AsyncShardFetchTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFullCircleSingleNodeFailure(org.elasticsearch.gateway.AsyncShardFetchTests)",
  "startTimestamp": 1474047224446,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testTwoNodesOnSetupAndFailure(org.elasticsearch.gateway.AsyncShardFetchTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTwoNodesOnSetupAndFailure(org.elasticsearch.gateway.AsyncShardFetchTests)",
  "startTimestamp": 1474047224455,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testFullCircleSingleNodeSuccess(org.elasticsearch.gateway.AsyncShardFetchTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFullCircleSingleNodeSuccess(org.elasticsearch.gateway.AsyncShardFetchTests)",
  "startTimestamp": 1474047224462,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testTwoNodesOnSetup(org.elasticsearch.gateway.AsyncShardFetchTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTwoNodesOnSetup(org.elasticsearch.gateway.AsyncShardFetchTests)",
  "startTimestamp": 1474047224467,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.gateway.AsyncShardFetchTests",
  "startTimestamp": 1474047224365,
  "executionTime": 108
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.engine.ShadowEngineTests",
   "displayName": "org.elasticsearch.index.engine.ShadowEngineTests",
   "methodName": null,
   "className": "org.elasticsearch.index.engine.ShadowEngineTests",
   "children": [
    {
     "id": "ID#testShadowEngineIgnoresWriteOperations(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testShadowEngineIgnoresWriteOperations(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testShadowEngineIgnoresWriteOperations",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testSettings(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testSettings(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testSettings",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testSegments(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testSegments(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testSegments",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testSimpleOperations(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testSimpleOperations(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testSimpleOperations",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testFailEngineOnCorruption(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testFailEngineOnCorruption(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testFailEngineOnCorruption",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testSearchResultRelease(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testSearchResultRelease(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testSearchResultRelease",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testFailStart(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testFailStart(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testFailStart",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testDocStats(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testDocStats(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testDocStats",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testRefreshListenersFails(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testRefreshListenersFails(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testRefreshListenersFails",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testNoTranslog(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testNoTranslog(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testNoTranslog",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testCommitStats(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testCommitStats(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testCommitStats",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testVerboseSegments(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testVerboseSegments(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testVerboseSegments",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testShadowEngineCreationRetry(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testShadowEngineCreationRetry(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testShadowEngineCreationRetry",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testExtractShardId(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testExtractShardId(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testExtractShardId",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047224486
 }
]

[
 "TEST_STARTED",
 "ID#testShadowEngineIgnoresWriteOperations(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShadowEngineIgnoresWriteOperations(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1474047224503,
  "executionTime": 312
 }
]

[
 "TEST_STARTED",
 "ID#testSettings(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSettings(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1474047224815,
  "executionTime": 76
 }
]

[
 "TEST_STARTED",
 "ID#testSegments(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSegments(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1474047224891,
  "executionTime": 958
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleOperations(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleOperations(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1474047225850,
  "executionTime": 1004
 }
]

[
 "TEST_STARTED",
 "ID#testFailEngineOnCorruption(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailEngineOnCorruption(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1474047226854,
  "executionTime": 461
 }
]

[
 "TEST_STARTED",
 "ID#testSearchResultRelease(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearchResultRelease(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1474047227315,
  "executionTime": 474
 }
]

[
 "TEST_STARTED",
 "ID#testFailStart(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailStart(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1474047227789,
  "executionTime": 3274
 }
]

[
 "TEST_STARTED",
 "ID#testDocStats(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDocStats(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1474047231064,
  "executionTime": 1201
 }
]

[
 "TEST_STARTED",
 "ID#testRefreshListenersFails(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRefreshListenersFails(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1474047232265,
  "executionTime": 226
 }
]

[
 "TEST_STARTED",
 "ID#testNoTranslog(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoTranslog(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1474047232492,
  "executionTime": 125
 }
]

[
 "TEST_STARTED",
 "ID#testCommitStats(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCommitStats(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1474047232617,
  "executionTime": 908
 }
]

[
 "TEST_STARTED",
 "ID#testVerboseSegments(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVerboseSegments(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1474047233525,
  "executionTime": 1105
 }
]

[
 "TEST_STARTED",
 "ID#testShadowEngineCreationRetry(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShadowEngineCreationRetry(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1474047234630,
  "executionTime": 1166
 }
]

[
 "TEST_STARTED",
 "ID#testExtractShardId(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractShardId(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1474047235796,
  "executionTime": 208
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.engine.ShadowEngineTests",
  "startTimestamp": 1474047224486,
  "executionTime": 11672
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.GeoCentroidTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.GeoCentroidTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.GeoCentroidTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.GeoCentroidTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.GeoCentroidTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.GeoCentroidTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.GeoCentroidTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.GeoCentroidTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.GeoCentroidTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.GeoCentroidTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.GeoCentroidTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.GeoCentroidTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047236164
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:33:56,189][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{C7xPHRNZTqKkAZODsOyp0g}{local}{local[297]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.GeoCentroidTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.GeoCentroidTests)",
  "startTimestamp": 1474047236207,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.GeoCentroidTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.GeoCentroidTests)",
  "startTimestamp": 1474047236210,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.GeoCentroidTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.GeoCentroidTests)",
  "startTimestamp": 1474047236212,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.GeoCentroidTests",
  "startTimestamp": 1474047236164,
  "executionTime": 55
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests",
   "displayName": "org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests",
   "methodName": null,
   "className": "org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests",
   "children": [
    {
     "id": "ID#testSimpleQueueSameMaster(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "displayName": "testSimpleQueueSameMaster(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "methodName": "testSimpleQueueSameMaster",
     "className": "org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests",
     "children": []
    },
    {
     "id": "ID#testQueueStats(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "displayName": "testQueueStats(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "methodName": "testQueueStats",
     "className": "org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests",
     "children": []
    },
    {
     "id": "ID#testSelectNextStateToProcess_empty(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "displayName": "testSelectNextStateToProcess_empty(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "methodName": "testSelectNextStateToProcess_empty",
     "className": "org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests",
     "children": []
    },
    {
     "id": "ID#testDroppingStatesAtCapacity(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "displayName": "testDroppingStatesAtCapacity(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "methodName": "testDroppingStatesAtCapacity",
     "className": "org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests",
     "children": []
    },
    {
     "id": "ID#testFailAllAndClear(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "displayName": "testFailAllAndClear(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "methodName": "testFailAllAndClear",
     "className": "org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests",
     "children": []
    },
    {
     "id": "ID#testProcessedStateCleansStatesFromOtherMasters(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "displayName": "testProcessedStateCleansStatesFromOtherMasters(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "methodName": "testProcessedStateCleansStatesFromOtherMasters",
     "className": "org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests",
     "children": []
    },
    {
     "id": "ID#testFailedStateCleansSupersededStatesOnly(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "displayName": "testFailedStateCleansSupersededStatesOnly(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "methodName": "testFailedStateCleansSupersededStatesOnly",
     "className": "org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047236231
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleQueueSameMaster(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleQueueSameMaster(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
  "startTimestamp": 1474047236247,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testQueueStats(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueueStats(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
  "startTimestamp": 1474047236253,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testSelectNextStateToProcess_empty(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSelectNextStateToProcess_empty(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
  "startTimestamp": 1474047236281,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testDroppingStatesAtCapacity(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,283][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[EGq0DovETGuMsfB68QUbIw], v[19], m[master4]]]. more than [46] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,284][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[kDnEk40pRwWjbW8InPHsxg], v[19], m[master2]]]. more than [46] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,284][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[ylH4bWSNRiK0lqDgiM4bJg], v[2], m[master1]]]. more than [46] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,284][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[lg3PbD_KRIG5I8OgaybBCQ], v[0], m[master3]]]. more than [46] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,284][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[rLEW5uk6QJ-MAVMju_3pSg], v[9], m[master3]]]. more than [46] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,284][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[_T3bpNNwS5SV-yllna6bsg], v[18], m[master2]]]. more than [46] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,284][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[7awBleaaQh6df_MWJ7ImJQ], v[6], m[master4]]]. more than [46] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,284][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[3nuoXktdTh20wdUyz0agVw], v[23], m[master4]]]. more than [46] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,284][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[spdjYIn4ShWAIOxpA4MMzA], v[11], m[master3]]]. more than [46] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,284][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[oSm_FLV2Tq6lf3jygcPUcQ], v[17], m[master2]]]. more than [46] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,284][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[hhIbcDKfTqWNpgWDbTmKbg], v[2], m[master3]]]. more than [46] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,284][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[AER4VRKMSquB62-oicMeNA], v[5], m[master1]]]. more than [46] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,284][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[fFwX6HBFSpiFxs1ek51iUw], v[26], m[master1]]]. more than [46] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,284][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[hjnnbvdHQxC9VvLWyZQCiw], v[20], m[master4]]]. more than [46] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,284][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[k7dZ1EpeTxGDoqXyjzryTA], v[6], m[master2]]]. more than [46] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,285][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[9M5JkoImQW-EeFccrx4hGw], v[1], m[master3]]]. more than [46] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,285][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[fRklRzxaTVOFCIMglz3gmA], v[13], m[master2]]]. more than [46] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,285][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[ZEj8R3ewSp2n6XU_CiwBeA], v[10], m[master4]]]. more than [46] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,285][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[rbRnpbpoQvCnyY6Drw7DQQ], v[26], m[master4]]]. more than [46] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,285][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[54ifa42_SGuJ5SnaOlcXMg], v[22], m[master1]]]. more than [46] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,285][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[D1HfD_WkQ9WHHcQYithJXw], v[17], m[master4]]]. more than [46] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,285][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[p8YYU1BVRzGwcNijMUZYxQ], v[4], m[master2]]]. more than [46] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,285][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[oPa8y1LITD27q5vNLLk0Xw], v[9], m[master1]]]. more than [46] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,285][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[tBcg-LcqSs-bgyT5IfWAlg], v[2], m[master4]]]. more than [46] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,285][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[0XQwcr0hS4a1Z9gUKOOkuQ], v[8], m[master4]]]. more than [46] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,285][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[DJyhqD_rT9a_SrQvweOpzg], v[5], m[master3]]]. more than [46] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,285][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[_rMtvoAmTVWCxEmIcG1mww], v[1], m[master2]]]. more than [46] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,285][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[J1Sg167aS6yNcZA_1Iib8Q], v[28], m[master1]]]. more than [46] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,285][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[1LO4HIEYSSq5Yl5qUsI8lg], v[13], m[master1]]]. more than [46] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,285][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[zMRrHtFhRf2hr51W7kLrMg], v[10], m[master3]]]. more than [46] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,285][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[xeVtwMQ5QAyxUaO91Vf-WQ], v[15], m[master4]]]. more than [46] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,286][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[YcKTLnL4Sm-npk9ZGjk5HA], v[9], m[master4]]]. more than [46] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,286][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[vGGhlUUqRcemDq7S2BNeJg], v[4], m[master4]]]. more than [46] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,286][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[1QlBthK3TtWnT76VrSW7ZA], v[3], m[master1]]]. more than [46] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,286][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[ntvZawlkQ6GNmGCxlKAcRQ], v[3], m[master3]]]. more than [46] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,286][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[NokW-SsVTiifC6c2bF9GbA], v[10], m[master2]]]. more than [46] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,286][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[DV27a3iSTj2JDEVe3Uouvg], v[14], m[master2]]]. more than [46] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,286][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[ZwmEQeFMSrWoUWfCMcBKBg], v[3], m[master4]]]. more than [46] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,286][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[fHBoEKyaRCu5sdL5JTeEsQ], v[4], m[master1]]]. more than [46] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,286][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[emd1Qup3SJifAsWc7JRa4Q], v[11], m[master2]]]. more than [46] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,286][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[coEtc2pCTIWK7haQJOGu7A], v[16], m[master1]]]. more than [46] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,286][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[fW1Qo-gzTGaOZul5y4mX_g], v[11], m[master4]]]. more than [46] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,286][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[1ILGKEaZSVeJsA1ervkrtw], v[2], m[master2]]]. more than [46] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,286][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[hDOpxDCxS96R__gmG3DM0w], v[21], m[master1]]]. more than [46] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,286][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[gYsVsVS1SgWs-eI8tcjWCg], v[7], m[master1]]]. more than [46] pending states.%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDroppingStatesAtCapacity(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
  "startTimestamp": 1474047236282,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFailAllAndClear(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailAllAndClear(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
  "startTimestamp": 1474047236287,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testProcessedStateCleansStatesFromOtherMasters(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,290][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[WWX1GxZBTrqdeLDbcQSj1Q]/v[0]) from a different master than the current one, rejecting (received {master1}{92FnlpwXQNi6wJtVYkKydg}{local}{local[308]}, current {master4}{MAV01Bg6T56Fgiww5Zd-wQ}{local}{local[311]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,291][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[E-VjZGDXSraQSysyPvftVg]/v[0]) from a different master than the current one, rejecting (received {master3}{K6ugxyvLT_ifMvdmw_LSZg}{local}{local[309]}, current {master4}{MAV01Bg6T56Fgiww5Zd-wQ}{local}{local[311]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,291][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[AyprQNpnRCe91ZJZyuRznw]/v[0]) from a different master than the current one, rejecting (received {master2}{pprcDBG8TzW4QjgyTyZekA}{local}{local[310]}, current {master4}{MAV01Bg6T56Fgiww5Zd-wQ}{local}{local[311]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,291][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[_TKYife_Qv2iembXBgtCNQ]/v[1]) from a different master than the current one, rejecting (received {master1}{92FnlpwXQNi6wJtVYkKydg}{local}{local[308]}, current {master4}{MAV01Bg6T56Fgiww5Zd-wQ}{local}{local[311]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,291][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[tRNLl0PUQo2GUwuWfW5YMw]/v[2]) from a different master than the current one, rejecting (received {master1}{92FnlpwXQNi6wJtVYkKydg}{local}{local[308]}, current {master4}{MAV01Bg6T56Fgiww5Zd-wQ}{local}{local[311]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,291][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[6OzvRmUFQEyCDMI71zkZaw]/v[2]) from a different master than the current one, rejecting (received {master3}{K6ugxyvLT_ifMvdmw_LSZg}{local}{local[309]}, current {master4}{MAV01Bg6T56Fgiww5Zd-wQ}{local}{local[311]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,291][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[tzYHS4-qS-W6e54kDAdk0Q]/v[3]) from a different master than the current one, rejecting (received {master3}{K6ugxyvLT_ifMvdmw_LSZg}{local}{local[309]}, current {master4}{MAV01Bg6T56Fgiww5Zd-wQ}{local}{local[311]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,291][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[GhfLxzw2SXe4X3I9P6fkOA]/v[4]) from a different master than the current one, rejecting (received {master3}{K6ugxyvLT_ifMvdmw_LSZg}{local}{local[309]}, current {master4}{MAV01Bg6T56Fgiww5Zd-wQ}{local}{local[311]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,291][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[T2HwSAU_REyqYHRrl_rTrA]/v[2]) from a different master than the current one, rejecting (received {master2}{pprcDBG8TzW4QjgyTyZekA}{local}{local[310]}, current {master4}{MAV01Bg6T56Fgiww5Zd-wQ}{local}{local[311]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,291][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[4pvtymJzSj-MS6-bUGesFQ]/v[4]) from a different master than the current one, rejecting (received {master1}{92FnlpwXQNi6wJtVYkKydg}{local}{local[308]}, current {master4}{MAV01Bg6T56Fgiww5Zd-wQ}{local}{local[311]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,291][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[XRJJwc6DT_CDjx6__qOZ1w]/v[5]) from a different master than the current one, rejecting (received {master3}{K6ugxyvLT_ifMvdmw_LSZg}{local}{local[309]}, current {master4}{MAV01Bg6T56Fgiww5Zd-wQ}{local}{local[311]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,291][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[Bmwd2cnNQliqdJ6VqOZk6w]/v[6]) from a different master than the current one, rejecting (received {master3}{K6ugxyvLT_ifMvdmw_LSZg}{local}{local[309]}, current {master4}{MAV01Bg6T56Fgiww5Zd-wQ}{local}{local[311]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,291][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[04wqyGw8TWG4xI1f7DQIRw]/v[5]) from a different master than the current one, rejecting (received {master2}{pprcDBG8TzW4QjgyTyZekA}{local}{local[310]}, current {master4}{MAV01Bg6T56Fgiww5Zd-wQ}{local}{local[311]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,291][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[iPwqqY1RSoeCOF7EUTLR2Q]/v[7]) from a different master than the current one, rejecting (received {master2}{pprcDBG8TzW4QjgyTyZekA}{local}{local[310]}, current {master4}{MAV01Bg6T56Fgiww5Zd-wQ}{local}{local[311]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,291][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[FQB5vLDlRP6bnjfN_jwNUA]/v[8]) from a different master than the current one, rejecting (received {master3}{K6ugxyvLT_ifMvdmw_LSZg}{local}{local[309]}, current {master4}{MAV01Bg6T56Fgiww5Zd-wQ}{local}{local[311]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,291][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[q1NlU_UXQbS9GygATSemJw]/v[9]) from a different master than the current one, rejecting (received {master2}{pprcDBG8TzW4QjgyTyZekA}{local}{local[310]}, current {master4}{MAV01Bg6T56Fgiww5Zd-wQ}{local}{local[311]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,291][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[vr-PDT-8RDWbRw3h38ToNA]/v[10]) from a different master than the current one, rejecting (received {master2}{pprcDBG8TzW4QjgyTyZekA}{local}{local[310]}, current {master4}{MAV01Bg6T56Fgiww5Zd-wQ}{local}{local[311]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,291][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[G12gUg18ToaryofFSWM-Yw]/v[5]) from a different master than the current one, rejecting (received {master1}{92FnlpwXQNi6wJtVYkKydg}{local}{local[308]}, current {master4}{MAV01Bg6T56Fgiww5Zd-wQ}{local}{local[311]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,291][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[RNdG6VtuTPqkY-IE0uLU6Q]/v[6]) from a different master than the current one, rejecting (received {master1}{92FnlpwXQNi6wJtVYkKydg}{local}{local[308]}, current {master4}{MAV01Bg6T56Fgiww5Zd-wQ}{local}{local[311]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,291][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[bbDF63UhSFq0B9eQDwzLfQ]/v[13]) from a different master than the current one, rejecting (received {master2}{pprcDBG8TzW4QjgyTyZekA}{local}{local[310]}, current {master4}{MAV01Bg6T56Fgiww5Zd-wQ}{local}{local[311]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,292][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[N1BkwyO1TtyK7IzakzP7dg]/v[14]) from a different master than the current one, rejecting (received {master2}{pprcDBG8TzW4QjgyTyZekA}{local}{local[310]}, current {master4}{MAV01Bg6T56Fgiww5Zd-wQ}{local}{local[311]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,292][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[BCkVeX8oS6GjDgMFAQ2ukg]/v[7]) from a different master than the current one, rejecting (received {master1}{92FnlpwXQNi6wJtVYkKydg}{local}{local[308]}, current {master4}{MAV01Bg6T56Fgiww5Zd-wQ}{local}{local[311]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,292][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[dIeozrvFQYCtnDrEhge-kQ]/v[15]) from a different master than the current one, rejecting (received {master2}{pprcDBG8TzW4QjgyTyZekA}{local}{local[310]}, current {master4}{MAV01Bg6T56Fgiww5Zd-wQ}{local}{local[311]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,292][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[q82ABnzvSVinLhJR6zxtoQ]/v[9]) from a different master than the current one, rejecting (received {master3}{K6ugxyvLT_ifMvdmw_LSZg}{local}{local[309]}, current {master4}{MAV01Bg6T56Fgiww5Zd-wQ}{local}{local[311]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,292][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[tcIVh2D8R6GCKRFDWlTUQw]/v[16]) from a different master than the current one, rejecting (received {master2}{pprcDBG8TzW4QjgyTyZekA}{local}{local[310]}, current {master4}{MAV01Bg6T56Fgiww5Zd-wQ}{local}{local[311]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,292][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[kZdWkc61TjuJo663XGYkkg]/v[11]) from a different master than the current one, rejecting (received {master3}{K6ugxyvLT_ifMvdmw_LSZg}{local}{local[309]}, current {master4}{MAV01Bg6T56Fgiww5Zd-wQ}{local}{local[311]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,292][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[u75-d09aQGeB5scOcH8x_A]/v[12]) from a different master than the current one, rejecting (received {master3}{K6ugxyvLT_ifMvdmw_LSZg}{local}{local[309]}, current {master4}{MAV01Bg6T56Fgiww5Zd-wQ}{local}{local[311]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,292][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[ONmplhQ3ThGy-QMbziMtsQ]/v[18]) from a different master than the current one, rejecting (received {master2}{pprcDBG8TzW4QjgyTyZekA}{local}{local[310]}, current {master4}{MAV01Bg6T56Fgiww5Zd-wQ}{local}{local[311]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,292][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[aB9PEAE8QJe8T8qfZFPkIw]/v[14]) from a different master than the current one, rejecting (received {master3}{K6ugxyvLT_ifMvdmw_LSZg}{local}{local[309]}, current {master4}{MAV01Bg6T56Fgiww5Zd-wQ}{local}{local[311]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,292][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[lML3doouS4aBgJI96B_eow]/v[11]) from a different master than the current one, rejecting (received {master1}{92FnlpwXQNi6wJtVYkKydg}{local}{local[308]}, current {master4}{MAV01Bg6T56Fgiww5Zd-wQ}{local}{local[311]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,292][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[UZO8vKADTHy_Uvxxyr3RHw]/v[15]) from a different master than the current one, rejecting (received {master3}{K6ugxyvLT_ifMvdmw_LSZg}{local}{local[309]}, current {master4}{MAV01Bg6T56Fgiww5Zd-wQ}{local}{local[311]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,292][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[c5SY9_MxTMW4UK-yibtlFA]/v[19]) from a different master than the current one, rejecting (received {master2}{pprcDBG8TzW4QjgyTyZekA}{local}{local[310]}, current {master4}{MAV01Bg6T56Fgiww5Zd-wQ}{local}{local[311]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,292][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[XlZtpZl3QeWf0RlfhRJRMg]/v[12]) from a different master than the current one, rejecting (received {master1}{92FnlpwXQNi6wJtVYkKydg}{local}{local[308]}, current {master4}{MAV01Bg6T56Fgiww5Zd-wQ}{local}{local[311]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,292][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[sxSlMS4nTuuvYDEOPnKFcA]/v[15]) from a different master than the current one, rejecting (received {master1}{92FnlpwXQNi6wJtVYkKydg}{local}{local[308]}, current {master4}{MAV01Bg6T56Fgiww5Zd-wQ}{local}{local[311]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,292][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[Ca1HEMmDTZWAF_SRxtQ_0Q]/v[16]) from a different master than the current one, rejecting (received {master1}{92FnlpwXQNi6wJtVYkKydg}{local}{local[308]}, current {master4}{MAV01Bg6T56Fgiww5Zd-wQ}{local}{local[311]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,292][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[hM49WXYXS7yRLndbNoPjLQ]/v[17]) from a different master than the current one, rejecting (received {master1}{92FnlpwXQNi6wJtVYkKydg}{local}{local[308]}, current {master4}{MAV01Bg6T56Fgiww5Zd-wQ}{local}{local[311]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,292][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[fShM8lbzTsGmt7FdrI71cg]/v[21]) from a different master than the current one, rejecting (received {master2}{pprcDBG8TzW4QjgyTyZekA}{local}{local[310]}, current {master4}{MAV01Bg6T56Fgiww5Zd-wQ}{local}{local[311]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,293][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[zm2wBg3EQEq_GVo5BL-New]/v[18]) from a different master than the current one, rejecting (received {master3}{K6ugxyvLT_ifMvdmw_LSZg}{local}{local[309]}, current {master4}{MAV01Bg6T56Fgiww5Zd-wQ}{local}{local[311]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,293][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[3Dz96VRtQNahFAshnRiD-w]/v[18]) from a different master than the current one, rejecting (received {master1}{92FnlpwXQNi6wJtVYkKydg}{local}{local[308]}, current {master4}{MAV01Bg6T56Fgiww5Zd-wQ}{local}{local[311]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,293][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[Zkh91b3rRk6qzIvMp4h3yg]/v[19]) from a different master than the current one, rejecting (received {master3}{K6ugxyvLT_ifMvdmw_LSZg}{local}{local[309]}, current {master4}{MAV01Bg6T56Fgiww5Zd-wQ}{local}{local[311]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:33:56,293][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[TNcljKmQQhm-o9xTCAFSpw]/v[25]) from a different master than the current one, rejecting (received {master2}{pprcDBG8TzW4QjgyTyZekA}{local}{local[310]}, current {master4}{MAV01Bg6T56Fgiww5Zd-wQ}{local}{local[311]})%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testProcessedStateCleansStatesFromOtherMasters(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
  "startTimestamp": 1474047236289,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFailedStateCleansSupersededStatesOnly(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailedStateCleansSupersededStatesOnly(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
  "startTimestamp": 1474047236293,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests",
  "startTimestamp": 1474047236231,
  "executionTime": 72
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
   "children": [
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testItemFromXContent(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testItemFromXContent(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testItemFromXContent",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testItemSerialization(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testItemSerialization(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testItemSerialization",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnsupportedFields(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testUnsupportedFields(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testUnsupportedFields",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMoreLikeThisBuilder(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testMoreLikeThisBuilder(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testMoreLikeThisBuilder",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testValidateEmptyLike(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testValidateEmptyLike(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testValidateEmptyLike",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testValidateEmptyFields(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testValidateEmptyFields(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testValidateEmptyFields",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047236310
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:33:56,387][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{HiReVqW5TP-HErrMVZBUaA}{local}{local[316]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:33:56,394][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:33:56,394][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:33:56,420][WARN ][org.elasticsearch.deprecation.index.mapper]  [IFYcuMyTf] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:33:56,421][WARN ][org.elasticsearch.deprecation.index.mapper]  [IFYcuMyTf] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:33:56,421][WARN ][org.elasticsearch.deprecation.index.mapper]  [IFYcuMyTf] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:33:56,422][WARN ][org.elasticsearch.deprecation.index.mapper]  [IFYcuMyTf] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:33:56,422][WARN ][org.elasticsearch.deprecation.index.mapper]  [IFYcuMyTf] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:33:56,422][WARN ][org.elasticsearch.deprecation.index.mapper]  [IFYcuMyTf] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:33:56,426][WARN ][org.elasticsearch.deprecation.index.mapper]  [IFYcuMyTf] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:33:56,426][WARN ][org.elasticsearch.deprecation.index.mapper]  [IFYcuMyTf] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:33:56,426][WARN ][org.elasticsearch.deprecation.index.mapper]  [IFYcuMyTf] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1474047236382,
  "executionTime": 98
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T05:33:56,484][WARN ][org.elasticsearch.deprecation.common] Deprecated field [mlt] used, expected [more_like_this] instead%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1474047236480,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testItemFromXContent(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testItemFromXContent(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1474047236485,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testItemSerialization(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testItemSerialization(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1474047236488,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1474047236490,
  "executionTime": 166
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1474047236656,
  "executionTime": 129
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1474047236786,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1474047236789,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testUnsupportedFields(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnsupportedFields(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1474047236793,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1474047236797,
  "executionTime": 32
 }
]

[
 "TEST_STARTED",
 "ID#testMoreLikeThisBuilder(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMoreLikeThisBuilder(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1474047236829,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1474047236836,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testValidateEmptyLike(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidateEmptyLike(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1474047236840,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1474047236843,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testValidateEmptyFields(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidateEmptyFields(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1474047236850,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
  "startTimestamp": 1474047236310,
  "executionTime": 558
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.IndexBalanceTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.IndexBalanceTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.IndexBalanceTests",
   "children": [
    {
     "id": "ID#testBalanceAllNodesStarted(org.elasticsearch.cluster.routing.allocation.IndexBalanceTests)",
     "displayName": "testBalanceAllNodesStarted(org.elasticsearch.cluster.routing.allocation.IndexBalanceTests)",
     "methodName": "testBalanceAllNodesStarted",
     "className": "org.elasticsearch.cluster.routing.allocation.IndexBalanceTests",
     "children": []
    },
    {
     "id": "ID#testBalanceIncrementallyStartNodes(org.elasticsearch.cluster.routing.allocation.IndexBalanceTests)",
     "displayName": "testBalanceIncrementallyStartNodes(org.elasticsearch.cluster.routing.allocation.IndexBalanceTests)",
     "methodName": "testBalanceIncrementallyStartNodes",
     "className": "org.elasticsearch.cluster.routing.allocation.IndexBalanceTests",
     "children": []
    },
    {
     "id": "ID#testBalanceAllNodesStartedAddIndex(org.elasticsearch.cluster.routing.allocation.IndexBalanceTests)",
     "displayName": "testBalanceAllNodesStartedAddIndex(org.elasticsearch.cluster.routing.allocation.IndexBalanceTests)",
     "methodName": "testBalanceAllNodesStartedAddIndex",
     "className": "org.elasticsearch.cluster.routing.allocation.IndexBalanceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047236879
 }
]

[
 "TEST_STARTED",
 "ID#testBalanceAllNodesStarted(org.elasticsearch.cluster.routing.allocation.IndexBalanceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:56,931][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:56,933][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding three node and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:56,934][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Another round of rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:56,935][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, nothing should change%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:56,935][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the more shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:56,936][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][2], [test][2], [test1][0], [test][0], [test1][1], [test][1]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBalanceAllNodesStarted(org.elasticsearch.cluster.routing.allocation.IndexBalanceTests)",
  "startTimestamp": 1474047236925,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testBalanceIncrementallyStartNodes(org.elasticsearch.cluster.routing.allocation.IndexBalanceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:56,943][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:56,943][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding one node and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:56,944][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Add another node and perform rerouting, nothing will happen since primary not started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:56,945][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the primary shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:56,946][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, nothing should change%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:56,946][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the backup shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:56,962][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][2], [test1][1], [test1][0], [test][2], [test][1], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:56,966][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Add another node and perform rerouting, nothing will happen since primary not started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:56,971][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, nothing should change%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:56,972][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the backup shard%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBalanceIncrementallyStartNodes(org.elasticsearch.cluster.routing.allocation.IndexBalanceTests)",
  "startTimestamp": 1474047236936,
  "executionTime": 37
 }
]

[
 "TEST_STARTED",
 "ID#testBalanceAllNodesStartedAddIndex(org.elasticsearch.cluster.routing.allocation.IndexBalanceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:56,980][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:56,981][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding three node and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:56,982][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Another round of rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:56,983][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, nothing should change%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:56,984][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the more shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:56,984][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][2], [test][0], [test][1]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:56,984][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Add new index 3 shards 1 replica%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:56,985][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Another round of rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:56,986][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, nothing should change%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:56,986][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the more shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:56,989][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][2], [test1][0], [test1][1]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBalanceAllNodesStartedAddIndex(org.elasticsearch.cluster.routing.allocation.IndexBalanceTests)",
  "startTimestamp": 1474047236973,
  "executionTime": 16
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.IndexBalanceTests",
  "startTimestamp": 1474047236879,
  "executionTime": 112
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.BuildTests",
   "displayName": "org.elasticsearch.BuildTests",
   "methodName": null,
   "className": "org.elasticsearch.BuildTests",
   "children": [
    {
     "id": "ID#testJarMetadata(org.elasticsearch.BuildTests)",
     "displayName": "testJarMetadata(org.elasticsearch.BuildTests)",
     "methodName": "testJarMetadata",
     "className": "org.elasticsearch.BuildTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashCode(org.elasticsearch.BuildTests)",
     "displayName": "testEqualsAndHashCode(org.elasticsearch.BuildTests)",
     "methodName": "testEqualsAndHashCode",
     "className": "org.elasticsearch.BuildTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047236997
 }
]

[
 "TEST_STARTED",
 "ID#testJarMetadata(org.elasticsearch.BuildTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testJarMetadata(org.elasticsearch.BuildTests)",
  "startTimestamp": 1474047237099,
  "executionTime": 185
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashCode(org.elasticsearch.BuildTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashCode(org.elasticsearch.BuildTests)",
  "startTimestamp": 1474047237285,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.BuildTests",
  "startTimestamp": 1474047236997,
  "executionTime": 292
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.FilterAllocationDeciderTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.FilterAllocationDeciderTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.FilterAllocationDeciderTests",
   "children": [
    {
     "id": "ID#testFilterInitialAllocation(org.elasticsearch.cluster.routing.allocation.FilterAllocationDeciderTests)",
     "displayName": "testFilterInitialAllocation(org.elasticsearch.cluster.routing.allocation.FilterAllocationDeciderTests)",
     "methodName": "testFilterInitialAllocation",
     "className": "org.elasticsearch.cluster.routing.allocation.FilterAllocationDeciderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047237295
 }
]

[
 "TEST_STARTED",
 "ID#testFilterInitialAllocation(org.elasticsearch.cluster.routing.allocation.FilterAllocationDeciderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:33:57,359][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [shards failed [[idx][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:33:57,361][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[idx][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:33:57,362][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [shards failed [[idx][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterInitialAllocation(org.elasticsearch.cluster.routing.allocation.FilterAllocationDeciderTests)",
  "startTimestamp": 1474047237349,
  "executionTime": 13
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.FilterAllocationDeciderTests",
  "startTimestamp": 1474047237295,
  "executionTime": 69
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047237370
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:33:57,441][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{CbR4zGFZSzi8F50gxD_tUQ}{local}{local[328]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)",
  "startTimestamp": 1474047237454,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)",
  "startTimestamp": 1474047237457,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)",
  "startTimestamp": 1474047237459,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests",
  "startTimestamp": 1474047237370,
  "executionTime": 96
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests",
   "displayName": "org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests",
   "children": [
    {
     "id": "ID#testRandomOverflow(org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests)",
     "displayName": "testRandomOverflow(org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests)",
     "methodName": "testRandomOverflow",
     "className": "org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests",
     "children": []
    },
    {
     "id": "ID#testSeekOverflow(org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests)",
     "displayName": "testSeekOverflow(org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests)",
     "methodName": "testSeekOverflow",
     "className": "org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests",
     "children": []
    },
    {
     "id": "ID#testRandomReads(org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests)",
     "displayName": "testRandomReads(org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests)",
     "methodName": "testRandomReads",
     "className": "org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047237472
 }
]

[
 "TEST_STARTED",
 "ID#testRandomOverflow(org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomOverflow(org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests)",
  "startTimestamp": 1474047237562,
  "executionTime": 46
 }
]

[
 "TEST_STARTED",
 "ID#testSeekOverflow(org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSeekOverflow(org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests)",
  "startTimestamp": 1474047237609,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testRandomReads(org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomReads(org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests)",
  "startTimestamp": 1474047237626,
  "executionTime": 87
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.store.ByteArrayIndexInputTests",
  "startTimestamp": 1474047237472,
  "executionTime": 243
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests",
   "displayName": "org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests",
   "children": [
    {
     "id": "ID#testSlowGcLogging(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests)",
     "displayName": "testSlowGcLogging(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests)",
     "methodName": "testSlowGcLogging",
     "className": "org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests",
     "children": []
    },
    {
     "id": "ID#testGcOverheadLogging(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests)",
     "displayName": "testGcOverheadLogging(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests)",
     "methodName": "testGcOverheadLogging",
     "className": "org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047237724
 }
]

[
 "TEST_STARTED",
 "ID#testSlowGcLogging(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSlowGcLogging(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests)",
  "startTimestamp": 1474047237789,
  "executionTime": 209
 }
]

[
 "TEST_STARTED",
 "ID#testGcOverheadLogging(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGcOverheadLogging(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests)",
  "startTimestamp": 1474047237998,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests",
  "startTimestamp": 1474047237724,
  "executionTime": 278
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.support.XContentHelperTests",
   "displayName": "org.elasticsearch.common.xcontent.support.XContentHelperTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.support.XContentHelperTests",
   "children": [
    {
     "id": "ID#testMergingListValuesAreMapsOfOne(org.elasticsearch.common.xcontent.support.XContentHelperTests)",
     "displayName": "testMergingListValuesAreMapsOfOne(org.elasticsearch.common.xcontent.support.XContentHelperTests)",
     "methodName": "testMergingListValuesAreMapsOfOne",
     "className": "org.elasticsearch.common.xcontent.support.XContentHelperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047238008
 }
]

[
 "TEST_STARTED",
 "ID#testMergingListValuesAreMapsOfOne(org.elasticsearch.common.xcontent.support.XContentHelperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergingListValuesAreMapsOfOne(org.elasticsearch.common.xcontent.support.XContentHelperTests)",
  "startTimestamp": 1474047238025,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.support.XContentHelperTests",
  "startTimestamp": 1474047238008,
  "executionTime": 21
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.monitor.fs.DeviceStatsTests",
   "displayName": "org.elasticsearch.monitor.fs.DeviceStatsTests",
   "methodName": null,
   "className": "org.elasticsearch.monitor.fs.DeviceStatsTests",
   "children": [
    {
     "id": "ID#testDeviceStats(org.elasticsearch.monitor.fs.DeviceStatsTests)",
     "displayName": "testDeviceStats(org.elasticsearch.monitor.fs.DeviceStatsTests)",
     "methodName": "testDeviceStats",
     "className": "org.elasticsearch.monitor.fs.DeviceStatsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047238034
 }
]

[
 "TEST_STARTED",
 "ID#testDeviceStats(org.elasticsearch.monitor.fs.DeviceStatsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeviceStats(org.elasticsearch.monitor.fs.DeviceStatsTests)",
  "startTimestamp": 1474047238050,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.monitor.fs.DeviceStatsTests",
  "startTimestamp": 1474047238034,
  "executionTime": 22
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.StopTokenFilterTests",
   "displayName": "org.elasticsearch.index.analysis.StopTokenFilterTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.StopTokenFilterTests",
   "children": [
    {
     "id": "ID#testCorrectPositionIncrementSetting(org.elasticsearch.index.analysis.StopTokenFilterTests)",
     "displayName": "testCorrectPositionIncrementSetting(org.elasticsearch.index.analysis.StopTokenFilterTests)",
     "methodName": "testCorrectPositionIncrementSetting",
     "className": "org.elasticsearch.index.analysis.StopTokenFilterTests",
     "children": []
    },
    {
     "id": "ID#testThatSuggestStopFilterWorks(org.elasticsearch.index.analysis.StopTokenFilterTests)",
     "displayName": "testThatSuggestStopFilterWorks(org.elasticsearch.index.analysis.StopTokenFilterTests)",
     "methodName": "testThatSuggestStopFilterWorks",
     "className": "org.elasticsearch.index.analysis.StopTokenFilterTests",
     "children": []
    },
    {
     "id": "ID#testPositionIncrementSetting(org.elasticsearch.index.analysis.StopTokenFilterTests)",
     "displayName": "testPositionIncrementSetting(org.elasticsearch.index.analysis.StopTokenFilterTests)",
     "methodName": "testPositionIncrementSetting",
     "className": "org.elasticsearch.index.analysis.StopTokenFilterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047238061
 }
]

[
 "TEST_STARTED",
 "ID#testCorrectPositionIncrementSetting(org.elasticsearch.index.analysis.StopTokenFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCorrectPositionIncrementSetting(org.elasticsearch.index.analysis.StopTokenFilterTests)",
  "startTimestamp": 1474047238073,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testThatSuggestStopFilterWorks(org.elasticsearch.index.analysis.StopTokenFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatSuggestStopFilterWorks(org.elasticsearch.index.analysis.StopTokenFilterTests)",
  "startTimestamp": 1474047238082,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testPositionIncrementSetting(org.elasticsearch.index.analysis.StopTokenFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPositionIncrementSetting(org.elasticsearch.index.analysis.StopTokenFilterTests)",
  "startTimestamp": 1474047238097,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.StopTokenFilterTests",
  "startTimestamp": 1474047238061,
  "executionTime": 47
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests",
   "displayName": "org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047238113
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)",
  "startTimestamp": 1474047238138,
  "executionTime": 45
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)",
  "startTimestamp": 1474047238184,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)",
  "startTimestamp": 1474047238188,
  "executionTime": 59
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests",
  "startTimestamp": 1474047238113,
  "executionTime": 140
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.AllFieldMapperPositionIncrementGapTests",
   "displayName": "org.elasticsearch.index.mapper.AllFieldMapperPositionIncrementGapTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.AllFieldMapperPositionIncrementGapTests",
   "children": [
    {
     "id": "ID#testDefault(org.elasticsearch.index.mapper.AllFieldMapperPositionIncrementGapTests)",
     "displayName": "testDefault(org.elasticsearch.index.mapper.AllFieldMapperPositionIncrementGapTests)",
     "methodName": "testDefault",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperPositionIncrementGapTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047238259
 }
]

[
 "TEST_STARTED",
 "ID#testDefault(org.elasticsearch.index.mapper.AllFieldMapperPositionIncrementGapTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:58,300][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:58,322][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:58,323][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:58,326][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:58,329][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:58,329][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:58,436][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:58,436][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:58,436][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[78]}, bound_addresses {local[78]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:58,450][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{FvCxN7DrR_GRAkNYLJi-hw}{LL1OYOOWT-u_ENw9OIIiaA}{local}{local[78]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:58,451][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:58,485][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:58,503][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [auto(index api)], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:58,564][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:58,579][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/2IXhkNMmS8uQWY1Ym6m-AQ] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:58,811][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperPositionIncrementGapTests#testDefault]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefault(org.elasticsearch.index.mapper.AllFieldMapperPositionIncrementGapTests)",
  "startTimestamp": 1474047238292,
  "executionTime": 561
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:58,853][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:58,854][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:58,854][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:33:58,856][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.AllFieldMapperPositionIncrementGapTests",
  "startTimestamp": 1474047238259,
  "executionTime": 602
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.shard.SearchOperationListenerTests",
   "displayName": "org.elasticsearch.index.shard.SearchOperationListenerTests",
   "methodName": null,
   "className": "org.elasticsearch.index.shard.SearchOperationListenerTests",
   "children": [
    {
     "id": "ID#testListenersAreExecuted(org.elasticsearch.index.shard.SearchOperationListenerTests)",
     "displayName": "testListenersAreExecuted(org.elasticsearch.index.shard.SearchOperationListenerTests)",
     "methodName": "testListenersAreExecuted",
     "className": "org.elasticsearch.index.shard.SearchOperationListenerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047238868
 }
]

[
 "TEST_STARTED",
 "ID#testListenersAreExecuted(org.elasticsearch.index.shard.SearchOperationListenerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListenersAreExecuted(org.elasticsearch.index.shard.SearchOperationListenerTests)",
  "startTimestamp": 1474047238886,
  "executionTime": 35
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.shard.SearchOperationListenerTests",
  "startTimestamp": 1474047238868,
  "executionTime": 55
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.functionscore.FunctionScoreTests",
   "displayName": "org.elasticsearch.index.query.functionscore.FunctionScoreTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.functionscore.FunctionScoreTests",
   "children": [
    {
     "id": "ID#testExplanationAndScoreEqualsEvenIfNoFunctionMatches(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "displayName": "testExplanationAndScoreEqualsEvenIfNoFunctionMatches(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "methodName": "testExplanationAndScoreEqualsEvenIfNoFunctionMatches",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreTests",
     "children": []
    },
    {
     "id": "ID#testSimpleWeightedFunction(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "displayName": "testSimpleWeightedFunction(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "methodName": "testSimpleWeightedFunction",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreTests",
     "children": []
    },
    {
     "id": "ID#testWeightOnlyCreatesBoostFunction(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "displayName": "testWeightOnlyCreatesBoostFunction(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "methodName": "testWeightOnlyCreatesBoostFunction",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreTests",
     "children": []
    },
    {
     "id": "ID#testFilterFunctionScoreHashCodeAndEquals(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "displayName": "testFilterFunctionScoreHashCodeAndEquals(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "methodName": "testFilterFunctionScoreHashCodeAndEquals",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreTests",
     "children": []
    },
    {
     "id": "ID#testExplainFiltersFunctionScoreQuery(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "displayName": "testExplainFiltersFunctionScoreQuery(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "methodName": "testExplainFiltersFunctionScoreQuery",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreTests",
     "children": []
    },
    {
     "id": "ID#testExplainFunctionScoreQuery(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "displayName": "testExplainFunctionScoreQuery(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "methodName": "testExplainFunctionScoreQuery",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreTests",
     "children": []
    },
    {
     "id": "ID#testMinScoreExplain(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "displayName": "testMinScoreExplain(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "methodName": "testMinScoreExplain",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreTests",
     "children": []
    },
    {
     "id": "ID#testPropagatesApproximations(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "displayName": "testPropagatesApproximations(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "methodName": "testPropagatesApproximations",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreTests",
     "children": []
    },
    {
     "id": "ID#testFunctionScoreHashCodeAndEquals(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "displayName": "testFunctionScoreHashCodeAndEquals(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "methodName": "testFunctionScoreHashCodeAndEquals",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047238936
 }
]

[
 "TEST_STARTED",
 "ID#testExplanationAndScoreEqualsEvenIfNoFunctionMatches(org.elasticsearch.index.query.functionscore.FunctionScoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExplanationAndScoreEqualsEvenIfNoFunctionMatches(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
  "startTimestamp": 1474047238970,
  "executionTime": 77
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleWeightedFunction(org.elasticsearch.index.query.functionscore.FunctionScoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleWeightedFunction(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
  "startTimestamp": 1474047239047,
  "executionTime": 30
 }
]

[
 "TEST_STARTED",
 "ID#testWeightOnlyCreatesBoostFunction(org.elasticsearch.index.query.functionscore.FunctionScoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWeightOnlyCreatesBoostFunction(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
  "startTimestamp": 1474047239077,
  "executionTime": 85
 }
]

[
 "TEST_STARTED",
 "ID#testFilterFunctionScoreHashCodeAndEquals(org.elasticsearch.index.query.functionscore.FunctionScoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterFunctionScoreHashCodeAndEquals(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
  "startTimestamp": 1474047239162,
  "executionTime": 48
 }
]

[
 "TEST_STARTED",
 "ID#testExplainFiltersFunctionScoreQuery(org.elasticsearch.index.query.functionscore.FunctionScoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExplainFiltersFunctionScoreQuery(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
  "startTimestamp": 1474047239210,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testExplainFunctionScoreQuery(org.elasticsearch.index.query.functionscore.FunctionScoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExplainFunctionScoreQuery(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
  "startTimestamp": 1474047239234,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testMinScoreExplain(org.elasticsearch.index.query.functionscore.FunctionScoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinScoreExplain(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
  "startTimestamp": 1474047239253,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testPropagatesApproximations(org.elasticsearch.index.query.functionscore.FunctionScoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPropagatesApproximations(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
  "startTimestamp": 1474047239267,
  "executionTime": 59
 }
]

[
 "TEST_STARTED",
 "ID#testFunctionScoreHashCodeAndEquals(org.elasticsearch.index.query.functionscore.FunctionScoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFunctionScoreHashCodeAndEquals(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
  "startTimestamp": 1474047239326,
  "executionTime": 72
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.functionscore.FunctionScoreTests",
  "startTimestamp": 1474047238936,
  "executionTime": 464
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.ReplicaAllocatedAfterPrimaryTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.ReplicaAllocatedAfterPrimaryTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.ReplicaAllocatedAfterPrimaryTests",
   "children": [
    {
     "id": "ID#testBackupIsAllocatedAfterPrimary(org.elasticsearch.cluster.routing.allocation.ReplicaAllocatedAfterPrimaryTests)",
     "displayName": "testBackupIsAllocatedAfterPrimary(org.elasticsearch.cluster.routing.allocation.ReplicaAllocatedAfterPrimaryTests)",
     "methodName": "testBackupIsAllocatedAfterPrimary",
     "className": "org.elasticsearch.cluster.routing.allocation.ReplicaAllocatedAfterPrimaryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047239406
 }
]

[
 "TEST_STARTED",
 "ID#testBackupIsAllocatedAfterPrimary(org.elasticsearch.cluster.routing.allocation.ReplicaAllocatedAfterPrimaryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:59,467][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:59,468][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding one node and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:59,468][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start all the primary shards%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBackupIsAllocatedAfterPrimary(org.elasticsearch.cluster.routing.allocation.ReplicaAllocatedAfterPrimaryTests)",
  "startTimestamp": 1474047239454,
  "executionTime": 15
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.ReplicaAllocatedAfterPrimaryTests",
  "startTimestamp": 1474047239406,
  "executionTime": 65
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.http.HttpServerTests",
   "displayName": "org.elasticsearch.http.HttpServerTests",
   "methodName": null,
   "className": "org.elasticsearch.http.HttpServerTests",
   "children": [
    {
     "id": "ID#testDispatchRequestAddsAndFreesBytesOnlyOnceOnError(org.elasticsearch.http.HttpServerTests)",
     "displayName": "testDispatchRequestAddsAndFreesBytesOnlyOnceOnError(org.elasticsearch.http.HttpServerTests)",
     "methodName": "testDispatchRequestAddsAndFreesBytesOnlyOnceOnError",
     "className": "org.elasticsearch.http.HttpServerTests",
     "children": []
    },
    {
     "id": "ID#testDispatchRequestAddsAndFreesBytesOnSuccess(org.elasticsearch.http.HttpServerTests)",
     "displayName": "testDispatchRequestAddsAndFreesBytesOnSuccess(org.elasticsearch.http.HttpServerTests)",
     "methodName": "testDispatchRequestAddsAndFreesBytesOnSuccess",
     "className": "org.elasticsearch.http.HttpServerTests",
     "children": []
    },
    {
     "id": "ID#testDispatchRequestLimitsBytes(org.elasticsearch.http.HttpServerTests)",
     "displayName": "testDispatchRequestLimitsBytes(org.elasticsearch.http.HttpServerTests)",
     "methodName": "testDispatchRequestLimitsBytes",
     "className": "org.elasticsearch.http.HttpServerTests",
     "children": []
    },
    {
     "id": "ID#testDispatchRequestAddsAndFreesBytesOnError(org.elasticsearch.http.HttpServerTests)",
     "displayName": "testDispatchRequestAddsAndFreesBytesOnError(org.elasticsearch.http.HttpServerTests)",
     "methodName": "testDispatchRequestAddsAndFreesBytesOnError",
     "className": "org.elasticsearch.http.HttpServerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047239478
 }
]

[
 "TEST_STARTED",
 "ID#testDispatchRequestAddsAndFreesBytesOnlyOnceOnError(org.elasticsearch.http.HttpServerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:59,507][INFO ][org.elasticsearch.http   ] publish_address {local[1]}, bound_addresses {local[1]}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDispatchRequestAddsAndFreesBytesOnlyOnceOnError(org.elasticsearch.http.HttpServerTests)",
  "startTimestamp": 1474047239497,
  "executionTime": 58
 }
]

[
 "TEST_STARTED",
 "ID#testDispatchRequestAddsAndFreesBytesOnSuccess(org.elasticsearch.http.HttpServerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:59,560][INFO ][org.elasticsearch.http   ] publish_address {local[1]}, bound_addresses {local[1]}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDispatchRequestAddsAndFreesBytesOnSuccess(org.elasticsearch.http.HttpServerTests)",
  "startTimestamp": 1474047239556,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testDispatchRequestLimitsBytes(org.elasticsearch.http.HttpServerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:59,565][INFO ][org.elasticsearch.http   ] publish_address {local[1]}, bound_addresses {local[1]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:59,565][WARN ][org.elasticsearch.indices.breaker.in_flight_requests] [in_flight_requests] New used memory 21 [21b] for data of [<http_request>] would be larger than configured breaker: 20 [20b], breaking%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDispatchRequestLimitsBytes(org.elasticsearch.http.HttpServerTests)",
  "startTimestamp": 1474047239561,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testDispatchRequestAddsAndFreesBytesOnError(org.elasticsearch.http.HttpServerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:33:59,573][INFO ][org.elasticsearch.http   ] publish_address {local[1]}, bound_addresses {local[1]}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDispatchRequestAddsAndFreesBytesOnError(org.elasticsearch.http.HttpServerTests)",
  "startTimestamp": 1474047239568,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.http.HttpServerTests",
  "startTimestamp": 1474047239478,
  "executionTime": 96
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainTests",
   "displayName": "org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainTests",
   "children": [
    {
     "id": "ID#testShardExplain(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainTests)",
     "displayName": "testShardExplain(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainTests)",
     "methodName": "testShardExplain",
     "className": "org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047239581
 }
]

[
 "TEST_STARTED",
 "ID#testShardExplain(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:59,615][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:59,637][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:59,637][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:59,641][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:59,643][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:59,643][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:59,749][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:59,749][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:59,750][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[79]}, bound_addresses {local[79]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:59,753][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{xZWIgKXAS7qPjqpNxjPFIg}{2GMoR5g2StiuhoaJA_2u2w}{local}{local[79]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:59,754][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:59,770][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:59,795][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:59,922][INFO ][org.elasticsearch.action.admin.cluster.allocation] [node_s_0] [ClusterAllocationExplainTests#testShardExplain]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardExplain(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainTests)",
  "startTimestamp": 1474047239606,
  "executionTime": 345
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:59,951][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:59,952][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:59,952][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:33:59,953][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainTests",
  "startTimestamp": 1474047239581,
  "executionTime": 380
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047239968
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:00,033][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{VIjdgVxsRiSEdEKEApZfyQ}{local}{local[331]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:00,050][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:00,050][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:00,073][WARN ][org.elasticsearch.deprecation.index.mapper]  [dYjOSqAXo] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:00,073][WARN ][org.elasticsearch.deprecation.index.mapper]  [dYjOSqAXo] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:00,073][WARN ][org.elasticsearch.deprecation.index.mapper]  [dYjOSqAXo] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:00,074][WARN ][org.elasticsearch.deprecation.index.mapper]  [dYjOSqAXo] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:00,075][WARN ][org.elasticsearch.deprecation.index.mapper]  [dYjOSqAXo] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:00,075][WARN ][org.elasticsearch.deprecation.index.mapper]  [dYjOSqAXo] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:00,078][WARN ][org.elasticsearch.deprecation.index.mapper]  [dYjOSqAXo] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:00,078][WARN ][org.elasticsearch.deprecation.index.mapper]  [dYjOSqAXo] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:00,078][WARN ][org.elasticsearch.deprecation.index.mapper]  [dYjOSqAXo] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:00,080][WARN ][org.elasticsearch.deprecation.index.mapper]  [dYjOSqAXo] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:00,080][WARN ][org.elasticsearch.deprecation.index.mapper]  [dYjOSqAXo] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:00,080][WARN ][org.elasticsearch.deprecation.index.mapper]  [dYjOSqAXo] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:00,082][WARN ][org.elasticsearch.deprecation.index.mapper]  [dYjOSqAXo] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:00,082][WARN ][org.elasticsearch.deprecation.index.mapper]  [dYjOSqAXo] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:00,082][WARN ][org.elasticsearch.deprecation.index.mapper]  [dYjOSqAXo] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:00,086][WARN ][org.elasticsearch.deprecation.index.mapper]  [dYjOSqAXo] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:00,086][WARN ][org.elasticsearch.deprecation.index.mapper]  [dYjOSqAXo] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:00,086][WARN ][org.elasticsearch.deprecation.index.mapper]  [dYjOSqAXo] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
  "startTimestamp": 1474047240010,
  "executionTime": 104
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
  "startTimestamp": 1474047240114,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
  "startTimestamp": 1474047240117,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
  "startTimestamp": 1474047240121,
  "executionTime": 35
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
  "startTimestamp": 1474047240156,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
  "startTimestamp": 1474047240159,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
  "startTimestamp": 1474047240163,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
  "startTimestamp": 1474047240172,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
  "startTimestamp": 1474047240183,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests)",
  "startTimestamp": 1474047240185,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.FieldMaskingSpanQueryBuilderTests",
  "startTimestamp": 1474047239968,
  "executionTime": 224
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.DateFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.DateFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
   "children": [
    {
     "id": "ID#testValueForSearch(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "displayName": "testValueForSearch(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "methodName": "testValueForSearch",
     "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueFormat(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "displayName": "testValueFormat(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "methodName": "testValueFormat",
     "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testTermQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "displayName": "testTermQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "methodName": "testTermQuery",
     "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testIsFieldWithinQueryEmptyReader(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "displayName": "testIsFieldWithinQueryEmptyReader(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "methodName": "testIsFieldWithinQueryEmptyReader",
     "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testRangeQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "displayName": "testRangeQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "methodName": "testRangeQuery",
     "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "displayName": "testIsFieldWithinQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "methodName": "testIsFieldWithinQuery",
     "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047240199
 }
]

[
 "TEST_STARTED",
 "ID#testValueForSearch(org.elasticsearch.index.mapper.DateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueForSearch(org.elasticsearch.index.mapper.DateFieldTypeTests)",
  "startTimestamp": 1474047240355,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.DateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.DateFieldTypeTests)",
  "startTimestamp": 1474047240358,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.DateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.DateFieldTypeTests)",
  "startTimestamp": 1474047240363,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testValueFormat(org.elasticsearch.index.mapper.DateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueFormat(org.elasticsearch.index.mapper.DateFieldTypeTests)",
  "startTimestamp": 1474047240369,
  "executionTime": 64
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.DateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.DateFieldTypeTests)",
  "startTimestamp": 1474047240433,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testTermQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)",
  "startTimestamp": 1474047240438,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.DateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.DateFieldTypeTests)",
  "startTimestamp": 1474047240442,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsFieldWithinQueryEmptyReader(org.elasticsearch.index.mapper.DateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsFieldWithinQueryEmptyReader(org.elasticsearch.index.mapper.DateFieldTypeTests)",
  "startTimestamp": 1474047240444,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRangeQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRangeQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)",
  "startTimestamp": 1474047240446,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.DateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.DateFieldTypeTests)",
  "startTimestamp": 1474047240451,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)",
  "startTimestamp": 1474047240453,
  "executionTime": 139
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.DateFieldTypeTests",
  "startTimestamp": 1474047240199,
  "executionTime": 395
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests",
   "children": [
    {
     "id": "ID#testAddNodesAndIndices(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)",
     "displayName": "testAddNodesAndIndices(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)",
     "methodName": "testAddNodesAndIndices",
     "className": "org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests",
     "children": []
    },
    {
     "id": "ID#testMinimalRelocationsNoLimit(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)",
     "displayName": "testMinimalRelocationsNoLimit(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)",
     "methodName": "testMinimalRelocationsNoLimit",
     "className": "org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests",
     "children": []
    },
    {
     "id": "ID#testMinimalRelocations(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)",
     "displayName": "testMinimalRelocations(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)",
     "methodName": "testMinimalRelocations",
     "className": "org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047240603
 }
]

[
 "TEST_STARTED",
 "ID#testAddNodesAndIndices(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:00,624][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start 1 nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:00,626][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] restart all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:00,627][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:00,628][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:00,630][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start [1] more node, check that rebalancing will happen because we set it to always%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:00,637][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test0][2]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:00,637][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start [1] more node, check that rebalancing will happen because we set it to always%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:00,657][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start [1] more node, check that rebalancing will happen because we set it to always%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:00,670][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Removing [1] nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:00,671][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:00,671][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:00,675][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:00,676][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0], [test0][1]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:00,676][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:00,676][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:00,677][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] restart all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:00,678][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:00,679][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:00,681][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] restart all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:00,683][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:00,685][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:00,687][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start [1] more node, check that rebalancing will happen because we set it to always%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:00,693][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test3][1], [test3][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:00,695][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Removing [1] nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:00,712][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:00,712][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:00,721][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:00,722][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:00,723][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:00,727][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start [1] more node, check that rebalancing will happen because we set it to always%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:00,732][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test3][1], [test3][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddNodesAndIndices(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)",
  "startTimestamp": 1474047240617,
  "executionTime": 123
 }
]

[
 "TEST_STARTED",
 "ID#testMinimalRelocationsNoLimit(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:00,750][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start 1 nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:00,751][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] restart all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:00,752][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:00,752][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:00,752][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start [1] more node, check that rebalancing will happen because we set it to always%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:00,754][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][2], [test2][1], [test2][0], [test0][2], [test0][1], [test0][0], [test1][2], [test1][1], [test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:00,755][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start one more node, check that rebalancing will happen because we set it to always%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinimalRelocationsNoLimit(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)",
  "startTimestamp": 1474047240740,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testMinimalRelocations(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:00,777][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start 1 nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:00,778][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] restart all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:00,779][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:00,780][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:00,781][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start [1] more node, check that rebalancing will happen because we set it to always%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:00,787][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test0][2]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:00,787][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start one more node, check that rebalancing will happen because we set it to always%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinimalRelocations(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)",
  "startTimestamp": 1474047240759,
  "executionTime": 31
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests",
  "startTimestamp": 1474047240603,
  "executionTime": 189
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.VersionFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.VersionFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.VersionFieldTypeTests",
   "children": [
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.VersionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.VersionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.VersionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.VersionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.VersionFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047240798
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.VersionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
  "startTimestamp": 1474047240816,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.VersionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
  "startTimestamp": 1474047240818,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.VersionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
  "startTimestamp": 1474047240820,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.VersionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
  "startTimestamp": 1474047240824,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.VersionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
  "startTimestamp": 1474047240828,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.VersionFieldTypeTests",
  "startTimestamp": 1474047240798,
  "executionTime": 33
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.IpFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.IpFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.IpFieldTypeTests",
   "children": [
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.IpFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueForSearch(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "displayName": "testValueForSearch(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "methodName": "testValueForSearch",
     "className": "org.elasticsearch.index.mapper.IpFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueFormat(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "displayName": "testValueFormat(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "methodName": "testValueFormat",
     "className": "org.elasticsearch.index.mapper.IpFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.IpFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.IpFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.IpFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testRangeQuery(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "displayName": "testRangeQuery(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "methodName": "testRangeQuery",
     "className": "org.elasticsearch.index.mapper.IpFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testTermQuery(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "displayName": "testTermQuery(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "methodName": "testTermQuery",
     "className": "org.elasticsearch.index.mapper.IpFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.IpFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047240838
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.IpFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.IpFieldTypeTests)",
  "startTimestamp": 1474047240935,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValueForSearch(org.elasticsearch.index.mapper.IpFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueForSearch(org.elasticsearch.index.mapper.IpFieldTypeTests)",
  "startTimestamp": 1474047240937,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testValueFormat(org.elasticsearch.index.mapper.IpFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueFormat(org.elasticsearch.index.mapper.IpFieldTypeTests)",
  "startTimestamp": 1474047240952,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.IpFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.IpFieldTypeTests)",
  "startTimestamp": 1474047240954,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.IpFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.IpFieldTypeTests)",
  "startTimestamp": 1474047240956,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.IpFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.IpFieldTypeTests)",
  "startTimestamp": 1474047240975,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testRangeQuery(org.elasticsearch.index.mapper.IpFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRangeQuery(org.elasticsearch.index.mapper.IpFieldTypeTests)",
  "startTimestamp": 1474047240976,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testTermQuery(org.elasticsearch.index.mapper.IpFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermQuery(org.elasticsearch.index.mapper.IpFieldTypeTests)",
  "startTimestamp": 1474047240980,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.IpFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.IpFieldTypeTests)",
  "startTimestamp": 1474047240983,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.IpFieldTypeTests",
  "startTimestamp": 1474047240838,
  "executionTime": 148
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.ClusterInfoTests",
   "displayName": "org.elasticsearch.cluster.ClusterInfoTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.ClusterInfoTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.cluster.ClusterInfoTests)",
     "displayName": "testSerialization(org.elasticsearch.cluster.ClusterInfoTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.cluster.ClusterInfoTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047240992
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.cluster.ClusterInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.cluster.ClusterInfoTests)",
  "startTimestamp": 1474047241017,
  "executionTime": 12
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.ClusterInfoTests",
  "startTimestamp": 1474047240992,
  "executionTime": 40
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.IndexSettingsTests",
   "displayName": "org.elasticsearch.index.IndexSettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.index.IndexSettingsTests",
   "children": [
    {
     "id": "ID#testRunListener(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testRunListener(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testRunListener",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testArchiveBrokenIndexSettings(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testArchiveBrokenIndexSettings(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testArchiveBrokenIndexSettings",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testMergedSettingsArePassed(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testMergedSettingsArePassed(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testMergedSettingsArePassed",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testTranslogFlushSizeThreshold(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testTranslogFlushSizeThreshold(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testTranslogFlushSizeThreshold",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testSettingsUpdateValidator(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testSettingsUpdateValidator(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testSettingsUpdateValidator",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testRefreshInterval(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testRefreshInterval(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testRefreshInterval",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testUpdateDurability(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testUpdateDurability(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testUpdateDurability",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testNodeSettingsAreContained(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testNodeSettingsAreContained(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testNodeSettingsAreContained",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testIsWarmerEnabled(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testIsWarmerEnabled(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testIsWarmerEnabled",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testGCDeletesSetting(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testGCDeletesSetting(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testGCDeletesSetting",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testIsTTLPurgeDisabled(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testIsTTLPurgeDisabled(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testIsTTLPurgeDisabled",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testSettingsConsistency(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testSettingsConsistency(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testSettingsConsistency",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testMaxResultWindow(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testMaxResultWindow(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testMaxResultWindow",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047241038
 }
]

[
 "TEST_STARTED",
 "ID#testRunListener(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:01,070][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.test.setting.int] from [-1] to [42]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRunListener(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1474047241066,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testArchiveBrokenIndexSettings(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:01,077][WARN ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] found unknown setting: index.unknown value: foo - archiving%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArchiveBrokenIndexSettings(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1474047241072,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testMergedSettingsArePassed(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:01,080][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.test.setting.int] from [-1] to [42]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:01,081][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.not.updated] from [] to [boom]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergedSettingsArePassed(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1474047241077,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testTranslogFlushSizeThreshold(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:01,083][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.translog.flush_threshold_size] from [856.3mb] to [1.1gb]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTranslogFlushSizeThreshold(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1474047241081,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSettingsUpdateValidator(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:01,120][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.test.setting.int] from [-1] to [41]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSettingsUpdateValidator(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1474047241084,
  "executionTime": 37
 }
]

[
 "TEST_STARTED",
 "ID#testRefreshInterval(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:01,123][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.refresh_interval] from [1832172903s] to [1184380894s]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRefreshInterval(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1474047241121,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUpdateDurability(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:01,126][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.translog.durability] from [async] to [request]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdateDurability(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1474047241124,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNodeSettingsAreContained(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:01,131][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.foo.bar] from [0] to [42]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:01,131][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.foo.bar] from [42] to [43]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNodeSettingsAreContained(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1474047241127,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIsWarmerEnabled(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:01,133][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.warmer.enabled] from [false] to [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsWarmerEnabled(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1474047241131,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testGCDeletesSetting(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:01,136][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.gc_deletes] from [1227079284ms] to [773746581ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:01,137][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.gc_deletes] from [773746581ms] to [-1]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGCDeletesSetting(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1474047241134,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIsTTLPurgeDisabled(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:01,144][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.ttl.disable_purge] from [false] to [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:01,145][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.ttl.disable_purge] from [true] to [false]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsTTLPurgeDisabled(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1474047241141,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSettingsConsistency(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSettingsConsistency(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1474047241146,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testMaxResultWindow(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:01,156][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.max_result_window] from [15] to [42]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:01,156][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.max_rescore_window] from [15] to [42]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:01,158][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.max_result_window] from [42] to [10000]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:34:01,158][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.max_rescore_window] from [42] to [10000]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMaxResultWindow(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1474047241153,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.IndexSettingsTests",
  "startTimestamp": 1474047241038,
  "executionTime": 124
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests",
   "displayName": "org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests",
   "children": [
    {
     "id": "ID#testBasic(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
     "displayName": "testBasic(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
     "methodName": "testBasic",
     "className": "org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests",
     "children": []
    },
    {
     "id": "ID#testAllowNoIndex(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
     "displayName": "testAllowNoIndex(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
     "methodName": "testAllowNoIndex",
     "className": "org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests",
     "children": []
    },
    {
     "id": "ID#testVerbose(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
     "displayName": "testVerbose(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
     "methodName": "testVerbose",
     "className": "org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests",
     "children": []
    },
    {
     "id": "ID#testRequestOnClosedIndexIgnoreUnavailable(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
     "displayName": "testRequestOnClosedIndexIgnoreUnavailable(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
     "methodName": "testRequestOnClosedIndexIgnoreUnavailable",
     "className": "org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests",
     "children": []
    },
    {
     "id": "ID#testRequestOnClosedIndex(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
     "displayName": "testRequestOnClosedIndex(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
     "methodName": "testRequestOnClosedIndex",
     "className": "org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047241169
 }
]

[
 "TEST_STARTED",
 "ID#testBasic(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:01,227][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:01,298][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:01,298][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:01,302][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:01,305][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:01,305][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:01,500][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:01,500][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:01,500][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[80]}, bound_addresses {local[80]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:01,502][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{8XfN6dexQxmHetuMd3Vhgg}{2KnjptmRSlGCZT_o33eBUg}{local}{local[80]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:01,503][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:01,533][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:01,553][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:01,555][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:01,557][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:01,737][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:01,889][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/eq9qOqnVSi2Mg_3RBBEMDQ] create_mapping [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:08,721][INFO ][org.elasticsearch.action.admin.indices.segments] [node_s_0] [IndicesSegmentsRequestTests#testBasic]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasic(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
  "startTimestamp": 1474047241210,
  "executionTime": 7680
 }
]

[
 "TEST_STARTED",
 "ID#testAllowNoIndex(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:08,902][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:08,905][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:08,906][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:09,020][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:09,035][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/dy7QdM7CSL63p6tRGrulnw] create_mapping [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:12,983][INFO ][org.elasticsearch.action.admin.indices.segments] [node_s_0] [IndicesSegmentsRequestTests#testAllowNoIndex]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllowNoIndex(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
  "startTimestamp": 1474047248890,
  "executionTime": 4094
 }
]

[
 "TEST_STARTED",
 "ID#testVerbose(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:12,989][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:12,991][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:12,992][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:13,041][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:13,058][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/ab44W4dwQ2OHYrFw8Sy3kA] create_mapping [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:15,838][INFO ][org.elasticsearch.action.admin.indices.segments] [node_s_0] [IndicesSegmentsRequestTests#testVerbose]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVerbose(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
  "startTimestamp": 1474047252984,
  "executionTime": 2901
 }
]

[
 "TEST_STARTED",
 "ID#testRequestOnClosedIndexIgnoreUnavailable(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:15,892][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:15,895][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:15,896][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:15,992][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:16,022][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/7d1Cn17MRBerHyC8MFoKlw] create_mapping [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:18,585][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[test/7d1Cn17MRBerHyC8MFoKlw]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:18,606][INFO ][org.elasticsearch.action.admin.indices.segments] [node_s_0] [IndicesSegmentsRequestTests#testRequestOnClosedIndexIgnoreUnavailable]: cleaning up after test%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:18,607][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:18,608][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRequestOnClosedIndexIgnoreUnavailable(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
  "startTimestamp": 1474047255885,
  "executionTime": 2744
 }
]

[
 "TEST_STARTED",
 "ID#testRequestOnClosedIndex(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:18,633][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:18,636][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:18,637][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:18,681][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:18,698][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/eQg7pC4TS92-429GLpOukQ] create_mapping [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:22,374][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[test/eQg7pC4TS92-429GLpOukQ]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:22,471][INFO ][org.elasticsearch.action.admin.indices.segments] [node_s_0] [IndicesSegmentsRequestTests#testRequestOnClosedIndex]: cleaning up after test%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:22,472][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:22,473][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRequestOnClosedIndex(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
  "startTimestamp": 1474047258629,
  "executionTime": 3898
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:22,527][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:22,528][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:22,528][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:22,529][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests",
  "startTimestamp": 1474047241169,
  "executionTime": 21370
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.DynamicTemplatesTests",
   "displayName": "org.elasticsearch.index.mapper.DynamicTemplatesTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.DynamicTemplatesTests",
   "children": [
    {
     "id": "ID#testMatchTypeOnly(org.elasticsearch.index.mapper.DynamicTemplatesTests)",
     "displayName": "testMatchTypeOnly(org.elasticsearch.index.mapper.DynamicTemplatesTests)",
     "methodName": "testMatchTypeOnly",
     "className": "org.elasticsearch.index.mapper.DynamicTemplatesTests",
     "children": []
    },
    {
     "id": "ID#testSimpleWithXContentTraverse(org.elasticsearch.index.mapper.DynamicTemplatesTests)",
     "displayName": "testSimpleWithXContentTraverse(org.elasticsearch.index.mapper.DynamicTemplatesTests)",
     "methodName": "testSimpleWithXContentTraverse",
     "className": "org.elasticsearch.index.mapper.DynamicTemplatesTests",
     "children": []
    },
    {
     "id": "ID#testSimple(org.elasticsearch.index.mapper.DynamicTemplatesTests)",
     "displayName": "testSimple(org.elasticsearch.index.mapper.DynamicTemplatesTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.index.mapper.DynamicTemplatesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047262545
 }
]

[
 "TEST_STARTED",
 "ID#testMatchTypeOnly(org.elasticsearch.index.mapper.DynamicTemplatesTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:22,587][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:22,616][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:22,616][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:22,619][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:22,622][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:22,622][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:22,779][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:22,779][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:22,780][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[81]}, bound_addresses {local[81]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:22,781][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{jBTCYYwvRjmLHzkN1yU7_A}{Gvkts4LZRN-VG75y5e9S0g}{local}{local[81]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:22,782][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:22,797][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:22,846][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:22,883][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:22,892][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/1t7aTX_1SKmBMCdF_UvQ0w] create_mapping [person]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:22,907][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/1t7aTX_1SKmBMCdF_UvQ0w] update_mapping [person]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:22,917][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicTemplatesTests#testMatchTypeOnly]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMatchTypeOnly(org.elasticsearch.index.mapper.DynamicTemplatesTests)",
  "startTimestamp": 1474047262579,
  "executionTime": 365
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleWithXContentTraverse(org.elasticsearch.index.mapper.DynamicTemplatesTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:22,953][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:22,998][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:23,016][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/6jR4m113QYGbKqBIcSZt-Q] create_mapping [person]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:23,033][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/6jR4m113QYGbKqBIcSZt-Q] update_mapping [person]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:23,052][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicTemplatesTests#testSimpleWithXContentTraverse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleWithXContentTraverse(org.elasticsearch.index.mapper.DynamicTemplatesTests)",
  "startTimestamp": 1474047262944,
  "executionTime": 132
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.index.mapper.DynamicTemplatesTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:23,088][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:23,129][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:23,140][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/408T4S1OS2qKLet8bQQTww] create_mapping [person]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:23,154][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/408T4S1OS2qKLet8bQQTww] update_mapping [person]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:23,162][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicTemplatesTests#testSimple]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.index.mapper.DynamicTemplatesTests)",
  "startTimestamp": 1474047263076,
  "executionTime": 108
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:23,184][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:23,184][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:23,185][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:23,186][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.DynamicTemplatesTests",
  "startTimestamp": 1474047262545,
  "executionTime": 647
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.support.MissingValuesTests",
   "displayName": "org.elasticsearch.search.aggregations.support.MissingValuesTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.support.MissingValuesTests",
   "children": [
    {
     "id": "ID#testMissingDoubles(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "displayName": "testMissingDoubles(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "methodName": "testMissingDoubles",
     "className": "org.elasticsearch.search.aggregations.support.MissingValuesTests",
     "children": []
    },
    {
     "id": "ID#testMissingBytes(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "displayName": "testMissingBytes(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "methodName": "testMissingBytes",
     "className": "org.elasticsearch.search.aggregations.support.MissingValuesTests",
     "children": []
    },
    {
     "id": "ID#testMissingOrds(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "displayName": "testMissingOrds(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "methodName": "testMissingOrds",
     "className": "org.elasticsearch.search.aggregations.support.MissingValuesTests",
     "children": []
    },
    {
     "id": "ID#testMissingLongs(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "displayName": "testMissingLongs(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "methodName": "testMissingLongs",
     "className": "org.elasticsearch.search.aggregations.support.MissingValuesTests",
     "children": []
    },
    {
     "id": "ID#testMissingGeoPoints(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "displayName": "testMissingGeoPoints(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "methodName": "testMissingGeoPoints",
     "className": "org.elasticsearch.search.aggregations.support.MissingValuesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047263200
 }
]

[
 "TEST_STARTED",
 "ID#testMissingDoubles(org.elasticsearch.search.aggregations.support.MissingValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingDoubles(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
  "startTimestamp": 1474047263210,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testMissingBytes(org.elasticsearch.search.aggregations.support.MissingValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingBytes(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
  "startTimestamp": 1474047263229,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testMissingOrds(org.elasticsearch.search.aggregations.support.MissingValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingOrds(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
  "startTimestamp": 1474047263230,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMissingLongs(org.elasticsearch.search.aggregations.support.MissingValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingLongs(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
  "startTimestamp": 1474047263232,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMissingGeoPoints(org.elasticsearch.search.aggregations.support.MissingValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingGeoPoints(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
  "startTimestamp": 1474047263234,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.support.MissingValuesTests",
  "startTimestamp": 1474047263200,
  "executionTime": 38
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
   "children": [
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNoArrayAsFilterElements(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testNoArrayAsFilterElements(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testNoArrayAsFilterElements",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testFromJsonEmptyQueryBody(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testFromJsonEmptyQueryBody",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMultipleFilterElements(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testMultipleFilterElements(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testMultipleFilterElements",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFilterElement(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testFilterElement(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testFilterElement",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047263244
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:23,260][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{333VOPdYQoG7DE_S-D5mlQ}{local}{local[344]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:23,265][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:23,265][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:23,384][WARN ][org.elasticsearch.deprecation.index.mapper]  [TKZSfQmo] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:23,384][WARN ][org.elasticsearch.deprecation.index.mapper]  [TKZSfQmo] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:23,385][WARN ][org.elasticsearch.deprecation.index.mapper]  [TKZSfQmo] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:23,386][WARN ][org.elasticsearch.deprecation.index.mapper]  [TKZSfQmo] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:23,386][WARN ][org.elasticsearch.deprecation.index.mapper]  [TKZSfQmo] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:23,386][WARN ][org.elasticsearch.deprecation.index.mapper]  [TKZSfQmo] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:23,389][WARN ][org.elasticsearch.deprecation.index.mapper]  [TKZSfQmo] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:23,389][WARN ][org.elasticsearch.deprecation.index.mapper]  [TKZSfQmo] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:23,389][WARN ][org.elasticsearch.deprecation.index.mapper]  [TKZSfQmo] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:23,391][WARN ][org.elasticsearch.deprecation.index.mapper]  [TKZSfQmo] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:23,391][WARN ][org.elasticsearch.deprecation.index.mapper]  [TKZSfQmo] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:23,391][WARN ][org.elasticsearch.deprecation.index.mapper]  [TKZSfQmo] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:23,393][WARN ][org.elasticsearch.deprecation.index.mapper]  [TKZSfQmo] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:23,393][WARN ][org.elasticsearch.deprecation.index.mapper]  [TKZSfQmo] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:23,393][WARN ][org.elasticsearch.deprecation.index.mapper]  [TKZSfQmo] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:23,396][WARN ][org.elasticsearch.deprecation.index.mapper]  [TKZSfQmo] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:23,397][WARN ][org.elasticsearch.deprecation.index.mapper]  [TKZSfQmo] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:23,397][WARN ][org.elasticsearch.deprecation.index.mapper]  [TKZSfQmo] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:23,399][WARN ][org.elasticsearch.deprecation.index.mapper]  [TKZSfQmo] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:23,399][WARN ][org.elasticsearch.deprecation.index.mapper]  [TKZSfQmo] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:23,399][WARN ][org.elasticsearch.deprecation.index.mapper]  [TKZSfQmo] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:23,401][WARN ][org.elasticsearch.deprecation.index.mapper]  [TKZSfQmo] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:23,401][WARN ][org.elasticsearch.deprecation.index.mapper]  [TKZSfQmo] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:23,401][WARN ][org.elasticsearch.deprecation.index.mapper]  [TKZSfQmo] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:23,413][WARN ][org.elasticsearch.deprecation.index.mapper]  [TKZSfQmo] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:23,413][WARN ][org.elasticsearch.deprecation.index.mapper]  [TKZSfQmo] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:23,413][WARN ][org.elasticsearch.deprecation.index.mapper]  [TKZSfQmo] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1474047263257,
  "executionTime": 158
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1474047263416,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "message": "test doesn't apply for query filter queries",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test doesn't apply for query filter queries\r\n\tat __randomizedtesting.SeedInfo.seed([229C635BFFC33CB2:579043E4EB0ECD99]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.ConstantScoreQueryBuilderTests.testUnknownField(ConstantScoreQueryBuilderTests.java:98)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test doesn't apply for query filter queries",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1474047263425,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1474047263446,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1474047263454,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNoArrayAsFilterElements(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoArrayAsFilterElements(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1474047263457,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:23,462][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:40]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:23,462][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:40]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1474047263460,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1474047263463,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleFilterElements(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleFilterElements(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1474047263466,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1474047263471,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1474047263474,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1474047263476,
  "executionTime": 40
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1474047263516,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testFilterElement(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterElement(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1474047263559,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
  "startTimestamp": 1474047263244,
  "executionTime": 322
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.term.SortByTests",
   "displayName": "org.elasticsearch.search.suggest.term.SortByTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.term.SortByTests",
   "children": [
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.search.suggest.term.SortByTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.search.suggest.term.SortByTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.search.suggest.term.SortByTests",
     "children": []
    },
    {
     "id": "ID#testReadFrom(org.elasticsearch.search.suggest.term.SortByTests)",
     "displayName": "testReadFrom(org.elasticsearch.search.suggest.term.SortByTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.search.suggest.term.SortByTests",
     "children": []
    },
    {
     "id": "ID#testWriteTo(org.elasticsearch.search.suggest.term.SortByTests)",
     "displayName": "testWriteTo(org.elasticsearch.search.suggest.term.SortByTests)",
     "methodName": "testWriteTo",
     "className": "org.elasticsearch.search.suggest.term.SortByTests",
     "children": []
    },
    {
     "id": "ID#testFromString(org.elasticsearch.search.suggest.term.SortByTests)",
     "displayName": "testFromString(org.elasticsearch.search.suggest.term.SortByTests)",
     "methodName": "testFromString",
     "className": "org.elasticsearch.search.suggest.term.SortByTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047263574
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.search.suggest.term.SortByTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.search.suggest.term.SortByTests)",
  "startTimestamp": 1474047263717,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.search.suggest.term.SortByTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.search.suggest.term.SortByTests)",
  "startTimestamp": 1474047263719,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWriteTo(org.elasticsearch.search.suggest.term.SortByTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteTo(org.elasticsearch.search.suggest.term.SortByTests)",
  "startTimestamp": 1474047263721,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromString(org.elasticsearch.search.suggest.term.SortByTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromString(org.elasticsearch.search.suggest.term.SortByTests)",
  "startTimestamp": 1474047263723,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.term.SortByTests",
  "startTimestamp": 1474047263574,
  "executionTime": 179
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests",
   "displayName": "org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests",
   "children": [
    {
     "id": "ID#testDuplicateKeysThrowsException(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)",
     "displayName": "testDuplicateKeysThrowsException(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)",
     "methodName": "testDuplicateKeysThrowsException",
     "className": "org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests",
     "children": []
    },
    {
     "id": "ID#testSimpleJsonSettings(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)",
     "displayName": "testSimpleJsonSettings(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)",
     "methodName": "testSimpleJsonSettings",
     "className": "org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests",
     "children": []
    },
    {
     "id": "ID#testNullValuedSettingThrowsException(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)",
     "displayName": "testNullValuedSettingThrowsException(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)",
     "methodName": "testNullValuedSettingThrowsException",
     "className": "org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047263759
 }
]

[
 "TEST_STARTED",
 "ID#testDuplicateKeysThrowsException(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuplicateKeysThrowsException(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)",
  "startTimestamp": 1474047263816,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleJsonSettings(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleJsonSettings(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)",
  "startTimestamp": 1474047263820,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testNullValuedSettingThrowsException(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullValuedSettingThrowsException(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)",
  "startTimestamp": 1474047263824,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests",
  "startTimestamp": 1474047263759,
  "executionTime": 69
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.MultiFieldTests",
   "displayName": "org.elasticsearch.index.mapper.MultiFieldTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.MultiFieldTests",
   "children": [
    {
     "id": "ID#testBuildThenParse(org.elasticsearch.index.mapper.MultiFieldTests)",
     "displayName": "testBuildThenParse(org.elasticsearch.index.mapper.MultiFieldTests)",
     "methodName": "testBuildThenParse",
     "className": "org.elasticsearch.index.mapper.MultiFieldTests",
     "children": []
    },
    {
     "id": "ID#testMultiFieldsInConsistentOrder(org.elasticsearch.index.mapper.MultiFieldTests)",
     "displayName": "testMultiFieldsInConsistentOrder(org.elasticsearch.index.mapper.MultiFieldTests)",
     "methodName": "testMultiFieldsInConsistentOrder",
     "className": "org.elasticsearch.index.mapper.MultiFieldTests",
     "children": []
    },
    {
     "id": "ID#testMultiFieldMultiFields(org.elasticsearch.index.mapper.MultiFieldTests)",
     "displayName": "testMultiFieldMultiFields(org.elasticsearch.index.mapper.MultiFieldTests)",
     "methodName": "testMultiFieldMultiFields",
     "className": "org.elasticsearch.index.mapper.MultiFieldTests",
     "children": []
    },
    {
     "id": "ID#testObjectFieldNotAllowed(org.elasticsearch.index.mapper.MultiFieldTests)",
     "displayName": "testObjectFieldNotAllowed(org.elasticsearch.index.mapper.MultiFieldTests)",
     "methodName": "testObjectFieldNotAllowed",
     "className": "org.elasticsearch.index.mapper.MultiFieldTests",
     "children": []
    },
    {
     "id": "ID#testMultiFieldWithDot(org.elasticsearch.index.mapper.MultiFieldTests)",
     "displayName": "testMultiFieldWithDot(org.elasticsearch.index.mapper.MultiFieldTests)",
     "methodName": "testMultiFieldWithDot",
     "className": "org.elasticsearch.index.mapper.MultiFieldTests",
     "children": []
    },
    {
     "id": "ID#testNestedFieldNotAllowed(org.elasticsearch.index.mapper.MultiFieldTests)",
     "displayName": "testNestedFieldNotAllowed(org.elasticsearch.index.mapper.MultiFieldTests)",
     "methodName": "testNestedFieldNotAllowed",
     "className": "org.elasticsearch.index.mapper.MultiFieldTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047263835
 }
]

[
 "TEST_STARTED",
 "ID#testBuildThenParse(org.elasticsearch.index.mapper.MultiFieldTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:24,013][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:24,045][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:24,045][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:24,049][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:24,060][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:24,061][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:24,184][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:24,185][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:24,185][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[82]}, bound_addresses {local[82]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:24,194][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{9ehsplYqSB-gQzsdeyqnjA}{rb5pu0SOSXye2R8Ej_qE-Q}{local}{local[82]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:24,195][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:24,230][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:24,246][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:24,340][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:24,359][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [MultiFieldTests#testBuildThenParse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuildThenParse(org.elasticsearch.index.mapper.MultiFieldTests)",
  "startTimestamp": 1474047263881,
  "executionTime": 517
 }
]

[
 "TEST_STARTED",
 "ID#testMultiFieldsInConsistentOrder(org.elasticsearch.index.mapper.MultiFieldTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:24,410][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:24,485][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:24,497][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [MultiFieldTests#testMultiFieldsInConsistentOrder]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiFieldsInConsistentOrder(org.elasticsearch.index.mapper.MultiFieldTests)",
  "startTimestamp": 1474047264398,
  "executionTime": 143
 }
]

[
 "TEST_STARTED",
 "ID#testMultiFieldMultiFields(org.elasticsearch.index.mapper.MultiFieldTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:24,548][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:24,620][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:24,640][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [MultiFieldTests#testMultiFieldMultiFields]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiFieldMultiFields(org.elasticsearch.index.mapper.MultiFieldTests)",
  "startTimestamp": 1474047264541,
  "executionTime": 168
 }
]

[
 "TEST_STARTED",
 "ID#testObjectFieldNotAllowed(org.elasticsearch.index.mapper.MultiFieldTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:24,718][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:24,796][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:24,830][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [MultiFieldTests#testObjectFieldNotAllowed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testObjectFieldNotAllowed(org.elasticsearch.index.mapper.MultiFieldTests)",
  "startTimestamp": 1474047264709,
  "executionTime": 153
 }
]

[
 "TEST_STARTED",
 "ID#testMultiFieldWithDot(org.elasticsearch.index.mapper.MultiFieldTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:24,868][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:24,923][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:24,935][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [MultiFieldTests#testMultiFieldWithDot]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiFieldWithDot(org.elasticsearch.index.mapper.MultiFieldTests)",
  "startTimestamp": 1474047264862,
  "executionTime": 101
 }
]

[
 "TEST_STARTED",
 "ID#testNestedFieldNotAllowed(org.elasticsearch.index.mapper.MultiFieldTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:24,971][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:25,041][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:25,054][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [MultiFieldTests#testNestedFieldNotAllowed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedFieldNotAllowed(org.elasticsearch.index.mapper.MultiFieldTests)",
  "startTimestamp": 1474047264963,
  "executionTime": 184
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:25,147][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:25,147][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:25,148][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:25,149][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.MultiFieldTests",
  "startTimestamp": 1474047263835,
  "executionTime": 1333
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests",
   "displayName": "org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests",
   "children": [
    {
     "id": "ID#testTaskCancellationOnCoordinatingNodeLeavingTheCluster(org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests)",
     "displayName": "testTaskCancellationOnCoordinatingNodeLeavingTheCluster(org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests)",
     "methodName": "testTaskCancellationOnCoordinatingNodeLeavingTheCluster",
     "className": "org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests",
     "children": []
    },
    {
     "id": "ID#testBasicTaskCancellation(org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests)",
     "displayName": "testBasicTaskCancellation(org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests)",
     "methodName": "testBasicTaskCancellation",
     "className": "org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047265196
 }
]

[
 "TEST_STARTED",
 "ID#testTaskCancellationOnCoordinatingNodeLeavingTheCluster(org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,290][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{B8TGl5B2QOWfxrIsMrdWtQ}{local}{local[345]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,292][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[83]}, bound_addresses {local[83]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,315][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{SwF1DSjRSSuHvb0emI0Auw}{local}{local[346]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,320][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[84]}, bound_addresses {local[84]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,329][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{ITPgo6qnR5m7W0thn3oYNA}{local}{local[347]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,331][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[85]}, bound_addresses {local[85]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,348][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{JAlMcTeGRByCHAG7UbJ9Vg}{local}{local[348]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,350][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[86]}, bound_addresses {local[86]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,354][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{9npJ_ACPTyeZG0Kryjwypw}{local}{local[349]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,356][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[87]}, bound_addresses {local[87]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,359][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{8gnmorsRRayjLVv3WSobgA}{local}{local[350]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,361][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[88]}, bound_addresses {local[88]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,372][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{L_Cnq8skR3W5YvQhb5_rZw}{local}{local[351]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,373][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[89]}, bound_addresses {local[89]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,374][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{aEDnYOkfScqC8eg5WaMsNg}{local}{local[83]}, previous {node}{B8TGl5B2QOWfxrIsMrdWtQ}{local}{local[345]}}, removed {{node}{B8TGl5B2QOWfxrIsMrdWtQ}{local}{local[345]},}, added {{node1}{KYL_Zs5eT4C9UsqYWnpFLg}{local}{local[84]},{node3}{fWDj9hXVT2mWk4OK1vJC-w}{local}{local[86]},{node2}{5kI4bAT6RkWCrYFoU766uA}{local}{local[85]},{node5}{QFRp2WqLTRqqls4v3yJOPA}{local}{local[88]},{node6}{N3uuiy5kSeK0UcUHsl3RAQ}{local}{local[89]},{node4}{0fYVmZuESDOgoeSx0eEEng}{local}{local[87]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,375][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{aEDnYOkfScqC8eg5WaMsNg}{local}{local[83]}, previous {node}{SwF1DSjRSSuHvb0emI0Auw}{local}{local[346]}}, removed {{node}{SwF1DSjRSSuHvb0emI0Auw}{local}{local[346]},}, added {{node6}{N3uuiy5kSeK0UcUHsl3RAQ}{local}{local[89]},{node2}{5kI4bAT6RkWCrYFoU766uA}{local}{local[85]},{node5}{QFRp2WqLTRqqls4v3yJOPA}{local}{local[88]},{node4}{0fYVmZuESDOgoeSx0eEEng}{local}{local[87]},{node3}{fWDj9hXVT2mWk4OK1vJC-w}{local}{local[86]},{node0}{aEDnYOkfScqC8eg5WaMsNg}{local}{local[83]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,375][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{aEDnYOkfScqC8eg5WaMsNg}{local}{local[83]}, previous {node}{ITPgo6qnR5m7W0thn3oYNA}{local}{local[347]}}, removed {{node}{ITPgo6qnR5m7W0thn3oYNA}{local}{local[347]},}, added {{node3}{fWDj9hXVT2mWk4OK1vJC-w}{local}{local[86]},{node1}{KYL_Zs5eT4C9UsqYWnpFLg}{local}{local[84]},{node4}{0fYVmZuESDOgoeSx0eEEng}{local}{local[87]},{node0}{aEDnYOkfScqC8eg5WaMsNg}{local}{local[83]},{node6}{N3uuiy5kSeK0UcUHsl3RAQ}{local}{local[89]},{node5}{QFRp2WqLTRqqls4v3yJOPA}{local}{local[88]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,376][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{aEDnYOkfScqC8eg5WaMsNg}{local}{local[83]}, previous {node}{JAlMcTeGRByCHAG7UbJ9Vg}{local}{local[348]}}, removed {{node}{JAlMcTeGRByCHAG7UbJ9Vg}{local}{local[348]},}, added {{node2}{5kI4bAT6RkWCrYFoU766uA}{local}{local[85]},{node1}{KYL_Zs5eT4C9UsqYWnpFLg}{local}{local[84]},{node5}{QFRp2WqLTRqqls4v3yJOPA}{local}{local[88]},{node6}{N3uuiy5kSeK0UcUHsl3RAQ}{local}{local[89]},{node4}{0fYVmZuESDOgoeSx0eEEng}{local}{local[87]},{node0}{aEDnYOkfScqC8eg5WaMsNg}{local}{local[83]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,376][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{aEDnYOkfScqC8eg5WaMsNg}{local}{local[83]}, previous {node}{9npJ_ACPTyeZG0Kryjwypw}{local}{local[349]}}, removed {{node}{9npJ_ACPTyeZG0Kryjwypw}{local}{local[349]},}, added {{node5}{QFRp2WqLTRqqls4v3yJOPA}{local}{local[88]},{node6}{N3uuiy5kSeK0UcUHsl3RAQ}{local}{local[89]},{node1}{KYL_Zs5eT4C9UsqYWnpFLg}{local}{local[84]},{node2}{5kI4bAT6RkWCrYFoU766uA}{local}{local[85]},{node3}{fWDj9hXVT2mWk4OK1vJC-w}{local}{local[86]},{node0}{aEDnYOkfScqC8eg5WaMsNg}{local}{local[83]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,377][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{aEDnYOkfScqC8eg5WaMsNg}{local}{local[83]}, previous {node}{8gnmorsRRayjLVv3WSobgA}{local}{local[350]}}, removed {{node}{8gnmorsRRayjLVv3WSobgA}{local}{local[350]},}, added {{node2}{5kI4bAT6RkWCrYFoU766uA}{local}{local[85]},{node3}{fWDj9hXVT2mWk4OK1vJC-w}{local}{local[86]},{node4}{0fYVmZuESDOgoeSx0eEEng}{local}{local[87]},{node6}{N3uuiy5kSeK0UcUHsl3RAQ}{local}{local[89]},{node1}{KYL_Zs5eT4C9UsqYWnpFLg}{local}{local[84]},{node0}{aEDnYOkfScqC8eg5WaMsNg}{local}{local[83]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,377][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{aEDnYOkfScqC8eg5WaMsNg}{local}{local[83]}, previous {node}{L_Cnq8skR3W5YvQhb5_rZw}{local}{local[351]}}, removed {{node}{L_Cnq8skR3W5YvQhb5_rZw}{local}{local[351]},}, added {{node0}{aEDnYOkfScqC8eg5WaMsNg}{local}{local[83]},{node4}{0fYVmZuESDOgoeSx0eEEng}{local}{local[87]},{node3}{fWDj9hXVT2mWk4OK1vJC-w}{local}{local[86]},{node2}{5kI4bAT6RkWCrYFoU766uA}{local}{local[85]},{node5}{QFRp2WqLTRqqls4v3yJOPA}{local}{local[88]},{node1}{KYL_Zs5eT4C9UsqYWnpFLg}{local}{local[84]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,389][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node0] should block: [false]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,394][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node1] should block: [false]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,395][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node2] should block: [false]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,395][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node3] should block: [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,396][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node4] should block: [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,396][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node5] should block: [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,397][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node6] should block: [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,403][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Awaiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,412][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Done waiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,428][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node1}{KYL_Zs5eT4C9UsqYWnpFLg}{local}{local[84]}, previous {node0}{aEDnYOkfScqC8eg5WaMsNg}{local}{local[83]}}, removed {{node0}{aEDnYOkfScqC8eg5WaMsNg}{local}{local[83]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,428][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node1}{KYL_Zs5eT4C9UsqYWnpFLg}{local}{local[84]}, previous {node0}{aEDnYOkfScqC8eg5WaMsNg}{local}{local[83]}}, removed {{node0}{aEDnYOkfScqC8eg5WaMsNg}{local}{local[83]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,428][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node1}{KYL_Zs5eT4C9UsqYWnpFLg}{local}{local[84]}, previous {node0}{aEDnYOkfScqC8eg5WaMsNg}{local}{local[83]}}, removed {{node0}{aEDnYOkfScqC8eg5WaMsNg}{local}{local[83]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,429][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node1}{KYL_Zs5eT4C9UsqYWnpFLg}{local}{local[84]}, previous {node0}{aEDnYOkfScqC8eg5WaMsNg}{local}{local[83]}}, removed {{node0}{aEDnYOkfScqC8eg5WaMsNg}{local}{local[83]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,429][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node1}{KYL_Zs5eT4C9UsqYWnpFLg}{local}{local[84]}, previous {node0}{aEDnYOkfScqC8eg5WaMsNg}{local}{local[83]}}, removed {{node0}{aEDnYOkfScqC8eg5WaMsNg}{local}{local[83]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,429][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node1}{KYL_Zs5eT4C9UsqYWnpFLg}{local}{local[84]}, previous {node0}{aEDnYOkfScqC8eg5WaMsNg}{local}{local[83]}}, removed {{node0}{aEDnYOkfScqC8eg5WaMsNg}{local}{local[83]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTaskCancellationOnCoordinatingNodeLeavingTheCluster(org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests)",
  "startTimestamp": 1474047265235,
  "executionTime": 199
 }
]

[
 "TEST_STARTED",
 "ID#testBasicTaskCancellation(org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,450][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{cHLQ-auLRx2YvAe6bvB8aw}{local}{local[352]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,451][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[90]}, bound_addresses {local[90]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,456][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{TcqKdyj4RWCbFEHN5NxVdw}{local}{local[353]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,457][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[91]}, bound_addresses {local[91]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,460][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{BsaxE_qiSlSQJGlqOleqpQ}{local}{local[354]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,461][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[92]}, bound_addresses {local[92]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,465][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{98hZx6eiQLKalDGif6sFcQ}{local}{local[355]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,466][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[93]}, bound_addresses {local[93]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,470][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{ruZyHhYJQBeghp0gdzy2cQ}{local}{local[356]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,471][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[94]}, bound_addresses {local[94]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,475][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{k1t3ximiTgS5McijdKZ3oA}{local}{local[357]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,476][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[95]}, bound_addresses {local[95]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,477][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{3LzjG4fbTJulYOX6kYvpTg}{local}{local[90]}, previous {node}{cHLQ-auLRx2YvAe6bvB8aw}{local}{local[352]}}, removed {{node}{cHLQ-auLRx2YvAe6bvB8aw}{local}{local[352]},}, added {{node3}{B-pjGfa8QQq7OX7sgUbcsQ}{local}{local[93]},{node4}{ZBu00OJmTvKFRNi_mRjGdw}{local}{local[94]},{node5}{Zpya7P6oSVOR0456V3vVnw}{local}{local[95]},{node2}{3M5pEJ65Tqa0-DzsQOFQgA}{local}{local[92]},{node1}{n20E9HBaTui7KfNKZX7rQw}{local}{local[91]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,478][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{3LzjG4fbTJulYOX6kYvpTg}{local}{local[90]}, previous {node}{TcqKdyj4RWCbFEHN5NxVdw}{local}{local[353]}}, removed {{node}{TcqKdyj4RWCbFEHN5NxVdw}{local}{local[353]},}, added {{node3}{B-pjGfa8QQq7OX7sgUbcsQ}{local}{local[93]},{node4}{ZBu00OJmTvKFRNi_mRjGdw}{local}{local[94]},{node5}{Zpya7P6oSVOR0456V3vVnw}{local}{local[95]},{node2}{3M5pEJ65Tqa0-DzsQOFQgA}{local}{local[92]},{node0}{3LzjG4fbTJulYOX6kYvpTg}{local}{local[90]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,479][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{3LzjG4fbTJulYOX6kYvpTg}{local}{local[90]}, previous {node}{BsaxE_qiSlSQJGlqOleqpQ}{local}{local[354]}}, removed {{node}{BsaxE_qiSlSQJGlqOleqpQ}{local}{local[354]},}, added {{node3}{B-pjGfa8QQq7OX7sgUbcsQ}{local}{local[93]},{node4}{ZBu00OJmTvKFRNi_mRjGdw}{local}{local[94]},{node5}{Zpya7P6oSVOR0456V3vVnw}{local}{local[95]},{node0}{3LzjG4fbTJulYOX6kYvpTg}{local}{local[90]},{node1}{n20E9HBaTui7KfNKZX7rQw}{local}{local[91]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,480][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{3LzjG4fbTJulYOX6kYvpTg}{local}{local[90]}, previous {node}{98hZx6eiQLKalDGif6sFcQ}{local}{local[355]}}, removed {{node}{98hZx6eiQLKalDGif6sFcQ}{local}{local[355]},}, added {{node4}{ZBu00OJmTvKFRNi_mRjGdw}{local}{local[94]},{node5}{Zpya7P6oSVOR0456V3vVnw}{local}{local[95]},{node2}{3M5pEJ65Tqa0-DzsQOFQgA}{local}{local[92]},{node0}{3LzjG4fbTJulYOX6kYvpTg}{local}{local[90]},{node1}{n20E9HBaTui7KfNKZX7rQw}{local}{local[91]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,481][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{3LzjG4fbTJulYOX6kYvpTg}{local}{local[90]}, previous {node}{ruZyHhYJQBeghp0gdzy2cQ}{local}{local[356]}}, removed {{node}{ruZyHhYJQBeghp0gdzy2cQ}{local}{local[356]},}, added {{node3}{B-pjGfa8QQq7OX7sgUbcsQ}{local}{local[93]},{node5}{Zpya7P6oSVOR0456V3vVnw}{local}{local[95]},{node2}{3M5pEJ65Tqa0-DzsQOFQgA}{local}{local[92]},{node0}{3LzjG4fbTJulYOX6kYvpTg}{local}{local[90]},{node1}{n20E9HBaTui7KfNKZX7rQw}{local}{local[91]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,482][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{3LzjG4fbTJulYOX6kYvpTg}{local}{local[90]}, previous {node}{k1t3ximiTgS5McijdKZ3oA}{local}{local[357]}}, removed {{node}{k1t3ximiTgS5McijdKZ3oA}{local}{local[357]},}, added {{node3}{B-pjGfa8QQq7OX7sgUbcsQ}{local}{local[93]},{node4}{ZBu00OJmTvKFRNi_mRjGdw}{local}{local[94]},{node2}{3M5pEJ65Tqa0-DzsQOFQgA}{local}{local[92]},{node0}{3LzjG4fbTJulYOX6kYvpTg}{local}{local[90]},{node1}{n20E9HBaTui7KfNKZX7rQw}{local}{local[91]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,483][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] waitForActionToStart is set to false%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,484][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node0] should block: [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,484][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node1] should block: [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,485][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node2] should block: [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,485][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node3] should block: [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,486][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node4] should block: [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T04:34:25,487][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node5] should block: [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicTaskCancellation(org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests)",
  "startTimestamp": 1474047265434,
  "executionTime": 126
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests",
  "startTimestamp": 1474047265196,
  "executionTime": 369
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cli.CommandTests",
   "displayName": "org.elasticsearch.cli.CommandTests",
   "methodName": null,
   "className": "org.elasticsearch.cli.CommandTests",
   "children": [
    {
     "id": "ID#testVerbositySilentAndVerbose(org.elasticsearch.cli.CommandTests)",
     "displayName": "testVerbositySilentAndVerbose(org.elasticsearch.cli.CommandTests)",
     "methodName": "testVerbositySilentAndVerbose",
     "className": "org.elasticsearch.cli.CommandTests",
     "children": []
    },
    {
     "id": "ID#testUserError(org.elasticsearch.cli.CommandTests)",
     "displayName": "testUserError(org.elasticsearch.cli.CommandTests)",
     "methodName": "testUserError",
     "className": "org.elasticsearch.cli.CommandTests",
     "children": []
    },
    {
     "id": "ID#testVerboseVerbosity(org.elasticsearch.cli.CommandTests)",
     "displayName": "testVerboseVerbosity(org.elasticsearch.cli.CommandTests)",
     "methodName": "testVerboseVerbosity",
     "className": "org.elasticsearch.cli.CommandTests",
     "children": []
    },
    {
     "id": "ID#testHelp(org.elasticsearch.cli.CommandTests)",
     "displayName": "testHelp(org.elasticsearch.cli.CommandTests)",
     "methodName": "testHelp",
     "className": "org.elasticsearch.cli.CommandTests",
     "children": []
    },
    {
     "id": "ID#testNormalVerbosity(org.elasticsearch.cli.CommandTests)",
     "displayName": "testNormalVerbosity(org.elasticsearch.cli.CommandTests)",
     "methodName": "testNormalVerbosity",
     "className": "org.elasticsearch.cli.CommandTests",
     "children": []
    },
    {
     "id": "ID#testUsageError(org.elasticsearch.cli.CommandTests)",
     "displayName": "testUsageError(org.elasticsearch.cli.CommandTests)",
     "methodName": "testUsageError",
     "className": "org.elasticsearch.cli.CommandTests",
     "children": []
    },
    {
     "id": "ID#testSilentVerbosity(org.elasticsearch.cli.CommandTests)",
     "displayName": "testSilentVerbosity(org.elasticsearch.cli.CommandTests)",
     "methodName": "testSilentVerbosity",
     "className": "org.elasticsearch.cli.CommandTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047265574
 }
]

[
 "TEST_STARTED",
 "ID#testVerbositySilentAndVerbose(org.elasticsearch.cli.CommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVerbositySilentAndVerbose(org.elasticsearch.cli.CommandTests)",
  "startTimestamp": 1474047265601,
  "executionTime": 130
 }
]

[
 "TEST_STARTED",
 "ID#testUserError(org.elasticsearch.cli.CommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUserError(org.elasticsearch.cli.CommandTests)",
  "startTimestamp": 1474047265732,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testVerboseVerbosity(org.elasticsearch.cli.CommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVerboseVerbosity(org.elasticsearch.cli.CommandTests)",
  "startTimestamp": 1474047265736,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testHelp(org.elasticsearch.cli.CommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHelp(org.elasticsearch.cli.CommandTests)",
  "startTimestamp": 1474047265740,
  "executionTime": 98
 }
]

[
 "TEST_STARTED",
 "ID#testNormalVerbosity(org.elasticsearch.cli.CommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalVerbosity(org.elasticsearch.cli.CommandTests)",
  "startTimestamp": 1474047265838,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUsageError(org.elasticsearch.cli.CommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUsageError(org.elasticsearch.cli.CommandTests)",
  "startTimestamp": 1474047265841,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testSilentVerbosity(org.elasticsearch.cli.CommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSilentVerbosity(org.elasticsearch.cli.CommandTests)",
  "startTimestamp": 1474047265848,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cli.CommandTests",
  "startTimestamp": 1474047265574,
  "executionTime": 280
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.hash.MessageDigestsTests",
   "displayName": "org.elasticsearch.common.hash.MessageDigestsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.hash.MessageDigestsTests",
   "children": [
    {
     "id": "ID#testSha256(org.elasticsearch.common.hash.MessageDigestsTests)",
     "displayName": "testSha256(org.elasticsearch.common.hash.MessageDigestsTests)",
     "methodName": "testSha256",
     "className": "org.elasticsearch.common.hash.MessageDigestsTests",
     "children": []
    },
    {
     "id": "ID#testSha1(org.elasticsearch.common.hash.MessageDigestsTests)",
     "displayName": "testSha1(org.elasticsearch.common.hash.MessageDigestsTests)",
     "methodName": "testSha1",
     "className": "org.elasticsearch.common.hash.MessageDigestsTests",
     "children": []
    },
    {
     "id": "ID#testToHexString(org.elasticsearch.common.hash.MessageDigestsTests)",
     "displayName": "testToHexString(org.elasticsearch.common.hash.MessageDigestsTests)",
     "methodName": "testToHexString",
     "className": "org.elasticsearch.common.hash.MessageDigestsTests",
     "children": []
    },
    {
     "id": "ID#testMd5(org.elasticsearch.common.hash.MessageDigestsTests)",
     "displayName": "testMd5(org.elasticsearch.common.hash.MessageDigestsTests)",
     "methodName": "testMd5",
     "className": "org.elasticsearch.common.hash.MessageDigestsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047265860
 }
]

[
 "TEST_STARTED",
 "ID#testSha256(org.elasticsearch.common.hash.MessageDigestsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSha256(org.elasticsearch.common.hash.MessageDigestsTests)",
  "startTimestamp": 1474047265912,
  "executionTime": 223
 }
]

[
 "TEST_STARTED",
 "ID#testSha1(org.elasticsearch.common.hash.MessageDigestsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSha1(org.elasticsearch.common.hash.MessageDigestsTests)",
  "startTimestamp": 1474047266135,
  "executionTime": 159
 }
]

[
 "TEST_STARTED",
 "ID#testToHexString(org.elasticsearch.common.hash.MessageDigestsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToHexString(org.elasticsearch.common.hash.MessageDigestsTests)",
  "startTimestamp": 1474047266294,
  "executionTime": 85
 }
]

[
 "TEST_STARTED",
 "ID#testMd5(org.elasticsearch.common.hash.MessageDigestsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMd5(org.elasticsearch.common.hash.MessageDigestsTests)",
  "startTimestamp": 1474047266379,
  "executionTime": 138
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.hash.MessageDigestsTests",
  "startTimestamp": 1474047265860,
  "executionTime": 659
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.deps.jackson.JacksonLocationTests",
   "displayName": "org.elasticsearch.deps.jackson.JacksonLocationTests",
   "methodName": null,
   "className": "org.elasticsearch.deps.jackson.JacksonLocationTests",
   "children": [
    {
     "id": "ID#testLocationExtraction(org.elasticsearch.deps.jackson.JacksonLocationTests)",
     "displayName": "testLocationExtraction(org.elasticsearch.deps.jackson.JacksonLocationTests)",
     "methodName": "testLocationExtraction",
     "className": "org.elasticsearch.deps.jackson.JacksonLocationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047266525
 }
]

[
 "TEST_STARTED",
 "ID#testLocationExtraction(org.elasticsearch.deps.jackson.JacksonLocationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLocationExtraction(org.elasticsearch.deps.jackson.JacksonLocationTests)",
  "startTimestamp": 1474047266540,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.deps.jackson.JacksonLocationTests",
  "startTimestamp": 1474047266525,
  "executionTime": 19
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.PreferLocalPrimariesToRelocatingPrimariesTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.PreferLocalPrimariesToRelocatingPrimariesTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.PreferLocalPrimariesToRelocatingPrimariesTests",
   "children": [
    {
     "id": "ID#testPreferLocalPrimaryAllocationOverFiltered(org.elasticsearch.cluster.routing.allocation.PreferLocalPrimariesToRelocatingPrimariesTests)",
     "displayName": "testPreferLocalPrimaryAllocationOverFiltered(org.elasticsearch.cluster.routing.allocation.PreferLocalPrimariesToRelocatingPrimariesTests)",
     "methodName": "testPreferLocalPrimaryAllocationOverFiltered",
     "className": "org.elasticsearch.cluster.routing.allocation.PreferLocalPrimariesToRelocatingPrimariesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047266550
 }
]

[
 "TEST_STARTED",
 "ID#testPreferLocalPrimaryAllocationOverFiltered(org.elasticsearch.cluster.routing.allocation.PreferLocalPrimariesToRelocatingPrimariesTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:26,571][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] create an allocation with [9] initial primary recoveries and [1] concurrent recoveries%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:26,577][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] create 2 indices with [11] no replicas, and wait till all are allocated%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:26,578][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding two nodes and performing rerouting till all are allocated%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:26,581][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][7], [test1][9], [test1][10], [test1][8]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:26,581][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] remove one of the nodes and apply filter to move everything from another node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:26,582][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:26,582][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] [11] primaries should be still started but [11] other primaries should be unassigned%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:26,583][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start node back up%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:26,584][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [9], relocating: [0], need to initialize: 11%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:26,585][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [9], relocating: [0], need to initialize: 10%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:26,587][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [9], relocating: [0], need to initialize: 9%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:26,591][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [8], relocating: [0], need to initialize: 8%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:26,592][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [7], relocating: [0], need to initialize: 7%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:26,593][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [6], relocating: [0], need to initialize: 6%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:26,594][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [5], relocating: [0], need to initialize: 5%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:26,595][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [4], relocating: [0], need to initialize: 4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:26,596][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [3], relocating: [0], need to initialize: 3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:26,597][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [2], relocating: [0], need to initialize: 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:26,598][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [1], relocating: [0], need to initialize: 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:26,600][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test1][6]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:26,601][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [0], relocating: [1], need to initialize: 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:26,607][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [0], relocating: [1], need to initialize: 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:26,608][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [0], relocating: [1], need to initialize: 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:26,610][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [0], relocating: [1], need to initialize: 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:26,614][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [0], relocating: [1], need to initialize: 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:26,615][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [0], relocating: [1], need to initialize: 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:26,617][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [0], relocating: [1], need to initialize: 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:26,624][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [0], relocating: [1], need to initialize: 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:26,626][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [0], relocating: [1], need to initialize: 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:26,628][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [0], relocating: [1], need to initialize: 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:26,629][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [0], relocating: [1], need to initialize: 0%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreferLocalPrimaryAllocationOverFiltered(org.elasticsearch.cluster.routing.allocation.PreferLocalPrimariesToRelocatingPrimariesTests)",
  "startTimestamp": 1474047266569,
  "executionTime": 61
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.PreferLocalPrimariesToRelocatingPrimariesTests",
  "startTimestamp": 1474047266550,
  "executionTime": 82
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.GeoFieldDataTests",
   "displayName": "org.elasticsearch.index.fielddata.GeoFieldDataTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.GeoFieldDataTests",
   "children": [
    {
     "id": "ID#testMultiValueAllSet(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "displayName": "testMultiValueAllSet(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "methodName": "testMultiValueAllSet",
     "className": "org.elasticsearch.index.fielddata.GeoFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testMultiValueWithMissing(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "displayName": "testMultiValueWithMissing(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "methodName": "testMultiValueWithMissing",
     "className": "org.elasticsearch.index.fielddata.GeoFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testDeletedDocs(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "displayName": "testDeletedDocs(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "methodName": "testDeletedDocs",
     "className": "org.elasticsearch.index.fielddata.GeoFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "displayName": "testSortMultiValuesFields(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "methodName": "testSortMultiValuesFields",
     "className": "org.elasticsearch.index.fielddata.GeoFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSingleValueWithMissing(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "displayName": "testSingleValueWithMissing(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "methodName": "testSingleValueWithMissing",
     "className": "org.elasticsearch.index.fielddata.GeoFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSingleValueAllSet(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "displayName": "testSingleValueAllSet(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "methodName": "testSingleValueAllSet",
     "className": "org.elasticsearch.index.fielddata.GeoFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "displayName": "testEmpty(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.index.fielddata.GeoFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testMissingValueForAll(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "displayName": "testMissingValueForAll(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "methodName": "testMissingValueForAll",
     "className": "org.elasticsearch.index.fielddata.GeoFieldDataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047266643
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValueAllSet(org.elasticsearch.index.fielddata.GeoFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:26,687][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:26,713][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:26,713][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:26,719][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:26,722][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:26,722][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:26,834][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:26,834][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:26,835][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[96]}, bound_addresses {local[96]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:26,836][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{cVn0q7CPQcWLdV-M0kHs5g}{veY3Cm0IRbiPyieazGejKQ}{local}{local[96]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:26,837][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:26,860][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:26,878][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:26,953][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:26,993][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [GeoFieldDataTests#testMultiValueAllSet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValueAllSet(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
  "startTimestamp": 1474047266679,
  "executionTime": 350
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValueWithMissing(org.elasticsearch.index.fielddata.GeoFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:27,043][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:27,237][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:27,285][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [GeoFieldDataTests#testMultiValueWithMissing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValueWithMissing(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
  "startTimestamp": 1474047267029,
  "executionTime": 306
 }
]

[
 "TEST_STARTED",
 "ID#testDeletedDocs(org.elasticsearch.index.fielddata.GeoFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:27,347][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:27,440][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:27,467][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [GeoFieldDataTests#testDeletedDocs]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeletedDocs(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
  "startTimestamp": 1474047267335,
  "executionTime": 177
 }
]

[
 "TEST_STARTED",
 "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.GeoFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:27,525][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:27,590][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:27,612][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [GeoFieldDataTests#testSortMultiValuesFields]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
  "message": "Only test on non geo_point fields",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: Only test on non geo_point fields\r\n\tat __randomizedtesting.SeedInfo.seed([229C635BFFC33CB2:74FA61D5348DF2A4]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeFalse(RandomizedTest.java:635)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeFalse(LuceneTestCase.java:849)\r\n\tat org.elasticsearch.index.fielddata.AbstractGeoFieldDataTestCase.testSortMultiValuesFields(AbstractGeoFieldDataTestCase.java:88)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: Only test on non geo_point fields",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
  "startTimestamp": 1474047267512,
  "executionTime": 143
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValueWithMissing(org.elasticsearch.index.fielddata.GeoFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:27,669][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:27,736][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:27,761][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [GeoFieldDataTests#testSingleValueWithMissing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValueWithMissing(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
  "startTimestamp": 1474047267655,
  "executionTime": 250
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValueAllSet(org.elasticsearch.index.fielddata.GeoFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:27,911][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:27,972][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:27,992][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [GeoFieldDataTests#testSingleValueAllSet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValueAllSet(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
  "startTimestamp": 1474047267905,
  "executionTime": 121
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.index.fielddata.GeoFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:28,033][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:28,082][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:28,095][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [GeoFieldDataTests#testEmpty]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
  "startTimestamp": 1474047268026,
  "executionTime": 92
 }
]

[
 "TEST_STARTED",
 "ID#testMissingValueForAll(org.elasticsearch.index.fielddata.GeoFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:28,125][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:28,170][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:28,184][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [GeoFieldDataTests#testMissingValueForAll]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingValueForAll(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
  "startTimestamp": 1474047268119,
  "executionTime": 84
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:28,204][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:28,204][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:28,204][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:34:28,205][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.GeoFieldDataTests",
  "startTimestamp": 1474047266643,
  "executionTime": 1568
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.RoutingTableTests",
   "displayName": "org.elasticsearch.cluster.routing.RoutingTableTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.RoutingTableTests",
   "children": [
    {
     "id": "ID#testAllShardsForMultipleIndices(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "displayName": "testAllShardsForMultipleIndices(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "methodName": "testAllShardsForMultipleIndices",
     "className": "org.elasticsearch.cluster.routing.RoutingTableTests",
     "children": []
    },
    {
     "id": "ID#testValidations(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "displayName": "testValidations(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "methodName": "testValidations",
     "className": "org.elasticsearch.cluster.routing.RoutingTableTests",
     "children": []
    },
    {
     "id": "ID#testShardsWithState(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "displayName": "testShardsWithState(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "methodName": "testShardsWithState",
     "className": "org.elasticsearch.cluster.routing.RoutingTableTests",
     "children": []
    },
    {
     "id": "ID#testHasIndex(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "displayName": "testHasIndex(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "methodName": "testHasIndex",
     "className": "org.elasticsearch.cluster.routing.RoutingTableTests",
     "children": []
    },
    {
     "id": "ID#testIndex(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "displayName": "testIndex(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "methodName": "testIndex",
     "className": "org.elasticsearch.cluster.routing.RoutingTableTests",
     "children": []
    },
    {
     "id": "ID#testAllShards(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "displayName": "testAllShards(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "methodName": "testAllShards",
     "className": "org.elasticsearch.cluster.routing.RoutingTableTests",
     "children": []
    },
    {
     "id": "ID#testRoutingTableBuiltMoreThanOnce(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "displayName": "testRoutingTableBuiltMoreThanOnce(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "methodName": "testRoutingTableBuiltMoreThanOnce",
     "className": "org.elasticsearch.cluster.routing.RoutingTableTests",
     "children": []
    },
    {
     "id": "ID#testAllActiveShardsGrouped(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "displayName": "testAllActiveShardsGrouped(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "methodName": "testAllActiveShardsGrouped",
     "className": "org.elasticsearch.cluster.routing.RoutingTableTests",
     "children": []
    },
    {
     "id": "ID#testAllAssignedShardsGrouped(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "displayName": "testAllAssignedShardsGrouped(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "methodName": "testAllAssignedShardsGrouped",
     "className": "org.elasticsearch.cluster.routing.RoutingTableTests",
     "children": []
    },
    {
     "id": "ID#testIndicesRouting(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "displayName": "testIndicesRouting(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "methodName": "testIndicesRouting",
     "className": "org.elasticsearch.cluster.routing.RoutingTableTests",
     "children": []
    },
    {
     "id": "ID#testActivePrimaryShardsGrouped(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "displayName": "testActivePrimaryShardsGrouped(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "methodName": "testActivePrimaryShardsGrouped",
     "className": "org.elasticsearch.cluster.routing.RoutingTableTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047268216
 }
]

[
 "TEST_STARTED",
 "ID#testAllShardsForMultipleIndices(org.elasticsearch.cluster.routing.RoutingTableTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:28,233][INFO ][org.elasticsearch.cluster.routing] [node_s_0] Setup test with 3 shards and 4 replicas.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:28,236][INFO ][org.elasticsearch.cluster.routing] [node_s_0] adding 5 nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:28,238][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index test1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:28,239][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index test2%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllShardsForMultipleIndices(org.elasticsearch.cluster.routing.RoutingTableTests)",
  "startTimestamp": 1474047268226,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testValidations(org.elasticsearch.cluster.routing.RoutingTableTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:28,247][INFO ][org.elasticsearch.cluster.routing] [node_s_0] Setup test with 3 shards and 2 replicas.%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidations(org.elasticsearch.cluster.routing.RoutingTableTests)",
  "startTimestamp": 1474047268240,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testShardsWithState(org.elasticsearch.cluster.routing.RoutingTableTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:28,263][INFO ][org.elasticsearch.cluster.routing] [node_s_0] Setup test with 1 shards and 2 replicas.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:28,264][INFO ][org.elasticsearch.cluster.routing] [node_s_0] adding 3 nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:28,264][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index test1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:28,265][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index test2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:28,265][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index test1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:28,266][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index test2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:28,266][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0], [test2][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardsWithState(org.elasticsearch.cluster.routing.RoutingTableTests)",
  "startTimestamp": 1474047268256,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testHasIndex(org.elasticsearch.cluster.routing.RoutingTableTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:28,274][INFO ][org.elasticsearch.cluster.routing] [node_s_0] Setup test with 4 shards and 1 replicas.%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasIndex(org.elasticsearch.cluster.routing.RoutingTableTests)",
  "startTimestamp": 1474047268267,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testIndex(org.elasticsearch.cluster.routing.RoutingTableTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:28,280][INFO ][org.elasticsearch.cluster.routing] [node_s_0] Setup test with 5 shards and 4 replicas.%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndex(org.elasticsearch.cluster.routing.RoutingTableTests)",
  "startTimestamp": 1474047268274,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testAllShards(org.elasticsearch.cluster.routing.RoutingTableTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:28,287][INFO ][org.elasticsearch.cluster.routing] [node_s_0] Setup test with 3 shards and 1 replicas.%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllShards(org.elasticsearch.cluster.routing.RoutingTableTests)",
  "startTimestamp": 1474047268281,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testRoutingTableBuiltMoreThanOnce(org.elasticsearch.cluster.routing.RoutingTableTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:28,305][INFO ][org.elasticsearch.cluster.routing] [node_s_0] Setup test with 1 shards and 4 replicas.%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoutingTableBuiltMoreThanOnce(org.elasticsearch.cluster.routing.RoutingTableTests)",
  "startTimestamp": 1474047268287,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testAllActiveShardsGrouped(org.elasticsearch.cluster.routing.RoutingTableTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:28,314][INFO ][org.elasticsearch.cluster.routing] [node_s_0] Setup test with 3 shards and 1 replicas.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:28,314][INFO ][org.elasticsearch.cluster.routing] [node_s_0] adding 2 nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:28,315][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index test1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:28,315][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index test2%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllActiveShardsGrouped(org.elasticsearch.cluster.routing.RoutingTableTests)",
  "startTimestamp": 1474047268308,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testAllAssignedShardsGrouped(org.elasticsearch.cluster.routing.RoutingTableTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:28,336][INFO ][org.elasticsearch.cluster.routing] [node_s_0] Setup test with 3 shards and 3 replicas.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:28,336][INFO ][org.elasticsearch.cluster.routing] [node_s_0] adding 4 nodes and performing rerouting%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllAssignedShardsGrouped(org.elasticsearch.cluster.routing.RoutingTableTests)",
  "startTimestamp": 1474047268327,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testIndicesRouting(org.elasticsearch.cluster.routing.RoutingTableTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:28,344][INFO ][org.elasticsearch.cluster.routing] [node_s_0] Setup test with 1 shards and 2 replicas.%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndicesRouting(org.elasticsearch.cluster.routing.RoutingTableTests)",
  "startTimestamp": 1474047268339,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testActivePrimaryShardsGrouped(org.elasticsearch.cluster.routing.RoutingTableTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:28,360][INFO ][org.elasticsearch.cluster.routing] [node_s_0] Setup test with 5 shards and 4 replicas.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:28,360][INFO ][org.elasticsearch.cluster.routing] [node_s_0] adding 5 nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:28,378][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index test1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T20:34:28,380][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index test2%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActivePrimaryShardsGrouped(org.elasticsearch.cluster.routing.RoutingTableTests)",
  "startTimestamp": 1474047268345,
  "executionTime": 37
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.RoutingTableTests",
  "startTimestamp": 1474047268216,
  "executionTime": 170
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.rest.action.RestMainActionTests",
   "displayName": "org.elasticsearch.rest.action.RestMainActionTests",
   "methodName": null,
   "className": "org.elasticsearch.rest.action.RestMainActionTests",
   "children": [
    {
     "id": "ID#testHeadResponse(org.elasticsearch.rest.action.RestMainActionTests)",
     "displayName": "testHeadResponse(org.elasticsearch.rest.action.RestMainActionTests)",
     "methodName": "testHeadResponse",
     "className": "org.elasticsearch.rest.action.RestMainActionTests",
     "children": []
    },
    {
     "id": "ID#testGetResponse(org.elasticsearch.rest.action.RestMainActionTests)",
     "displayName": "testGetResponse(org.elasticsearch.rest.action.RestMainActionTests)",
     "methodName": "testGetResponse",
     "className": "org.elasticsearch.rest.action.RestMainActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047268397
 }
]

[
 "TEST_STARTED",
 "ID#testHeadResponse(org.elasticsearch.rest.action.RestMainActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHeadResponse(org.elasticsearch.rest.action.RestMainActionTests)",
  "startTimestamp": 1474047268474,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testGetResponse(org.elasticsearch.rest.action.RestMainActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetResponse(org.elasticsearch.rest.action.RestMainActionTests)",
  "startTimestamp": 1474047268478,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.rest.action.RestMainActionTests",
  "startTimestamp": 1474047268397,
  "executionTime": 84
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.ingest.IngestServiceTests",
   "displayName": "org.elasticsearch.ingest.IngestServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.ingest.IngestServiceTests",
   "children": [
    {
     "id": "ID#testIngestPluginDuplicate(org.elasticsearch.ingest.IngestServiceTests)",
     "displayName": "testIngestPluginDuplicate(org.elasticsearch.ingest.IngestServiceTests)",
     "methodName": "testIngestPluginDuplicate",
     "className": "org.elasticsearch.ingest.IngestServiceTests",
     "children": []
    },
    {
     "id": "ID#testIngestPlugin(org.elasticsearch.ingest.IngestServiceTests)",
     "displayName": "testIngestPlugin(org.elasticsearch.ingest.IngestServiceTests)",
     "methodName": "testIngestPlugin",
     "className": "org.elasticsearch.ingest.IngestServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047268489
 }
]

[
 "TEST_STARTED",
 "ID#testIngestPluginDuplicate(org.elasticsearch.ingest.IngestServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIngestPluginDuplicate(org.elasticsearch.ingest.IngestServiceTests)",
  "startTimestamp": 1474047268546,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testIngestPlugin(org.elasticsearch.ingest.IngestServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIngestPlugin(org.elasticsearch.ingest.IngestServiceTests)",
  "startTimestamp": 1474047268560,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.ingest.IngestServiceTests",
  "startTimestamp": 1474047268489,
  "executionTime": 75
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.SearchModuleTests",
   "displayName": "org.elasticsearch.search.SearchModuleTests",
   "methodName": null,
   "className": "org.elasticsearch.search.SearchModuleTests",
   "children": [
    {
     "id": "ID#testDoubleRegister(org.elasticsearch.search.SearchModuleTests)",
     "displayName": "testDoubleRegister(org.elasticsearch.search.SearchModuleTests)",
     "methodName": "testDoubleRegister",
     "className": "org.elasticsearch.search.SearchModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterPipelineAggregation(org.elasticsearch.search.SearchModuleTests)",
     "displayName": "testRegisterPipelineAggregation(org.elasticsearch.search.SearchModuleTests)",
     "methodName": "testRegisterPipelineAggregation",
     "className": "org.elasticsearch.search.SearchModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterAggregation(org.elasticsearch.search.SearchModuleTests)",
     "displayName": "testRegisterAggregation(org.elasticsearch.search.SearchModuleTests)",
     "methodName": "testRegisterAggregation",
     "className": "org.elasticsearch.search.SearchModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisteredQueries(org.elasticsearch.search.SearchModuleTests)",
     "displayName": "testRegisteredQueries(org.elasticsearch.search.SearchModuleTests)",
     "methodName": "testRegisteredQueries",
     "className": "org.elasticsearch.search.SearchModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterHighlighter(org.elasticsearch.search.SearchModuleTests)",
     "displayName": "testRegisterHighlighter(org.elasticsearch.search.SearchModuleTests)",
     "methodName": "testRegisterHighlighter",
     "className": "org.elasticsearch.search.SearchModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterSuggester(org.elasticsearch.search.SearchModuleTests)",
     "displayName": "testRegisterSuggester(org.elasticsearch.search.SearchModuleTests)",
     "methodName": "testRegisterSuggester",
     "className": "org.elasticsearch.search.SearchModuleTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047268580
 }
]

[
 "TEST_STARTED",
 "ID#testDoubleRegister(org.elasticsearch.search.SearchModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoubleRegister(org.elasticsearch.search.SearchModuleTests)",
  "startTimestamp": 1474047268603,
  "executionTime": 33
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterPipelineAggregation(org.elasticsearch.search.SearchModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterPipelineAggregation(org.elasticsearch.search.SearchModuleTests)",
  "startTimestamp": 1474047268636,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterAggregation(org.elasticsearch.search.SearchModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterAggregation(org.elasticsearch.search.SearchModuleTests)",
  "startTimestamp": 1474047268644,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testRegisteredQueries(org.elasticsearch.search.SearchModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:28,659][WARN ][org.elasticsearch.deprecation.common] Deprecated field [fuzzy_match] used, expected [match] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:28,660][WARN ][org.elasticsearch.deprecation.common] Deprecated field [geo_bbox] used, expected [geo_bounding_box] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:28,660][WARN ][org.elasticsearch.deprecation.common] Deprecated field [in] used, expected [terms] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:28,660][WARN ][org.elasticsearch.deprecation.common] Deprecated field [match_fuzzy] used, expected [match] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:34:28,660][WARN ][org.elasticsearch.deprecation.common] Deprecated field [mlt] used, expected [more_like_this] instead%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisteredQueries(org.elasticsearch.search.SearchModuleTests)",
  "startTimestamp": 1474047268650,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterHighlighter(org.elasticsearch.search.SearchModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterHighlighter(org.elasticsearch.search.SearchModuleTests)",
  "startTimestamp": 1474047268661,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterSuggester(org.elasticsearch.search.SearchModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterSuggester(org.elasticsearch.search.SearchModuleTests)",
  "startTimestamp": 1474047268668,
  "executionTime": 20
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.SearchModuleTests",
  "startTimestamp": 1474047268580,
  "executionTime": 110
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.search.SearchScrollRequestTests",
   "displayName": "org.elasticsearch.action.search.SearchScrollRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.search.SearchScrollRequestTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.action.search.SearchScrollRequestTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.action.search.SearchScrollRequestTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.action.search.SearchScrollRequestTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.action.search.SearchScrollRequestTests)",
     "displayName": "testSerialization(org.elasticsearch.action.search.SearchScrollRequestTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.action.search.SearchScrollRequestTests",
     "children": []
    },
    {
     "id": "ID#testInternalScrollSearchRequestSerialization(org.elasticsearch.action.search.SearchScrollRequestTests)",
     "displayName": "testInternalScrollSearchRequestSerialization(org.elasticsearch.action.search.SearchScrollRequestTests)",
     "methodName": "testInternalScrollSearchRequestSerialization",
     "className": "org.elasticsearch.action.search.SearchScrollRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047268697
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.action.search.SearchScrollRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.action.search.SearchScrollRequestTests)",
  "startTimestamp": 1474047268722,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.action.search.SearchScrollRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.action.search.SearchScrollRequestTests)",
  "startTimestamp": 1474047268725,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testInternalScrollSearchRequestSerialization(org.elasticsearch.action.search.SearchScrollRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInternalScrollSearchRequestSerialization(org.elasticsearch.action.search.SearchScrollRequestTests)",
  "startTimestamp": 1474047268729,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.search.SearchScrollRequestTests",
  "startTimestamp": 1474047268697,
  "executionTime": 37
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.HunspellTokenFilterFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.HunspellTokenFilterFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.HunspellTokenFilterFactoryTests",
   "children": [
    {
     "id": "ID#testDedup(org.elasticsearch.index.analysis.HunspellTokenFilterFactoryTests)",
     "displayName": "testDedup(org.elasticsearch.index.analysis.HunspellTokenFilterFactoryTests)",
     "methodName": "testDedup",
     "className": "org.elasticsearch.index.analysis.HunspellTokenFilterFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047268741
 }
]

[
 "TEST_STARTED",
 "ID#testDedup(org.elasticsearch.index.analysis.HunspellTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDedup(org.elasticsearch.index.analysis.HunspellTokenFilterFactoryTests)",
  "startTimestamp": 1474047268766,
  "executionTime": 3458
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.HunspellTokenFilterFactoryTests",
  "startTimestamp": 1474047268741,
  "executionTime": 3487
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.BooleanFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.BooleanFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.BooleanFieldTypeTests",
   "children": [
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.BooleanFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.BooleanFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testTermQuery(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "displayName": "testTermQuery(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "methodName": "testTermQuery",
     "className": "org.elasticsearch.index.mapper.BooleanFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.BooleanFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.BooleanFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.BooleanFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueFormat(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "displayName": "testValueFormat(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "methodName": "testValueFormat",
     "className": "org.elasticsearch.index.mapper.BooleanFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueForSearch(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "displayName": "testValueForSearch(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "methodName": "testValueForSearch",
     "className": "org.elasticsearch.index.mapper.BooleanFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047272236
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.BooleanFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
  "startTimestamp": 1474047272253,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.BooleanFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
  "startTimestamp": 1474047272255,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testTermQuery(org.elasticsearch.index.mapper.BooleanFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermQuery(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
  "startTimestamp": 1474047272258,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.BooleanFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
  "startTimestamp": 1474047272261,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.BooleanFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
  "startTimestamp": 1474047272263,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.BooleanFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
  "startTimestamp": 1474047272265,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValueFormat(org.elasticsearch.index.mapper.BooleanFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueFormat(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
  "startTimestamp": 1474047272267,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValueForSearch(org.elasticsearch.index.mapper.BooleanFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueForSearch(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
  "startTimestamp": 1474047272269,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.BooleanFieldTypeTests",
  "startTimestamp": 1474047272236,
  "executionTime": 39
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.SignificantTermsTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.SignificantTermsTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.SignificantTermsTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.SignificantTermsTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.SignificantTermsTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.SignificantTermsTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.SignificantTermsTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.SignificantTermsTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.SignificantTermsTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.SignificantTermsTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.SignificantTermsTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.SignificantTermsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047272282
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:34:32,373][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{rxtdzmSpSiiAcMBOROjC1w}{local}{local[380]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.SignificantTermsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.SignificantTermsTests)",
  "startTimestamp": 1474047272383,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.SignificantTermsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.SignificantTermsTests)",
  "startTimestamp": 1474047272387,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.SignificantTermsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.SignificantTermsTests)",
  "startTimestamp": 1474047272404,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.SignificantTermsTests",
  "startTimestamp": 1474047272282,
  "executionTime": 139
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.GenericStoreDynamicTemplateTests",
   "displayName": "org.elasticsearch.index.mapper.GenericStoreDynamicTemplateTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.GenericStoreDynamicTemplateTests",
   "children": [
    {
     "id": "ID#testSimple(org.elasticsearch.index.mapper.GenericStoreDynamicTemplateTests)",
     "displayName": "testSimple(org.elasticsearch.index.mapper.GenericStoreDynamicTemplateTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.index.mapper.GenericStoreDynamicTemplateTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047272426
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.index.mapper.GenericStoreDynamicTemplateTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:32,475][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:32,542][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:32,542][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:32,547][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:32,552][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:32,552][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:32,723][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:32,723][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:32,723][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[97]}, bound_addresses {local[97]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:32,724][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{M4tW3wB-SWyEs3zBmq4I9g}{7py1DG7wRFiQ071k_dJ5ng}{local}{local[97]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:32,725][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:32,736][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:32,753][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:32,807][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:32,818][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/mO4GvzTnQ52paM4nsOMQjg] create_mapping [person]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:32,831][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/mO4GvzTnQ52paM4nsOMQjg] update_mapping [person]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:32,854][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GenericStoreDynamicTemplateTests#testSimple]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.index.mapper.GenericStoreDynamicTemplateTests)",
  "startTimestamp": 1474047272460,
  "executionTime": 423
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:32,883][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:32,887][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:32,887][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T01:34:32,889][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.GenericStoreDynamicTemplateTests",
  "startTimestamp": 1474047272426,
  "executionTime": 469
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.search.geo.GeoUtilsTests",
   "displayName": "org.elasticsearch.index.search.geo.GeoUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
   "children": [
    {
     "id": "ID#testQuadTreeCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testQuadTreeCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testQuadTreeCellHeight",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointLonWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointLonWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointLonWrongType",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLonInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLonInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLonInNormalRange",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointLonNoLat(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointLonNoLat(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointLonNoLat",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizePointEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizePointEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizePointEdgeCases",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizePointOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizePointOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizePointOutsideNormalRange",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testQuadTreeLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testQuadTreeLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testQuadTreeLevelsForPrecision",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizePointInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizePointInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizePointInNormalRange",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointArrayTooManyValues(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointArrayTooManyValues(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointArrayTooManyValues",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizePointOutsideNormalRange_withOptions(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizePointOutsideNormalRange_withOptions(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizePointOutsideNormalRange_withOptions",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointLatNoLon(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointLatNoLon(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointLatNoLon",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testGeoHashLevelsForPrecision_String(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testGeoHashLevelsForPrecision_String(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testGeoHashLevelsForPrecision_String",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointInvalidType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointInvalidType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointInvalidType",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLatOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLatOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLatOutsideNormalRange",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLatHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLatHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLatHuge",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPoint(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPoint(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPoint",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testGeoHashLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testGeoHashLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testGeoHashLevelsForPrecision",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testQuadTreeCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testQuadTreeCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testQuadTreeCellWidth",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testPrefixTreeCellSizes(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testPrefixTreeCellSizes(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testPrefixTreeCellSizes",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointGeohashWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointGeohashWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointGeohashWrongType",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLatEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLatEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLatEdgeCases",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testQuadTreeLevelsForPrecisionString(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testQuadTreeLevelsForPrecisionString(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testQuadTreeLevelsForPrecisionString",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointLatWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointLatWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointLatWrongType",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLonEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLonEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLonEdgeCases",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testQuadTreeCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testQuadTreeCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testQuadTreeCellSize",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointExtraField(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointExtraField(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointExtraField",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointArrayWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointArrayWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointArrayWrongType",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLatInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLatInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLatInNormalRange",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizePointHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizePointHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizePointHuge",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLonOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLonOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLonOutsideNormalRange",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testGeohashCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testGeohashCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testGeohashCellSize",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointLonLatGeoHash(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointLonLatGeoHash(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointLonLatGeoHash",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointGeohash(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointGeohash(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointGeohash",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLonHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLonHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLonHuge",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testGeohashCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testGeohashCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testGeohashCellHeight",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testGeohashCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testGeohashCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testGeohashCellWidth",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047272907
 }
]

[
 "TEST_STARTED",
 "ID#testQuadTreeCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQuadTreeCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474047272929,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointLonWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointLonWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474047272932,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLonInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLonInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474047272937,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointLonNoLat(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointLonNoLat(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474047272939,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizePointEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizePointEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474047272941,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizePointOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizePointOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474047272945,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testQuadTreeLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQuadTreeLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474047272947,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizePointInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizePointInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474047272949,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointArrayTooManyValues(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointArrayTooManyValues(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474047272953,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizePointOutsideNormalRange_withOptions(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizePointOutsideNormalRange_withOptions(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474047272955,
  "executionTime": 46
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointLatNoLon(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointLatNoLon(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474047273002,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testGeoHashLevelsForPrecision_String(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoHashLevelsForPrecision_String(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474047273003,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointInvalidType(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointInvalidType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474047273007,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLatOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLatOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474047273011,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLatHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLatHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474047273013,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPoint(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPoint(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474047273015,
  "executionTime": 111
 }
]

[
 "TEST_STARTED",
 "ID#testGeoHashLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoHashLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474047273126,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQuadTreeCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQuadTreeCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474047273137,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testPrefixTreeCellSizes(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrefixTreeCellSizes(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474047273138,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointGeohashWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointGeohashWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474047273144,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLatEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLatEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474047273146,
  "executionTime": 96
 }
]

[
 "TEST_STARTED",
 "ID#testQuadTreeLevelsForPrecisionString(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQuadTreeLevelsForPrecisionString(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474047273242,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointLatWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointLatWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474047273244,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLonEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLonEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474047273246,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testQuadTreeCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQuadTreeCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474047273251,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointExtraField(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointExtraField(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474047273253,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointArrayWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointArrayWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474047273255,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLatInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLatInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474047273257,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizePointHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizePointHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474047273258,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLonOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLonOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474047273260,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testGeohashCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeohashCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474047273261,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointLonLatGeoHash(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointLonLatGeoHash(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474047273263,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointGeohash(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointGeohash(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474047273268,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLonHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLonHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474047273286,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testGeohashCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeohashCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474047273294,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testGeohashCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeohashCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474047273299,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.search.geo.GeoUtilsTests",
  "startTimestamp": 1474047272907,
  "executionTime": 414
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.bulk.RetryTests",
   "displayName": "org.elasticsearch.action.bulk.RetryTests",
   "methodName": null,
   "className": "org.elasticsearch.action.bulk.RetryTests",
   "children": [
    {
     "id": "ID#testSyncRetryBacksOff(org.elasticsearch.action.bulk.RetryTests)",
     "displayName": "testSyncRetryBacksOff(org.elasticsearch.action.bulk.RetryTests)",
     "methodName": "testSyncRetryBacksOff",
     "className": "org.elasticsearch.action.bulk.RetryTests",
     "children": []
    },
    {
     "id": "ID#testAsyncRetryFailsAfterBacksOff(org.elasticsearch.action.bulk.RetryTests)",
     "displayName": "testAsyncRetryFailsAfterBacksOff(org.elasticsearch.action.bulk.RetryTests)",
     "methodName": "testAsyncRetryFailsAfterBacksOff",
     "className": "org.elasticsearch.action.bulk.RetryTests",
     "children": []
    },
    {
     "id": "ID#testSyncRetryFailsAfterBackoff(org.elasticsearch.action.bulk.RetryTests)",
     "displayName": "testSyncRetryFailsAfterBackoff(org.elasticsearch.action.bulk.RetryTests)",
     "methodName": "testSyncRetryFailsAfterBackoff",
     "className": "org.elasticsearch.action.bulk.RetryTests",
     "children": []
    },
    {
     "id": "ID#testAsyncRetryBacksOff(org.elasticsearch.action.bulk.RetryTests)",
     "displayName": "testAsyncRetryBacksOff(org.elasticsearch.action.bulk.RetryTests)",
     "methodName": "testAsyncRetryBacksOff",
     "className": "org.elasticsearch.action.bulk.RetryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047273330
 }
]

[
 "TEST_STARTED",
 "ID#testSyncRetryBacksOff(org.elasticsearch.action.bulk.RetryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSyncRetryBacksOff(org.elasticsearch.action.bulk.RetryTests)",
  "startTimestamp": 1474047273422,
  "executionTime": 95
 }
]

[
 "TEST_STARTED",
 "ID#testAsyncRetryFailsAfterBacksOff(org.elasticsearch.action.bulk.RetryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAsyncRetryFailsAfterBacksOff(org.elasticsearch.action.bulk.RetryTests)",
  "startTimestamp": 1474047273518,
  "executionTime": 80
 }
]

[
 "TEST_STARTED",
 "ID#testSyncRetryFailsAfterBackoff(org.elasticsearch.action.bulk.RetryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSyncRetryFailsAfterBackoff(org.elasticsearch.action.bulk.RetryTests)",
  "startTimestamp": 1474047273598,
  "executionTime": 73
 }
]

[
 "TEST_STARTED",
 "ID#testAsyncRetryBacksOff(org.elasticsearch.action.bulk.RetryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAsyncRetryBacksOff(org.elasticsearch.action.bulk.RetryTests)",
  "startTimestamp": 1474047273672,
  "executionTime": 77
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.bulk.RetryTests",
  "startTimestamp": 1474047273330,
  "executionTime": 424
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.termvectors.TermVectorsServiceTests",
   "displayName": "org.elasticsearch.index.termvectors.TermVectorsServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.index.termvectors.TermVectorsServiceTests",
   "children": [
    {
     "id": "ID#testTook(org.elasticsearch.index.termvectors.TermVectorsServiceTests)",
     "displayName": "testTook(org.elasticsearch.index.termvectors.TermVectorsServiceTests)",
     "methodName": "testTook",
     "className": "org.elasticsearch.index.termvectors.TermVectorsServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047273760
 }
]

[
 "TEST_STARTED",
 "ID#testTook(org.elasticsearch.index.termvectors.TermVectorsServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:34:33,808][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:34:33,852][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:34:33,852][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:34:33,856][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:34:33,859][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:34:33,859][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:34:34,010][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:34:34,010][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:34:34,011][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[98]}, bound_addresses {local[98]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:34:34,014][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{gYdGj_S6QfW1z1aplwkC2Q}{PDEjM9sYSlqJ6NVE-OYsMA}{local}{local[98]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:34:34,015][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:34:34,044][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:34:34,062][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:34:34,119][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:34:34,341][INFO ][org.elasticsearch.index.termvectors] [TermVectorsServiceTests#testTook]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTook(org.elasticsearch.index.termvectors.TermVectorsServiceTests)",
  "startTimestamp": 1474047273789,
  "executionTime": 585
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:34:34,374][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:34:34,375][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:34:34,375][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:34:34,376][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.termvectors.TermVectorsServiceTests",
  "startTimestamp": 1474047273760,
  "executionTime": 630
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.unit.FuzzinessTests",
   "displayName": "org.elasticsearch.common.unit.FuzzinessTests",
   "methodName": null,
   "className": "org.elasticsearch.common.unit.FuzzinessTests",
   "children": [
    {
     "id": "ID#testAsDistance(org.elasticsearch.common.unit.FuzzinessTests)",
     "displayName": "testAsDistance(org.elasticsearch.common.unit.FuzzinessTests)",
     "methodName": "testAsDistance",
     "className": "org.elasticsearch.common.unit.FuzzinessTests",
     "children": []
    },
    {
     "id": "ID#testParseFromXContent(org.elasticsearch.common.unit.FuzzinessTests)",
     "displayName": "testParseFromXContent(org.elasticsearch.common.unit.FuzzinessTests)",
     "methodName": "testParseFromXContent",
     "className": "org.elasticsearch.common.unit.FuzzinessTests",
     "children": []
    },
    {
     "id": "ID#testAuto(org.elasticsearch.common.unit.FuzzinessTests)",
     "displayName": "testAuto(org.elasticsearch.common.unit.FuzzinessTests)",
     "methodName": "testAuto",
     "className": "org.elasticsearch.common.unit.FuzzinessTests",
     "children": []
    },
    {
     "id": "ID#testSerializationAuto(org.elasticsearch.common.unit.FuzzinessTests)",
     "displayName": "testSerializationAuto(org.elasticsearch.common.unit.FuzzinessTests)",
     "methodName": "testSerializationAuto",
     "className": "org.elasticsearch.common.unit.FuzzinessTests",
     "children": []
    },
    {
     "id": "ID#testNumerics(org.elasticsearch.common.unit.FuzzinessTests)",
     "displayName": "testNumerics(org.elasticsearch.common.unit.FuzzinessTests)",
     "methodName": "testNumerics",
     "className": "org.elasticsearch.common.unit.FuzzinessTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.common.unit.FuzzinessTests)",
     "displayName": "testSerialization(org.elasticsearch.common.unit.FuzzinessTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.common.unit.FuzzinessTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047274397
 }
]

[
 "TEST_STARTED",
 "ID#testAsDistance(org.elasticsearch.common.unit.FuzzinessTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAsDistance(org.elasticsearch.common.unit.FuzzinessTests)",
  "startTimestamp": 1474047274410,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParseFromXContent(org.elasticsearch.common.unit.FuzzinessTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFromXContent(org.elasticsearch.common.unit.FuzzinessTests)",
  "startTimestamp": 1474047274412,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testAuto(org.elasticsearch.common.unit.FuzzinessTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAuto(org.elasticsearch.common.unit.FuzzinessTests)",
  "startTimestamp": 1474047274418,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerializationAuto(org.elasticsearch.common.unit.FuzzinessTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerializationAuto(org.elasticsearch.common.unit.FuzzinessTests)",
  "startTimestamp": 1474047274420,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNumerics(org.elasticsearch.common.unit.FuzzinessTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNumerics(org.elasticsearch.common.unit.FuzzinessTests)",
  "startTimestamp": 1474047274422,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.common.unit.FuzzinessTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.common.unit.FuzzinessTests)",
  "startTimestamp": 1474047274424,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.unit.FuzzinessTests",
  "startTimestamp": 1474047274397,
  "executionTime": 31
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests",
   "children": [
    {
     "id": "ID#testReplicaAndPrimaryRecoveryThrottling(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)",
     "displayName": "testReplicaAndPrimaryRecoveryThrottling(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)",
     "methodName": "testReplicaAndPrimaryRecoveryThrottling",
     "className": "org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests",
     "children": []
    },
    {
     "id": "ID#testPrimaryRecoveryThrottling(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)",
     "displayName": "testPrimaryRecoveryThrottling(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)",
     "methodName": "testPrimaryRecoveryThrottling",
     "className": "org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests",
     "children": []
    },
    {
     "id": "ID#testThrottleIncomingAndOutgoing(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)",
     "displayName": "testThrottleIncomingAndOutgoing(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)",
     "methodName": "testThrottleIncomingAndOutgoing",
     "className": "org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests",
     "children": []
    },
    {
     "id": "ID#testOutgoingThrottlesAllocation(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)",
     "displayName": "testOutgoingThrottlesAllocation(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)",
     "methodName": "testOutgoingThrottlesAllocation",
     "className": "org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047274565
 }
]

[
 "TEST_STARTED",
 "ID#testReplicaAndPrimaryRecoveryThrottling(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:34,635][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:34,636][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start one node, do reroute, only 3 should initialize%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:34,637][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start initializing, another 2 should initialize%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:34,638][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start initializing, all primaries should be started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:34,638][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start another node, replicas should start being allocated%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:34,639][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start initializing replicas%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:34,639][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start initializing replicas, all should be started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:34,640][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][3], [test][4]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplicaAndPrimaryRecoveryThrottling(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)",
  "startTimestamp": 1474047274628,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testPrimaryRecoveryThrottling(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:34,646][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:34,647][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start one node, do reroute, only 3 should initialize%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:34,650][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start initializing, another 3 should initialize%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:34,651][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start initializing, another 3 should initialize%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:34,652][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start initializing, another 1 should initialize%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:34,653][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start initializing, all primaries should be started%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrimaryRecoveryThrottling(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)",
  "startTimestamp": 1474047274640,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testThrottleIncomingAndOutgoing(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:34,661][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:34,662][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start one node, do reroute, only 5 should initialize%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:34,662][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start initializing, all primaries should be started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:34,664][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][6], [test][5], [test][7], [test][8]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:34,664][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start another 2 nodes, 5 shards should be relocating - at most 5 are allowed per node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:34,666][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the relocating shards, one more shard should relocate away from node1%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThrottleIncomingAndOutgoing(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)",
  "startTimestamp": 1474047274653,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testOutgoingThrottlesAllocation(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:34,673][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:34,674][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start one node, do reroute, only 1 should initialize%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:34,674][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:34,675][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start one more node, first non-primary should start being allocated%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:34,675][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start initializing non-primary%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:34,676][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start one more node, initializing second non-primary%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:34,676][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start one more node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T02:34:34,676][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] move started non-primary to new node%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOutgoingThrottlesAllocation(org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests)",
  "startTimestamp": 1474047274667,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.ThrottlingAllocationTests",
  "startTimestamp": 1474047274565,
  "executionTime": 117
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.StringsTests",
   "displayName": "org.elasticsearch.common.StringsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.StringsTests",
   "children": [
    {
     "id": "ID#testSplitStringToSet(org.elasticsearch.common.StringsTests)",
     "displayName": "testSplitStringToSet(org.elasticsearch.common.StringsTests)",
     "methodName": "testSplitStringToSet",
     "className": "org.elasticsearch.common.StringsTests",
     "children": []
    },
    {
     "id": "ID#testEvilToString(org.elasticsearch.common.StringsTests)",
     "displayName": "testEvilToString(org.elasticsearch.common.StringsTests)",
     "methodName": "testEvilToString",
     "className": "org.elasticsearch.common.StringsTests",
     "children": []
    },
    {
     "id": "ID#testSubstring(org.elasticsearch.common.StringsTests)",
     "displayName": "testSubstring(org.elasticsearch.common.StringsTests)",
     "methodName": "testSubstring",
     "className": "org.elasticsearch.common.StringsTests",
     "children": []
    },
    {
     "id": "ID#testCleanTruncate(org.elasticsearch.common.StringsTests)",
     "displayName": "testCleanTruncate(org.elasticsearch.common.StringsTests)",
     "methodName": "testCleanTruncate",
     "className": "org.elasticsearch.common.StringsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047275485
 }
]

[
 "TEST_STARTED",
 "ID#testSplitStringToSet(org.elasticsearch.common.StringsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSplitStringToSet(org.elasticsearch.common.StringsTests)",
  "startTimestamp": 1474047275575,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEvilToString(org.elasticsearch.common.StringsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEvilToString(org.elasticsearch.common.StringsTests)",
  "startTimestamp": 1474047275577,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSubstring(org.elasticsearch.common.StringsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSubstring(org.elasticsearch.common.StringsTests)",
  "startTimestamp": 1474047275581,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testCleanTruncate(org.elasticsearch.common.StringsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCleanTruncate(org.elasticsearch.common.StringsTests)",
  "startTimestamp": 1474047275585,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.StringsTests",
  "startTimestamp": 1474047275485,
  "executionTime": 103
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests",
   "displayName": "org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047276193
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)",
  "startTimestamp": 1474047276204,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)",
  "startTimestamp": 1474047276206,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests)",
  "startTimestamp": 1474047276208,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.builders.MultiLineStringBuilderTests",
  "startTimestamp": 1474047276193,
  "executionTime": 21
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
   "displayName": "org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047276474
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
  "startTimestamp": 1474047276492,
  "executionTime": 38
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
  "startTimestamp": 1474047276530,
  "executionTime": 56
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
  "startTimestamp": 1474047276586,
  "executionTime": 67
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
  "startTimestamp": 1474047276474,
  "executionTime": 180
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.io.stream.BytesStreamsTests",
   "displayName": "org.elasticsearch.common.io.stream.BytesStreamsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
   "children": [
    {
     "id": "ID#testNamedWriteableNotSupportedWithoutWrapping(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testNamedWriteableNotSupportedWithoutWrapping(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testNamedWriteableNotSupportedWithoutWrapping",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testAccessAfterClose(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testAccessAfterClose(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testAccessAfterClose",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testSingleFullPageBulkWriteWithOffsetCrossover(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testSingleFullPageBulkWriteWithOffsetCrossover(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testSingleFullPageBulkWriteWithOffsetCrossover",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testSingleByte(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testSingleByte(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testSingleByte",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testReadMapByUsingWriteMapWithConsistentOrder(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testReadMapByUsingWriteMapWithConsistentOrder(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testReadMapByUsingWriteMapWithConsistentOrder",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testWriteMapOfLists(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testWriteMapOfLists(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testWriteMapOfLists",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testSingleFullPageBulkWriteWithOffset(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testSingleFullPageBulkWriteWithOffset(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testSingleFullPageBulkWriteWithOffset",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testSingleFullPageBulkWrite(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testSingleFullPageBulkWrite(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testSingleFullPageBulkWrite",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testReadWriteGeoPoint(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testReadWriteGeoPoint(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testReadWriteGeoPoint",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testIllegalBulkWrite(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testIllegalBulkWrite(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testIllegalBulkWrite",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testTwoFullOneShortPage(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testTwoFullOneShortPage(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testTwoFullOneShortPage",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testOptionalWriteableReaderReturnsNull(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testOptionalWriteableReaderReturnsNull(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testOptionalWriteableReaderReturnsNull",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testSimpleStreams(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testSimpleStreams(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testSimpleStreams",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testSingleShortPageBulkWrite(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testSingleShortPageBulkWrite(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testSingleShortPageBulkWrite",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testWriteMapWithConsistentOrderWithLinkedHashMapShouldThrowAssertError(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testWriteMapWithConsistentOrderWithLinkedHashMapShouldThrowAssertError(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testWriteMapWithConsistentOrderWithLinkedHashMapShouldThrowAssertError",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testSkip(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testSkip(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testSkip",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testWriteStreamableList(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testWriteStreamableList(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testWriteStreamableList",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testSeek(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testSeek(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testSeek",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testNamedWriteable(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testNamedWriteable(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testNamedWriteable",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testWriteableReaderReturnsWrongName(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testWriteableReaderReturnsWrongName(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testWriteableReaderReturnsWrongName",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testSingleShortPage(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testSingleShortPage(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testSingleShortPage",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testEmpty(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testSingleFullPage(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testSingleFullPage(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testSingleFullPage",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testOneFullOneShortPage(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testOneFullOneShortPage(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testOneFullOneShortPage",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testNamedWriteableReaderReturnsNull(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testNamedWriteableReaderReturnsNull(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testNamedWriteableReaderReturnsNull",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testWriteMapWithConsistentOrder(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testWriteMapWithConsistentOrder(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testWriteMapWithConsistentOrder",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testNamedWriteableList(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testNamedWriteableList(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testNamedWriteableList",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047276826
 }
]

[
 "TEST_STARTED",
 "ID#testNamedWriteableNotSupportedWithoutWrapping(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNamedWriteableNotSupportedWithoutWrapping(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1474047276843,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testAccessAfterClose(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_IGNORED",
 {
  "description": "ID#testAccessAfterClose(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1474047276847,
  "cause": "Unknown reason for ignore status."
 }
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testAccessAfterClose(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "message": "'awaitsfix' test group is disabled (@AwaitsFix(bugUrl=https://github.com/elastic/elasticsearch/issues/12620))",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: 'awaitsfix' test group is disabled (@AwaitsFix(bugUrl=https://github.com/elastic/elasticsearch/issues/12620))\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.isTestIgnored(RandomizedRunner.java:1236)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$400(RandomizedRunner.java:140)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:766)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: 'awaitsfix' test group is disabled (@AwaitsFix(bugUrl=https://github.com/elastic/elasticsearch/issues/12620))",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAccessAfterClose(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1474047276845,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSingleFullPageBulkWriteWithOffsetCrossover(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleFullPageBulkWriteWithOffsetCrossover(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1474047276848,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testSingleByte(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleByte(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1474047276861,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testReadMapByUsingWriteMapWithConsistentOrder(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadMapByUsingWriteMapWithConsistentOrder(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1474047276862,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testWriteMapOfLists(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteMapOfLists(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1474047276866,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testSingleFullPageBulkWriteWithOffset(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleFullPageBulkWriteWithOffset(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1474047276873,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testSingleFullPageBulkWrite(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleFullPageBulkWrite(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1474047276880,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testReadWriteGeoPoint(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadWriteGeoPoint(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1474047276888,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalBulkWrite(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalBulkWrite(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1474047276890,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testTwoFullOneShortPage(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTwoFullOneShortPage(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1474047276892,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testOptionalWriteableReaderReturnsNull(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOptionalWriteableReaderReturnsNull(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1474047276906,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleStreams(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleStreams(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1474047276908,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testSingleShortPageBulkWrite(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleShortPageBulkWrite(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1474047276920,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testWriteMapWithConsistentOrderWithLinkedHashMapShouldThrowAssertError(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteMapWithConsistentOrderWithLinkedHashMapShouldThrowAssertError(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1474047276921,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSkip(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSkip(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1474047276923,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testWriteStreamableList(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteStreamableList(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1474047276924,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSeek(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSeek(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1474047276927,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testNamedWriteable(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNamedWriteable(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1474047276928,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testWriteableReaderReturnsWrongName(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteableReaderReturnsWrongName(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1474047276931,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSingleShortPage(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleShortPage(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1474047276934,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1474047276936,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSingleFullPage(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleFullPage(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1474047276938,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testOneFullOneShortPage(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOneFullOneShortPage(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1474047276946,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testNamedWriteableReaderReturnsNull(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNamedWriteableReaderReturnsNull(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1474047276955,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testWriteMapWithConsistentOrder(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteMapWithConsistentOrder(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1474047276958,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testNamedWriteableList(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNamedWriteableList(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1474047276963,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.io.stream.BytesStreamsTests",
  "startTimestamp": 1474047276826,
  "executionTime": 142
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.io.stream.StreamTests",
   "displayName": "org.elasticsearch.common.io.stream.StreamTests",
   "methodName": null,
   "className": "org.elasticsearch.common.io.stream.StreamTests",
   "children": [
    {
     "id": "ID#testFilterStreamInputDelegatesAvailable(org.elasticsearch.common.io.stream.StreamTests)",
     "displayName": "testFilterStreamInputDelegatesAvailable(org.elasticsearch.common.io.stream.StreamTests)",
     "methodName": "testFilterStreamInputDelegatesAvailable",
     "className": "org.elasticsearch.common.io.stream.StreamTests",
     "children": []
    },
    {
     "id": "ID#testRandomVLongSerialization(org.elasticsearch.common.io.stream.StreamTests)",
     "displayName": "testRandomVLongSerialization(org.elasticsearch.common.io.stream.StreamTests)",
     "methodName": "testRandomVLongSerialization",
     "className": "org.elasticsearch.common.io.stream.StreamTests",
     "children": []
    },
    {
     "id": "ID#testInputStreamStreamInputDelegatesAvailable(org.elasticsearch.common.io.stream.StreamTests)",
     "displayName": "testInputStreamStreamInputDelegatesAvailable(org.elasticsearch.common.io.stream.StreamTests)",
     "methodName": "testInputStreamStreamInputDelegatesAvailable",
     "className": "org.elasticsearch.common.io.stream.StreamTests",
     "children": []
    },
    {
     "id": "ID#testWritableArrays(org.elasticsearch.common.io.stream.StreamTests)",
     "displayName": "testWritableArrays(org.elasticsearch.common.io.stream.StreamTests)",
     "methodName": "testWritableArrays",
     "className": "org.elasticsearch.common.io.stream.StreamTests",
     "children": []
    },
    {
     "id": "ID#testLinkedHashMap(org.elasticsearch.common.io.stream.StreamTests)",
     "displayName": "testLinkedHashMap(org.elasticsearch.common.io.stream.StreamTests)",
     "methodName": "testLinkedHashMap",
     "className": "org.elasticsearch.common.io.stream.StreamTests",
     "children": []
    },
    {
     "id": "ID#testSpecificVLongSerialization(org.elasticsearch.common.io.stream.StreamTests)",
     "displayName": "testSpecificVLongSerialization(org.elasticsearch.common.io.stream.StreamTests)",
     "methodName": "testSpecificVLongSerialization",
     "className": "org.elasticsearch.common.io.stream.StreamTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047277110
 }
]

[
 "TEST_STARTED",
 "ID#testFilterStreamInputDelegatesAvailable(org.elasticsearch.common.io.stream.StreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterStreamInputDelegatesAvailable(org.elasticsearch.common.io.stream.StreamTests)",
  "startTimestamp": 1474047277125,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRandomVLongSerialization(org.elasticsearch.common.io.stream.StreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomVLongSerialization(org.elasticsearch.common.io.stream.StreamTests)",
  "startTimestamp": 1474047277127,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testInputStreamStreamInputDelegatesAvailable(org.elasticsearch.common.io.stream.StreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInputStreamStreamInputDelegatesAvailable(org.elasticsearch.common.io.stream.StreamTests)",
  "startTimestamp": 1474047277131,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWritableArrays(org.elasticsearch.common.io.stream.StreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWritableArrays(org.elasticsearch.common.io.stream.StreamTests)",
  "startTimestamp": 1474047277133,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testLinkedHashMap(org.elasticsearch.common.io.stream.StreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLinkedHashMap(org.elasticsearch.common.io.stream.StreamTests)",
  "startTimestamp": 1474047277138,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testSpecificVLongSerialization(org.elasticsearch.common.io.stream.StreamTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSpecificVLongSerialization(org.elasticsearch.common.io.stream.StreamTests)",
  "startTimestamp": 1474047277154,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.io.stream.StreamTests",
  "startTimestamp": 1474047277110,
  "executionTime": 60
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.logging.DeprecationLoggerTests",
   "displayName": "org.elasticsearch.common.logging.DeprecationLoggerTests",
   "methodName": null,
   "className": "org.elasticsearch.common.logging.DeprecationLoggerTests",
   "children": [
    {
     "id": "ID#testFailsWhenRemovingUnknownThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "displayName": "testFailsWhenRemovingUnknownThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "methodName": "testFailsWhenRemovingUnknownThreadContext",
     "className": "org.elasticsearch.common.logging.DeprecationLoggerTests",
     "children": []
    },
    {
     "id": "ID#testFailsWithoutThreadContextSet(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "displayName": "testFailsWithoutThreadContextSet(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "methodName": "testFailsWithoutThreadContextSet",
     "className": "org.elasticsearch.common.logging.DeprecationLoggerTests",
     "children": []
    },
    {
     "id": "ID#testAddsCombinedHeaderWithThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "displayName": "testAddsCombinedHeaderWithThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "methodName": "testAddsCombinedHeaderWithThreadContext",
     "className": "org.elasticsearch.common.logging.DeprecationLoggerTests",
     "children": []
    },
    {
     "id": "ID#testFailsWhenDoubleSettingSameThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "displayName": "testFailsWhenDoubleSettingSameThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "methodName": "testFailsWhenDoubleSettingSameThreadContext",
     "className": "org.elasticsearch.common.logging.DeprecationLoggerTests",
     "children": []
    },
    {
     "id": "ID#testSafeWithoutThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "displayName": "testSafeWithoutThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "methodName": "testSafeWithoutThreadContext",
     "className": "org.elasticsearch.common.logging.DeprecationLoggerTests",
     "children": []
    },
    {
     "id": "ID#testIgnoresClosedThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "displayName": "testIgnoresClosedThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "methodName": "testIgnoresClosedThreadContext",
     "className": "org.elasticsearch.common.logging.DeprecationLoggerTests",
     "children": []
    },
    {
     "id": "ID#testCanRemoveThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "displayName": "testCanRemoveThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "methodName": "testCanRemoveThreadContext",
     "className": "org.elasticsearch.common.logging.DeprecationLoggerTests",
     "children": []
    },
    {
     "id": "ID#testAddsHeaderWithThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "displayName": "testAddsHeaderWithThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "methodName": "testAddsHeaderWithThreadContext",
     "className": "org.elasticsearch.common.logging.DeprecationLoggerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047277403
 }
]

[
 "TEST_STARTED",
 "ID#testFailsWhenRemovingUnknownThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailsWhenRemovingUnknownThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
  "startTimestamp": 1474047277439,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFailsWithoutThreadContextSet(org.elasticsearch.common.logging.DeprecationLoggerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailsWithoutThreadContextSet(org.elasticsearch.common.logging.DeprecationLoggerTests)",
  "startTimestamp": 1474047277442,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testAddsCombinedHeaderWithThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:34:37,448][WARN ][org.elasticsearch.deprecation.common.logging] A simple message [Ij]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:34:37,449][WARN ][org.elasticsearch.deprecation.common.logging] PViuLAQBUq%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddsCombinedHeaderWithThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
  "startTimestamp": 1474047277446,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFailsWhenDoubleSettingSameThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailsWhenDoubleSettingSameThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
  "startTimestamp": 1474047277450,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSafeWithoutThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:34:37,455][WARN ][org.elasticsearch.deprecation.common.logging] Ignored%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSafeWithoutThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
  "startTimestamp": 1474047277453,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoresClosedThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:34:37,457][WARN ][org.elasticsearch.deprecation.common.logging] Ignored logger message%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoresClosedThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
  "startTimestamp": 1474047277455,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCanRemoveThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:34:37,460][WARN ][org.elasticsearch.deprecation.common.logging] testCanRemoveThreadContext%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:34:37,472][WARN ][org.elasticsearch.deprecation.common.logging] testCannotRemoveThreadContext%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCanRemoveThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
  "startTimestamp": 1474047277458,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testAddsHeaderWithThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T23:34:37,475][WARN ][org.elasticsearch.deprecation.common.logging] A simple message [ym]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddsHeaderWithThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
  "startTimestamp": 1474047277473,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.logging.DeprecationLoggerTests",
  "startTimestamp": 1474047277403,
  "executionTime": 77
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.search.function.MinScoreScorerTests",
   "displayName": "org.elasticsearch.common.lucene.search.function.MinScoreScorerTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.search.function.MinScoreScorerTests",
   "children": [
    {
     "id": "ID#testTwoPhaseIterator(org.elasticsearch.common.lucene.search.function.MinScoreScorerTests)",
     "displayName": "testTwoPhaseIterator(org.elasticsearch.common.lucene.search.function.MinScoreScorerTests)",
     "methodName": "testTwoPhaseIterator",
     "className": "org.elasticsearch.common.lucene.search.function.MinScoreScorerTests",
     "children": []
    },
    {
     "id": "ID#testRegularIterator(org.elasticsearch.common.lucene.search.function.MinScoreScorerTests)",
     "displayName": "testRegularIterator(org.elasticsearch.common.lucene.search.function.MinScoreScorerTests)",
     "methodName": "testRegularIterator",
     "className": "org.elasticsearch.common.lucene.search.function.MinScoreScorerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047277788
 }
]

[
 "TEST_STARTED",
 "ID#testTwoPhaseIterator(org.elasticsearch.common.lucene.search.function.MinScoreScorerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTwoPhaseIterator(org.elasticsearch.common.lucene.search.function.MinScoreScorerTests)",
  "startTimestamp": 1474047277826,
  "executionTime": 30
 }
]

[
 "TEST_STARTED",
 "ID#testRegularIterator(org.elasticsearch.common.lucene.search.function.MinScoreScorerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegularIterator(org.elasticsearch.common.lucene.search.function.MinScoreScorerTests)",
  "startTimestamp": 1474047277857,
  "executionTime": 50
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.search.function.MinScoreScorerTests",
  "startTimestamp": 1474047277788,
  "executionTime": 121
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.store.InputStreamIndexInputTests",
   "displayName": "org.elasticsearch.common.lucene.store.InputStreamIndexInputTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.store.InputStreamIndexInputTests",
   "children": [
    {
     "id": "ID#testMarkRest(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "displayName": "testMarkRest(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "methodName": "testMarkRest",
     "className": "org.elasticsearch.common.lucene.store.InputStreamIndexInputTests",
     "children": []
    },
    {
     "id": "ID#testReadMultiTwoBytesLimit1(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "displayName": "testReadMultiTwoBytesLimit1(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "methodName": "testReadMultiTwoBytesLimit1",
     "className": "org.elasticsearch.common.lucene.store.InputStreamIndexInputTests",
     "children": []
    },
    {
     "id": "ID#testReadMultiFourBytesLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "displayName": "testReadMultiFourBytesLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "methodName": "testReadMultiFourBytesLimit",
     "className": "org.elasticsearch.common.lucene.store.InputStreamIndexInputTests",
     "children": []
    },
    {
     "id": "ID#testSingleReadTwoBytesLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "displayName": "testSingleReadTwoBytesLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "methodName": "testSingleReadTwoBytesLimit",
     "className": "org.elasticsearch.common.lucene.store.InputStreamIndexInputTests",
     "children": []
    },
    {
     "id": "ID#testReadMultiSingleByteLimit1(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "displayName": "testReadMultiSingleByteLimit1(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "methodName": "testReadMultiSingleByteLimit1",
     "className": "org.elasticsearch.common.lucene.store.InputStreamIndexInputTests",
     "children": []
    },
    {
     "id": "ID#testSingleReadSingleByteLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "displayName": "testSingleReadSingleByteLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
     "methodName": "testSingleReadSingleByteLimit",
     "className": "org.elasticsearch.common.lucene.store.InputStreamIndexInputTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047278082
 }
]

[
 "TEST_STARTED",
 "ID#testMarkRest(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMarkRest(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
  "startTimestamp": 1474047278111,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReadMultiTwoBytesLimit1(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadMultiTwoBytesLimit1(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
  "startTimestamp": 1474047278113,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReadMultiFourBytesLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadMultiFourBytesLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
  "startTimestamp": 1474047278115,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSingleReadTwoBytesLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleReadTwoBytesLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
  "startTimestamp": 1474047278117,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testReadMultiSingleByteLimit1(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadMultiSingleByteLimit1(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
  "startTimestamp": 1474047278118,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSingleReadSingleByteLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleReadSingleByteLimit(org.elasticsearch.common.lucene.store.InputStreamIndexInputTests)",
  "startTimestamp": 1474047278120,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.store.InputStreamIndexInputTests",
  "startTimestamp": 1474047278082,
  "executionTime": 41
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.uid.VersionsTests",
   "displayName": "org.elasticsearch.common.lucene.uid.VersionsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.uid.VersionsTests",
   "children": [
    {
     "id": "ID#testNestedDocuments(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "displayName": "testNestedDocuments(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "methodName": "testNestedDocuments",
     "className": "org.elasticsearch.common.lucene.uid.VersionsTests",
     "children": []
    },
    {
     "id": "ID#testCacheFilterReader(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "displayName": "testCacheFilterReader(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "methodName": "testCacheFilterReader",
     "className": "org.elasticsearch.common.lucene.uid.VersionsTests",
     "children": []
    },
    {
     "id": "ID#testVersions(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "displayName": "testVersions(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "methodName": "testVersions",
     "className": "org.elasticsearch.common.lucene.uid.VersionsTests",
     "children": []
    },
    {
     "id": "ID#testCache(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "displayName": "testCache(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "methodName": "testCache",
     "className": "org.elasticsearch.common.lucene.uid.VersionsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047281214
 }
]

[
 "TEST_STARTED",
 "ID#testNestedDocuments(org.elasticsearch.common.lucene.uid.VersionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedDocuments(org.elasticsearch.common.lucene.uid.VersionsTests)",
  "startTimestamp": 1474047281736,
  "executionTime": 103
 }
]

[
 "TEST_STARTED",
 "ID#testCacheFilterReader(org.elasticsearch.common.lucene.uid.VersionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCacheFilterReader(org.elasticsearch.common.lucene.uid.VersionsTests)",
  "startTimestamp": 1474047281839,
  "executionTime": 57
 }
]

[
 "TEST_STARTED",
 "ID#testVersions(org.elasticsearch.common.lucene.uid.VersionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersions(org.elasticsearch.common.lucene.uid.VersionsTests)",
  "startTimestamp": 1474047281897,
  "executionTime": 40
 }
]

[
 "TEST_STARTED",
 "ID#testCache(org.elasticsearch.common.lucene.uid.VersionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCache(org.elasticsearch.common.lucene.uid.VersionsTests)",
  "startTimestamp": 1474047281937,
  "executionTime": 36
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.uid.VersionsTests",
  "startTimestamp": 1474047281214,
  "executionTime": 761
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.network.NetworkServiceTests",
   "displayName": "org.elasticsearch.common.network.NetworkServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.common.network.NetworkServiceTests",
   "children": [
    {
     "id": "ID#testBindMultipleAddressesWithWildcard(org.elasticsearch.common.network.NetworkServiceTests)",
     "displayName": "testBindMultipleAddressesWithWildcard(org.elasticsearch.common.network.NetworkServiceTests)",
     "methodName": "testBindMultipleAddressesWithWildcard",
     "className": "org.elasticsearch.common.network.NetworkServiceTests",
     "children": []
    },
    {
     "id": "ID#testPublishMulticastV6(org.elasticsearch.common.network.NetworkServiceTests)",
     "displayName": "testPublishMulticastV6(org.elasticsearch.common.network.NetworkServiceTests)",
     "methodName": "testPublishMulticastV6",
     "className": "org.elasticsearch.common.network.NetworkServiceTests",
     "children": []
    },
    {
     "id": "ID#testBindAnyLocalV6(org.elasticsearch.common.network.NetworkServiceTests)",
     "displayName": "testBindAnyLocalV6(org.elasticsearch.common.network.NetworkServiceTests)",
     "methodName": "testBindAnyLocalV6",
     "className": "org.elasticsearch.common.network.NetworkServiceTests",
     "children": []
    },
    {
     "id": "ID#testPublishMulticastV4(org.elasticsearch.common.network.NetworkServiceTests)",
     "displayName": "testPublishMulticastV4(org.elasticsearch.common.network.NetworkServiceTests)",
     "methodName": "testPublishMulticastV4",
     "className": "org.elasticsearch.common.network.NetworkServiceTests",
     "children": []
    },
    {
     "id": "ID#testBindAnyLocalV4(org.elasticsearch.common.network.NetworkServiceTests)",
     "displayName": "testBindAnyLocalV4(org.elasticsearch.common.network.NetworkServiceTests)",
     "methodName": "testBindAnyLocalV4",
     "className": "org.elasticsearch.common.network.NetworkServiceTests",
     "children": []
    },
    {
     "id": "ID#testBindMulticastV6(org.elasticsearch.common.network.NetworkServiceTests)",
     "displayName": "testBindMulticastV6(org.elasticsearch.common.network.NetworkServiceTests)",
     "methodName": "testBindMulticastV6",
     "className": "org.elasticsearch.common.network.NetworkServiceTests",
     "children": []
    },
    {
     "id": "ID#testPublishAnyLocalV6(org.elasticsearch.common.network.NetworkServiceTests)",
     "displayName": "testPublishAnyLocalV6(org.elasticsearch.common.network.NetworkServiceTests)",
     "methodName": "testPublishAnyLocalV6",
     "className": "org.elasticsearch.common.network.NetworkServiceTests",
     "children": []
    },
    {
     "id": "ID#testBindMultipleAddresses(org.elasticsearch.common.network.NetworkServiceTests)",
     "displayName": "testBindMultipleAddresses(org.elasticsearch.common.network.NetworkServiceTests)",
     "methodName": "testBindMultipleAddresses",
     "className": "org.elasticsearch.common.network.NetworkServiceTests",
     "children": []
    },
    {
     "id": "ID#testPublishAnyLocalV4(org.elasticsearch.common.network.NetworkServiceTests)",
     "displayName": "testPublishAnyLocalV4(org.elasticsearch.common.network.NetworkServiceTests)",
     "methodName": "testPublishAnyLocalV4",
     "className": "org.elasticsearch.common.network.NetworkServiceTests",
     "children": []
    },
    {
     "id": "ID#testBindMulticastV4(org.elasticsearch.common.network.NetworkServiceTests)",
     "displayName": "testBindMulticastV4(org.elasticsearch.common.network.NetworkServiceTests)",
     "methodName": "testBindMulticastV4",
     "className": "org.elasticsearch.common.network.NetworkServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047282027
 }
]

[
 "TEST_STARTED",
 "ID#testBindMultipleAddressesWithWildcard(org.elasticsearch.common.network.NetworkServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBindMultipleAddressesWithWildcard(org.elasticsearch.common.network.NetworkServiceTests)",
  "startTimestamp": 1474047282045,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testPublishMulticastV6(org.elasticsearch.common.network.NetworkServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPublishMulticastV6(org.elasticsearch.common.network.NetworkServiceTests)",
  "startTimestamp": 1474047282048,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBindAnyLocalV6(org.elasticsearch.common.network.NetworkServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBindAnyLocalV6(org.elasticsearch.common.network.NetworkServiceTests)",
  "startTimestamp": 1474047282050,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testPublishMulticastV4(org.elasticsearch.common.network.NetworkServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPublishMulticastV4(org.elasticsearch.common.network.NetworkServiceTests)",
  "startTimestamp": 1474047282053,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBindAnyLocalV4(org.elasticsearch.common.network.NetworkServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBindAnyLocalV4(org.elasticsearch.common.network.NetworkServiceTests)",
  "startTimestamp": 1474047282055,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBindMulticastV6(org.elasticsearch.common.network.NetworkServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBindMulticastV6(org.elasticsearch.common.network.NetworkServiceTests)",
  "startTimestamp": 1474047282057,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testPublishAnyLocalV6(org.elasticsearch.common.network.NetworkServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPublishAnyLocalV6(org.elasticsearch.common.network.NetworkServiceTests)",
  "startTimestamp": 1474047282059,
  "executionTime": 480
 }
]

[
 "TEST_STARTED",
 "ID#testBindMultipleAddresses(org.elasticsearch.common.network.NetworkServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBindMultipleAddresses(org.elasticsearch.common.network.NetworkServiceTests)",
  "startTimestamp": 1474047282539,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testPublishAnyLocalV4(org.elasticsearch.common.network.NetworkServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPublishAnyLocalV4(org.elasticsearch.common.network.NetworkServiceTests)",
  "startTimestamp": 1474047282541,
  "executionTime": 252
 }
]

[
 "TEST_STARTED",
 "ID#testBindMulticastV4(org.elasticsearch.common.network.NetworkServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBindMulticastV4(org.elasticsearch.common.network.NetworkServiceTests)",
  "startTimestamp": 1474047282794,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.network.NetworkServiceTests",
  "startTimestamp": 1474047282027,
  "executionTime": 770
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.regex.RegexTests",
   "displayName": "org.elasticsearch.common.regex.RegexTests",
   "methodName": null,
   "className": "org.elasticsearch.common.regex.RegexTests",
   "children": [
    {
     "id": "ID#testFlags(org.elasticsearch.common.regex.RegexTests)",
     "displayName": "testFlags(org.elasticsearch.common.regex.RegexTests)",
     "methodName": "testFlags",
     "className": "org.elasticsearch.common.regex.RegexTests",
     "children": []
    },
    {
     "id": "ID#testDoubleWildcardMatch(org.elasticsearch.common.regex.RegexTests)",
     "displayName": "testDoubleWildcardMatch(org.elasticsearch.common.regex.RegexTests)",
     "methodName": "testDoubleWildcardMatch",
     "className": "org.elasticsearch.common.regex.RegexTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047282865
 }
]

[
 "TEST_STARTED",
 "ID#testFlags(org.elasticsearch.common.regex.RegexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFlags(org.elasticsearch.common.regex.RegexTests)",
  "startTimestamp": 1474047282897,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testDoubleWildcardMatch(org.elasticsearch.common.regex.RegexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoubleWildcardMatch(org.elasticsearch.common.regex.RegexTests)",
  "startTimestamp": 1474047282918,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.regex.RegexTests",
  "startTimestamp": 1474047282865,
  "executionTime": 57
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.concurrent.PrioritizedRunnableTests",
   "displayName": "org.elasticsearch.common.util.concurrent.PrioritizedRunnableTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.concurrent.PrioritizedRunnableTests",
   "children": [
    {
     "id": "ID#testGetAgeInMillisWithRealClock(org.elasticsearch.common.util.concurrent.PrioritizedRunnableTests)",
     "displayName": "testGetAgeInMillisWithRealClock(org.elasticsearch.common.util.concurrent.PrioritizedRunnableTests)",
     "methodName": "testGetAgeInMillisWithRealClock",
     "className": "org.elasticsearch.common.util.concurrent.PrioritizedRunnableTests",
     "children": []
    },
    {
     "id": "ID#testGetAgeInMillis(org.elasticsearch.common.util.concurrent.PrioritizedRunnableTests)",
     "displayName": "testGetAgeInMillis(org.elasticsearch.common.util.concurrent.PrioritizedRunnableTests)",
     "methodName": "testGetAgeInMillis",
     "className": "org.elasticsearch.common.util.concurrent.PrioritizedRunnableTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047283141
 }
]

[
 "TEST_STARTED",
 "ID#testGetAgeInMillisWithRealClock(org.elasticsearch.common.util.concurrent.PrioritizedRunnableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetAgeInMillisWithRealClock(org.elasticsearch.common.util.concurrent.PrioritizedRunnableTests)",
  "startTimestamp": 1474047283218,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testGetAgeInMillis(org.elasticsearch.common.util.concurrent.PrioritizedRunnableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetAgeInMillis(org.elasticsearch.common.util.concurrent.PrioritizedRunnableTests)",
  "startTimestamp": 1474047283221,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.concurrent.PrioritizedRunnableTests",
  "startTimestamp": 1474047283141,
  "executionTime": 84
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.concurrent.RefCountedTests",
   "displayName": "org.elasticsearch.common.util.concurrent.RefCountedTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.concurrent.RefCountedTests",
   "children": [
    {
     "id": "ID#testRefCount(org.elasticsearch.common.util.concurrent.RefCountedTests)",
     "displayName": "testRefCount(org.elasticsearch.common.util.concurrent.RefCountedTests)",
     "methodName": "testRefCount",
     "className": "org.elasticsearch.common.util.concurrent.RefCountedTests",
     "children": []
    },
    {
     "id": "ID#testMultiThreaded(org.elasticsearch.common.util.concurrent.RefCountedTests)",
     "displayName": "testMultiThreaded(org.elasticsearch.common.util.concurrent.RefCountedTests)",
     "methodName": "testMultiThreaded",
     "className": "org.elasticsearch.common.util.concurrent.RefCountedTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047283404
 }
]

[
 "TEST_STARTED",
 "ID#testRefCount(org.elasticsearch.common.util.concurrent.RefCountedTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRefCount(org.elasticsearch.common.util.concurrent.RefCountedTests)",
  "startTimestamp": 1474047283420,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMultiThreaded(org.elasticsearch.common.util.concurrent.RefCountedTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiThreaded(org.elasticsearch.common.util.concurrent.RefCountedTests)",
  "startTimestamp": 1474047283423,
  "executionTime": 19
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.concurrent.RefCountedTests",
  "startTimestamp": 1474047283404,
  "executionTime": 42
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.XContentFactoryTests",
   "displayName": "org.elasticsearch.common.xcontent.XContentFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.XContentFactoryTests",
   "children": [
    {
     "id": "ID#testEmptyStream(org.elasticsearch.common.xcontent.XContentFactoryTests)",
     "displayName": "testEmptyStream(org.elasticsearch.common.xcontent.XContentFactoryTests)",
     "methodName": "testEmptyStream",
     "className": "org.elasticsearch.common.xcontent.XContentFactoryTests",
     "children": []
    },
    {
     "id": "ID#testInvalidStream(org.elasticsearch.common.xcontent.XContentFactoryTests)",
     "displayName": "testInvalidStream(org.elasticsearch.common.xcontent.XContentFactoryTests)",
     "methodName": "testInvalidStream",
     "className": "org.elasticsearch.common.xcontent.XContentFactoryTests",
     "children": []
    },
    {
     "id": "ID#testJsonFromBytesOptionallyPrecededByUtf8Bom(org.elasticsearch.common.xcontent.XContentFactoryTests)",
     "displayName": "testJsonFromBytesOptionallyPrecededByUtf8Bom(org.elasticsearch.common.xcontent.XContentFactoryTests)",
     "methodName": "testJsonFromBytesOptionallyPrecededByUtf8Bom",
     "className": "org.elasticsearch.common.xcontent.XContentFactoryTests",
     "children": []
    },
    {
     "id": "ID#testGuessCbor(org.elasticsearch.common.xcontent.XContentFactoryTests)",
     "displayName": "testGuessCbor(org.elasticsearch.common.xcontent.XContentFactoryTests)",
     "methodName": "testGuessCbor",
     "className": "org.elasticsearch.common.xcontent.XContentFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCBORBasedOnMagicHeaderDetection(org.elasticsearch.common.xcontent.XContentFactoryTests)",
     "displayName": "testCBORBasedOnMagicHeaderDetection(org.elasticsearch.common.xcontent.XContentFactoryTests)",
     "methodName": "testCBORBasedOnMagicHeaderDetection",
     "className": "org.elasticsearch.common.xcontent.XContentFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCBORBasedOnMajorObjectDetection(org.elasticsearch.common.xcontent.XContentFactoryTests)",
     "displayName": "testCBORBasedOnMajorObjectDetection(org.elasticsearch.common.xcontent.XContentFactoryTests)",
     "methodName": "testCBORBasedOnMajorObjectDetection",
     "className": "org.elasticsearch.common.xcontent.XContentFactoryTests",
     "children": []
    },
    {
     "id": "ID#testGuessSmile(org.elasticsearch.common.xcontent.XContentFactoryTests)",
     "displayName": "testGuessSmile(org.elasticsearch.common.xcontent.XContentFactoryTests)",
     "methodName": "testGuessSmile",
     "className": "org.elasticsearch.common.xcontent.XContentFactoryTests",
     "children": []
    },
    {
     "id": "ID#testGuessYaml(org.elasticsearch.common.xcontent.XContentFactoryTests)",
     "displayName": "testGuessYaml(org.elasticsearch.common.xcontent.XContentFactoryTests)",
     "methodName": "testGuessYaml",
     "className": "org.elasticsearch.common.xcontent.XContentFactoryTests",
     "children": []
    },
    {
     "id": "ID#testGuessJson(org.elasticsearch.common.xcontent.XContentFactoryTests)",
     "displayName": "testGuessJson(org.elasticsearch.common.xcontent.XContentFactoryTests)",
     "methodName": "testGuessJson",
     "className": "org.elasticsearch.common.xcontent.XContentFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047283686
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyStream(org.elasticsearch.common.xcontent.XContentFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyStream(org.elasticsearch.common.xcontent.XContentFactoryTests)",
  "startTimestamp": 1474047283710,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidStream(org.elasticsearch.common.xcontent.XContentFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidStream(org.elasticsearch.common.xcontent.XContentFactoryTests)",
  "startTimestamp": 1474047283712,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testJsonFromBytesOptionallyPrecededByUtf8Bom(org.elasticsearch.common.xcontent.XContentFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testJsonFromBytesOptionallyPrecededByUtf8Bom(org.elasticsearch.common.xcontent.XContentFactoryTests)",
  "startTimestamp": 1474047283714,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testGuessCbor(org.elasticsearch.common.xcontent.XContentFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGuessCbor(org.elasticsearch.common.xcontent.XContentFactoryTests)",
  "startTimestamp": 1474047283715,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCBORBasedOnMagicHeaderDetection(org.elasticsearch.common.xcontent.XContentFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCBORBasedOnMagicHeaderDetection(org.elasticsearch.common.xcontent.XContentFactoryTests)",
  "startTimestamp": 1474047283718,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCBORBasedOnMajorObjectDetection(org.elasticsearch.common.xcontent.XContentFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCBORBasedOnMajorObjectDetection(org.elasticsearch.common.xcontent.XContentFactoryTests)",
  "startTimestamp": 1474047283721,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGuessSmile(org.elasticsearch.common.xcontent.XContentFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGuessSmile(org.elasticsearch.common.xcontent.XContentFactoryTests)",
  "startTimestamp": 1474047283723,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGuessYaml(org.elasticsearch.common.xcontent.XContentFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGuessYaml(org.elasticsearch.common.xcontent.XContentFactoryTests)",
  "startTimestamp": 1474047283725,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testGuessJson(org.elasticsearch.common.xcontent.XContentFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGuessJson(org.elasticsearch.common.xcontent.XContentFactoryTests)",
  "startTimestamp": 1474047283727,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.XContentFactoryTests",
  "startTimestamp": 1474047283686,
  "executionTime": 45
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.cbor.CborXContentTests",
   "displayName": "org.elasticsearch.common.xcontent.cbor.CborXContentTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.cbor.CborXContentTests",
   "children": [
    {
     "id": "ID#testBasics(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "displayName": "testBasics(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "methodName": "testBasics",
     "className": "org.elasticsearch.common.xcontent.cbor.CborXContentTests",
     "children": []
    },
    {
     "id": "ID#testRawField(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "displayName": "testRawField(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "methodName": "testRawField",
     "className": "org.elasticsearch.common.xcontent.cbor.CborXContentTests",
     "children": []
    },
    {
     "id": "ID#testMissingEndArray(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "displayName": "testMissingEndArray(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "methodName": "testMissingEndArray",
     "className": "org.elasticsearch.common.xcontent.cbor.CborXContentTests",
     "children": []
    },
    {
     "id": "ID#testBigInteger(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "displayName": "testBigInteger(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "methodName": "testBigInteger",
     "className": "org.elasticsearch.common.xcontent.cbor.CborXContentTests",
     "children": []
    },
    {
     "id": "ID#testMissingEndObject(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "displayName": "testMissingEndObject(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "methodName": "testMissingEndObject",
     "className": "org.elasticsearch.common.xcontent.cbor.CborXContentTests",
     "children": []
    },
    {
     "id": "ID#testRawValue(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "displayName": "testRawValue(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
     "methodName": "testRawValue",
     "className": "org.elasticsearch.common.xcontent.cbor.CborXContentTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047283954
 }
]

[
 "TEST_STARTED",
 "ID#testBasics(org.elasticsearch.common.xcontent.cbor.CborXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasics(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
  "startTimestamp": 1474047283975,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRawField(org.elasticsearch.common.xcontent.cbor.CborXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawField(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
  "startTimestamp": 1474047283978,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMissingEndArray(org.elasticsearch.common.xcontent.cbor.CborXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingEndArray(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
  "startTimestamp": 1474047283981,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testBigInteger(org.elasticsearch.common.xcontent.cbor.CborXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBigInteger(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
  "startTimestamp": 1474047283984,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMissingEndObject(org.elasticsearch.common.xcontent.cbor.CborXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingEndObject(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
  "startTimestamp": 1474047283987,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRawValue(org.elasticsearch.common.xcontent.cbor.CborXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawValue(org.elasticsearch.common.xcontent.cbor.CborXContentTests)",
  "startTimestamp": 1474047283989,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.cbor.CborXContentTests",
  "startTimestamp": 1474047283954,
  "executionTime": 39
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.json.JsonXContentTests",
   "displayName": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
   "children": [
    {
     "id": "ID#testBasics(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "displayName": "testBasics(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "methodName": "testBasics",
     "className": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
     "children": []
    },
    {
     "id": "ID#testRawField(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "displayName": "testRawField(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "methodName": "testRawField",
     "className": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
     "children": []
    },
    {
     "id": "ID#testMissingEndArray(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "displayName": "testMissingEndArray(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "methodName": "testMissingEndArray",
     "className": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
     "children": []
    },
    {
     "id": "ID#testBigInteger(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "displayName": "testBigInteger(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "methodName": "testBigInteger",
     "className": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
     "children": []
    },
    {
     "id": "ID#testMissingEndObject(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "displayName": "testMissingEndObject(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "methodName": "testMissingEndObject",
     "className": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
     "children": []
    },
    {
     "id": "ID#testRawValue(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "displayName": "testRawValue(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "methodName": "testRawValue",
     "className": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047284235
 }
]

[
 "TEST_STARTED",
 "ID#testBasics(org.elasticsearch.common.xcontent.json.JsonXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasics(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
  "startTimestamp": 1474047284245,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRawField(org.elasticsearch.common.xcontent.json.JsonXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawField(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
  "startTimestamp": 1474047284247,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testMissingEndArray(org.elasticsearch.common.xcontent.json.JsonXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingEndArray(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
  "startTimestamp": 1474047284248,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBigInteger(org.elasticsearch.common.xcontent.json.JsonXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBigInteger(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
  "startTimestamp": 1474047284250,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testMissingEndObject(org.elasticsearch.common.xcontent.json.JsonXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingEndObject(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
  "startTimestamp": 1474047284251,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testRawValue(org.elasticsearch.common.xcontent.json.JsonXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawValue(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
  "startTimestamp": 1474047284252,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.json.JsonXContentTests",
  "startTimestamp": 1474047284235,
  "executionTime": 20
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
   "displayName": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
   "children": [
    {
     "id": "ID#testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSimpleArrayInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testNoMatch(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testNoMatch",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSimpleFieldWithWildcardInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSimpleArrayExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRecurseField2Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSingleFieldObject",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSimpleFieldExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testMultipleFieldsInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testNoFiltering",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testMultipleFieldsExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsPropertyInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRecurseField3Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRecursiveObjectsPropertiesWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testArrays(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testArrays",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRecursiveSameObjectWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRecurseField3Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRecursiveObjectsInArrayWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSingleFieldWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testEmptyObject",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSimpleFieldWithWildcardExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsPropertyExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testObjectsInArrayWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testWithLfAtEnd",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRecurseField4Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRecurseField4Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRecurseField1Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRecurseField2Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSimpleFieldInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRecurseField1Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRawField(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRawField",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047284505
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474047284519,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474047284522,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474047284524,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474047284526,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474047284529,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474047284531,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474047284534,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474047284536,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474047284538,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474047284540,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474047284542,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474047284544,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474047284545,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474047284547,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474047284550,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474047284552,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474047284555,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474047284557,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474047284559,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474047284561,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474047284563,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474047284565,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474047284567,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474047284569,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474047284574,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474047284575,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474047284578,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474047284580,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474047284582,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474047284584,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474047284586,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1474047284588,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
  "startTimestamp": 1474047284505,
  "executionTime": 87
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.deps.joda.SimpleJodaTests",
   "displayName": "org.elasticsearch.deps.joda.SimpleJodaTests",
   "methodName": null,
   "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
   "children": [
    {
     "id": "ID#testThatEpochParserIsIdempotent(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testThatEpochParserIsIdempotent(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testThatEpochParserIsIdempotent",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testWriteAndParse(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testWriteAndParse(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testWriteAndParse",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testThatRootObjectParsingIsStrict(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testThatRootObjectParsingIsStrict(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testThatRootObjectParsingIsStrict",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testThatDefaultFormatterChecksForCorrectYearLength(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testThatDefaultFormatterChecksForCorrectYearLength(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testThatDefaultFormatterChecksForCorrectYearLength",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testThatEpochParserIsPrinter(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testThatEpochParserIsPrinter(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testThatEpochParserIsPrinter",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testUpperBound(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testUpperBound(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testUpperBound",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testSlashInFormat(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testSlashInFormat(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testSlashInFormat",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testThatNegativeEpochsCanBeParsed(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testThatNegativeEpochsCanBeParsed(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testThatNegativeEpochsCanBeParsed",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testIsoVsCustom(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testIsoVsCustom(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testIsoVsCustom",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testThatEpochTimePrinterWorks(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testThatEpochTimePrinterWorks(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testThatEpochTimePrinterWorks",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testThatEpochsCanBeParsed(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testThatEpochsCanBeParsed(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testThatEpochsCanBeParsed",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testRoundingWithTimeZone(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testRoundingWithTimeZone(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testRoundingWithTimeZone",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testMultipleFormats(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testMultipleFormats(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testMultipleFormats",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testMultipleDifferentFormats(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testMultipleDifferentFormats(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testMultipleDifferentFormats",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testIsoDateFormatDateTimeNoMillisUTC(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testIsoDateFormatDateTimeNoMillisUTC(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testIsoDateFormatDateTimeNoMillisUTC",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testInvalidPatterns(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testInvalidPatterns(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testInvalidPatterns",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testForInvalidDatesInEpochSecond(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testForInvalidDatesInEpochSecond(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testForInvalidDatesInEpochSecond",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testIsoDateFormatDateOptionalTimeUTC(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testIsoDateFormatDateOptionalTimeUTC(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testIsoDateFormatDateOptionalTimeUTC",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testRoundingSetOnTime(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testRoundingSetOnTime(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testRoundingSetOnTime",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testMultiParsers(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testMultiParsers(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testMultiParsers",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testRounding(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testRounding(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testRounding",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    },
    {
     "id": "ID#testForInvalidDatesInEpochMillis(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "displayName": "testForInvalidDatesInEpochMillis(org.elasticsearch.deps.joda.SimpleJodaTests)",
     "methodName": "testForInvalidDatesInEpochMillis",
     "className": "org.elasticsearch.deps.joda.SimpleJodaTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047284844
 }
]

[
 "TEST_STARTED",
 "ID#testThatEpochParserIsIdempotent(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatEpochParserIsIdempotent(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474047285089,
  "executionTime": 25
 }
]

[
 "TEST_STARTED",
 "ID#testWriteAndParse(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteAndParse(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474047285114,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatRootObjectParsingIsStrict(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatRootObjectParsingIsStrict(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474047285117,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testThatDefaultFormatterChecksForCorrectYearLength(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatDefaultFormatterChecksForCorrectYearLength(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474047285121,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testThatEpochParserIsPrinter(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatEpochParserIsPrinter(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474047285140,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUpperBound(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpperBound(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474047285142,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSlashInFormat(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSlashInFormat(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474047285144,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatNegativeEpochsCanBeParsed(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatNegativeEpochsCanBeParsed(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474047285146,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIsoVsCustom(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsoVsCustom(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474047285149,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testThatEpochTimePrinterWorks(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatEpochTimePrinterWorks(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474047285158,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testThatEpochsCanBeParsed(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatEpochsCanBeParsed(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474047285173,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRoundingWithTimeZone(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoundingWithTimeZone(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474047285176,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleFormats(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleFormats(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474047285178,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleDifferentFormats(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleDifferentFormats(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474047285181,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsoDateFormatDateTimeNoMillisUTC(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsoDateFormatDateTimeNoMillisUTC(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474047285184,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidPatterns(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidPatterns(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474047285186,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testForInvalidDatesInEpochSecond(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForInvalidDatesInEpochSecond(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474047285189,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsoDateFormatDateOptionalTimeUTC(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsoDateFormatDateOptionalTimeUTC(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474047285191,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRoundingSetOnTime(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoundingSetOnTime(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474047285194,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMultiParsers(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiParsers(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474047285196,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRounding(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRounding(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474047285198,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testForInvalidDatesInEpochMillis(org.elasticsearch.deps.joda.SimpleJodaTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForInvalidDatesInEpochMillis(org.elasticsearch.deps.joda.SimpleJodaTests)",
  "startTimestamp": 1474047285200,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.deps.joda.SimpleJodaTests",
  "startTimestamp": 1474047284844,
  "executionTime": 360
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.gateway.MetaDataStateFormatTests",
   "displayName": "org.elasticsearch.gateway.MetaDataStateFormatTests",
   "methodName": null,
   "className": "org.elasticsearch.gateway.MetaDataStateFormatTests",
   "children": [
    {
     "id": "ID#testLoadState(org.elasticsearch.gateway.MetaDataStateFormatTests)",
     "displayName": "testLoadState(org.elasticsearch.gateway.MetaDataStateFormatTests)",
     "methodName": "testLoadState",
     "className": "org.elasticsearch.gateway.MetaDataStateFormatTests",
     "children": []
    },
    {
     "id": "ID#testCorruption(org.elasticsearch.gateway.MetaDataStateFormatTests)",
     "displayName": "testCorruption(org.elasticsearch.gateway.MetaDataStateFormatTests)",
     "methodName": "testCorruption",
     "className": "org.elasticsearch.gateway.MetaDataStateFormatTests",
     "children": []
    },
    {
     "id": "ID#testVersionMismatch(org.elasticsearch.gateway.MetaDataStateFormatTests)",
     "displayName": "testVersionMismatch(org.elasticsearch.gateway.MetaDataStateFormatTests)",
     "methodName": "testVersionMismatch",
     "className": "org.elasticsearch.gateway.MetaDataStateFormatTests",
     "children": []
    },
    {
     "id": "ID#testReadWriteState(org.elasticsearch.gateway.MetaDataStateFormatTests)",
     "displayName": "testReadWriteState(org.elasticsearch.gateway.MetaDataStateFormatTests)",
     "methodName": "testReadWriteState",
     "className": "org.elasticsearch.gateway.MetaDataStateFormatTests",
     "children": []
    },
    {
     "id": "ID#testReadClusterState(org.elasticsearch.gateway.MetaDataStateFormatTests)",
     "displayName": "testReadClusterState(org.elasticsearch.gateway.MetaDataStateFormatTests)",
     "methodName": "testReadClusterState",
     "className": "org.elasticsearch.gateway.MetaDataStateFormatTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047285565
 }
]

[
 "TEST_STARTED",
 "ID#testLoadState(org.elasticsearch.gateway.MetaDataStateFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLoadState(org.elasticsearch.gateway.MetaDataStateFormatTests)",
  "startTimestamp": 1474047285609,
  "executionTime": 178
 }
]

[
 "TEST_STARTED",
 "ID#testCorruption(org.elasticsearch.gateway.MetaDataStateFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCorruption(org.elasticsearch.gateway.MetaDataStateFormatTests)",
  "startTimestamp": 1474047285788,
  "executionTime": 73
 }
]

[
 "TEST_STARTED",
 "ID#testVersionMismatch(org.elasticsearch.gateway.MetaDataStateFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionMismatch(org.elasticsearch.gateway.MetaDataStateFormatTests)",
  "startTimestamp": 1474047285862,
  "executionTime": 60
 }
]

[
 "TEST_STARTED",
 "ID#testReadWriteState(org.elasticsearch.gateway.MetaDataStateFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadWriteState(org.elasticsearch.gateway.MetaDataStateFormatTests)",
  "startTimestamp": 1474047285922,
  "executionTime": 137
 }
]

[
 "TEST_STARTED",
 "ID#testReadClusterState(org.elasticsearch.gateway.MetaDataStateFormatTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadClusterState(org.elasticsearch.gateway.MetaDataStateFormatTests)",
  "startTimestamp": 1474047286060,
  "executionTime": 16
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.gateway.MetaDataStateFormatTests",
  "startTimestamp": 1474047285565,
  "executionTime": 540
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.gateway.PrimaryShardAllocatorTests",
   "displayName": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
   "methodName": null,
   "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
   "children": [
    {
     "id": "ID#testStoreException(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testStoreException(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testStoreException",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testFoundAllocationButNoDecider(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testFoundAllocationButNoDecider(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testFoundAllocationButNoDecider",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testRecoverOnAnyNodeThrottle(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testRecoverOnAnyNodeThrottle(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testRecoverOnAnyNodeThrottle",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testEnoughCopiesFoundForAllocationOnLegacyIndex(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testEnoughCopiesFoundForAllocationOnLegacyIndex(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testEnoughCopiesFoundForAllocationOnLegacyIndex",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testRecoverOnAnyNode(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testRecoverOnAnyNode(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testRecoverOnAnyNode",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testRecoverOnAnyNodeDoesNotAssignIfNoShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testRecoverOnAnyNodeDoesNotAssignIfNoShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testRecoverOnAnyNodeDoesNotAssignIfNoShardAvailable",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testRestoreDoesNotAssignIfNoShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testRestoreDoesNotAssignIfNoShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testRestoreDoesNotAssignIfNoShardAvailable",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testNoProcessPrimaryNotAllocatedBefore(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testNoProcessPrimaryNotAllocatedBefore(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testNoProcessPrimaryNotAllocatedBefore",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testVersionBasedAllocationPrefersShardWithAllocationId(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testVersionBasedAllocationPrefersShardWithAllocationId(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testVersionBasedAllocationPrefersShardWithAllocationId",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testAllocateToTheHighestVersionOnLegacyIndex(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testAllocateToTheHighestVersionOnLegacyIndex(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testAllocateToTheHighestVersionOnLegacyIndex",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testEnoughCopiesFoundForAllocationOnLegacyIndexWithDifferentVersion(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testEnoughCopiesFoundForAllocationOnLegacyIndexWithDifferentVersion(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testEnoughCopiesFoundForAllocationOnLegacyIndexWithDifferentVersion",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testFoundAllocationButThrottlingDecider(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testFoundAllocationButThrottlingDecider(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testFoundAllocationButThrottlingDecider",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testDontAllocateOnNoOrThrottleForceAllocationDecision(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testDontAllocateOnNoOrThrottleForceAllocationDecision(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testDontAllocateOnNoOrThrottleForceAllocationDecision",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testDontForceAllocateOnThrottleDecision(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testDontForceAllocateOnThrottleDecision(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testDontForceAllocateOnThrottleDecision",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testRestore(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testRestore(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testRestore",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testFoundAllocationAndAllocating(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testFoundAllocationAndAllocating(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testFoundAllocationAndAllocating",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testNoMatchingAllocationIdFound(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testNoMatchingAllocationIdFound(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testNoMatchingAllocationIdFound",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testNoAllocationFound(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testNoAllocationFound(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testNoAllocationFound",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testPreferAllocatingPreviousPrimary(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testPreferAllocatingPreviousPrimary(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testPreferAllocatingPreviousPrimary",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testForceAllocatePrimary(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testForceAllocatePrimary(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testForceAllocatePrimary",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testNoActiveAllocationIds(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testNoActiveAllocationIds(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testNoActiveAllocationIds",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testNoAsyncFetchData(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testNoAsyncFetchData(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testNoAsyncFetchData",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testRestoreThrottle(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testRestoreThrottle(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testRestoreThrottle",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testRestoreForcesAllocateIfShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testRestoreForcesAllocateIfShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testRestoreForcesAllocateIfShardAvailable",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testRecoverOnAnyNodeForcesAllocateIfShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testRecoverOnAnyNodeForcesAllocateIfShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testRecoverOnAnyNodeForcesAllocateIfShardAvailable",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047286364
 }
]

[
 "TEST_STARTED",
 "ID#testStoreException(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStoreException(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474047286382,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testFoundAllocationButNoDecider(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFoundAllocationButNoDecider(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474047286392,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverOnAnyNodeThrottle(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverOnAnyNodeThrottle(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474047286397,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEnoughCopiesFoundForAllocationOnLegacyIndex(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnoughCopiesFoundForAllocationOnLegacyIndex(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474047286401,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverOnAnyNode(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverOnAnyNode(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474047286419,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverOnAnyNodeDoesNotAssignIfNoShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverOnAnyNodeDoesNotAssignIfNoShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474047286422,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRestoreDoesNotAssignIfNoShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestoreDoesNotAssignIfNoShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474047286426,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testNoProcessPrimaryNotAllocatedBefore(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoProcessPrimaryNotAllocatedBefore(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474047286431,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testVersionBasedAllocationPrefersShardWithAllocationId(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionBasedAllocationPrefersShardWithAllocationId(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474047286435,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testAllocateToTheHighestVersionOnLegacyIndex(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllocateToTheHighestVersionOnLegacyIndex(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474047286439,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEnoughCopiesFoundForAllocationOnLegacyIndexWithDifferentVersion(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnoughCopiesFoundForAllocationOnLegacyIndexWithDifferentVersion(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474047286442,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFoundAllocationButThrottlingDecider(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFoundAllocationButThrottlingDecider(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474047286447,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testDontAllocateOnNoOrThrottleForceAllocationDecision(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDontAllocateOnNoOrThrottleForceAllocationDecision(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474047286452,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDontForceAllocateOnThrottleDecision(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDontForceAllocateOnThrottleDecision(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474047286454,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRestore(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestore(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474047286456,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFoundAllocationAndAllocating(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFoundAllocationAndAllocating(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474047286460,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNoMatchingAllocationIdFound(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoMatchingAllocationIdFound(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474047286464,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNoAllocationFound(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoAllocationFound(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474047286467,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testPreferAllocatingPreviousPrimary(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreferAllocatingPreviousPrimary(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474047286471,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testForceAllocatePrimary(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForceAllocatePrimary(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474047286474,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNoActiveAllocationIds(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoActiveAllocationIds(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474047286477,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNoAsyncFetchData(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoAsyncFetchData(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474047286480,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRestoreThrottle(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestoreThrottle(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474047286484,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testRestoreForcesAllocateIfShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestoreForcesAllocateIfShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474047286490,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverOnAnyNodeForcesAllocateIfShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverOnAnyNodeForcesAllocateIfShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474047286494,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.gateway.PrimaryShardAllocatorTests",
  "startTimestamp": 1474047286364,
  "executionTime": 136
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.VersionTypeTests",
   "displayName": "org.elasticsearch.index.VersionTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.VersionTypeTests",
   "children": [
    {
     "id": "ID#testExternalGTEVersionConflict(org.elasticsearch.index.VersionTypeTests)",
     "displayName": "testExternalGTEVersionConflict(org.elasticsearch.index.VersionTypeTests)",
     "methodName": "testExternalGTEVersionConflict",
     "className": "org.elasticsearch.index.VersionTypeTests",
     "children": []
    },
    {
     "id": "ID#testInternalVersionConflict(org.elasticsearch.index.VersionTypeTests)",
     "displayName": "testInternalVersionConflict(org.elasticsearch.index.VersionTypeTests)",
     "methodName": "testInternalVersionConflict",
     "className": "org.elasticsearch.index.VersionTypeTests",
     "children": []
    },
    {
     "id": "ID#testExternalVersionConflict(org.elasticsearch.index.VersionTypeTests)",
     "displayName": "testExternalVersionConflict(org.elasticsearch.index.VersionTypeTests)",
     "methodName": "testExternalVersionConflict",
     "className": "org.elasticsearch.index.VersionTypeTests",
     "children": []
    },
    {
     "id": "ID#testVersionValidation(org.elasticsearch.index.VersionTypeTests)",
     "displayName": "testVersionValidation(org.elasticsearch.index.VersionTypeTests)",
     "methodName": "testVersionValidation",
     "className": "org.elasticsearch.index.VersionTypeTests",
     "children": []
    },
    {
     "id": "ID#testForceVersionConflict(org.elasticsearch.index.VersionTypeTests)",
     "displayName": "testForceVersionConflict(org.elasticsearch.index.VersionTypeTests)",
     "methodName": "testForceVersionConflict",
     "className": "org.elasticsearch.index.VersionTypeTests",
     "children": []
    },
    {
     "id": "ID#testUpdateVersion(org.elasticsearch.index.VersionTypeTests)",
     "displayName": "testUpdateVersion(org.elasticsearch.index.VersionTypeTests)",
     "methodName": "testUpdateVersion",
     "className": "org.elasticsearch.index.VersionTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047286656
 }
]

[
 "TEST_STARTED",
 "ID#testExternalGTEVersionConflict(org.elasticsearch.index.VersionTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExternalGTEVersionConflict(org.elasticsearch.index.VersionTypeTests)",
  "startTimestamp": 1474047286677,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testInternalVersionConflict(org.elasticsearch.index.VersionTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInternalVersionConflict(org.elasticsearch.index.VersionTypeTests)",
  "startTimestamp": 1474047286681,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testExternalVersionConflict(org.elasticsearch.index.VersionTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExternalVersionConflict(org.elasticsearch.index.VersionTypeTests)",
  "startTimestamp": 1474047286684,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testVersionValidation(org.elasticsearch.index.VersionTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionValidation(org.elasticsearch.index.VersionTypeTests)",
  "startTimestamp": 1474047286686,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testForceVersionConflict(org.elasticsearch.index.VersionTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForceVersionConflict(org.elasticsearch.index.VersionTypeTests)",
  "startTimestamp": 1474047286689,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUpdateVersion(org.elasticsearch.index.VersionTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdateVersion(org.elasticsearch.index.VersionTypeTests)",
  "startTimestamp": 1474047286691,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.VersionTypeTests",
  "startTimestamp": 1474047286656,
  "executionTime": 40
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests",
   "children": [
    {
     "id": "ID#testPreserveOriginal(org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests)",
     "displayName": "testPreserveOriginal(org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests)",
     "methodName": "testPreserveOriginal",
     "className": "org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testDefault(org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests)",
     "displayName": "testDefault(org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests)",
     "methodName": "testDefault",
     "className": "org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047286986
 }
]

[
 "TEST_STARTED",
 "ID#testPreserveOriginal(org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreserveOriginal(org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests)",
  "startTimestamp": 1474047287026,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testDefault(org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefault(org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests)",
  "startTimestamp": 1474047287040,
  "executionTime": 17
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests",
  "startTimestamp": 1474047286986,
  "executionTime": 79
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests",
   "children": [
    {
     "id": "ID#testInverseMapping(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)",
     "displayName": "testInverseMapping(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)",
     "methodName": "testInverseMapping",
     "className": "org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testFillerToken(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)",
     "displayName": "testFillerToken(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)",
     "methodName": "testFillerToken",
     "className": "org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testInverseMappingNoShingles(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)",
     "displayName": "testInverseMappingNoShingles(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)",
     "methodName": "testInverseMappingNoShingles",
     "className": "org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testDefault(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)",
     "displayName": "testDefault(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)",
     "methodName": "testDefault",
     "className": "org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047287264
 }
]

[
 "TEST_STARTED",
 "ID#testInverseMapping(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInverseMapping(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)",
  "startTimestamp": 1474047287289,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testFillerToken(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFillerToken(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)",
  "startTimestamp": 1474047287304,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testInverseMappingNoShingles(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInverseMappingNoShingles(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)",
  "startTimestamp": 1474047287329,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testDefault(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefault(org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests)",
  "startTimestamp": 1474047287339,
  "executionTime": 13
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.ShingleTokenFilterFactoryTests",
  "startTimestamp": 1474047287264,
  "executionTime": 93
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.SnowballAnalyzerTests",
   "displayName": "org.elasticsearch.index.analysis.SnowballAnalyzerTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.SnowballAnalyzerTests",
   "children": [
    {
     "id": "ID#testStopwords(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "displayName": "testStopwords(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "methodName": "testStopwords",
     "className": "org.elasticsearch.index.analysis.SnowballAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testReusableTokenStream(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "displayName": "testReusableTokenStream(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "methodName": "testReusableTokenStream",
     "className": "org.elasticsearch.index.analysis.SnowballAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testTurkish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "displayName": "testTurkish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "methodName": "testTurkish",
     "className": "org.elasticsearch.index.analysis.SnowballAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testEnglish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "displayName": "testEnglish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "methodName": "testEnglish",
     "className": "org.elasticsearch.index.analysis.SnowballAnalyzerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047287546
 }
]

[
 "TEST_STARTED",
 "ID#testStopwords(org.elasticsearch.index.analysis.SnowballAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStopwords(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
  "startTimestamp": 1474047287571,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testReusableTokenStream(org.elasticsearch.index.analysis.SnowballAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReusableTokenStream(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
  "startTimestamp": 1474047287580,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTurkish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTurkish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
  "startTimestamp": 1474047287582,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testEnglish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnglish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
  "startTimestamp": 1474047287589,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.SnowballAnalyzerTests",
  "startTimestamp": 1474047287546,
  "executionTime": 46
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests",
   "children": [
    {
     "id": "ID#testCommonGramsAnalysis(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
     "displayName": "testCommonGramsAnalysis(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
     "methodName": "testCommonGramsAnalysis",
     "className": "org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testQueryModeSettings(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
     "displayName": "testQueryModeSettings(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
     "methodName": "testQueryModeSettings",
     "className": "org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testDefault(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
     "displayName": "testDefault(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
     "methodName": "testDefault",
     "className": "org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testWithoutCommonWordsMatch(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
     "displayName": "testWithoutCommonWordsMatch(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
     "methodName": "testWithoutCommonWordsMatch",
     "className": "org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testQueryModeCommonGramsAnalysis(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
     "displayName": "testQueryModeCommonGramsAnalysis(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
     "methodName": "testQueryModeCommonGramsAnalysis",
     "className": "org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testSettings(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
     "displayName": "testSettings(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
     "methodName": "testSettings",
     "className": "org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047287814
 }
]

[
 "TEST_STARTED",
 "ID#testCommonGramsAnalysis(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCommonGramsAnalysis(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
  "startTimestamp": 1474047287833,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testQueryModeSettings(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryModeSettings(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
  "startTimestamp": 1474047287862,
  "executionTime": 44
 }
]

[
 "TEST_STARTED",
 "ID#testDefault(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefault(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
  "startTimestamp": 1474047287906,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testWithoutCommonWordsMatch(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithoutCommonWordsMatch(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
  "startTimestamp": 1474047287919,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testQueryModeCommonGramsAnalysis(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryModeCommonGramsAnalysis(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
  "startTimestamp": 1474047287944,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testSettings(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSettings(org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests)",
  "startTimestamp": 1474047287963,
  "executionTime": 26
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests",
  "startTimestamp": 1474047287814,
  "executionTime": 195
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests",
   "displayName": "org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests",
   "methodName": null,
   "className": "org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests",
   "children": [
    {
     "id": "ID#testRejectOtherIndex(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
     "displayName": "testRejectOtherIndex(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
     "methodName": "testRejectOtherIndex",
     "className": "org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests",
     "children": []
    },
    {
     "id": "ID#testListener(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
     "displayName": "testListener(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
     "methodName": "testListener",
     "className": "org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests",
     "children": []
    },
    {
     "id": "ID#testSetNullListener(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
     "displayName": "testSetNullListener(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
     "methodName": "testSetNullListener",
     "className": "org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests",
     "children": []
    },
    {
     "id": "ID#testInvalidateEntries(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
     "displayName": "testInvalidateEntries(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
     "methodName": "testInvalidateEntries",
     "className": "org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047288086
 }
]

[
 "TEST_STARTED",
 "ID#testRejectOtherIndex(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRejectOtherIndex(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
  "startTimestamp": 1474047288138,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testListener(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListener(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
  "startTimestamp": 1474047288157,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testSetNullListener(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetNullListener(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
  "startTimestamp": 1474047288163,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidateEntries(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidateEntries(org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests)",
  "startTimestamp": 1474047288166,
  "executionTime": 57
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.cache.bitset.BitSetFilterCacheTests",
  "startTimestamp": 1474047288086,
  "executionTime": 140
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.engine.InternalEngineSettingsTests",
   "displayName": "org.elasticsearch.index.engine.InternalEngineSettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.index.engine.InternalEngineSettingsTests",
   "children": [
    {
     "id": "ID#testSettingsUpdate(org.elasticsearch.index.engine.InternalEngineSettingsTests)",
     "displayName": "testSettingsUpdate(org.elasticsearch.index.engine.InternalEngineSettingsTests)",
     "methodName": "testSettingsUpdate",
     "className": "org.elasticsearch.index.engine.InternalEngineSettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047288377
 }
]

[
 "TEST_STARTED",
 "ID#testSettingsUpdate(org.elasticsearch.index.engine.InternalEngineSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:48,414][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:48,469][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:48,469][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:48,473][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:48,476][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:48,476][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:48,662][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:48,662][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:48,663][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[99]}, bound_addresses {local[99]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:48,681][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{sHngrfYlRy2WbuWtOKApUQ}{VEwsrZqOS9WCCzhsiZ6GKA}{local}{local[99]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:48,685][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:48,727][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:48,749][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [foo] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:48,851][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[foo][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:48,878][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [60s] to [3913063308058376ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:48,882][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [60s] to [3913063308058376ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:48,908][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [3913063308058376ms] to [1000ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:48,909][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [3913063308058376ms] to [1000ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:48,930][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [1000ms] to [0ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:48,930][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [1000ms] to [0ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:48,989][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [0ms] to [1000ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:48,990][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [0ms] to [1000ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:49,012][INFO ][org.elasticsearch.index.engine] [node_s_0] [foo][0] [InternalEngineSettingsTests#testSettingsUpdate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSettingsUpdate(org.elasticsearch.index.engine.InternalEngineSettingsTests)",
  "startTimestamp": 1474047288403,
  "executionTime": 673
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:49,076][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:49,083][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:49,083][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:49,085][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.engine.InternalEngineSettingsTests",
  "startTimestamp": 1474047288377,
  "executionTime": 714
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
   "displayName": "org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
   "children": [
    {
     "id": "ID#testSingleValueWithMissing(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "displayName": "testSingleValueWithMissing(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "methodName": "testSingleValueWithMissing",
     "className": "org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMissingFirst(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "displayName": "testSortMissingFirst(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "methodName": "testSortMissingFirst",
     "className": "org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "displayName": "testSortMultiValuesFields(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "methodName": "testSortMultiValuesFields",
     "className": "org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testNestedSortingMax(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "displayName": "testNestedSortingMax(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "methodName": "testNestedSortingMax",
     "className": "org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMissingLast(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "displayName": "testSortMissingLast(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "methodName": "testSortMissingLast",
     "className": "org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testActualMissingValue(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "displayName": "testActualMissingValue(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "methodName": "testActualMissingValue",
     "className": "org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testNestedSortingMin(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "displayName": "testNestedSortingMin(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "methodName": "testNestedSortingMin",
     "className": "org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testMissingValueForAll(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "displayName": "testMissingValueForAll(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "methodName": "testMissingValueForAll",
     "className": "org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMissingLastReverse(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "displayName": "testSortMissingLastReverse(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "methodName": "testSortMissingLastReverse",
     "className": "org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testMultiValueWithMissing(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "displayName": "testMultiValueWithMissing(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "methodName": "testMultiValueWithMissing",
     "className": "org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "displayName": "testEmpty(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSingleValueAllSet(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "displayName": "testSingleValueAllSet(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "methodName": "testSingleValueAllSet",
     "className": "org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testActualMissingValueReverse(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "displayName": "testActualMissingValueReverse(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "methodName": "testActualMissingValueReverse",
     "className": "org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testTermsEnum(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "displayName": "testTermsEnum(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "methodName": "testTermsEnum",
     "className": "org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testDeletedDocs(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "displayName": "testDeletedDocs(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "methodName": "testDeletedDocs",
     "className": "org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testMultiValueAllSet(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "displayName": "testMultiValueAllSet(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "methodName": "testMultiValueAllSet",
     "className": "org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testGlobalOrdinals(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "displayName": "testGlobalOrdinals(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "methodName": "testGlobalOrdinals",
     "className": "org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMissingFirstReverse(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "displayName": "testSortMissingFirstReverse(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "methodName": "testSortMissingFirstReverse",
     "className": "org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testGlobalOrdinalsGetRemovedOnceIndexReaderCloses(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "displayName": "testGlobalOrdinalsGetRemovedOnceIndexReaderCloses(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
     "methodName": "testGlobalOrdinalsGetRemovedOnceIndexReaderCloses",
     "className": "org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047289202
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValueWithMissing(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:49,237][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:49,320][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:49,320][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:49,325][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:49,329][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:49,329][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:49,499][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:49,499][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:49,502][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[100]}, bound_addresses {local[100]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:49,505][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{iDFCDqRjTSCWf0uhDOIzmA}{d3JOgTNaTJmYnRP10nfReA}{local}{local[100]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:49,505][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:49,524][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:49,543][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:49,656][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:49,675][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [NoOrdinalsStringFieldDataTests#testSingleValueWithMissing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValueWithMissing(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
  "startTimestamp": 1474047289229,
  "executionTime": 480
 }
]

[
 "TEST_STARTED",
 "ID#testSortMissingFirst(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:49,717][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:49,788][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:50,015][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [NoOrdinalsStringFieldDataTests#testSortMissingFirst]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMissingFirst(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
  "startTimestamp": 1474047289709,
  "executionTime": 354
 }
]

[
 "TEST_STARTED",
 "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:50,069][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:50,128][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:50,148][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [NoOrdinalsStringFieldDataTests#testSortMultiValuesFields]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
  "startTimestamp": 1474047290063,
  "executionTime": 132
 }
]

[
 "TEST_STARTED",
 "ID#testNestedSortingMax(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:50,202][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:50,265][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:50,796][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [NoOrdinalsStringFieldDataTests#testNestedSortingMax]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedSortingMax(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
  "startTimestamp": 1474047290196,
  "executionTime": 665
 }
]

[
 "TEST_STARTED",
 "ID#testSortMissingLast(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:50,891][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:51,189][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:51,264][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [NoOrdinalsStringFieldDataTests#testSortMissingLast]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMissingLast(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
  "startTimestamp": 1474047290861,
  "executionTime": 464
 }
]

[
 "TEST_STARTED",
 "ID#testActualMissingValue(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:51,352][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:51,431][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:51,608][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [NoOrdinalsStringFieldDataTests#testActualMissingValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActualMissingValue(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
  "startTimestamp": 1474047291325,
  "executionTime": 631
 }
]

[
 "TEST_STARTED",
 "ID#testNestedSortingMin(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:51,963][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:52,213][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:52,831][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [NoOrdinalsStringFieldDataTests#testNestedSortingMin]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedSortingMin(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
  "startTimestamp": 1474047291957,
  "executionTime": 919
 }
]

[
 "TEST_STARTED",
 "ID#testMissingValueForAll(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:52,884][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:53,023][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:53,074][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [NoOrdinalsStringFieldDataTests#testMissingValueForAll]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingValueForAll(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
  "startTimestamp": 1474047292877,
  "executionTime": 281
 }
]

[
 "TEST_STARTED",
 "ID#testSortMissingLastReverse(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:53,166][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:53,272][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:53,792][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [NoOrdinalsStringFieldDataTests#testSortMissingLastReverse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMissingLastReverse(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
  "startTimestamp": 1474047293158,
  "executionTime": 1064
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValueWithMissing(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:54,235][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:54,359][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:54,377][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [NoOrdinalsStringFieldDataTests#testMultiValueWithMissing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValueWithMissing(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
  "startTimestamp": 1474047294222,
  "executionTime": 203
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:54,431][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:54,525][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:54,591][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [NoOrdinalsStringFieldDataTests#testEmpty]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
  "startTimestamp": 1474047294425,
  "executionTime": 197
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValueAllSet(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:54,632][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:54,805][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:54,820][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [NoOrdinalsStringFieldDataTests#testSingleValueAllSet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValueAllSet(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
  "startTimestamp": 1474047294623,
  "executionTime": 438
 }
]

[
 "TEST_STARTED",
 "ID#testActualMissingValueReverse(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:55,071][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:55,134][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:55,380][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [NoOrdinalsStringFieldDataTests#testActualMissingValueReverse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActualMissingValueReverse(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
  "startTimestamp": 1474047295061,
  "executionTime": 447
 }
]

[
 "TEST_STARTED",
 "ID#testTermsEnum(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:55,515][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:55,583][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:55,598][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [NoOrdinalsStringFieldDataTests#testTermsEnum]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testTermsEnum(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
  "message": "We can't test this, since the returned IFD instance doesn't implement IndexFieldData.WithOrdinals",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: We can't test this, since the returned IFD instance doesn't implement IndexFieldData.WithOrdinals\r\n\tat __randomizedtesting.SeedInfo.seed([229C635BFFC33CB2:1A612293039DE4F0]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests.testTermsEnum(NoOrdinalsStringFieldDataTests.java:76)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: We can't test this, since the returned IFD instance doesn't implement IndexFieldData.WithOrdinals",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermsEnum(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
  "startTimestamp": 1474047295509,
  "executionTime": 125
 }
]

[
 "TEST_STARTED",
 "ID#testDeletedDocs(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:55,641][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:55,703][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:55,729][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [NoOrdinalsStringFieldDataTests#testDeletedDocs]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeletedDocs(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
  "startTimestamp": 1474047295635,
  "executionTime": 164
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValueAllSet(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:55,806][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:55,852][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:55,872][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [NoOrdinalsStringFieldDataTests#testMultiValueAllSet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValueAllSet(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
  "startTimestamp": 1474047295799,
  "executionTime": 160
 }
]

[
 "TEST_STARTED",
 "ID#testGlobalOrdinals(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:55,965][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:56,073][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:56,097][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [NoOrdinalsStringFieldDataTests#testGlobalOrdinals]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGlobalOrdinals(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
  "startTimestamp": 1474047295959,
  "executionTime": 174
 }
]

[
 "TEST_STARTED",
 "ID#testSortMissingFirstReverse(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:56,142][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:56,411][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:56,488][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [NoOrdinalsStringFieldDataTests#testSortMissingFirstReverse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMissingFirstReverse(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
  "startTimestamp": 1474047296133,
  "executionTime": 529
 }
]

[
 "TEST_STARTED",
 "ID#testGlobalOrdinalsGetRemovedOnceIndexReaderCloses(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:56,670][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:56,781][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:56,814][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [NoOrdinalsStringFieldDataTests#testGlobalOrdinalsGetRemovedOnceIndexReaderCloses]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGlobalOrdinalsGetRemovedOnceIndexReaderCloses(org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests)",
  "startTimestamp": 1474047296663,
  "executionTime": 185
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:56,853][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:56,853][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:56,854][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:34:56,856][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.NoOrdinalsStringFieldDataTests",
  "startTimestamp": 1474047289202,
  "executionTime": 7663
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.DocumentFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.DocumentFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.DocumentFieldMapperTests",
   "children": [
    {
     "id": "ID#testAnalyzers(org.elasticsearch.index.mapper.DocumentFieldMapperTests)",
     "displayName": "testAnalyzers(org.elasticsearch.index.mapper.DocumentFieldMapperTests)",
     "methodName": "testAnalyzers",
     "className": "org.elasticsearch.index.mapper.DocumentFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047296963
 }
]

[
 "TEST_STARTED",
 "ID#testAnalyzers(org.elasticsearch.index.mapper.DocumentFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAnalyzers(org.elasticsearch.index.mapper.DocumentFieldMapperTests)",
  "startTimestamp": 1474047296986,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.DocumentFieldMapperTests",
  "startTimestamp": 1474047296963,
  "executionTime": 31
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.DocumentMapperMergeTests",
   "displayName": "org.elasticsearch.index.mapper.DocumentMapperMergeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.DocumentMapperMergeTests",
   "children": [
    {
     "id": "ID#testMergeSearchAnalyzer(org.elasticsearch.index.mapper.DocumentMapperMergeTests)",
     "displayName": "testMergeSearchAnalyzer(org.elasticsearch.index.mapper.DocumentMapperMergeTests)",
     "methodName": "testMergeSearchAnalyzer",
     "className": "org.elasticsearch.index.mapper.DocumentMapperMergeTests",
     "children": []
    },
    {
     "id": "ID#testMergeObjectAndNested(org.elasticsearch.index.mapper.DocumentMapperMergeTests)",
     "displayName": "testMergeObjectAndNested(org.elasticsearch.index.mapper.DocumentMapperMergeTests)",
     "methodName": "testMergeObjectAndNested",
     "className": "org.elasticsearch.index.mapper.DocumentMapperMergeTests",
     "children": []
    },
    {
     "id": "ID#testMergeObjectDynamic(org.elasticsearch.index.mapper.DocumentMapperMergeTests)",
     "displayName": "testMergeObjectDynamic(org.elasticsearch.index.mapper.DocumentMapperMergeTests)",
     "methodName": "testMergeObjectDynamic",
     "className": "org.elasticsearch.index.mapper.DocumentMapperMergeTests",
     "children": []
    },
    {
     "id": "ID#test1Merge(org.elasticsearch.index.mapper.DocumentMapperMergeTests)",
     "displayName": "test1Merge(org.elasticsearch.index.mapper.DocumentMapperMergeTests)",
     "methodName": "test1Merge",
     "className": "org.elasticsearch.index.mapper.DocumentMapperMergeTests",
     "children": []
    },
    {
     "id": "ID#testChangeSearchAnalyzerToDefault(org.elasticsearch.index.mapper.DocumentMapperMergeTests)",
     "displayName": "testChangeSearchAnalyzerToDefault(org.elasticsearch.index.mapper.DocumentMapperMergeTests)",
     "methodName": "testChangeSearchAnalyzerToDefault",
     "className": "org.elasticsearch.index.mapper.DocumentMapperMergeTests",
     "children": []
    },
    {
     "id": "ID#testDoNotRepeatOriginalMapping(org.elasticsearch.index.mapper.DocumentMapperMergeTests)",
     "displayName": "testDoNotRepeatOriginalMapping(org.elasticsearch.index.mapper.DocumentMapperMergeTests)",
     "methodName": "testDoNotRepeatOriginalMapping",
     "className": "org.elasticsearch.index.mapper.DocumentMapperMergeTests",
     "children": []
    },
    {
     "id": "ID#testConcurrentMergeTest(org.elasticsearch.index.mapper.DocumentMapperMergeTests)",
     "displayName": "testConcurrentMergeTest(org.elasticsearch.index.mapper.DocumentMapperMergeTests)",
     "methodName": "testConcurrentMergeTest",
     "className": "org.elasticsearch.index.mapper.DocumentMapperMergeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047297242
 }
]

[
 "TEST_STARTED",
 "ID#testMergeSearchAnalyzer(org.elasticsearch.index.mapper.DocumentMapperMergeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:57,287][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:57,322][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:57,322][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:57,326][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:57,328][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:57,328][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:57,498][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:57,498][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:57,499][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[101]}, bound_addresses {local[101]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:57,520][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{UgGq3g2STeisqpcEZemSeg}{Lqd0dC0-R9-9Mt4dhBzIow}{local}{local[101]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:57,521][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:57,568][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:57,601][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:57,681][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:57,694][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentMapperMergeTests#testMergeSearchAnalyzer]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeSearchAnalyzer(org.elasticsearch.index.mapper.DocumentMapperMergeTests)",
  "startTimestamp": 1474047297277,
  "executionTime": 454
 }
]

[
 "TEST_STARTED",
 "ID#testMergeObjectAndNested(org.elasticsearch.index.mapper.DocumentMapperMergeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:57,742][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:57,796][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:57,810][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentMapperMergeTests#testMergeObjectAndNested]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeObjectAndNested(org.elasticsearch.index.mapper.DocumentMapperMergeTests)",
  "startTimestamp": 1474047297731,
  "executionTime": 115
 }
]

[
 "TEST_STARTED",
 "ID#testMergeObjectDynamic(org.elasticsearch.index.mapper.DocumentMapperMergeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:57,852][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:57,919][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:57,936][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentMapperMergeTests#testMergeObjectDynamic]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeObjectDynamic(org.elasticsearch.index.mapper.DocumentMapperMergeTests)",
  "startTimestamp": 1474047297846,
  "executionTime": 134
 }
]

[
 "TEST_STARTED",
 "ID#test1Merge(org.elasticsearch.index.mapper.DocumentMapperMergeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:57,987][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:58,075][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:58,096][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentMapperMergeTests#test1Merge]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#test1Merge(org.elasticsearch.index.mapper.DocumentMapperMergeTests)",
  "startTimestamp": 1474047297981,
  "executionTime": 162
 }
]

[
 "TEST_STARTED",
 "ID#testChangeSearchAnalyzerToDefault(org.elasticsearch.index.mapper.DocumentMapperMergeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:58,151][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:58,241][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:58,258][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentMapperMergeTests#testChangeSearchAnalyzerToDefault]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testChangeSearchAnalyzerToDefault(org.elasticsearch.index.mapper.DocumentMapperMergeTests)",
  "startTimestamp": 1474047298143,
  "executionTime": 141
 }
]

[
 "TEST_STARTED",
 "ID#testDoNotRepeatOriginalMapping(org.elasticsearch.index.mapper.DocumentMapperMergeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:58,291][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:58,334][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:58,349][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentMapperMergeTests#testDoNotRepeatOriginalMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoNotRepeatOriginalMapping(org.elasticsearch.index.mapper.DocumentMapperMergeTests)",
  "startTimestamp": 1474047298284,
  "executionTime": 95
 }
]

[
 "TEST_STARTED",
 "ID#testConcurrentMergeTest(org.elasticsearch.index.mapper.DocumentMapperMergeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:58,385][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:34:58,432][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:00,513][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentMapperMergeTests#testConcurrentMergeTest]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcurrentMergeTest(org.elasticsearch.index.mapper.DocumentMapperMergeTests)",
  "startTimestamp": 1474047298379,
  "executionTime": 2161
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:00,540][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:00,541][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:00,541][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:00,542][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.DocumentMapperMergeTests",
  "startTimestamp": 1474047297242,
  "executionTime": 3306
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
   "children": [
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "displayName": "testValueForSearch(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "methodName": "testValueForSearch",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueFormat(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "displayName": "testValueFormat(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "methodName": "testValueFormat",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "displayName": "testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "methodName": "testIsFieldWithinQuery",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testIsFieldWithinQueryEmptyReader(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "displayName": "testIsFieldWithinQueryEmptyReader(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "methodName": "testIsFieldWithinQueryEmptyReader",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047300809
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
  "startTimestamp": 1474047300834,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
  "startTimestamp": 1474047300837,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValueFormat(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueFormat(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
  "startTimestamp": 1474047300839,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
  "startTimestamp": 1474047300841,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
  "startTimestamp": 1474047300843,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
  "startTimestamp": 1474047300846,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
  "startTimestamp": 1474047300848,
  "executionTime": 70
 }
]

[
 "TEST_STARTED",
 "ID#testIsFieldWithinQueryEmptyReader(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsFieldWithinQueryEmptyReader(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
  "startTimestamp": 1474047300920,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
  "startTimestamp": 1474047300922,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
  "startTimestamp": 1474047300809,
  "executionTime": 119
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests",
   "children": [
    {
     "id": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "displayName": "testValueForSearch(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "methodName": "testValueForSearch",
     "className": "org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "displayName": "testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "methodName": "testIsFieldWithinQuery",
     "className": "org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047301230
 }
]

[
 "TEST_STARTED",
 "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
  "startTimestamp": 1474047301284,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
  "startTimestamp": 1474047301286,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
  "startTimestamp": 1474047301289,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
  "startTimestamp": 1474047301291,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
  "startTimestamp": 1474047301292,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
  "startTimestamp": 1474047301294,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests)",
  "startTimestamp": 1474047301296,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.LegacyDoubleFieldTypeTests",
  "startTimestamp": 1474047301230,
  "executionTime": 71
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests",
   "children": [
    {
     "id": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
     "displayName": "testValueForSearch(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
     "methodName": "testValueForSearch",
     "className": "org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
     "displayName": "testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
     "methodName": "testIsFieldWithinQuery",
     "className": "org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047301510
 }
]

[
 "TEST_STARTED",
 "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
  "startTimestamp": 1474047301569,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
  "startTimestamp": 1474047301571,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
  "startTimestamp": 1474047301573,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
  "startTimestamp": 1474047301575,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
  "startTimestamp": 1474047301577,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
  "startTimestamp": 1474047301580,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests)",
  "startTimestamp": 1474047301581,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.LegacyFloatFieldTypeTests",
  "startTimestamp": 1474047301510,
  "executionTime": 75
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests",
   "children": [
    {
     "id": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "displayName": "testValueForSearch(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "methodName": "testValueForSearch",
     "className": "org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "displayName": "testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "methodName": "testIsFieldWithinQuery",
     "className": "org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047301790
 }
]

[
 "TEST_STARTED",
 "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
  "startTimestamp": 1474047301813,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
  "startTimestamp": 1474047301815,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
  "startTimestamp": 1474047301817,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
  "startTimestamp": 1474047301820,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
  "startTimestamp": 1474047301822,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
  "startTimestamp": 1474047301824,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
  "startTimestamp": 1474047301826,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests",
  "startTimestamp": 1474047301790,
  "executionTime": 39
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.PathMatchDynamicTemplateTests",
   "displayName": "org.elasticsearch.index.mapper.PathMatchDynamicTemplateTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.PathMatchDynamicTemplateTests",
   "children": [
    {
     "id": "ID#testSimple(org.elasticsearch.index.mapper.PathMatchDynamicTemplateTests)",
     "displayName": "testSimple(org.elasticsearch.index.mapper.PathMatchDynamicTemplateTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.index.mapper.PathMatchDynamicTemplateTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047302079
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.index.mapper.PathMatchDynamicTemplateTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:35:02,101][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:35:02,126][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:35:02,126][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:35:02,131][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:35:02,133][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:35:02,133][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:35:02,298][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:35:02,299][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:35:02,299][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[102]}, bound_addresses {local[102]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:35:02,315][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{M4tW3wB-SWyEs3zBmq4I9g}{pE-5Le81SSaG0HWRKc8Tag}{local}{local[102]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:35:02,316][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:35:02,368][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:35:02,403][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:35:02,465][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:35:02,480][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/uGVifUXeQkaUpNunF_zlXQ] create_mapping [person]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:35:02,508][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/uGVifUXeQkaUpNunF_zlXQ] update_mapping [person]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:35:02,522][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [PathMatchDynamicTemplateTests#testSimple]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.index.mapper.PathMatchDynamicTemplateTests)",
  "startTimestamp": 1474047302092,
  "executionTime": 464
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:35:02,556][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:35:02,557][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:35:02,557][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T06:35:02,558][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.PathMatchDynamicTemplateTests",
  "startTimestamp": 1474047302079,
  "executionTime": 485
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.RootObjectMapperTests",
   "displayName": "org.elasticsearch.index.mapper.RootObjectMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.RootObjectMapperTests",
   "children": [
    {
     "id": "ID#testDynamicTemplates(org.elasticsearch.index.mapper.RootObjectMapperTests)",
     "displayName": "testDynamicTemplates(org.elasticsearch.index.mapper.RootObjectMapperTests)",
     "methodName": "testDynamicTemplates",
     "className": "org.elasticsearch.index.mapper.RootObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testDateFormatters(org.elasticsearch.index.mapper.RootObjectMapperTests)",
     "displayName": "testDateFormatters(org.elasticsearch.index.mapper.RootObjectMapperTests)",
     "methodName": "testDateFormatters",
     "className": "org.elasticsearch.index.mapper.RootObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testNumericDetection(org.elasticsearch.index.mapper.RootObjectMapperTests)",
     "displayName": "testNumericDetection(org.elasticsearch.index.mapper.RootObjectMapperTests)",
     "methodName": "testNumericDetection",
     "className": "org.elasticsearch.index.mapper.RootObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testDateDetection(org.elasticsearch.index.mapper.RootObjectMapperTests)",
     "displayName": "testDateDetection(org.elasticsearch.index.mapper.RootObjectMapperTests)",
     "methodName": "testDateDetection",
     "className": "org.elasticsearch.index.mapper.RootObjectMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047302613
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicTemplates(org.elasticsearch.index.mapper.RootObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:02,646][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:02,678][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:02,678][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:02,681][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:02,683][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:02,684][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:02,805][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:02,805][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:02,805][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[103]}, bound_addresses {local[103]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:02,806][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{_adTGZC5T-uCXFc_4u9lig}{qtImIEbrStGPuit-3WC2mw}{local}{local[103]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:02,807][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:02,819][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:02,838][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:02,932][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:02,946][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [RootObjectMapperTests#testDynamicTemplates]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicTemplates(org.elasticsearch.index.mapper.RootObjectMapperTests)",
  "startTimestamp": 1474047302631,
  "executionTime": 344
 }
]

[
 "TEST_STARTED",
 "ID#testDateFormatters(org.elasticsearch.index.mapper.RootObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:02,982][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:03,099][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:03,114][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [RootObjectMapperTests#testDateFormatters]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDateFormatters(org.elasticsearch.index.mapper.RootObjectMapperTests)",
  "startTimestamp": 1474047302975,
  "executionTime": 289
 }
]

[
 "TEST_STARTED",
 "ID#testNumericDetection(org.elasticsearch.index.mapper.RootObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:03,271][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:03,334][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:03,352][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [RootObjectMapperTests#testNumericDetection]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNumericDetection(org.elasticsearch.index.mapper.RootObjectMapperTests)",
  "startTimestamp": 1474047303264,
  "executionTime": 112
 }
]

[
 "TEST_STARTED",
 "ID#testDateDetection(org.elasticsearch.index.mapper.RootObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:03,381][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:03,421][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:03,455][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [RootObjectMapperTests#testDateDetection]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDateDetection(org.elasticsearch.index.mapper.RootObjectMapperTests)",
  "startTimestamp": 1474047303376,
  "executionTime": 148
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:03,524][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:03,525][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:03,525][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:03,526][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.RootObjectMapperTests",
  "startTimestamp": 1474047302613,
  "executionTime": 926
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.SourceFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.SourceFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.SourceFieldTypeTests",
   "children": [
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.SourceFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.SourceFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.SourceFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.SourceFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.SourceFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.SourceFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.SourceFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.SourceFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.SourceFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.SourceFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.SourceFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.SourceFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.SourceFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.SourceFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.SourceFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047303772
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.SourceFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.SourceFieldTypeTests)",
  "startTimestamp": 1474047303806,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.SourceFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.SourceFieldTypeTests)",
  "startTimestamp": 1474047303808,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.SourceFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.SourceFieldTypeTests)",
  "startTimestamp": 1474047303810,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.SourceFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.SourceFieldTypeTests)",
  "startTimestamp": 1474047303812,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.SourceFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.SourceFieldTypeTests)",
  "startTimestamp": 1474047303813,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.SourceFieldTypeTests",
  "startTimestamp": 1474047303772,
  "executionTime": 44
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.StoredNumericValuesTests",
   "displayName": "org.elasticsearch.index.mapper.StoredNumericValuesTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.StoredNumericValuesTests",
   "children": [
    {
     "id": "ID#testBytesAndNumericRepresentation(org.elasticsearch.index.mapper.StoredNumericValuesTests)",
     "displayName": "testBytesAndNumericRepresentation(org.elasticsearch.index.mapper.StoredNumericValuesTests)",
     "methodName": "testBytesAndNumericRepresentation",
     "className": "org.elasticsearch.index.mapper.StoredNumericValuesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047304102
 }
]

[
 "TEST_STARTED",
 "ID#testBytesAndNumericRepresentation(org.elasticsearch.index.mapper.StoredNumericValuesTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:04,135][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:04,157][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:04,157][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:04,160][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:04,162][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:04,162][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:04,286][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:04,286][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:04,287][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[104]}, bound_addresses {local[104]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:04,288][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{cidquuMfR-qKQpUh80vAOw}{BlzYbs35SlmZq0aB9fdlZw}{local}{local[104]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:04,288][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:04,300][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:04,315][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:04,369][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:04,392][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StoredNumericValuesTests#testBytesAndNumericRepresentation]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBytesAndNumericRepresentation(org.elasticsearch.index.mapper.StoredNumericValuesTests)",
  "startTimestamp": 1474047304126,
  "executionTime": 300
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:04,426][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:04,426][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:04,427][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:04,428][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.StoredNumericValuesTests",
  "startTimestamp": 1474047304102,
  "executionTime": 332
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.FuzzyQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnsupportedFuzzinessForStringType(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testUnsupportedFuzzinessForStringType(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testUnsupportedFuzzinessForStringType",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testParseFailsWithMultipleFields(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testParseFailsWithMultipleFields",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryWithStringField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testToQueryWithStringField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testToQueryWithStringField",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryWithNumericField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testToQueryWithNumericField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testToQueryWithNumericField",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.FuzzyQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047304650
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:04,672][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{a-sXZGi6S3KpQfNX-y-l_g}{local}{local[466]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:04,678][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:04,678][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1474047304667,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1474047304691,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1474047304704,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1474047304707,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1474047304719,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnsupportedFuzzinessForStringType(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnsupportedFuzzinessForStringType(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1474047304722,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1474047304728,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1474047304732,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryWithStringField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testToQueryWithStringField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "message": "test runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered\r\n\tat __randomizedtesting.SeedInfo.seed([229C635BFFC33CB2:ED95A24AAE1B201F]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.FuzzyQueryBuilderTests.testToQueryWithStringField(FuzzyQueryBuilderTests.java:100)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryWithStringField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1474047304735,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryWithNumericField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testToQueryWithNumericField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "message": "test runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered\r\n\tat __randomizedtesting.SeedInfo.seed([229C635BFFC33CB2:21BD1236C68EC9B8]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.FuzzyQueryBuilderTests.testToQueryWithNumericField(FuzzyQueryBuilderTests.java:123)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryWithNumericField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1474047304737,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1474047304740,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1474047304743,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1474047304745,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.FuzzyQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.FuzzyQueryBuilderTests)",
  "startTimestamp": 1474047304747,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.FuzzyQueryBuilderTests",
  "startTimestamp": 1474047304650,
  "executionTime": 103
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
   "children": [
    {
     "id": "ID#testBrokenCoordinateCanBeSetWithIgnoreMalformed(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testBrokenCoordinateCanBeSetWithIgnoreMalformed(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testBrokenCoordinateCanBeSetWithIgnoreMalformed",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery6(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testParsingAndToQuery6(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testParsingAndToQuery6",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery1(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testParsingAndToQuery1(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testParsingAndToQuery1",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonCoerceFails(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testFromJsonCoerceFails(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testFromJsonCoerceFails",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testTopBottomCanBeFlippedOnIgnoreMalformed(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testTopBottomCanBeFlippedOnIgnoreMalformed(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testTopBottomCanBeFlippedOnIgnoreMalformed",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery3(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testParsingAndToQuery3(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testParsingAndToQuery3",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testExceptionOnMissingTypes(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testExceptionOnMissingTypes(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testExceptionOnMissingTypes",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testValidationNullFieldname(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testValidationNullFieldname(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testValidationNullFieldname",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNormalization(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testNormalization(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testNormalization",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testStrictnessDefault(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testStrictnessDefault(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testStrictnessDefault",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testTopBottomCannotBeFlipped(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testTopBottomCannotBeFlipped(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testTopBottomCannotBeFlipped",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testLeftRightCanBeFlipped(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testLeftRightCanBeFlipped(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testLeftRightCanBeFlipped",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery5(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testParsingAndToQuery5(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testParsingAndToQuery5",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testValidationNullType(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testValidationNullType(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testValidationNullType",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testIgnoreUnmapped(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testIgnoreUnmapped",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonIgnoreMalformedFails(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testFromJsonIgnoreMalformedFails(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testFromJsonIgnoreMalformedFails",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery2(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testParsingAndToQuery2(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testParsingAndToQuery2",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery4(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testParsingAndToQuery4(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testParsingAndToQuery4",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testValidationNullTypeString(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testValidationNullTypeString(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testValidationNullTypeString",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBrokenCoordinateCannotBeSet(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testBrokenCoordinateCannotBeSet(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testBrokenCoordinateCannotBeSet",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testValidation(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testValidation(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testValidation",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047304946
 }
]

[
 "TEST_STARTED",
 "ID#testBrokenCoordinateCanBeSetWithIgnoreMalformed(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:04,967][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{GxYSi_04QYCZM1yVPx-FPg}{local}{local[467]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:04,975][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:04,975][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:04,993][WARN ][org.elasticsearch.deprecation.index.mapper]  [lXN] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:04,993][WARN ][org.elasticsearch.deprecation.index.mapper]  [lXN] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:04,993][WARN ][org.elasticsearch.deprecation.index.mapper]  [lXN] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:04,995][WARN ][org.elasticsearch.deprecation.index.mapper]  [lXN] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:04,995][WARN ][org.elasticsearch.deprecation.index.mapper]  [lXN] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:04,996][WARN ][org.elasticsearch.deprecation.index.mapper]  [lXN] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:04,998][WARN ][org.elasticsearch.deprecation.index.mapper]  [lXN] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:04,998][WARN ][org.elasticsearch.deprecation.index.mapper]  [lXN] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:04,998][WARN ][org.elasticsearch.deprecation.index.mapper]  [lXN] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:05,000][WARN ][org.elasticsearch.deprecation.index.mapper]  [lXN] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:05,000][WARN ][org.elasticsearch.deprecation.index.mapper]  [lXN] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:05,000][WARN ][org.elasticsearch.deprecation.index.mapper]  [lXN] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:05,002][WARN ][org.elasticsearch.deprecation.index.mapper]  [lXN] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:05,003][WARN ][org.elasticsearch.deprecation.index.mapper]  [lXN] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:05,003][WARN ][org.elasticsearch.deprecation.index.mapper]  [lXN] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:05,010][WARN ][org.elasticsearch.deprecation.index.mapper]  [lXN] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:05,010][WARN ][org.elasticsearch.deprecation.index.mapper]  [lXN] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:05,010][WARN ][org.elasticsearch.deprecation.index.mapper]  [lXN] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:05,012][WARN ][org.elasticsearch.deprecation.index.mapper]  [lXN] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:05,012][WARN ][org.elasticsearch.deprecation.index.mapper]  [lXN] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:05,012][WARN ][org.elasticsearch.deprecation.index.mapper]  [lXN] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:05,015][WARN ][org.elasticsearch.deprecation.index.mapper]  [lXN] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:05,015][WARN ][org.elasticsearch.deprecation.index.mapper]  [lXN] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:05,015][WARN ][org.elasticsearch.deprecation.index.mapper]  [lXN] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:05,019][WARN ][org.elasticsearch.deprecation.index.mapper]  [lXN] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:05,019][WARN ][org.elasticsearch.deprecation.index.mapper]  [lXN] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:05,019][WARN ][org.elasticsearch.deprecation.index.mapper]  [lXN] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:05,021][WARN ][org.elasticsearch.deprecation.index.mapper]  [lXN] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:05,021][WARN ][org.elasticsearch.deprecation.index.mapper]  [lXN] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:05,021][WARN ][org.elasticsearch.deprecation.index.mapper]  [lXN] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:05,023][WARN ][org.elasticsearch.deprecation.index.mapper]  [lXN] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:05,024][WARN ][org.elasticsearch.deprecation.index.mapper]  [lXN] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:05,024][WARN ][org.elasticsearch.deprecation.index.mapper]  [lXN] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:05,033][WARN ][org.elasticsearch.deprecation.index.mapper]  [lXN] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:05,033][WARN ][org.elasticsearch.deprecation.index.mapper]  [lXN] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:05,033][WARN ][org.elasticsearch.deprecation.index.mapper]  [lXN] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBrokenCoordinateCanBeSetWithIgnoreMalformed(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474047304962,
  "executionTime": 76
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery6(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery6(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474047305038,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery1(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery1(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474047305053,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonCoerceFails(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonCoerceFails(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474047305055,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testTopBottomCanBeFlippedOnIgnoreMalformed(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTopBottomCanBeFlippedOnIgnoreMalformed(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474047305058,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474047305060,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery3(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery3(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474047305076,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testExceptionOnMissingTypes(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testExceptionOnMissingTypes(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "message": "test runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered\r\n\tat __randomizedtesting.SeedInfo.seed([229C635BFFC33CB2:E5868FCAB9617267]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests.testExceptionOnMissingTypes(GeoBoundingBoxQueryBuilderTests.java:123)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExceptionOnMissingTypes(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474047305079,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474047305082,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testValidationNullFieldname(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidationNullFieldname(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474047305085,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNormalization(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalization(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474047305088,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474047305090,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474047305093,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474047305103,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474047305113,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testStrictnessDefault(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStrictnessDefault(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474047305118,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTopBottomCannotBeFlipped(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:05,123][INFO ][org.elasticsearch.index.query] top: -10.471347346901894 bottom: -15.725591462105513%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTopBottomCannotBeFlipped(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474047305121,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testLeftRightCanBeFlipped(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLeftRightCanBeFlipped(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474047305125,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery5(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery5(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474047305128,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValidationNullType(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidationNullType(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474047305130,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474047305133,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonIgnoreMalformedFails(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonIgnoreMalformedFails(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474047305136,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery2(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery2(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474047305139,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474047305141,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery4(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery4(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474047305144,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValidationNullTypeString(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidationNullTypeString(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474047305146,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474047305149,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474047305152,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testBrokenCoordinateCannotBeSet(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBrokenCoordinateCannotBeSet(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474047305155,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testValidation(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidation(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1474047305158,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
  "startTimestamp": 1474047304946,
  "executionTime": 219
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
   "children": [
    {
     "id": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testIgnoreUnmapped(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testIgnoreUnmapped",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery5(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery5(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery5",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery12(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery12(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery12",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParseFailsWithMultipleFields(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParseFailsWithMultipleFields",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery4(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery4(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery4",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery3(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery3(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery3",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery1(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery1(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery1",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromCoerceFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testFromCoerceFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testFromCoerceFails",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery9(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery9(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery9",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testOptimizeBboxFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testOptimizeBboxFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testOptimizeBboxFails",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery11(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery11(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery11",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery7(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery7(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery7",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery8(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery8(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery8",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery10(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery10(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery10",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery6(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery6(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery6",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery2(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery2(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery2",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalValues(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testIllegalValues(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testIllegalValues",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonIgnoreMalformedFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testFromJsonIgnoreMalformedFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testFromJsonIgnoreMalformedFails",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047305236
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:05,259][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{lna-F6AKSa6BBteCpYooXg}{local}{local[468]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:05,265][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:05,265][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:05,290][WARN ][org.elasticsearch.deprecation.index.mapper]  [QFCIjrXNb] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:05,290][WARN ][org.elasticsearch.deprecation.index.mapper]  [QFCIjrXNb] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:05,290][WARN ][org.elasticsearch.deprecation.index.mapper]  [QFCIjrXNb] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:05,292][WARN ][org.elasticsearch.deprecation.index.mapper]  [QFCIjrXNb] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:05,292][WARN ][org.elasticsearch.deprecation.index.mapper]  [QFCIjrXNb] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:05,292][WARN ][org.elasticsearch.deprecation.index.mapper]  [QFCIjrXNb] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:05,294][WARN ][org.elasticsearch.deprecation.index.mapper]  [QFCIjrXNb] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:05,294][WARN ][org.elasticsearch.deprecation.index.mapper]  [QFCIjrXNb] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:05,294][WARN ][org.elasticsearch.deprecation.index.mapper]  [QFCIjrXNb] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:05,296][WARN ][org.elasticsearch.deprecation.index.mapper]  [QFCIjrXNb] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:05,296][WARN ][org.elasticsearch.deprecation.index.mapper]  [QFCIjrXNb] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:05,296][WARN ][org.elasticsearch.deprecation.index.mapper]  [QFCIjrXNb] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:05,298][WARN ][org.elasticsearch.deprecation.index.mapper]  [QFCIjrXNb] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:05,298][WARN ][org.elasticsearch.deprecation.index.mapper]  [QFCIjrXNb] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:05,298][WARN ][org.elasticsearch.deprecation.index.mapper]  [QFCIjrXNb] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:05,314][WARN ][org.elasticsearch.deprecation.index.mapper]  [QFCIjrXNb] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:05,314][WARN ][org.elasticsearch.deprecation.index.mapper]  [QFCIjrXNb] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:05,314][WARN ][org.elasticsearch.deprecation.index.mapper]  [QFCIjrXNb] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:05,316][WARN ][org.elasticsearch.deprecation.index.mapper]  [QFCIjrXNb] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:05,316][WARN ][org.elasticsearch.deprecation.index.mapper]  [QFCIjrXNb] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:05,316][WARN ][org.elasticsearch.deprecation.index.mapper]  [QFCIjrXNb] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:05,319][WARN ][org.elasticsearch.deprecation.index.mapper]  [QFCIjrXNb] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:05,319][WARN ][org.elasticsearch.deprecation.index.mapper]  [QFCIjrXNb] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:05,319][WARN ][org.elasticsearch.deprecation.index.mapper]  [QFCIjrXNb] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:05,322][WARN ][org.elasticsearch.deprecation.index.mapper]  [QFCIjrXNb] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:05,322][WARN ][org.elasticsearch.deprecation.index.mapper]  [QFCIjrXNb] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:05,322][WARN ][org.elasticsearch.deprecation.index.mapper]  [QFCIjrXNb] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:05,324][WARN ][org.elasticsearch.deprecation.index.mapper]  [QFCIjrXNb] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:05,324][WARN ][org.elasticsearch.deprecation.index.mapper]  [QFCIjrXNb] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:05,324][WARN ][org.elasticsearch.deprecation.index.mapper]  [QFCIjrXNb] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:05,333][WARN ][org.elasticsearch.deprecation.index.mapper]  [QFCIjrXNb] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:05,333][WARN ][org.elasticsearch.deprecation.index.mapper]  [QFCIjrXNb] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:05,333][WARN ][org.elasticsearch.deprecation.index.mapper]  [QFCIjrXNb] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:05,336][WARN ][org.elasticsearch.deprecation.index.mapper]  [QFCIjrXNb] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:05,337][WARN ][org.elasticsearch.deprecation.index.mapper]  [QFCIjrXNb] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:05,337][WARN ][org.elasticsearch.deprecation.index.mapper]  [QFCIjrXNb] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474047305254,
  "executionTime": 85
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474047305339,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery5(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery5(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474047305342,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery12(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery12(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474047305354,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474047305358,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474047305361,
  "executionTime": 50
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery4(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery4(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474047305411,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery3(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery3(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474047305414,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery1(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery1(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474047305419,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromCoerceFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromCoerceFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474047305422,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery9(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery9(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474047305424,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testOptimizeBboxFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOptimizeBboxFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474047305427,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery11(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery11(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474047305430,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery7(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery7(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474047305432,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474047305436,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery8(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery8(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474047305457,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474047305460,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery10(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery10(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474047305467,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474047305470,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474047305473,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery6(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery6(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474047305475,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474047305478,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery2(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery2(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474047305482,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474047305485,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalValues(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalValues(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474047305488,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474047305494,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonIgnoreMalformedFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonIgnoreMalformedFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474047305499,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
  "startTimestamp": 1474047305236,
  "executionTime": 271
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.MatchAllQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.MatchAllQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.MatchAllQueryBuilderTests",
   "children": [
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.MatchAllQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.MatchAllQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.MatchAllQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.MatchAllQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.MatchAllQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.MatchAllQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.MatchAllQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.MatchAllQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.MatchAllQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047305765
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.MatchAllQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,785][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{zYv4ekaGRqCFrxOtyOEH3Q}{local}{local[469]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,793][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,793][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,806][WARN ][org.elasticsearch.deprecation.index.mapper]  [nXdcpyHgx] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,806][WARN ][org.elasticsearch.deprecation.index.mapper]  [nXdcpyHgx] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,806][WARN ][org.elasticsearch.deprecation.index.mapper]  [nXdcpyHgx] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,808][WARN ][org.elasticsearch.deprecation.index.mapper]  [nXdcpyHgx] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,808][WARN ][org.elasticsearch.deprecation.index.mapper]  [nXdcpyHgx] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,808][WARN ][org.elasticsearch.deprecation.index.mapper]  [nXdcpyHgx] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,810][WARN ][org.elasticsearch.deprecation.index.mapper]  [nXdcpyHgx] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,810][WARN ][org.elasticsearch.deprecation.index.mapper]  [nXdcpyHgx] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,810][WARN ][org.elasticsearch.deprecation.index.mapper]  [nXdcpyHgx] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,813][WARN ][org.elasticsearch.deprecation.index.mapper]  [nXdcpyHgx] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,813][WARN ][org.elasticsearch.deprecation.index.mapper]  [nXdcpyHgx] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,814][WARN ][org.elasticsearch.deprecation.index.mapper]  [nXdcpyHgx] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,815][WARN ][org.elasticsearch.deprecation.index.mapper]  [nXdcpyHgx] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,816][WARN ][org.elasticsearch.deprecation.index.mapper]  [nXdcpyHgx] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,816][WARN ][org.elasticsearch.deprecation.index.mapper]  [nXdcpyHgx] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,818][WARN ][org.elasticsearch.deprecation.index.mapper]  [nXdcpyHgx] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,818][WARN ][org.elasticsearch.deprecation.index.mapper]  [nXdcpyHgx] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,818][WARN ][org.elasticsearch.deprecation.index.mapper]  [nXdcpyHgx] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,820][WARN ][org.elasticsearch.deprecation.index.mapper]  [nXdcpyHgx] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,820][WARN ][org.elasticsearch.deprecation.index.mapper]  [nXdcpyHgx] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,820][WARN ][org.elasticsearch.deprecation.index.mapper]  [nXdcpyHgx] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,822][WARN ][org.elasticsearch.deprecation.index.mapper]  [nXdcpyHgx] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,822][WARN ][org.elasticsearch.deprecation.index.mapper]  [nXdcpyHgx] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,822][WARN ][org.elasticsearch.deprecation.index.mapper]  [nXdcpyHgx] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,825][WARN ][org.elasticsearch.deprecation.index.mapper]  [nXdcpyHgx] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,825][WARN ][org.elasticsearch.deprecation.index.mapper]  [nXdcpyHgx] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,825][WARN ][org.elasticsearch.deprecation.index.mapper]  [nXdcpyHgx] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,827][WARN ][org.elasticsearch.deprecation.index.mapper]  [nXdcpyHgx] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,827][WARN ][org.elasticsearch.deprecation.index.mapper]  [nXdcpyHgx] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,827][WARN ][org.elasticsearch.deprecation.index.mapper]  [nXdcpyHgx] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,828][WARN ][org.elasticsearch.deprecation.index.mapper]  [nXdcpyHgx] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,829][WARN ][org.elasticsearch.deprecation.index.mapper]  [nXdcpyHgx] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,829][WARN ][org.elasticsearch.deprecation.index.mapper]  [nXdcpyHgx] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,831][WARN ][org.elasticsearch.deprecation.index.mapper]  [nXdcpyHgx] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,831][WARN ][org.elasticsearch.deprecation.index.mapper]  [nXdcpyHgx] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,831][WARN ][org.elasticsearch.deprecation.index.mapper]  [nXdcpyHgx] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,833][WARN ][org.elasticsearch.deprecation.index.mapper]  [nXdcpyHgx] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,833][WARN ][org.elasticsearch.deprecation.index.mapper]  [nXdcpyHgx] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,833][WARN ][org.elasticsearch.deprecation.index.mapper]  [nXdcpyHgx] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,835][WARN ][org.elasticsearch.deprecation.index.mapper]  [nXdcpyHgx] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,836][WARN ][org.elasticsearch.deprecation.index.mapper]  [nXdcpyHgx] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,836][WARN ][org.elasticsearch.deprecation.index.mapper]  [nXdcpyHgx] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,839][WARN ][org.elasticsearch.deprecation.index.mapper]  [nXdcpyHgx] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,839][WARN ][org.elasticsearch.deprecation.index.mapper]  [nXdcpyHgx] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T07:35:05,839][WARN ][org.elasticsearch.deprecation.index.mapper]  [nXdcpyHgx] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
  "startTimestamp": 1474047305780,
  "executionTime": 61
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.MatchAllQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
  "startTimestamp": 1474047305841,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.MatchAllQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
  "startTimestamp": 1474047305846,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchAllQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
  "startTimestamp": 1474047305848,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MatchAllQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
  "startTimestamp": 1474047305851,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchAllQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
  "startTimestamp": 1474047305854,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.MatchAllQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
  "startTimestamp": 1474047305857,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.MatchAllQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
  "startTimestamp": 1474047305859,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.MatchAllQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.MatchAllQueryBuilderTests)",
  "startTimestamp": 1474047305861,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.MatchAllQueryBuilderTests",
  "startTimestamp": 1474047305765,
  "executionTime": 109
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
   "children": [
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047306093
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:06,117][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{kSW5jHjVT16sJoR0fFMlCg}{local}{local[470]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:06,127][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:06,127][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:06,169][WARN ][org.elasticsearch.deprecation.index.mapper]  [Iyp] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:06,169][WARN ][org.elasticsearch.deprecation.index.mapper]  [Iyp] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:06,169][WARN ][org.elasticsearch.deprecation.index.mapper]  [Iyp] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:06,170][WARN ][org.elasticsearch.deprecation.index.mapper]  [Iyp] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:06,170][WARN ][org.elasticsearch.deprecation.index.mapper]  [Iyp] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:06,170][WARN ][org.elasticsearch.deprecation.index.mapper]  [Iyp] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:06,172][WARN ][org.elasticsearch.deprecation.index.mapper]  [Iyp] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:06,173][WARN ][org.elasticsearch.deprecation.index.mapper]  [Iyp] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:06,173][WARN ][org.elasticsearch.deprecation.index.mapper]  [Iyp] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:06,174][WARN ][org.elasticsearch.deprecation.index.mapper]  [Iyp] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:06,174][WARN ][org.elasticsearch.deprecation.index.mapper]  [Iyp] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:06,174][WARN ][org.elasticsearch.deprecation.index.mapper]  [Iyp] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:06,176][WARN ][org.elasticsearch.deprecation.index.mapper]  [Iyp] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:06,176][WARN ][org.elasticsearch.deprecation.index.mapper]  [Iyp] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:06,176][WARN ][org.elasticsearch.deprecation.index.mapper]  [Iyp] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:06,179][WARN ][org.elasticsearch.deprecation.index.mapper]  [Iyp] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:06,179][WARN ][org.elasticsearch.deprecation.index.mapper]  [Iyp] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:06,179][WARN ][org.elasticsearch.deprecation.index.mapper]  [Iyp] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:06,181][WARN ][org.elasticsearch.deprecation.index.mapper]  [Iyp] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:06,181][WARN ][org.elasticsearch.deprecation.index.mapper]  [Iyp] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:06,181][WARN ][org.elasticsearch.deprecation.index.mapper]  [Iyp] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:06,183][WARN ][org.elasticsearch.deprecation.index.mapper]  [Iyp] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:06,183][WARN ][org.elasticsearch.deprecation.index.mapper]  [Iyp] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:06,183][WARN ][org.elasticsearch.deprecation.index.mapper]  [Iyp] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:06,185][WARN ][org.elasticsearch.deprecation.index.mapper]  [Iyp] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:06,186][WARN ][org.elasticsearch.deprecation.index.mapper]  [Iyp] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:06,186][WARN ][org.elasticsearch.deprecation.index.mapper]  [Iyp] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
  "startTimestamp": 1474047306112,
  "executionTime": 75
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
  "startTimestamp": 1474047306187,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
  "startTimestamp": 1474047306196,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
  "startTimestamp": 1474047306199,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
  "startTimestamp": 1474047306202,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
  "startTimestamp": 1474047306204,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
  "startTimestamp": 1474047306207,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
  "startTimestamp": 1474047306209,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
  "startTimestamp": 1474047306211,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
  "startTimestamp": 1474047306093,
  "executionTime": 153
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
   "children": [
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testPhrasePrefixMatchQuery(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testPhrasePrefixMatchQuery(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testPhrasePrefixMatchQuery",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBadAnalyzer(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testBadAnalyzer(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testBadAnalyzer",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalValues(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testIllegalValues(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testIllegalValues",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testParseFailsWithMultipleFields(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testParseFailsWithMultipleFields",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047306406
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:06,428][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{qL1dLV1URWiQAAz6UJaqOQ}{local}{local[471]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:06,435][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:06,435][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:06,511][WARN ][org.elasticsearch.deprecation.index.mapper]  [DJ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:06,511][WARN ][org.elasticsearch.deprecation.index.mapper]  [DJ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:06,511][WARN ][org.elasticsearch.deprecation.index.mapper]  [DJ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:06,514][WARN ][org.elasticsearch.deprecation.index.mapper]  [DJ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:06,514][WARN ][org.elasticsearch.deprecation.index.mapper]  [DJ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:06,514][WARN ][org.elasticsearch.deprecation.index.mapper]  [DJ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:06,516][WARN ][org.elasticsearch.deprecation.index.mapper]  [DJ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:06,516][WARN ][org.elasticsearch.deprecation.index.mapper]  [DJ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T13:35:06,516][WARN ][org.elasticsearch.deprecation.index.mapper]  [DJ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1474047306424,
  "executionTime": 93
 }
]

[
 "TEST_STARTED",
 "ID#testPhrasePrefixMatchQuery(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPhrasePrefixMatchQuery(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1474047306518,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBadAnalyzer(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBadAnalyzer(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1474047306520,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalValues(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalValues(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1474047306524,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1474047306527,
  "executionTime": 25
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1474047306552,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1474047306554,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1474047306566,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1474047306570,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1474047306573,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1474047306576,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1474047306578,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
  "startTimestamp": 1474047306406,
  "executionTime": 179
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
   "displayName": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
   "children": [
    {
     "id": "ID#testDefaultFieldParsing(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testDefaultFieldParsing(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testDefaultFieldParsing",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDefaults(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testDefaults(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testDefaults",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDefaultNullLocale(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testDefaultNullLocale(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testDefaultNullLocale",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalConstructorArg(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testIllegalConstructorArg(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testIllegalConstructorArg",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFieldsCannotBeSetToNull(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testFieldsCannotBeSetToNull(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testFieldsCannotBeSetToNull",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDefaultOperatorHandling(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testDefaultOperatorHandling(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testDefaultOperatorHandling",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFieldCannotBeEmpty(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testFieldCannotBeEmpty(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testFieldCannotBeEmpty",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFieldCannotBeEmptyAndWeighted(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testFieldCannotBeEmptyAndWeighted(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testFieldCannotBeEmptyAndWeighted",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFieldCannotBeNull(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testFieldCannotBeNull(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testFieldCannotBeNull",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryBoost(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testToQueryBoost(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testToQueryBoost",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMinimumShouldMatch(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testMinimumShouldMatch(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testMinimumShouldMatch",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIndexMetaField(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testIndexMetaField(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testIndexMetaField",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFieldCannotBeNullAndWeighted(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testFieldCannotBeNullAndWeighted(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testFieldCannotBeNullAndWeighted",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNegativeFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testNegativeFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testNegativeFlags",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDefaultNullComplainOp(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testDefaultNullComplainOp(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testDefaultNullComplainOp",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDefaultEmptyComplainFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testDefaultEmptyComplainFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testDefaultEmptyComplainFlags",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDefaultNullComplainFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "displayName": "testDefaultNullComplainFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
     "methodName": "testDefaultNullComplainFlags",
     "className": "org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047306755
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultFieldParsing(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,805][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Sl7z9lSDS4yQGQMWGswOLw}{local}{local[472]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,811][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,811][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,849][WARN ][org.elasticsearch.deprecation.index.mapper]  [bQww] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,850][WARN ][org.elasticsearch.deprecation.index.mapper]  [bQww] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,850][WARN ][org.elasticsearch.deprecation.index.mapper]  [bQww] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,854][WARN ][org.elasticsearch.deprecation.index.mapper]  [bQww] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,854][WARN ][org.elasticsearch.deprecation.index.mapper]  [bQww] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,854][WARN ][org.elasticsearch.deprecation.index.mapper]  [bQww] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,858][WARN ][org.elasticsearch.deprecation.index.mapper]  [bQww] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,858][WARN ][org.elasticsearch.deprecation.index.mapper]  [bQww] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,858][WARN ][org.elasticsearch.deprecation.index.mapper]  [bQww] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,859][WARN ][org.elasticsearch.deprecation.index.mapper]  [bQww] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,859][WARN ][org.elasticsearch.deprecation.index.mapper]  [bQww] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,859][WARN ][org.elasticsearch.deprecation.index.mapper]  [bQww] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,864][WARN ][org.elasticsearch.deprecation.index.mapper]  [bQww] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,864][WARN ][org.elasticsearch.deprecation.index.mapper]  [bQww] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,865][WARN ][org.elasticsearch.deprecation.index.mapper]  [bQww] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,867][WARN ][org.elasticsearch.deprecation.index.mapper]  [bQww] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,867][WARN ][org.elasticsearch.deprecation.index.mapper]  [bQww] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,867][WARN ][org.elasticsearch.deprecation.index.mapper]  [bQww] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,868][WARN ][org.elasticsearch.deprecation.index.mapper]  [bQww] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,868][WARN ][org.elasticsearch.deprecation.index.mapper]  [bQww] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,868][WARN ][org.elasticsearch.deprecation.index.mapper]  [bQww] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,870][WARN ][org.elasticsearch.deprecation.index.mapper]  [bQww] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,870][WARN ][org.elasticsearch.deprecation.index.mapper]  [bQww] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,870][WARN ][org.elasticsearch.deprecation.index.mapper]  [bQww] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,873][WARN ][org.elasticsearch.deprecation.index.mapper]  [bQww] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,873][WARN ][org.elasticsearch.deprecation.index.mapper]  [bQww] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,874][WARN ][org.elasticsearch.deprecation.index.mapper]  [bQww] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,875][WARN ][org.elasticsearch.deprecation.index.mapper]  [bQww] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,875][WARN ][org.elasticsearch.deprecation.index.mapper]  [bQww] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,875][WARN ][org.elasticsearch.deprecation.index.mapper]  [bQww] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,877][WARN ][org.elasticsearch.deprecation.index.mapper]  [bQww] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,877][WARN ][org.elasticsearch.deprecation.index.mapper]  [bQww] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,877][WARN ][org.elasticsearch.deprecation.index.mapper]  [bQww] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,891][WARN ][org.elasticsearch.deprecation.index.mapper]  [bQww] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,891][WARN ][org.elasticsearch.deprecation.index.mapper]  [bQww] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,891][WARN ][org.elasticsearch.deprecation.index.mapper]  [bQww] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,892][WARN ][org.elasticsearch.deprecation.index.mapper]  [bQww] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,892][WARN ][org.elasticsearch.deprecation.index.mapper]  [bQww] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,893][WARN ][org.elasticsearch.deprecation.index.mapper]  [bQww] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,895][WARN ][org.elasticsearch.deprecation.index.mapper]  [bQww] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,895][WARN ][org.elasticsearch.deprecation.index.mapper]  [bQww] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,895][WARN ][org.elasticsearch.deprecation.index.mapper]  [bQww] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,898][WARN ][org.elasticsearch.deprecation.index.mapper]  [bQww] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,898][WARN ][org.elasticsearch.deprecation.index.mapper]  [bQww] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:06,898][WARN ][org.elasticsearch.deprecation.index.mapper]  [bQww] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultFieldParsing(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474047306800,
  "executionTime": 100
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474047306900,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testDefaults(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaults(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474047306913,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultNullLocale(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultNullLocale(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474047306915,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalConstructorArg(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalConstructorArg(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474047306918,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474047306921,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFieldsCannotBeSetToNull(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldsCannotBeSetToNull(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474047306926,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultOperatorHandling(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultOperatorHandling(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474047306928,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474047306931,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFieldCannotBeEmpty(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldCannotBeEmpty(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474047306937,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474047306942,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testFieldCannotBeEmptyAndWeighted(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldCannotBeEmptyAndWeighted(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474047306972,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474047306974,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFieldCannotBeNull(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldCannotBeNull(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474047306979,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryBoost(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryBoost(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474047306982,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMinimumShouldMatch(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinimumShouldMatch(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474047306985,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474047306988,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474047306991,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIndexMetaField(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexMetaField(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474047306994,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFieldCannotBeNullAndWeighted(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldCannotBeNullAndWeighted(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474047306997,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNegativeFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNegativeFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474047306999,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultNullComplainOp(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultNullComplainOp(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474047307004,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474047307006,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474047307009,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultEmptyComplainFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultEmptyComplainFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474047307012,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultNullComplainFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultNullComplainFlags(org.elasticsearch.index.query.SimpleQueryStringBuilderTests)",
  "startTimestamp": 1474047307014,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.SimpleQueryStringBuilderTests",
  "startTimestamp": 1474047306755,
  "executionTime": 264
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.SpanContainingQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.SpanContainingQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.SpanContainingQueryBuilderTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.SpanContainingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.SpanContainingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.SpanContainingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.SpanContainingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.SpanContainingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.SpanContainingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.SpanContainingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.SpanContainingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.SpanContainingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.SpanContainingQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047307295
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:07,315][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{JsWhCwC4TX6kWK1bfPT9dw}{local}{local[473]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:07,321][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:07,322][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
  "startTimestamp": 1474047307310,
  "executionTime": 53
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
  "startTimestamp": 1474047307364,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
  "startTimestamp": 1474047307367,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
  "startTimestamp": 1474047307373,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
  "startTimestamp": 1474047307392,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
  "startTimestamp": 1474047307395,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
  "startTimestamp": 1474047307398,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
  "startTimestamp": 1474047307404,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
  "startTimestamp": 1474047307411,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
  "startTimestamp": 1474047307415,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.SpanContainingQueryBuilderTests",
  "startTimestamp": 1474047307295,
  "executionTime": 132
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseEnd(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "displayName": "testParseEnd(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "methodName": "testParseEnd",
     "className": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047307572
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:07,613][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Mn6CSWzCThaoCc4Y_kkBDQ}{local}{local[474]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:07,621][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:07,622][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:07,687][WARN ][org.elasticsearch.deprecation.index.mapper]  [VYzZ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:07,687][WARN ][org.elasticsearch.deprecation.index.mapper]  [VYzZ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:07,688][WARN ][org.elasticsearch.deprecation.index.mapper]  [VYzZ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:07,689][WARN ][org.elasticsearch.deprecation.index.mapper]  [VYzZ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:07,689][WARN ][org.elasticsearch.deprecation.index.mapper]  [VYzZ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:07,689][WARN ][org.elasticsearch.deprecation.index.mapper]  [VYzZ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:07,691][WARN ][org.elasticsearch.deprecation.index.mapper]  [VYzZ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:07,691][WARN ][org.elasticsearch.deprecation.index.mapper]  [VYzZ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:07,691][WARN ][org.elasticsearch.deprecation.index.mapper]  [VYzZ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:07,692][WARN ][org.elasticsearch.deprecation.index.mapper]  [VYzZ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:07,692][WARN ][org.elasticsearch.deprecation.index.mapper]  [VYzZ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:07,692][WARN ][org.elasticsearch.deprecation.index.mapper]  [VYzZ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:07,694][WARN ][org.elasticsearch.deprecation.index.mapper]  [VYzZ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:07,694][WARN ][org.elasticsearch.deprecation.index.mapper]  [VYzZ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:07,694][WARN ][org.elasticsearch.deprecation.index.mapper]  [VYzZ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:07,696][WARN ][org.elasticsearch.deprecation.index.mapper]  [VYzZ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:07,697][WARN ][org.elasticsearch.deprecation.index.mapper]  [VYzZ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:07,697][WARN ][org.elasticsearch.deprecation.index.mapper]  [VYzZ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:07,697][WARN ][org.elasticsearch.deprecation.index.mapper]  [VYzZ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:07,698][WARN ][org.elasticsearch.deprecation.index.mapper]  [VYzZ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:07,698][WARN ][org.elasticsearch.deprecation.index.mapper]  [VYzZ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:07,699][WARN ][org.elasticsearch.deprecation.index.mapper]  [VYzZ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:07,700][WARN ][org.elasticsearch.deprecation.index.mapper]  [VYzZ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:07,700][WARN ][org.elasticsearch.deprecation.index.mapper]  [VYzZ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:07,703][WARN ][org.elasticsearch.deprecation.index.mapper]  [VYzZ] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:07,703][WARN ][org.elasticsearch.deprecation.index.mapper]  [VYzZ] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:07,703][WARN ][org.elasticsearch.deprecation.index.mapper]  [VYzZ] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
  "startTimestamp": 1474047307590,
  "executionTime": 129
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
  "startTimestamp": 1474047307719,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
  "startTimestamp": 1474047307725,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
  "startTimestamp": 1474047307736,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
  "startTimestamp": 1474047307765,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseEnd(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseEnd(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
  "startTimestamp": 1474047307767,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
  "startTimestamp": 1474047307771,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
  "startTimestamp": 1474047307779,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
  "startTimestamp": 1474047307785,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
  "startTimestamp": 1474047307788,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
  "startTimestamp": 1474047307572,
  "executionTime": 223
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
   "children": [
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnsupportedInnerQueryType(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testUnsupportedInnerQueryType(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testUnsupportedInnerQueryType",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArgument(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testIllegalArgument(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testIllegalArgument",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryInnerSpanMultiTerm(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testToQueryInnerSpanMultiTerm(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testToQueryInnerSpanMultiTerm",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047307845
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:07,875][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{eG4nQJ9SSdCwKmEvyjZDXA}{local}{local[475]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:07,887][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:07,887][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:07,923][WARN ][org.elasticsearch.deprecation.index.mapper]  [qFGYPDs] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:07,923][WARN ][org.elasticsearch.deprecation.index.mapper]  [qFGYPDs] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:07,923][WARN ][org.elasticsearch.deprecation.index.mapper]  [qFGYPDs] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:07,924][WARN ][org.elasticsearch.deprecation.index.mapper]  [qFGYPDs] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:07,924][WARN ][org.elasticsearch.deprecation.index.mapper]  [qFGYPDs] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:07,924][WARN ][org.elasticsearch.deprecation.index.mapper]  [qFGYPDs] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:07,926][WARN ][org.elasticsearch.deprecation.index.mapper]  [qFGYPDs] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:07,926][WARN ][org.elasticsearch.deprecation.index.mapper]  [qFGYPDs] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:07,926][WARN ][org.elasticsearch.deprecation.index.mapper]  [qFGYPDs] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:07,927][WARN ][org.elasticsearch.deprecation.index.mapper]  [qFGYPDs] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:07,927][WARN ][org.elasticsearch.deprecation.index.mapper]  [qFGYPDs] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:07,927][WARN ][org.elasticsearch.deprecation.index.mapper]  [qFGYPDs] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:07,928][WARN ][org.elasticsearch.deprecation.index.mapper]  [qFGYPDs] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:07,929][WARN ][org.elasticsearch.deprecation.index.mapper]  [qFGYPDs] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:07,929][WARN ][org.elasticsearch.deprecation.index.mapper]  [qFGYPDs] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:07,930][WARN ][org.elasticsearch.deprecation.index.mapper]  [qFGYPDs] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:07,931][WARN ][org.elasticsearch.deprecation.index.mapper]  [qFGYPDs] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:07,931][WARN ][org.elasticsearch.deprecation.index.mapper]  [qFGYPDs] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1474047307870,
  "executionTime": 75
 }
]

[
 "TEST_STARTED",
 "ID#testUnsupportedInnerQueryType(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnsupportedInnerQueryType(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1474047307945,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1474047307948,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArgument(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArgument(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1474047307954,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1474047307956,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1474047307965,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1474047307968,
  "executionTime": 44
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1474047308012,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1474047308018,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1474047308020,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1474047308027,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryInnerSpanMultiTerm(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryInnerSpanMultiTerm(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1474047308030,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
  "startTimestamp": 1474047307845,
  "executionTime": 225
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.SpanNearQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.SpanNearQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.SpanNearQueryBuilderTests",
   "children": [
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.SpanNearQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.SpanNearQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testClausesUnmodifiable(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
     "displayName": "testClausesUnmodifiable(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
     "methodName": "testClausesUnmodifiable",
     "className": "org.elasticsearch.index.query.SpanNearQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testCollectPayloadsDeprecated(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
     "displayName": "testCollectPayloadsDeprecated(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
     "methodName": "testCollectPayloadsDeprecated",
     "className": "org.elasticsearch.index.query.SpanNearQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.SpanNearQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.SpanNearQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.SpanNearQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.SpanNearQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.SpanNearQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.SpanNearQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.SpanNearQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.SpanNearQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047308157
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.SpanNearQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:08,178][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{1Zq1ithCTYWpXRIGDdiLRw}{local}{local[476]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:08,184][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:08,184][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:08,210][WARN ][org.elasticsearch.deprecation.index.mapper]  [xOIbV] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:08,210][WARN ][org.elasticsearch.deprecation.index.mapper]  [xOIbV] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:08,210][WARN ][org.elasticsearch.deprecation.index.mapper]  [xOIbV] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:08,212][WARN ][org.elasticsearch.deprecation.index.mapper]  [xOIbV] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:08,212][WARN ][org.elasticsearch.deprecation.index.mapper]  [xOIbV] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:08,212][WARN ][org.elasticsearch.deprecation.index.mapper]  [xOIbV] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:08,219][WARN ][org.elasticsearch.deprecation.index.mapper]  [xOIbV] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:08,219][WARN ][org.elasticsearch.deprecation.index.mapper]  [xOIbV] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:08,219][WARN ][org.elasticsearch.deprecation.index.mapper]  [xOIbV] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:08,220][WARN ][org.elasticsearch.deprecation.index.mapper]  [xOIbV] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:08,220][WARN ][org.elasticsearch.deprecation.index.mapper]  [xOIbV] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:08,220][WARN ][org.elasticsearch.deprecation.index.mapper]  [xOIbV] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:08,221][WARN ][org.elasticsearch.deprecation.index.mapper]  [xOIbV] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:08,221][WARN ][org.elasticsearch.deprecation.index.mapper]  [xOIbV] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:08,221][WARN ][org.elasticsearch.deprecation.index.mapper]  [xOIbV] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:08,223][WARN ][org.elasticsearch.deprecation.index.mapper]  [xOIbV] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:08,223][WARN ][org.elasticsearch.deprecation.index.mapper]  [xOIbV] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:08,223][WARN ][org.elasticsearch.deprecation.index.mapper]  [xOIbV] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:08,224][WARN ][org.elasticsearch.deprecation.index.mapper]  [xOIbV] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:08,224][WARN ][org.elasticsearch.deprecation.index.mapper]  [xOIbV] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:08,224][WARN ][org.elasticsearch.deprecation.index.mapper]  [xOIbV] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:08,226][WARN ][org.elasticsearch.deprecation.index.mapper]  [xOIbV] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:08,226][WARN ][org.elasticsearch.deprecation.index.mapper]  [xOIbV] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:08,226][WARN ][org.elasticsearch.deprecation.index.mapper]  [xOIbV] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:08,229][WARN ][org.elasticsearch.deprecation.index.mapper]  [xOIbV] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:08,229][WARN ][org.elasticsearch.deprecation.index.mapper]  [xOIbV] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:08,229][WARN ][org.elasticsearch.deprecation.index.mapper]  [xOIbV] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:08,230][WARN ][org.elasticsearch.deprecation.index.mapper]  [xOIbV] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:08,230][WARN ][org.elasticsearch.deprecation.index.mapper]  [xOIbV] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:08,230][WARN ][org.elasticsearch.deprecation.index.mapper]  [xOIbV] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:08,232][WARN ][org.elasticsearch.deprecation.index.mapper]  [xOIbV] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:08,232][WARN ][org.elasticsearch.deprecation.index.mapper]  [xOIbV] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:08,232][WARN ][org.elasticsearch.deprecation.index.mapper]  [xOIbV] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:08,234][WARN ][org.elasticsearch.deprecation.index.mapper]  [xOIbV] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:08,236][WARN ][org.elasticsearch.deprecation.index.mapper]  [xOIbV] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:08,236][WARN ][org.elasticsearch.deprecation.index.mapper]  [xOIbV] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
  "startTimestamp": 1474047308172,
  "executionTime": 69
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.SpanNearQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
  "startTimestamp": 1474047308241,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testClausesUnmodifiable(org.elasticsearch.index.query.SpanNearQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClausesUnmodifiable(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
  "startTimestamp": 1474047308260,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCollectPayloadsDeprecated(org.elasticsearch.index.query.SpanNearQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:08,265][WARN ][org.elasticsearch.deprecation.common] Deprecated field [collect_payloads] used, replaced by [no longer supported]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCollectPayloadsDeprecated(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
  "startTimestamp": 1474047308263,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.SpanNearQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
  "startTimestamp": 1474047308265,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanNearQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
  "startTimestamp": 1474047308279,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.SpanNearQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
  "startTimestamp": 1474047308282,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.SpanNearQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
  "startTimestamp": 1474047308308,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanNearQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
  "startTimestamp": 1474047308314,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanNearQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
  "startTimestamp": 1474047308317,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.SpanNearQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
  "startTimestamp": 1474047308324,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.SpanNearQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
  "startTimestamp": 1474047308326,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.SpanNearQueryBuilderTests",
  "startTimestamp": 1474047308157,
  "executionTime": 206
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.SpanNotQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testPrePost(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testPrePost(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testPrePost",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArgument(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testIllegalArgument(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testIllegalArgument",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParserExceptions(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testParserExceptions(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testParserExceptions",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseDist(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testParseDist(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testParseDist",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDist(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testDist(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testDist",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047308433
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:08,462][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{vhgslG4gTUen0x5ZO8V1KA}{local}{local[477]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:08,468][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:08,468][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:08,480][WARN ][org.elasticsearch.deprecation.index.mapper]  [DG] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:08,481][WARN ][org.elasticsearch.deprecation.index.mapper]  [DG] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:08,481][WARN ][org.elasticsearch.deprecation.index.mapper]  [DG] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:08,483][WARN ][org.elasticsearch.deprecation.index.mapper]  [DG] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:08,483][WARN ][org.elasticsearch.deprecation.index.mapper]  [DG] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:08,483][WARN ][org.elasticsearch.deprecation.index.mapper]  [DG] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:08,485][WARN ][org.elasticsearch.deprecation.index.mapper]  [DG] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:08,485][WARN ][org.elasticsearch.deprecation.index.mapper]  [DG] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:08,486][WARN ][org.elasticsearch.deprecation.index.mapper]  [DG] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1474047308456,
  "executionTime": 36
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1474047308492,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1474047308505,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1474047308511,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1474047308528,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testPrePost(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrePost(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1474047308531,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArgument(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArgument(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1474047308533,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1474047308536,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParserExceptions(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParserExceptions(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1474047308540,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testParseDist(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseDist(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1474047308547,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1474047308549,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1474047308552,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1474047308556,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDist(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDist(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1474047308559,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.SpanNotQueryBuilderTests",
  "startTimestamp": 1474047308433,
  "executionTime": 132
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.SpanOrQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.SpanOrQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.SpanOrQueryBuilderTests",
   "children": [
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.SpanOrQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.SpanOrQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.SpanOrQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.SpanOrQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.SpanOrQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.SpanOrQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.SpanOrQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.SpanOrQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testClausesUnmodifiable(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "displayName": "testClausesUnmodifiable(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "methodName": "testClausesUnmodifiable",
     "className": "org.elasticsearch.index.query.SpanOrQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.SpanOrQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.SpanOrQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047308750
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.SpanOrQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:08,825][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{-GT9nt4dQJmNh79xhgYkmw}{local}{local[478]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:08,832][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:08,832][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:08,848][WARN ][org.elasticsearch.deprecation.index.mapper]  [opDD] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:08,849][WARN ][org.elasticsearch.deprecation.index.mapper]  [opDD] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:08,849][WARN ][org.elasticsearch.deprecation.index.mapper]  [opDD] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:08,852][WARN ][org.elasticsearch.deprecation.index.mapper]  [opDD] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:08,852][WARN ][org.elasticsearch.deprecation.index.mapper]  [opDD] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:08,852][WARN ][org.elasticsearch.deprecation.index.mapper]  [opDD] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:08,857][WARN ][org.elasticsearch.deprecation.index.mapper]  [opDD] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:08,857][WARN ][org.elasticsearch.deprecation.index.mapper]  [opDD] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:08,857][WARN ][org.elasticsearch.deprecation.index.mapper]  [opDD] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:08,861][WARN ][org.elasticsearch.deprecation.index.mapper]  [opDD] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:08,861][WARN ][org.elasticsearch.deprecation.index.mapper]  [opDD] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:08,861][WARN ][org.elasticsearch.deprecation.index.mapper]  [opDD] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:08,865][WARN ][org.elasticsearch.deprecation.index.mapper]  [opDD] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:08,865][WARN ][org.elasticsearch.deprecation.index.mapper]  [opDD] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:08,865][WARN ][org.elasticsearch.deprecation.index.mapper]  [opDD] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:08,888][WARN ][org.elasticsearch.deprecation.index.mapper]  [opDD] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:08,888][WARN ][org.elasticsearch.deprecation.index.mapper]  [opDD] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T18:35:08,888][WARN ][org.elasticsearch.deprecation.index.mapper]  [opDD] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
  "startTimestamp": 1474047308775,
  "executionTime": 115
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.SpanOrQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
  "startTimestamp": 1474047308890,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.SpanOrQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
  "startTimestamp": 1474047308893,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanOrQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
  "startTimestamp": 1474047308921,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.SpanOrQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
  "startTimestamp": 1474047308928,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.SpanOrQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
  "startTimestamp": 1474047308948,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.SpanOrQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
  "startTimestamp": 1474047308950,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanOrQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
  "startTimestamp": 1474047308961,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testClausesUnmodifiable(org.elasticsearch.index.query.SpanOrQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClausesUnmodifiable(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
  "startTimestamp": 1474047308964,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.SpanOrQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
  "startTimestamp": 1474047308967,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanOrQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanOrQueryBuilderTests)",
  "startTimestamp": 1474047308970,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.SpanOrQueryBuilderTests",
  "startTimestamp": 1474047308750,
  "executionTime": 229
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.SpanTermQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
   "children": [
    {
     "id": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "displayName": "testParseFailsWithMultipleFields(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "methodName": "testParseFailsWithMultipleFields",
     "className": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047309074
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.SpanTermQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:05:09,103][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{b43C_VzlT5SUoiJdCm7ELg}{local}{local[479]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:05:09,111][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:05:09,112][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:05:09,124][WARN ][org.elasticsearch.deprecation.index.mapper]  [X] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:05:09,124][WARN ][org.elasticsearch.deprecation.index.mapper]  [X] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:05:09,124][WARN ][org.elasticsearch.deprecation.index.mapper]  [X] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:05:09,126][WARN ][org.elasticsearch.deprecation.index.mapper]  [X] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:05:09,126][WARN ][org.elasticsearch.deprecation.index.mapper]  [X] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:05:09,126][WARN ][org.elasticsearch.deprecation.index.mapper]  [X] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:05:09,127][WARN ][org.elasticsearch.deprecation.index.mapper]  [X] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:05:09,127][WARN ][org.elasticsearch.deprecation.index.mapper]  [X] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:05:09,127][WARN ][org.elasticsearch.deprecation.index.mapper]  [X] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:05:09,129][WARN ][org.elasticsearch.deprecation.index.mapper]  [X] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:05:09,129][WARN ][org.elasticsearch.deprecation.index.mapper]  [X] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:05:09,129][WARN ][org.elasticsearch.deprecation.index.mapper]  [X] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:05:09,131][WARN ][org.elasticsearch.deprecation.index.mapper]  [X] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:05:09,131][WARN ][org.elasticsearch.deprecation.index.mapper]  [X] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:05:09,131][WARN ][org.elasticsearch.deprecation.index.mapper]  [X] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:05:09,134][WARN ][org.elasticsearch.deprecation.index.mapper]  [X] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:05:09,134][WARN ][org.elasticsearch.deprecation.index.mapper]  [X] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:05:09,135][WARN ][org.elasticsearch.deprecation.index.mapper]  [X] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:05:09,137][WARN ][org.elasticsearch.deprecation.index.mapper]  [X] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:05:09,138][WARN ][org.elasticsearch.deprecation.index.mapper]  [X] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:05:09,138][WARN ][org.elasticsearch.deprecation.index.mapper]  [X] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:05:09,139][WARN ][org.elasticsearch.deprecation.index.mapper]  [X] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:05:09,139][WARN ][org.elasticsearch.deprecation.index.mapper]  [X] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:05:09,139][WARN ][org.elasticsearch.deprecation.index.mapper]  [X] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:05:09,143][WARN ][org.elasticsearch.deprecation.index.mapper]  [X] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:05:09,144][WARN ][org.elasticsearch.deprecation.index.mapper]  [X] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:05:09,144][WARN ][org.elasticsearch.deprecation.index.mapper]  [X] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:05:09,145][WARN ][org.elasticsearch.deprecation.index.mapper]  [X] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:05:09,145][WARN ][org.elasticsearch.deprecation.index.mapper]  [X] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:05:09,145][WARN ][org.elasticsearch.deprecation.index.mapper]  [X] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:05:09,146][WARN ][org.elasticsearch.deprecation.index.mapper]  [X] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:05:09,147][WARN ][org.elasticsearch.deprecation.index.mapper]  [X] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:05:09,147][WARN ][org.elasticsearch.deprecation.index.mapper]  [X] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:05:09,149][WARN ][org.elasticsearch.deprecation.index.mapper]  [X] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:05:09,150][WARN ][org.elasticsearch.deprecation.index.mapper]  [X] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T03:05:09,150][WARN ][org.elasticsearch.deprecation.index.mapper]  [X] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
  "startTimestamp": 1474047309094,
  "executionTime": 58
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.SpanTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
  "startTimestamp": 1474047309152,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.SpanTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
  "startTimestamp": 1474047309154,
  "executionTime": 35
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
  "startTimestamp": 1474047309189,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.SpanTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
  "startTimestamp": 1474047309192,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.SpanTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
  "startTimestamp": 1474047309198,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.SpanTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
  "startTimestamp": 1474047309200,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
  "startTimestamp": 1474047309203,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.SpanTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
  "startTimestamp": 1474047309206,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.SpanTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
  "startTimestamp": 1474047309216,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
  "startTimestamp": 1474047309219,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.SpanTermQueryBuilderTests",
  "startTimestamp": 1474047309074,
  "executionTime": 151
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.SpanWithinQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.SpanWithinQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.SpanWithinQueryBuilderTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.SpanWithinQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.SpanWithinQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.SpanWithinQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.SpanWithinQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.SpanWithinQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.SpanWithinQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.SpanWithinQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.SpanWithinQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.SpanWithinQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.SpanWithinQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047309379
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:35:09,418][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{qb6uqBE4TuaKsgLQzgzu-w}{local}{local[480]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:35:09,426][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:35:09,426][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:35:09,441][WARN ][org.elasticsearch.deprecation.index.mapper]  [UuArCYxoi] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:35:09,441][WARN ][org.elasticsearch.deprecation.index.mapper]  [UuArCYxoi] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:35:09,441][WARN ][org.elasticsearch.deprecation.index.mapper]  [UuArCYxoi] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:35:09,442][WARN ][org.elasticsearch.deprecation.index.mapper]  [UuArCYxoi] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:35:09,442][WARN ][org.elasticsearch.deprecation.index.mapper]  [UuArCYxoi] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:35:09,442][WARN ][org.elasticsearch.deprecation.index.mapper]  [UuArCYxoi] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:35:09,444][WARN ][org.elasticsearch.deprecation.index.mapper]  [UuArCYxoi] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:35:09,444][WARN ][org.elasticsearch.deprecation.index.mapper]  [UuArCYxoi] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T12:35:09,444][WARN ][org.elasticsearch.deprecation.index.mapper]  [UuArCYxoi] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
  "startTimestamp": 1474047309413,
  "executionTime": 44
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
  "startTimestamp": 1474047309457,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
  "startTimestamp": 1474047309460,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
  "startTimestamp": 1474047309463,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
  "startTimestamp": 1474047309480,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
  "startTimestamp": 1474047309482,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
  "startTimestamp": 1474047309485,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
  "startTimestamp": 1474047309491,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
  "startTimestamp": 1474047309498,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
  "startTimestamp": 1474047309503,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.SpanWithinQueryBuilderTests",
  "startTimestamp": 1474047309379,
  "executionTime": 130
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.search.nested.DoubleNestedSortingTests",
   "displayName": "org.elasticsearch.index.search.nested.DoubleNestedSortingTests",
   "methodName": null,
   "className": "org.elasticsearch.index.search.nested.DoubleNestedSortingTests",
   "children": [
    {
     "id": "ID#testNestedSorting(org.elasticsearch.index.search.nested.DoubleNestedSortingTests)",
     "displayName": "testNestedSorting(org.elasticsearch.index.search.nested.DoubleNestedSortingTests)",
     "methodName": "testNestedSorting",
     "className": "org.elasticsearch.index.search.nested.DoubleNestedSortingTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.index.search.nested.DoubleNestedSortingTests)",
     "displayName": "testEmpty(org.elasticsearch.index.search.nested.DoubleNestedSortingTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.index.search.nested.DoubleNestedSortingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047309679
 }
]

[
 "TEST_STARTED",
 "ID#testNestedSorting(org.elasticsearch.index.search.nested.DoubleNestedSortingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:09,717][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:09,736][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:09,736][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:09,740][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:09,741][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:09,742][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:09,845][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:09,845][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:09,845][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[105]}, bound_addresses {local[105]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:09,846][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{sp8djy9RSkW8-G9qvcz3bg}{8HQ4gAiTQs-7doX60XNCqw}{local}{local[105]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:09,847][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:09,857][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:09,875][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:09,949][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:09,990][INFO ][org.elasticsearch.index.search.nested] [DoubleNestedSortingTests#testNestedSorting]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedSorting(org.elasticsearch.index.search.nested.DoubleNestedSortingTests)",
  "startTimestamp": 1474047309697,
  "executionTime": 354
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.index.search.nested.DoubleNestedSortingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:10,056][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:10,095][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:10,109][INFO ][org.elasticsearch.index.search.nested] [DoubleNestedSortingTests#testEmpty]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.index.search.nested.DoubleNestedSortingTests)",
  "startTimestamp": 1474047310051,
  "executionTime": 114
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:10,165][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:10,166][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:10,166][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T09:35:10,167][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.search.nested.DoubleNestedSortingTests",
  "startTimestamp": 1474047309679,
  "executionTime": 496
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.search.nested.FloatNestedSortingTests",
   "displayName": "org.elasticsearch.index.search.nested.FloatNestedSortingTests",
   "methodName": null,
   "className": "org.elasticsearch.index.search.nested.FloatNestedSortingTests",
   "children": [
    {
     "id": "ID#testNestedSorting(org.elasticsearch.index.search.nested.FloatNestedSortingTests)",
     "displayName": "testNestedSorting(org.elasticsearch.index.search.nested.FloatNestedSortingTests)",
     "methodName": "testNestedSorting",
     "className": "org.elasticsearch.index.search.nested.FloatNestedSortingTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.index.search.nested.FloatNestedSortingTests)",
     "displayName": "testEmpty(org.elasticsearch.index.search.nested.FloatNestedSortingTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.index.search.nested.FloatNestedSortingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047310241
 }
]

[
 "TEST_STARTED",
 "ID#testNestedSorting(org.elasticsearch.index.search.nested.FloatNestedSortingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:10,267][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:10,291][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:10,292][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:10,294][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:10,296][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:10,296][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:10,381][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:10,382][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:10,382][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[106]}, bound_addresses {local[106]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:10,383][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{sp8djy9RSkW8-G9qvcz3bg}{fynfSZSCQ5yWh7TYG9-MKw}{local}{local[106]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:10,384][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:10,395][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:10,409][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:10,506][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:10,539][INFO ][org.elasticsearch.index.search.nested] [FloatNestedSortingTests#testNestedSorting]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedSorting(org.elasticsearch.index.search.nested.FloatNestedSortingTests)",
  "startTimestamp": 1474047310255,
  "executionTime": 309
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.index.search.nested.FloatNestedSortingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:10,569][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:10,620][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:10,634][INFO ][org.elasticsearch.index.search.nested] [FloatNestedSortingTests#testEmpty]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.index.search.nested.FloatNestedSortingTests)",
  "startTimestamp": 1474047310564,
  "executionTime": 220
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:10,784][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:10,785][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:10,785][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T11:35:10,787][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.search.nested.FloatNestedSortingTests",
  "startTimestamp": 1474047310241,
  "executionTime": 555
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.search.nested.LongNestedSortingTests",
   "displayName": "org.elasticsearch.index.search.nested.LongNestedSortingTests",
   "methodName": null,
   "className": "org.elasticsearch.index.search.nested.LongNestedSortingTests",
   "children": [
    {
     "id": "ID#testNestedSorting(org.elasticsearch.index.search.nested.LongNestedSortingTests)",
     "displayName": "testNestedSorting(org.elasticsearch.index.search.nested.LongNestedSortingTests)",
     "methodName": "testNestedSorting",
     "className": "org.elasticsearch.index.search.nested.LongNestedSortingTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.index.search.nested.LongNestedSortingTests)",
     "displayName": "testEmpty(org.elasticsearch.index.search.nested.LongNestedSortingTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.index.search.nested.LongNestedSortingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047311058
 }
]

[
 "TEST_STARTED",
 "ID#testNestedSorting(org.elasticsearch.index.search.nested.LongNestedSortingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:11,156][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:11,174][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:11,174][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:11,177][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:11,180][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:11,180][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:11,283][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:11,283][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:11,283][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[107]}, bound_addresses {local[107]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:11,284][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{sp8djy9RSkW8-G9qvcz3bg}{p7JUy01CS62oVnBMBRiwkA}{local}{local[107]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:11,285][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:11,296][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:11,369][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:11,582][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:11,614][INFO ][org.elasticsearch.index.search.nested] [LongNestedSortingTests#testNestedSorting]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedSorting(org.elasticsearch.index.search.nested.LongNestedSortingTests)",
  "startTimestamp": 1474047311069,
  "executionTime": 570
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.index.search.nested.LongNestedSortingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:11,645][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:11,928][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:12,136][INFO ][org.elasticsearch.index.search.nested] [LongNestedSortingTests#testEmpty]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.index.search.nested.LongNestedSortingTests)",
  "startTimestamp": 1474047311639,
  "executionTime": 527
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:12,166][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:12,167][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:12,167][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T00:35:12,168][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.search.nested.LongNestedSortingTests",
  "startTimestamp": 1474047311058,
  "executionTime": 1116
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.search.nested.NestedSortingTests",
   "displayName": "org.elasticsearch.index.search.nested.NestedSortingTests",
   "methodName": null,
   "className": "org.elasticsearch.index.search.nested.NestedSortingTests",
   "children": [
    {
     "id": "ID#testEmpty(org.elasticsearch.index.search.nested.NestedSortingTests)",
     "displayName": "testEmpty(org.elasticsearch.index.search.nested.NestedSortingTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.index.search.nested.NestedSortingTests",
     "children": []
    },
    {
     "id": "ID#testNestedSorting(org.elasticsearch.index.search.nested.NestedSortingTests)",
     "displayName": "testNestedSorting(org.elasticsearch.index.search.nested.NestedSortingTests)",
     "methodName": "testNestedSorting",
     "className": "org.elasticsearch.index.search.nested.NestedSortingTests",
     "children": []
    },
    {
     "id": "ID#testDuel(org.elasticsearch.index.search.nested.NestedSortingTests)",
     "displayName": "testDuel(org.elasticsearch.index.search.nested.NestedSortingTests)",
     "methodName": "testDuel",
     "className": "org.elasticsearch.index.search.nested.NestedSortingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047312544
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.index.search.nested.NestedSortingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:12,575][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:12,600][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:12,601][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:12,604][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:12,607][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:12,607][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:12,748][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:12,749][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:12,749][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[108]}, bound_addresses {local[108]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:12,752][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{r51ynp6fQoukEYhHE-DWvg}{-xnIT7n7TDqW1ToTBdOsTg}{local}{local[108]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:12,752][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:12,764][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:12,782][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:12,849][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:12,862][INFO ][org.elasticsearch.index.search.nested] [NestedSortingTests#testEmpty]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.index.search.nested.NestedSortingTests)",
  "startTimestamp": 1474047312567,
  "executionTime": 329
 }
]

[
 "TEST_STARTED",
 "ID#testNestedSorting(org.elasticsearch.index.search.nested.NestedSortingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:12,904][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:13,021][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:13,045][INFO ][org.elasticsearch.index.search.nested] [NestedSortingTests#testNestedSorting]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedSorting(org.elasticsearch.index.search.nested.NestedSortingTests)",
  "startTimestamp": 1474047312896,
  "executionTime": 186
 }
]

[
 "TEST_STARTED",
 "ID#testDuel(org.elasticsearch.index.search.nested.NestedSortingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:13,089][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:13,167][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:13,205][INFO ][org.elasticsearch.index.search.nested] [NestedSortingTests#testDuel]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuel(org.elasticsearch.index.search.nested.NestedSortingTests)",
  "startTimestamp": 1474047313083,
  "executionTime": 184
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:13,267][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:13,269][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:13,270][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T08:35:13,271][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.search.nested.NestedSortingTests",
  "startTimestamp": 1474047312544,
  "executionTime": 734
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.shard.CommitPointsTests",
   "displayName": "org.elasticsearch.index.shard.CommitPointsTests",
   "methodName": null,
   "className": "org.elasticsearch.index.shard.CommitPointsTests",
   "children": [
    {
     "id": "ID#testCommitPointXContent(org.elasticsearch.index.shard.CommitPointsTests)",
     "displayName": "testCommitPointXContent(org.elasticsearch.index.shard.CommitPointsTests)",
     "methodName": "testCommitPointXContent",
     "className": "org.elasticsearch.index.shard.CommitPointsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047313453
 }
]

[
 "TEST_STARTED",
 "ID#testCommitPointXContent(org.elasticsearch.index.shard.CommitPointsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T17:35:13,511][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] serialized commit_point {%0A  \"version\" : 1,%0A  \"name\" : \"test\",%0A  \"type\" : \"GENERATED\",%0A  \"index_files\" : {%0A    \"file1\" : {%0A      \"physical_name\" : \"file1_p\",%0A      \"length\" : 100,%0A      \"checksum\" : \"ck1\"%0A    },%0A    \"file2\" : {%0A      \"physical_name\" : \"file2_p\",%0A      \"length\" : 200,%0A      \"checksum\" : \"ck2\"%0A    }%0A  },%0A  \"translog_files\" : {%0A    \"t_file1\" : {%0A      \"physical_name\" : \"t_file1_p\",%0A      \"length\" : 100%0A    },%0A    \"t_file2\" : {%0A      \"physical_name\" : \"t_file2_p\",%0A      \"length\" : 200%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCommitPointXContent(org.elasticsearch.index.shard.CommitPointsTests)",
  "startTimestamp": 1474047313499,
  "executionTime": 13
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.shard.CommitPointsTests",
  "startTimestamp": 1474047313453,
  "executionTime": 61
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.shard.IndexSearcherWrapperTests",
   "displayName": "org.elasticsearch.index.shard.IndexSearcherWrapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.shard.IndexSearcherWrapperTests",
   "children": [
    {
     "id": "ID#testReaderCloseListenerIsCalled(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
     "displayName": "testReaderCloseListenerIsCalled(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
     "methodName": "testReaderCloseListenerIsCalled",
     "className": "org.elasticsearch.index.shard.IndexSearcherWrapperTests",
     "children": []
    },
    {
     "id": "ID#testNoWrap(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
     "displayName": "testNoWrap(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
     "methodName": "testNoWrap",
     "className": "org.elasticsearch.index.shard.IndexSearcherWrapperTests",
     "children": []
    },
    {
     "id": "ID#testWrappedReaderMustDelegateCoreCacheKey(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
     "displayName": "testWrappedReaderMustDelegateCoreCacheKey(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
     "methodName": "testWrappedReaderMustDelegateCoreCacheKey",
     "className": "org.elasticsearch.index.shard.IndexSearcherWrapperTests",
     "children": []
    },
    {
     "id": "ID#testIsCacheable(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
     "displayName": "testIsCacheable(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
     "methodName": "testIsCacheable",
     "className": "org.elasticsearch.index.shard.IndexSearcherWrapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047314019
 }
]

[
 "TEST_STARTED",
 "ID#testReaderCloseListenerIsCalled(org.elasticsearch.index.shard.IndexSearcherWrapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReaderCloseListenerIsCalled(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
  "startTimestamp": 1474047314041,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testNoWrap(org.elasticsearch.index.shard.IndexSearcherWrapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoWrap(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
  "startTimestamp": 1474047314071,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testWrappedReaderMustDelegateCoreCacheKey(org.elasticsearch.index.shard.IndexSearcherWrapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWrappedReaderMustDelegateCoreCacheKey(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
  "startTimestamp": 1474047314081,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testIsCacheable(org.elasticsearch.index.shard.IndexSearcherWrapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsCacheable(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
  "startTimestamp": 1474047314089,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.shard.IndexSearcherWrapperTests",
  "startTimestamp": 1474047314019,
  "executionTime": 79
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.shard.IndexShardOperationsLockTests",
   "displayName": "org.elasticsearch.index.shard.IndexShardOperationsLockTests",
   "methodName": null,
   "className": "org.elasticsearch.index.shard.IndexShardOperationsLockTests",
   "children": [
    {
     "id": "ID#testActiveOperationsCount(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "displayName": "testActiveOperationsCount(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "methodName": "testActiveOperationsCount",
     "className": "org.elasticsearch.index.shard.IndexShardOperationsLockTests",
     "children": []
    },
    {
     "id": "ID#testOperationsDelayedIfBlock(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "displayName": "testOperationsDelayedIfBlock(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "methodName": "testOperationsDelayedIfBlock",
     "className": "org.elasticsearch.index.shard.IndexShardOperationsLockTests",
     "children": []
    },
    {
     "id": "ID#testAllOperationsInvoked(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "displayName": "testAllOperationsInvoked(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "methodName": "testAllOperationsInvoked",
     "className": "org.elasticsearch.index.shard.IndexShardOperationsLockTests",
     "children": []
    },
    {
     "id": "ID#testOperationsInvokedImmediatelyIfNoBlock(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "displayName": "testOperationsInvokedImmediatelyIfNoBlock(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "methodName": "testOperationsInvokedImmediatelyIfNoBlock",
     "className": "org.elasticsearch.index.shard.IndexShardOperationsLockTests",
     "children": []
    },
    {
     "id": "ID#testBlockIfClosed(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "displayName": "testBlockIfClosed(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "methodName": "testBlockIfClosed",
     "className": "org.elasticsearch.index.shard.IndexShardOperationsLockTests",
     "children": []
    },
    {
     "id": "ID#testOperationsIfClosed(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "displayName": "testOperationsIfClosed(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
     "methodName": "testOperationsIfClosed",
     "className": "org.elasticsearch.index.shard.IndexShardOperationsLockTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047314341
 }
]

[
 "TEST_STARTED",
 "ID#testActiveOperationsCount(org.elasticsearch.index.shard.IndexShardOperationsLockTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActiveOperationsCount(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
  "startTimestamp": 1474047314354,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testOperationsDelayedIfBlock(org.elasticsearch.index.shard.IndexShardOperationsLockTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOperationsDelayedIfBlock(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
  "startTimestamp": 1474047314359,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testAllOperationsInvoked(org.elasticsearch.index.shard.IndexShardOperationsLockTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllOperationsInvoked(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
  "startTimestamp": 1474047314368,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testOperationsInvokedImmediatelyIfNoBlock(org.elasticsearch.index.shard.IndexShardOperationsLockTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOperationsInvokedImmediatelyIfNoBlock(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
  "startTimestamp": 1474047314376,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBlockIfClosed(org.elasticsearch.index.shard.IndexShardOperationsLockTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBlockIfClosed(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
  "startTimestamp": 1474047314378,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testOperationsIfClosed(org.elasticsearch.index.shard.IndexShardOperationsLockTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOperationsIfClosed(org.elasticsearch.index.shard.IndexShardOperationsLockTests)",
  "startTimestamp": 1474047314381,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.shard.IndexShardOperationsLockTests",
  "startTimestamp": 1474047314341,
  "executionTime": 45
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.shard.IndexShardTests",
   "displayName": "org.elasticsearch.index.shard.IndexShardTests",
   "methodName": null,
   "className": "org.elasticsearch.index.shard.IndexShardTests",
   "children": [
    {
     "id": "ID#testLockingBeforeAndAfterRelocated(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testLockingBeforeAndAfterRelocated(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testLockingBeforeAndAfterRelocated",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testSearcherWrapperWorksWithGlobaOrdinals(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testSearcherWrapperWorksWithGlobaOrdinals(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testSearcherWrapperWorksWithGlobaOrdinals",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testRecoveryFailsAfterMovingToRelocatedState(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testRecoveryFailsAfterMovingToRelocatedState(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testRecoveryFailsAfterMovingToRelocatedState",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testMinimumCompatVersion(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testMinimumCompatVersion(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testMinimumCompatVersion",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testShardStateMetaHashCodeEquals(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testShardStateMetaHashCodeEquals(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testShardStateMetaHashCodeEquals",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testUpdatePriority(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testUpdatePriority(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testUpdatePriority",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testIndexingBufferDuringInternalRecovery(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testIndexingBufferDuringInternalRecovery(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testIndexingBufferDuringInternalRecovery",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testIndexDirIsDeletedWhenShardRemoved(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testIndexDirIsDeletedWhenShardRemoved(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testIndexDirIsDeletedWhenShardRemoved",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testRecoverFromCleanStore(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testRecoverFromCleanStore(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testRecoverFromCleanStore",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testRestoreShard(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testRestoreShard(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testRestoreShard",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testTranslogRecoverySyncsTranslog(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testTranslogRecoverySyncsTranslog(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testTranslogRecoverySyncsTranslog",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testFailIfIndexNotPresentInRecoverFromStore(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testFailIfIndexNotPresentInRecoverFromStore(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testFailIfIndexNotPresentInRecoverFromStore",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testIndexCanChangeCustomDataPath(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testIndexCanChangeCustomDataPath(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testIndexCanChangeCustomDataPath",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testShardStats(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testShardStats(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testShardStats",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testRecoverFromLocalShard(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testRecoverFromLocalShard(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testRecoverFromLocalShard",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testFailShard(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testFailShard(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testFailShard",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testIndexingBufferDuringPeerRecovery(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testIndexingBufferDuringPeerRecovery(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testIndexingBufferDuringPeerRecovery",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testDurableFlagHasEffect(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testDurableFlagHasEffect(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testDurableFlagHasEffect",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testLockTryingToDelete(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testLockTryingToDelete(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testLockTryingToDelete",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testStressMaybeFlush(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testStressMaybeFlush(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testStressMaybeFlush",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testSearchIsReleaseIfWrapperFails(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testSearchIsReleaseIfWrapperFails(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testSearchIsReleaseIfWrapperFails",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testShardHasMemoryBufferOnTranslogRecover(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testShardHasMemoryBufferOnTranslogRecover(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testShardHasMemoryBufferOnTranslogRecover",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testMaybeFlush(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testMaybeFlush(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testMaybeFlush",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testIndexingOperationsListeners(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testIndexingOperationsListeners(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testIndexingOperationsListeners",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testAcquireIndexCommit(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testAcquireIndexCommit(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testAcquireIndexCommit",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testWriteShardState(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testWriteShardState(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testWriteShardState",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testSearcherWrapperIsUsed(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testSearcherWrapperIsUsed(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testSearcherWrapperIsUsed",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testSnapshotStore(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testSnapshotStore(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testSnapshotStore",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testMarkAsInactiveTriggersSyncedFlush(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testMarkAsInactiveTriggersSyncedFlush(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testMarkAsInactiveTriggersSyncedFlush",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testExpectedShardSizeIsPresent(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testExpectedShardSizeIsPresent(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testExpectedShardSizeIsPresent",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testAsyncFsync(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testAsyncFsync(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testAsyncFsync",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testRecoverFromStore(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testRecoverFromStore(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testRecoverFromStore",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testOperationLocksOnPrimaryShards(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testOperationLocksOnPrimaryShards(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testOperationLocksOnPrimaryShards",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testDelayedOperationsBeforeAndAfterRelocated(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testDelayedOperationsBeforeAndAfterRelocated(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testDelayedOperationsBeforeAndAfterRelocated",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testRecoverIntoLeftover(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testRecoverIntoLeftover(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testRecoverIntoLeftover",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testPersistenceStateMetadataPersistence(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testPersistenceStateMetadataPersistence(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testPersistenceStateMetadataPersistence",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testDeleteIndexPreventsNewOperations(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testDeleteIndexPreventsNewOperations(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testDeleteIndexPreventsNewOperations",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testOperationLocksOnReplicaShards(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testOperationLocksOnReplicaShards(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testOperationLocksOnReplicaShards",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testStressRelocated(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testStressRelocated(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testStressRelocated",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    },
    {
     "id": "ID#testIndexingOperationListnenersIsInvokedOnRecovery(org.elasticsearch.index.shard.IndexShardTests)",
     "displayName": "testIndexingOperationListnenersIsInvokedOnRecovery(org.elasticsearch.index.shard.IndexShardTests)",
     "methodName": "testIndexingOperationListnenersIsInvokedOnRecovery",
     "className": "org.elasticsearch.index.shard.IndexShardTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047314624
 }
]

[
 "TEST_STARTED",
 "ID#testLockingBeforeAndAfterRelocated(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:14,653][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:14,676][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:14,676][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:14,680][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:14,682][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:14,682][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:14,844][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:14,844][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:14,844][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[109]}, bound_addresses {local[109]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:14,872][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{tCDvvFEXT8axDq9IVHe8SQ}{GkKzeCScQ-WfbtEfich4FA}{local}{local[109]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:14,872][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:14,972][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:15,000][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:15,096][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:15,108][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testLockingBeforeAndAfterRelocated]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLockingBeforeAndAfterRelocated(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474047314645,
  "executionTime": 508
 }
]

[
 "TEST_STARTED",
 "ID#testSearcherWrapperWorksWithGlobaOrdinals(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:15,159][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:15,229][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:15,243][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/6Ebe0rntT4K6YUMDRrJFQA] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:15,526][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/6Ebe0rntT4K6YUMDRrJFQA] update_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:15,979][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testSearcherWrapperWorksWithGlobaOrdinals]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearcherWrapperWorksWithGlobaOrdinals(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474047315153,
  "executionTime": 865
 }
]

[
 "TEST_STARTED",
 "ID#testRecoveryFailsAfterMovingToRelocatedState(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:16,027][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:16,090][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:16,109][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testRecoveryFailsAfterMovingToRelocatedState]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoveryFailsAfterMovingToRelocatedState(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474047316018,
  "executionTime": 120
 }
]

[
 "TEST_STARTED",
 "ID#testMinimumCompatVersion(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:16,145][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:16,189][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:16,201][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/yHgbnbHJQYqok3YpRtqhyg] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:16,391][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testMinimumCompatVersion]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinimumCompatVersion(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474047316138,
  "executionTime": 293
 }
]

[
 "TEST_STARTED",
 "ID#testShardStateMetaHashCodeEquals(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:16,435][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testShardStateMetaHashCodeEquals]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardStateMetaHashCodeEquals(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474047316431,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testUpdatePriority(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:16,444][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:16,489][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:16,516][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testUpdatePriority]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdatePriority(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474047316437,
  "executionTime": 108
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingBufferDuringInternalRecovery(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:16,551][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:16,602][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:16,614][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index/UR4k7X0gRGiBKK98b1aVZg] create_mapping [testtype]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:16,755][INFO ][org.elasticsearch.index.shard] [node_s_0] [index][0] [IndexShardTests#testIndexingBufferDuringInternalRecovery]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingBufferDuringInternalRecovery(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474047316545,
  "executionTime": 234
 }
]

[
 "TEST_STARTED",
 "ID#testIndexDirIsDeletedWhenShardRemoved(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:16,782][INFO ][org.elasticsearch.index.shard] [node_s_0] [index][0] --> idxPath: [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J2\\temp\\org.elasticsearch.index.shard.IndexShardTests_229C635BFFC33CB2-001\\idpEDIipJE]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:16,786][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:16,840][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:16,855][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/cNIvzRpJSSKL85eYIhN0jg] create_mapping [bar]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:16,999][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] --> checking that [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J2\\temp\\org.elasticsearch.index.shard.IndexShardTests_229C635BFFC33CB2-001\\idpEDIipJE] has been cleared%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:16,999][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] --> found file: [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J2\\temp\\org.elasticsearch.index.shard.IndexShardTests_229C635BFFC33CB2-001\\idpEDIipJE\\0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:16,999][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] --> checking that [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J2\\temp\\org.elasticsearch.index.shard.IndexShardTests_229C635BFFC33CB2-001\\idpEDIipJE\\0] has been cleared%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:17,000][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testIndexDirIsDeletedWhenShardRemoved]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexDirIsDeletedWhenShardRemoved(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474047316779,
  "executionTime": 221
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverFromCleanStore(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:17,006][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:17,057][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:17,067][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/xLc4UvJeSTKEJWz-qjMzyA] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:17,325][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testRecoverFromCleanStore]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverFromCleanStore(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474047317001,
  "executionTime": 350
 }
]

[
 "TEST_STARTED",
 "ID#testRestoreShard(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:17,360][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:17,415][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:17,433][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_target] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:17,483][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_target][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:17,496][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/K_TQvwK2Q_ms1OuV-zF21w] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:17,513][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_target/54nlMt1CRmycTlrjU7gyrQ] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:17,817][INFO ][org.elasticsearch.index.shard] [node_s_0] [test_target][0] [IndexShardTests#testRestoreShard]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestoreShard(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474047317351,
  "executionTime": 525
 }
]

[
 "TEST_STARTED",
 "ID#testTranslogRecoverySyncsTranslog(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:17,883][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [testindexfortranslogsync] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:17,936][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[testindexfortranslogsync][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:17,949][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [testindexfortranslogsync/pySg3RztSSK0xzdIEXoL9A] create_mapping [testtype]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:18,018][INFO ][org.elasticsearch.index.shard] [node_s_0] [testindexfortranslogsync][0] [IndexShardTests#testTranslogRecoverySyncsTranslog]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTranslogRecoverySyncsTranslog(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474047317876,
  "executionTime": 192
 }
]

[
 "TEST_STARTED",
 "ID#testFailIfIndexNotPresentInRecoverFromStore(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:18,076][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:18,137][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:18,150][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/Bne6IlDuQdiauRQ9HTzxhQ] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:18,941][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testFailIfIndexNotPresentInRecoverFromStore]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailIfIndexNotPresentInRecoverFromStore(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474047318068,
  "executionTime": 907
 }
]

[
 "TEST_STARTED",
 "ID#testIndexCanChangeCustomDataPath(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:18,979][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] --> start dir: [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J2\\temp\\org.elasticsearch.index.shard.IndexShardTests_229C635BFFC33CB2-001\\oyNRWqhKPL\\start-yfXAiiuWwI]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:18,979][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] -->   end dir: [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J2\\temp\\org.elasticsearch.index.shard.IndexShardTests_229C635BFFC33CB2-001\\oyNRWqhKPL\\end-WYmeQlpPRu]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:18,980][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] --> creating an index with data_path [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J2\\temp\\org.elasticsearch.index.shard.IndexShardTests_229C635BFFC33CB2-001\\oyNRWqhKPL\\start-yfXAiiuWwI]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:18,983][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [idx] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:19,041][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[idx][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:19,056][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [idx/bfzUhCB6Q5m3XHhuFlWBYA] create_mapping [bar]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:19,545][INFO ][org.elasticsearch.index.shard] [node_s_0] [idx][0] --> closing the index [idx]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:19,553][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[idx/bfzUhCB6Q5m3XHhuFlWBYA]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:19,892][INFO ][org.elasticsearch.index.shard] [node_s_0] [idx][0] --> index closed, re-opening...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:19,896][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] opening indices [[[idx/bfzUhCB6Q5m3XHhuFlWBYA]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:19,911][INFO ][org.elasticsearch.index.shard] [node_s_0] [idx][0] --> index re-opened%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:19,972][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[idx][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:19,987][INFO ][org.elasticsearch.index.shard] [node_s_0] [idx][0] --> closing the index [idx]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:19,987][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[idx/bfzUhCB6Q5m3XHhuFlWBYA]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:20,009][INFO ][org.elasticsearch.index.shard] [node_s_0] [idx][0] --> moving data on disk [start-yfXAiiuWwI] to [end-WYmeQlpPRu]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:20,010][INFO ][org.elasticsearch.index.shard] [node_s_0] [idx][0] --> updating settings...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:20,055][INFO ][org.elasticsearch.index.shard] [node_s_0] [idx][0] --> settings updated and files moved, re-opening index%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:20,055][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] opening indices [[[idx/bfzUhCB6Q5m3XHhuFlWBYA]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:20,074][INFO ][org.elasticsearch.index.shard] [node_s_0] [idx][0] --> index re-opened%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:20,128][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[idx][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:20,174][INFO ][org.elasticsearch.index.shard] [node_s_0] [idx][0] --> checking that [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J2\\temp\\org.elasticsearch.index.shard.IndexShardTests_229C635BFFC33CB2-001\\oyNRWqhKPL\\start-yfXAiiuWwI] has been cleared%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:20,175][INFO ][org.elasticsearch.index.shard] [node_s_0] [idx][0] --> checking that [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J2\\temp\\org.elasticsearch.index.shard.IndexShardTests_229C635BFFC33CB2-001\\oyNRWqhKPL\\end-WYmeQlpPRu] has been cleared%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:20,175][INFO ][org.elasticsearch.index.shard] [node_s_0] [idx][0] --> found file: [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J2\\temp\\org.elasticsearch.index.shard.IndexShardTests_229C635BFFC33CB2-001\\oyNRWqhKPL\\end-WYmeQlpPRu\\0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:20,176][INFO ][org.elasticsearch.index.shard] [node_s_0] [idx][0] --> checking that [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J2\\temp\\org.elasticsearch.index.shard.IndexShardTests_229C635BFFC33CB2-001\\oyNRWqhKPL\\end-WYmeQlpPRu\\0] has been cleared%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:20,177][INFO ][org.elasticsearch.index.shard] [node_s_0] [idx][0] [IndexShardTests#testIndexCanChangeCustomDataPath]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexCanChangeCustomDataPath(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474047318975,
  "executionTime": 1203
 }
]

[
 "TEST_STARTED",
 "ID#testShardStats(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:20,187][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:20,289][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:20,375][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testShardStats]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testShardStats(org.elasticsearch.index.shard.IndexShardTests)",
  "message": "Some path weirdness on windows",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: Some path weirdness on windows\r\n\tat __randomizedtesting.SeedInfo.seed([229C635BFFC33CB2:B63EE4D002D799C6]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeFalse(RandomizedTest.java:635)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeFalse(LuceneTestCase.java:849)\r\n\tat org.elasticsearch.index.shard.IndexShardTests.testShardStats(IndexShardTests.java:803)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: Some path weirdness on windows",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardStats(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474047320178,
  "executionTime": 260
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverFromLocalShard(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:20,456][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:20,545][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:20,652][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:20,739][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index_1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:20,837][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:21,059][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index_2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:21,080][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index/1CxK6z0pSAG7I_9NJfOKFQ] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:21,998][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_1/cYDAkZB7QB6U5tdexq_2Ng] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:22,193][INFO ][org.elasticsearch.index.shard] [node_s_0] [index_1][0] [IndexShardTests#testRecoverFromLocalShard]: cleaning up after test%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:22,227][WARN ][org.elasticsearch.indices] [index/1CxK6z0pSAG7I_9NJfOKFQ] failed to delete index%0D%0Ajava.io.IOException: Could not remove the following files (in the order of attempts):%0A   C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J2\\temp\\org.elasticsearch.index.shard.IndexShardTests_229C635BFFC33CB2-001\\tempDir-001\\data\\nodes\\0\\indices\\1CxK6z0pSAG7I_9NJfOKFQ\\0\\index\\_0.cfs: java.nio.file.AccessDeniedException: C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J2\\temp\\org.elasticsearch.index.shard.IndexShardTests_229C635BFFC33CB2-001\\tempDir-001\\data\\nodes\\0\\indices\\1CxK6z0pSAG7I_9NJfOKFQ\\0\\index\\_0.cfs%0A   C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J2\\temp\\org.elasticsearch.index.shard.IndexShardTests_229C635BFFC33CB2-001\\tempDir-001\\data\\nodes\\0\\indices\\1CxK6z0pSAG7I_9NJfOKFQ\\0\\index\\_1.cfs: java.nio.file.AccessDeniedException: C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J2\\temp\\org.elasticsearch.index.shard.IndexShardTests_229C635BFFC33CB2-001\\tempDir-001\\data\\nodes\\0\\indices\\1CxK6z0pSAG7I_9NJfOKFQ\\0\\index\\_1.cfs%0A   C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J2\\temp\\org.elasticsearch.index.shard.IndexShardTests_229C635BFFC33CB2-001\\tempDir-001\\data\\nodes\\0\\indices\\1CxK6z0pSAG7I_9NJfOKFQ\\0\\index: java.nio.file.DirectoryNotEmptyException: C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J2\\temp\\org.elasticsearch.index.shard.IndexShardTests_229C635BFFC33CB2-001\\tempDir-001\\data\\nodes\\0\\indices\\1CxK6z0pSAG7I_9NJfOKFQ\\0\\index%0A   C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J2\\temp\\org.elasticsearch.index.shard.IndexShardTests_229C635BFFC33CB2-001\\tempDir-001\\data\\nodes\\0\\indices\\1CxK6z0pSAG7I_9NJfOKFQ\\0: java.nio.file.DirectoryNotEmptyException: C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J2\\temp\\org.elasticsearch.index.shard.IndexShardTests_229C635BFFC33CB2-001\\tempDir-001\\data\\nodes\\0\\indices\\1CxK6z0pSAG7I_9NJfOKFQ\\0%0A   C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J2\\temp\\org.elasticsearch.index.shard.IndexShardTests_229C635BFFC33CB2-001\\tempDir-001\\data\\nodes\\0\\indices\\1CxK6z0pSAG7I_9NJfOKFQ: java.nio.file.DirectoryNotEmptyException: C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J2\\temp\\org.elasticsearch.index.shard.IndexShardTests_229C635BFFC33CB2-001\\tempDir-001\\data\\nodes\\0\\indices\\1CxK6z0pSAG7I_9NJfOKFQ%0A%0A%09at org.apache.lucene.util.IOUtils.rm(IOUtils.java:323) ~[lucene-core-6.2.0.jar:6.2.0 764d0f19151dbff6f5fcd9fc4b2682cf934590c5 - mike - 2016-08-20 05:39:36]%0A%09at org.elasticsearch.env.NodeEnvironment.deleteIndexDirectoryUnderLock(NodeEnvironment.java:545) ~[main/:?]%0A%09at org.elasticsearch.env.NodeEnvironment.deleteIndexDirectorySafe(NodeEnvironment.java:529) ~[main/:?]%0A%09at org.elasticsearch.indices.IndicesService.deleteIndexStoreIfDeletionAllowed(IndicesService.java:638) [main/:?]%0A%09at org.elasticsearch.indices.IndicesService.deleteIndexStore(IndicesService.java:625) [main/:?]%0A%09at org.elasticsearch.indices.IndicesService.removeIndex(IndicesService.java:513) [main/:?]%0A%09at org.elasticsearch.indices.IndicesService.deleteIndex(IndicesService.java:568) [main/:?]%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.deleteIndices(IndicesClusterStateService.java:249) [main/:?]%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.clusterChanged(IndicesClusterStateService.java:183) [main/:?]%0A%09at org.elasticsearch.cluster.service.ClusterService.runTasksForExecutor(ClusterService.java:708) [main/:?]%0A%09at org.elasticsearch.cluster.service.ClusterService$UpdateTask.run(ClusterService.java:894) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:444) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:237) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:200) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverFromLocalShard(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474047320439,
  "executionTime": 1816
 }
]

[
 "TEST_STARTED",
 "ID#testFailShard(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:22,262][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:22,320][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:22,367][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testFailShard]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailShard(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474047322255,
  "executionTime": 165
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingBufferDuringPeerRecovery(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:22,427][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:22,483][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:22,497][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index/4KXIRmPqRv-xyzIu01WVSQ] create_mapping [testtype]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:22,701][INFO ][org.elasticsearch.index.shard] [node_s_0] [index][0] [IndexShardTests#testIndexingBufferDuringPeerRecovery]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingBufferDuringPeerRecovery(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474047322421,
  "executionTime": 344
 }
]

[
 "TEST_STARTED",
 "ID#testDurableFlagHasEffect(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:22,774][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:22,891][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:22,989][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/JrXohInXSLSP3kLvH6i4dw] create_mapping [bar]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:23,096][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.durability] from [REQUEST] to [ASYNC]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:23,100][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.durability] from [REQUEST] to [ASYNC]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:23,175][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.durability] from [ASYNC] to [REQUEST]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:23,175][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.durability] from [ASYNC] to [REQUEST]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:23,245][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.durability] from [REQUEST] to [ASYNC]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:23,246][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.durability] from [REQUEST] to [ASYNC]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:23,378][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.durability] from [ASYNC] to [REQUEST]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:23,379][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.durability] from [ASYNC] to [REQUEST]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:23,489][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.durability] from [REQUEST] to [ASYNC]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:23,490][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.durability] from [REQUEST] to [ASYNC]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:23,519][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.durability] from [ASYNC] to [REQUEST]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:23,520][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.durability] from [ASYNC] to [REQUEST]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:23,532][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testDurableFlagHasEffect]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDurableFlagHasEffect(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474047322765,
  "executionTime": 1148
 }
]

[
 "TEST_STARTED",
 "ID#testLockTryingToDelete(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:23,921][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:23,976][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:23,990][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] --> paths: [[C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J2\\temp\\org.elasticsearch.index.shard.IndexShardTests_229C635BFFC33CB2-001\\tempDir-001\\data\\nodes\\0\\indices\\jeMrtTHoS8G7u0VpNNTkEQ\\0]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:23,999][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testLockTryingToDelete]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLockTryingToDelete(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474047323913,
  "executionTime": 111
 }
]

[
 "TEST_STARTED",
 "ID#testStressMaybeFlush(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:24,032][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:24,082][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:24,106][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.flush_threshold_size] from [512mb] to [133b]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:24,106][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.flush_threshold_size] from [512mb] to [133b]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:24,122][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/HGGCOl4jQamTqkmK9QIkWA] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:25,600][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testStressMaybeFlush]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStressMaybeFlush(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474047324025,
  "executionTime": 2038
 }
]

[
 "TEST_STARTED",
 "ID#testSearchIsReleaseIfWrapperFails(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:26,072][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:26,159][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:26,237][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/nZO5vmZoTHOpjZV5va9_wQ] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:26,849][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testSearchIsReleaseIfWrapperFails]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearchIsReleaseIfWrapperFails(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474047326063,
  "executionTime": 814
 }
]

[
 "TEST_STARTED",
 "ID#testShardHasMemoryBufferOnTranslogRecover(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:26,885][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:26,945][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:26,959][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/8C2OrmeUSXGihfK_9rz-rA] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:28,110][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testShardHasMemoryBufferOnTranslogRecover]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardHasMemoryBufferOnTranslogRecover(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474047326877,
  "executionTime": 1260
 }
]

[
 "TEST_STARTED",
 "ID#testMaybeFlush(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:28,145][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:28,226][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:28,248][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.flush_threshold_size] from [512mb] to [133b]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:28,249][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.flush_threshold_size] from [512mb] to [133b]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:28,261][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/jUy7qzaPRk2zXWVFntcYeQ] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:28,515][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] --> current translog size: [43] num_ops [0] generation [org.elasticsearch.index.translog.Translog$TranslogGeneration@3f25dedb]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:28,520][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.flush_threshold_size] from [133b] to [43b]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:28,521][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.flush_threshold_size] from [133b] to [43b]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:28,544][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] --> translog size after delete: [117] num_ops [1] generation [org.elasticsearch.index.translog.Translog$TranslogGeneration@45dd72c3]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:28,545][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] --> translog size on iter  : [117] num_ops [1] generation [org.elasticsearch.index.translog.Translog$TranslogGeneration@675c6d4a]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:28,546][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] --> translog size on iter  : [117] num_ops [1] generation [org.elasticsearch.index.translog.Translog$TranslogGeneration@32a8ed56]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:28,549][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] --> translog size on iter  : [117] num_ops [1] generation [org.elasticsearch.index.translog.Translog$TranslogGeneration@1c4ddaaa]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:28,553][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] --> translog size on iter  : [117] num_ops [1] generation [org.elasticsearch.index.translog.Translog$TranslogGeneration@1fe263f1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:28,562][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] --> translog size on iter  : [117] num_ops [1] generation [org.elasticsearch.index.translog.Translog$TranslogGeneration@1b507b7a]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:28,578][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] --> translog size on iter  : [43] num_ops [0] generation [org.elasticsearch.index.translog.Translog$TranslogGeneration@6e67e71b]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:28,578][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testMaybeFlush]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMaybeFlush(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474047328137,
  "executionTime": 466
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingOperationsListeners(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:28,611][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_iol] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:28,713][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_iol][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:28,730][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_iol/Fe4wCtJiQ3iC2Fxn7rO4HA] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:30,110][INFO ][org.elasticsearch.index.shard] [node_s_0] [test_iol][0] [IndexShardTests#testIndexingOperationsListeners]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingOperationsListeners(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474047328603,
  "executionTime": 1531
 }
]

[
 "TEST_STARTED",
 "ID#testAcquireIndexCommit(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:30,142][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:30,198][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:30,212][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/zLjoEnfFSVSDxN2-Bz051g] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:30,561][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testAcquireIndexCommit]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAcquireIndexCommit(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474047330134,
  "executionTime": 499
 }
]

[
 "TEST_STARTED",
 "ID#testWriteShardState(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:30,661][INFO ][org.elasticsearch.env    ] [GQlcSqM] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:30,662][INFO ][org.elasticsearch.env    ] [GQlcSqM] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:30,705][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testWriteShardState]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteShardState(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474047330633,
  "executionTime": 73
 }
]

[
 "TEST_STARTED",
 "ID#testSearcherWrapperIsUsed(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:30,713][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:30,778][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:30,792][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/YUBF4nLOTV-RbgBltSjn4A] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:30,986][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/YUBF4nLOTV-RbgBltSjn4A] update_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:31,301][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testSearcherWrapperIsUsed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearcherWrapperIsUsed(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474047330706,
  "executionTime": 620
 }
]

[
 "TEST_STARTED",
 "ID#testSnapshotStore(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:31,334][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:31,380][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:31,396][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/VIZJEcuwRN6gdaVa8beCpA] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:31,689][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testSnapshotStore]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSnapshotStore(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474047331326,
  "executionTime": 394
 }
]

[
 "TEST_STARTED",
 "ID#testMarkAsInactiveTriggersSyncedFlush(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:31,727][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:31,807][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:31,820][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/mRJk4BbTT6CJVX-03aqHNA] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:32,140][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testMarkAsInactiveTriggersSyncedFlush]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMarkAsInactiveTriggersSyncedFlush(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474047331720,
  "executionTime": 453
 }
]

[
 "TEST_STARTED",
 "ID#testExpectedShardSizeIsPresent(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:32,181][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:32,302][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:32,322][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/HZpkXvs1TyWyXikMGyWHpw] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:32,877][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testExpectedShardSizeIsPresent]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExpectedShardSizeIsPresent(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474047332173,
  "executionTime": 767
 }
]

[
 "TEST_STARTED",
 "ID#testAsyncFsync(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:32,947][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:32,999][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:33,012][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/wST-1LiVRw2bT8EfcMdt0g] create_mapping [bar]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:33,116][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testAsyncFsync]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAsyncFsync(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474047332940,
  "executionTime": 282
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverFromStore(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:33,231][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:33,437][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:33,453][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/S3ZeBQS9Sj20ceQkQOvD2A] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:33,761][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testRecoverFromStore]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverFromStore(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474047333222,
  "executionTime": 577
 }
]

[
 "TEST_STARTED",
 "ID#testOperationLocksOnPrimaryShards(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:33,807][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:33,855][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:33,881][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testOperationLocksOnPrimaryShards]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOperationLocksOnPrimaryShards(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474047333799,
  "executionTime": 113
 }
]

[
 "TEST_STARTED",
 "ID#testDelayedOperationsBeforeAndAfterRelocated(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:33,920][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:33,981][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:34,004][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testDelayedOperationsBeforeAndAfterRelocated]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDelayedOperationsBeforeAndAfterRelocated(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474047333913,
  "executionTime": 127
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverIntoLeftover(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:34,049][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:34,100][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:34,116][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/JiKMdanQSEK1gy2Ws8rFzA] create_mapping [bar]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:34,588][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[test/JiKMdanQSEK1gy2Ws8rFzA]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:34,821][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:34,940][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:34,954][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testRecoverIntoLeftover]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverIntoLeftover(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474047334040,
  "executionTime": 963
 }
]

[
 "TEST_STARTED",
 "ID#testPersistenceStateMetadataPersistence(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:35,013][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:35,062][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:35,093][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testPersistenceStateMetadataPersistence]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPersistenceStateMetadataPersistence(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474047335004,
  "executionTime": 147
 }
]

[
 "TEST_STARTED",
 "ID#testDeleteIndexPreventsNewOperations(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:35,164][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:35,240][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:35,320][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testDeleteIndexPreventsNewOperations]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeleteIndexPreventsNewOperations(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474047335151,
  "executionTime": 170
 }
]

[
 "TEST_STARTED",
 "ID#testOperationLocksOnReplicaShards(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:35,330][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:35,395][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:35,430][WARN ][org.elasticsearch.index.shard] [node_s_0] [test][0] suspect illegal state: trying to move shard from primary mode to replica mode%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:35,443][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] updated shard routing to [test][0], node[tCDvvFEXT8axDq9IVHe8SQ], relocating [otherNode], [R], s[RELOCATING], a[id=7y4dWmbcTDOu7Ymt9w_mNg, rId=CCBCY5HCQfiNELWotBorlg]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:35,444][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testOperationLocksOnReplicaShards]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOperationLocksOnReplicaShards(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474047335322,
  "executionTime": 155
 }
]

[
 "TEST_STARTED",
 "ID#testStressRelocated(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:35,485][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:35,585][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:35,626][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testStressRelocated]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStressRelocated(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474047335477,
  "executionTime": 181
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingOperationListnenersIsInvokedOnRecovery(org.elasticsearch.index.shard.IndexShardTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:35,672][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:35,779][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:35,795][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/8n1XRWB3TUen-G0A57tzKg] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:36,756][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] [IndexShardTests#testIndexingOperationListnenersIsInvokedOnRecovery]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingOperationListnenersIsInvokedOnRecovery(org.elasticsearch.index.shard.IndexShardTests)",
  "startTimestamp": 1474047335658,
  "executionTime": 1132
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:36,791][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:36,791][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:36,791][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T10:35:36,793][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.shard.IndexShardTests",
  "startTimestamp": 1474047314624,
  "executionTime": 22219
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.rest.action.cat.RestIndicesActionTests",
   "displayName": "org.elasticsearch.rest.action.cat.RestIndicesActionTests",
   "methodName": null,
   "className": "org.elasticsearch.rest.action.cat.RestIndicesActionTests",
   "children": [
    {
     "id": "ID#testBuildTable(org.elasticsearch.rest.action.cat.RestIndicesActionTests)",
     "displayName": "testBuildTable(org.elasticsearch.rest.action.cat.RestIndicesActionTests)",
     "methodName": "testBuildTable",
     "className": "org.elasticsearch.rest.action.cat.RestIndicesActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047336992
 }
]

[
 "TEST_STARTED",
 "ID#testBuildTable(org.elasticsearch.rest.action.cat.RestIndicesActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuildTable(org.elasticsearch.rest.action.cat.RestIndicesActionTests)",
  "startTimestamp": 1474047337015,
  "executionTime": 30
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.rest.action.cat.RestIndicesActionTests",
  "startTimestamp": 1474047336992,
  "executionTime": 61
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.script.NativeScriptTests",
   "displayName": "org.elasticsearch.script.NativeScriptTests",
   "methodName": null,
   "className": "org.elasticsearch.script.NativeScriptTests",
   "children": [
    {
     "id": "ID#testNativeScript(org.elasticsearch.script.NativeScriptTests)",
     "displayName": "testNativeScript(org.elasticsearch.script.NativeScriptTests)",
     "methodName": "testNativeScript",
     "className": "org.elasticsearch.script.NativeScriptTests",
     "children": []
    },
    {
     "id": "ID#testFineGrainedSettingsDontAffectNativeScripts(org.elasticsearch.script.NativeScriptTests)",
     "displayName": "testFineGrainedSettingsDontAffectNativeScripts(org.elasticsearch.script.NativeScriptTests)",
     "methodName": "testFineGrainedSettingsDontAffectNativeScripts",
     "className": "org.elasticsearch.script.NativeScriptTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047337297
 }
]

[
 "TEST_STARTED",
 "ID#testNativeScript(org.elasticsearch.script.NativeScriptTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNativeScript(org.elasticsearch.script.NativeScriptTests)",
  "startTimestamp": 1474047337321,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testFineGrainedSettingsDontAffectNativeScripts(org.elasticsearch.script.NativeScriptTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFineGrainedSettingsDontAffectNativeScripts(org.elasticsearch.script.NativeScriptTests)",
  "startTimestamp": 1474047337331,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.script.NativeScriptTests",
  "startTimestamp": 1474047337297,
  "executionTime": 47
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.script.ScriptContextRegistryTests",
   "displayName": "org.elasticsearch.script.ScriptContextRegistryTests",
   "methodName": null,
   "className": "org.elasticsearch.script.ScriptContextRegistryTests",
   "children": [
    {
     "id": "ID#testDuplicatedPluginScriptContexts(org.elasticsearch.script.ScriptContextRegistryTests)",
     "displayName": "testDuplicatedPluginScriptContexts(org.elasticsearch.script.ScriptContextRegistryTests)",
     "methodName": "testDuplicatedPluginScriptContexts",
     "className": "org.elasticsearch.script.ScriptContextRegistryTests",
     "children": []
    },
    {
     "id": "ID#testValidateCustomScriptContextsEmptyPluginName(org.elasticsearch.script.ScriptContextRegistryTests)",
     "displayName": "testValidateCustomScriptContextsEmptyPluginName(org.elasticsearch.script.ScriptContextRegistryTests)",
     "methodName": "testValidateCustomScriptContextsEmptyPluginName",
     "className": "org.elasticsearch.script.ScriptContextRegistryTests",
     "children": []
    },
    {
     "id": "ID#testNonDuplicatedPluginScriptContexts(org.elasticsearch.script.ScriptContextRegistryTests)",
     "displayName": "testNonDuplicatedPluginScriptContexts(org.elasticsearch.script.ScriptContextRegistryTests)",
     "methodName": "testNonDuplicatedPluginScriptContexts",
     "className": "org.elasticsearch.script.ScriptContextRegistryTests",
     "children": []
    },
    {
     "id": "ID#testValidateCustomScriptContextsPluginName(org.elasticsearch.script.ScriptContextRegistryTests)",
     "displayName": "testValidateCustomScriptContextsPluginName(org.elasticsearch.script.ScriptContextRegistryTests)",
     "methodName": "testValidateCustomScriptContextsPluginName",
     "className": "org.elasticsearch.script.ScriptContextRegistryTests",
     "children": []
    },
    {
     "id": "ID#testValidateCustomScriptContextsEmptyOperation(org.elasticsearch.script.ScriptContextRegistryTests)",
     "displayName": "testValidateCustomScriptContextsEmptyOperation(org.elasticsearch.script.ScriptContextRegistryTests)",
     "methodName": "testValidateCustomScriptContextsEmptyOperation",
     "className": "org.elasticsearch.script.ScriptContextRegistryTests",
     "children": []
    },
    {
     "id": "ID#testValidateCustomScriptContextsOperation(org.elasticsearch.script.ScriptContextRegistryTests)",
     "displayName": "testValidateCustomScriptContextsOperation(org.elasticsearch.script.ScriptContextRegistryTests)",
     "methodName": "testValidateCustomScriptContextsOperation",
     "className": "org.elasticsearch.script.ScriptContextRegistryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047337571
 }
]

[
 "TEST_STARTED",
 "ID#testDuplicatedPluginScriptContexts(org.elasticsearch.script.ScriptContextRegistryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuplicatedPluginScriptContexts(org.elasticsearch.script.ScriptContextRegistryTests)",
  "startTimestamp": 1474047337585,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValidateCustomScriptContextsEmptyPluginName(org.elasticsearch.script.ScriptContextRegistryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidateCustomScriptContextsEmptyPluginName(org.elasticsearch.script.ScriptContextRegistryTests)",
  "startTimestamp": 1474047337587,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testNonDuplicatedPluginScriptContexts(org.elasticsearch.script.ScriptContextRegistryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNonDuplicatedPluginScriptContexts(org.elasticsearch.script.ScriptContextRegistryTests)",
  "startTimestamp": 1474047337589,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testValidateCustomScriptContextsPluginName(org.elasticsearch.script.ScriptContextRegistryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidateCustomScriptContextsPluginName(org.elasticsearch.script.ScriptContextRegistryTests)",
  "startTimestamp": 1474047337590,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValidateCustomScriptContextsEmptyOperation(org.elasticsearch.script.ScriptContextRegistryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidateCustomScriptContextsEmptyOperation(org.elasticsearch.script.ScriptContextRegistryTests)",
  "startTimestamp": 1474047337592,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValidateCustomScriptContextsOperation(org.elasticsearch.script.ScriptContextRegistryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidateCustomScriptContextsOperation(org.elasticsearch.script.ScriptContextRegistryTests)",
  "startTimestamp": 1474047337594,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.script.ScriptContextRegistryTests",
  "startTimestamp": 1474047337571,
  "executionTime": 26
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.script.ScriptServiceTests",
   "displayName": "org.elasticsearch.script.ScriptServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.script.ScriptServiceTests",
   "children": [
    {
     "id": "ID#testGetStoredScript(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testGetStoredScript(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testGetStoredScript",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testValidateScriptSize(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testValidateScriptSize(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testValidateScriptSize",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testCompileCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testCompileCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testCompileCountedInCompilationStats",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testMultipleCompilationsCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testMultipleCompilationsCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testMultipleCompilationsCountedInCompilationStats",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testNotSupportedDisableDynamicSetting(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testNotSupportedDisableDynamicSetting(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testNotSupportedDisableDynamicSetting",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testFileScriptCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testFileScriptCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testFileScriptCountedInCompilationStats",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testDefaultLanguage(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testDefaultLanguage(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testDefaultLanguage",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testExecutableCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testExecutableCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testExecutableCountedInCompilationStats",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testCacheEvictionCountedInCacheEvictionsStats(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testCacheEvictionCountedInCacheEvictionsStats(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testCacheEvictionCountedInCacheEvictionsStats",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testCompilationStatsOnCacheHit(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testCompilationStatsOnCacheHit(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testCompilationStatsOnCacheHit",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testDeleteScript(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testDeleteScript(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testDeleteScript",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testDefaultBehaviourFineGrainedSettings(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testDefaultBehaviourFineGrainedSettings(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testDefaultBehaviourFineGrainedSettings",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testStoreScript(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testStoreScript(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testStoreScript",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testCompileNonRegisteredContext(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testCompileNonRegisteredContext(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testCompileNonRegisteredContext",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testIndexedScriptCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testIndexedScriptCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testIndexedScriptCountedInCompilationStats",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testInlineScriptCompiledOnceCache(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testInlineScriptCompiledOnceCache(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testInlineScriptCompiledOnceCache",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testFineGrainedSettings(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testFineGrainedSettings(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testFineGrainedSettings",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testSearchCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testSearchCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testSearchCountedInCompilationStats",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testCompilationCircuitBreaking(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testCompilationCircuitBreaking(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testCompilationCircuitBreaking",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testScriptsWithoutExtensions(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testScriptsWithoutExtensions(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testScriptsWithoutExtensions",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    },
    {
     "id": "ID#testScriptCompiledOnceHiddenFileDetected(org.elasticsearch.script.ScriptServiceTests)",
     "displayName": "testScriptCompiledOnceHiddenFileDetected(org.elasticsearch.script.ScriptServiceTests)",
     "methodName": "testScriptCompiledOnceHiddenFileDetected",
     "className": "org.elasticsearch.script.ScriptServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047337844
 }
]

[
 "TEST_STARTED",
 "ID#testGetStoredScript(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:37,866][INFO ][org.elasticsearch.script ] [testNativeScript] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetStoredScript(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474047337861,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testValidateScriptSize(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:37,886][INFO ][org.elasticsearch.script ] [testNativeScript] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidateScriptSize(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474047337880,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testCompileCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:37,903][INFO ][org.elasticsearch.script ] [testNativeScript] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompileCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474047337895,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleCompilationsCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:37,912][INFO ][org.elasticsearch.script ] [testNativeScript] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleCompilationsCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474047337906,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testNotSupportedDisableDynamicSetting(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:37,933][INFO ][org.elasticsearch.script ] [testNativeScript] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotSupportedDisableDynamicSetting(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474047337927,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testFileScriptCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:37,942][INFO ][org.elasticsearch.script ] [testNativeScript] --> setup script service%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:37,947][INFO ][org.elasticsearch.script ] [testNativeScript] compiling script file [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J2\\temp\\org.elasticsearch.script.ScriptServiceTests_229C635BFFC33CB2-001\\tempDir-011\\scripts\\file_script.test]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFileScriptCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474047337936,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultLanguage(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:37,955][INFO ][org.elasticsearch.script ] [testNativeScript] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultLanguage(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474047337948,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testExecutableCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:37,965][INFO ][org.elasticsearch.script ] [testNativeScript] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExecutableCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474047337958,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testCacheEvictionCountedInCacheEvictionsStats(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:37,974][INFO ][org.elasticsearch.script ] [testNativeScript] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCacheEvictionCountedInCacheEvictionsStats(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474047337967,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testCompilationStatsOnCacheHit(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:37,988][INFO ][org.elasticsearch.script ] [testNativeScript] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompilationStatsOnCacheHit(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474047337977,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testDeleteScript(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:37,999][INFO ][org.elasticsearch.script ] [testNativeScript] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeleteScript(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474047337991,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultBehaviourFineGrainedSettings(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:38,015][INFO ][org.elasticsearch.script ] [testNativeScript] --> setup script service%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:38,026][INFO ][org.elasticsearch.script ] [testNativeScript] compiling script file [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J2\\temp\\org.elasticsearch.script.ScriptServiceTests_229C635BFFC33CB2-001\\tempDir-023\\scripts\\file_script.dtest]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultBehaviourFineGrainedSettings(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474047338005,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testStoreScript(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:38,040][INFO ][org.elasticsearch.script ] [testNativeScript] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStoreScript(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474047338031,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testCompileNonRegisteredContext(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:38,052][INFO ][org.elasticsearch.script ] [testNativeScript] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompileNonRegisteredContext(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474047338042,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testIndexedScriptCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:38,066][INFO ][org.elasticsearch.script ] [testNativeScript] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexedScriptCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474047338055,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testInlineScriptCompiledOnceCache(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:38,082][INFO ][org.elasticsearch.script ] [testNativeScript] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInlineScriptCompiledOnceCache(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474047338070,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testFineGrainedSettings(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:38,094][INFO ][org.elasticsearch.script ] [testNativeScript] --> setup script service%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:38,110][INFO ][org.elasticsearch.script ] [testNativeScript] compiling script file [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J2\\temp\\org.elasticsearch.script.ScriptServiceTests_229C635BFFC33CB2-001\\tempDir-033\\scripts\\file_script.dtest]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFineGrainedSettings(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474047338084,
  "executionTime": 43
 }
]

[
 "TEST_STARTED",
 "ID#testSearchCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:38,150][INFO ][org.elasticsearch.script ] [testNativeScript] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearchCountedInCompilationStats(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474047338127,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testCompilationCircuitBreaking(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:38,175][INFO ][org.elasticsearch.script ] [testNativeScript] --> setup script service%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompilationCircuitBreaking(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474047338153,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testScriptsWithoutExtensions(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:38,244][INFO ][org.elasticsearch.script ] [testNativeScript] --> setup script service%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:38,258][INFO ][org.elasticsearch.script ] [testNativeScript] compiling script file [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J2\\temp\\org.elasticsearch.script.ScriptServiceTests_229C635BFFC33CB2-001\\tempDir-039\\scripts\\test_script.test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:38,260][INFO ][org.elasticsearch.script ] [testNativeScript] removing script file [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J2\\temp\\org.elasticsearch.script.ScriptServiceTests_229C635BFFC33CB2-001\\tempDir-039\\scripts\\test_script.test]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScriptsWithoutExtensions(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474047338181,
  "executionTime": 79
 }
]

[
 "TEST_STARTED",
 "ID#testScriptCompiledOnceHiddenFileDetected(org.elasticsearch.script.ScriptServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:38,273][INFO ][org.elasticsearch.script ] [testNativeScript] --> setup script service%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:38,288][INFO ][org.elasticsearch.script ] [testNativeScript] compiling script file [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J2\\temp\\org.elasticsearch.script.ScriptServiceTests_229C635BFFC33CB2-001\\tempDir-041\\scripts\\file_script.test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T14:35:38,289][INFO ][org.elasticsearch.script ] [testNativeScript] removing script file [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J2\\temp\\org.elasticsearch.script.ScriptServiceTests_229C635BFFC33CB2-001\\tempDir-041\\scripts\\file_script.test]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScriptCompiledOnceHiddenFileDetected(org.elasticsearch.script.ScriptServiceTests)",
  "startTimestamp": 1474047338260,
  "executionTime": 30
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.script.ScriptServiceTests",
  "startTimestamp": 1474047337844,
  "executionTime": 588
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.SearchServiceTests",
   "displayName": "org.elasticsearch.search.SearchServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.search.SearchServiceTests",
   "children": [
    {
     "id": "ID#testClearOnClose(org.elasticsearch.search.SearchServiceTests)",
     "displayName": "testClearOnClose(org.elasticsearch.search.SearchServiceTests)",
     "methodName": "testClearOnClose",
     "className": "org.elasticsearch.search.SearchServiceTests",
     "children": []
    },
    {
     "id": "ID#testClearIndexDelete(org.elasticsearch.search.SearchServiceTests)",
     "displayName": "testClearIndexDelete(org.elasticsearch.search.SearchServiceTests)",
     "methodName": "testClearIndexDelete",
     "className": "org.elasticsearch.search.SearchServiceTests",
     "children": []
    },
    {
     "id": "ID#testSearchWhileIndexDeleted(org.elasticsearch.search.SearchServiceTests)",
     "displayName": "testSearchWhileIndexDeleted(org.elasticsearch.search.SearchServiceTests)",
     "methodName": "testSearchWhileIndexDeleted",
     "className": "org.elasticsearch.search.SearchServiceTests",
     "children": []
    },
    {
     "id": "ID#testCloseSearchContextOnRewriteException(org.elasticsearch.search.SearchServiceTests)",
     "displayName": "testCloseSearchContextOnRewriteException(org.elasticsearch.search.SearchServiceTests)",
     "methodName": "testCloseSearchContextOnRewriteException",
     "className": "org.elasticsearch.search.SearchServiceTests",
     "children": []
    },
    {
     "id": "ID#testClearOnStop(org.elasticsearch.search.SearchServiceTests)",
     "displayName": "testClearOnStop(org.elasticsearch.search.SearchServiceTests)",
     "methodName": "testClearOnStop",
     "className": "org.elasticsearch.search.SearchServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474047338672
 }
]

[
 "TEST_STARTED",
 "ID#testClearOnClose(org.elasticsearch.search.SearchServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:38,701][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:38,727][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:38,727][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:38,730][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:38,766][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:38,766][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.search.SearchServiceTests$FailOnRewriteQueryPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:38,927][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:38,928][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:38,928][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[110]}, bound_addresses {local[110]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:38,968][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{j_2AD1FIRwG4AF9yo5TTsg}{5yB6lV__QPGgTPY0jh6FPg}{local}{local[110]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:38,969][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:39,049][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:39,066][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:39,120][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:39,139][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index/1CFFWiaXQvuNKtbYO2SqUw] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:39,298][INFO ][org.elasticsearch.search ] [node_s_0] [SearchServiceTests#testClearOnClose]: cleaning up after test%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:39,333][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:39,333][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:39,334][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:39,336][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:39,342][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:39,363][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:39,363][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:39,366][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:39,369][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:39,369][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.search.SearchServiceTests$FailOnRewriteQueryPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:39,511][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:39,511][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:39,512][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[111]}, bound_addresses {local[111]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:39,512][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{rz65GF2ITbSXL0ZKCm90rQ}{GybVNf1hQI62HYR_6tSMLA}{local}{local[111]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:39,513][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:39,524][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClearOnClose(org.elasticsearch.search.SearchServiceTests)",
  "startTimestamp": 1474047338691,
  "executionTime": 856
 }
]

[
 "TEST_STARTED",
 "ID#testClearIndexDelete(org.elasticsearch.search.SearchServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:39,553][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:39,622][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:39,651][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index/KW4Uz-q_RGGqZLj2gsh-GA] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:39,856][INFO ][org.elasticsearch.search ] [node_s_0] [SearchServiceTests#testClearIndexDelete]: cleaning up after test%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:39,857][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:39,857][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:39,857][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:39,859][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:39,867][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:39,901][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:39,901][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:39,905][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:39,917][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:39,917][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.search.SearchServiceTests$FailOnRewriteQueryPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:40,089][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:40,089][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:40,090][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[112]}, bound_addresses {local[112]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:40,093][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{7HZI9rKoQquh_Sux1fEOJA}{xbQEFspcTnKm2-vEogW_YA}{local}{local[112]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:40,093][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:40,109][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClearIndexDelete(org.elasticsearch.search.SearchServiceTests)",
  "startTimestamp": 1474047339547,
  "executionTime": 586
 }
]

[
 "TEST_STARTED",
 "ID#testSearchWhileIndexDeleted(org.elasticsearch.search.SearchServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:40,139][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:40,226][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:40,260][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index/SUvV-vwuQ9-oMPrINP4ZkQ] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:55,726][INFO ][org.elasticsearch.search ] [node_s_0] [SearchServiceTests#testSearchWhileIndexDeleted]: cleaning up after test%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:55,812][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:55,813][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:55,813][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:55,814][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:55,826][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:55,844][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:55,844][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:55,847][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:55,850][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:55,850][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.search.SearchServiceTests$FailOnRewriteQueryPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:55,944][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:55,944][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:55,946][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[113]}, bound_addresses {local[113]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:55,950][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{N6FTvp3pQIyQ0hoJ1PEEmg}{R1T6O7bVSoaNPVZkQSiu5A}{local}{local[113]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:55,950][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:55,965][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearchWhileIndexDeleted(org.elasticsearch.search.SearchServiceTests)",
  "startTimestamp": 1474047340133,
  "executionTime": 15844
 }
]

[
 "TEST_STARTED",
 "ID#testCloseSearchContextOnRewriteException(org.elasticsearch.search.SearchServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:55,986][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:56,027][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:56,040][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index/liywaNhJRmGBeXPAfiOnLw] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:56,158][INFO ][org.elasticsearch.search ] [node_s_0] [SearchServiceTests#testCloseSearchContextOnRewriteException]: cleaning up after test%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:56,187][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:56,188][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:56,188][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:56,189][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:56,197][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:56,217][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:56,217][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:56,221][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:56,223][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:56,223][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.search.SearchServiceTests$FailOnRewriteQueryPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:56,318][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:56,318][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:56,319][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[114]}, bound_addresses {local[114]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:56,319][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{C81ifkzRSaa-kutS_L4C2A}{XJrNKh_tQmC7EGYnwEsk-A}{local}{local[114]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:56,320][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:56,332][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCloseSearchContextOnRewriteException(org.elasticsearch.search.SearchServiceTests)",
  "startTimestamp": 1474047355980,
  "executionTime": 365
 }
]

[
 "TEST_STARTED",
 "ID#testClearOnStop(org.elasticsearch.search.SearchServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:56,351][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:56,426][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:56,440][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index/9Bkfl-cGSlaqYSnNyWZE0Q] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:56,558][INFO ][org.elasticsearch.search ] [node_s_0] [SearchServiceTests#testClearOnStop]: cleaning up after test%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:56,589][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:56,589][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:56,590][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:56,591][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:56,601][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:56,625][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [705.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:56,625][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:56,629][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[1128], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:56,633][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:56,633][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.search.SearchServiceTests$FailOnRewriteQueryPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:56,734][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:56,734][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:56,734][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[115]}, bound_addresses {local[115]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:56,735][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{U6-CdTOpTfqjSkpz9MCGug}{NP5KKMDvS5K0L1oN4R1dhQ}{local}{local[115]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:56,736][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:56,747][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClearOnStop(org.elasticsearch.search.SearchServiceTests)",
  "startTimestamp": 1474047356345,
  "executionTime": 416
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:56,761][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:56,762][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:56,762][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-16T19:35:56,763][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.SearchServiceTests",
  "startTimestamp": 1474047338672,
  "executionTime": 18131
 }
]

[
 "IDLE",
 {}
]

[
 "QUIT",
 {}
]

