[
 "BOOTSTRAP",
 {
  "defaultCharset": "windows-1252",
  "pidString": "564@DESKTOP-HP7QPF3",
  "systemProperties": {
   "awt.toolkit": "sun.awt.windows.WToolkit",
   "file.encoding": "Cp1252",
   "file.encoding.pkg": "sun.io",
   "file.separator": "\\",
   "java.awt.graphicsenv": "sun.awt.Win32GraphicsEnvironment",
   "java.awt.headless": "true",
   "java.awt.printerjob": "sun.awt.windows.WPrinterJob",
   "java.class.path": "C:\\Users\\kmala\\workspace\\Team3\\core\\build\\classes\\test;C:\\Users\\kmala\\workspace\\Team3\\core\\build\\resources\\test;C:\\Users\\kmala\\workspace\\Team3\\core\\build\\classes\\main;C:\\Users\\kmala\\workspace\\Team3\\core\\build\\resources\\main;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-core\\6.2.0\\849ee62525a294416802be2cacc66c80352f6f13\\lucene-core-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-analyzers-common\\6.2.0\\d254d52dd394b5079129f3d5f3bf4f2d44a5936e\\lucene-analyzers-common-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-backward-codecs\\6.2.0\\b625bb21456b3c0d1e5e431bced125cb060c1abd\\lucene-backward-codecs-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-grouping\\6.2.0\\9527fedfd5acc624b2bb3f862bd99fb8f470b053\\lucene-grouping-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-highlighter\\6.2.0\\7ca342372a3f45e32bbd21cecaa757e38eccb8a5\\lucene-highlighter-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-join\\6.2.0\\da0b8de98511abd4fe9c7d48a353d17854c5ed46\\lucene-join-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-memory\\6.2.0\\bc9e075b1ee051c8e5246c237c38d8e71dab8a66\\lucene-memory-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-misc\\6.2.0\\94ddde6312566a4da4a50a88e453b6c82c759b41\\lucene-misc-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-queries\\6.2.0\\dce47238f78e3e97d91dc6fefa9f46f07866bc2b\\lucene-queries-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-queryparser\\6.2.0\\17ef728ac15e668bfa1105321611548424637645\\lucene-queryparser-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-sandbox\\6.2.0\\520183f7b9aba77a26e224760c420a3844b0631a\\lucene-sandbox-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-spatial\\6.2.0\\8dba929b66927b936fbc76103b109ad6c824daee\\lucene-spatial-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-spatial-extras\\6.2.0\\3b5a6ef5cd90c0218a72e9e2f7e60104be2447da\\lucene-spatial-extras-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-spatial3d\\6.2.0\\fcdb0567725722c5145149d1502848b6a96ec18d\\lucene-spatial3d-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-suggest\\6.2.0\\3d9d526c51f483d27f425c75d7e56bc0849242d6\\lucene-suggest-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.elasticsearch\\securesm\\1.1\\1e423447d020041534be94c0f31a49fbdc1f2950\\securesm-1.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\net.sf.jopt-simple\\jopt-simple\\5.0.2\\98cafc6081d5632b61be2c9e60650b64ddbc637c\\jopt-simple-5.0.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.carrotsearch\\hppc\\0.7.1\\8b5057f74ea378c0150a1860874a3ebdcb713767\\hppc-0.7.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\joda-time\\joda-time\\2.9.4\\1c295b462f16702ebe720bbb08f62e1ba80da41b\\joda-time-2.9.4.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.joda\\joda-convert\\1.2\\35ec554f0cd00c956cc69051514d9488b1374dec\\joda-convert-1.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.yaml\\snakeyaml\\1.15\\3b132bea69e8ee099f416044970997bde80f4ea6\\snakeyaml-1.15.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.8.1\\fd13b1c033741d48291315c6370f7d475a42dccf\\jackson-core-2.8.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.dataformat\\jackson-dataformat-smile\\2.8.1\\5b73867bc12224946fc67fc8d49d9f5e698d7f\\jackson-dataformat-smile-2.8.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.dataformat\\jackson-dataformat-yaml\\2.8.1\\eb63166c723b0b4b9fb5298fca232a2f6612ec34\\jackson-dataformat-yaml-2.8.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.dataformat\\jackson-dataformat-cbor\\2.8.1\\3a6fb7e75c9972559a78cf5cfc5a48a41a13ea40\\jackson-dataformat-cbor-2.8.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.tdunning\\t-digest\\3.0\\84ccf145ac2215e6bfa63baa3101c0af41017cfc\\t-digest-3.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.hdrhistogram\\HdrHistogram\\2.1.6\\7495feb7f71ee124bd2a7e7d83590e296d71d80e\\HdrHistogram-2.1.6.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.locationtech.spatial4j\\spatial4j\\0.6\\21b15310bddcfd8c72611c180f20cf23279809a3\\spatial4j-0.6.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.vividsolutions\\jts\\1.13\\3ccfb9b60f04d71add996a666ceb8902904fd805\\jts-1.13.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.logging.log4j\\log4j-api\\2.6.2\\bd1b74a5d170686362091c7cf596bbc3adf5c09b\\log4j-api-2.6.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.logging.log4j\\log4j-core\\2.6.2\\a91369f655eb1639c6aece5c5eb5108db18306\\log4j-core-2.6.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.logging.log4j\\log4j-1.2-api\\2.6.2\\3b4c5a8b734b6a29b2f03380535a48da6284b210\\log4j-1.2-api-2.6.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\net.java.dev.jna\\jna\\4.2.2\\5012450aee579c3118ff09461d5ce210e0cdc2a9\\jna-4.2.2.jar;C:\\Users\\kmala\\workspace\\Team3\\test\\framework\\build\\distributions\\framework-5.0.0-alpha6-SNAPSHOT.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.carrotsearch.randomizedtesting\\randomizedtesting-runner\\2.3.2\\307965917fe8a22b7ee72deba39ef4b8e6ebc069\\randomizedtesting-runner-2.3.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\junit\\junit\\4.11\\4e031bb61df09069aeb2bffb4019e7a5034a4ee0\\junit-4.11.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.hamcrest\\hamcrest-all\\1.3\\63a21ebc981131004ad02e0434e799fd7f3a8d5a\\hamcrest-all-1.3.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-test-framework\\6.2.0\\f5026be3983acfb40d4092dbfbc015ec6e6addab\\lucene-test-framework-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-codecs\\6.2.0\\99f887266b0ad9f2c286b3976c5bc48c8cd36624\\lucene-codecs-6.2.0.jar;C:\\Users\\kmala\\workspace\\Team3\\client\\rest\\build\\distributions\\rest-5.0.0-alpha6-SNAPSHOT.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.httpcomponents\\httpclient\\4.5.2\\733db77aa8d9b2d68015189df76ab06304406e50\\httpclient-4.5.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.httpcomponents\\httpcore\\4.4.5\\e7501a1b34325abb00d17dde96150604a0658b54\\httpcore-4.4.5.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\commons-logging\\commons-logging\\1.1.3\\f6f66e966c70a83ffbdb6f17a0919eaf7c8aca7f\\commons-logging-1.1.3.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.10\\4b95f4897fa13f2cd904aee711aeafc0c5295cd8\\commons-codec-1.10.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.elasticsearch\\securemock\\1.2\\98201d4ad5ac93f6b415ae9172d52b5e7cda490e\\securemock-1.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.httpcomponents\\httpasyncclient\\4.1.2\\95aa3e6fb520191a0970a73cf09f62948ee614be\\httpasyncclient-4.1.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.httpcomponents\\httpcore-nio\\4.4.5\\f4be009e7505f6ceddf21e7960c759f413f15056\\httpcore-nio-4.4.5.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.carrotsearch.randomizedtesting\\junit4-ant\\2.3.2\\dc8f03f6111974092491f35b8269eb0fc57f52f7\\junit4-ant-2.3.2.jar",
   "java.class.version": "52.0",
   "java.endorsed.dirs": "C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\endorsed",
   "java.ext.dirs": "C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\ext;C:\\Windows\\Sun\\Java\\lib\\ext",
   "java.home": "C:\\Program Files\\Java\\jdk1.8.0_102\\jre",
   "java.io.tmpdir": "./temp",
   "java.library.path": "C:\\Program Files\\Java\\jdk1.8.0_102\\bin;C:\\Windows\\Sun\\Java\\bin;C:\\Windows\\system32;C:\\Windows;C:\\ProgramData\\Oracle\\Java\\javapath;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\Skype\\Phone\\;C:\\Tools\\curl-7.50.1\\bin;C:\\Program Files\\Git\\cmd;C:\\Tools\\gradle-2.13\\bin;C:\\Tools\\apache-maven-3.3.9\\bin;C:\\Program Files\\doxygen\\bin;C:\\Tools\\sonar-scanner-2.7\\bin;C:\\Windows\\system32\\config\\systemprofile\\.dnx\\bin;C:\\Program Files\\Microsoft DNX\\Dnvm\\;C:\\Program Files\\Microsoft SQL Server\\120\\Tools\\Binn\\;C:\\Users\\kmala\\AppData\\Local\\Microsoft\\WindowsApps;;.",
   "java.runtime.name": "Java(TM) SE Runtime Environment",
   "java.runtime.version": "1.8.0_102-b14",
   "java.specification.name": "Java Platform API Specification",
   "java.specification.vendor": "Oracle Corporation",
   "java.specification.version": "1.8",
   "java.vendor": "Oracle Corporation",
   "java.vendor.url": "http://java.oracle.com/",
   "java.vendor.url.bug": "http://bugreport.sun.com/bugreport/",
   "java.version": "1.8.0_102",
   "java.vm.info": "mixed mode",
   "java.vm.name": "Java HotSpot(TM) 64-Bit Server VM",
   "java.vm.specification.name": "Java Virtual Machine Specification",
   "java.vm.specification.vendor": "Oracle Corporation",
   "java.vm.specification.version": "1.8",
   "java.vm.vendor": "Oracle Corporation",
   "java.vm.version": "25.102-b14",
   "jna.nosys": "true",
   "junit4.childvm.count": "3",
   "junit4.childvm.cwd": "C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J2",
   "junit4.childvm.id": "2",
   "junit4.memory.total": "514850816",
   "junit4.pidString": "564@DESKTOP-HP7QPF3",
   "junit4.processors": "4",
   "line.separator": "\r\n",
   "os.arch": "amd64",
   "os.name": "Windows 10",
   "os.version": "10.0",
   "path.separator": ";",
   "sun.arch.data.model": "64",
   "sun.boot.class.path": "C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\resources.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\rt.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\sunrsasign.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\jsse.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\jce.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\charsets.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\jfr.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\classes",
   "sun.boot.library.path": "C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\bin",
   "sun.cpu.endian": "little",
   "sun.cpu.isalist": "amd64",
   "sun.desktop": "windows",
   "sun.io.unicode.encoding": "UnicodeLittle",
   "sun.java.command": "com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe -eventsfile C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\temp\\junit4-J2-20160918_131412_266.events @C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\temp\\junit4-J2-20160918_131412_266.suites -stdin",
   "sun.java.launcher": "SUN_STANDARD",
   "sun.jnu.encoding": "Cp1252",
   "sun.management.compiler": "HotSpot 64-Bit Tiered Compilers",
   "sun.os.patch.level": "",
   "tests.artifact": "core",
   "tests.gradle": "true",
   "tests.ifNoTests": "fail",
   "tests.logger.level": "WARN",
   "tests.prefix": "tests",
   "tests.security.manager": "true",
   "tests.seed": "DB64F96F238DCA2A",
   "tests.task": ":core:test",
   "user.country": "US",
   "user.dir": "C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J2",
   "user.home": "C:\\Users\\kmala",
   "user.language": "en",
   "user.name": "kmala",
   "user.script": "",
   "user.timezone": "",
   "user.variant": ""
  }
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.network.NetworkAddressTests",
   "displayName": "org.elasticsearch.common.network.NetworkAddressTests",
   "methodName": null,
   "className": "org.elasticsearch.common.network.NetworkAddressTests",
   "children": [
    {
     "id": "ID#testNoScopeID(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testNoScopeID(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testNoScopeID",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    },
    {
     "id": "ID#testFormatV6(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testFormatV6(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testFormatV6",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    },
    {
     "id": "ID#testFormatPortV6(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testFormatPortV6(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testFormatPortV6",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    },
    {
     "id": "ID#testFormatV4(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testFormatV4(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testFormatV4",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    },
    {
     "id": "ID#testFormatPortV4(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testFormatPortV4(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testFormatPortV4",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    },
    {
     "id": "ID#testRoundTripV6(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testRoundTripV6(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testRoundTripV6",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    },
    {
     "id": "ID#testRoundTripV4(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testRoundTripV4(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testRoundTripV4",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197254013
 }
]

[
 "TEST_STARTED",
 "ID#testNoScopeID(org.elasticsearch.common.network.NetworkAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoScopeID(org.elasticsearch.common.network.NetworkAddressTests)",
  "startTimestamp": 1474197260302,
  "executionTime": 659
 }
]

[
 "TEST_STARTED",
 "ID#testFormatV6(org.elasticsearch.common.network.NetworkAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFormatV6(org.elasticsearch.common.network.NetworkAddressTests)",
  "startTimestamp": 1474197260961,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testFormatPortV6(org.elasticsearch.common.network.NetworkAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFormatPortV6(org.elasticsearch.common.network.NetworkAddressTests)",
  "startTimestamp": 1474197260978,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFormatV4(org.elasticsearch.common.network.NetworkAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFormatV4(org.elasticsearch.common.network.NetworkAddressTests)",
  "startTimestamp": 1474197260983,
  "executionTime": 59
 }
]

[
 "TEST_STARTED",
 "ID#testFormatPortV4(org.elasticsearch.common.network.NetworkAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFormatPortV4(org.elasticsearch.common.network.NetworkAddressTests)",
  "startTimestamp": 1474197261042,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRoundTripV6(org.elasticsearch.common.network.NetworkAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoundTripV6(org.elasticsearch.common.network.NetworkAddressTests)",
  "startTimestamp": 1474197261046,
  "executionTime": 119
 }
]

[
 "TEST_STARTED",
 "ID#testRoundTripV4(org.elasticsearch.common.network.NetworkAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoundTripV4(org.elasticsearch.common.network.NetworkAddressTests)",
  "startTimestamp": 1474197261167,
  "executionTime": 93
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.network.NetworkAddressTests",
  "startTimestamp": 1474197254013,
  "executionTime": 7351
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.IndicesQueryCacheTests",
   "displayName": "org.elasticsearch.indices.IndicesQueryCacheTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.IndicesQueryCacheTests",
   "children": [
    {
     "id": "ID#testStatsOnEviction(org.elasticsearch.indices.IndicesQueryCacheTests)",
     "displayName": "testStatsOnEviction(org.elasticsearch.indices.IndicesQueryCacheTests)",
     "methodName": "testStatsOnEviction",
     "className": "org.elasticsearch.indices.IndicesQueryCacheTests",
     "children": []
    },
    {
     "id": "ID#testBasics(org.elasticsearch.indices.IndicesQueryCacheTests)",
     "displayName": "testBasics(org.elasticsearch.indices.IndicesQueryCacheTests)",
     "methodName": "testBasics",
     "className": "org.elasticsearch.indices.IndicesQueryCacheTests",
     "children": []
    },
    {
     "id": "ID#testTwoShards(org.elasticsearch.indices.IndicesQueryCacheTests)",
     "displayName": "testTwoShards(org.elasticsearch.indices.IndicesQueryCacheTests)",
     "methodName": "testTwoShards",
     "className": "org.elasticsearch.indices.IndicesQueryCacheTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197261386
 }
]

[
 "TEST_STARTED",
 "ID#testStatsOnEviction(org.elasticsearch.indices.IndicesQueryCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStatsOnEviction(org.elasticsearch.indices.IndicesQueryCacheTests)",
  "startTimestamp": 1474197261706,
  "executionTime": 1574
 }
]

[
 "TEST_STARTED",
 "ID#testBasics(org.elasticsearch.indices.IndicesQueryCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasics(org.elasticsearch.indices.IndicesQueryCacheTests)",
  "startTimestamp": 1474197263280,
  "executionTime": 25
 }
]

[
 "TEST_STARTED",
 "ID#testTwoShards(org.elasticsearch.indices.IndicesQueryCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTwoShards(org.elasticsearch.indices.IndicesQueryCacheTests)",
  "startTimestamp": 1474197263305,
  "executionTime": 44
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.IndicesQueryCacheTests",
  "startTimestamp": 1474197261386,
  "executionTime": 1974
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.collect.IteratorsTests",
   "displayName": "org.elasticsearch.common.collect.IteratorsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.collect.IteratorsTests",
   "children": [
    {
     "id": "ID#testEmptyConcatenation(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testEmptyConcatenation(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testEmptyConcatenation",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    },
    {
     "id": "ID#testConcatentation(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testConcatentation(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testConcatentation",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    },
    {
     "id": "ID#testSingleton(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testSingleton(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testSingleton",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    },
    {
     "id": "ID#testEmptyBeforeSingleton(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testEmptyBeforeSingleton(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testEmptyBeforeSingleton",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    },
    {
     "id": "ID#testNullIterator(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testNullIterator(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testNullIterator",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    },
    {
     "id": "ID#testEmptyAfterSingleton(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testEmptyAfterSingleton(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testEmptyAfterSingleton",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    },
    {
     "id": "ID#testRandomIterators(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testRandomIterators(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testRandomIterators",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    },
    {
     "id": "ID#testRandomSingleton(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testRandomSingleton(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testRandomSingleton",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    },
    {
     "id": "ID#testNull(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testNull(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testNull",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    },
    {
     "id": "ID#testTwoEntries(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testTwoEntries(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testTwoEntries",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    },
    {
     "id": "ID#testMultipleEmptyConcatenation(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testMultipleEmptyConcatenation(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testMultipleEmptyConcatenation",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    },
    {
     "id": "ID#testNoConcatenation(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testNoConcatenation(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testNoConcatenation",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197263375
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyConcatenation(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyConcatenation(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1474197263426,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testConcatentation(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcatentation(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1474197263433,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSingleton(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleton(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1474197263436,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyBeforeSingleton(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyBeforeSingleton(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1474197263440,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNullIterator(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullIterator(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1474197263444,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyAfterSingleton(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyAfterSingleton(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1474197263449,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testRandomIterators(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomIterators(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1474197263457,
  "executionTime": 167
 }
]

[
 "TEST_STARTED",
 "ID#testRandomSingleton(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomSingleton(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1474197263625,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testNull(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNull(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1474197263638,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testTwoEntries(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTwoEntries(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1474197263643,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleEmptyConcatenation(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleEmptyConcatenation(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1474197263650,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testNoConcatenation(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoConcatenation(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1474197263667,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.collect.IteratorsTests",
  "startTimestamp": 1474197263375,
  "executionTime": 301
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.shard.IndexingOperationListenerTests",
   "displayName": "org.elasticsearch.index.shard.IndexingOperationListenerTests",
   "methodName": null,
   "className": "org.elasticsearch.index.shard.IndexingOperationListenerTests",
   "children": [
    {
     "id": "ID#testListenersAreExecuted(org.elasticsearch.index.shard.IndexingOperationListenerTests)",
     "displayName": "testListenersAreExecuted(org.elasticsearch.index.shard.IndexingOperationListenerTests)",
     "methodName": "testListenersAreExecuted",
     "className": "org.elasticsearch.index.shard.IndexingOperationListenerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197263687
 }
]

[
 "TEST_STARTED",
 "ID#testListenersAreExecuted(org.elasticsearch.index.shard.IndexingOperationListenerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListenersAreExecuted(org.elasticsearch.index.shard.IndexingOperationListenerTests)",
  "startTimestamp": 1474197263715,
  "executionTime": 38
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.shard.IndexingOperationListenerTests",
  "startTimestamp": 1474197263687,
  "executionTime": 82
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.RoutingFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.RoutingFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.RoutingFieldMapperTests",
   "children": [
    {
     "id": "ID#testRoutingMapper(org.elasticsearch.index.mapper.RoutingFieldMapperTests)",
     "displayName": "testRoutingMapper(org.elasticsearch.index.mapper.RoutingFieldMapperTests)",
     "methodName": "testRoutingMapper",
     "className": "org.elasticsearch.index.mapper.RoutingFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.RoutingFieldMapperTests)",
     "displayName": "testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.RoutingFieldMapperTests)",
     "methodName": "testIncludeInObjectNotAllowed",
     "className": "org.elasticsearch.index.mapper.RoutingFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197263823
 }
]

[
 "TEST_STARTED",
 "ID#testRoutingMapper(org.elasticsearch.index.mapper.RoutingFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:14:24,526][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:14:24,862][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:14:24,863][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:14:24,870][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[564], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:14:24,887][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:14:24,888][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:14:35,891][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:14:35,891][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:14:35,910][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[1]}, bound_addresses {local[1]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:14:35,980][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{FRTD4FbmQCWxvI4OKnXNeg}{hzMH-ue5SaOYg_wjgdx53A}{local}{local[1]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:14:35,998][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:14:36,125][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:14:36,512][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:14:37,236][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:14:37,708][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [RoutingFieldMapperTests#testRoutingMapper]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoutingMapper(org.elasticsearch.index.mapper.RoutingFieldMapperTests)",
  "startTimestamp": 1474197263872,
  "executionTime": 13912
 }
]

[
 "TEST_STARTED",
 "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.RoutingFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:14:37,796][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:14:37,868][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:14:37,884][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [RoutingFieldMapperTests#testIncludeInObjectNotAllowed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.RoutingFieldMapperTests)",
  "startTimestamp": 1474197277785,
  "executionTime": 153
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:14:37,939][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:14:37,943][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:14:37,944][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:14:37,960][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.RoutingFieldMapperTests",
  "startTimestamp": 1474197263823,
  "executionTime": 14174
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests",
   "children": [
    {
     "id": "ID#testTransportRoundTrip(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)",
     "displayName": "testTransportRoundTrip(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)",
     "methodName": "testTransportRoundTrip",
     "className": "org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests",
     "children": []
    },
    {
     "id": "ID#testParseAndValidate(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)",
     "displayName": "testParseAndValidate(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)",
     "methodName": "testParseAndValidate",
     "className": "org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests",
     "children": []
    },
    {
     "id": "ID#testXContentRoundTrip(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)",
     "displayName": "testXContentRoundTrip(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)",
     "methodName": "testXContentRoundTrip",
     "className": "org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197278009
 }
]

[
 "TEST_STARTED",
 "ID#testTransportRoundTrip(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTransportRoundTrip(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)",
  "startTimestamp": 1474197278039,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testParseAndValidate(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseAndValidate(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)",
  "startTimestamp": 1474197278066,
  "executionTime": 1987
 }
]

[
 "TEST_STARTED",
 "ID#testXContentRoundTrip(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testXContentRoundTrip(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)",
  "startTimestamp": 1474197280054,
  "executionTime": 58
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests",
  "startTimestamp": 1474197278009,
  "executionTime": 2107
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.DocWriteResponseTests",
   "displayName": "org.elasticsearch.action.DocWriteResponseTests",
   "methodName": null,
   "className": "org.elasticsearch.action.DocWriteResponseTests",
   "children": [
    {
     "id": "ID#testToXContentDoesntIncludeForcedRefreshUnlessForced(org.elasticsearch.action.DocWriteResponseTests)",
     "displayName": "testToXContentDoesntIncludeForcedRefreshUnlessForced(org.elasticsearch.action.DocWriteResponseTests)",
     "methodName": "testToXContentDoesntIncludeForcedRefreshUnlessForced",
     "className": "org.elasticsearch.action.DocWriteResponseTests",
     "children": []
    },
    {
     "id": "ID#testGetLocation(org.elasticsearch.action.DocWriteResponseTests)",
     "displayName": "testGetLocation(org.elasticsearch.action.DocWriteResponseTests)",
     "methodName": "testGetLocation",
     "className": "org.elasticsearch.action.DocWriteResponseTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197280145
 }
]

[
 "TEST_STARTED",
 "ID#testToXContentDoesntIncludeForcedRefreshUnlessForced(org.elasticsearch.action.DocWriteResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToXContentDoesntIncludeForcedRefreshUnlessForced(org.elasticsearch.action.DocWriteResponseTests)",
  "startTimestamp": 1474197280211,
  "executionTime": 52
 }
]

[
 "TEST_STARTED",
 "ID#testGetLocation(org.elasticsearch.action.DocWriteResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetLocation(org.elasticsearch.action.DocWriteResponseTests)",
  "startTimestamp": 1474197280263,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.DocWriteResponseTests",
  "startTimestamp": 1474197280145,
  "executionTime": 132
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197280304
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:14:40,571][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{JeGom8NfQwWsFzWeTW0sRQ}{local}{local[1]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:14:40,740][INFO ][org.elasticsearch.search.aggregations.pipeline] Content string: {%0A  \"QNDRwluEeQpPJBqAbN\" : {%0A    \"bucket_selector\" : {%0A      \"buckets_path\" : {%0A        \"HX\" : \"haQumtgdAMyOpqnnemvvweqtbaliwdQtjY\",%0A        \"FIkEIgfCXXXJ\" : \"JyUnnujOhuoUXDTh\",%0A        \"AhstixnhArUPdUbIv\" : \"QXuuqzRfeszEsReDPHS\",%0A        \"ytpJqjtd\" : \"gOZSRpYrsQEmcWnXKY\",%0A        \"HmhinoHAyyMmNGyhiC\" : \"IWGwAoaQN\",%0A        \"QpPM\" : \"oScCtaoxRQrQIddFjuEQZz\",%0A        \"SGUpRufwE\" : \"HHrVoQIUxSj\",%0A        \"M\" : \"eeWcsSGSLgarXw\",%0A        \"kFeI\" : \"wWZOQjpSZEFqIsINsXxwjTjSaPqfxJjbZ\",%0A        \"GSTYyROIxPYAJOnmm\" : \"qVBJUxJXWVcGuqxrLINAaAETuZGBM\"%0A      },%0A      \"script\" : {%0A        \"file\" : \"script\",%0A        \"params\" : {%0A          \"foo\" : \"bar\"%0A        }%0A      },%0A      \"gap_policy\" : \"skip\"%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:14:40,775][INFO ][org.elasticsearch.search.aggregations.pipeline] Content string: {%0A  \"QNDRwluEeQpPJBqAbN\" : {%0A    \"bucket_selector\" : {%0A      \"buckets_path\" : {%0A        \"HX\" : \"haQumtgdAMyOpqnnemvvweqtbaliwdQtjY\",%0A        \"FIkEIgfCXXXJ\" : \"JyUnnujOhuoUXDTh\",%0A        \"AhstixnhArUPdUbIv\" : \"QXuuqzRfeszEsReDPHS\",%0A        \"ytpJqjtd\" : \"gOZSRpYrsQEmcWnXKY\",%0A        \"HmhinoHAyyMmNGyhiC\" : \"IWGwAoaQN\",%0A        \"QpPM\" : \"oScCtaoxRQrQIddFjuEQZz\",%0A        \"SGUpRufwE\" : \"HHrVoQIUxSj\",%0A        \"M\" : \"eeWcsSGSLgarXw\",%0A        \"kFeI\" : \"wWZOQjpSZEFqIsINsXxwjTjSaPqfxJjbZ\",%0A        \"GSTYyROIxPYAJOnmm\" : \"qVBJUxJXWVcGuqxrLINAaAETuZGBM\"%0A      },%0A      \"script\" : {%0A        \"file\" : \"script\",%0A        \"params\" : {%0A          \"foo\" : \"bar\"%0A        }%0A      },%0A      \"gap_policy\" : \"skip\"%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)",
  "startTimestamp": 1474197280716,
  "executionTime": 64
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)",
  "startTimestamp": 1474197280781,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)",
  "startTimestamp": 1474197280789,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests",
  "startTimestamp": 1474197280304,
  "executionTime": 495
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
   "children": [
    {
     "id": "ID#testOptimizeBboxFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testOptimizeBboxFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testOptimizeBboxFails",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery7(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery7(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery7",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery11(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery11(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery11",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery5(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery5(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery5",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery10(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery10(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery10",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery12(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery12(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery12",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonIgnoreMalformedFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testFromJsonIgnoreMalformedFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testFromJsonIgnoreMalformedFails",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery2(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery2(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery2",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery3(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery3(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery3",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testIgnoreUnmapped(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testIgnoreUnmapped",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery1(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery1(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery1",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery6(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery6(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery6",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalValues(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testIllegalValues(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testIllegalValues",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery4(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery4(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery4",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParseFailsWithMultipleFields(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParseFailsWithMultipleFields",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery9(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery9(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery9",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery8(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery8(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery8",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromCoerceFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testFromCoerceFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testFromCoerceFails",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197280840
 }
]

[
 "TEST_STARTED",
 "ID#testOptimizeBboxFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:40,890][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{FveSII1dRvOEvDO160N-ow}{local}{local[2]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:40,901][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:40,902][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:41,018][WARN ][org.elasticsearch.deprecation.index.mapper]  [jMtQRjSwA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:41,023][WARN ][org.elasticsearch.deprecation.index.mapper]  [jMtQRjSwA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:41,023][WARN ][org.elasticsearch.deprecation.index.mapper]  [jMtQRjSwA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:41,158][WARN ][org.elasticsearch.deprecation.index.mapper]  [jMtQRjSwA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:41,159][WARN ][org.elasticsearch.deprecation.index.mapper]  [jMtQRjSwA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:41,159][WARN ][org.elasticsearch.deprecation.index.mapper]  [jMtQRjSwA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:41,185][WARN ][org.elasticsearch.deprecation.index.mapper]  [jMtQRjSwA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:41,185][WARN ][org.elasticsearch.deprecation.index.mapper]  [jMtQRjSwA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:41,185][WARN ][org.elasticsearch.deprecation.index.mapper]  [jMtQRjSwA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:41,188][WARN ][org.elasticsearch.deprecation.index.mapper]  [jMtQRjSwA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:41,189][WARN ][org.elasticsearch.deprecation.index.mapper]  [jMtQRjSwA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:41,189][WARN ][org.elasticsearch.deprecation.index.mapper]  [jMtQRjSwA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:41,195][WARN ][org.elasticsearch.deprecation.index.mapper]  [jMtQRjSwA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:41,195][WARN ][org.elasticsearch.deprecation.index.mapper]  [jMtQRjSwA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:41,195][WARN ][org.elasticsearch.deprecation.index.mapper]  [jMtQRjSwA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:41,205][WARN ][org.elasticsearch.deprecation.index.mapper]  [jMtQRjSwA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:41,206][WARN ][org.elasticsearch.deprecation.index.mapper]  [jMtQRjSwA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:41,206][WARN ][org.elasticsearch.deprecation.index.mapper]  [jMtQRjSwA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:41,210][WARN ][org.elasticsearch.deprecation.index.mapper]  [jMtQRjSwA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:41,210][WARN ][org.elasticsearch.deprecation.index.mapper]  [jMtQRjSwA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:41,210][WARN ][org.elasticsearch.deprecation.index.mapper]  [jMtQRjSwA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:41,232][WARN ][org.elasticsearch.deprecation.index.mapper]  [jMtQRjSwA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:41,232][WARN ][org.elasticsearch.deprecation.index.mapper]  [jMtQRjSwA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:41,232][WARN ][org.elasticsearch.deprecation.index.mapper]  [jMtQRjSwA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:41,245][WARN ][org.elasticsearch.deprecation.index.mapper]  [jMtQRjSwA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:41,245][WARN ][org.elasticsearch.deprecation.index.mapper]  [jMtQRjSwA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:41,245][WARN ][org.elasticsearch.deprecation.index.mapper]  [jMtQRjSwA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:41,254][WARN ][org.elasticsearch.deprecation.index.mapper]  [jMtQRjSwA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:41,254][WARN ][org.elasticsearch.deprecation.index.mapper]  [jMtQRjSwA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:41,255][WARN ][org.elasticsearch.deprecation.index.mapper]  [jMtQRjSwA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:41,262][WARN ][org.elasticsearch.deprecation.index.mapper]  [jMtQRjSwA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:41,262][WARN ][org.elasticsearch.deprecation.index.mapper]  [jMtQRjSwA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:41,262][WARN ][org.elasticsearch.deprecation.index.mapper]  [jMtQRjSwA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:41,272][WARN ][org.elasticsearch.deprecation.index.mapper]  [jMtQRjSwA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:41,272][WARN ][org.elasticsearch.deprecation.index.mapper]  [jMtQRjSwA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:41,272][WARN ][org.elasticsearch.deprecation.index.mapper]  [jMtQRjSwA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:41,303][WARN ][org.elasticsearch.deprecation.index.mapper]  [jMtQRjSwA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:41,303][WARN ][org.elasticsearch.deprecation.index.mapper]  [jMtQRjSwA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:41,303][WARN ][org.elasticsearch.deprecation.index.mapper]  [jMtQRjSwA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:41,313][WARN ][org.elasticsearch.deprecation.index.mapper]  [jMtQRjSwA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:41,313][WARN ][org.elasticsearch.deprecation.index.mapper]  [jMtQRjSwA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:41,313][WARN ][org.elasticsearch.deprecation.index.mapper]  [jMtQRjSwA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:41,323][WARN ][org.elasticsearch.deprecation.index.mapper]  [jMtQRjSwA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:41,323][WARN ][org.elasticsearch.deprecation.index.mapper]  [jMtQRjSwA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:41,323][WARN ][org.elasticsearch.deprecation.index.mapper]  [jMtQRjSwA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOptimizeBboxFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474197280865,
  "executionTime": 490
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery7(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery7(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474197281355,
  "executionTime": 252
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery11(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery11(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474197281607,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474197281614,
  "executionTime": 194
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474197281811,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery5(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery5(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474197281825,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474197281829,
  "executionTime": 415
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474197282244,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery10(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery10(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474197282250,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474197282254,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474197282261,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery12(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery12(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474197282265,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonIgnoreMalformedFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonIgnoreMalformedFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474197282269,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery2(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery2(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474197282273,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery3(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery3(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474197282277,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474197282280,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474197282292,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery1(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery1(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474197282314,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery6(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery6(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474197282318,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalValues(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalValues(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474197282324,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474197282333,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery4(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery4(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474197282339,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474197282359,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery9(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery9(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474197282363,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery8(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery8(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474197282376,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474197282380,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testFromCoerceFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromCoerceFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474197282387,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
  "startTimestamp": 1474197280840,
  "executionTime": 1576
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.nodes.TransportNodesActionTests",
   "displayName": "org.elasticsearch.action.support.nodes.TransportNodesActionTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.nodes.TransportNodesActionTests",
   "children": [
    {
     "id": "ID#testNodesSelectors(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
     "displayName": "testNodesSelectors(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
     "methodName": "testNodesSelectors",
     "className": "org.elasticsearch.action.support.nodes.TransportNodesActionTests",
     "children": []
    },
    {
     "id": "ID#testRequestIsSentToEachNode(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
     "displayName": "testRequestIsSentToEachNode(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
     "methodName": "testRequestIsSentToEachNode",
     "className": "org.elasticsearch.action.support.nodes.TransportNodesActionTests",
     "children": []
    },
    {
     "id": "ID#testNewResponse(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
     "displayName": "testNewResponse(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
     "methodName": "testNewResponse",
     "className": "org.elasticsearch.action.support.nodes.TransportNodesActionTests",
     "children": []
    },
    {
     "id": "ID#testCustomResolving(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
     "displayName": "testCustomResolving(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
     "methodName": "testCustomResolving",
     "className": "org.elasticsearch.action.support.nodes.TransportNodesActionTests",
     "children": []
    },
    {
     "id": "ID#testNewResponseNullArray(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
     "displayName": "testNewResponseNullArray(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
     "methodName": "testNewResponseNullArray",
     "className": "org.elasticsearch.action.support.nodes.TransportNodesActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197282453
 }
]

[
 "TEST_STARTED",
 "ID#testNodesSelectors(org.elasticsearch.action.support.nodes.TransportNodesActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:42,528][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{YVdE5uNfSZ6xNRrPCuqxMQ}{local}{local[3]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:42,547][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{node_1}{KhqJnA2JQXSYWuYufZY68A}{local}{local[5]}{custom=CMc}, previous {node}{YVdE5uNfSZ6xNRrPCuqxMQ}{local}{local[3]}}, removed {{node}{YVdE5uNfSZ6xNRrPCuqxMQ}{local}{local[3]},}, added {{node_1}{node_1}{KhqJnA2JQXSYWuYufZY68A}{local}{local[5]}{custom=CMc},{node_3}{node_3}{R7dS3LE3RNabg_uY0-pUUg}{local}{local[7]}{custom=match},{node_0}{node_0}{UslMC-B1Rf22lYw_LCmCBw}{local}{local[4]}{custom=Zcj},{node_4}{node_4}{R5QVRBANT7mzwRubtf68fQ}{local}{local[8]}{custom=match},{node_2}{node_2}{Xz_xDmpEQ3yBLI3h4SnsIA}{local}{local[6]}{custom=match},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNodesSelectors(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
  "startTimestamp": 1474197282495,
  "executionTime": 61
 }
]

[
 "TEST_STARTED",
 "ID#testRequestIsSentToEachNode(org.elasticsearch.action.support.nodes.TransportNodesActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:42,589][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{hwP-1A8EQtmdF4Fycm0ztQ}{local}{local[10]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:42,592][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_5}{node_5}{23yq8TnuQ4eiyY6nw1bvSg}{local}{local[16]}{custom=match}, previous {node}{hwP-1A8EQtmdF4Fycm0ztQ}{local}{local[10]}}, removed {{node}{hwP-1A8EQtmdF4Fycm0ztQ}{local}{local[10]},}, added {{node_1}{node_1}{jkuPGtUrSpOsCXucJmr81g}{local}{local[12]}{custom=match},{node_3}{node_3}{DC0xXPD0SZSG0WDGUZjj9w}{local}{local[14]}{custom=Jnu},{node_0}{node_0}{-aQN5MANSMCrE2oVvhIcRQ}{local}{local[11]}{custom=match},{node_5}{node_5}{23yq8TnuQ4eiyY6nw1bvSg}{local}{local[16]}{custom=match},{node_2}{node_2}{4M861en4R4q5aJXibFGywg}{local}{local[13]}{custom=match},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRequestIsSentToEachNode(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
  "startTimestamp": 1474197282556,
  "executionTime": 38
 }
]

[
 "TEST_STARTED",
 "ID#testNewResponse(org.elasticsearch.action.support.nodes.TransportNodesActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:42,640][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{JeD-jIPATP6IAtxJz4LM7w}{local}{local[17]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:42,647][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_2}{node_2}{xZRE1VJcSXCTW9EXyv8E2g}{local}{local[20]}{custom=match}, previous {node}{JeD-jIPATP6IAtxJz4LM7w}{local}{local[17]}}, removed {{node}{JeD-jIPATP6IAtxJz4LM7w}{local}{local[17]},}, added {{node_2}{node_2}{xZRE1VJcSXCTW9EXyv8E2g}{local}{local[20]}{custom=match},{node_0}{node_0}{bY_Y4KCXRiWv6ax6L0yI6A}{local}{local[18]}{custom=match},{node_4}{node_4}{-QkKlQCzRJ6QqihjsSxZGg}{local}{local[22]}{custom=match},{node_1}{node_1}{UR8-e1kfSiyLNcxFDw2gBQ}{local}{local[19]}{custom=match},{node_6}{node_6}{RDAc_ClMR8uMM6LEg6hS-w}{local}{local[24]}{custom=qUK},{node_5}{node_5}{-mvmct-FTEqLIFpkiepbuA}{local}{local[23]}{custom=KAuCw},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNewResponse(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
  "startTimestamp": 1474197282594,
  "executionTime": 88
 }
]

[
 "TEST_STARTED",
 "ID#testCustomResolving(org.elasticsearch.action.support.nodes.TransportNodesActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:42,699][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{NSiaRMACSYaIsVSe3R1n4w}{local}{local[25]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:42,701][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_6}{node_6}{OnPARAdxTVqx3Y57w--bGA}{local}{local[32]}{custom=match}, previous {node}{NSiaRMACSYaIsVSe3R1n4w}{local}{local[25]}}, removed {{node}{NSiaRMACSYaIsVSe3R1n4w}{local}{local[25]},}, added {{node_1}{node_1}{59NHF09dR4ea0CmMQtk9tg}{local}{local[27]}{custom=MBhr},{node_4}{node_4}{P-ltPpmgSUWowKCVZiNB-A}{local}{local[30]}{custom=match},{node_2}{node_2}{cEILNXV7RjaWIqRUVN5gHg}{local}{local[28]}{custom=match},{node_5}{node_5}{Gw8VgN_ITY-nL1oNTnHiDQ}{local}{local[31]}{custom=match},{node_0}{node_0}{WtFS-4FrSDyifg_4ZV-5Bg}{local}{local[26]}{custom=match},{node_3}{node_3}{RzfMwmPUTqOr0WMJqAcImA}{local}{local[29]}{custom=esA},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCustomResolving(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
  "startTimestamp": 1474197282682,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testNewResponseNullArray(org.elasticsearch.action.support.nodes.TransportNodesActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:42,723][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{_SNPje9mSWq_WPZsI6eZ6Q}{local}{local[33]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:14:42,726][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_2}{node_2}{VBPWrbU0Q_iEjl6c7yCjHg}{local}{local[36]}{custom=match}, previous {node}{_SNPje9mSWq_WPZsI6eZ6Q}{local}{local[33]}}, removed {{node}{_SNPje9mSWq_WPZsI6eZ6Q}{local}{local[33]},}, added {{node_1}{node_1}{hD1rR2xYTdWhuG0ywsk_HA}{local}{local[35]}{custom=ZLp},{node_3}{node_3}{jeSTNPM0QB6d02AjIYVkbw}{local}{local[37]}{custom=match},{node_0}{node_0}{rDcQWLZ0TsyHo4wgABqMkw}{local}{local[34]}{custom=EUY},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNewResponseNullArray(org.elasticsearch.action.support.nodes.TransportNodesActionTests)",
  "startTimestamp": 1474197282705,
  "executionTime": 23
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.nodes.TransportNodesActionTests",
  "startTimestamp": 1474197282453,
  "executionTime": 278
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests",
   "displayName": "org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests",
   "methodName": null,
   "className": "org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests",
   "children": [
    {
     "id": "ID#testQueueStats(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "displayName": "testQueueStats(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "methodName": "testQueueStats",
     "className": "org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests",
     "children": []
    },
    {
     "id": "ID#testProcessedStateCleansStatesFromOtherMasters(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "displayName": "testProcessedStateCleansStatesFromOtherMasters(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "methodName": "testProcessedStateCleansStatesFromOtherMasters",
     "className": "org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests",
     "children": []
    },
    {
     "id": "ID#testFailAllAndClear(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "displayName": "testFailAllAndClear(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "methodName": "testFailAllAndClear",
     "className": "org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests",
     "children": []
    },
    {
     "id": "ID#testFailedStateCleansSupersededStatesOnly(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "displayName": "testFailedStateCleansSupersededStatesOnly(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "methodName": "testFailedStateCleansSupersededStatesOnly",
     "className": "org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests",
     "children": []
    },
    {
     "id": "ID#testDroppingStatesAtCapacity(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "displayName": "testDroppingStatesAtCapacity(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "methodName": "testDroppingStatesAtCapacity",
     "className": "org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests",
     "children": []
    },
    {
     "id": "ID#testSimpleQueueSameMaster(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "displayName": "testSimpleQueueSameMaster(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "methodName": "testSimpleQueueSameMaster",
     "className": "org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests",
     "children": []
    },
    {
     "id": "ID#testSelectNextStateToProcess_empty(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "displayName": "testSelectNextStateToProcess_empty(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "methodName": "testSelectNextStateToProcess_empty",
     "className": "org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197282749
 }
]

[
 "TEST_STARTED",
 "ID#testQueueStats(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueueStats(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
  "startTimestamp": 1474197282819,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testProcessedStateCleansStatesFromOtherMasters(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:14:42,829][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[YJwVjYVfRuuzW0Ggv1YvXg]/v[1]) from a different master than the current one, rejecting (received {master3}{CBM78K8QR_eeSRseJyOzsg}{local}{local[39]}, current {master4}{Pn0r7PsiQ8O5sPMyseEYeA}{local}{local[42]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:14:42,843][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[X64mlINqQ6OSpqNnaZv9Pw]/v[0]) from a different master than the current one, rejecting (received {master2}{ToKiqfLxT9y-EYgaOeFS0w}{local}{local[41]}, current {master4}{Pn0r7PsiQ8O5sPMyseEYeA}{local}{local[42]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:14:42,844][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[hkIRl591R-2EjWPp23Eahg]/v[2]) from a different master than the current one, rejecting (received {master1}{mhwIh7snR9uBwEqMt8H7YQ}{local}{local[40]}, current {master4}{Pn0r7PsiQ8O5sPMyseEYeA}{local}{local[42]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:14:42,844][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[bikZY-HBTIuMydGI4w8Y_w]/v[3]) from a different master than the current one, rejecting (received {master3}{CBM78K8QR_eeSRseJyOzsg}{local}{local[39]}, current {master4}{Pn0r7PsiQ8O5sPMyseEYeA}{local}{local[42]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:14:42,844][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[aqQ68_hISye2emFMcFHs3A]/v[4]) from a different master than the current one, rejecting (received {master3}{CBM78K8QR_eeSRseJyOzsg}{local}{local[39]}, current {master4}{Pn0r7PsiQ8O5sPMyseEYeA}{local}{local[42]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:14:42,845][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[1PH6whl7QBOnyp_kOxWP5g]/v[3]) from a different master than the current one, rejecting (received {master1}{mhwIh7snR9uBwEqMt8H7YQ}{local}{local[40]}, current {master4}{Pn0r7PsiQ8O5sPMyseEYeA}{local}{local[42]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:14:42,845][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[0I3en-yGTUCt2_ccpNLiUA]/v[6]) from a different master than the current one, rejecting (received {master3}{CBM78K8QR_eeSRseJyOzsg}{local}{local[39]}, current {master4}{Pn0r7PsiQ8O5sPMyseEYeA}{local}{local[42]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:14:42,845][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[HHPzo-7zRJCjf_c29svgAA]/v[4]) from a different master than the current one, rejecting (received {master1}{mhwIh7snR9uBwEqMt8H7YQ}{local}{local[40]}, current {master4}{Pn0r7PsiQ8O5sPMyseEYeA}{local}{local[42]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:14:42,845][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[D9EfuA3OQW2TF9NfIpUvoA]/v[2]) from a different master than the current one, rejecting (received {master2}{ToKiqfLxT9y-EYgaOeFS0w}{local}{local[41]}, current {master4}{Pn0r7PsiQ8O5sPMyseEYeA}{local}{local[42]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:14:42,845][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[xFfWoyMrQqG7HhotMvFqdQ]/v[6]) from a different master than the current one, rejecting (received {master1}{mhwIh7snR9uBwEqMt8H7YQ}{local}{local[40]}, current {master4}{Pn0r7PsiQ8O5sPMyseEYeA}{local}{local[42]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:14:42,846][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[fP3OM9PURrOeJx0KzoFK9A]/v[9]) from a different master than the current one, rejecting (received {master1}{mhwIh7snR9uBwEqMt8H7YQ}{local}{local[40]}, current {master4}{Pn0r7PsiQ8O5sPMyseEYeA}{local}{local[42]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:14:42,846][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[2Ri1aKIqToGPgCUXh1M-Gw]/v[16]) from a different master than the current one, rejecting (received {master3}{CBM78K8QR_eeSRseJyOzsg}{local}{local[39]}, current {master4}{Pn0r7PsiQ8O5sPMyseEYeA}{local}{local[42]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:14:42,846][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[Ceql3C-0R-yafLUQrHMZ2g]/v[9]) from a different master than the current one, rejecting (received {master2}{ToKiqfLxT9y-EYgaOeFS0w}{local}{local[41]}, current {master4}{Pn0r7PsiQ8O5sPMyseEYeA}{local}{local[42]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:14:42,847][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[_SZj0ozlQf2sRXgPQZo6Pw]/v[18]) from a different master than the current one, rejecting (received {master3}{CBM78K8QR_eeSRseJyOzsg}{local}{local[39]}, current {master4}{Pn0r7PsiQ8O5sPMyseEYeA}{local}{local[42]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:14:42,848][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[W4mHne41Q7m_AHYG-gnkfA]/v[13]) from a different master than the current one, rejecting (received {master1}{mhwIh7snR9uBwEqMt8H7YQ}{local}{local[40]}, current {master4}{Pn0r7PsiQ8O5sPMyseEYeA}{local}{local[42]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:14:42,863][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[guyzsgFGTp62qUinGALX1A]/v[14]) from a different master than the current one, rejecting (received {master1}{mhwIh7snR9uBwEqMt8H7YQ}{local}{local[40]}, current {master4}{Pn0r7PsiQ8O5sPMyseEYeA}{local}{local[42]})%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testProcessedStateCleansStatesFromOtherMasters(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
  "startTimestamp": 1474197282826,
  "executionTime": 38
 }
]

[
 "TEST_STARTED",
 "ID#testFailAllAndClear(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailAllAndClear(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
  "startTimestamp": 1474197282866,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testFailedStateCleansSupersededStatesOnly(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailedStateCleansSupersededStatesOnly(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
  "startTimestamp": 1474197282878,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testDroppingStatesAtCapacity(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:14:42,894][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[fTp-GWjmTOWQ-r_17Xp77g], v[14], m[master2]]]. more than [28] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:14:42,895][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[7L-8990aRNC9GvKQbUuG1g], v[8], m[master4]]]. more than [28] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:14:42,897][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[1DFqLlzpRteREHtSHN12Hg], v[0], m[master2]]]. more than [28] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:14:42,897][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[ik2Sr3XWRpONL9j74eRDZg], v[15], m[master2]]]. more than [28] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:14:42,898][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[o3FutpOIS5ykoAnzQEg6Xg], v[10], m[master3]]]. more than [28] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:14:42,898][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[AF-VGfefRVGClqwet20C9g], v[4], m[master2]]]. more than [28] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:14:42,904][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[eBjtbsmHQ52O60RSdvskTg], v[9], m[master4]]]. more than [28] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:14:42,904][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[hT-gXlkaQW2AUhYB_XfPLA], v[7], m[master1]]]. more than [28] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:14:42,907][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[-YcihEFmQ5yFdcU9Db3ndA], v[0], m[master1]]]. more than [28] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:14:42,908][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[fz45pLjtQaqxV-YOZC99ng], v[6], m[master3]]]. more than [28] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:14:42,910][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[FQGzGS2MTsWEh5wjmIaYtA], v[12], m[master2]]]. more than [28] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:14:42,910][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[wRPiccLfQlCXfjDhs-xLIA], v[2], m[master1]]]. more than [28] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:14:42,917][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[WtBts3BpSriQTpMF5DqCLw], v[9], m[master1]]]. more than [28] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:14:42,919][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[MukhSVh5SimkLdiq6pYG2Q], v[6], m[master2]]]. more than [28] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:14:42,919][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[Ryg_WTwxRoKKGSAqfLiIFw], v[13], m[master2]]]. more than [28] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:14:42,920][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[syGJAilsS1O9AgqMBgrTjw], v[1], m[master3]]]. more than [28] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:14:42,920][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[69IrHN3KR_Gu29tlJgxv3Q], v[0], m[master4]]]. more than [28] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:14:42,920][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[uvReryQBS3yHbcB6eqC_YA], v[4], m[master1]]]. more than [28] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:14:42,920][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[Ib4m4DdFSly7J-9UudBKxA], v[13], m[master3]]]. more than [28] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:14:42,920][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[PZ5O4TWARnKtATFRPVys3A], v[5], m[master3]]]. more than [28] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:14:42,922][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[KcDZl8nKSCSydCwJE873jA], v[3], m[master2]]]. more than [28] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:14:42,922][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[kyJn1Q20SXqVx0dmCQCoHA], v[16], m[master2]]]. more than [28] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:14:42,923][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[gHHywX5TSs65P76qwrpEeg], v[7], m[master3]]]. more than [28] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:14:42,923][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[kZy6lbiwThaOg2FJnL0gsg], v[8], m[master3]]]. more than [28] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:14:42,924][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[GT1fEkpZQS6wpQ1TjdHXVg], v[9], m[master3]]]. more than [28] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:14:42,925][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[Jk2nbC8NSQCCTUPAiBSR5g], v[8], m[master2]]]. more than [28] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:14:42,925][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[erIyCvCMT2aUTyLrZ1CeBg], v[7], m[master2]]]. more than [28] pending states.%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDroppingStatesAtCapacity(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
  "startTimestamp": 1474197282889,
  "executionTime": 37
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleQueueSameMaster(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleQueueSameMaster(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
  "startTimestamp": 1474197282926,
  "executionTime": 87
 }
]

[
 "TEST_STARTED",
 "ID#testSelectNextStateToProcess_empty(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSelectNextStateToProcess_empty(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
  "startTimestamp": 1474197283013,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests",
  "startTimestamp": 1474197282749,
  "executionTime": 373
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.InnerHitBuilderTests",
   "displayName": "org.elasticsearch.index.query.InnerHitBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
   "children": [
    {
     "id": "ID#testInlineLeafInnerHitsNestedQueryViaBoostingQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "displayName": "testInlineLeafInnerHitsNestedQueryViaBoostingQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "methodName": "testInlineLeafInnerHitsNestedQueryViaBoostingQuery",
     "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInlineLeafInnerHitsNestedQueryViaFunctionScoreQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "displayName": "testInlineLeafInnerHitsNestedQueryViaFunctionScoreQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "methodName": "testInlineLeafInnerHitsNestedQueryViaFunctionScoreQuery",
     "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInlineLeafInnerHitsHasChildQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "displayName": "testInlineLeafInnerHitsHasChildQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "methodName": "testInlineLeafInnerHitsHasChildQuery",
     "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInlineLeafInnerHitsNestedQueryViaBoolQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "displayName": "testInlineLeafInnerHitsNestedQueryViaBoolQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "methodName": "testInlineLeafInnerHitsNestedQueryViaBoolQuery",
     "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInlineLeafInnerHitsNestedQueryViaConstantScoreQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "displayName": "testInlineLeafInnerHitsNestedQueryViaConstantScoreQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "methodName": "testInlineLeafInnerHitsNestedQueryViaConstantScoreQuery",
     "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromAndToXContent(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "displayName": "testFromAndToXContent(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "methodName": "testFromAndToXContent",
     "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInlineLeafInnerHitsNestedQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "displayName": "testInlineLeafInnerHitsNestedQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "methodName": "testInlineLeafInnerHitsNestedQuery",
     "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInlineLeafInnerHitsHasParentQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "displayName": "testInlineLeafInnerHitsHasParentQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "methodName": "testInlineLeafInnerHitsHasParentQuery",
     "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
     "children": []
    },
    {
     "id": "ID#testCopyConstructor(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "displayName": "testCopyConstructor(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "methodName": "testCopyConstructor",
     "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197283137
 }
]

[
 "TEST_STARTED",
 "ID#testInlineLeafInnerHitsNestedQueryViaBoostingQuery(org.elasticsearch.index.query.InnerHitBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInlineLeafInnerHitsNestedQueryViaBoostingQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
  "startTimestamp": 1474197283194,
  "executionTime": 177
 }
]

[
 "TEST_STARTED",
 "ID#testInlineLeafInnerHitsNestedQueryViaFunctionScoreQuery(org.elasticsearch.index.query.InnerHitBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInlineLeafInnerHitsNestedQueryViaFunctionScoreQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
  "startTimestamp": 1474197283372,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.InnerHitBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.InnerHitBuilderTests)",
  "startTimestamp": 1474197283399,
  "executionTime": 229
 }
]

[
 "TEST_STARTED",
 "ID#testInlineLeafInnerHitsHasChildQuery(org.elasticsearch.index.query.InnerHitBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInlineLeafInnerHitsHasChildQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
  "startTimestamp": 1474197283632,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testInlineLeafInnerHitsNestedQueryViaBoolQuery(org.elasticsearch.index.query.InnerHitBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInlineLeafInnerHitsNestedQueryViaBoolQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
  "startTimestamp": 1474197283645,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testInlineLeafInnerHitsNestedQueryViaConstantScoreQuery(org.elasticsearch.index.query.InnerHitBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInlineLeafInnerHitsNestedQueryViaConstantScoreQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
  "startTimestamp": 1474197283650,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testFromAndToXContent(org.elasticsearch.index.query.InnerHitBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromAndToXContent(org.elasticsearch.index.query.InnerHitBuilderTests)",
  "startTimestamp": 1474197283659,
  "executionTime": 1182
 }
]

[
 "TEST_STARTED",
 "ID#testInlineLeafInnerHitsNestedQuery(org.elasticsearch.index.query.InnerHitBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInlineLeafInnerHitsNestedQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
  "startTimestamp": 1474197284841,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testInlineLeafInnerHitsHasParentQuery(org.elasticsearch.index.query.InnerHitBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInlineLeafInnerHitsHasParentQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
  "startTimestamp": 1474197284846,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.InnerHitBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.InnerHitBuilderTests)",
  "startTimestamp": 1474197284849,
  "executionTime": 642
 }
]

[
 "TEST_STARTED",
 "ID#testCopyConstructor(org.elasticsearch.index.query.InnerHitBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyConstructor(org.elasticsearch.index.query.InnerHitBuilderTests)",
  "startTimestamp": 1474197285491,
  "executionTime": 57
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.InnerHitBuilderTests",
  "startTimestamp": 1474197283137,
  "executionTime": 2418
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.search.SearchScrollRequestTests",
   "displayName": "org.elasticsearch.action.search.SearchScrollRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.search.SearchScrollRequestTests",
   "children": [
    {
     "id": "ID#testInternalScrollSearchRequestSerialization(org.elasticsearch.action.search.SearchScrollRequestTests)",
     "displayName": "testInternalScrollSearchRequestSerialization(org.elasticsearch.action.search.SearchScrollRequestTests)",
     "methodName": "testInternalScrollSearchRequestSerialization",
     "className": "org.elasticsearch.action.search.SearchScrollRequestTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.action.search.SearchScrollRequestTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.action.search.SearchScrollRequestTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.action.search.SearchScrollRequestTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.action.search.SearchScrollRequestTests)",
     "displayName": "testSerialization(org.elasticsearch.action.search.SearchScrollRequestTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.action.search.SearchScrollRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197285564
 }
]

[
 "TEST_STARTED",
 "ID#testInternalScrollSearchRequestSerialization(org.elasticsearch.action.search.SearchScrollRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInternalScrollSearchRequestSerialization(org.elasticsearch.action.search.SearchScrollRequestTests)",
  "startTimestamp": 1474197285661,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.action.search.SearchScrollRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.action.search.SearchScrollRequestTests)",
  "startTimestamp": 1474197285668,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.action.search.SearchScrollRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.action.search.SearchScrollRequestTests)",
  "startTimestamp": 1474197285671,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.search.SearchScrollRequestTests",
  "startTimestamp": 1474197285564,
  "executionTime": 112
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197285685
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:14:45,784][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{aN8kfrYoS6eCOPtSG58lag}{local}{local[55]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)",
  "startTimestamp": 1474197285875,
  "executionTime": 32
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)",
  "startTimestamp": 1474197285908,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)",
  "startTimestamp": 1474197285912,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests",
  "startTimestamp": 1474197285685,
  "executionTime": 243
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.MergePolicySettingsTests",
   "displayName": "org.elasticsearch.index.MergePolicySettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.index.MergePolicySettingsTests",
   "children": [
    {
     "id": "ID#testNoMerges(org.elasticsearch.index.MergePolicySettingsTests)",
     "displayName": "testNoMerges(org.elasticsearch.index.MergePolicySettingsTests)",
     "methodName": "testNoMerges",
     "className": "org.elasticsearch.index.MergePolicySettingsTests",
     "children": []
    },
    {
     "id": "ID#testUpdateSettings(org.elasticsearch.index.MergePolicySettingsTests)",
     "displayName": "testUpdateSettings(org.elasticsearch.index.MergePolicySettingsTests)",
     "methodName": "testUpdateSettings",
     "className": "org.elasticsearch.index.MergePolicySettingsTests",
     "children": []
    },
    {
     "id": "ID#testTieredMergePolicySettingsUpdate(org.elasticsearch.index.MergePolicySettingsTests)",
     "displayName": "testTieredMergePolicySettingsUpdate(org.elasticsearch.index.MergePolicySettingsTests)",
     "methodName": "testTieredMergePolicySettingsUpdate",
     "className": "org.elasticsearch.index.MergePolicySettingsTests",
     "children": []
    },
    {
     "id": "ID#testCompoundFileSettings(org.elasticsearch.index.MergePolicySettingsTests)",
     "displayName": "testCompoundFileSettings(org.elasticsearch.index.MergePolicySettingsTests)",
     "methodName": "testCompoundFileSettings",
     "className": "org.elasticsearch.index.MergePolicySettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197285940
 }
]

[
 "TEST_STARTED",
 "ID#testNoMerges(org.elasticsearch.index.MergePolicySettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:44:45,984][WARN ][org.elasticsearch.index  ]  [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:44:45,996][WARN ][org.elasticsearch.index  ]  [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoMerges(org.elasticsearch.index.MergePolicySettingsTests)",
  "startTimestamp": 1474197285977,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testUpdateSettings(org.elasticsearch.index.MergePolicySettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:44:46,006][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.compound_format] from [0.9] to [0.1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:44:46,007][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.compound_format] from [0.1] to [0.0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:44:46,010][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.compound_format] from [0.0] to [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:44:46,010][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.compound_format] from [true] to [false]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdateSettings(org.elasticsearch.index.MergePolicySettingsTests)",
  "startTimestamp": 1474197286000,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testTieredMergePolicySettingsUpdate(org.elasticsearch.index.MergePolicySettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:44:46,015][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.merge.policy.expunge_deletes_allowed] from [10.0] to [11.0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:44:46,016][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.merge.policy.expunge_deletes_allowed] from [11.0] to [10.0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:44:46,016][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.merge.policy.floor_segment] from [2mb] to [3mb]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:44:46,017][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.merge.policy.floor_segment] from [3mb] to [2mb]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:44:46,017][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.merge.policy.max_merge_at_once] from [10] to [9]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:44:46,018][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.merge.policy.max_merge_at_once] from [9] to [10]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:44:46,018][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.merge.policy.max_merge_at_once_explicit] from [30] to [29]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:44:46,018][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.merge.policy.max_merge_at_once_explicit] from [29] to [30]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:44:46,019][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.merge.policy.reclaim_deletes_weight] from [2.0] to [3.0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:44:46,019][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.merge.policy.segments_per_tier] from [10.0] to [11.0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:44:46,020][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.merge.policy.reclaim_deletes_weight] from [3.0] to [2.0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:44:46,020][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.merge.policy.segments_per_tier] from [11.0] to [10.0]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTieredMergePolicySettingsUpdate(org.elasticsearch.index.MergePolicySettingsTests)",
  "startTimestamp": 1474197286011,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testCompoundFileSettings(org.elasticsearch.index.MergePolicySettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompoundFileSettings(org.elasticsearch.index.MergePolicySettingsTests)",
  "startTimestamp": 1474197286021,
  "executionTime": 13
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.MergePolicySettingsTests",
  "startTimestamp": 1474197285940,
  "executionTime": 96
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.tasks.TaskResultTests",
   "displayName": "org.elasticsearch.tasks.TaskResultTests",
   "methodName": null,
   "className": "org.elasticsearch.tasks.TaskResultTests",
   "children": [
    {
     "id": "ID#testXContentRoundTrip(org.elasticsearch.tasks.TaskResultTests)",
     "displayName": "testXContentRoundTrip(org.elasticsearch.tasks.TaskResultTests)",
     "methodName": "testXContentRoundTrip",
     "className": "org.elasticsearch.tasks.TaskResultTests",
     "children": []
    },
    {
     "id": "ID#testBinaryRoundTrip(org.elasticsearch.tasks.TaskResultTests)",
     "displayName": "testBinaryRoundTrip(org.elasticsearch.tasks.TaskResultTests)",
     "methodName": "testBinaryRoundTrip",
     "className": "org.elasticsearch.tasks.TaskResultTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197286045
 }
]

[
 "TEST_STARTED",
 "ID#testXContentRoundTrip(org.elasticsearch.tasks.TaskResultTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testXContentRoundTrip(org.elasticsearch.tasks.TaskResultTests)",
  "startTimestamp": 1474197286102,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testBinaryRoundTrip(org.elasticsearch.tasks.TaskResultTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBinaryRoundTrip(org.elasticsearch.tasks.TaskResultTests)",
  "startTimestamp": 1474197286110,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.tasks.TaskResultTests",
  "startTimestamp": 1474197286045,
  "executionTime": 75
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.HumanReadableIndexSettingsTests",
   "displayName": "org.elasticsearch.cluster.metadata.HumanReadableIndexSettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.HumanReadableIndexSettingsTests",
   "children": [
    {
     "id": "ID#testHumanReadableSettings(org.elasticsearch.cluster.metadata.HumanReadableIndexSettingsTests)",
     "displayName": "testHumanReadableSettings(org.elasticsearch.cluster.metadata.HumanReadableIndexSettingsTests)",
     "methodName": "testHumanReadableSettings",
     "className": "org.elasticsearch.cluster.metadata.HumanReadableIndexSettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197286129
 }
]

[
 "TEST_STARTED",
 "ID#testHumanReadableSettings(org.elasticsearch.cluster.metadata.HumanReadableIndexSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHumanReadableSettings(org.elasticsearch.cluster.metadata.HumanReadableIndexSettingsTests)",
  "startTimestamp": 1474197286182,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.HumanReadableIndexSettingsTests",
  "startTimestamp": 1474197286129,
  "executionTime": 67
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
   "displayName": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
   "children": [
    {
     "id": "ID#testActualMissingValue(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testActualMissingValue(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testActualMissingValue",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testGlobalOrdinalsGetRemovedOnceIndexReaderCloses(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testGlobalOrdinalsGetRemovedOnceIndexReaderCloses(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testGlobalOrdinalsGetRemovedOnceIndexReaderCloses",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testTermsEnum(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testTermsEnum(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testTermsEnum",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMissingFirst(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testSortMissingFirst(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testSortMissingFirst",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSingleValueWithMissing(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testSingleValueWithMissing(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testSingleValueWithMissing",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testMissingValueForAll(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testMissingValueForAll(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testMissingValueForAll",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testEmpty(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMissingLast(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testSortMissingLast(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testSortMissingLast",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testMultiValueWithMissing(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testMultiValueWithMissing(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testMultiValueWithMissing",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testNestedSortingMax(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testNestedSortingMax(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testNestedSortingMax",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testMultiValueAllSet(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testMultiValueAllSet(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testMultiValueAllSet",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testNestedSortingMin(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testNestedSortingMin(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testNestedSortingMin",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMissingFirstReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testSortMissingFirstReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testSortMissingFirstReverse",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testSortMultiValuesFields(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testSortMultiValuesFields",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSingleValueAllSet(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testSingleValueAllSet(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testSingleValueAllSet",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testGlobalOrdinals(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testGlobalOrdinals(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testGlobalOrdinals",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testDeletedDocs(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testDeletedDocs(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testDeletedDocs",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMissingLastReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testSortMissingLastReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testSortMissingLastReverse",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testActualMissingValueReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testActualMissingValueReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testActualMissingValueReverse",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197286226
 }
]

[
 "TEST_STARTED",
 "ID#testActualMissingValue(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:46,305][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:46,349][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:46,349][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:46,353][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[564], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:46,356][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:46,357][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:46,556][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:46,557][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:46,557][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[2]}, bound_addresses {local[2]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:46,584][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{sCURlZYaSKaIpdbm_GhH_w}{f8nQwtfoQgakMDlk0DAv2g}{local}{local[2]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:46,585][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:46,656][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:46,681][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:46,774][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:48,675][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testActualMissingValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActualMissingValue(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474197286294,
  "executionTime": 2463
 }
]

[
 "TEST_STARTED",
 "ID#testGlobalOrdinalsGetRemovedOnceIndexReaderCloses(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:48,771][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:48,919][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:49,116][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testGlobalOrdinalsGetRemovedOnceIndexReaderCloses]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGlobalOrdinalsGetRemovedOnceIndexReaderCloses(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474197288757,
  "executionTime": 397
 }
]

[
 "TEST_STARTED",
 "ID#testTermsEnum(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:49,164][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:49,270][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:49,339][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testTermsEnum]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermsEnum(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474197289154,
  "executionTime": 226
 }
]

[
 "TEST_STARTED",
 "ID#testSortMissingFirst(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:49,390][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:49,497][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:50,567][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testSortMissingFirst]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMissingFirst(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474197289381,
  "executionTime": 1427
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValueWithMissing(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:50,819][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:50,889][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:50,945][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testSingleValueWithMissing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValueWithMissing(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474197290808,
  "executionTime": 167
 }
]

[
 "TEST_STARTED",
 "ID#testMissingValueForAll(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:50,983][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:51,037][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:51,059][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testMissingValueForAll]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingValueForAll(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474197290975,
  "executionTime": 117
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:51,103][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:51,229][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:51,283][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testEmpty]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474197291093,
  "executionTime": 249
 }
]

[
 "TEST_STARTED",
 "ID#testSortMissingLast(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:51,351][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:51,487][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:52,105][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testSortMissingLast]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMissingLast(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474197291342,
  "executionTime": 833
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValueWithMissing(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:52,187][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:52,303][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:52,326][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testMultiValueWithMissing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValueWithMissing(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474197292175,
  "executionTime": 188
 }
]

[
 "TEST_STARTED",
 "ID#testNestedSortingMax(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:52,401][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:52,576][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:54,186][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testNestedSortingMax]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedSortingMax(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474197292364,
  "executionTime": 1943
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValueAllSet(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:54,316][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:54,421][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:54,459][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testMultiValueAllSet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValueAllSet(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474197294307,
  "executionTime": 203
 }
]

[
 "TEST_STARTED",
 "ID#testNestedSortingMin(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:54,518][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:54,587][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:54,842][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testNestedSortingMin]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedSortingMin(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474197294510,
  "executionTime": 423
 }
]

[
 "TEST_STARTED",
 "ID#testSortMissingFirstReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:54,943][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:55,036][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:55,061][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testSortMissingFirstReverse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMissingFirstReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474197294934,
  "executionTime": 216
 }
]

[
 "TEST_STARTED",
 "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:55,161][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:55,254][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:55,284][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testSortMultiValuesFields]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474197295150,
  "executionTime": 206
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValueAllSet(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:55,368][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:55,461][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:55,487][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testSingleValueAllSet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValueAllSet(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474197295357,
  "executionTime": 477
 }
]

[
 "TEST_STARTED",
 "ID#testGlobalOrdinals(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:55,843][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:55,927][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:55,962][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testGlobalOrdinals]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGlobalOrdinals(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474197295834,
  "executionTime": 174
 }
]

[
 "TEST_STARTED",
 "ID#testDeletedDocs(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:56,018][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:56,093][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:56,147][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testDeletedDocs]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeletedDocs(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474197296009,
  "executionTime": 178
 }
]

[
 "TEST_STARTED",
 "ID#testSortMissingLastReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:56,195][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:56,268][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:56,691][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testSortMissingLastReverse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMissingLastReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474197296187,
  "executionTime": 618
 }
]

[
 "TEST_STARTED",
 "ID#testActualMissingValueReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:56,814][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:56,895][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:56,923][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testActualMissingValueReverse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActualMissingValueReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474197296805,
  "executionTime": 169
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:56,974][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:56,975][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:56,975][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:14:56,977][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
  "startTimestamp": 1474197286226,
  "executionTime": 10779
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests",
   "displayName": "org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests",
   "children": [
    {
     "id": "ID#testSlowGcLogging(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests)",
     "displayName": "testSlowGcLogging(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests)",
     "methodName": "testSlowGcLogging",
     "className": "org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests",
     "children": []
    },
    {
     "id": "ID#testGcOverheadLogging(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests)",
     "displayName": "testGcOverheadLogging(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests)",
     "methodName": "testGcOverheadLogging",
     "className": "org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197297014
 }
]

[
 "TEST_STARTED",
 "ID#testSlowGcLogging(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSlowGcLogging(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests)",
  "startTimestamp": 1474197297041,
  "executionTime": 352
 }
]

[
 "TEST_STARTED",
 "ID#testGcOverheadLogging(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGcOverheadLogging(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests)",
  "startTimestamp": 1474197297393,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests",
  "startTimestamp": 1474197297014,
  "executionTime": 385
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.bootstrap.BootstrapSettingsTests",
   "displayName": "org.elasticsearch.bootstrap.BootstrapSettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.bootstrap.BootstrapSettingsTests",
   "children": [
    {
     "id": "ID#testDefaultSettings(org.elasticsearch.bootstrap.BootstrapSettingsTests)",
     "displayName": "testDefaultSettings(org.elasticsearch.bootstrap.BootstrapSettingsTests)",
     "methodName": "testDefaultSettings",
     "className": "org.elasticsearch.bootstrap.BootstrapSettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197297407
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultSettings(org.elasticsearch.bootstrap.BootstrapSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultSettings(org.elasticsearch.bootstrap.BootstrapSettingsTests)",
  "startTimestamp": 1474197297457,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.bootstrap.BootstrapSettingsTests",
  "startTimestamp": 1474197297407,
  "executionTime": 54
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.MetaDataTests",
   "displayName": "org.elasticsearch.cluster.metadata.MetaDataTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.MetaDataTests",
   "children": [
    {
     "id": "ID#testUnknownFieldClusterMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "displayName": "testUnknownFieldClusterMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "methodName": "testUnknownFieldClusterMetaData",
     "className": "org.elasticsearch.cluster.metadata.MetaDataTests",
     "children": []
    },
    {
     "id": "ID#testSerializationWithIndexGraveyard(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "displayName": "testSerializationWithIndexGraveyard(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "methodName": "testSerializationWithIndexGraveyard",
     "className": "org.elasticsearch.cluster.metadata.MetaDataTests",
     "children": []
    },
    {
     "id": "ID#testMetaDataGlobalStateChangesOnIndexDeletions(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "displayName": "testMetaDataGlobalStateChangesOnIndexDeletions(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "methodName": "testMetaDataGlobalStateChangesOnIndexDeletions",
     "className": "org.elasticsearch.cluster.metadata.MetaDataTests",
     "children": []
    },
    {
     "id": "ID#testResolveIndexRouting(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "displayName": "testResolveIndexRouting(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "methodName": "testResolveIndexRouting",
     "className": "org.elasticsearch.cluster.metadata.MetaDataTests",
     "children": []
    },
    {
     "id": "ID#testIndexAndAliasWithSameName(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "displayName": "testIndexAndAliasWithSameName(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "methodName": "testIndexAndAliasWithSameName",
     "className": "org.elasticsearch.cluster.metadata.MetaDataTests",
     "children": []
    },
    {
     "id": "ID#testXContentWithIndexGraveyard(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "displayName": "testXContentWithIndexGraveyard(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "methodName": "testXContentWithIndexGraveyard",
     "className": "org.elasticsearch.cluster.metadata.MetaDataTests",
     "children": []
    },
    {
     "id": "ID#testUnknownFieldIndexMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "displayName": "testUnknownFieldIndexMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "methodName": "testUnknownFieldIndexMetaData",
     "className": "org.elasticsearch.cluster.metadata.MetaDataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197297469
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownFieldClusterMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownFieldClusterMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)",
  "startTimestamp": 1474197297521,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testSerializationWithIndexGraveyard(org.elasticsearch.cluster.metadata.MetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerializationWithIndexGraveyard(org.elasticsearch.cluster.metadata.MetaDataTests)",
  "startTimestamp": 1474197297533,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testMetaDataGlobalStateChangesOnIndexDeletions(org.elasticsearch.cluster.metadata.MetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMetaDataGlobalStateChangesOnIndexDeletions(org.elasticsearch.cluster.metadata.MetaDataTests)",
  "startTimestamp": 1474197297537,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testResolveIndexRouting(org.elasticsearch.cluster.metadata.MetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResolveIndexRouting(org.elasticsearch.cluster.metadata.MetaDataTests)",
  "startTimestamp": 1474197297540,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testIndexAndAliasWithSameName(org.elasticsearch.cluster.metadata.MetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexAndAliasWithSameName(org.elasticsearch.cluster.metadata.MetaDataTests)",
  "startTimestamp": 1474197297547,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testXContentWithIndexGraveyard(org.elasticsearch.cluster.metadata.MetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testXContentWithIndexGraveyard(org.elasticsearch.cluster.metadata.MetaDataTests)",
  "startTimestamp": 1474197297557,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownFieldIndexMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownFieldIndexMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)",
  "startTimestamp": 1474197297566,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.MetaDataTests",
  "startTimestamp": 1474197297469,
  "executionTime": 102
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.DynamicTemplatesTests",
   "displayName": "org.elasticsearch.index.mapper.DynamicTemplatesTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.DynamicTemplatesTests",
   "children": [
    {
     "id": "ID#testSimple(org.elasticsearch.index.mapper.DynamicTemplatesTests)",
     "displayName": "testSimple(org.elasticsearch.index.mapper.DynamicTemplatesTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.index.mapper.DynamicTemplatesTests",
     "children": []
    },
    {
     "id": "ID#testMatchTypeOnly(org.elasticsearch.index.mapper.DynamicTemplatesTests)",
     "displayName": "testMatchTypeOnly(org.elasticsearch.index.mapper.DynamicTemplatesTests)",
     "methodName": "testMatchTypeOnly",
     "className": "org.elasticsearch.index.mapper.DynamicTemplatesTests",
     "children": []
    },
    {
     "id": "ID#testSimpleWithXContentTraverse(org.elasticsearch.index.mapper.DynamicTemplatesTests)",
     "displayName": "testSimpleWithXContentTraverse(org.elasticsearch.index.mapper.DynamicTemplatesTests)",
     "methodName": "testSimpleWithXContentTraverse",
     "className": "org.elasticsearch.index.mapper.DynamicTemplatesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197297580
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.index.mapper.DynamicTemplatesTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:14:57,629][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:14:57,693][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:14:57,694][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:14:57,709][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[564], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:14:57,713][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:14:57,713][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:14:57,964][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:14:57,964][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:14:57,965][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[3]}, bound_addresses {local[3]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:14:57,971][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{ZtiTiI71SYGIVGSHSwcL0w}{KzwWWfRDRpu4zZT6rCaOPA}{local}{local[3]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:14:57,972][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:14:58,042][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:14:58,464][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:14:58,527][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:14:58,597][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/MAt-n7P3T9Sk41Q0D-Kr3A] create_mapping [person]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:14:58,768][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/MAt-n7P3T9Sk41Q0D-Kr3A] update_mapping [person]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:14:58,796][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicTemplatesTests#testSimple]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.index.mapper.DynamicTemplatesTests)",
  "startTimestamp": 1474197297618,
  "executionTime": 1215
 }
]

[
 "TEST_STARTED",
 "ID#testMatchTypeOnly(org.elasticsearch.index.mapper.DynamicTemplatesTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:14:58,842][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:14:58,910][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:14:58,926][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/Olh3o3wISRmr58vys7i8Vg] create_mapping [person]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:14:58,962][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/Olh3o3wISRmr58vys7i8Vg] update_mapping [person]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:14:58,977][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicTemplatesTests#testMatchTypeOnly]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMatchTypeOnly(org.elasticsearch.index.mapper.DynamicTemplatesTests)",
  "startTimestamp": 1474197298834,
  "executionTime": 176
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleWithXContentTraverse(org.elasticsearch.index.mapper.DynamicTemplatesTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:14:59,018][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:14:59,133][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:14:59,162][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/JbNbDNHqSOqqfEbY3VjAoQ] create_mapping [person]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:14:59,192][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/JbNbDNHqSOqqfEbY3VjAoQ] update_mapping [person]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:14:59,217][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicTemplatesTests#testSimpleWithXContentTraverse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleWithXContentTraverse(org.elasticsearch.index.mapper.DynamicTemplatesTests)",
  "startTimestamp": 1474197299010,
  "executionTime": 239
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:14:59,249][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:14:59,250][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:14:59,250][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:14:59,252][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.DynamicTemplatesTests",
  "startTimestamp": 1474197297580,
  "executionTime": 1681
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.DateFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.DateFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
   "children": [
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testTermQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "displayName": "testTermQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "methodName": "testTermQuery",
     "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testRangeQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "displayName": "testRangeQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "methodName": "testRangeQuery",
     "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueFormat(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "displayName": "testValueFormat(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "methodName": "testValueFormat",
     "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueForSearch(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "displayName": "testValueForSearch(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "methodName": "testValueForSearch",
     "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testIsFieldWithinQueryEmptyReader(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "displayName": "testIsFieldWithinQueryEmptyReader(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "methodName": "testIsFieldWithinQueryEmptyReader",
     "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "displayName": "testIsFieldWithinQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)",
     "methodName": "testIsFieldWithinQuery",
     "className": "org.elasticsearch.index.mapper.DateFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197299274
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.DateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.DateFieldTypeTests)",
  "startTimestamp": 1474197299315,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.DateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.DateFieldTypeTests)",
  "startTimestamp": 1474197299326,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.DateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.DateFieldTypeTests)",
  "startTimestamp": 1474197299331,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testTermQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)",
  "startTimestamp": 1474197299334,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.DateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.DateFieldTypeTests)",
  "startTimestamp": 1474197299346,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.DateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.DateFieldTypeTests)",
  "startTimestamp": 1474197299351,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRangeQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRangeQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)",
  "startTimestamp": 1474197299353,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testValueFormat(org.elasticsearch.index.mapper.DateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueFormat(org.elasticsearch.index.mapper.DateFieldTypeTests)",
  "startTimestamp": 1474197299356,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testValueForSearch(org.elasticsearch.index.mapper.DateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueForSearch(org.elasticsearch.index.mapper.DateFieldTypeTests)",
  "startTimestamp": 1474197299366,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsFieldWithinQueryEmptyReader(org.elasticsearch.index.mapper.DateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsFieldWithinQueryEmptyReader(org.elasticsearch.index.mapper.DateFieldTypeTests)",
  "startTimestamp": 1474197299369,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.DateFieldTypeTests)",
  "startTimestamp": 1474197299378,
  "executionTime": 270
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.DateFieldTypeTests",
  "startTimestamp": 1474197299274,
  "executionTime": 380
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.discovery.ZenFaultDetectionTests",
   "displayName": "org.elasticsearch.discovery.ZenFaultDetectionTests",
   "methodName": null,
   "className": "org.elasticsearch.discovery.ZenFaultDetectionTests",
   "children": [
    {
     "id": "ID#testMasterFaultDetectionNotSizeLimited(org.elasticsearch.discovery.ZenFaultDetectionTests)",
     "displayName": "testMasterFaultDetectionNotSizeLimited(org.elasticsearch.discovery.ZenFaultDetectionTests)",
     "methodName": "testMasterFaultDetectionNotSizeLimited",
     "className": "org.elasticsearch.discovery.ZenFaultDetectionTests",
     "children": []
    },
    {
     "id": "ID#testMasterFaultDetectionConnectOnDisconnect(org.elasticsearch.discovery.ZenFaultDetectionTests)",
     "displayName": "testMasterFaultDetectionConnectOnDisconnect(org.elasticsearch.discovery.ZenFaultDetectionTests)",
     "methodName": "testMasterFaultDetectionConnectOnDisconnect",
     "className": "org.elasticsearch.discovery.ZenFaultDetectionTests",
     "children": []
    },
    {
     "id": "ID#testNodesFaultDetectionConnectOnDisconnect(org.elasticsearch.discovery.ZenFaultDetectionTests)",
     "displayName": "testNodesFaultDetectionConnectOnDisconnect(org.elasticsearch.discovery.ZenFaultDetectionTests)",
     "methodName": "testNodesFaultDetectionConnectOnDisconnect",
     "className": "org.elasticsearch.discovery.ZenFaultDetectionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197299673
 }
]

[
 "TEST_STARTED",
 "ID#testMasterFaultDetectionNotSizeLimited(org.elasticsearch.discovery.ZenFaultDetectionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:14:59,724][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{n1UoJl5CQ9SqOOJMgrElMw}{local}{local[56]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:14:59,730][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{frmJzFnXSNaveYArr64jgg}{local}{local[57]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:14:59,761][INFO ][org.elasticsearch.test.transport] publish_address {local[4]}, bound_addresses {local[4]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:14:59,767][INFO ][org.elasticsearch.test.transport] publish_address {local[5]}, bound_addresses {local[5]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:14:59,781][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {TS_B}{TS_B}{HXydVK0FQ5OUW18iINMf9g}{local}{local[5]}, previous {node}{n1UoJl5CQ9SqOOJMgrElMw}{local}{local[56]}}, removed {{node}{n1UoJl5CQ9SqOOJMgrElMw}{local}{local[56]},}, added {{TS_B}{TS_B}{HXydVK0FQ5OUW18iINMf9g}{local}{local[5]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:14:59,802][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {TS_B}{TS_B}{HXydVK0FQ5OUW18iINMf9g}{local}{local[5]}, previous {node}{frmJzFnXSNaveYArr64jgg}{local}{local[57]}}, removed {{node}{frmJzFnXSNaveYArr64jgg}{local}{local[57]},}, added {{TS_A}{TS_A}{5mnh2O46ToOqtiww0iWBAg}{local}{local[4]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMasterFaultDetectionNotSizeLimited(org.elasticsearch.discovery.ZenFaultDetectionTests)",
  "startTimestamp": 1474197299696,
  "executionTime": 2168
 }
]

[
 "TEST_STARTED",
 "ID#testMasterFaultDetectionConnectOnDisconnect(org.elasticsearch.discovery.ZenFaultDetectionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:01,872][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{UPJcTFb6ShOT5mc8FC9Ipw}{local}{local[58]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:01,879][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{2KPk5awpTnGPtf2SlOpTsA}{local}{local[59]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:01,881][INFO ][org.elasticsearch.test.transport] publish_address {local[6]}, bound_addresses {local[6]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:01,882][INFO ][org.elasticsearch.test.transport] publish_address {local[7]}, bound_addresses {local[7]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:01,884][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {TS_B}{TS_B}{tfRQJAFnTgiqogY-qnCpMA}{local}{local[7]}, previous {node}{UPJcTFb6ShOT5mc8FC9Ipw}{local}{local[58]}}, removed {{node}{UPJcTFb6ShOT5mc8FC9Ipw}{local}{local[58]},}, added {{TS_B}{TS_B}{tfRQJAFnTgiqogY-qnCpMA}{local}{local[7]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMasterFaultDetectionConnectOnDisconnect(org.elasticsearch.discovery.ZenFaultDetectionTests)",
  "startTimestamp": 1474197301864,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testNodesFaultDetectionConnectOnDisconnect(org.elasticsearch.discovery.ZenFaultDetectionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:01,905][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{mAspv7LpQW26mIwoGNvMXg}{local}{local[60]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:01,909][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{wzTi9kEXRX2s6Gi1VgpNsQ}{local}{local[61]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:01,911][INFO ][org.elasticsearch.test.transport] publish_address {local[8]}, bound_addresses {local[8]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:01,913][INFO ][org.elasticsearch.test.transport] publish_address {local[9]}, bound_addresses {local[9]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:01,958][WARN ][org.elasticsearch.test.transport] Transport response handler not found of id [0]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNodesFaultDetectionConnectOnDisconnect(org.elasticsearch.discovery.ZenFaultDetectionTests)",
  "startTimestamp": 1474197301887,
  "executionTime": 74
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.discovery.ZenFaultDetectionTests",
  "startTimestamp": 1474197299673,
  "executionTime": 2290
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.URIPatternTests",
   "displayName": "org.elasticsearch.common.util.URIPatternTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.URIPatternTests",
   "children": [
    {
     "id": "ID#testURIPattern(org.elasticsearch.common.util.URIPatternTests)",
     "displayName": "testURIPattern(org.elasticsearch.common.util.URIPatternTests)",
     "methodName": "testURIPattern",
     "className": "org.elasticsearch.common.util.URIPatternTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197301972
 }
]

[
 "TEST_STARTED",
 "ID#testURIPattern(org.elasticsearch.common.util.URIPatternTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testURIPattern(org.elasticsearch.common.util.URIPatternTests)",
  "startTimestamp": 1474197302029,
  "executionTime": 13
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.URIPatternTests",
  "startTimestamp": 1474197301972,
  "executionTime": 84
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.IpRangeTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.IpRangeTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.IpRangeTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.IpRangeTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.IpRangeTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.IpRangeTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.IpRangeTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.IpRangeTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.IpRangeTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.IpRangeTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.IpRangeTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.IpRangeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197302064
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:02,159][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{WO8d2D11SrSFHEoOnRedLg}{local}{local[62]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.IpRangeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.IpRangeTests)",
  "startTimestamp": 1474197302171,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.IpRangeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.IpRangeTests)",
  "startTimestamp": 1474197302187,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.IpRangeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.IpRangeTests)",
  "startTimestamp": 1474197302190,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.IpRangeTests",
  "startTimestamp": 1474197302064,
  "executionTime": 132
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.sort.ScriptSortBuilderTests",
   "displayName": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseBadFieldNameExceptionsOnStartObject(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testParseBadFieldNameExceptionsOnStartObject(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testParseBadFieldNameExceptionsOnStartObject",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseUnexpectedToken(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testParseUnexpectedToken(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testParseUnexpectedToken",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBadSortMode(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testBadSortMode(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testBadSortMode",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBuildSortField(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testBuildSortField(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testBuildSortField",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseJson_simple(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testParseJson_simple(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testParseJson_simple",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testScriptSortTypeNull(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testScriptSortTypeNull(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testScriptSortTypeNull",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testScriptSortTypeIllegalArgument(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testScriptSortTypeIllegalArgument(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testScriptSortTypeIllegalArgument",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseJson(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testParseJson(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testParseJson",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseBadFieldNameExceptions(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testParseBadFieldNameExceptions(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testParseBadFieldNameExceptions",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testScriptSortType(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testScriptSortType(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testScriptSortType",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197302211
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1474197302257,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testParseBadFieldNameExceptionsOnStartObject(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseBadFieldNameExceptionsOnStartObject(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1474197302274,
  "executionTime": 34
 }
]

[
 "TEST_STARTED",
 "ID#testParseUnexpectedToken(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseUnexpectedToken(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1474197302309,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBadSortMode(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBadSortMode(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1474197302311,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1474197302313,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testBuildSortField(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuildSortField(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1474197302317,
  "executionTime": 144
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1474197302462,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testParseJson_simple(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseJson_simple(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1474197302489,
  "executionTime": 39
 }
]

[
 "TEST_STARTED",
 "ID#testScriptSortTypeNull(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScriptSortTypeNull(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1474197302528,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testScriptSortTypeIllegalArgument(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScriptSortTypeIllegalArgument(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1474197302530,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParseJson(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseJson(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1474197302534,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseBadFieldNameExceptions(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseBadFieldNameExceptions(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1474197302536,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testScriptSortType(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScriptSortType(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1474197302538,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.sort.ScriptSortBuilderTests",
  "startTimestamp": 1474197302211,
  "executionTime": 332
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.ShardVersioningTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.ShardVersioningTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.ShardVersioningTests",
   "children": [
    {
     "id": "ID#testSimple(org.elasticsearch.cluster.routing.allocation.ShardVersioningTests)",
     "displayName": "testSimple(org.elasticsearch.cluster.routing.allocation.ShardVersioningTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.cluster.routing.allocation.ShardVersioningTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197302558
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.cluster.routing.allocation.ShardVersioningTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:02,617][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start two nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:02,625][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards for test1, replicas will start initializing%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.cluster.routing.allocation.ShardVersioningTests)",
  "startTimestamp": 1474197302607,
  "executionTime": 21
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.ShardVersioningTests",
  "startTimestamp": 1474197302558,
  "executionTime": 73
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.client.ParentTaskAssigningClientTests",
   "displayName": "org.elasticsearch.client.ParentTaskAssigningClientTests",
   "methodName": null,
   "className": "org.elasticsearch.client.ParentTaskAssigningClientTests",
   "children": [
    {
     "id": "ID#testSetsParentId(org.elasticsearch.client.ParentTaskAssigningClientTests)",
     "displayName": "testSetsParentId(org.elasticsearch.client.ParentTaskAssigningClientTests)",
     "methodName": "testSetsParentId",
     "className": "org.elasticsearch.client.ParentTaskAssigningClientTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197302642
 }
]

[
 "TEST_STARTED",
 "ID#testSetsParentId(org.elasticsearch.client.ParentTaskAssigningClientTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetsParentId(org.elasticsearch.client.ParentTaskAssigningClientTests)",
  "startTimestamp": 1474197302718,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.client.ParentTaskAssigningClientTests",
  "startTimestamp": 1474197302642,
  "executionTime": 89
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.BuildTests",
   "displayName": "org.elasticsearch.BuildTests",
   "methodName": null,
   "className": "org.elasticsearch.BuildTests",
   "children": [
    {
     "id": "ID#testJarMetadata(org.elasticsearch.BuildTests)",
     "displayName": "testJarMetadata(org.elasticsearch.BuildTests)",
     "methodName": "testJarMetadata",
     "className": "org.elasticsearch.BuildTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashCode(org.elasticsearch.BuildTests)",
     "displayName": "testEqualsAndHashCode(org.elasticsearch.BuildTests)",
     "methodName": "testEqualsAndHashCode",
     "className": "org.elasticsearch.BuildTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197302748
 }
]

[
 "TEST_STARTED",
 "ID#testJarMetadata(org.elasticsearch.BuildTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testJarMetadata(org.elasticsearch.BuildTests)",
  "startTimestamp": 1474197302779,
  "executionTime": 59
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashCode(org.elasticsearch.BuildTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashCode(org.elasticsearch.BuildTests)",
  "startTimestamp": 1474197302839,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.BuildTests",
  "startTimestamp": 1474197302748,
  "executionTime": 95
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
   "children": [
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseEnd(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "displayName": "testParseEnd(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "methodName": "testParseEnd",
     "className": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197302850
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:02,950][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{HQ_zSRRfSvS5dGZAjgcc4A}{local}{local[65]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:02,959][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:02,959][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
  "startTimestamp": 1474197302906,
  "executionTime": 72
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
  "startTimestamp": 1474197302979,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testParseEnd(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseEnd(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
  "startTimestamp": 1474197302985,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
  "startTimestamp": 1474197302995,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
  "startTimestamp": 1474197302999,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
  "startTimestamp": 1474197303028,
  "executionTime": 30
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
  "startTimestamp": 1474197303059,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
  "startTimestamp": 1474197303075,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
  "startTimestamp": 1474197303078,
  "executionTime": 35
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
  "startTimestamp": 1474197303113,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
  "startTimestamp": 1474197302850,
  "executionTime": 278
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.termvectors.TermVectorsUnitTests",
   "displayName": "org.elasticsearch.action.termvectors.TermVectorsUnitTests",
   "methodName": null,
   "className": "org.elasticsearch.action.termvectors.TermVectorsUnitTests",
   "children": [
    {
     "id": "ID#testRequestParsingThrowsException(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "displayName": "testRequestParsingThrowsException(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "methodName": "testRequestParsingThrowsException",
     "className": "org.elasticsearch.action.termvectors.TermVectorsUnitTests",
     "children": []
    },
    {
     "id": "ID#testRestRequestParsing(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "displayName": "testRestRequestParsing(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "methodName": "testRestRequestParsing",
     "className": "org.elasticsearch.action.termvectors.TermVectorsUnitTests",
     "children": []
    },
    {
     "id": "ID#testStreamResponse(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "displayName": "testStreamResponse(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "methodName": "testStreamResponse",
     "className": "org.elasticsearch.action.termvectors.TermVectorsUnitTests",
     "children": []
    },
    {
     "id": "ID#testMultiParserFilter(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "displayName": "testMultiParserFilter(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "methodName": "testMultiParserFilter",
     "className": "org.elasticsearch.action.termvectors.TermVectorsUnitTests",
     "children": []
    },
    {
     "id": "ID#testTermVectorStringGenerationWithoutPositions(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "displayName": "testTermVectorStringGenerationWithoutPositions(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "methodName": "testTermVectorStringGenerationWithoutPositions",
     "className": "org.elasticsearch.action.termvectors.TermVectorsUnitTests",
     "children": []
    },
    {
     "id": "ID#testMultiParser(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "displayName": "testMultiParser(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "methodName": "testMultiParser",
     "className": "org.elasticsearch.action.termvectors.TermVectorsUnitTests",
     "children": []
    },
    {
     "id": "ID#testStreamRequest(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "displayName": "testStreamRequest(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "methodName": "testStreamRequest",
     "className": "org.elasticsearch.action.termvectors.TermVectorsUnitTests",
     "children": []
    },
    {
     "id": "ID#testFieldTypeToTermVectorString(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "displayName": "testFieldTypeToTermVectorString(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "methodName": "testFieldTypeToTermVectorString",
     "className": "org.elasticsearch.action.termvectors.TermVectorsUnitTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197303135
 }
]

[
 "TEST_STARTED",
 "ID#testRequestParsingThrowsException(org.elasticsearch.action.termvectors.TermVectorsUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRequestParsingThrowsException(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
  "startTimestamp": 1474197303175,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRestRequestParsing(org.elasticsearch.action.termvectors.TermVectorsUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestRequestParsing(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
  "startTimestamp": 1474197303178,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testStreamResponse(org.elasticsearch.action.termvectors.TermVectorsUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamResponse(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
  "startTimestamp": 1474197303184,
  "executionTime": 339
 }
]

[
 "TEST_STARTED",
 "ID#testMultiParserFilter(org.elasticsearch.action.termvectors.TermVectorsUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiParserFilter(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
  "startTimestamp": 1474197303524,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testTermVectorStringGenerationWithoutPositions(org.elasticsearch.action.termvectors.TermVectorsUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermVectorStringGenerationWithoutPositions(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
  "startTimestamp": 1474197303533,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testMultiParser(org.elasticsearch.action.termvectors.TermVectorsUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiParser(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
  "startTimestamp": 1474197303535,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testStreamRequest(org.elasticsearch.action.termvectors.TermVectorsUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamRequest(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
  "startTimestamp": 1474197303560,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFieldTypeToTermVectorString(org.elasticsearch.action.termvectors.TermVectorsUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldTypeToTermVectorString(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
  "startTimestamp": 1474197303563,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.termvectors.TermVectorsUnitTests",
  "startTimestamp": 1474197303135,
  "executionTime": 508
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.TermsLookupTests",
   "displayName": "org.elasticsearch.indices.TermsLookupTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.TermsLookupTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.indices.TermsLookupTests)",
     "displayName": "testSerialization(org.elasticsearch.indices.TermsLookupTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.indices.TermsLookupTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.indices.TermsLookupTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.indices.TermsLookupTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.indices.TermsLookupTests",
     "children": []
    },
    {
     "id": "ID#testTermsLookup(org.elasticsearch.indices.TermsLookupTests)",
     "displayName": "testTermsLookup(org.elasticsearch.indices.TermsLookupTests)",
     "methodName": "testTermsLookup",
     "className": "org.elasticsearch.indices.TermsLookupTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197303652
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.indices.TermsLookupTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.indices.TermsLookupTests)",
  "startTimestamp": 1474197303668,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.indices.TermsLookupTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.indices.TermsLookupTests)",
  "startTimestamp": 1474197303671,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTermsLookup(org.elasticsearch.indices.TermsLookupTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermsLookup(org.elasticsearch.indices.TermsLookupTests)",
  "startTimestamp": 1474197303673,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.TermsLookupTests",
  "startTimestamp": 1474197303652,
  "executionTime": 26
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.NullValueTests",
   "displayName": "org.elasticsearch.index.mapper.NullValueTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.NullValueTests",
   "children": [
    {
     "id": "ID#testNullNullValue(org.elasticsearch.index.mapper.NullValueTests)",
     "displayName": "testNullNullValue(org.elasticsearch.index.mapper.NullValueTests)",
     "methodName": "testNullNullValue",
     "className": "org.elasticsearch.index.mapper.NullValueTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197303684
 }
]

[
 "TEST_STARTED",
 "ID#testNullNullValue(org.elasticsearch.index.mapper.NullValueTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:03,733][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:03,782][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:03,782][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:03,787][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[564], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:03,790][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:03,790][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:03,965][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:03,966][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:03,966][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[10]}, bound_addresses {local[10]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:03,970][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{Nz6c_EhfSxu8w7_nG6T9cw}{Q45iHuSaQNSXcdnG53Mj8Q}{local}{local[10]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:03,973][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:04,022][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:04,045][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:04,226][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:04,254][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NullValueTests#testNullNullValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullNullValue(org.elasticsearch.index.mapper.NullValueTests)",
  "startTimestamp": 1474197303723,
  "executionTime": 571
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:04,295][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:04,299][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:04,299][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:04,307][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.NullValueTests",
  "startTimestamp": 1474197303684,
  "executionTime": 635
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests",
   "children": [
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "displayName": "testValueForSearch(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "methodName": "testValueForSearch",
     "className": "org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "displayName": "testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "methodName": "testIsFieldWithinQuery",
     "className": "org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197304325
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
  "startTimestamp": 1474197304380,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
  "startTimestamp": 1474197304383,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
  "startTimestamp": 1474197304386,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
  "startTimestamp": 1474197304393,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
  "startTimestamp": 1474197304395,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
  "startTimestamp": 1474197304399,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
  "startTimestamp": 1474197304406,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests",
  "startTimestamp": 1474197304325,
  "executionTime": 105
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.bootstrap.JavaVersionTests",
   "displayName": "org.elasticsearch.bootstrap.JavaVersionTests",
   "methodName": null,
   "className": "org.elasticsearch.bootstrap.JavaVersionTests",
   "children": [
    {
     "id": "ID#testJava8Compat(org.elasticsearch.bootstrap.JavaVersionTests)",
     "displayName": "testJava8Compat(org.elasticsearch.bootstrap.JavaVersionTests)",
     "methodName": "testJava8Compat",
     "className": "org.elasticsearch.bootstrap.JavaVersionTests",
     "children": []
    },
    {
     "id": "ID#testToString(org.elasticsearch.bootstrap.JavaVersionTests)",
     "displayName": "testToString(org.elasticsearch.bootstrap.JavaVersionTests)",
     "methodName": "testToString",
     "className": "org.elasticsearch.bootstrap.JavaVersionTests",
     "children": []
    },
    {
     "id": "ID#testParse(org.elasticsearch.bootstrap.JavaVersionTests)",
     "displayName": "testParse(org.elasticsearch.bootstrap.JavaVersionTests)",
     "methodName": "testParse",
     "className": "org.elasticsearch.bootstrap.JavaVersionTests",
     "children": []
    },
    {
     "id": "ID#testCompare(org.elasticsearch.bootstrap.JavaVersionTests)",
     "displayName": "testCompare(org.elasticsearch.bootstrap.JavaVersionTests)",
     "methodName": "testCompare",
     "className": "org.elasticsearch.bootstrap.JavaVersionTests",
     "children": []
    },
    {
     "id": "ID#testInvalidVersions(org.elasticsearch.bootstrap.JavaVersionTests)",
     "displayName": "testInvalidVersions(org.elasticsearch.bootstrap.JavaVersionTests)",
     "methodName": "testInvalidVersions",
     "className": "org.elasticsearch.bootstrap.JavaVersionTests",
     "children": []
    },
    {
     "id": "ID#testValidVersions(org.elasticsearch.bootstrap.JavaVersionTests)",
     "displayName": "testValidVersions(org.elasticsearch.bootstrap.JavaVersionTests)",
     "methodName": "testValidVersions",
     "className": "org.elasticsearch.bootstrap.JavaVersionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197304436
 }
]

[
 "TEST_STARTED",
 "ID#testJava8Compat(org.elasticsearch.bootstrap.JavaVersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testJava8Compat(org.elasticsearch.bootstrap.JavaVersionTests)",
  "startTimestamp": 1474197304479,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToString(org.elasticsearch.bootstrap.JavaVersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToString(org.elasticsearch.bootstrap.JavaVersionTests)",
  "startTimestamp": 1474197304481,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParse(org.elasticsearch.bootstrap.JavaVersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParse(org.elasticsearch.bootstrap.JavaVersionTests)",
  "startTimestamp": 1474197304485,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testCompare(org.elasticsearch.bootstrap.JavaVersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompare(org.elasticsearch.bootstrap.JavaVersionTests)",
  "startTimestamp": 1474197304487,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidVersions(org.elasticsearch.bootstrap.JavaVersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidVersions(org.elasticsearch.bootstrap.JavaVersionTests)",
  "startTimestamp": 1474197304489,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValidVersions(org.elasticsearch.bootstrap.JavaVersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidVersions(org.elasticsearch.bootstrap.JavaVersionTests)",
  "startTimestamp": 1474197304491,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.bootstrap.JavaVersionTests",
  "startTimestamp": 1474197304436,
  "executionTime": 59
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.recovery.StartRecoveryRequestTests",
   "displayName": "org.elasticsearch.indices.recovery.StartRecoveryRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.recovery.StartRecoveryRequestTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.indices.recovery.StartRecoveryRequestTests)",
     "displayName": "testSerialization(org.elasticsearch.indices.recovery.StartRecoveryRequestTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.indices.recovery.StartRecoveryRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197304501
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.indices.recovery.StartRecoveryRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.indices.recovery.StartRecoveryRequestTests)",
  "startTimestamp": 1474197304530,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.recovery.StartRecoveryRequestTests",
  "startTimestamp": 1474197304501,
  "executionTime": 41
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.GeoFieldDataTests",
   "displayName": "org.elasticsearch.index.fielddata.GeoFieldDataTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.GeoFieldDataTests",
   "children": [
    {
     "id": "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "displayName": "testSortMultiValuesFields(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "methodName": "testSortMultiValuesFields",
     "className": "org.elasticsearch.index.fielddata.GeoFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testMultiValueAllSet(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "displayName": "testMultiValueAllSet(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "methodName": "testMultiValueAllSet",
     "className": "org.elasticsearch.index.fielddata.GeoFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSingleValueAllSet(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "displayName": "testSingleValueAllSet(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "methodName": "testSingleValueAllSet",
     "className": "org.elasticsearch.index.fielddata.GeoFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "displayName": "testEmpty(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.index.fielddata.GeoFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSingleValueWithMissing(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "displayName": "testSingleValueWithMissing(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "methodName": "testSingleValueWithMissing",
     "className": "org.elasticsearch.index.fielddata.GeoFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testMissingValueForAll(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "displayName": "testMissingValueForAll(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "methodName": "testMissingValueForAll",
     "className": "org.elasticsearch.index.fielddata.GeoFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testMultiValueWithMissing(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "displayName": "testMultiValueWithMissing(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "methodName": "testMultiValueWithMissing",
     "className": "org.elasticsearch.index.fielddata.GeoFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testDeletedDocs(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "displayName": "testDeletedDocs(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "methodName": "testDeletedDocs",
     "className": "org.elasticsearch.index.fielddata.GeoFieldDataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197304552
 }
]

[
 "TEST_STARTED",
 "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.GeoFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:04,632][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:04,664][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:04,664][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:04,668][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[564], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:04,671][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:04,671][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:04,818][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:04,818][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:04,819][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[11]}, bound_addresses {local[11]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:04,840][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{mfGLyNpeRbybQrYwt1IBnA}{eiO7OEp8TdinRl7yrC0ddw}{local}{local[11]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:04,842][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:04,860][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:04,882][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:05,029][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:05,081][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [GeoFieldDataTests#testSortMultiValuesFields]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
  "message": "Only test on non geo_point fields",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: Only test on non geo_point fields\r\n\tat __randomizedtesting.SeedInfo.seed([DB64F96F238DCA2A:8D02FBE1E8C3043C]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeFalse(RandomizedTest.java:635)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeFalse(LuceneTestCase.java:849)\r\n\tat org.elasticsearch.index.fielddata.AbstractGeoFieldDataTestCase.testSortMultiValuesFields(AbstractGeoFieldDataTestCase.java:88)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: Only test on non geo_point fields",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
  "startTimestamp": 1474197304620,
  "executionTime": 631
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValueAllSet(org.elasticsearch.index.fielddata.GeoFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:05,259][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:05,323][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:05,386][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [GeoFieldDataTests#testMultiValueAllSet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValueAllSet(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
  "startTimestamp": 1474197305251,
  "executionTime": 175
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValueAllSet(org.elasticsearch.index.fielddata.GeoFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:05,436][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:05,535][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:05,555][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [GeoFieldDataTests#testSingleValueAllSet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValueAllSet(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
  "startTimestamp": 1474197305426,
  "executionTime": 170
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.index.fielddata.GeoFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:05,604][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:05,660][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:05,692][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [GeoFieldDataTests#testEmpty]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
  "startTimestamp": 1474197305596,
  "executionTime": 133
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValueWithMissing(org.elasticsearch.index.fielddata.GeoFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:05,743][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:05,954][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:05,976][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [GeoFieldDataTests#testSingleValueWithMissing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValueWithMissing(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
  "startTimestamp": 1474197305729,
  "executionTime": 311
 }
]

[
 "TEST_STARTED",
 "ID#testMissingValueForAll(org.elasticsearch.index.fielddata.GeoFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:06,047][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:06,141][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:06,168][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [GeoFieldDataTests#testMissingValueForAll]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingValueForAll(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
  "startTimestamp": 1474197306040,
  "executionTime": 195
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValueWithMissing(org.elasticsearch.index.fielddata.GeoFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:06,242][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:06,374][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:06,448][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [GeoFieldDataTests#testMultiValueWithMissing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValueWithMissing(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
  "startTimestamp": 1474197306235,
  "executionTime": 256
 }
]

[
 "TEST_STARTED",
 "ID#testDeletedDocs(org.elasticsearch.index.fielddata.GeoFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:06,499][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:06,589][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:06,607][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [GeoFieldDataTests#testDeletedDocs]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeletedDocs(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
  "startTimestamp": 1474197306491,
  "executionTime": 227
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:06,718][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:06,719][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:06,719][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:15:06,722][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.GeoFieldDataTests",
  "startTimestamp": 1474197304552,
  "executionTime": 2189
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.PreferLocalPrimariesToRelocatingPrimariesTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.PreferLocalPrimariesToRelocatingPrimariesTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.PreferLocalPrimariesToRelocatingPrimariesTests",
   "children": [
    {
     "id": "ID#testPreferLocalPrimaryAllocationOverFiltered(org.elasticsearch.cluster.routing.allocation.PreferLocalPrimariesToRelocatingPrimariesTests)",
     "displayName": "testPreferLocalPrimaryAllocationOverFiltered(org.elasticsearch.cluster.routing.allocation.PreferLocalPrimariesToRelocatingPrimariesTests)",
     "methodName": "testPreferLocalPrimaryAllocationOverFiltered",
     "className": "org.elasticsearch.cluster.routing.allocation.PreferLocalPrimariesToRelocatingPrimariesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197306747
 }
]

[
 "TEST_STARTED",
 "ID#testPreferLocalPrimaryAllocationOverFiltered(org.elasticsearch.cluster.routing.allocation.PreferLocalPrimariesToRelocatingPrimariesTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:06,770][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] create an allocation with [7] initial primary recoveries and [4] concurrent recoveries%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:06,777][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] create 2 indices with [7] no replicas, and wait till all are allocated%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:06,778][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding two nodes and performing rerouting till all are allocated%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:06,782][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][2], [test2][6], [test2][4], [test2][0], [test1][1], [test1][3], [test1][5], [test2][1], [test2][3], [test2][5]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:06,782][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] remove one of the nodes and apply filter to move everything from another node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:06,785][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:06,786][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] [7] primaries should be still started but [7] other primaries should be unassigned%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:06,786][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start node back up%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:06,790][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [7], relocating: [0], need to initialize: 7%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:06,794][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [6], relocating: [0], need to initialize: 6%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:06,795][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [5], relocating: [0], need to initialize: 5%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:06,797][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [4], relocating: [0], need to initialize: 4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:06,800][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [3], relocating: [1], need to initialize: 3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:06,802][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [2], relocating: [2], need to initialize: 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:06,805][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [1], relocating: [3], need to initialize: 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:06,806][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [1], relocating: [3], need to initialize: 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:06,808][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test1][6]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:06,808][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [0], relocating: [4], need to initialize: 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:06,811][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [0], relocating: [4], need to initialize: 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:06,812][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [0], relocating: [4], need to initialize: 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:06,814][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [0], relocating: [3], need to initialize: 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:06,816][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [0], relocating: [2], need to initialize: 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:06,817][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [0], relocating: [1], need to initialize: 0%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreferLocalPrimaryAllocationOverFiltered(org.elasticsearch.cluster.routing.allocation.PreferLocalPrimariesToRelocatingPrimariesTests)",
  "startTimestamp": 1474197306768,
  "executionTime": 51
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.PreferLocalPrimariesToRelocatingPrimariesTests",
  "startTimestamp": 1474197306747,
  "executionTime": 74
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.json.JsonXContentTests",
   "displayName": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
   "children": [
    {
     "id": "ID#testMissingEndObject(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "displayName": "testMissingEndObject(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "methodName": "testMissingEndObject",
     "className": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
     "children": []
    },
    {
     "id": "ID#testRawValue(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "displayName": "testRawValue(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "methodName": "testRawValue",
     "className": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
     "children": []
    },
    {
     "id": "ID#testRawField(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "displayName": "testRawField(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "methodName": "testRawField",
     "className": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
     "children": []
    },
    {
     "id": "ID#testBasics(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "displayName": "testBasics(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "methodName": "testBasics",
     "className": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
     "children": []
    },
    {
     "id": "ID#testMissingEndArray(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "displayName": "testMissingEndArray(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "methodName": "testMissingEndArray",
     "className": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
     "children": []
    },
    {
     "id": "ID#testBigInteger(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "displayName": "testBigInteger(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "methodName": "testBigInteger",
     "className": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197306830
 }
]

[
 "TEST_STARTED",
 "ID#testMissingEndObject(org.elasticsearch.common.xcontent.json.JsonXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingEndObject(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
  "startTimestamp": 1474197306860,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRawValue(org.elasticsearch.common.xcontent.json.JsonXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawValue(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
  "startTimestamp": 1474197306862,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRawField(org.elasticsearch.common.xcontent.json.JsonXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawField(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
  "startTimestamp": 1474197306866,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testBasics(org.elasticsearch.common.xcontent.json.JsonXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasics(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
  "startTimestamp": 1474197306869,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMissingEndArray(org.elasticsearch.common.xcontent.json.JsonXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingEndArray(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
  "startTimestamp": 1474197306871,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBigInteger(org.elasticsearch.common.xcontent.json.JsonXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBigInteger(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
  "startTimestamp": 1474197306873,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.json.JsonXContentTests",
  "startTimestamp": 1474197306830,
  "executionTime": 47
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.FilterAllocationDeciderTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.FilterAllocationDeciderTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.FilterAllocationDeciderTests",
   "children": [
    {
     "id": "ID#testFilterInitialAllocation(org.elasticsearch.cluster.routing.allocation.FilterAllocationDeciderTests)",
     "displayName": "testFilterInitialAllocation(org.elasticsearch.cluster.routing.allocation.FilterAllocationDeciderTests)",
     "methodName": "testFilterInitialAllocation",
     "className": "org.elasticsearch.cluster.routing.allocation.FilterAllocationDeciderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197306883
 }
]

[
 "TEST_STARTED",
 "ID#testFilterInitialAllocation(org.elasticsearch.cluster.routing.allocation.FilterAllocationDeciderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:06,914][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [shards failed [[idx][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:06,917][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[idx][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:06,918][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [shards failed [[idx][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterInitialAllocation(org.elasticsearch.cluster.routing.allocation.FilterAllocationDeciderTests)",
  "startTimestamp": 1474197306901,
  "executionTime": 17
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.FilterAllocationDeciderTests",
  "startTimestamp": 1474197306883,
  "executionTime": 44
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.synonyms.SynonymsAnalysisTests",
   "displayName": "org.elasticsearch.index.analysis.synonyms.SynonymsAnalysisTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.synonyms.SynonymsAnalysisTests",
   "children": [
    {
     "id": "ID#testSynonymsAnalysis(org.elasticsearch.index.analysis.synonyms.SynonymsAnalysisTests)",
     "displayName": "testSynonymsAnalysis(org.elasticsearch.index.analysis.synonyms.SynonymsAnalysisTests)",
     "methodName": "testSynonymsAnalysis",
     "className": "org.elasticsearch.index.analysis.synonyms.SynonymsAnalysisTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197306933
 }
]

[
 "TEST_STARTED",
 "ID#testSynonymsAnalysis(org.elasticsearch.index.analysis.synonyms.SynonymsAnalysisTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSynonymsAnalysis(org.elasticsearch.index.analysis.synonyms.SynonymsAnalysisTests)",
  "startTimestamp": 1474197306962,
  "executionTime": 195
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.synonyms.SynonymsAnalysisTests",
  "startTimestamp": 1474197306933,
  "executionTime": 243
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.MultiFieldTests",
   "displayName": "org.elasticsearch.index.mapper.MultiFieldTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.MultiFieldTests",
   "children": [
    {
     "id": "ID#testMultiFieldWithDot(org.elasticsearch.index.mapper.MultiFieldTests)",
     "displayName": "testMultiFieldWithDot(org.elasticsearch.index.mapper.MultiFieldTests)",
     "methodName": "testMultiFieldWithDot",
     "className": "org.elasticsearch.index.mapper.MultiFieldTests",
     "children": []
    },
    {
     "id": "ID#testNestedFieldNotAllowed(org.elasticsearch.index.mapper.MultiFieldTests)",
     "displayName": "testNestedFieldNotAllowed(org.elasticsearch.index.mapper.MultiFieldTests)",
     "methodName": "testNestedFieldNotAllowed",
     "className": "org.elasticsearch.index.mapper.MultiFieldTests",
     "children": []
    },
    {
     "id": "ID#testMultiFieldsInConsistentOrder(org.elasticsearch.index.mapper.MultiFieldTests)",
     "displayName": "testMultiFieldsInConsistentOrder(org.elasticsearch.index.mapper.MultiFieldTests)",
     "methodName": "testMultiFieldsInConsistentOrder",
     "className": "org.elasticsearch.index.mapper.MultiFieldTests",
     "children": []
    },
    {
     "id": "ID#testBuildThenParse(org.elasticsearch.index.mapper.MultiFieldTests)",
     "displayName": "testBuildThenParse(org.elasticsearch.index.mapper.MultiFieldTests)",
     "methodName": "testBuildThenParse",
     "className": "org.elasticsearch.index.mapper.MultiFieldTests",
     "children": []
    },
    {
     "id": "ID#testMultiFieldMultiFields(org.elasticsearch.index.mapper.MultiFieldTests)",
     "displayName": "testMultiFieldMultiFields(org.elasticsearch.index.mapper.MultiFieldTests)",
     "methodName": "testMultiFieldMultiFields",
     "className": "org.elasticsearch.index.mapper.MultiFieldTests",
     "children": []
    },
    {
     "id": "ID#testObjectFieldNotAllowed(org.elasticsearch.index.mapper.MultiFieldTests)",
     "displayName": "testObjectFieldNotAllowed(org.elasticsearch.index.mapper.MultiFieldTests)",
     "methodName": "testObjectFieldNotAllowed",
     "className": "org.elasticsearch.index.mapper.MultiFieldTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197307184
 }
]

[
 "TEST_STARTED",
 "ID#testMultiFieldWithDot(org.elasticsearch.index.mapper.MultiFieldTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:07,238][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:07,268][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:07,269][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:07,272][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[564], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:07,275][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:07,275][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:07,452][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:07,453][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:07,453][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[12]}, bound_addresses {local[12]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:07,468][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{ZdLw2Hw3T_m2UUE-VS4BJA}{_yI0C0mXSSq8LcBSypWVfg}{local}{local[12]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:07,470][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:07,513][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:07,550][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:07,636][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:07,653][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [MultiFieldTests#testMultiFieldWithDot]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiFieldWithDot(org.elasticsearch.index.mapper.MultiFieldTests)",
  "startTimestamp": 1474197307225,
  "executionTime": 468
 }
]

[
 "TEST_STARTED",
 "ID#testNestedFieldNotAllowed(org.elasticsearch.index.mapper.MultiFieldTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:07,701][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:07,792][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:07,884][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [MultiFieldTests#testNestedFieldNotAllowed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedFieldNotAllowed(org.elasticsearch.index.mapper.MultiFieldTests)",
  "startTimestamp": 1474197307693,
  "executionTime": 235
 }
]

[
 "TEST_STARTED",
 "ID#testMultiFieldsInConsistentOrder(org.elasticsearch.index.mapper.MultiFieldTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:07,938][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:08,021][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:08,038][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [MultiFieldTests#testMultiFieldsInConsistentOrder]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiFieldsInConsistentOrder(org.elasticsearch.index.mapper.MultiFieldTests)",
  "startTimestamp": 1474197307928,
  "executionTime": 148
 }
]

[
 "TEST_STARTED",
 "ID#testBuildThenParse(org.elasticsearch.index.mapper.MultiFieldTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:08,085][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:08,144][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:08,173][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [MultiFieldTests#testBuildThenParse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuildThenParse(org.elasticsearch.index.mapper.MultiFieldTests)",
  "startTimestamp": 1474197308076,
  "executionTime": 132
 }
]

[
 "TEST_STARTED",
 "ID#testMultiFieldMultiFields(org.elasticsearch.index.mapper.MultiFieldTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:08,236][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:08,289][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:08,340][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [MultiFieldTests#testMultiFieldMultiFields]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiFieldMultiFields(org.elasticsearch.index.mapper.MultiFieldTests)",
  "startTimestamp": 1474197308209,
  "executionTime": 179
 }
]

[
 "TEST_STARTED",
 "ID#testObjectFieldNotAllowed(org.elasticsearch.index.mapper.MultiFieldTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:08,396][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:08,486][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:08,502][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [MultiFieldTests#testObjectFieldNotAllowed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testObjectFieldNotAllowed(org.elasticsearch.index.mapper.MultiFieldTests)",
  "startTimestamp": 1474197308389,
  "executionTime": 148
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:08,537][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:08,539][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:08,539][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:08,541][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.MultiFieldTests",
  "startTimestamp": 1474197307184,
  "executionTime": 1365
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.support.XContentHelperTests",
   "displayName": "org.elasticsearch.common.xcontent.support.XContentHelperTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.support.XContentHelperTests",
   "children": [
    {
     "id": "ID#testMergingListValuesAreMapsOfOne(org.elasticsearch.common.xcontent.support.XContentHelperTests)",
     "displayName": "testMergingListValuesAreMapsOfOne(org.elasticsearch.common.xcontent.support.XContentHelperTests)",
     "methodName": "testMergingListValuesAreMapsOfOne",
     "className": "org.elasticsearch.common.xcontent.support.XContentHelperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197308555
 }
]

[
 "TEST_STARTED",
 "ID#testMergingListValuesAreMapsOfOne(org.elasticsearch.common.xcontent.support.XContentHelperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergingListValuesAreMapsOfOne(org.elasticsearch.common.xcontent.support.XContentHelperTests)",
  "startTimestamp": 1474197308594,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.support.XContentHelperTests",
  "startTimestamp": 1474197308555,
  "executionTime": 46
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.DocumentMapperParserTests",
   "displayName": "org.elasticsearch.index.mapper.DocumentMapperParserTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.DocumentMapperParserTests",
   "children": [
    {
     "id": "ID#testFieldNameWithDots(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
     "displayName": "testFieldNameWithDots(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
     "methodName": "testFieldNameWithDots",
     "className": "org.elasticsearch.index.mapper.DocumentMapperParserTests",
     "children": []
    },
    {
     "id": "ID#testTypeLevel(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
     "displayName": "testTypeLevel(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
     "methodName": "testTypeLevel",
     "className": "org.elasticsearch.index.mapper.DocumentMapperParserTests",
     "children": []
    },
    {
     "id": "ID#testFieldNameWithDotsConflict(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
     "displayName": "testFieldNameWithDotsConflict(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
     "methodName": "testFieldNameWithDotsConflict",
     "className": "org.elasticsearch.index.mapper.DocumentMapperParserTests",
     "children": []
    },
    {
     "id": "ID#testFieldNameWithDeepDots(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
     "displayName": "testFieldNameWithDeepDots(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
     "methodName": "testFieldNameWithDeepDots",
     "className": "org.elasticsearch.index.mapper.DocumentMapperParserTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197308607
 }
]

[
 "TEST_STARTED",
 "ID#testFieldNameWithDots(org.elasticsearch.index.mapper.DocumentMapperParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:08,647][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:08,675][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:08,675][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:08,683][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[564], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:08,692][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:08,692][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:08,893][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:08,893][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:08,893][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[13]}, bound_addresses {local[13]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:08,895][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{tyhMOksRRGKas7BOZr1nVg}{e-z9UxYeQZOCMmbIvnAreg}{local}{local[13]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:08,896][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:08,915][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:08,938][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:08,999][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:09,013][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentMapperParserTests#testFieldNameWithDots]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldNameWithDots(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
  "startTimestamp": 1474197308638,
  "executionTime": 429
 }
]

[
 "TEST_STARTED",
 "ID#testTypeLevel(org.elasticsearch.index.mapper.DocumentMapperParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:09,074][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:09,153][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:09,175][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentMapperParserTests#testTypeLevel]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeLevel(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
  "startTimestamp": 1474197309067,
  "executionTime": 427
 }
]

[
 "TEST_STARTED",
 "ID#testFieldNameWithDotsConflict(org.elasticsearch.index.mapper.DocumentMapperParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:09,501][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:09,608][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:09,621][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentMapperParserTests#testFieldNameWithDotsConflict]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldNameWithDotsConflict(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
  "startTimestamp": 1474197309494,
  "executionTime": 172
 }
]

[
 "TEST_STARTED",
 "ID#testFieldNameWithDeepDots(org.elasticsearch.index.mapper.DocumentMapperParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:09,673][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:09,726][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:09,744][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentMapperParserTests#testFieldNameWithDeepDots]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldNameWithDeepDots(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
  "startTimestamp": 1474197309666,
  "executionTime": 135
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:09,802][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:09,802][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:09,803][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:15:09,805][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.DocumentMapperParserTests",
  "startTimestamp": 1474197308607,
  "executionTime": 1204
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests",
   "displayName": "org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests",
   "children": [
    {
     "id": "ID#testSetSource(org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests)",
     "displayName": "testSetSource(org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests)",
     "methodName": "testSetSource",
     "className": "org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSetSettings(org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests)",
     "displayName": "testSetSettings(org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests)",
     "methodName": "testSetSettings",
     "className": "org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197309818
 }
]

[
 "TEST_STARTED",
 "ID#testSetSource(org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetSource(org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests)",
  "startTimestamp": 1474197309848,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testSetSettings(org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetSettings(org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests)",
  "startTimestamp": 1474197309855,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests",
  "startTimestamp": 1474197309818,
  "executionTime": 43
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests",
   "children": [
    {
     "id": "ID#testMinimalRelocations(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)",
     "displayName": "testMinimalRelocations(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)",
     "methodName": "testMinimalRelocations",
     "className": "org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests",
     "children": []
    },
    {
     "id": "ID#testAddNodesAndIndices(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)",
     "displayName": "testAddNodesAndIndices(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)",
     "methodName": "testAddNodesAndIndices",
     "className": "org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests",
     "children": []
    },
    {
     "id": "ID#testMinimalRelocationsNoLimit(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)",
     "displayName": "testMinimalRelocationsNoLimit(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)",
     "methodName": "testMinimalRelocationsNoLimit",
     "className": "org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197309869
 }
]

[
 "TEST_STARTED",
 "ID#testMinimalRelocations(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:09,912][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start 1 nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:09,920][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] restart all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:09,922][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:09,923][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:09,925][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start [1] more node, check that rebalancing will happen because we set it to always%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:09,957][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test0][2]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:09,958][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start one more node, check that rebalancing will happen because we set it to always%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinimalRelocations(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)",
  "startTimestamp": 1474197309905,
  "executionTime": 68
 }
]

[
 "TEST_STARTED",
 "ID#testAddNodesAndIndices(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:09,980][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start 1 nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:09,984][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] restart all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:09,985][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:09,987][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:09,989][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start [1] more node, check that rebalancing will happen because we set it to always%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:10,001][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test0][2]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:10,002][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start [1] more node, check that rebalancing will happen because we set it to always%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:10,007][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start [1] more node, check that rebalancing will happen because we set it to always%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:10,012][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Removing [1] nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:10,014][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:10,014][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:10,020][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:10,021][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0], [test0][1]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:10,021][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:10,021][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:10,023][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] restart all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:10,024][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:10,025][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:10,028][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] restart all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:10,029][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:10,034][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:10,035][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start [1] more node, check that rebalancing will happen because we set it to always%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:10,044][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test3][1], [test3][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:10,048][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Removing [1] nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:10,051][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:10,051][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:10,053][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:10,054][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:10,055][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:10,056][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start [1] more node, check that rebalancing will happen because we set it to always%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:10,062][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test3][1], [test3][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddNodesAndIndices(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)",
  "startTimestamp": 1474197309973,
  "executionTime": 94
 }
]

[
 "TEST_STARTED",
 "ID#testMinimalRelocationsNoLimit(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:10,075][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start 1 nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:10,076][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] restart all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:10,077][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:10,077][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:10,077][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start [1] more node, check that rebalancing will happen because we set it to always%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:10,080][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][1], [test2][2], [test2][0], [test0][1], [test0][2], [test0][0], [test1][1], [test1][2], [test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:15:10,080][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start one more node, check that rebalancing will happen because we set it to always%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinimalRelocationsNoLimit(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)",
  "startTimestamp": 1474197310067,
  "executionTime": 18
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests",
  "startTimestamp": 1474197309869,
  "executionTime": 218
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.ReplicaAllocatedAfterPrimaryTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.ReplicaAllocatedAfterPrimaryTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.ReplicaAllocatedAfterPrimaryTests",
   "children": [
    {
     "id": "ID#testBackupIsAllocatedAfterPrimary(org.elasticsearch.cluster.routing.allocation.ReplicaAllocatedAfterPrimaryTests)",
     "displayName": "testBackupIsAllocatedAfterPrimary(org.elasticsearch.cluster.routing.allocation.ReplicaAllocatedAfterPrimaryTests)",
     "methodName": "testBackupIsAllocatedAfterPrimary",
     "className": "org.elasticsearch.cluster.routing.allocation.ReplicaAllocatedAfterPrimaryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197310093
 }
]

[
 "TEST_STARTED",
 "ID#testBackupIsAllocatedAfterPrimary(org.elasticsearch.cluster.routing.allocation.ReplicaAllocatedAfterPrimaryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:10,115][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:10,183][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding one node and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:15:10,184][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start all the primary shards%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBackupIsAllocatedAfterPrimary(org.elasticsearch.cluster.routing.allocation.ReplicaAllocatedAfterPrimaryTests)",
  "startTimestamp": 1474197310108,
  "executionTime": 77
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.ReplicaAllocatedAfterPrimaryTests",
  "startTimestamp": 1474197310093,
  "executionTime": 108
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.health.ClusterStateHealthTests",
   "displayName": "org.elasticsearch.cluster.health.ClusterStateHealthTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.health.ClusterStateHealthTests",
   "children": [
    {
     "id": "ID#testClusterHealthOnClusterRecoveryWithPreviousAllocationIds(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "displayName": "testClusterHealthOnClusterRecoveryWithPreviousAllocationIds(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "methodName": "testClusterHealthOnClusterRecoveryWithPreviousAllocationIds",
     "className": "org.elasticsearch.cluster.health.ClusterStateHealthTests",
     "children": []
    },
    {
     "id": "ID#testClusterHealthOnClusterRecoveryWithPreviousAllocationIdsAndAllocationFailures(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "displayName": "testClusterHealthOnClusterRecoveryWithPreviousAllocationIdsAndAllocationFailures(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "methodName": "testClusterHealthOnClusterRecoveryWithPreviousAllocationIdsAndAllocationFailures",
     "className": "org.elasticsearch.cluster.health.ClusterStateHealthTests",
     "children": []
    },
    {
     "id": "ID#testClusterHealthOnIndexCreationWithFailedAllocations(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "displayName": "testClusterHealthOnIndexCreationWithFailedAllocations(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "methodName": "testClusterHealthOnIndexCreationWithFailedAllocations",
     "className": "org.elasticsearch.cluster.health.ClusterStateHealthTests",
     "children": []
    },
    {
     "id": "ID#testClusterHealthOnClusterRecoveryWithFailures(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "displayName": "testClusterHealthOnClusterRecoveryWithFailures(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "methodName": "testClusterHealthOnClusterRecoveryWithFailures",
     "className": "org.elasticsearch.cluster.health.ClusterStateHealthTests",
     "children": []
    },
    {
     "id": "ID#testClusterHealthWaitsForClusterStateApplication(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "displayName": "testClusterHealthWaitsForClusterStateApplication(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "methodName": "testClusterHealthWaitsForClusterStateApplication",
     "className": "org.elasticsearch.cluster.health.ClusterStateHealthTests",
     "children": []
    },
    {
     "id": "ID#testClusterHealthOnClusterRecovery(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "displayName": "testClusterHealthOnClusterRecovery(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "methodName": "testClusterHealthOnClusterRecovery",
     "className": "org.elasticsearch.cluster.health.ClusterStateHealthTests",
     "children": []
    },
    {
     "id": "ID#testClusterHealthOnIndexCreation(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "displayName": "testClusterHealthOnIndexCreation(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "methodName": "testClusterHealthOnIndexCreation",
     "className": "org.elasticsearch.cluster.health.ClusterStateHealthTests",
     "children": []
    },
    {
     "id": "ID#testClusterHealth(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "displayName": "testClusterHealth(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "methodName": "testClusterHealth",
     "className": "org.elasticsearch.cluster.health.ClusterStateHealthTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197310215
 }
]

[
 "TEST_STARTED",
 "ID#testClusterHealthOnClusterRecoveryWithPreviousAllocationIds(org.elasticsearch.cluster.health.ClusterStateHealthTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:10,301][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{M1IYQnuJQgeWAMZtnRXirw}{local}{local[85]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterHealthOnClusterRecoveryWithPreviousAllocationIds(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
  "startTimestamp": 1474197310263,
  "executionTime": 43
 }
]

[
 "TEST_STARTED",
 "ID#testClusterHealthOnClusterRecoveryWithPreviousAllocationIdsAndAllocationFailures(org.elasticsearch.cluster.health.ClusterStateHealthTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:10,314][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Vry3925pRWiAIb8DIL01zQ}{local}{local[86]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterHealthOnClusterRecoveryWithPreviousAllocationIdsAndAllocationFailures(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
  "startTimestamp": 1474197310306,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testClusterHealthOnIndexCreationWithFailedAllocations(org.elasticsearch.cluster.health.ClusterStateHealthTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:10,355][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Q3O0yYMnRTO8QtcAfySdsw}{local}{local[87]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterHealthOnIndexCreationWithFailedAllocations(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
  "startTimestamp": 1474197310325,
  "executionTime": 32
 }
]

[
 "TEST_STARTED",
 "ID#testClusterHealthOnClusterRecoveryWithFailures(org.elasticsearch.cluster.health.ClusterStateHealthTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:10,363][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{VXsQTSm1R5yxa8pbSRLPvA}{local}{local[88]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterHealthOnClusterRecoveryWithFailures(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
  "startTimestamp": 1474197310357,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testClusterHealthWaitsForClusterStateApplication(org.elasticsearch.cluster.health.ClusterStateHealthTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:10,372][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{lCBHi1HuShSJTzPVCAApIQ}{local}{local[89]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:10,374][INFO ][org.elasticsearch.cluster.health] --> waiting for listener to be called and cluster state being blocked%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterHealthWaitsForClusterStateApplication(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
  "startTimestamp": 1474197310365,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testClusterHealthOnClusterRecovery(org.elasticsearch.cluster.health.ClusterStateHealthTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:10,438][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{_slSIHmJS0uMaguQ-EODtw}{local}{local[90]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterHealthOnClusterRecovery(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
  "startTimestamp": 1474197310378,
  "executionTime": 62
 }
]

[
 "TEST_STARTED",
 "ID#testClusterHealthOnIndexCreation(org.elasticsearch.cluster.health.ClusterStateHealthTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:10,457][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Zp5POtuEQTq5lrm4Awlg0w}{local}{local[91]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterHealthOnIndexCreation(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
  "startTimestamp": 1474197310441,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testClusterHealth(org.elasticsearch.cluster.health.ClusterStateHealthTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:10,473][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{65BaaVjoQK6DnNk6GaO5fg}{local}{local[92]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:10,484][INFO ][org.elasticsearch.cluster.health] cluster status: YELLOW, expected YELLOW%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterHealth(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
  "startTimestamp": 1474197310461,
  "executionTime": 32
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.health.ClusterStateHealthTests",
  "startTimestamp": 1474197310215,
  "executionTime": 342
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.DynamicMappingDisabledTests",
   "displayName": "org.elasticsearch.index.mapper.DynamicMappingDisabledTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.DynamicMappingDisabledTests",
   "children": [
    {
     "id": "ID#testDynamicDisabled(org.elasticsearch.index.mapper.DynamicMappingDisabledTests)",
     "displayName": "testDynamicDisabled(org.elasticsearch.index.mapper.DynamicMappingDisabledTests)",
     "methodName": "testDynamicDisabled",
     "className": "org.elasticsearch.index.mapper.DynamicMappingDisabledTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197310564
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDisabled(org.elasticsearch.index.mapper.DynamicMappingDisabledTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:10,636][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:10,670][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:10,670][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:10,675][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[564], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:10,677][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:10,678][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:10,803][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:10,803][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:10,804][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[14]}, bound_addresses {local[14]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:10,829][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{JTRyyDwYSdyCHc7ynHz8_w}{4TKKIPvRQYKYtBhYG5DksQ}{local}{local[14]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:10,830][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:10,869][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:10,889][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{IUeukGc9T1GqsGP3-tTm-g}{local}{local[93]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 07:15:10,920 TEST-DynamicMappingDisabledTests.testDynamicDisabled-seed#[DB64F96F238DCA2A] ERROR An exception occurred processing Appender console java.security.AccessControlException: access denied (\"java.lang.RuntimePermission\" \"accessClassInPackage.sun.reflect\")%0D%0A%09at java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)%0D%0A%09at java.security.AccessController.checkPermission(AccessController.java:884)%0D%0A%09at java.lang.SecurityManager.checkPermission(SecurityManager.java:549)%0D%0A%09at java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1564)%0D%0A%09at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:311)%0D%0A%09at java.lang.ClassLoader.loadClass(ClassLoader.java:357)%0D%0A%09at java.lang.Class.forName0(Native Method)%0D%0A%09at java.lang.Class.forName(Class.java:264)%0D%0A%09at org.apache.logging.log4j.util.LoaderUtil.loadClass(LoaderUtil.java:122)%0D%0A%09at org.apache.logging.log4j.core.util.Loader.loadClass(Loader.java:228)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.loadClass(ThrowableProxy.java:496)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.toExtendedStackTrace(ThrowableProxy.java:617)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:135)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:117)%0D%0A%09at org.apache.logging.log4j.core.impl.MutableLogEvent.getThrownProxy(MutableLogEvent.java:314)%0D%0A%09at org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter.format(ExtendedThrowablePatternConverter.java:61)%0D%0A%09at org.apache.logging.log4j.core.pattern.PatternFormatter.format(PatternFormatter.java:38)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout$PatternSerializer.toSerializable(PatternLayout.java:294)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.toText(PatternLayout.java:195)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:180)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:57)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.directEncodeEvent(AbstractOutputStreamAppender.java:120)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.tryAppend(AbstractOutputStreamAppender.java:113)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.append(AbstractOutputStreamAppender.java:104)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.tryCallAppender(AppenderControl.java:155)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender0(AppenderControl.java:128)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppenderPreventRecursion(AppenderControl.java:119)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender(AppenderControl.java:84)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.callAppenders(LoggerConfig.java:390)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:375)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:359)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:349)%0D%0A%09at org.apache.logging.log4j.core.config.AwaitCompletionReliabilityStrategy.log(AwaitCompletionReliabilityStrategy.java:63)%0D%0A%09at org.apache.logging.log4j.core.Logger.logMessage(Logger.java:146)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logMessage(AbstractLogger.java:1983)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled(AbstractLogger.java:1845)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.warn(AbstractLogger.java:2536)%0D%0A%09at org.elasticsearch.action.support.replication.TransportReplicationAction$ReroutePhase.finishWithUnexpectedFailure(TransportReplicationAction.java:761)%0D%0A%09at org.elasticsearch.action.support.replication.TransportReplicationAction$ReroutePhase.onFailure(TransportReplicationAction.java:558)%0D%0A%09at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:39)%0D%0A%09at org.elasticsearch.action.support.replication.TransportReplicationAction.doExecute(TransportReplicationAction.java:135)%0D%0A%09at org.elasticsearch.action.index.TransportIndexAction.innerExecute(TransportIndexAction.java:134)%0D%0A%09at org.elasticsearch.action.index.TransportIndexAction.doExecute(TransportIndexAction.java:118)%0D%0A%09at org.elasticsearch.action.index.TransportIndexAction.doExecute(TransportIndexAction.java:63)%0D%0A%09at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:146)%0D%0A%09at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:87)%0D%0A%09at org.elasticsearch.index.mapper.DynamicMappingDisabledTests.testDynamicDisabled(DynamicMappingDisabledTests.java:113)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0D%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0D%0A%09at java.lang.reflect.Method.invoke(Method.java:498)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLea"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "kControl.java:367)%0D%0A%09at java.lang.Thread.run(Thread.java:745)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:10,950][INFO ][org.elasticsearch.index.mapper] [node_s_0] [enuxMrsYQFSwlG3YOIAEiw] [DynamicMappingDisabledTests#testDynamicDisabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDisabled(org.elasticsearch.index.mapper.DynamicMappingDisabledTests)",
  "startTimestamp": 1474197310620,
  "executionTime": 332
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:10,953][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:10,953][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:10,954][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:10,956][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.DynamicMappingDisabledTests",
  "startTimestamp": 1474197310564,
  "executionTime": 399
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.functionscore.FunctionScoreTests",
   "displayName": "org.elasticsearch.index.query.functionscore.FunctionScoreTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.functionscore.FunctionScoreTests",
   "children": [
    {
     "id": "ID#testExplainFiltersFunctionScoreQuery(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "displayName": "testExplainFiltersFunctionScoreQuery(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "methodName": "testExplainFiltersFunctionScoreQuery",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreTests",
     "children": []
    },
    {
     "id": "ID#testWeightOnlyCreatesBoostFunction(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "displayName": "testWeightOnlyCreatesBoostFunction(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "methodName": "testWeightOnlyCreatesBoostFunction",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreTests",
     "children": []
    },
    {
     "id": "ID#testSimpleWeightedFunction(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "displayName": "testSimpleWeightedFunction(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "methodName": "testSimpleWeightedFunction",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreTests",
     "children": []
    },
    {
     "id": "ID#testMinScoreExplain(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "displayName": "testMinScoreExplain(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "methodName": "testMinScoreExplain",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreTests",
     "children": []
    },
    {
     "id": "ID#testPropagatesApproximations(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "displayName": "testPropagatesApproximations(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "methodName": "testPropagatesApproximations",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreTests",
     "children": []
    },
    {
     "id": "ID#testFilterFunctionScoreHashCodeAndEquals(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "displayName": "testFilterFunctionScoreHashCodeAndEquals(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "methodName": "testFilterFunctionScoreHashCodeAndEquals",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreTests",
     "children": []
    },
    {
     "id": "ID#testFunctionScoreHashCodeAndEquals(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "displayName": "testFunctionScoreHashCodeAndEquals(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "methodName": "testFunctionScoreHashCodeAndEquals",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreTests",
     "children": []
    },
    {
     "id": "ID#testExplainFunctionScoreQuery(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "displayName": "testExplainFunctionScoreQuery(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "methodName": "testExplainFunctionScoreQuery",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreTests",
     "children": []
    },
    {
     "id": "ID#testExplanationAndScoreEqualsEvenIfNoFunctionMatches(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "displayName": "testExplanationAndScoreEqualsEvenIfNoFunctionMatches(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "methodName": "testExplanationAndScoreEqualsEvenIfNoFunctionMatches",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197310976
 }
]

[
 "TEST_STARTED",
 "ID#testExplainFiltersFunctionScoreQuery(org.elasticsearch.index.query.functionscore.FunctionScoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExplainFiltersFunctionScoreQuery(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
  "startTimestamp": 1474197311098,
  "executionTime": 117
 }
]

[
 "TEST_STARTED",
 "ID#testWeightOnlyCreatesBoostFunction(org.elasticsearch.index.query.functionscore.FunctionScoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWeightOnlyCreatesBoostFunction(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
  "startTimestamp": 1474197311215,
  "executionTime": 95
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleWeightedFunction(org.elasticsearch.index.query.functionscore.FunctionScoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleWeightedFunction(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
  "startTimestamp": 1474197311310,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testMinScoreExplain(org.elasticsearch.index.query.functionscore.FunctionScoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinScoreExplain(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
  "startTimestamp": 1474197311331,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testPropagatesApproximations(org.elasticsearch.index.query.functionscore.FunctionScoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPropagatesApproximations(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
  "startTimestamp": 1474197311343,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testFilterFunctionScoreHashCodeAndEquals(org.elasticsearch.index.query.functionscore.FunctionScoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterFunctionScoreHashCodeAndEquals(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
  "startTimestamp": 1474197311366,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testFunctionScoreHashCodeAndEquals(org.elasticsearch.index.query.functionscore.FunctionScoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFunctionScoreHashCodeAndEquals(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
  "startTimestamp": 1474197311386,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testExplainFunctionScoreQuery(org.elasticsearch.index.query.functionscore.FunctionScoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExplainFunctionScoreQuery(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
  "startTimestamp": 1474197311398,
  "executionTime": 48
 }
]

[
 "TEST_STARTED",
 "ID#testExplanationAndScoreEqualsEvenIfNoFunctionMatches(org.elasticsearch.index.query.functionscore.FunctionScoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExplanationAndScoreEqualsEvenIfNoFunctionMatches(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
  "startTimestamp": 1474197311446,
  "executionTime": 28
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.functionscore.FunctionScoreTests",
  "startTimestamp": 1474197310976,
  "executionTime": 500
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.watcher.ResourceWatcherServiceTests",
   "displayName": "org.elasticsearch.watcher.ResourceWatcherServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.watcher.ResourceWatcherServiceTests",
   "children": [
    {
     "id": "ID#testSettings(org.elasticsearch.watcher.ResourceWatcherServiceTests)",
     "displayName": "testSettings(org.elasticsearch.watcher.ResourceWatcherServiceTests)",
     "methodName": "testSettings",
     "className": "org.elasticsearch.watcher.ResourceWatcherServiceTests",
     "children": []
    },
    {
     "id": "ID#testHandle(org.elasticsearch.watcher.ResourceWatcherServiceTests)",
     "displayName": "testHandle(org.elasticsearch.watcher.ResourceWatcherServiceTests)",
     "methodName": "testHandle",
     "className": "org.elasticsearch.watcher.ResourceWatcherServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197311483
 }
]

[
 "TEST_STARTED",
 "ID#testSettings(org.elasticsearch.watcher.ResourceWatcherServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSettings(org.elasticsearch.watcher.ResourceWatcherServiceTests)",
  "startTimestamp": 1474197311521,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testHandle(org.elasticsearch.watcher.ResourceWatcherServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHandle(org.elasticsearch.watcher.ResourceWatcherServiceTests)",
  "startTimestamp": 1474197311526,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.watcher.ResourceWatcherServiceTests",
  "startTimestamp": 1474197311483,
  "executionTime": 50
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.rest.action.cat.RestRecoveryActionTests",
   "displayName": "org.elasticsearch.rest.action.cat.RestRecoveryActionTests",
   "methodName": null,
   "className": "org.elasticsearch.rest.action.cat.RestRecoveryActionTests",
   "children": [
    {
     "id": "ID#testRestRecoveryAction(org.elasticsearch.rest.action.cat.RestRecoveryActionTests)",
     "displayName": "testRestRecoveryAction(org.elasticsearch.rest.action.cat.RestRecoveryActionTests)",
     "methodName": "testRestRecoveryAction",
     "className": "org.elasticsearch.rest.action.cat.RestRecoveryActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197311540
 }
]

[
 "TEST_STARTED",
 "ID#testRestRecoveryAction(org.elasticsearch.rest.action.cat.RestRecoveryActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestRecoveryAction(org.elasticsearch.rest.action.cat.RestRecoveryActionTests)",
  "startTimestamp": 1474197311576,
  "executionTime": 326
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.rest.action.cat.RestRecoveryActionTests",
  "startTimestamp": 1474197311540,
  "executionTime": 377
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
   "displayName": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
   "children": [
    {
     "id": "ID#testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testMultipleFieldsInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSingleFieldWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSimpleArrayInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSingleFieldObject",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRecurseField1Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSimpleArrayExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRawField(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRawField",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRecurseField3Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testNoFiltering",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRecurseField4Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testNoMatch(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testNoMatch",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRecursiveObjectsPropertiesWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRecurseField1Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRecurseField3Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsPropertyInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testMultipleFieldsExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRecurseField4Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRecurseField2Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRecursiveSameObjectWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSimpleFieldWithWildcardInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSimpleFieldInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testArrays(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testArrays",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSimpleFieldWithWildcardExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsPropertyExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testWithLfAtEnd",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRecursiveObjectsInArrayWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRecurseField2Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSimpleFieldExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testObjectsInArrayWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testEmptyObject",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197311932
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474197311966,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474197311986,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474197311988,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474197311994,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474197311997,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474197312000,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474197312003,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474197312010,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474197312012,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474197312017,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474197312020,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474197312023,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474197312026,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474197312029,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474197312032,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474197312035,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474197312064,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474197312069,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474197312071,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474197312074,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474197312076,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474197312078,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474197312080,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474197312082,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474197312085,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474197312088,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474197312090,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474197312093,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474197312096,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474197312100,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474197312103,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474197312105,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
  "startTimestamp": 1474197311932,
  "executionTime": 180
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
   "displayName": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
   "children": [
    {
     "id": "ID#testActualMissingValue(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testActualMissingValue(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testActualMissingValue",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testGlobalOrdinalsGetRemovedOnceIndexReaderCloses(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testGlobalOrdinalsGetRemovedOnceIndexReaderCloses(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testGlobalOrdinalsGetRemovedOnceIndexReaderCloses",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testTermsEnum(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testTermsEnum(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testTermsEnum",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMissingFirst(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testSortMissingFirst(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testSortMissingFirst",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSingleValueWithMissing(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testSingleValueWithMissing(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testSingleValueWithMissing",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testMissingValueForAll(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testMissingValueForAll(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testMissingValueForAll",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testEmpty(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMissingLast(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testSortMissingLast(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testSortMissingLast",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testMultiValueWithMissing(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testMultiValueWithMissing(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testMultiValueWithMissing",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testNestedSortingMax(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testNestedSortingMax(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testNestedSortingMax",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testMultiValueAllSet(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testMultiValueAllSet(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testMultiValueAllSet",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testNestedSortingMin(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testNestedSortingMin(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testNestedSortingMin",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMissingFirstReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testSortMissingFirstReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testSortMissingFirstReverse",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testSortMultiValuesFields(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testSortMultiValuesFields",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSingleValueAllSet(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testSingleValueAllSet(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testSingleValueAllSet",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testGlobalOrdinals(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testGlobalOrdinals(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testGlobalOrdinals",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testDeletedDocs(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testDeletedDocs(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testDeletedDocs",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMissingLastReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testSortMissingLastReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testSortMissingLastReverse",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testActualMissingValueReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testActualMissingValueReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testActualMissingValueReverse",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197312121
 }
]

[
 "TEST_STARTED",
 "ID#testActualMissingValue(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:12,179][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:12,205][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:12,205][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:12,211][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[564], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:12,213][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:12,214][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:12,409][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:12,409][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:12,410][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[15]}, bound_addresses {local[15]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:12,415][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{sCURlZYaSKaIpdbm_GhH_w}{DQ3BGUujRmC1OshKcMo4jA}{local}{local[15]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:12,417][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:12,436][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:12,462][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:12,621][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:13,138][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testActualMissingValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActualMissingValue(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474197312143,
  "executionTime": 1044
 }
]

[
 "TEST_STARTED",
 "ID#testGlobalOrdinalsGetRemovedOnceIndexReaderCloses(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:13,211][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:13,410][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:13,453][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testGlobalOrdinalsGetRemovedOnceIndexReaderCloses]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGlobalOrdinalsGetRemovedOnceIndexReaderCloses(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474197313187,
  "executionTime": 305
 }
]

[
 "TEST_STARTED",
 "ID#testTermsEnum(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:13,503][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:13,602][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:13,622][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testTermsEnum]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermsEnum(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474197313493,
  "executionTime": 317
 }
]

[
 "TEST_STARTED",
 "ID#testSortMissingFirst(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:13,817][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:13,874][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:14,417][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testSortMissingFirst]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMissingFirst(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474197313810,
  "executionTime": 679
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValueWithMissing(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:14,501][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:14,670][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:14,690][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testSingleValueWithMissing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValueWithMissing(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474197314490,
  "executionTime": 286
 }
]

[
 "TEST_STARTED",
 "ID#testMissingValueForAll(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:14,782][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:14,849][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:14,867][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testMissingValueForAll]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingValueForAll(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474197314776,
  "executionTime": 219
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:15,010][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:15,088][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:15,115][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testEmpty]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474197314997,
  "executionTime": 160
 }
]

[
 "TEST_STARTED",
 "ID#testSortMissingLast(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:15,164][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:15,216][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:15,930][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testSortMissingLast]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMissingLast(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474197315158,
  "executionTime": 1220
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValueWithMissing(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:16,386][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:16,577][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:16,604][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testMultiValueWithMissing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValueWithMissing(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474197316379,
  "executionTime": 281
 }
]

[
 "TEST_STARTED",
 "ID#testNestedSortingMax(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:16,670][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:16,769][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:17,693][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testNestedSortingMax]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedSortingMax(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474197316660,
  "executionTime": 1173
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValueAllSet(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:17,840][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:17,911][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:17,957][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testMultiValueAllSet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValueAllSet(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474197317833,
  "executionTime": 207
 }
]

[
 "TEST_STARTED",
 "ID#testNestedSortingMin(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:18,050][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:18,162][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:18,372][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testNestedSortingMin]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedSortingMin(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474197318041,
  "executionTime": 439
 }
]

[
 "TEST_STARTED",
 "ID#testSortMissingFirstReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:18,487][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:18,564][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:18,591][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testSortMissingFirstReverse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMissingFirstReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474197318480,
  "executionTime": 153
 }
]

[
 "TEST_STARTED",
 "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:18,641][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:18,764][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:18,795][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testSortMultiValuesFields]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474197318633,
  "executionTime": 199
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValueAllSet(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:18,844][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:18,984][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:19,024][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testSingleValueAllSet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValueAllSet(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474197318833,
  "executionTime": 219
 }
]

[
 "TEST_STARTED",
 "ID#testGlobalOrdinals(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:19,059][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:19,122][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:19,147][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testGlobalOrdinals]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGlobalOrdinals(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474197319052,
  "executionTime": 138
 }
]

[
 "TEST_STARTED",
 "ID#testDeletedDocs(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:19,198][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:19,272][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:19,288][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testDeletedDocs]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeletedDocs(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474197319191,
  "executionTime": 145
 }
]

[
 "TEST_STARTED",
 "ID#testSortMissingLastReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:19,343][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:19,402][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:19,901][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testSortMissingLastReverse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMissingLastReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474197319336,
  "executionTime": 958
 }
]

[
 "TEST_STARTED",
 "ID#testActualMissingValueReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:20,302][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:20,417][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:20,434][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testActualMissingValueReverse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActualMissingValueReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474197320294,
  "executionTime": 408
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:20,703][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:20,703][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:20,703][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:15:20,711][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
  "startTimestamp": 1474197312121,
  "executionTime": 8615
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.UidFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.UidFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.UidFieldTypeTests",
   "children": [
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.UidFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.UidFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.UidFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.UidFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.UidFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testRangeQuery(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "displayName": "testRangeQuery(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "methodName": "testRangeQuery",
     "className": "org.elasticsearch.index.mapper.UidFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197320744
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.UidFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.UidFieldTypeTests)",
  "startTimestamp": 1474197320826,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.UidFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.UidFieldTypeTests)",
  "startTimestamp": 1474197320831,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.UidFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.UidFieldTypeTests)",
  "startTimestamp": 1474197320834,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.UidFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.UidFieldTypeTests)",
  "startTimestamp": 1474197320837,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.UidFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.UidFieldTypeTests)",
  "startTimestamp": 1474197320839,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRangeQuery(org.elasticsearch.index.mapper.UidFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRangeQuery(org.elasticsearch.index.mapper.UidFieldTypeTests)",
  "startTimestamp": 1474197320841,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.UidFieldTypeTests",
  "startTimestamp": 1474197320744,
  "executionTime": 104
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
   "displayName": "org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
   "children": [
    {
     "id": "ID#testReadFrom(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "displayName": "testReadFrom(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
     "children": []
    },
    {
     "id": "ID#testWriteTo(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "displayName": "testWriteTo(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "methodName": "testWriteTo",
     "className": "org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
     "children": []
    },
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
     "children": []
    },
    {
     "id": "ID#testFromString(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "displayName": "testFromString(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "methodName": "testFromString",
     "className": "org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197320863
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
  "startTimestamp": 1474197320946,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWriteTo(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteTo(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
  "startTimestamp": 1474197320949,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
  "startTimestamp": 1474197320953,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromString(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromString(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
  "startTimestamp": 1474197320955,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
  "startTimestamp": 1474197320863,
  "executionTime": 99
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.SearchModuleTests",
   "displayName": "org.elasticsearch.search.SearchModuleTests",
   "methodName": null,
   "className": "org.elasticsearch.search.SearchModuleTests",
   "children": [
    {
     "id": "ID#testRegisterHighlighter(org.elasticsearch.search.SearchModuleTests)",
     "displayName": "testRegisterHighlighter(org.elasticsearch.search.SearchModuleTests)",
     "methodName": "testRegisterHighlighter",
     "className": "org.elasticsearch.search.SearchModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterSuggester(org.elasticsearch.search.SearchModuleTests)",
     "displayName": "testRegisterSuggester(org.elasticsearch.search.SearchModuleTests)",
     "methodName": "testRegisterSuggester",
     "className": "org.elasticsearch.search.SearchModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterPipelineAggregation(org.elasticsearch.search.SearchModuleTests)",
     "displayName": "testRegisterPipelineAggregation(org.elasticsearch.search.SearchModuleTests)",
     "methodName": "testRegisterPipelineAggregation",
     "className": "org.elasticsearch.search.SearchModuleTests",
     "children": []
    },
    {
     "id": "ID#testDoubleRegister(org.elasticsearch.search.SearchModuleTests)",
     "displayName": "testDoubleRegister(org.elasticsearch.search.SearchModuleTests)",
     "methodName": "testDoubleRegister",
     "className": "org.elasticsearch.search.SearchModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisterAggregation(org.elasticsearch.search.SearchModuleTests)",
     "displayName": "testRegisterAggregation(org.elasticsearch.search.SearchModuleTests)",
     "methodName": "testRegisterAggregation",
     "className": "org.elasticsearch.search.SearchModuleTests",
     "children": []
    },
    {
     "id": "ID#testRegisteredQueries(org.elasticsearch.search.SearchModuleTests)",
     "displayName": "testRegisteredQueries(org.elasticsearch.search.SearchModuleTests)",
     "methodName": "testRegisteredQueries",
     "className": "org.elasticsearch.search.SearchModuleTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197320978
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterHighlighter(org.elasticsearch.search.SearchModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterHighlighter(org.elasticsearch.search.SearchModuleTests)",
  "startTimestamp": 1474197321076,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterSuggester(org.elasticsearch.search.SearchModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterSuggester(org.elasticsearch.search.SearchModuleTests)",
  "startTimestamp": 1474197321084,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterPipelineAggregation(org.elasticsearch.search.SearchModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterPipelineAggregation(org.elasticsearch.search.SearchModuleTests)",
  "startTimestamp": 1474197321091,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testDoubleRegister(org.elasticsearch.search.SearchModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoubleRegister(org.elasticsearch.search.SearchModuleTests)",
  "startTimestamp": 1474197321097,
  "executionTime": 57
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterAggregation(org.elasticsearch.search.SearchModuleTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterAggregation(org.elasticsearch.search.SearchModuleTests)",
  "startTimestamp": 1474197321154,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testRegisteredQueries(org.elasticsearch.search.SearchModuleTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:21,215][WARN ][org.elasticsearch.deprecation.common] Deprecated field [fuzzy_match] used, expected [match] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:21,217][WARN ][org.elasticsearch.deprecation.common] Deprecated field [geo_bbox] used, expected [geo_bounding_box] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:21,217][WARN ][org.elasticsearch.deprecation.common] Deprecated field [in] used, expected [terms] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:21,217][WARN ][org.elasticsearch.deprecation.common] Deprecated field [match_fuzzy] used, expected [match] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:15:21,217][WARN ][org.elasticsearch.deprecation.common] Deprecated field [mlt] used, expected [more_like_this] instead%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisteredQueries(org.elasticsearch.search.SearchModuleTests)",
  "startTimestamp": 1474197321161,
  "executionTime": 57
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.SearchModuleTests",
  "startTimestamp": 1474197320978,
  "executionTime": 244
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainTests",
   "displayName": "org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainTests",
   "children": [
    {
     "id": "ID#testShardExplain(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainTests)",
     "displayName": "testShardExplain(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainTests)",
     "methodName": "testShardExplain",
     "className": "org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197321228
 }
]

[
 "TEST_STARTED",
 "ID#testShardExplain(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:21,293][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:21,412][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:21,412][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:21,416][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[564], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:21,418][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:21,418][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:21,645][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:21,645][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:21,646][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[16]}, bound_addresses {local[16]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:21,670][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{saEjwAdBTsKtoGpanEqcdA}{FidVvPYUQduC4hGN4oFkeg}{local}{local[16]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:21,673][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:21,760][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:21,853][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:24,120][INFO ][org.elasticsearch.action.admin.cluster.allocation] [node_s_0] [ClusterAllocationExplainTests#testShardExplain]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardExplain(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainTests)",
  "startTimestamp": 1474197321281,
  "executionTime": 3432
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:24,713][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:24,714][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:24,714][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:15:24,717][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainTests",
  "startTimestamp": 1474197321228,
  "executionTime": 3499
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.TableTests",
   "displayName": "org.elasticsearch.common.TableTests",
   "methodName": null,
   "className": "org.elasticsearch.common.TableTests",
   "children": [
    {
     "id": "ID#testFailOnEndHeadersWithoutStart(org.elasticsearch.common.TableTests)",
     "displayName": "testFailOnEndHeadersWithoutStart(org.elasticsearch.common.TableTests)",
     "methodName": "testFailOnEndHeadersWithoutStart",
     "className": "org.elasticsearch.common.TableTests",
     "children": []
    },
    {
     "id": "ID#testFailOnAddCellWithoutRow(org.elasticsearch.common.TableTests)",
     "displayName": "testFailOnAddCellWithoutRow(org.elasticsearch.common.TableTests)",
     "methodName": "testFailOnAddCellWithoutRow",
     "className": "org.elasticsearch.common.TableTests",
     "children": []
    },
    {
     "id": "ID#testFailOnEndRowWithoutStart(org.elasticsearch.common.TableTests)",
     "displayName": "testFailOnEndRowWithoutStart(org.elasticsearch.common.TableTests)",
     "methodName": "testFailOnEndRowWithoutStart",
     "className": "org.elasticsearch.common.TableTests",
     "children": []
    },
    {
     "id": "ID#testWithTimestamp(org.elasticsearch.common.TableTests)",
     "displayName": "testWithTimestamp(org.elasticsearch.common.TableTests)",
     "methodName": "testWithTimestamp",
     "className": "org.elasticsearch.common.TableTests",
     "children": []
    },
    {
     "id": "ID#testFailOnMoreCellsThanDeclared(org.elasticsearch.common.TableTests)",
     "displayName": "testFailOnMoreCellsThanDeclared(org.elasticsearch.common.TableTests)",
     "methodName": "testFailOnMoreCellsThanDeclared",
     "className": "org.elasticsearch.common.TableTests",
     "children": []
    },
    {
     "id": "ID#testFailOnLessCellsThanDeclared(org.elasticsearch.common.TableTests)",
     "displayName": "testFailOnLessCellsThanDeclared(org.elasticsearch.common.TableTests)",
     "methodName": "testFailOnLessCellsThanDeclared",
     "className": "org.elasticsearch.common.TableTests",
     "children": []
    },
    {
     "id": "ID#testFailOnStartRowWithoutHeader(org.elasticsearch.common.TableTests)",
     "displayName": "testFailOnStartRowWithoutHeader(org.elasticsearch.common.TableTests)",
     "methodName": "testFailOnStartRowWithoutHeader",
     "className": "org.elasticsearch.common.TableTests",
     "children": []
    },
    {
     "id": "ID#testFailOnAddCellWithoutHeader(org.elasticsearch.common.TableTests)",
     "displayName": "testFailOnAddCellWithoutHeader(org.elasticsearch.common.TableTests)",
     "methodName": "testFailOnAddCellWithoutHeader",
     "className": "org.elasticsearch.common.TableTests",
     "children": []
    },
    {
     "id": "ID#testSimple(org.elasticsearch.common.TableTests)",
     "displayName": "testSimple(org.elasticsearch.common.TableTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.common.TableTests",
     "children": []
    },
    {
     "id": "ID#testOnLessCellsThanDeclaredUnchecked(org.elasticsearch.common.TableTests)",
     "displayName": "testOnLessCellsThanDeclaredUnchecked(org.elasticsearch.common.TableTests)",
     "methodName": "testOnLessCellsThanDeclaredUnchecked",
     "className": "org.elasticsearch.common.TableTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197324734
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnEndHeadersWithoutStart(org.elasticsearch.common.TableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnEndHeadersWithoutStart(org.elasticsearch.common.TableTests)",
  "startTimestamp": 1474197324768,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnAddCellWithoutRow(org.elasticsearch.common.TableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnAddCellWithoutRow(org.elasticsearch.common.TableTests)",
  "startTimestamp": 1474197324770,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnEndRowWithoutStart(org.elasticsearch.common.TableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnEndRowWithoutStart(org.elasticsearch.common.TableTests)",
  "startTimestamp": 1474197324773,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testWithTimestamp(org.elasticsearch.common.TableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithTimestamp(org.elasticsearch.common.TableTests)",
  "startTimestamp": 1474197324774,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnMoreCellsThanDeclared(org.elasticsearch.common.TableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnMoreCellsThanDeclared(org.elasticsearch.common.TableTests)",
  "startTimestamp": 1474197324777,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnLessCellsThanDeclared(org.elasticsearch.common.TableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnLessCellsThanDeclared(org.elasticsearch.common.TableTests)",
  "startTimestamp": 1474197324779,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnStartRowWithoutHeader(org.elasticsearch.common.TableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnStartRowWithoutHeader(org.elasticsearch.common.TableTests)",
  "startTimestamp": 1474197324781,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnAddCellWithoutHeader(org.elasticsearch.common.TableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnAddCellWithoutHeader(org.elasticsearch.common.TableTests)",
  "startTimestamp": 1474197324783,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.common.TableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.common.TableTests)",
  "startTimestamp": 1474197324785,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testOnLessCellsThanDeclaredUnchecked(org.elasticsearch.common.TableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOnLessCellsThanDeclaredUnchecked(org.elasticsearch.common.TableTests)",
  "startTimestamp": 1474197324787,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.TableTests",
  "startTimestamp": 1474197324734,
  "executionTime": 60
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests",
   "displayName": "org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests",
   "children": [
    {
     "id": "ID#testExclusiveFiltersWithDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
     "displayName": "testExclusiveFiltersWithDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
     "methodName": "testExclusiveFiltersWithDots",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests",
     "children": []
    },
    {
     "id": "ID#testInclusiveFiltersWithDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
     "displayName": "testInclusiveFiltersWithDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
     "methodName": "testInclusiveFiltersWithDots",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests",
     "children": []
    },
    {
     "id": "ID#testInclusiveFilters(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
     "displayName": "testInclusiveFilters(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
     "methodName": "testInclusiveFilters",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests",
     "children": []
    },
    {
     "id": "ID#testExclusiveFilters(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
     "displayName": "testExclusiveFilters(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
     "methodName": "testExclusiveFilters",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197324800
 }
]

[
 "TEST_STARTED",
 "ID#testExclusiveFiltersWithDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExclusiveFiltersWithDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
  "startTimestamp": 1474197324850,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testInclusiveFiltersWithDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInclusiveFiltersWithDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
  "startTimestamp": 1474197324854,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInclusiveFilters(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInclusiveFilters(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
  "startTimestamp": 1474197324856,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testExclusiveFilters(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExclusiveFilters(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
  "startTimestamp": 1474197324868,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests",
  "startTimestamp": 1474197324800,
  "executionTime": 102
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.CharMatcherTests",
   "displayName": "org.elasticsearch.index.analysis.CharMatcherTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.CharMatcherTests",
   "children": [
    {
     "id": "ID#testSpace(org.elasticsearch.index.analysis.CharMatcherTests)",
     "displayName": "testSpace(org.elasticsearch.index.analysis.CharMatcherTests)",
     "methodName": "testSpace",
     "className": "org.elasticsearch.index.analysis.CharMatcherTests",
     "children": []
    },
    {
     "id": "ID#testSymbol(org.elasticsearch.index.analysis.CharMatcherTests)",
     "displayName": "testSymbol(org.elasticsearch.index.analysis.CharMatcherTests)",
     "methodName": "testSymbol",
     "className": "org.elasticsearch.index.analysis.CharMatcherTests",
     "children": []
    },
    {
     "id": "ID#testNumber(org.elasticsearch.index.analysis.CharMatcherTests)",
     "displayName": "testNumber(org.elasticsearch.index.analysis.CharMatcherTests)",
     "methodName": "testNumber",
     "className": "org.elasticsearch.index.analysis.CharMatcherTests",
     "children": []
    },
    {
     "id": "ID#testLetter(org.elasticsearch.index.analysis.CharMatcherTests)",
     "displayName": "testLetter(org.elasticsearch.index.analysis.CharMatcherTests)",
     "methodName": "testLetter",
     "className": "org.elasticsearch.index.analysis.CharMatcherTests",
     "children": []
    },
    {
     "id": "ID#testPunctuation(org.elasticsearch.index.analysis.CharMatcherTests)",
     "displayName": "testPunctuation(org.elasticsearch.index.analysis.CharMatcherTests)",
     "methodName": "testPunctuation",
     "className": "org.elasticsearch.index.analysis.CharMatcherTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197324927
 }
]

[
 "TEST_STARTED",
 "ID#testSpace(org.elasticsearch.index.analysis.CharMatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSpace(org.elasticsearch.index.analysis.CharMatcherTests)",
  "startTimestamp": 1474197324963,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSymbol(org.elasticsearch.index.analysis.CharMatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSymbol(org.elasticsearch.index.analysis.CharMatcherTests)",
  "startTimestamp": 1474197324965,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNumber(org.elasticsearch.index.analysis.CharMatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNumber(org.elasticsearch.index.analysis.CharMatcherTests)",
  "startTimestamp": 1474197324968,
  "executionTime": 280
 }
]

[
 "TEST_STARTED",
 "ID#testLetter(org.elasticsearch.index.analysis.CharMatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLetter(org.elasticsearch.index.analysis.CharMatcherTests)",
  "startTimestamp": 1474197325248,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testPunctuation(org.elasticsearch.index.analysis.CharMatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPunctuation(org.elasticsearch.index.analysis.CharMatcherTests)",
  "startTimestamp": 1474197325265,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.CharMatcherTests",
  "startTimestamp": 1474197324927,
  "executionTime": 371
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
   "displayName": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
   "children": [
    {
     "id": "ID#testIpPublishFilteringMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testIpPublishFilteringMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testIpPublishFilteringMatchingOr",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testIpPublishFilteringNotMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testIpPublishFilteringNotMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testIpPublishFilteringNotMatchingOr",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testIpBindFilteringMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testIpBindFilteringMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testIpBindFilteringMatchingOr",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testTagAndGroupMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testTagAndGroupMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testTagAndGroupMatch",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testIpBindFilteringMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testIpBindFilteringMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testIpBindFilteringMatchingAnd",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testIpBindFilteringNotMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testIpBindFilteringNotMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testIpBindFilteringNotMatchingOr",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testNameMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testNameMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testNameMatch",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testIdMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testIdMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testIdMatch",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testIdOrNameMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testIdOrNameMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testIdOrNameMatch",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testIpBindFilteringNotMatching(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testIpBindFilteringNotMatching(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testIpBindFilteringNotMatching",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testIpPublishFilteringNotMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testIpPublishFilteringNotMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testIpPublishFilteringNotMatchingAnd",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testStarMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testStarMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testStarMatch",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testIpPublishFilteringMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testIpPublishFilteringMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testIpPublishFilteringMatchingAnd",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testIpBindFilteringNotMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testIpBindFilteringNotMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testIpBindFilteringNotMatchingAnd",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197325312
 }
]

[
 "TEST_STARTED",
 "ID#testIpPublishFilteringMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIpPublishFilteringMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1474197325602,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIpPublishFilteringNotMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIpPublishFilteringNotMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1474197325604,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIpBindFilteringMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIpBindFilteringMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1474197325606,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTagAndGroupMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTagAndGroupMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1474197325608,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIpBindFilteringMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIpBindFilteringMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1474197325611,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIpBindFilteringNotMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIpBindFilteringNotMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1474197325613,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNameMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNameMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1474197325615,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIdMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIdMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1474197325617,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIdOrNameMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIdOrNameMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1474197325619,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIpBindFilteringNotMatching(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIpBindFilteringNotMatching(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1474197325621,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIpPublishFilteringNotMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIpPublishFilteringNotMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1474197325623,
  "executionTime": 75
 }
]

[
 "TEST_STARTED",
 "ID#testStarMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStarMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1474197325698,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIpPublishFilteringMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIpPublishFilteringMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1474197325700,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIpBindFilteringNotMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIpBindFilteringNotMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1474197325703,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
  "startTimestamp": 1474197325312,
  "executionTime": 397
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.FilterTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.FilterTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.FilterTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.FilterTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.FilterTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.FilterTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.FilterTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.FilterTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.FilterTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.FilterTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.FilterTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.FilterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197325716
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:15:26,016][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{G7uYn8leSRm1pWKMbF7uLA}{local}{local[106]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.FilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.FilterTests)",
  "startTimestamp": 1474197326222,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.FilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.FilterTests)",
  "startTimestamp": 1474197326225,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.FilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.FilterTests)",
  "startTimestamp": 1474197326227,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.FilterTests",
  "startTimestamp": 1474197325716,
  "executionTime": 517
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.script.ScriptTests",
   "displayName": "org.elasticsearch.script.ScriptTests",
   "methodName": null,
   "className": "org.elasticsearch.script.ScriptTests",
   "children": [
    {
     "id": "ID#testScriptSerialization(org.elasticsearch.script.ScriptTests)",
     "displayName": "testScriptSerialization(org.elasticsearch.script.ScriptTests)",
     "methodName": "testScriptSerialization",
     "className": "org.elasticsearch.script.ScriptTests",
     "children": []
    },
    {
     "id": "ID#testScriptParsing(org.elasticsearch.script.ScriptTests)",
     "displayName": "testScriptParsing(org.elasticsearch.script.ScriptTests)",
     "methodName": "testScriptParsing",
     "className": "org.elasticsearch.script.ScriptTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197326239
 }
]

[
 "TEST_STARTED",
 "ID#testScriptSerialization(org.elasticsearch.script.ScriptTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScriptSerialization(org.elasticsearch.script.ScriptTests)",
  "startTimestamp": 1474197326265,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testScriptParsing(org.elasticsearch.script.ScriptTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScriptParsing(org.elasticsearch.script.ScriptTests)",
  "startTimestamp": 1474197326269,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.script.ScriptTests",
  "startTimestamp": 1474197326239,
  "executionTime": 33
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests",
   "displayName": "org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests",
   "children": [
    {
     "id": "ID#testSerializeRequest(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests)",
     "displayName": "testSerializeRequest(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests)",
     "methodName": "testSerializeRequest",
     "className": "org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests",
     "children": []
    },
    {
     "id": "ID#testClusterStateUpdateTask(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests)",
     "displayName": "testClusterStateUpdateTask(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests)",
     "methodName": "testClusterStateUpdateTask",
     "className": "org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197326280
 }
]

[
 "TEST_STARTED",
 "ID#testSerializeRequest(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerializeRequest(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests)",
  "startTimestamp": 1474197326309,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClusterStateUpdateTask(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:26,319][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [shards failed [[idx][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterStateUpdateTask(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests)",
  "startTimestamp": 1474197326311,
  "executionTime": 14
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests",
  "startTimestamp": 1474197326280,
  "executionTime": 47
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
   "children": [
    {
     "id": "ID#testInvalidRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testInvalidRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testInvalidRelation",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testThatXContentSerializationInsideOfArrayWorks(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testThatXContentSerializationInsideOfArrayWorks(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testThatXContentSerializationInsideOfArrayWorks",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNoIndexedShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testNoIndexedShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testNoIndexedShape",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNoRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testNoRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testNoRelation",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNoIndexedShapeType(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testNoIndexedShapeType(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testNoIndexedShapeType",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNoShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testNoShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testNoShape",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testIgnoreUnmapped(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testIgnoreUnmapped",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNoFieldName(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testNoFieldName(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testNoFieldName",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197326336
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:26,376][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{hYN1t1GMRRCiDeA59wNARw}{local}{local[109]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:26,386][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:26,386][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:26,503][WARN ][org.elasticsearch.deprecation.index.mapper]  [oKOhtV] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:26,504][WARN ][org.elasticsearch.deprecation.index.mapper]  [oKOhtV] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:26,504][WARN ][org.elasticsearch.deprecation.index.mapper]  [oKOhtV] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:26,507][WARN ][org.elasticsearch.deprecation.index.mapper]  [oKOhtV] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:26,508][WARN ][org.elasticsearch.deprecation.index.mapper]  [oKOhtV] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:26,508][WARN ][org.elasticsearch.deprecation.index.mapper]  [oKOhtV] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:26,516][WARN ][org.elasticsearch.deprecation.index.mapper]  [oKOhtV] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:26,516][WARN ][org.elasticsearch.deprecation.index.mapper]  [oKOhtV] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:45:26,516][WARN ][org.elasticsearch.deprecation.index.mapper]  [oKOhtV] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474197326361,
  "executionTime": 164
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474197326525,
  "executionTime": 260
 }
]

[
 "TEST_STARTED",
 "ID#testThatXContentSerializationInsideOfArrayWorks(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatXContentSerializationInsideOfArrayWorks(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474197326785,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474197326787,
  "executionTime": 7491
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474197334278,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474197334283,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474197334287,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testNoIndexedShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoIndexedShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474197334291,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNoRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474197334294,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474197334297,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNoIndexedShapeType(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoIndexedShapeType(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474197334300,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474197334320,
  "executionTime": 83
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474197334403,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474197334406,
  "executionTime": 108
 }
]

[
 "TEST_STARTED",
 "ID#testNoShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474197334514,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474197334519,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testNoFieldName(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoFieldName(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474197334524,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
  "startTimestamp": 1474197326336,
  "executionTime": 8204
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.recovery.RecoverySettingsTests",
   "displayName": "org.elasticsearch.recovery.RecoverySettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.recovery.RecoverySettingsTests",
   "children": [
    {
     "id": "ID#testAllSettingsAreDynamicallyUpdatable(org.elasticsearch.recovery.RecoverySettingsTests)",
     "displayName": "testAllSettingsAreDynamicallyUpdatable(org.elasticsearch.recovery.RecoverySettingsTests)",
     "methodName": "testAllSettingsAreDynamicallyUpdatable",
     "className": "org.elasticsearch.recovery.RecoverySettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197334552
 }
]

[
 "TEST_STARTED",
 "ID#testAllSettingsAreDynamicallyUpdatable(org.elasticsearch.recovery.RecoverySettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:34,631][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:34,739][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:34,739][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:34,779][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[564], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:34,781][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:34,781][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:34,976][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:34,976][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:34,979][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[17]}, bound_addresses {local[17]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:35,078][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{oUuJBO_PQbOnwFiOiZZSpg}{mZFSbm5QST23JyVsbK0YTQ}{local}{local[17]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:35,079][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:35,116][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:35,140][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [indices.recovery.max_bytes_per_sec] from [40mb] to [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:35,145][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [indices.recovery.retry_delay_state_sync] from [500ms] to [46ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:35,148][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [indices.recovery.retry_delay_network] from [5s] to [196ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:35,151][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [indices.recovery.recovery_activity_timeout] from [30m] to [2ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:35,169][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [indices.recovery.internal_action_timeout] from [15m] to [31ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:35,169][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [indices.recovery.internal_action_long_timeout] from [30m] to [62ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:35,176][INFO ][org.elasticsearch.recovery] [RecoverySettingsTests#testAllSettingsAreDynamicallyUpdatable]: cleaning up after test%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:35,177][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:35,178][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:35,178][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:35,180][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:35,207][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:35,273][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:35,273][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:35,297][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[564], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:35,299][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:35,300][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:35,557][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:35,558][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:35,561][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[18]}, bound_addresses {local[18]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:35,624][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{ZNggi4VcRIG4Pxt3qqEogA}{eQMXV6NBS4q_LjTN-YWkEg}{local}{local[18]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:35,625][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:35,646][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllSettingsAreDynamicallyUpdatable(org.elasticsearch.recovery.RecoverySettingsTests)",
  "startTimestamp": 1474197334621,
  "executionTime": 1077
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:35,699][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:35,700][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:35,700][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:15:35,702][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.recovery.RecoverySettingsTests",
  "startTimestamp": 1474197334552,
  "executionTime": 1217
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.ObjectMapperTests",
   "displayName": "org.elasticsearch.index.mapper.ObjectMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.ObjectMapperTests",
   "children": [
    {
     "id": "ID#testDifferentInnerObjectTokenFailure(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "displayName": "testDifferentInnerObjectTokenFailure(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "methodName": "testDifferentInnerObjectTokenFailure",
     "className": "org.elasticsearch.index.mapper.ObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testMerge(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "displayName": "testMerge(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "methodName": "testMerge",
     "className": "org.elasticsearch.index.mapper.ObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testFieldsWithFilledArrayShouldThrowException(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "displayName": "testFieldsWithFilledArrayShouldThrowException(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "methodName": "testFieldsWithFilledArrayShouldThrowException",
     "className": "org.elasticsearch.index.mapper.ObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testFieldPropertiesArray(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "displayName": "testFieldPropertiesArray(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "methodName": "testFieldPropertiesArray",
     "className": "org.elasticsearch.index.mapper.ObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testFieldsArrayMultiFieldsShouldThrowException(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "displayName": "testFieldsArrayMultiFieldsShouldThrowException(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "methodName": "testFieldsArrayMultiFieldsShouldThrowException",
     "className": "org.elasticsearch.index.mapper.ObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testEmptyFieldsArrayMultiFields(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "displayName": "testEmptyFieldsArrayMultiFields(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "methodName": "testEmptyFieldsArrayMultiFields",
     "className": "org.elasticsearch.index.mapper.ObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testEmptyName(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "displayName": "testEmptyName(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "methodName": "testEmptyName",
     "className": "org.elasticsearch.index.mapper.ObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testEmptyArrayProperties(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "displayName": "testEmptyArrayProperties(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "methodName": "testEmptyArrayProperties",
     "className": "org.elasticsearch.index.mapper.ObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testEmptyFieldsArray(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "displayName": "testEmptyFieldsArray(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "methodName": "testEmptyFieldsArray",
     "className": "org.elasticsearch.index.mapper.ObjectMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197335777
 }
]

[
 "TEST_STARTED",
 "ID#testDifferentInnerObjectTokenFailure(org.elasticsearch.index.mapper.ObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:35,826][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:35,857][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:35,859][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:35,864][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[564], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:35,867][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:35,867][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:36,028][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:36,028][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:36,029][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[19]}, bound_addresses {local[19]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:36,032][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{qyF5PtPEQ46CBH_Tcxrang}{YT-uaXNdT6OD1ySvuNtocA}{local}{local[19]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:36,033][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:36,048][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:36,068][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:36,202][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:36,225][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ObjectMapperTests#testDifferentInnerObjectTokenFailure]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDifferentInnerObjectTokenFailure(org.elasticsearch.index.mapper.ObjectMapperTests)",
  "startTimestamp": 1474197335818,
  "executionTime": 451
 }
]

[
 "TEST_STARTED",
 "ID#testMerge(org.elasticsearch.index.mapper.ObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:36,276][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:36,330][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:36,362][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ObjectMapperTests#testMerge]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMerge(org.elasticsearch.index.mapper.ObjectMapperTests)",
  "startTimestamp": 1474197336269,
  "executionTime": 136
 }
]

[
 "TEST_STARTED",
 "ID#testFieldsWithFilledArrayShouldThrowException(org.elasticsearch.index.mapper.ObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:36,414][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:36,514][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:36,534][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ObjectMapperTests#testFieldsWithFilledArrayShouldThrowException]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldsWithFilledArrayShouldThrowException(org.elasticsearch.index.mapper.ObjectMapperTests)",
  "startTimestamp": 1474197336406,
  "executionTime": 178
 }
]

[
 "TEST_STARTED",
 "ID#testFieldPropertiesArray(org.elasticsearch.index.mapper.ObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:36,595][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:36,715][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:36,732][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ObjectMapperTests#testFieldPropertiesArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldPropertiesArray(org.elasticsearch.index.mapper.ObjectMapperTests)",
  "startTimestamp": 1474197336585,
  "executionTime": 299
 }
]

[
 "TEST_STARTED",
 "ID#testFieldsArrayMultiFieldsShouldThrowException(org.elasticsearch.index.mapper.ObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:36,892][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:36,981][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:36,993][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ObjectMapperTests#testFieldsArrayMultiFieldsShouldThrowException]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldsArrayMultiFieldsShouldThrowException(org.elasticsearch.index.mapper.ObjectMapperTests)",
  "startTimestamp": 1474197336884,
  "executionTime": 136
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyFieldsArrayMultiFields(org.elasticsearch.index.mapper.ObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:37,026][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:37,069][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:37,083][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ObjectMapperTests#testEmptyFieldsArrayMultiFields]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyFieldsArrayMultiFields(org.elasticsearch.index.mapper.ObjectMapperTests)",
  "startTimestamp": 1474197337020,
  "executionTime": 145
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyName(org.elasticsearch.index.mapper.ObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:37,173][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:37,238][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:37,302][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_old] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:37,358][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_old][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:37,372][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test_old] [ObjectMapperTests#testEmptyName]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyName(org.elasticsearch.index.mapper.ObjectMapperTests)",
  "startTimestamp": 1474197337165,
  "executionTime": 258
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyArrayProperties(org.elasticsearch.index.mapper.ObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:37,429][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:37,512][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:37,591][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ObjectMapperTests#testEmptyArrayProperties]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyArrayProperties(org.elasticsearch.index.mapper.ObjectMapperTests)",
  "startTimestamp": 1474197337423,
  "executionTime": 210
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyFieldsArray(org.elasticsearch.index.mapper.ObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:37,639][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:37,750][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:37,771][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ObjectMapperTests#testEmptyFieldsArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyFieldsArray(org.elasticsearch.index.mapper.ObjectMapperTests)",
  "startTimestamp": 1474197337633,
  "executionTime": 194
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:37,827][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:37,829][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:37,830][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:15:37,831][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.ObjectMapperTests",
  "startTimestamp": 1474197335777,
  "executionTime": 2066
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.internal.ShardSearchTransportRequestTests",
   "displayName": "org.elasticsearch.search.internal.ShardSearchTransportRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.search.internal.ShardSearchTransportRequestTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.search.internal.ShardSearchTransportRequestTests)",
     "displayName": "testSerialization(org.elasticsearch.search.internal.ShardSearchTransportRequestTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.internal.ShardSearchTransportRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197337851
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.internal.ShardSearchTransportRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.internal.ShardSearchTransportRequestTests)",
  "startTimestamp": 1474197337892,
  "executionTime": 17
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.internal.ShardSearchTransportRequestTests",
  "startTimestamp": 1474197337851,
  "executionTime": 61
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests",
   "displayName": "org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests",
   "children": [
    {
     "id": "ID#testSimple(org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests)",
     "displayName": "testSimple(org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests",
     "children": []
    },
    {
     "id": "ID#testSearch(org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests)",
     "displayName": "testSearch(org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests)",
     "methodName": "testSearch",
     "className": "org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197337918
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests)",
  "startTimestamp": 1474197337945,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSearch(org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearch(org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests)",
  "startTimestamp": 1474197337947,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests",
  "startTimestamp": 1474197337918,
  "executionTime": 36
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.SnowballAnalyzerTests",
   "displayName": "org.elasticsearch.index.analysis.SnowballAnalyzerTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.SnowballAnalyzerTests",
   "children": [
    {
     "id": "ID#testReusableTokenStream(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "displayName": "testReusableTokenStream(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "methodName": "testReusableTokenStream",
     "className": "org.elasticsearch.index.analysis.SnowballAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testTurkish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "displayName": "testTurkish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "methodName": "testTurkish",
     "className": "org.elasticsearch.index.analysis.SnowballAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testStopwords(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "displayName": "testStopwords(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "methodName": "testStopwords",
     "className": "org.elasticsearch.index.analysis.SnowballAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testEnglish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "displayName": "testEnglish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "methodName": "testEnglish",
     "className": "org.elasticsearch.index.analysis.SnowballAnalyzerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197337977
 }
]

[
 "TEST_STARTED",
 "ID#testReusableTokenStream(org.elasticsearch.index.analysis.SnowballAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReusableTokenStream(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
  "startTimestamp": 1474197337995,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testTurkish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTurkish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
  "startTimestamp": 1474197338019,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testStopwords(org.elasticsearch.index.analysis.SnowballAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStopwords(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
  "startTimestamp": 1474197338026,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testEnglish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnglish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
  "startTimestamp": 1474197338036,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.SnowballAnalyzerTests",
  "startTimestamp": 1474197337977,
  "executionTime": 62
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.DateRangeTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.DateRangeTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.DateRangeTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.DateRangeTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.DateRangeTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.DateRangeTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.DateRangeTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.DateRangeTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.DateRangeTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.DateRangeTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.DateRangeTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.DateRangeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197338046
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:15:38,094][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{CqGNt6nORa6KTH2y7KIoaA}{local}{local[110]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.DateRangeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.DateRangeTests)",
  "startTimestamp": 1474197338113,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.DateRangeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.DateRangeTests)",
  "startTimestamp": 1474197338126,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.DateRangeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.DateRangeTests)",
  "startTimestamp": 1474197338129,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.DateRangeTests",
  "startTimestamp": 1474197338046,
  "executionTime": 97
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests",
   "displayName": "org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests",
   "children": [
    {
     "id": "ID#testTaskCancellationOnCoordinatingNodeLeavingTheCluster(org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests)",
     "displayName": "testTaskCancellationOnCoordinatingNodeLeavingTheCluster(org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests)",
     "methodName": "testTaskCancellationOnCoordinatingNodeLeavingTheCluster",
     "className": "org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests",
     "children": []
    },
    {
     "id": "ID#testBasicTaskCancellation(org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests)",
     "displayName": "testBasicTaskCancellation(org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests)",
     "methodName": "testBasicTaskCancellation",
     "className": "org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197338157
 }
]

[
 "TEST_STARTED",
 "ID#testTaskCancellationOnCoordinatingNodeLeavingTheCluster(org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:38,195][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{-qPNjigISGWlQE-4lZc-ow}{local}{local[111]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:38,201][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[20]}, bound_addresses {local[20]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:38,223][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{8jwuHJlzSGm0-qFzDvncxg}{local}{local[112]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:38,224][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[21]}, bound_addresses {local[21]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:38,240][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{cqKXAg3QQeymkv_tqeXEJA}{local}{local[113]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:38,241][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[22]}, bound_addresses {local[22]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:38,248][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{2fBPgN0hQT-nUzCxexnLyQ}{local}{local[114]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:38,250][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[23]}, bound_addresses {local[23]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:38,258][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{EDLdl_2tRjuK3-jqNQt2VQ}{local}{local[115]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:38,260][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[24]}, bound_addresses {local[24]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:38,275][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{CZEDp5L5T3aKGb1Rl6UIXA}{local}{local[116]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:38,276][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[25]}, bound_addresses {local[25]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:38,562][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{P-I9WItDQg23w9rvFXF0ew}{local}{local[20]}, previous {node}{-qPNjigISGWlQE-4lZc-ow}{local}{local[111]}}, removed {{node}{-qPNjigISGWlQE-4lZc-ow}{local}{local[111]},}, added {{node1}{E-0KNE9KTq-7mGwaZTcB4Q}{local}{local[21]},{node3}{Dcs4jKSETpKE5a65si7Vag}{local}{local[23]},{node4}{WbiHjPbISeu7DNpw9Td0Ew}{local}{local[24]},{node2}{9tURFcrCSKSnDj08KkhnCA}{local}{local[22]},{node5}{ESRystrRSGSm6ELeG7PDyw}{local}{local[25]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:38,564][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{P-I9WItDQg23w9rvFXF0ew}{local}{local[20]}, previous {node}{8jwuHJlzSGm0-qFzDvncxg}{local}{local[112]}}, removed {{node}{8jwuHJlzSGm0-qFzDvncxg}{local}{local[112]},}, added {{node3}{Dcs4jKSETpKE5a65si7Vag}{local}{local[23]},{node4}{WbiHjPbISeu7DNpw9Td0Ew}{local}{local[24]},{node2}{9tURFcrCSKSnDj08KkhnCA}{local}{local[22]},{node5}{ESRystrRSGSm6ELeG7PDyw}{local}{local[25]},{node0}{P-I9WItDQg23w9rvFXF0ew}{local}{local[20]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:38,566][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{P-I9WItDQg23w9rvFXF0ew}{local}{local[20]}, previous {node}{cqKXAg3QQeymkv_tqeXEJA}{local}{local[113]}}, removed {{node}{cqKXAg3QQeymkv_tqeXEJA}{local}{local[113]},}, added {{node1}{E-0KNE9KTq-7mGwaZTcB4Q}{local}{local[21]},{node3}{Dcs4jKSETpKE5a65si7Vag}{local}{local[23]},{node4}{WbiHjPbISeu7DNpw9Td0Ew}{local}{local[24]},{node5}{ESRystrRSGSm6ELeG7PDyw}{local}{local[25]},{node0}{P-I9WItDQg23w9rvFXF0ew}{local}{local[20]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:38,568][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{P-I9WItDQg23w9rvFXF0ew}{local}{local[20]}, previous {node}{2fBPgN0hQT-nUzCxexnLyQ}{local}{local[114]}}, removed {{node}{2fBPgN0hQT-nUzCxexnLyQ}{local}{local[114]},}, added {{node1}{E-0KNE9KTq-7mGwaZTcB4Q}{local}{local[21]},{node4}{WbiHjPbISeu7DNpw9Td0Ew}{local}{local[24]},{node2}{9tURFcrCSKSnDj08KkhnCA}{local}{local[22]},{node5}{ESRystrRSGSm6ELeG7PDyw}{local}{local[25]},{node0}{P-I9WItDQg23w9rvFXF0ew}{local}{local[20]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:38,572][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{P-I9WItDQg23w9rvFXF0ew}{local}{local[20]}, previous {node}{EDLdl_2tRjuK3-jqNQt2VQ}{local}{local[115]}}, removed {{node}{EDLdl_2tRjuK3-jqNQt2VQ}{local}{local[115]},}, added {{node1}{E-0KNE9KTq-7mGwaZTcB4Q}{local}{local[21]},{node3}{Dcs4jKSETpKE5a65si7Vag}{local}{local[23]},{node2}{9tURFcrCSKSnDj08KkhnCA}{local}{local[22]},{node5}{ESRystrRSGSm6ELeG7PDyw}{local}{local[25]},{node0}{P-I9WItDQg23w9rvFXF0ew}{local}{local[20]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:38,572][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{P-I9WItDQg23w9rvFXF0ew}{local}{local[20]}, previous {node}{CZEDp5L5T3aKGb1Rl6UIXA}{local}{local[116]}}, removed {{node}{CZEDp5L5T3aKGb1Rl6UIXA}{local}{local[116]},}, added {{node1}{E-0KNE9KTq-7mGwaZTcB4Q}{local}{local[21]},{node3}{Dcs4jKSETpKE5a65si7Vag}{local}{local[23]},{node4}{WbiHjPbISeu7DNpw9Td0Ew}{local}{local[24]},{node2}{9tURFcrCSKSnDj08KkhnCA}{local}{local[22]},{node0}{P-I9WItDQg23w9rvFXF0ew}{local}{local[20]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:38,581][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node0] should block: [false]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:38,585][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node1] should block: [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:38,585][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node2] should block: [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:38,586][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node3] should block: [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:38,589][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node4] should block: [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:38,590][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node5] should block: [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:38,601][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Awaiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:38,737][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Done waiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:38,762][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node1}{E-0KNE9KTq-7mGwaZTcB4Q}{local}{local[21]}, previous {node0}{P-I9WItDQg23w9rvFXF0ew}{local}{local[20]}}, removed {{node0}{P-I9WItDQg23w9rvFXF0ew}{local}{local[20]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:38,762][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node1}{E-0KNE9KTq-7mGwaZTcB4Q}{local}{local[21]}, previous {node0}{P-I9WItDQg23w9rvFXF0ew}{local}{local[20]}}, removed {{node0}{P-I9WItDQg23w9rvFXF0ew}{local}{local[20]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:38,762][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node1}{E-0KNE9KTq-7mGwaZTcB4Q}{local}{local[21]}, previous {node0}{P-I9WItDQg23w9rvFXF0ew}{local}{local[20]}}, removed {{node0}{P-I9WItDQg23w9rvFXF0ew}{local}{local[20]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:38,763][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node1}{E-0KNE9KTq-7mGwaZTcB4Q}{local}{local[21]}, previous {node0}{P-I9WItDQg23w9rvFXF0ew}{local}{local[20]}}, removed {{node0}{P-I9WItDQg23w9rvFXF0ew}{local}{local[20]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:38,763][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node1}{E-0KNE9KTq-7mGwaZTcB4Q}{local}{local[21]}, previous {node0}{P-I9WItDQg23w9rvFXF0ew}{local}{local[20]}}, removed {{node0}{P-I9WItDQg23w9rvFXF0ew}{local}{local[20]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:38,763][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] --> Simulate issuing cancel request on the node that is about to leave the cluster%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:38,780][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] --> Done simulating issuing cancel request on the node that is about to leave the cluster%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTaskCancellationOnCoordinatingNodeLeavingTheCluster(org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests)",
  "startTimestamp": 1474197338177,
  "executionTime": 617
 }
]

[
 "TEST_STARTED",
 "ID#testBasicTaskCancellation(org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:38,834][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{SKvA4C4cTrWqVt3fU1sgOg}{local}{local[117]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:38,836][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[26]}, bound_addresses {local[26]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:38,846][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{8NHplDs8TvePz89BkjkxMw}{local}{local[118]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:38,848][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[27]}, bound_addresses {local[27]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:38,849][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{BxJmXRuSQiuguJ_YDJZXDA}{local}{local[26]}, previous {node}{SKvA4C4cTrWqVt3fU1sgOg}{local}{local[117]}}, removed {{node}{SKvA4C4cTrWqVt3fU1sgOg}{local}{local[117]},}, added {{node1}{HOFQn2QySR-z_086fPcnJQ}{local}{local[27]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:38,850][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{BxJmXRuSQiuguJ_YDJZXDA}{local}{local[26]}, previous {node}{8NHplDs8TvePz89BkjkxMw}{local}{local[118]}}, removed {{node}{8NHplDs8TvePz89BkjkxMw}{local}{local[118]},}, added {{node0}{BxJmXRuSQiuguJ_YDJZXDA}{local}{local[26]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:38,850][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] waitForActionToStart is set to true%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:38,851][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node0] should block: [false]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:38,852][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node1] should block: [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:38,853][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Awaiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:15:38,856][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Done waiting for all actions to start%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicTaskCancellation(org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests)",
  "startTimestamp": 1474197338795,
  "executionTime": 87
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests",
  "startTimestamp": 1474197338157,
  "executionTime": 731
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197338894
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:38,961][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{e8g7jlUiQtOlvwiLthIoSw}{local}{local[119]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)",
  "startTimestamp": 1474197338974,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)",
  "startTimestamp": 1474197338977,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)",
  "startTimestamp": 1474197338980,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests",
  "startTimestamp": 1474197338894,
  "executionTime": 95
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.RecoverySourceTests",
   "displayName": "org.elasticsearch.cluster.routing.RecoverySourceTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.RecoverySourceTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.cluster.routing.RecoverySourceTests)",
     "displayName": "testSerialization(org.elasticsearch.cluster.routing.RecoverySourceTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.cluster.routing.RecoverySourceTests",
     "children": []
    },
    {
     "id": "ID#testRecoverySourceTypeOrder(org.elasticsearch.cluster.routing.RecoverySourceTests)",
     "displayName": "testRecoverySourceTypeOrder(org.elasticsearch.cluster.routing.RecoverySourceTests)",
     "methodName": "testRecoverySourceTypeOrder",
     "className": "org.elasticsearch.cluster.routing.RecoverySourceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197338994
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.cluster.routing.RecoverySourceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.cluster.routing.RecoverySourceTests)",
  "startTimestamp": 1474197339018,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverySourceTypeOrder(org.elasticsearch.cluster.routing.RecoverySourceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverySourceTypeOrder(org.elasticsearch.cluster.routing.RecoverySourceTests)",
  "startTimestamp": 1474197339024,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.RecoverySourceTests",
  "startTimestamp": 1474197338994,
  "executionTime": 33
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests",
   "displayName": "org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests",
   "children": [
    {
     "id": "ID#testRequestOnClosedIndexIgnoreUnavailable(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
     "displayName": "testRequestOnClosedIndexIgnoreUnavailable(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
     "methodName": "testRequestOnClosedIndexIgnoreUnavailable",
     "className": "org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests",
     "children": []
    },
    {
     "id": "ID#testVerbose(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
     "displayName": "testVerbose(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
     "methodName": "testVerbose",
     "className": "org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests",
     "children": []
    },
    {
     "id": "ID#testBasic(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
     "displayName": "testBasic(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
     "methodName": "testBasic",
     "className": "org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests",
     "children": []
    },
    {
     "id": "ID#testAllowNoIndex(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
     "displayName": "testAllowNoIndex(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
     "methodName": "testAllowNoIndex",
     "className": "org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests",
     "children": []
    },
    {
     "id": "ID#testRequestOnClosedIndex(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
     "displayName": "testRequestOnClosedIndex(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
     "methodName": "testRequestOnClosedIndex",
     "className": "org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197339034
 }
]

[
 "TEST_STARTED",
 "ID#testRequestOnClosedIndexIgnoreUnavailable(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:39,168][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:39,350][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:39,350][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:39,398][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[564], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:39,401][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:39,401][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:39,639][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:39,640][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:39,640][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[28]}, bound_addresses {local[28]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:39,648][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{tzzErm61SZSxGoQkziUrMg}{Ff3QDCETSJS1T41sooygFw}{local}{local[28]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:39,649][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:39,666][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:39,684][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:39,687][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:39,688][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:39,776][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:39,842][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/CL2lqxidRwGfeefi1BMOVQ] create_mapping [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:49,260][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[test/CL2lqxidRwGfeefi1BMOVQ]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:49,321][INFO ][org.elasticsearch.action.admin.indices.segments] [node_s_0] [IndicesSegmentsRequestTests#testRequestOnClosedIndexIgnoreUnavailable]: cleaning up after test%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:49,322][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:49,323][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRequestOnClosedIndexIgnoreUnavailable(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
  "startTimestamp": 1474197339137,
  "executionTime": 10225
 }
]

[
 "TEST_STARTED",
 "ID#testVerbose(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:49,367][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:49,372][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:49,373][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:49,433][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:49,462][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/0A7cX8MtQ6mWUx0DrmQ7Tg] create_mapping [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:50,609][INFO ][org.elasticsearch.action.admin.indices.segments] [node_s_0] [IndicesSegmentsRequestTests#testVerbose]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVerbose(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
  "startTimestamp": 1474197349362,
  "executionTime": 1310
 }
]

[
 "TEST_STARTED",
 "ID#testBasic(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:50,676][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:50,678][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:50,681][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:50,737][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:50,756][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/kooOZldkRAivBmZIOVLcOA] create_mapping [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:52,776][INFO ][org.elasticsearch.action.admin.indices.segments] [node_s_0] [IndicesSegmentsRequestTests#testBasic]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasic(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
  "startTimestamp": 1474197350672,
  "executionTime": 2156
 }
]

[
 "TEST_STARTED",
 "ID#testAllowNoIndex(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:52,833][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:52,836][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:52,837][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:52,921][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:52,938][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/AB5QHGlbT7qiCn5SvJonTw] create_mapping [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:58,581][INFO ][org.elasticsearch.action.admin.indices.segments] [node_s_0] [IndicesSegmentsRequestTests#testAllowNoIndex]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllowNoIndex(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
  "startTimestamp": 1474197352829,
  "executionTime": 5755
 }
]

[
 "TEST_STARTED",
 "ID#testRequestOnClosedIndex(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:58,591][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:58,593][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:58,595][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:58,682][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:15:58,699][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/oCmkuexvRuqqjoYhiztzjg] create_mapping [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:05,118][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[test/oCmkuexvRuqqjoYhiztzjg]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:05,149][INFO ][org.elasticsearch.action.admin.indices.segments] [node_s_0] [IndicesSegmentsRequestTests#testRequestOnClosedIndex]: cleaning up after test%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:05,150][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:05,151][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRequestOnClosedIndex(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
  "startTimestamp": 1474197358584,
  "executionTime": 6588
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:05,172][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:05,173][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:05,173][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:05,179][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests",
  "startTimestamp": 1474197339034,
  "executionTime": 26155
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.CompletionFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
   "children": [
    {
     "id": "ID#testRegexQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testRegexQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testRegexQueryType",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testParsingMultiValued(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testParsingMultiValued(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testParsingMultiValued",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testParsingMixed(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testParsingMixed(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testParsingMixed",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testCompletionAnalyzerSettings(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testCompletionAnalyzerSettings(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testCompletionAnalyzerSettings",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testParsingFull(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testParsingFull(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testParsingFull",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testPrefixQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testPrefixQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testPrefixQueryType",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testTypeParsing(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testTypeParsing(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testTypeParsing",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testParsingMinimal(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testParsingMinimal(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testParsingMinimal",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaultConfiguration(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testDefaultConfiguration(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testDefaultConfiguration",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testFuzzyQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testFuzzyQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testFuzzyQueryType",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testFieldValueValidation(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testFieldValueValidation(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testFieldValueValidation",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testParsingMultiValueWithWeight(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testParsingMultiValueWithWeight(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testParsingMultiValueWithWeight",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testParsingWithWeight(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testParsingWithWeight(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testParsingWithWeight",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNonContextEnabledParsingWithContexts(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testNonContextEnabledParsingWithContexts(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testNonContextEnabledParsingWithContexts",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testEmptyName(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testEmptyName(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testEmptyName",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197365198
 }
]

[
 "TEST_STARTED",
 "ID#testRegexQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:05,243][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:05,281][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:05,281][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:05,285][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[564], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:05,287][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:05,287][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:05,446][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:05,446][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:05,446][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[29]}, bound_addresses {local[29]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:05,517][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{UaEGkBChRGODfnoPaU5q_Q}{ioPYyG7aTgKsDIsFaWqfKg}{local}{local[29]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:05,517][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:05,569][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:05,646][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:05,884][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:05,949][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testRegexQueryType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegexQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1474197365232,
  "executionTime": 762
 }
]

[
 "TEST_STARTED",
 "ID#testParsingMultiValued(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:06,023][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:06,200][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:06,219][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testParsingMultiValued]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingMultiValued(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1474197365994,
  "executionTime": 274
 }
]

[
 "TEST_STARTED",
 "ID#testParsingMixed(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:06,274][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:06,417][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:06,430][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testParsingMixed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingMixed(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1474197366268,
  "executionTime": 205
 }
]

[
 "TEST_STARTED",
 "ID#testCompletionAnalyzerSettings(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:06,498][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:06,579][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:06,591][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testCompletionAnalyzerSettings]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompletionAnalyzerSettings(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1474197366473,
  "executionTime": 158
 }
]

[
 "TEST_STARTED",
 "ID#testParsingFull(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:06,638][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:06,740][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:06,753][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testParsingFull]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingFull(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1474197366631,
  "executionTime": 191
 }
]

[
 "TEST_STARTED",
 "ID#testPrefixQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:06,829][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:06,912][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:06,924][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testPrefixQueryType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrefixQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1474197366823,
  "executionTime": 131
 }
]

[
 "TEST_STARTED",
 "ID#testTypeParsing(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:06,962][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:07,087][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:07,100][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testTypeParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeParsing(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1474197366955,
  "executionTime": 223
 }
]

[
 "TEST_STARTED",
 "ID#testParsingMinimal(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:07,184][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:07,314][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:07,326][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testParsingMinimal]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingMinimal(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1474197367178,
  "executionTime": 219
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultConfiguration(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:07,403][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:07,473][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:07,490][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testDefaultConfiguration]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultConfiguration(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1474197367397,
  "executionTime": 126
 }
]

[
 "TEST_STARTED",
 "ID#testFuzzyQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:07,529][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:07,632][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:07,654][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testFuzzyQueryType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFuzzyQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1474197367523,
  "executionTime": 169
 }
]

[
 "TEST_STARTED",
 "ID#testFieldValueValidation(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:07,698][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:07,772][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:07,785][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testFieldValueValidation]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldValueValidation(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1474197367692,
  "executionTime": 145
 }
]

[
 "TEST_STARTED",
 "ID#testParsingMultiValueWithWeight(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:07,843][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:07,928][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:07,940][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testParsingMultiValueWithWeight]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingMultiValueWithWeight(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1474197367837,
  "executionTime": 150
 }
]

[
 "TEST_STARTED",
 "ID#testParsingWithWeight(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:07,993][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:08,064][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:08,082][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testParsingWithWeight]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingWithWeight(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1474197367987,
  "executionTime": 141
 }
]

[
 "TEST_STARTED",
 "ID#testNonContextEnabledParsingWithContexts(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:08,135][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:08,198][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:08,211][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testNonContextEnabledParsingWithContexts]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNonContextEnabledParsingWithContexts(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1474197368129,
  "executionTime": 157
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyName(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:08,292][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:08,395][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:08,409][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testEmptyName]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyName(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1474197368286,
  "executionTime": 197
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:08,483][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:08,484][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:08,484][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:16:08,486][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.CompletionFieldMapperTests",
  "startTimestamp": 1474197365198,
  "executionTime": 3306
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests",
   "displayName": "org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests",
   "methodName": null,
   "className": "org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests",
   "children": [
    {
     "id": "ID#testNoMatchSize(org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests)",
     "displayName": "testNoMatchSize(org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests)",
     "methodName": "testNoMatchSize",
     "className": "org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests",
     "children": []
    },
    {
     "id": "ID#testCustomPostingsHighlighter(org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests)",
     "displayName": "testCustomPostingsHighlighter(org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests)",
     "methodName": "testCustomPostingsHighlighter",
     "className": "org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197368514
 }
]

[
 "TEST_STARTED",
 "ID#testNoMatchSize(org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoMatchSize(org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests)",
  "startTimestamp": 1474197368580,
  "executionTime": 134
 }
]

[
 "TEST_STARTED",
 "ID#testCustomPostingsHighlighter(org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCustomPostingsHighlighter(org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests)",
  "startTimestamp": 1474197368714,
  "executionTime": 373
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests",
  "startTimestamp": 1474197368514,
  "executionTime": 575
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.threadpool.ScheduleWithFixedDelayTests",
   "displayName": "org.elasticsearch.threadpool.ScheduleWithFixedDelayTests",
   "methodName": null,
   "className": "org.elasticsearch.threadpool.ScheduleWithFixedDelayTests",
   "children": [
    {
     "id": "ID#testOnRejectionCausesCancellation(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "displayName": "testOnRejectionCausesCancellation(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "methodName": "testOnRejectionCausesCancellation",
     "className": "org.elasticsearch.threadpool.ScheduleWithFixedDelayTests",
     "children": []
    },
    {
     "id": "ID#testDoesNotRescheduleUntilExecutionFinished(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "displayName": "testDoesNotRescheduleUntilExecutionFinished(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "methodName": "testDoesNotRescheduleUntilExecutionFinished",
     "className": "org.elasticsearch.threadpool.ScheduleWithFixedDelayTests",
     "children": []
    },
    {
     "id": "ID#testBlockingCallOnSchedulerThreadFails(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "displayName": "testBlockingCallOnSchedulerThreadFails(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "methodName": "testBlockingCallOnSchedulerThreadFails",
     "className": "org.elasticsearch.threadpool.ScheduleWithFixedDelayTests",
     "children": []
    },
    {
     "id": "ID#testCancellingRunnable(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "displayName": "testCancellingRunnable(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "methodName": "testCancellingRunnable",
     "className": "org.elasticsearch.threadpool.ScheduleWithFixedDelayTests",
     "children": []
    },
    {
     "id": "ID#testBlockingCallOnNonSchedulerThreadAllowed(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "displayName": "testBlockingCallOnNonSchedulerThreadAllowed(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "methodName": "testBlockingCallOnNonSchedulerThreadAllowed",
     "className": "org.elasticsearch.threadpool.ScheduleWithFixedDelayTests",
     "children": []
    },
    {
     "id": "ID#testThatRunnableIsRescheduled(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "displayName": "testThatRunnableIsRescheduled(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "methodName": "testThatRunnableIsRescheduled",
     "className": "org.elasticsearch.threadpool.ScheduleWithFixedDelayTests",
     "children": []
    },
    {
     "id": "ID#testRunnableRunsAtMostOnceAfterCancellation(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "displayName": "testRunnableRunsAtMostOnceAfterCancellation(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "methodName": "testRunnableRunsAtMostOnceAfterCancellation",
     "className": "org.elasticsearch.threadpool.ScheduleWithFixedDelayTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197369100
 }
]

[
 "TEST_STARTED",
 "ID#testOnRejectionCausesCancellation(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOnRejectionCausesCancellation(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
  "startTimestamp": 1474197369127,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testDoesNotRescheduleUntilExecutionFinished(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoesNotRescheduleUntilExecutionFinished(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
  "startTimestamp": 1474197369145,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testBlockingCallOnSchedulerThreadFails(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBlockingCallOnSchedulerThreadFails(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
  "startTimestamp": 1474197369169,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testCancellingRunnable(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCancellingRunnable(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
  "startTimestamp": 1474197369185,
  "executionTime": 97
 }
]

[
 "TEST_STARTED",
 "ID#testBlockingCallOnNonSchedulerThreadAllowed(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBlockingCallOnNonSchedulerThreadAllowed(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
  "startTimestamp": 1474197369283,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testThatRunnableIsRescheduled(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatRunnableIsRescheduled(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
  "startTimestamp": 1474197369306,
  "executionTime": 36
 }
]

[
 "TEST_STARTED",
 "ID#testRunnableRunsAtMostOnceAfterCancellation(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRunnableRunsAtMostOnceAfterCancellation(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
  "startTimestamp": 1474197369343,
  "executionTime": 62
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.threadpool.ScheduleWithFixedDelayTests",
  "startTimestamp": 1474197369100,
  "executionTime": 306
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.cache.CacheTests",
   "displayName": "org.elasticsearch.common.cache.CacheTests",
   "methodName": null,
   "className": "org.elasticsearch.common.cache.CacheTests",
   "children": [
    {
     "id": "ID#testCount(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testCount(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testCount",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testComputeIfAbsentThrowsExceptionIfLoaderReturnsANullValue(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testComputeIfAbsentThrowsExceptionIfLoaderReturnsANullValue(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testComputeIfAbsentThrowsExceptionIfLoaderReturnsANullValue",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testReplaceRecomputesSize(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testReplaceRecomputesSize(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testReplaceRecomputesSize",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testWeigher(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testWeigher(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testWeigher",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testNotificationOnReplace(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testNotificationOnReplace(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testNotificationOnReplace",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testWeight(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testWeight(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testWeight",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testPromotion(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testPromotion(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testPromotion",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testComputeIfAbsentCallsOnce(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testComputeIfAbsentCallsOnce(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testComputeIfAbsentCallsOnce",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testInvalidateAll(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testInvalidateAll(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testInvalidateAll",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testCacheStats(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testCacheStats(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testCacheStats",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testCachePollution(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testCachePollution(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testCachePollution",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testCacheEvictions(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testCacheEvictions(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testCacheEvictions",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testDependentKeyDeadlock(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testDependentKeyDeadlock(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testDependentKeyDeadlock",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testExpirationAfterWrite(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testExpirationAfterWrite(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testExpirationAfterWrite",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testComputeIfAbsentLoadsSuccessfully(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testComputeIfAbsentLoadsSuccessfully(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testComputeIfAbsentLoadsSuccessfully",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testInvalidate(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testInvalidate(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testInvalidate",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testNotificationOnInvalidate(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testNotificationOnInvalidate(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testNotificationOnInvalidate",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testNotificationOnInvalidateAll(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testNotificationOnInvalidateAll(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testNotificationOnInvalidateAll",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testExpirationAfterAccess(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testExpirationAfterAccess(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testExpirationAfterAccess",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    },
    {
     "id": "ID#testTorture(org.elasticsearch.common.cache.CacheTests)",
     "displayName": "testTorture(org.elasticsearch.common.cache.CacheTests)",
     "methodName": "testTorture",
     "className": "org.elasticsearch.common.cache.CacheTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197369421
 }
]

[
 "TEST_STARTED",
 "ID#testCount(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCount(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474197369452,
  "executionTime": 86
 }
]

[
 "TEST_STARTED",
 "ID#testComputeIfAbsentThrowsExceptionIfLoaderReturnsANullValue(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testComputeIfAbsentThrowsExceptionIfLoaderReturnsANullValue(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474197369539,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testReplaceRecomputesSize(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplaceRecomputesSize(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474197369542,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testWeigher(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWeigher(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474197369555,
  "executionTime": 79
 }
]

[
 "TEST_STARTED",
 "ID#testNotificationOnReplace(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotificationOnReplace(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474197369634,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testWeight(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWeight(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474197369658,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testPromotion(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPromotion(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474197369675,
  "executionTime": 40
 }
]

[
 "TEST_STARTED",
 "ID#testComputeIfAbsentCallsOnce(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testComputeIfAbsentCallsOnce(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474197369716,
  "executionTime": 722
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidateAll(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidateAll(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474197370439,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testCacheStats(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCacheStats(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474197370449,
  "executionTime": 32
 }
]

[
 "TEST_STARTED",
 "ID#testCachePollution(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCachePollution(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474197370481,
  "executionTime": 384
 }
]

[
 "TEST_STARTED",
 "ID#testCacheEvictions(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCacheEvictions(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474197370866,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testDependentKeyDeadlock(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDependentKeyDeadlock(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474197370878,
  "executionTime": 775
 }
]

[
 "TEST_STARTED",
 "ID#testExpirationAfterWrite(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExpirationAfterWrite(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474197371653,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testComputeIfAbsentLoadsSuccessfully(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testComputeIfAbsentLoadsSuccessfully(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474197371667,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidate(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidate(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474197371682,
  "executionTime": 31
 }
]

[
 "TEST_STARTED",
 "ID#testNotificationOnInvalidate(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotificationOnInvalidate(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474197371714,
  "executionTime": 35
 }
]

[
 "TEST_STARTED",
 "ID#testNotificationOnInvalidateAll(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotificationOnInvalidateAll(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474197371750,
  "executionTime": 31
 }
]

[
 "TEST_STARTED",
 "ID#testExpirationAfterAccess(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExpirationAfterAccess(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474197371782,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testTorture(org.elasticsearch.common.cache.CacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTorture(org.elasticsearch.common.cache.CacheTests)",
  "startTimestamp": 1474197371799,
  "executionTime": 593
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.cache.CacheTests",
  "startTimestamp": 1474197369421,
  "executionTime": 2974
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.settings.PropertyPlaceholderTests",
   "displayName": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
   "children": [
    {
     "id": "ID#testNestedLongerPrefix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testNestedLongerPrefix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testNestedLongerPrefix",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    },
    {
     "id": "ID#testCircularReference(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testCircularReference(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testCircularReference",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    },
    {
     "id": "ID#testSimple(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testSimple(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    },
    {
     "id": "ID#testIgnoredUnresolvedPlaceholder(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testIgnoredUnresolvedPlaceholder(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testIgnoredUnresolvedPlaceholder",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    },
    {
     "id": "ID#testRecursive(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testRecursive(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testRecursive",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    },
    {
     "id": "ID#testDefaultValue(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testDefaultValue(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testDefaultValue",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    },
    {
     "id": "ID#testShouldIgnoreMissing(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testShouldIgnoreMissing(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testShouldIgnoreMissing",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    },
    {
     "id": "ID#testShouldRemoveMissing(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testShouldRemoveMissing(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testShouldRemoveMissing",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    },
    {
     "id": "ID#testNotIgnoredUnresolvedPlaceholder(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testNotIgnoredUnresolvedPlaceholder(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testNotIgnoredUnresolvedPlaceholder",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    },
    {
     "id": "ID#testVariousPrefixSuffix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testVariousPrefixSuffix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testVariousPrefixSuffix",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    },
    {
     "id": "ID#testNestedSameLengthPrefixSuffix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testNestedSameLengthPrefixSuffix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testNestedSameLengthPrefixSuffix",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    },
    {
     "id": "ID#testNestedShorterPrefix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testNestedShorterPrefix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testNestedShorterPrefix",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197372402
 }
]

[
 "TEST_STARTED",
 "ID#testNestedLongerPrefix(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedLongerPrefix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1474197372488,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testCircularReference(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCircularReference(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1474197372495,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1474197372497,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoredUnresolvedPlaceholder(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoredUnresolvedPlaceholder(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1474197372516,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testRecursive(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursive(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1474197372518,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultValue(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultValue(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1474197372522,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testShouldIgnoreMissing(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShouldIgnoreMissing(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1474197372524,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testShouldRemoveMissing(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShouldRemoveMissing(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1474197372526,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testNotIgnoredUnresolvedPlaceholder(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotIgnoredUnresolvedPlaceholder(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1474197372528,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testVariousPrefixSuffix(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVariousPrefixSuffix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1474197372529,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testNestedSameLengthPrefixSuffix(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedSameLengthPrefixSuffix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1474197372540,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testNestedShorterPrefix(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedShorterPrefix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1474197372541,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.settings.PropertyPlaceholderTests",
  "startTimestamp": 1474197372402,
  "executionTime": 143
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.transport.local.SimpleLocalTransportTests",
   "displayName": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
   "methodName": null,
   "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
   "children": [
    {
     "id": "ID#testMockUnresponsiveRule(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testMockUnresponsiveRule(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testMockUnresponsiveRule",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testErrorMessage(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testErrorMessage(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testErrorMessage",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testVoidMessageCompressed(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testVoidMessageCompressed(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testVoidMessageCompressed",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testVersionFrom0to1(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testVersionFrom0to1(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testVersionFrom0to1",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testDisconnectListener(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testDisconnectListener(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testDisconnectListener",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testHostOnMessages(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testHostOnMessages(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testHostOnMessages",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testMockFailToSendNoConnectRule(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testMockFailToSendNoConnectRule(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testMockFailToSendNoConnectRule",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testVersionFrom0to0(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testVersionFrom0to0(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testVersionFrom0to0",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testVersionFrom1to1(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testVersionFrom1to1(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testVersionFrom1to1",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testSendRandomRequests(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testSendRandomRequests(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testSendRandomRequests",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testNotifyOnShutdown(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testNotifyOnShutdown(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testNotifyOnShutdown",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testHelloWorld(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testHelloWorld(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testHelloWorld",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testThreadContext(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testThreadContext(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testThreadContext",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testBlockingIncomingRequests(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testBlockingIncomingRequests(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testBlockingIncomingRequests",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testLocalNodeConnection(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testLocalNodeConnection(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testLocalNodeConnection",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testTimeoutSendExceptionWithNeverSendingBackResponse(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testTimeoutSendExceptionWithNeverSendingBackResponse(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testTimeoutSendExceptionWithNeverSendingBackResponse",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testTimeoutSendExceptionWithDelayedResponse(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testTimeoutSendExceptionWithDelayedResponse(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testTimeoutSendExceptionWithDelayedResponse",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testTracerLog(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testTracerLog(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testTracerLog",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testVersionFrom1to0(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testVersionFrom1to0(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testVersionFrom1to0",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testConcurrentSendRespondAndDisconnect(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testConcurrentSendRespondAndDisconnect(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testConcurrentSendRespondAndDisconnect",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testHelloWorldCompressed(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testHelloWorldCompressed(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testHelloWorldCompressed",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197372596
 }
]

[
 "TEST_STARTED",
 "ID#testMockUnresponsiveRule(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:12,777][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[30]}, bound_addresses {local[30]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:12,779][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[31]}, bound_addresses {local[31]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:12,781][INFO ][org.elasticsearch.transport.local] [node_s_0] --> actively connecting to local node%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMockUnresponsiveRule(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474197372771,
  "executionTime": 153
 }
]

[
 "TEST_STARTED",
 "ID#testErrorMessage(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:12,928][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[32]}, bound_addresses {local[32]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:12,930][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[33]}, bound_addresses {local[33]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:12,930][INFO ][org.elasticsearch.transport.local] [node_s_0] --> using local node optimization%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testErrorMessage(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474197372924,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testVoidMessageCompressed(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:12,948][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[34]}, bound_addresses {local[34]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:12,949][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[35]}, bound_addresses {local[35]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:12,949][INFO ][org.elasticsearch.transport.local] [node_s_0] --> actively connecting to local node%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVoidMessageCompressed(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474197372943,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testVersionFrom0to1(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:12,971][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[36]}, bound_addresses {local[36]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:12,972][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[37]}, bound_addresses {local[37]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:12,972][INFO ][org.elasticsearch.transport.local] [node_s_0] --> actively connecting to local node%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionFrom0to1(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474197372967,
  "executionTime": 169
 }
]

[
 "TEST_STARTED",
 "ID#testDisconnectListener(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:13,140][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[38]}, bound_addresses {local[38]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:13,141][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[39]}, bound_addresses {local[39]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:13,141][INFO ][org.elasticsearch.transport.local] [node_s_0] --> using local node optimization%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDisconnectListener(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474197373136,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testHostOnMessages(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:13,154][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[40]}, bound_addresses {local[40]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:13,155][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[41]}, bound_addresses {local[41]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:13,155][INFO ][org.elasticsearch.transport.local] [node_s_0] --> actively connecting to local node%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHostOnMessages(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474197373150,
  "executionTime": 81
 }
]

[
 "TEST_STARTED",
 "ID#testMockFailToSendNoConnectRule(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:13,235][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[42]}, bound_addresses {local[42]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:13,237][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[43]}, bound_addresses {local[43]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:13,237][INFO ][org.elasticsearch.transport.local] [node_s_0] --> actively connecting to local node%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMockFailToSendNoConnectRule(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474197373232,
  "executionTime": 33
 }
]

[
 "TEST_STARTED",
 "ID#testVersionFrom0to0(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:13,270][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[44]}, bound_addresses {local[44]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:13,271][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[45]}, bound_addresses {local[45]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:13,271][INFO ][org.elasticsearch.transport.local] [node_s_0] --> using local node optimization%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionFrom0to0(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474197373265,
  "executionTime": 41
 }
]

[
 "TEST_STARTED",
 "ID#testVersionFrom1to1(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:13,310][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[46]}, bound_addresses {local[46]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:13,312][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[47]}, bound_addresses {local[47]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:13,312][INFO ][org.elasticsearch.transport.local] [node_s_0] --> using local node optimization%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionFrom1to1(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474197373307,
  "executionTime": 106
 }
]

[
 "TEST_STARTED",
 "ID#testSendRandomRequests(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:13,417][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[48]}, bound_addresses {local[48]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:13,418][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[49]}, bound_addresses {local[49]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:13,418][INFO ][org.elasticsearch.transport.local] [node_s_0] --> actively connecting to local node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:13,840][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[50]}, bound_addresses {local[50]}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSendRandomRequests(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474197373413,
  "executionTime": 558
 }
]

[
 "TEST_STARTED",
 "ID#testNotifyOnShutdown(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:13,975][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[51]}, bound_addresses {local[51]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:13,976][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[52]}, bound_addresses {local[52]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:13,976][INFO ][org.elasticsearch.transport.local] [node_s_0] --> actively connecting to local node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:13,981][INFO ][org.elasticsearch.transport.local] [node_s_0] Stop ServiceB now%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotifyOnShutdown(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474197373971,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testHelloWorld(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:13,987][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[53]}, bound_addresses {local[53]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:13,988][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[54]}, bound_addresses {local[54]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:13,988][INFO ][org.elasticsearch.transport.local] [node_s_0] --> using local node optimization%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHelloWorld(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474197373984,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testThreadContext(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,009][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[55]}, bound_addresses {local[55]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,010][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[56]}, bound_addresses {local[56]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,010][INFO ][org.elasticsearch.transport.local] [node_s_0] --> actively connecting to local node%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThreadContext(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474197374005,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testBlockingIncomingRequests(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,023][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[57]}, bound_addresses {local[57]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,024][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[58]}, bound_addresses {local[58]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,024][INFO ][org.elasticsearch.transport.local] [node_s_0] --> actively connecting to local node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,027][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[59]}, bound_addresses {local[59]}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBlockingIncomingRequests(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474197374019,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testLocalNodeConnection(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,054][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[60]}, bound_addresses {local[60]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,057][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[61]}, bound_addresses {local[61]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,057][INFO ][org.elasticsearch.transport.local] [node_s_0] --> actively connecting to local node%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLocalNodeConnection(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474197374040,
  "executionTime": 59
 }
]

[
 "TEST_STARTED",
 "ID#testTimeoutSendExceptionWithNeverSendingBackResponse(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,116][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[62]}, bound_addresses {local[62]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,117][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[63]}, bound_addresses {local[63]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,117][INFO ][org.elasticsearch.transport.local] [node_s_0] --> using local node optimization%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeoutSendExceptionWithNeverSendingBackResponse(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474197374099,
  "executionTime": 184
 }
]

[
 "TEST_STARTED",
 "ID#testTimeoutSendExceptionWithDelayedResponse(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,320][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[64]}, bound_addresses {local[64]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,321][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[65]}, bound_addresses {local[65]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,321][INFO ][org.elasticsearch.transport.local] [node_s_0] --> actively connecting to local node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,519][WARN ][org.elasticsearch.test.transport] [TS_B] Received response for a request that has timed out, sent [117ms] ago, timed out [16ms] ago, action [sayHelloTimeoutDelayedResponse], node [{TS_A}{XagMx38iQiu3v8vf4JI13Q}{local}{local[64]}], id [0]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeoutSendExceptionWithDelayedResponse(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474197374283,
  "executionTime": 237
 }
]

[
 "TEST_STARTED",
 "ID#testTracerLog(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,525][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[66]}, bound_addresses {local[66]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,526][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[67]}, bound_addresses {local[67]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,526][INFO ][org.elasticsearch.transport.local] [node_s_0] --> actively connecting to local node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,536][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [0][test] sent to [{TS_B}{wQROHAHtRxyWRjp3KB07Kg}{local}{local[67]}] (timeout: [null])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,536][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [0][test] received request%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,537][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [0][test] sent response%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,537][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [0][test] received response from [{TS_B}{wQROHAHtRxyWRjp3KB07Kg}{local}{local[67]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,537][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [1][testError] sent to [{TS_B}{wQROHAHtRxyWRjp3KB07Kg}{local}{local[67]}] (timeout: [null])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,538][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [1][testError] received request%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,539][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [1][testError] received response from [{TS_B}{wQROHAHtRxyWRjp3KB07Kg}{local}{local[67]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,539][TRACE][org.elasticsearch.test.transport.tracer] [1][testError] sent error response%0D%0Ajava.lang.RuntimeException: %0A%09at org.elasticsearch.transport.AbstractSimpleTransportTestCase$23.messageReceived(AbstractSimpleTransportTestCase.java:809) ~[framework-5.0.0-alpha6-SNAPSHOT.jar:?]%0A%09at org.elasticsearch.transport.AbstractSimpleTransportTestCase$23.messageReceived(AbstractSimpleTransportTestCase.java:803) ~[framework-5.0.0-alpha6-SNAPSHOT.jar:?]%0A%09at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33) ~[main/:?]%0A%09at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:69) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.handleRequest(LocalTransport.java:335) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.processReceivedMessage(LocalTransport.java:283) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.lambda$receiveMessage$0(LocalTransport.java:251) ~[main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:444) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,542][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [transport.tracer.exclude] from [[\"internal:discovery/zen/fd*\",\"cluster:monitor/nodes/liveness\"]] to [[\"*Error\"]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,542][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [2][test] sent to [{TS_B}{wQROHAHtRxyWRjp3KB07Kg}{local}{local[67]}] (timeout: [null])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,543][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [2][test] received request%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,544][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [2][test] sent response%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,544][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [2][test] received response from [{TS_B}{wQROHAHtRxyWRjp3KB07Kg}{local}{local[67]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,545][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [3][testError] received request%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,545][TRACE][org.elasticsearch.test.transport.tracer] [3][testError] sent error response%0D%0Ajava.lang.RuntimeException: %0A%09at org.elasticsearch.transport.AbstractSimpleTransportTestCase$23.messageReceived(AbstractSimpleTransportTestCase.java:809) ~[framework-5.0.0-alpha6-SNAPSHOT.jar:?]%0A%09at org.elasticsearch.transport.AbstractSimpleTransportTestCase$23.messageReceived(AbstractSimpleTransportTestCase.java:803) ~[framework-5.0.0-alpha6-SNAPSHOT.jar:?]%0A%09at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33) ~[main/:?]%0A%09at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:69) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.handleRequest(LocalTransport.java:335) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.processReceivedMessage(LocalTransport.java:283) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.lambda$receiveMessage$0(LocalTransport.java:251) ~[main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:444) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTracerLog(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474197374520,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testVersionFrom1to0(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,553][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[68]}, bound_addresses {local[68]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,554][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[69]}, bound_addresses {local[69]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,554][INFO ][org.elasticsearch.transport.local] [node_s_0] --> actively connecting to local node%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionFrom1to0(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474197374549,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testConcurrentSendRespondAndDisconnect(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,568][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[70]}, bound_addresses {local[70]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,569][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[71]}, bound_addresses {local[71]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,569][INFO ][org.elasticsearch.transport.local] [node_s_0] --> using local node optimization%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,580][INFO ][org.elasticsearch.test.transport] [TS_B_0] publish_address {local[72]}, bound_addresses {local[72]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,582][INFO ][org.elasticsearch.test.transport] [TS_B_3] publish_address {local[73]}, bound_addresses {local[73]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,584][INFO ][org.elasticsearch.test.transport] [TS_B_6] publish_address {local[74]}, bound_addresses {local[74]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,586][INFO ][org.elasticsearch.test.transport] [TS_B_9] publish_address {local[75]}, bound_addresses {local[75]}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcurrentSendRespondAndDisconnect(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474197374564,
  "executionTime": 58
 }
]

[
 "TEST_STARTED",
 "ID#testHelloWorldCompressed(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,627][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[76]}, bound_addresses {local[76]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,628][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[77]}, bound_addresses {local[77]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:16:14,628][INFO ][org.elasticsearch.transport.local] [node_s_0] --> actively connecting to local node%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHelloWorldCompressed(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474197374622,
  "executionTime": 14
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.transport.local.SimpleLocalTransportTests",
  "startTimestamp": 1474197372596,
  "executionTime": 2043
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.io.FileSystemUtilsTests",
   "displayName": "org.elasticsearch.common.io.FileSystemUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.io.FileSystemUtilsTests",
   "children": [
    {
     "id": "ID#testIsHidden(org.elasticsearch.common.io.FileSystemUtilsTests)",
     "displayName": "testIsHidden(org.elasticsearch.common.io.FileSystemUtilsTests)",
     "methodName": "testIsHidden",
     "className": "org.elasticsearch.common.io.FileSystemUtilsTests",
     "children": []
    },
    {
     "id": "ID#testAppend(org.elasticsearch.common.io.FileSystemUtilsTests)",
     "displayName": "testAppend(org.elasticsearch.common.io.FileSystemUtilsTests)",
     "methodName": "testAppend",
     "className": "org.elasticsearch.common.io.FileSystemUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197374646
 }
]

[
 "TEST_STARTED",
 "ID#testIsHidden(org.elasticsearch.common.io.FileSystemUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsHidden(org.elasticsearch.common.io.FileSystemUtilsTests)",
  "startTimestamp": 1474197374663,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testAppend(org.elasticsearch.common.io.FileSystemUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppend(org.elasticsearch.common.io.FileSystemUtilsTests)",
  "startTimestamp": 1474197374668,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.io.FileSystemUtilsTests",
  "startTimestamp": 1474197374646,
  "executionTime": 33
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.SimpleQueryParserTests",
   "displayName": "org.elasticsearch.index.query.SimpleQueryParserTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.SimpleQueryParserTests",
   "children": [
    {
     "id": "ID#testAnalyzerWildcardWithSynonyms(org.elasticsearch.index.query.SimpleQueryParserTests)",
     "displayName": "testAnalyzerWildcardWithSynonyms(org.elasticsearch.index.query.SimpleQueryParserTests)",
     "methodName": "testAnalyzerWildcardWithSynonyms",
     "className": "org.elasticsearch.index.query.SimpleQueryParserTests",
     "children": []
    },
    {
     "id": "ID#testAnalyzeWildcard(org.elasticsearch.index.query.SimpleQueryParserTests)",
     "displayName": "testAnalyzeWildcard(org.elasticsearch.index.query.SimpleQueryParserTests)",
     "methodName": "testAnalyzeWildcard",
     "className": "org.elasticsearch.index.query.SimpleQueryParserTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197374695
 }
]

[
 "TEST_STARTED",
 "ID#testAnalyzerWildcardWithSynonyms(org.elasticsearch.index.query.SimpleQueryParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAnalyzerWildcardWithSynonyms(org.elasticsearch.index.query.SimpleQueryParserTests)",
  "startTimestamp": 1474197374757,
  "executionTime": 31
 }
]

[
 "TEST_STARTED",
 "ID#testAnalyzeWildcard(org.elasticsearch.index.query.SimpleQueryParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAnalyzeWildcard(org.elasticsearch.index.query.SimpleQueryParserTests)",
  "startTimestamp": 1474197374788,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.SimpleQueryParserTests",
  "startTimestamp": 1474197374695,
  "executionTime": 99
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.IndexSettingsTests",
   "displayName": "org.elasticsearch.index.IndexSettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.index.IndexSettingsTests",
   "children": [
    {
     "id": "ID#testGCDeletesSetting(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testGCDeletesSetting(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testGCDeletesSetting",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testNodeSettingsAreContained(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testNodeSettingsAreContained(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testNodeSettingsAreContained",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testSettingsConsistency(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testSettingsConsistency(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testSettingsConsistency",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testMaxResultWindow(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testMaxResultWindow(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testMaxResultWindow",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testIsWarmerEnabled(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testIsWarmerEnabled(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testIsWarmerEnabled",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testArchiveBrokenIndexSettings(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testArchiveBrokenIndexSettings(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testArchiveBrokenIndexSettings",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testIsTTLPurgeDisabled(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testIsTTLPurgeDisabled(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testIsTTLPurgeDisabled",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testRunListener(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testRunListener(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testRunListener",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testUpdateDurability(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testUpdateDurability(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testUpdateDurability",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testTranslogFlushSizeThreshold(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testTranslogFlushSizeThreshold(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testTranslogFlushSizeThreshold",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testRefreshInterval(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testRefreshInterval(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testRefreshInterval",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testMergedSettingsArePassed(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testMergedSettingsArePassed(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testMergedSettingsArePassed",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testSettingsUpdateValidator(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testSettingsUpdateValidator(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testSettingsUpdateValidator",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197374799
 }
]

[
 "TEST_STARTED",
 "ID#testGCDeletesSetting(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:14,823][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [420515276ms] to [1414862392ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:14,826][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [1414862392ms] to [-1]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGCDeletesSetting(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1474197374820,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testNodeSettingsAreContained(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:14,830][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.foo.bar] from [0] to [42]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:14,831][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.foo.bar] from [42] to [43]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNodeSettingsAreContained(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1474197374826,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSettingsConsistency(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSettingsConsistency(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1474197374831,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testMaxResultWindow(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:14,838][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.max_result_window] from [15] to [42]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:14,838][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.max_rescore_window] from [15] to [42]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:14,839][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.max_result_window] from [42] to [10000]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:14,839][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.max_rescore_window] from [42] to [10000]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMaxResultWindow(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1474197374836,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIsWarmerEnabled(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:14,842][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.warmer.enabled] from [false] to [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsWarmerEnabled(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1474197374840,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testArchiveBrokenIndexSettings(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 13:16:14,847 TEST-IndexSettingsTests.testArchiveBrokenIndexSettings-seed#[DB64F96F238DCA2A] ERROR An exception occurred processing Appender console java.security.AccessControlException: access denied (\"java.lang.RuntimePermission\" \"accessClassInPackage.sun.reflect\")%0D%0A%09at java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)%0D%0A%09at java.security.AccessController.checkPermission(AccessController.java:884)%0D%0A%09at java.lang.SecurityManager.checkPermission(SecurityManager.java:549)%0D%0A%09at java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1564)%0D%0A%09at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:311)%0D%0A%09at java.lang.ClassLoader.loadClass(ClassLoader.java:357)%0D%0A%09at java.lang.Class.forName0(Native Method)%0D%0A%09at java.lang.Class.forName(Class.java:264)%0D%0A%09at org.apache.logging.log4j.util.LoaderUtil.loadClass(LoaderUtil.java:122)%0D%0A%09at org.apache.logging.log4j.core.util.Loader.loadClass(Loader.java:228)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.loadClass(ThrowableProxy.java:496)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.toExtendedStackTrace(ThrowableProxy.java:617)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:135)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:117)%0D%0A%09at org.apache.logging.log4j.core.impl.MutableLogEvent.getThrownProxy(MutableLogEvent.java:314)%0D%0A%09at org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter.format(ExtendedThrowablePatternConverter.java:61)%0D%0A%09at org.apache.logging.log4j.core.pattern.PatternFormatter.format(PatternFormatter.java:38)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout$PatternSerializer.toSerializable(PatternLayout.java:294)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.toText(PatternLayout.java:195)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:180)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:57)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.directEncodeEvent(AbstractOutputStreamAppender.java:120)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.tryAppend(AbstractOutputStreamAppender.java:113)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.append(AbstractOutputStreamAppender.java:104)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.tryCallAppender(AppenderControl.java:155)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender0(AppenderControl.java:128)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppenderPreventRecursion(AppenderControl.java:119)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender(AppenderControl.java:84)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.callAppenders(LoggerConfig.java:390)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:375)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:359)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:349)%0D%0A%09at org.apache.logging.log4j.core.config.AwaitCompletionReliabilityStrategy.log(AwaitCompletionReliabilityStrategy.java:63)%0D%0A%09at org.apache.logging.log4j.core.Logger.logMessage(Logger.java:146)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logMessage(AbstractLogger.java:1983)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled(AbstractLogger.java:1845)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.warn(AbstractLogger.java:2536)%0D%0A%09at org.elasticsearch.common.settings.AbstractScopedSettings.archiveUnknownOrBrokenSettings(AbstractScopedSettings.java:525)%0D%0A%09at org.elasticsearch.index.IndexSettingsTests.testArchiveBrokenIndexSettings(IndexSettingsTests.java:355)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0D%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0D%0A%09at java.lang.reflect.Method.invoke(Method.java:498)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at java.lang.Thread.run(Thread.java:745)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:14,850][WARN ][org.elasticsearch.common.settings] [node_s_0] found unknown setting: index.unknown value: foo - archiving%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArchiveBrokenIndexSettings(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1474197374843,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testIsTTLPurgeDisabled(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:14,853][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.ttl.disable_purge] from [false] to [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:14,853][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.ttl.disable_purge] from [true] to [false]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsTTLPurgeDisabled(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1474197374850,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRunListener(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:14,857][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.test.setting.int] from [-1] to [42]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRunListener(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1474197374854,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUpdateDurability(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:14,860][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.durability] from [async] to [request]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdateDurability(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1474197374857,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testTranslogFlushSizeThreshold(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:14,864][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.translog.flush_threshold_size] from [338.5mb] to [1.9gb]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTranslogFlushSizeThreshold(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1474197374861,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRefreshInterval(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRefreshInterval(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1474197374865,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMergedSettingsArePassed(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:14,872][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.test.setting.int] from [-1] to [42]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:14,872][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.not.updated] from [] to [boom]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergedSettingsArePassed(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1474197374868,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSettingsUpdateValidator(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 13:16:14,878 TEST-IndexSettingsTests.testSettingsUpdateValidator-seed#[DB64F96F238DCA2A] ERROR An exception occurred processing Appender console java.security.AccessControlException: access denied (\"java.lang.RuntimePermission\" \"accessClassInPackage.sun.reflect\")%0D%0A%09at java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)%0D%0A%09at java.security.AccessController.checkPermission(AccessController.java:884)%0D%0A%09at java.lang.SecurityManager.checkPermission(SecurityManager.java:549)%0D%0A%09at java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1564)%0D%0A%09at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:311)%0D%0A%09at java.lang.ClassLoader.loadClass(ClassLoader.java:357)%0D%0A%09at java.lang.Class.forName0(Native Method)%0D%0A%09at java.lang.Class.forName(Class.java:264)%0D%0A%09at org.apache.logging.log4j.util.LoaderUtil.loadClass(LoaderUtil.java:122)%0D%0A%09at org.apache.logging.log4j.core.util.Loader.loadClass(Loader.java:228)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.loadClass(ThrowableProxy.java:496)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.toExtendedStackTrace(ThrowableProxy.java:617)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:135)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:117)%0D%0A%09at org.apache.logging.log4j.core.impl.MutableLogEvent.getThrownProxy(MutableLogEvent.java:314)%0D%0A%09at org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter.format(ExtendedThrowablePatternConverter.java:61)%0D%0A%09at org.apache.logging.log4j.core.pattern.PatternFormatter.format(PatternFormatter.java:38)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout$PatternSerializer.toSerializable(PatternLayout.java:294)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.toText(PatternLayout.java:195)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:180)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:57)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.directEncodeEvent(AbstractOutputStreamAppender.java:120)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.tryAppend(AbstractOutputStreamAppender.java:113)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.append(AbstractOutputStreamAppender.java:104)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.tryCallAppender(AppenderControl.java:155)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender0(AppenderControl.java:128)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppenderPreventRecursion(AppenderControl.java:119)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender(AppenderControl.java:84)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.callAppenders(LoggerConfig.java:390)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:375)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:359)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:349)%0D%0A%09at org.apache.logging.log4j.core.config.AwaitCompletionReliabilityStrategy.log(AwaitCompletionReliabilityStrategy.java:63)%0D%0A%09at org.apache.logging.log4j.core.Logger.logMessage(Logger.java:146)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logMessage(AbstractLogger.java:1983)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled(AbstractLogger.java:1845)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.warn(AbstractLogger.java:2536)%0D%0A%09at org.elasticsearch.common.settings.AbstractScopedSettings.applySettings(AbstractScopedSettings.java:160)%0D%0A%09at org.elasticsearch.index.IndexSettings.updateIndexMetaData(IndexSettings.java:424)%0D%0A%09at org.elasticsearch.index.IndexSettingsTests.lambda$testSettingsUpdateValidator$1(IndexSettingsTests.java:86)%0D%0A%09at org.apache.lucene.util.LuceneTestCase.expectThrows(LuceneTestCase.java:2677)%0D%0A%09at org.elasticsearch.index.IndexSettingsTests.testSettingsUpdateValidator(IndexSettingsTests.java:86)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0D%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0D%0A%09at java.lang.reflect.Method.invoke(Method.java:498)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at java.lang.Thread.run(Thread.java:745)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 13:16:14,882 TEST-IndexSettingsTests.testSettingsUpdateValidator-seed#[DB64F96F238DCA2A] ERROR An exception occurred processing Appender console java.security.AccessControlException: access denied (\"java.lang.RuntimePermission\" \"accessClassInPackage.sun.reflect\")%0D%0A%09at java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)%0D%0A%09at java.security.AccessController.checkPermission(AccessController.java:884)%0D%0A%09at java.lang.SecurityManager.checkPermission(SecurityManager.java:549)%0D%0A%09at java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1564)%0D%0A%09at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:311)%0D%0A%09at java.lang.ClassLoader.loadClass(ClassLoader.java:357)%0D%0A%09at java.lang.Class.forName0(Native Method)%0D%0A%09at java.lang.Class.forName(Class.java:264)%0D%0A%09at org.apache.logging.log4j.util.LoaderUtil.loadClass(LoaderUtil.java:122)%0D%0A%09at org.apache.logging.log4j.core.util.Loader.loadClass(Loader.java:228)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.loadClass(ThrowableProxy.java:496)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.toExtendedStackTrace(ThrowableProxy.java:617)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:135)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:117)%0D%0A%09at org.apache.logging.log4j.core.impl.MutableLogEvent.getThrownProxy(MutableLogEvent.java:314)%0D%0A%09at org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter.format(ExtendedThrowablePatternConverter.java:61)%0D%0A%09at org.apache.logging.log4j.core.pattern.PatternFormatter.format(PatternFormatter.java:38)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout$PatternSerializer.toSerializable(PatternLayout.java:294)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.toText(PatternLayout.java:195)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:180)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:57)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.directEncodeEvent(AbstractOutputStreamAppender.java:120)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.tryAppend(AbstractOutputStreamAppender.java:113)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.append(AbstractOutputStreamAppender.java:104)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.tryCallAppender(AppenderControl.java:155)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender0(AppenderControl.java:128)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppenderPreventRecursion(AppenderControl.java:119)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender(AppenderControl.java:84)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.callAppenders(LoggerConfig.java:390)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:375)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:359)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:349)%0D%0A%09at org.apache.logging.log4j.core.config.AwaitCompletionReliabilityStrategy.log(AwaitCompletionReliabilityStrategy.java:63)%0D%0A%09at org.apache.logging.log4j.core.Logger.logMessage(Logger.java:146)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logMessage(AbstractLogger.java:1988)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled(AbstractLogger.java:1960)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.warn(AbstractLogger.java:2526)%0D%0A%09at org.elasticsearch.common.settings.AbstractScopedSettings.applySettings(AbstractScopedSettings.java:169)%0D%0A%09at org.elasticsearch.index.IndexSettings.updateIndexMetaData(IndexSettings.java:424)%0D%0A%09at org.elasticsearch.index.IndexSettingsTests.lambda$testSettingsUpdateValidator$1(IndexSettingsTests.java:86)%0D%0A%09at org.apache.lucene.util.LuceneTestCase.expectThrows(LuceneTestCase.java:2677)%0D%0A%09at org.elasticsearch.index.IndexSettingsTests.testSettingsUpdateValidator(IndexSettingsTests.java:86)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0D%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0D%0A%09at java.lang.reflect.Method.invoke(Method.java:498)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at java.lang.Thread.run(Thread.java:745)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:14,884][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.test.setting.int] from [-1] to [41]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSettingsUpdateValidator(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1474197374872,
  "executionTime": 12
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.IndexSettingsTests",
  "startTimestamp": 1474197374799,
  "executionTime": 87
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.TokenCountFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.TokenCountFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.TokenCountFieldMapperTests",
   "children": [
    {
     "id": "ID#testEmptyName(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)",
     "displayName": "testEmptyName(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)",
     "methodName": "testEmptyName",
     "className": "org.elasticsearch.index.mapper.TokenCountFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testCountPositions(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)",
     "displayName": "testCountPositions(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)",
     "methodName": "testCountPositions",
     "className": "org.elasticsearch.index.mapper.TokenCountFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testMerge(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)",
     "displayName": "testMerge(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)",
     "methodName": "testMerge",
     "className": "org.elasticsearch.index.mapper.TokenCountFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197374896
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyName(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:14,927][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:14,953][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:14,953][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:14,957][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[564], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:14,960][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:14,960][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:15,319][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:15,320][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:15,320][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[78]}, bound_addresses {local[78]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:15,324][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{pE7IMp4VQEm-VIU7GKeoJg}{IrFZeLAPSLiGCw3d3FISJw}{local}{local[78]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:15,324][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:15,336][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:15,353][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:15,408][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:15,426][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_old] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:15,533][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_old][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:15,554][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test_old] [TokenCountFieldMapperTests#testEmptyName]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyName(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)",
  "startTimestamp": 1474197374911,
  "executionTime": 721
 }
]

[
 "TEST_STARTED",
 "ID#testCountPositions(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:15,649][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test_old] [TokenCountFieldMapperTests#testCountPositions]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCountPositions(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)",
  "startTimestamp": 1474197375632,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testMerge(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:15,657][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:15,750][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:15,767][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TokenCountFieldMapperTests#testMerge]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMerge(org.elasticsearch.index.mapper.TokenCountFieldMapperTests)",
  "startTimestamp": 1474197375650,
  "executionTime": 174
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:15,825][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:15,825][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:15,826][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:15,827][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.TokenCountFieldMapperTests",
  "startTimestamp": 1474197374896,
  "executionTime": 942
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests",
   "displayName": "org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests",
   "children": [
    {
     "id": "ID#testPatternCaptureTokenFilter(org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests)",
     "displayName": "testPatternCaptureTokenFilter(org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests)",
     "methodName": "testPatternCaptureTokenFilter",
     "className": "org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests",
     "children": []
    },
    {
     "id": "ID#testNoPatterns(org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests)",
     "displayName": "testNoPatterns(org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests)",
     "methodName": "testNoPatterns",
     "className": "org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197375845
 }
]

[
 "TEST_STARTED",
 "ID#testPatternCaptureTokenFilter(org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPatternCaptureTokenFilter(org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests)",
  "startTimestamp": 1474197375861,
  "executionTime": 35
 }
]

[
 "TEST_STARTED",
 "ID#testNoPatterns(org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoPatterns(org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests)",
  "startTimestamp": 1474197375896,
  "executionTime": 18
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.PatternCaptureTokenFilterTests",
  "startTimestamp": 1474197375845,
  "executionTime": 73
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.hash.MessageDigestsTests",
   "displayName": "org.elasticsearch.common.hash.MessageDigestsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.hash.MessageDigestsTests",
   "children": [
    {
     "id": "ID#testSha1(org.elasticsearch.common.hash.MessageDigestsTests)",
     "displayName": "testSha1(org.elasticsearch.common.hash.MessageDigestsTests)",
     "methodName": "testSha1",
     "className": "org.elasticsearch.common.hash.MessageDigestsTests",
     "children": []
    },
    {
     "id": "ID#testToHexString(org.elasticsearch.common.hash.MessageDigestsTests)",
     "displayName": "testToHexString(org.elasticsearch.common.hash.MessageDigestsTests)",
     "methodName": "testToHexString",
     "className": "org.elasticsearch.common.hash.MessageDigestsTests",
     "children": []
    },
    {
     "id": "ID#testSha256(org.elasticsearch.common.hash.MessageDigestsTests)",
     "displayName": "testSha256(org.elasticsearch.common.hash.MessageDigestsTests)",
     "methodName": "testSha256",
     "className": "org.elasticsearch.common.hash.MessageDigestsTests",
     "children": []
    },
    {
     "id": "ID#testMd5(org.elasticsearch.common.hash.MessageDigestsTests)",
     "displayName": "testMd5(org.elasticsearch.common.hash.MessageDigestsTests)",
     "methodName": "testMd5",
     "className": "org.elasticsearch.common.hash.MessageDigestsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197375925
 }
]

[
 "TEST_STARTED",
 "ID#testSha1(org.elasticsearch.common.hash.MessageDigestsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSha1(org.elasticsearch.common.hash.MessageDigestsTests)",
  "startTimestamp": 1474197375943,
  "executionTime": 167
 }
]

[
 "TEST_STARTED",
 "ID#testToHexString(org.elasticsearch.common.hash.MessageDigestsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToHexString(org.elasticsearch.common.hash.MessageDigestsTests)",
  "startTimestamp": 1474197376111,
  "executionTime": 163
 }
]

[
 "TEST_STARTED",
 "ID#testSha256(org.elasticsearch.common.hash.MessageDigestsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSha256(org.elasticsearch.common.hash.MessageDigestsTests)",
  "startTimestamp": 1474197376274,
  "executionTime": 299
 }
]

[
 "TEST_STARTED",
 "ID#testMd5(org.elasticsearch.common.hash.MessageDigestsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMd5(org.elasticsearch.common.hash.MessageDigestsTests)",
  "startTimestamp": 1474197376573,
  "executionTime": 174
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.hash.MessageDigestsTests",
  "startTimestamp": 1474197375925,
  "executionTime": 824
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.gateway.AsyncShardFetchTests",
   "displayName": "org.elasticsearch.gateway.AsyncShardFetchTests",
   "methodName": null,
   "className": "org.elasticsearch.gateway.AsyncShardFetchTests",
   "children": [
    {
     "id": "ID#testFullCircleSingleNodeSuccess(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "displayName": "testFullCircleSingleNodeSuccess(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "methodName": "testFullCircleSingleNodeSuccess",
     "className": "org.elasticsearch.gateway.AsyncShardFetchTests",
     "children": []
    },
    {
     "id": "ID#testTwoNodesOnSetup(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "displayName": "testTwoNodesOnSetup(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "methodName": "testTwoNodesOnSetup",
     "className": "org.elasticsearch.gateway.AsyncShardFetchTests",
     "children": []
    },
    {
     "id": "ID#testTwoNodesAddedInBetween(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "displayName": "testTwoNodesAddedInBetween(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "methodName": "testTwoNodesAddedInBetween",
     "className": "org.elasticsearch.gateway.AsyncShardFetchTests",
     "children": []
    },
    {
     "id": "ID#testClose(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "displayName": "testClose(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "methodName": "testClose",
     "className": "org.elasticsearch.gateway.AsyncShardFetchTests",
     "children": []
    },
    {
     "id": "ID#testFullCircleSingleNodeFailure(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "displayName": "testFullCircleSingleNodeFailure(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "methodName": "testFullCircleSingleNodeFailure",
     "className": "org.elasticsearch.gateway.AsyncShardFetchTests",
     "children": []
    },
    {
     "id": "ID#testTwoNodesOnSetupAndFailure(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "displayName": "testTwoNodesOnSetupAndFailure(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "methodName": "testTwoNodesOnSetupAndFailure",
     "className": "org.elasticsearch.gateway.AsyncShardFetchTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197376757
 }
]

[
 "TEST_STARTED",
 "ID#testFullCircleSingleNodeSuccess(org.elasticsearch.gateway.AsyncShardFetchTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFullCircleSingleNodeSuccess(org.elasticsearch.gateway.AsyncShardFetchTests)",
  "startTimestamp": 1474197376796,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testTwoNodesOnSetup(org.elasticsearch.gateway.AsyncShardFetchTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTwoNodesOnSetup(org.elasticsearch.gateway.AsyncShardFetchTests)",
  "startTimestamp": 1474197376806,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testTwoNodesAddedInBetween(org.elasticsearch.gateway.AsyncShardFetchTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTwoNodesAddedInBetween(org.elasticsearch.gateway.AsyncShardFetchTests)",
  "startTimestamp": 1474197376811,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testClose(org.elasticsearch.gateway.AsyncShardFetchTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClose(org.elasticsearch.gateway.AsyncShardFetchTests)",
  "startTimestamp": 1474197376815,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testFullCircleSingleNodeFailure(org.elasticsearch.gateway.AsyncShardFetchTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFullCircleSingleNodeFailure(org.elasticsearch.gateway.AsyncShardFetchTests)",
  "startTimestamp": 1474197376821,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testTwoNodesOnSetupAndFailure(org.elasticsearch.gateway.AsyncShardFetchTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTwoNodesOnSetupAndFailure(org.elasticsearch.gateway.AsyncShardFetchTests)",
  "startTimestamp": 1474197376836,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.gateway.AsyncShardFetchTests",
  "startTimestamp": 1474197376757,
  "executionTime": 86
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.HasParentQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
   "children": [
    {
     "id": "ID#testToQueryInnerQueryType(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testToQueryInnerQueryType(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testToQueryInnerQueryType",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDeprecatedXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testDeprecatedXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testDeprecatedXContent",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalValues(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testIllegalValues(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testIllegalValues",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testFromJsonEmptyQueryBody(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testFromJsonEmptyQueryBody",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testIgnoreUnmapped(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testIgnoreUnmapped",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197376862
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryInnerQueryType(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:16,933][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{JGWghdjsQvS6sh6pxddiCw}{local}{local[132]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:16,943][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:16,943][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:16,984][WARN ][org.elasticsearch.deprecation.index.mapper]  [eSSnlAC] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:16,985][WARN ][org.elasticsearch.deprecation.index.mapper]  [eSSnlAC] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:16,985][WARN ][org.elasticsearch.deprecation.index.mapper]  [eSSnlAC] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:16,994][WARN ][org.elasticsearch.deprecation.index.mapper]  [eSSnlAC] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:16,995][WARN ][org.elasticsearch.deprecation.index.mapper]  [eSSnlAC] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:16,995][WARN ][org.elasticsearch.deprecation.index.mapper]  [eSSnlAC] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:17,008][WARN ][org.elasticsearch.deprecation.index.mapper]  [eSSnlAC] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:17,008][WARN ][org.elasticsearch.deprecation.index.mapper]  [eSSnlAC] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:17,008][WARN ][org.elasticsearch.deprecation.index.mapper]  [eSSnlAC] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:17,017][WARN ][org.elasticsearch.deprecation.index.mapper]  [eSSnlAC] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:17,017][WARN ][org.elasticsearch.deprecation.index.mapper]  [eSSnlAC] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:17,017][WARN ][org.elasticsearch.deprecation.index.mapper]  [eSSnlAC] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:17,044][WARN ][org.elasticsearch.deprecation.index.mapper]  [eSSnlAC] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:17,044][WARN ][org.elasticsearch.deprecation.index.mapper]  [eSSnlAC] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:17,044][WARN ][org.elasticsearch.deprecation.index.mapper]  [eSSnlAC] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:17,175][WARN ][org.elasticsearch.deprecation.index.mapper]  [eSSnlAC] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:17,175][WARN ][org.elasticsearch.deprecation.index.mapper]  [eSSnlAC] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:17,176][WARN ][org.elasticsearch.deprecation.index.mapper]  [eSSnlAC] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:17,178][WARN ][org.elasticsearch.deprecation.index.mapper]  [eSSnlAC] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:17,178][WARN ][org.elasticsearch.deprecation.index.mapper]  [eSSnlAC] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:17,178][WARN ][org.elasticsearch.deprecation.index.mapper]  [eSSnlAC] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:17,181][WARN ][org.elasticsearch.deprecation.index.mapper]  [eSSnlAC] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:17,181][WARN ][org.elasticsearch.deprecation.index.mapper]  [eSSnlAC] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:17,181][WARN ][org.elasticsearch.deprecation.index.mapper]  [eSSnlAC] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:17,190][WARN ][org.elasticsearch.deprecation.index.mapper]  [eSSnlAC] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:17,190][WARN ][org.elasticsearch.deprecation.index.mapper]  [eSSnlAC] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:17,190][WARN ][org.elasticsearch.deprecation.index.mapper]  [eSSnlAC] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryInnerQueryType(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1474197376925,
  "executionTime": 328
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1474197377253,
  "executionTime": 155
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1474197377408,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1474197377410,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDeprecatedXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:17,439][WARN ][org.elasticsearch.deprecation.common] Deprecated field [type] used, expected [parent_type] instead%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeprecatedXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1474197377414,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalValues(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalValues(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1474197377440,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1474197377444,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1474197377457,
  "executionTime": 33
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1474197377490,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:17,501][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [3:17]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:17,502][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [3:17]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1474197377497,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1474197377507,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1474197377524,
  "executionTime": 141
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1474197377665,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreUnmapped(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1474197377669,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.HasParentQueryBuilderTests",
  "startTimestamp": 1474197376862,
  "executionTime": 817
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.ingest.BulkRequestModifierTests",
   "displayName": "org.elasticsearch.action.ingest.BulkRequestModifierTests",
   "methodName": null,
   "className": "org.elasticsearch.action.ingest.BulkRequestModifierTests",
   "children": [
    {
     "id": "ID#testNoFailures(org.elasticsearch.action.ingest.BulkRequestModifierTests)",
     "displayName": "testNoFailures(org.elasticsearch.action.ingest.BulkRequestModifierTests)",
     "methodName": "testNoFailures",
     "className": "org.elasticsearch.action.ingest.BulkRequestModifierTests",
     "children": []
    },
    {
     "id": "ID#testBulkRequestModifier(org.elasticsearch.action.ingest.BulkRequestModifierTests)",
     "displayName": "testBulkRequestModifier(org.elasticsearch.action.ingest.BulkRequestModifierTests)",
     "methodName": "testBulkRequestModifier",
     "className": "org.elasticsearch.action.ingest.BulkRequestModifierTests",
     "children": []
    },
    {
     "id": "ID#testPipelineFailures(org.elasticsearch.action.ingest.BulkRequestModifierTests)",
     "displayName": "testPipelineFailures(org.elasticsearch.action.ingest.BulkRequestModifierTests)",
     "methodName": "testPipelineFailures",
     "className": "org.elasticsearch.action.ingest.BulkRequestModifierTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197377686
 }
]

[
 "TEST_STARTED",
 "ID#testNoFailures(org.elasticsearch.action.ingest.BulkRequestModifierTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoFailures(org.elasticsearch.action.ingest.BulkRequestModifierTests)",
  "startTimestamp": 1474197377711,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testBulkRequestModifier(org.elasticsearch.action.ingest.BulkRequestModifierTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBulkRequestModifier(org.elasticsearch.action.ingest.BulkRequestModifierTests)",
  "startTimestamp": 1474197377723,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testPipelineFailures(org.elasticsearch.action.ingest.BulkRequestModifierTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPipelineFailures(org.elasticsearch.action.ingest.BulkRequestModifierTests)",
  "startTimestamp": 1474197377737,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.ingest.BulkRequestModifierTests",
  "startTimestamp": 1474197377686,
  "executionTime": 55
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.uid.VersionsTests",
   "displayName": "org.elasticsearch.common.lucene.uid.VersionsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.uid.VersionsTests",
   "children": [
    {
     "id": "ID#testCacheFilterReader(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "displayName": "testCacheFilterReader(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "methodName": "testCacheFilterReader",
     "className": "org.elasticsearch.common.lucene.uid.VersionsTests",
     "children": []
    },
    {
     "id": "ID#testVersions(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "displayName": "testVersions(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "methodName": "testVersions",
     "className": "org.elasticsearch.common.lucene.uid.VersionsTests",
     "children": []
    },
    {
     "id": "ID#testNestedDocuments(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "displayName": "testNestedDocuments(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "methodName": "testNestedDocuments",
     "className": "org.elasticsearch.common.lucene.uid.VersionsTests",
     "children": []
    },
    {
     "id": "ID#testCache(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "displayName": "testCache(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "methodName": "testCache",
     "className": "org.elasticsearch.common.lucene.uid.VersionsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197377749
 }
]

[
 "TEST_STARTED",
 "ID#testCacheFilterReader(org.elasticsearch.common.lucene.uid.VersionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCacheFilterReader(org.elasticsearch.common.lucene.uid.VersionsTests)",
  "startTimestamp": 1474197377778,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testVersions(org.elasticsearch.common.lucene.uid.VersionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersions(org.elasticsearch.common.lucene.uid.VersionsTests)",
  "startTimestamp": 1474197377807,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testNestedDocuments(org.elasticsearch.common.lucene.uid.VersionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedDocuments(org.elasticsearch.common.lucene.uid.VersionsTests)",
  "startTimestamp": 1474197377833,
  "executionTime": 43
 }
]

[
 "TEST_STARTED",
 "ID#testCache(org.elasticsearch.common.lucene.uid.VersionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCache(org.elasticsearch.common.lucene.uid.VersionsTests)",
  "startTimestamp": 1474197377876,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.uid.VersionsTests",
  "startTimestamp": 1474197377749,
  "executionTime": 139
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.ingest.IngestServiceTests",
   "displayName": "org.elasticsearch.ingest.IngestServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.ingest.IngestServiceTests",
   "children": [
    {
     "id": "ID#testIngestPluginDuplicate(org.elasticsearch.ingest.IngestServiceTests)",
     "displayName": "testIngestPluginDuplicate(org.elasticsearch.ingest.IngestServiceTests)",
     "methodName": "testIngestPluginDuplicate",
     "className": "org.elasticsearch.ingest.IngestServiceTests",
     "children": []
    },
    {
     "id": "ID#testIngestPlugin(org.elasticsearch.ingest.IngestServiceTests)",
     "displayName": "testIngestPlugin(org.elasticsearch.ingest.IngestServiceTests)",
     "methodName": "testIngestPlugin",
     "className": "org.elasticsearch.ingest.IngestServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197377894
 }
]

[
 "TEST_STARTED",
 "ID#testIngestPluginDuplicate(org.elasticsearch.ingest.IngestServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIngestPluginDuplicate(org.elasticsearch.ingest.IngestServiceTests)",
  "startTimestamp": 1474197377911,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testIngestPlugin(org.elasticsearch.ingest.IngestServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIngestPlugin(org.elasticsearch.ingest.IngestServiceTests)",
  "startTimestamp": 1474197377918,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.ingest.IngestServiceTests",
  "startTimestamp": 1474197377894,
  "executionTime": 28
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.term.SortByTests",
   "displayName": "org.elasticsearch.search.suggest.term.SortByTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.term.SortByTests",
   "children": [
    {
     "id": "ID#testReadFrom(org.elasticsearch.search.suggest.term.SortByTests)",
     "displayName": "testReadFrom(org.elasticsearch.search.suggest.term.SortByTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.search.suggest.term.SortByTests",
     "children": []
    },
    {
     "id": "ID#testWriteTo(org.elasticsearch.search.suggest.term.SortByTests)",
     "displayName": "testWriteTo(org.elasticsearch.search.suggest.term.SortByTests)",
     "methodName": "testWriteTo",
     "className": "org.elasticsearch.search.suggest.term.SortByTests",
     "children": []
    },
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.search.suggest.term.SortByTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.search.suggest.term.SortByTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.search.suggest.term.SortByTests",
     "children": []
    },
    {
     "id": "ID#testFromString(org.elasticsearch.search.suggest.term.SortByTests)",
     "displayName": "testFromString(org.elasticsearch.search.suggest.term.SortByTests)",
     "methodName": "testFromString",
     "className": "org.elasticsearch.search.suggest.term.SortByTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197377929
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.search.suggest.term.SortByTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.search.suggest.term.SortByTests)",
  "startTimestamp": 1474197377959,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testWriteTo(org.elasticsearch.search.suggest.term.SortByTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteTo(org.elasticsearch.search.suggest.term.SortByTests)",
  "startTimestamp": 1474197377964,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.search.suggest.term.SortByTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.search.suggest.term.SortByTests)",
  "startTimestamp": 1474197377966,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromString(org.elasticsearch.search.suggest.term.SortByTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromString(org.elasticsearch.search.suggest.term.SortByTests)",
  "startTimestamp": 1474197377968,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.term.SortByTests",
  "startTimestamp": 1474197377929,
  "executionTime": 43
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.CombineFunctionTests",
   "displayName": "org.elasticsearch.index.query.CombineFunctionTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.CombineFunctionTests",
   "children": [
    {
     "id": "ID#testReadFrom(org.elasticsearch.index.query.CombineFunctionTests)",
     "displayName": "testReadFrom(org.elasticsearch.index.query.CombineFunctionTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.index.query.CombineFunctionTests",
     "children": []
    },
    {
     "id": "ID#testWriteTo(org.elasticsearch.index.query.CombineFunctionTests)",
     "displayName": "testWriteTo(org.elasticsearch.index.query.CombineFunctionTests)",
     "methodName": "testWriteTo",
     "className": "org.elasticsearch.index.query.CombineFunctionTests",
     "children": []
    },
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.index.query.CombineFunctionTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.index.query.CombineFunctionTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.index.query.CombineFunctionTests",
     "children": []
    },
    {
     "id": "ID#testFromString(org.elasticsearch.index.query.CombineFunctionTests)",
     "displayName": "testFromString(org.elasticsearch.index.query.CombineFunctionTests)",
     "methodName": "testFromString",
     "className": "org.elasticsearch.index.query.CombineFunctionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197377981
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.index.query.CombineFunctionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.index.query.CombineFunctionTests)",
  "startTimestamp": 1474197377994,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWriteTo(org.elasticsearch.index.query.CombineFunctionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteTo(org.elasticsearch.index.query.CombineFunctionTests)",
  "startTimestamp": 1474197377996,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.index.query.CombineFunctionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.index.query.CombineFunctionTests)",
  "startTimestamp": 1474197377997,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromString(org.elasticsearch.index.query.CombineFunctionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromString(org.elasticsearch.index.query.CombineFunctionTests)",
  "startTimestamp": 1474197377999,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.CombineFunctionTests",
  "startTimestamp": 1474197377981,
  "executionTime": 22
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.serialization.ClusterSerializationTests",
   "displayName": "org.elasticsearch.cluster.serialization.ClusterSerializationTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.serialization.ClusterSerializationTests",
   "children": [
    {
     "id": "ID#testRoutingTableSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)",
     "displayName": "testRoutingTableSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)",
     "methodName": "testRoutingTableSerialization",
     "className": "org.elasticsearch.cluster.serialization.ClusterSerializationTests",
     "children": []
    },
    {
     "id": "ID#testClusterStateSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)",
     "displayName": "testClusterStateSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)",
     "methodName": "testClusterStateSerialization",
     "className": "org.elasticsearch.cluster.serialization.ClusterSerializationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197378009
 }
]

[
 "TEST_STARTED",
 "ID#testRoutingTableSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoutingTableSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)",
  "startTimestamp": 1474197378073,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testClusterStateSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterStateSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)",
  "startTimestamp": 1474197378085,
  "executionTime": 21
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.serialization.ClusterSerializationTests",
  "startTimestamp": 1474197378009,
  "executionTime": 99
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
   "displayName": "org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
   "children": [
    {
     "id": "ID#testIndexingWithContextList(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "displayName": "testIndexingWithContextList(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "methodName": "testIndexingWithContextList",
     "className": "org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testParsingQueryContextObjectArray(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "displayName": "testParsingQueryContextObjectArray(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "methodName": "testParsingQueryContextObjectArray",
     "className": "org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testParsingQueryContextObject(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "displayName": "testParsingQueryContextObject(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "methodName": "testParsingQueryContextObject",
     "className": "org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testParsingQueryContextGeoPoint(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "displayName": "testParsingQueryContextGeoPoint(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "methodName": "testParsingQueryContextGeoPoint",
     "className": "org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testParsingQueryContextMixed(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "displayName": "testParsingQueryContextMixed(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "methodName": "testParsingQueryContextMixed",
     "className": "org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testIndexingWithSimpleContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "displayName": "testIndexingWithSimpleContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "methodName": "testIndexingWithSimpleContexts",
     "className": "org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testParsingQueryContextBasic(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "displayName": "testParsingQueryContextBasic(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "methodName": "testParsingQueryContextBasic",
     "className": "org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testIndexingWithMultipleContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "displayName": "testIndexingWithMultipleContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "methodName": "testIndexingWithMultipleContexts",
     "className": "org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testIndexingWithNoContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "displayName": "testIndexingWithNoContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "methodName": "testIndexingWithNoContexts",
     "className": "org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197378116
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingWithContextList(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:16:18,142][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:16:18,179][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:16:18,179][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:16:18,182][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[564], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:16:18,185][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:16:18,185][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:16:18,313][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:16:18,314][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:16:18,314][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[79]}, bound_addresses {local[79]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:16:18,315][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{43rtI1fyTSqieYTUi4AVNQ}{jD7Vva0dQee8nrP6Rxb-ww}{local}{local[79]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:16:18,320][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:16:18,331][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:16:18,348][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:16:18,422][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:16:18,497][INFO ][org.elasticsearch.search.suggest.completion] [GeoContextMappingTests#testIndexingWithContextList]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingWithContextList(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
  "startTimestamp": 1474197378134,
  "executionTime": 416
 }
]

[
 "TEST_STARTED",
 "ID#testParsingQueryContextObjectArray(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:16:18,570][INFO ][org.elasticsearch.search.suggest.completion] [GeoContextMappingTests#testParsingQueryContextObjectArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingQueryContextObjectArray(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
  "startTimestamp": 1474197378551,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testParsingQueryContextObject(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:16:18,574][INFO ][org.elasticsearch.search.suggest.completion] [GeoContextMappingTests#testParsingQueryContextObject]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingQueryContextObject(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
  "startTimestamp": 1474197378571,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testParsingQueryContextGeoPoint(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:16:18,579][INFO ][org.elasticsearch.search.suggest.completion] [GeoContextMappingTests#testParsingQueryContextGeoPoint]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingQueryContextGeoPoint(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
  "startTimestamp": 1474197378577,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParsingQueryContextMixed(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:16:18,584][INFO ][org.elasticsearch.search.suggest.completion] [GeoContextMappingTests#testParsingQueryContextMixed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingQueryContextMixed(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
  "startTimestamp": 1474197378581,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingWithSimpleContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:16:18,591][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:16:18,658][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:16:18,671][INFO ][org.elasticsearch.search.suggest.completion] [GeoContextMappingTests#testIndexingWithSimpleContexts]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingWithSimpleContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
  "startTimestamp": 1474197378585,
  "executionTime": 111
 }
]

[
 "TEST_STARTED",
 "ID#testParsingQueryContextBasic(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:16:18,699][INFO ][org.elasticsearch.search.suggest.completion] [GeoContextMappingTests#testParsingQueryContextBasic]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingQueryContextBasic(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
  "startTimestamp": 1474197378697,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingWithMultipleContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:16:18,707][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:16:18,758][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:16:18,771][INFO ][org.elasticsearch.search.suggest.completion] [GeoContextMappingTests#testIndexingWithMultipleContexts]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingWithMultipleContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
  "startTimestamp": 1474197378701,
  "executionTime": 103
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingWithNoContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:16:18,810][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:16:18,864][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:16:18,878][INFO ][org.elasticsearch.search.suggest.completion] [GeoContextMappingTests#testIndexingWithNoContexts]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingWithNoContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
  "startTimestamp": 1474197378804,
  "executionTime": 155
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:16:18,960][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:16:18,961][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:16:18,961][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:16:18,963][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
  "startTimestamp": 1474197378116,
  "executionTime": 853
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
   "children": [
    {
     "id": "ID#testStats(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "displayName": "testStats(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "methodName": "testStats",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testTermsQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "displayName": "testTermsQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "methodName": "testTermsQuery",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueForSearch(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "displayName": "testValueForSearch(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "methodName": "testValueForSearch",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testRangeQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "displayName": "testRangeQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "methodName": "testRangeQuery",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testTermQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "displayName": "testTermQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "methodName": "testTermQuery",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFieldData(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "displayName": "testFieldData(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "methodName": "testFieldData",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197378979
 }
]

[
 "TEST_STARTED",
 "ID#testStats(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStats(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
  "startTimestamp": 1474197379001,
  "executionTime": 43
 }
]

[
 "TEST_STARTED",
 "ID#testTermsQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermsQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
  "startTimestamp": 1474197379044,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testValueForSearch(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueForSearch(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
  "startTimestamp": 1474197379050,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
  "startTimestamp": 1474197379052,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRangeQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRangeQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
  "startTimestamp": 1474197379055,
  "executionTime": 1129
 }
]

[
 "TEST_STARTED",
 "ID#testTermQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
  "startTimestamp": 1474197380184,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
  "startTimestamp": 1474197380187,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFieldData(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldData(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
  "startTimestamp": 1474197380190,
  "executionTime": 322
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
  "startTimestamp": 1474197380512,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
  "startTimestamp": 1474197380515,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
  "startTimestamp": 1474197380518,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
  "startTimestamp": 1474197378979,
  "executionTime": 1544
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.regex.RegexTests",
   "displayName": "org.elasticsearch.common.regex.RegexTests",
   "methodName": null,
   "className": "org.elasticsearch.common.regex.RegexTests",
   "children": [
    {
     "id": "ID#testFlags(org.elasticsearch.common.regex.RegexTests)",
     "displayName": "testFlags(org.elasticsearch.common.regex.RegexTests)",
     "methodName": "testFlags",
     "className": "org.elasticsearch.common.regex.RegexTests",
     "children": []
    },
    {
     "id": "ID#testDoubleWildcardMatch(org.elasticsearch.common.regex.RegexTests)",
     "displayName": "testDoubleWildcardMatch(org.elasticsearch.common.regex.RegexTests)",
     "methodName": "testDoubleWildcardMatch",
     "className": "org.elasticsearch.common.regex.RegexTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197380529
 }
]

[
 "TEST_STARTED",
 "ID#testFlags(org.elasticsearch.common.regex.RegexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFlags(org.elasticsearch.common.regex.RegexTests)",
  "startTimestamp": 1474197380642,
  "executionTime": 79
 }
]

[
 "TEST_STARTED",
 "ID#testDoubleWildcardMatch(org.elasticsearch.common.regex.RegexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoubleWildcardMatch(org.elasticsearch.common.regex.RegexTests)",
  "startTimestamp": 1474197380721,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.regex.RegexTests",
  "startTimestamp": 1474197380529,
  "executionTime": 197
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.AutoCreateIndexTests",
   "displayName": "org.elasticsearch.action.support.AutoCreateIndexTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
   "children": [
    {
     "id": "ID#testDefaultAutoCreation(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testDefaultAutoCreation(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testDefaultAutoCreation",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testExistingIndex(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testExistingIndex(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testExistingIndex",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testAutoCreationMultipleIndexNames(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testAutoCreationMultipleIndexNames(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testAutoCreationMultipleIndexNames",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testUpdate(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testUpdate(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testUpdate",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testAutoCreationEnabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testAutoCreationEnabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testAutoCreationEnabled",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testAutoCreationPatternDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testAutoCreationPatternDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testAutoCreationPatternDisabled",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testParseFailed(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testParseFailed(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testParseFailed",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testAutoCreationConflictingPatternsFirstWins(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testAutoCreationConflictingPatternsFirstWins(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testAutoCreationConflictingPatternsFirstWins",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testAutoCreationDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testAutoCreationDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testAutoCreationDisabled",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testAutoCreationMultiplePatternsNoWildcards(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testAutoCreationMultiplePatternsNoWildcards(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testAutoCreationMultiplePatternsNoWildcards",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testDynamicMappingDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testDynamicMappingDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testDynamicMappingDisabled",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testParseFailedMissingIndex(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testParseFailedMissingIndex(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testParseFailedMissingIndex",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testAutoCreationPatternEnabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testAutoCreationPatternEnabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testAutoCreationPatternEnabled",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testAutoCreationMultiplePatternsWithWildcards(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testAutoCreationMultiplePatternsWithWildcards(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testAutoCreationMultiplePatternsWithWildcards",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197380734
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultAutoCreation(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultAutoCreation(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1474197380760,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testExistingIndex(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExistingIndex(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1474197380763,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testAutoCreationMultipleIndexNames(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAutoCreationMultipleIndexNames(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1474197380767,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUpdate(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:16:20,773][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [action.auto_create_index] from [false] to [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:16:20,775][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [action.auto_create_index] from [true] to [logs-*]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdate(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1474197380770,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testAutoCreationEnabled(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAutoCreationEnabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1474197380775,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testAutoCreationPatternDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAutoCreationPatternDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1474197380778,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailed(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailed(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1474197380782,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testAutoCreationConflictingPatternsFirstWins(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAutoCreationConflictingPatternsFirstWins(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1474197380785,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testAutoCreationDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAutoCreationDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1474197380789,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAutoCreationMultiplePatternsNoWildcards(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAutoCreationMultiplePatternsNoWildcards(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1474197380792,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicMappingDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicMappingDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1474197380795,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailedMissingIndex(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailedMissingIndex(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1474197380798,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testAutoCreationPatternEnabled(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAutoCreationPatternEnabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1474197380801,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testAutoCreationMultiplePatternsWithWildcards(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAutoCreationMultiplePatternsWithWildcards(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1474197380805,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.AutoCreateIndexTests",
  "startTimestamp": 1474197380734,
  "executionTime": 83
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.rollover.ConditionTests",
   "displayName": "org.elasticsearch.action.admin.indices.rollover.ConditionTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.rollover.ConditionTests",
   "children": [
    {
     "id": "ID#testMaxDocs(org.elasticsearch.action.admin.indices.rollover.ConditionTests)",
     "displayName": "testMaxDocs(org.elasticsearch.action.admin.indices.rollover.ConditionTests)",
     "methodName": "testMaxDocs",
     "className": "org.elasticsearch.action.admin.indices.rollover.ConditionTests",
     "children": []
    },
    {
     "id": "ID#testMaxAge(org.elasticsearch.action.admin.indices.rollover.ConditionTests)",
     "displayName": "testMaxAge(org.elasticsearch.action.admin.indices.rollover.ConditionTests)",
     "methodName": "testMaxAge",
     "className": "org.elasticsearch.action.admin.indices.rollover.ConditionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197380823
 }
]

[
 "TEST_STARTED",
 "ID#testMaxDocs(org.elasticsearch.action.admin.indices.rollover.ConditionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMaxDocs(org.elasticsearch.action.admin.indices.rollover.ConditionTests)",
  "startTimestamp": 1474197380839,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testMaxAge(org.elasticsearch.action.admin.indices.rollover.ConditionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMaxAge(org.elasticsearch.action.admin.indices.rollover.ConditionTests)",
  "startTimestamp": 1474197380845,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.rollover.ConditionTests",
  "startTimestamp": 1474197380823,
  "executionTime": 25
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests",
   "displayName": "org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197380857
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)",
  "startTimestamp": 1474197380892,
  "executionTime": 43
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)",
  "startTimestamp": 1474197380936,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)",
  "startTimestamp": 1474197380945,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests",
  "startTimestamp": 1474197380857,
  "executionTime": 94
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
   "displayName": "org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRescoreQueryNull(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "displayName": "testRescoreQueryNull(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "methodName": "testRescoreQueryNull",
     "className": "org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBuildRescoreSearchContext(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "displayName": "testBuildRescoreSearchContext(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "methodName": "testBuildRescoreSearchContext",
     "className": "org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownFieldsExpection(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "displayName": "testUnknownFieldsExpection(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "methodName": "testUnknownFieldsExpection",
     "className": "org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197380959
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
  "startTimestamp": 1474197381038,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
  "startTimestamp": 1474197381058,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRescoreQueryNull(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRescoreQueryNull(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
  "startTimestamp": 1474197381060,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBuildRescoreSearchContext(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuildRescoreSearchContext(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
  "startTimestamp": 1474197381062,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
  "startTimestamp": 1474197381079,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownFieldsExpection(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownFieldsExpection(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
  "startTimestamp": 1474197381082,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
  "startTimestamp": 1474197380959,
  "executionTime": 127
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests",
     "children": []
    },
    {
     "id": "ID#testSigmaFromInt(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
     "displayName": "testSigmaFromInt(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
     "methodName": "testSigmaFromInt",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197381094
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:16:21,120][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Z-6VkWCXRbKXdxkLQHB66A}{local}{local[140]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:16:21,131][INFO ][org.elasticsearch.search.aggregations.pipeline.bucketmetrics] Content string: {%0A  \"QNDRwluEeQpPJBqAbN\" : {%0A    \"extended_stats_bucket\" : {%0A      \"buckets_path\" : [%0A        \"OSGUpRuf\"%0A      ],%0A      \"format\" : \"H\",%0A      \"gap_policy\" : \"skip\",%0A      \"sigma\" : 2.0%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:16:21,132][INFO ][org.elasticsearch.search.aggregations.pipeline.bucketmetrics] Content string: {%0A  \"QNDRwluEeQpPJBqAbN\" : {%0A    \"extended_stats_bucket\" : {%0A      \"buckets_path\" : [%0A        \"OSGUpRuf\"%0A      ],%0A      \"format\" : \"H\",%0A      \"gap_policy\" : \"skip\",%0A      \"sigma\" : 2.0%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
  "startTimestamp": 1474197381130,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSigmaFromInt(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSigmaFromInt(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
  "startTimestamp": 1474197381133,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
  "startTimestamp": 1474197381135,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
  "startTimestamp": 1474197381140,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests",
  "startTimestamp": 1474197381094,
  "executionTime": 62
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.client.transport.TransportClientNodesServiceTests",
   "displayName": "org.elasticsearch.client.transport.TransportClientNodesServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.client.transport.TransportClientNodesServiceTests",
   "children": [
    {
     "id": "ID#testListenerFailures(org.elasticsearch.client.transport.TransportClientNodesServiceTests)",
     "displayName": "testListenerFailures(org.elasticsearch.client.transport.TransportClientNodesServiceTests)",
     "methodName": "testListenerFailures",
     "className": "org.elasticsearch.client.transport.TransportClientNodesServiceTests",
     "children": []
    },
    {
     "id": "ID#testConnectedNodes(org.elasticsearch.client.transport.TransportClientNodesServiceTests)",
     "displayName": "testConnectedNodes(org.elasticsearch.client.transport.TransportClientNodesServiceTests)",
     "methodName": "testConnectedNodes",
     "className": "org.elasticsearch.client.transport.TransportClientNodesServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197381168
 }
]

[
 "TEST_STARTED",
 "ID#testListenerFailures(org.elasticsearch.client.transport.TransportClientNodesServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListenerFailures(org.elasticsearch.client.transport.TransportClientNodesServiceTests)",
  "startTimestamp": 1474197381213,
  "executionTime": 197
 }
]

[
 "TEST_STARTED",
 "ID#testConnectedNodes(org.elasticsearch.client.transport.TransportClientNodesServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConnectedNodes(org.elasticsearch.client.transport.TransportClientNodesServiceTests)",
  "startTimestamp": 1474197381410,
  "executionTime": 47
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.client.transport.TransportClientNodesServiceTests",
  "startTimestamp": 1474197381168,
  "executionTime": 291
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.bulk.RetryTests",
   "displayName": "org.elasticsearch.action.bulk.RetryTests",
   "methodName": null,
   "className": "org.elasticsearch.action.bulk.RetryTests",
   "children": [
    {
     "id": "ID#testAsyncRetryFailsAfterBacksOff(org.elasticsearch.action.bulk.RetryTests)",
     "displayName": "testAsyncRetryFailsAfterBacksOff(org.elasticsearch.action.bulk.RetryTests)",
     "methodName": "testAsyncRetryFailsAfterBacksOff",
     "className": "org.elasticsearch.action.bulk.RetryTests",
     "children": []
    },
    {
     "id": "ID#testSyncRetryFailsAfterBackoff(org.elasticsearch.action.bulk.RetryTests)",
     "displayName": "testSyncRetryFailsAfterBackoff(org.elasticsearch.action.bulk.RetryTests)",
     "methodName": "testSyncRetryFailsAfterBackoff",
     "className": "org.elasticsearch.action.bulk.RetryTests",
     "children": []
    },
    {
     "id": "ID#testSyncRetryBacksOff(org.elasticsearch.action.bulk.RetryTests)",
     "displayName": "testSyncRetryBacksOff(org.elasticsearch.action.bulk.RetryTests)",
     "methodName": "testSyncRetryBacksOff",
     "className": "org.elasticsearch.action.bulk.RetryTests",
     "children": []
    },
    {
     "id": "ID#testAsyncRetryBacksOff(org.elasticsearch.action.bulk.RetryTests)",
     "displayName": "testAsyncRetryBacksOff(org.elasticsearch.action.bulk.RetryTests)",
     "methodName": "testAsyncRetryBacksOff",
     "className": "org.elasticsearch.action.bulk.RetryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197381465
 }
]

[
 "TEST_STARTED",
 "ID#testAsyncRetryFailsAfterBacksOff(org.elasticsearch.action.bulk.RetryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAsyncRetryFailsAfterBacksOff(org.elasticsearch.action.bulk.RetryTests)",
  "startTimestamp": 1474197381490,
  "executionTime": 129
 }
]

[
 "TEST_STARTED",
 "ID#testSyncRetryFailsAfterBackoff(org.elasticsearch.action.bulk.RetryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSyncRetryFailsAfterBackoff(org.elasticsearch.action.bulk.RetryTests)",
  "startTimestamp": 1474197381619,
  "executionTime": 209
 }
]

[
 "TEST_STARTED",
 "ID#testSyncRetryBacksOff(org.elasticsearch.action.bulk.RetryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSyncRetryBacksOff(org.elasticsearch.action.bulk.RetryTests)",
  "startTimestamp": 1474197381828,
  "executionTime": 119
 }
]

[
 "TEST_STARTED",
 "ID#testAsyncRetryBacksOff(org.elasticsearch.action.bulk.RetryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAsyncRetryBacksOff(org.elasticsearch.action.bulk.RetryTests)",
  "startTimestamp": 1474197381947,
  "executionTime": 131
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.bulk.RetryTests",
  "startTimestamp": 1474197381465,
  "executionTime": 616
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.GeoDistanceTests",
   "displayName": "org.elasticsearch.common.geo.GeoDistanceTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.GeoDistanceTests",
   "children": [
    {
     "id": "ID#testDistanceCheck(org.elasticsearch.common.geo.GeoDistanceTests)",
     "displayName": "testDistanceCheck(org.elasticsearch.common.geo.GeoDistanceTests)",
     "methodName": "testDistanceCheck",
     "className": "org.elasticsearch.common.geo.GeoDistanceTests",
     "children": []
    },
    {
     "id": "ID#testInvalidReadFrom(org.elasticsearch.common.geo.GeoDistanceTests)",
     "displayName": "testInvalidReadFrom(org.elasticsearch.common.geo.GeoDistanceTests)",
     "methodName": "testInvalidReadFrom",
     "className": "org.elasticsearch.common.geo.GeoDistanceTests",
     "children": []
    },
    {
     "id": "ID#testGeoDistanceSerialization(org.elasticsearch.common.geo.GeoDistanceTests)",
     "displayName": "testGeoDistanceSerialization(org.elasticsearch.common.geo.GeoDistanceTests)",
     "methodName": "testGeoDistanceSerialization",
     "className": "org.elasticsearch.common.geo.GeoDistanceTests",
     "children": []
    },
    {
     "id": "ID#testArcDistanceVsPlaneInEllipsis(org.elasticsearch.common.geo.GeoDistanceTests)",
     "displayName": "testArcDistanceVsPlaneInEllipsis(org.elasticsearch.common.geo.GeoDistanceTests)",
     "methodName": "testArcDistanceVsPlaneInEllipsis",
     "className": "org.elasticsearch.common.geo.GeoDistanceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197382087
 }
]

[
 "TEST_STARTED",
 "ID#testDistanceCheck(org.elasticsearch.common.geo.GeoDistanceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDistanceCheck(org.elasticsearch.common.geo.GeoDistanceTests)",
  "startTimestamp": 1474197382244,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidReadFrom(org.elasticsearch.common.geo.GeoDistanceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidReadFrom(org.elasticsearch.common.geo.GeoDistanceTests)",
  "startTimestamp": 1474197382249,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testGeoDistanceSerialization(org.elasticsearch.common.geo.GeoDistanceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoDistanceSerialization(org.elasticsearch.common.geo.GeoDistanceTests)",
  "startTimestamp": 1474197382251,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testArcDistanceVsPlaneInEllipsis(org.elasticsearch.common.geo.GeoDistanceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArcDistanceVsPlaneInEllipsis(org.elasticsearch.common.geo.GeoDistanceTests)",
  "startTimestamp": 1474197382253,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.GeoDistanceTests",
  "startTimestamp": 1474197382087,
  "executionTime": 169
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.slice.DocValuesSliceQueryTests",
   "displayName": "org.elasticsearch.search.slice.DocValuesSliceQueryTests",
   "methodName": null,
   "className": "org.elasticsearch.search.slice.DocValuesSliceQueryTests",
   "children": [
    {
     "id": "ID#testSearch(org.elasticsearch.search.slice.DocValuesSliceQueryTests)",
     "displayName": "testSearch(org.elasticsearch.search.slice.DocValuesSliceQueryTests)",
     "methodName": "testSearch",
     "className": "org.elasticsearch.search.slice.DocValuesSliceQueryTests",
     "children": []
    },
    {
     "id": "ID#testBasics(org.elasticsearch.search.slice.DocValuesSliceQueryTests)",
     "displayName": "testBasics(org.elasticsearch.search.slice.DocValuesSliceQueryTests)",
     "methodName": "testBasics",
     "className": "org.elasticsearch.search.slice.DocValuesSliceQueryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197382265
 }
]

[
 "TEST_STARTED",
 "ID#testSearch(org.elasticsearch.search.slice.DocValuesSliceQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearch(org.elasticsearch.search.slice.DocValuesSliceQueryTests)",
  "startTimestamp": 1474197382386,
  "executionTime": 811
 }
]

[
 "TEST_STARTED",
 "ID#testBasics(org.elasticsearch.search.slice.DocValuesSliceQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasics(org.elasticsearch.search.slice.DocValuesSliceQueryTests)",
  "startTimestamp": 1474197383197,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.slice.DocValuesSliceQueryTests",
  "startTimestamp": 1474197382265,
  "executionTime": 936
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.DiskUsageTests",
   "displayName": "org.elasticsearch.cluster.DiskUsageTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.DiskUsageTests",
   "children": [
    {
     "id": "ID#testFillDiskUsageSomeInvalidValues(org.elasticsearch.cluster.DiskUsageTests)",
     "displayName": "testFillDiskUsageSomeInvalidValues(org.elasticsearch.cluster.DiskUsageTests)",
     "methodName": "testFillDiskUsageSomeInvalidValues",
     "className": "org.elasticsearch.cluster.DiskUsageTests",
     "children": []
    },
    {
     "id": "ID#testFillShardsWithShadowIndices(org.elasticsearch.cluster.DiskUsageTests)",
     "displayName": "testFillShardsWithShadowIndices(org.elasticsearch.cluster.DiskUsageTests)",
     "methodName": "testFillShardsWithShadowIndices",
     "className": "org.elasticsearch.cluster.DiskUsageTests",
     "children": []
    },
    {
     "id": "ID#testFillShardLevelInfo(org.elasticsearch.cluster.DiskUsageTests)",
     "displayName": "testFillShardLevelInfo(org.elasticsearch.cluster.DiskUsageTests)",
     "methodName": "testFillShardLevelInfo",
     "className": "org.elasticsearch.cluster.DiskUsageTests",
     "children": []
    },
    {
     "id": "ID#testDiskUsageCalc(org.elasticsearch.cluster.DiskUsageTests)",
     "displayName": "testDiskUsageCalc(org.elasticsearch.cluster.DiskUsageTests)",
     "methodName": "testDiskUsageCalc",
     "className": "org.elasticsearch.cluster.DiskUsageTests",
     "children": []
    },
    {
     "id": "ID#testFillDiskUsage(org.elasticsearch.cluster.DiskUsageTests)",
     "displayName": "testFillDiskUsage(org.elasticsearch.cluster.DiskUsageTests)",
     "methodName": "testFillDiskUsage",
     "className": "org.elasticsearch.cluster.DiskUsageTests",
     "children": []
    },
    {
     "id": "ID#testRandomDiskUsage(org.elasticsearch.cluster.DiskUsageTests)",
     "displayName": "testRandomDiskUsage(org.elasticsearch.cluster.DiskUsageTests)",
     "methodName": "testRandomDiskUsage",
     "className": "org.elasticsearch.cluster.DiskUsageTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197383209
 }
]

[
 "TEST_STARTED",
 "ID#testFillDiskUsageSomeInvalidValues(org.elasticsearch.cluster.DiskUsageTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFillDiskUsageSomeInvalidValues(org.elasticsearch.cluster.DiskUsageTests)",
  "startTimestamp": 1474197383314,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFillShardsWithShadowIndices(org.elasticsearch.cluster.DiskUsageTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:23,327][INFO ][org.elasticsearch.cluster] [node_s_0] --> calling buildShardLevelInfo with state: {%0A  \"version\" : 0,%0A  \"state_uuid\" : \"237OWJH6RQa5RV5zfD3l2A\",%0A  \"master_node\" : null,%0A  \"blocks\" : { },%0A  \"nodes\" : { },%0A  \"metadata\" : {%0A    \"cluster_uuid\" : \"_na_\",%0A    \"templates\" : { },%0A    \"indices\" : {%0A      \"non-shadow\" : {%0A        \"state\" : \"open\",%0A        \"settings\" : {%0A          \"index\" : {%0A            \"number_of_shards\" : \"1\",%0A            \"number_of_replicas\" : \"0\",%0A            \"uuid\" : \"0xcafe0000\",%0A            \"version\" : {%0A              \"created\" : \"5000006\"%0A            }%0A          }%0A        },%0A        \"mappings\" : { },%0A        \"aliases\" : [ ],%0A        \"primary_terms\" : {%0A          \"0\" : 0%0A        },%0A        \"in_sync_allocations\" : {%0A          \"0\" : [ ]%0A        }%0A      },%0A      \"shadow\" : {%0A        \"state\" : \"open\",%0A        \"settings\" : {%0A          \"index\" : {%0A            \"number_of_shards\" : \"1\",%0A            \"number_of_replicas\" : \"0\",%0A            \"uuid\" : \"0xcafe0001\",%0A            \"version\" : {%0A              \"created\" : \"5000006\"%0A            },%0A            \"shadow_replicas\" : \"true\"%0A          }%0A        },%0A        \"mappings\" : { },%0A        \"aliases\" : [ ],%0A        \"primary_terms\" : {%0A          \"0\" : 0%0A        },%0A        \"in_sync_allocations\" : {%0A          \"0\" : [ ]%0A        }%0A      }%0A    },%0A    \"index-graveyard\" : {%0A      \"tombstones\" : [ ]%0A    }%0A  },%0A  \"routing_table\" : {%0A    \"indices\" : { }%0A  },%0A  \"routing_nodes\" : {%0A    \"unassigned\" : [ ],%0A    \"nodes\" : { }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFillShardsWithShadowIndices(org.elasticsearch.cluster.DiskUsageTests)",
  "startTimestamp": 1474197383317,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testFillShardLevelInfo(org.elasticsearch.cluster.DiskUsageTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFillShardLevelInfo(org.elasticsearch.cluster.DiskUsageTests)",
  "startTimestamp": 1474197383328,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testDiskUsageCalc(org.elasticsearch.cluster.DiskUsageTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDiskUsageCalc(org.elasticsearch.cluster.DiskUsageTests)",
  "startTimestamp": 1474197383333,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testFillDiskUsage(org.elasticsearch.cluster.DiskUsageTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFillDiskUsage(org.elasticsearch.cluster.DiskUsageTests)",
  "startTimestamp": 1474197383346,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testRandomDiskUsage(org.elasticsearch.cluster.DiskUsageTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomDiskUsage(org.elasticsearch.cluster.DiskUsageTests)",
  "startTimestamp": 1474197383347,
  "executionTime": 22
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.DiskUsageTests",
  "startTimestamp": 1474197383209,
  "executionTime": 164
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
   "children": [
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFilterElement(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testFilterElement(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testFilterElement",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMultipleFilterElements(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testMultipleFilterElements(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testMultipleFilterElements",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testFromJsonEmptyQueryBody(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testFromJsonEmptyQueryBody",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNoArrayAsFilterElements(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testNoArrayAsFilterElements(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testNoArrayAsFilterElements",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197383380
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:23,402][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{TDx_yKnCQmScwn9CoDEUOg}{local}{local[147]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:23,411][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:23,412][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "message": "test doesn't apply for query filter queries",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test doesn't apply for query filter queries\r\n\tat __randomizedtesting.SeedInfo.seed([DB64F96F238DCA2A:AE68D9D037403B01]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.ConstantScoreQueryBuilderTests.testUnknownField(ConstantScoreQueryBuilderTests.java:98)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test doesn't apply for query filter queries",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1474197383396,
  "executionTime": 30
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1474197383426,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1474197383444,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1474197383448,
  "executionTime": 45
 }
]

[
 "TEST_STARTED",
 "ID#testFilterElement(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterElement(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1474197383493,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleFilterElements(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleFilterElements(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1474197383496,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1474197383498,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1474197383501,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1474197383503,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:23,512][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:40]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:16:23,512][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:40]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1474197383509,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1474197383513,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1474197383519,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testNoArrayAsFilterElements(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoArrayAsFilterElements(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1474197383526,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1474197383528,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
  "startTimestamp": 1474197383380,
  "executionTime": 154
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests",
     "children": []
    },
    {
     "id": "ID#testDefaultParsing(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
     "displayName": "testDefaultParsing(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
     "methodName": "testDefaultParsing",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197383543
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:23,578][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{GVNs_uUOS-qmACwfjtw3bQ}{local}{local[148]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:23,592][INFO ][org.elasticsearch.search.aggregations.pipeline.moving.avg] Content string: {%0A  \"QNDRwluEeQpPJBqAbN\" : {%0A    \"moving_avg\" : {%0A      \"buckets_path\" : [%0A        \"OSGUpRuf\"%0A      ],%0A      \"gap_policy\" : \"skip\",%0A      \"model\" : \"simple\",%0A      \"window\" : 22,%0A      \"predict\" : 2%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:16:23,593][INFO ][org.elasticsearch.search.aggregations.pipeline.moving.avg] Content string: {%0A  \"QNDRwluEeQpPJBqAbN\" : {%0A    \"moving_avg\" : {%0A      \"buckets_path\" : [%0A        \"OSGUpRuf\"%0A      ],%0A      \"gap_policy\" : \"skip\",%0A      \"model\" : \"simple\",%0A      \"window\" : 22,%0A      \"predict\" : 2%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
  "startTimestamp": 1474197383588,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultParsing(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultParsing(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
  "startTimestamp": 1474197383594,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
  "startTimestamp": 1474197383596,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
  "startTimestamp": 1474197383605,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests",
  "startTimestamp": 1474197383543,
  "executionTime": 67
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests",
   "displayName": "org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests",
   "methodName": null,
   "className": "org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests",
   "children": [
    {
     "id": "ID#testReadAndWriteSnapshotsThroughIndexFile(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)",
     "displayName": "testReadAndWriteSnapshotsThroughIndexFile(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)",
     "methodName": "testReadAndWriteSnapshotsThroughIndexFile",
     "className": "org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests",
     "children": []
    },
    {
     "id": "ID#testIndexGenerationalFiles(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)",
     "displayName": "testIndexGenerationalFiles(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)",
     "methodName": "testIndexGenerationalFiles",
     "className": "org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests",
     "children": []
    },
    {
     "id": "ID#testRetrieveSnapshots(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)",
     "displayName": "testRetrieveSnapshots(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)",
     "methodName": "testRetrieveSnapshots",
     "className": "org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197383616
 }
]

[
 "TEST_STARTED",
 "ID#testReadAndWriteSnapshotsThroughIndexFile(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:16:23,646][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:16:23,670][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:16:23,670][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:16:23,673][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[564], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:16:23,676][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:16:23,676][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:16:23,851][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:16:23,851][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:16:23,853][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[80]}, bound_addresses {local[80]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:16:23,874][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{YCKFkBdMSC6L5NQJFMTuPA}{tPiHmKYsT62gxLn1Xi_HDg}{local}{local[80]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:16:23,875][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:16:23,889][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:16:23,939][INFO ][org.elasticsearch.repositories] [node_s_0] put repository [test-repo]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:16:24,106][INFO ][org.elasticsearch.repositories.blobstore] [BlobStoreRepositoryTests#testReadAndWriteSnapshotsThroughIndexFile]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadAndWriteSnapshotsThroughIndexFile(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)",
  "startTimestamp": 1474197383638,
  "executionTime": 474
 }
]

[
 "TEST_STARTED",
 "ID#testIndexGenerationalFiles(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:16:24,120][INFO ][org.elasticsearch.repositories] [node_s_0] update repository [test-repo]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:16:24,225][INFO ][org.elasticsearch.repositories.blobstore] [BlobStoreRepositoryTests#testIndexGenerationalFiles]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexGenerationalFiles(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)",
  "startTimestamp": 1474197384113,
  "executionTime": 114
 }
]

[
 "TEST_STARTED",
 "ID#testRetrieveSnapshots(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:16:24,259][INFO ][org.elasticsearch.repositories.blobstore] -->  creating repository%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:16:24,261][INFO ][org.elasticsearch.repositories] [node_s_0] update repository [test-repo]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:16:24,283][INFO ][org.elasticsearch.repositories.blobstore] --> creating an index and indexing documents%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:16:24,287][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-idx] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:16:24,360][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-idx][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:16:24,383][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-idx/P0SoOPBaRneqltVZPDUAVQ] create_mapping [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:16:24,908][INFO ][org.elasticsearch.repositories.blobstore] --> create first snapshot%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:16:25,099][INFO ][org.elasticsearch.snapshots] [node_s_0] snapshot [test-repo:test-snap-1/s6LAcNsGTC2dDZ0Wk96Itg] is done%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:16:25,130][INFO ][org.elasticsearch.repositories.blobstore] --> create second snapshot%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:16:25,200][INFO ][org.elasticsearch.snapshots] [node_s_0] snapshot [test-repo:test-snap-2/nYq-EpmyTzq4QnMn1Bcz7g] is done%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:16:25,278][INFO ][org.elasticsearch.repositories.blobstore] --> make sure the node's repository can resolve the snapshots%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:16:25,280][INFO ][org.elasticsearch.repositories.blobstore] [BlobStoreRepositoryTests#testRetrieveSnapshots]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRetrieveSnapshots(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)",
  "startTimestamp": 1474197384227,
  "executionTime": 1111
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:16:25,338][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:16:25,339][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:16:25,340][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:16:25,378][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests",
  "startTimestamp": 1474197383616,
  "executionTime": 1785
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.FieldDataCacheTests",
   "displayName": "org.elasticsearch.index.fielddata.FieldDataCacheTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.FieldDataCacheTests",
   "children": [
    {
     "id": "ID#testLoadGlobal_neverCacheIfFieldIsMissing(org.elasticsearch.index.fielddata.FieldDataCacheTests)",
     "displayName": "testLoadGlobal_neverCacheIfFieldIsMissing(org.elasticsearch.index.fielddata.FieldDataCacheTests)",
     "methodName": "testLoadGlobal_neverCacheIfFieldIsMissing",
     "className": "org.elasticsearch.index.fielddata.FieldDataCacheTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197385410
 }
]

[
 "TEST_STARTED",
 "ID#testLoadGlobal_neverCacheIfFieldIsMissing(org.elasticsearch.index.fielddata.FieldDataCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLoadGlobal_neverCacheIfFieldIsMissing(org.elasticsearch.index.fielddata.FieldDataCacheTests)",
  "startTimestamp": 1474197385429,
  "executionTime": 174
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.FieldDataCacheTests",
  "startTimestamp": 1474197385410,
  "executionTime": 204
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests",
   "displayName": "org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests",
   "children": [
    {
     "id": "ID#testNullValuedSettingThrowsException(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)",
     "displayName": "testNullValuedSettingThrowsException(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)",
     "methodName": "testNullValuedSettingThrowsException",
     "className": "org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests",
     "children": []
    },
    {
     "id": "ID#testDuplicateKeysThrowsException(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)",
     "displayName": "testDuplicateKeysThrowsException(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)",
     "methodName": "testDuplicateKeysThrowsException",
     "className": "org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests",
     "children": []
    },
    {
     "id": "ID#testSimpleJsonSettings(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)",
     "displayName": "testSimpleJsonSettings(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)",
     "methodName": "testSimpleJsonSettings",
     "className": "org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197385620
 }
]

[
 "TEST_STARTED",
 "ID#testNullValuedSettingThrowsException(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullValuedSettingThrowsException(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)",
  "startTimestamp": 1474197385657,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDuplicateKeysThrowsException(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuplicateKeysThrowsException(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)",
  "startTimestamp": 1474197385659,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleJsonSettings(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleJsonSettings(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)",
  "startTimestamp": 1474197385661,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests",
  "startTimestamp": 1474197385620,
  "executionTime": 53
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.HunspellTokenFilterFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.HunspellTokenFilterFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.HunspellTokenFilterFactoryTests",
   "children": [
    {
     "id": "ID#testDedup(org.elasticsearch.index.analysis.HunspellTokenFilterFactoryTests)",
     "displayName": "testDedup(org.elasticsearch.index.analysis.HunspellTokenFilterFactoryTests)",
     "methodName": "testDedup",
     "className": "org.elasticsearch.index.analysis.HunspellTokenFilterFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197385678
 }
]

[
 "TEST_STARTED",
 "ID#testDedup(org.elasticsearch.index.analysis.HunspellTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDedup(org.elasticsearch.index.analysis.HunspellTokenFilterFactoryTests)",
  "startTimestamp": 1474197385735,
  "executionTime": 4053
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.HunspellTokenFilterFactoryTests",
  "startTimestamp": 1474197385678,
  "executionTime": 4114
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.transport.TCPTransportTests",
   "displayName": "org.elasticsearch.transport.TCPTransportTests",
   "methodName": null,
   "className": "org.elasticsearch.transport.TCPTransportTests",
   "children": [
    {
     "id": "ID#testParseV4DefaultRange(org.elasticsearch.transport.TCPTransportTests)",
     "displayName": "testParseV4DefaultRange(org.elasticsearch.transport.TCPTransportTests)",
     "methodName": "testParseV4DefaultRange",
     "className": "org.elasticsearch.transport.TCPTransportTests",
     "children": []
    },
    {
     "id": "ID#testParseV4DefaultPort(org.elasticsearch.transport.TCPTransportTests)",
     "displayName": "testParseV4DefaultPort(org.elasticsearch.transport.TCPTransportTests)",
     "methodName": "testParseV4DefaultPort",
     "className": "org.elasticsearch.transport.TCPTransportTests",
     "children": []
    },
    {
     "id": "ID#testParseV4WithPort(org.elasticsearch.transport.TCPTransportTests)",
     "displayName": "testParseV4WithPort(org.elasticsearch.transport.TCPTransportTests)",
     "methodName": "testParseV4WithPort",
     "className": "org.elasticsearch.transport.TCPTransportTests",
     "children": []
    },
    {
     "id": "ID#testParseV6WithPortRange(org.elasticsearch.transport.TCPTransportTests)",
     "displayName": "testParseV6WithPortRange(org.elasticsearch.transport.TCPTransportTests)",
     "methodName": "testParseV6WithPortRange",
     "className": "org.elasticsearch.transport.TCPTransportTests",
     "children": []
    },
    {
     "id": "ID#testParseV6DefaultPort(org.elasticsearch.transport.TCPTransportTests)",
     "displayName": "testParseV6DefaultPort(org.elasticsearch.transport.TCPTransportTests)",
     "methodName": "testParseV6DefaultPort",
     "className": "org.elasticsearch.transport.TCPTransportTests",
     "children": []
    },
    {
     "id": "ID#testParseV4WithPortRange(org.elasticsearch.transport.TCPTransportTests)",
     "displayName": "testParseV4WithPortRange(org.elasticsearch.transport.TCPTransportTests)",
     "methodName": "testParseV4WithPortRange",
     "className": "org.elasticsearch.transport.TCPTransportTests",
     "children": []
    },
    {
     "id": "ID#testParseV6DefaultRange(org.elasticsearch.transport.TCPTransportTests)",
     "displayName": "testParseV6DefaultRange(org.elasticsearch.transport.TCPTransportTests)",
     "methodName": "testParseV6DefaultRange",
     "className": "org.elasticsearch.transport.TCPTransportTests",
     "children": []
    },
    {
     "id": "ID#testAddressLimit(org.elasticsearch.transport.TCPTransportTests)",
     "displayName": "testAddressLimit(org.elasticsearch.transport.TCPTransportTests)",
     "methodName": "testAddressLimit",
     "className": "org.elasticsearch.transport.TCPTransportTests",
     "children": []
    },
    {
     "id": "ID#testParseV6WithPort(org.elasticsearch.transport.TCPTransportTests)",
     "displayName": "testParseV6WithPort(org.elasticsearch.transport.TCPTransportTests)",
     "methodName": "testParseV6WithPort",
     "className": "org.elasticsearch.transport.TCPTransportTests",
     "children": []
    },
    {
     "id": "ID#testParseV6UnBracketed(org.elasticsearch.transport.TCPTransportTests)",
     "displayName": "testParseV6UnBracketed(org.elasticsearch.transport.TCPTransportTests)",
     "methodName": "testParseV6UnBracketed",
     "className": "org.elasticsearch.transport.TCPTransportTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197389799
 }
]

[
 "TEST_STARTED",
 "ID#testParseV4DefaultRange(org.elasticsearch.transport.TCPTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseV4DefaultRange(org.elasticsearch.transport.TCPTransportTests)",
  "startTimestamp": 1474197389986,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testParseV4DefaultPort(org.elasticsearch.transport.TCPTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseV4DefaultPort(org.elasticsearch.transport.TCPTransportTests)",
  "startTimestamp": 1474197390010,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseV4WithPort(org.elasticsearch.transport.TCPTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseV4WithPort(org.elasticsearch.transport.TCPTransportTests)",
  "startTimestamp": 1474197390012,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseV6WithPortRange(org.elasticsearch.transport.TCPTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseV6WithPortRange(org.elasticsearch.transport.TCPTransportTests)",
  "startTimestamp": 1474197390014,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParseV6DefaultPort(org.elasticsearch.transport.TCPTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseV6DefaultPort(org.elasticsearch.transport.TCPTransportTests)",
  "startTimestamp": 1474197390016,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParseV4WithPortRange(org.elasticsearch.transport.TCPTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseV4WithPortRange(org.elasticsearch.transport.TCPTransportTests)",
  "startTimestamp": 1474197390017,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseV6DefaultRange(org.elasticsearch.transport.TCPTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseV6DefaultRange(org.elasticsearch.transport.TCPTransportTests)",
  "startTimestamp": 1474197390019,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAddressLimit(org.elasticsearch.transport.TCPTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddressLimit(org.elasticsearch.transport.TCPTransportTests)",
  "startTimestamp": 1474197390021,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseV6WithPort(org.elasticsearch.transport.TCPTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseV6WithPort(org.elasticsearch.transport.TCPTransportTests)",
  "startTimestamp": 1474197390023,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseV6UnBracketed(org.elasticsearch.transport.TCPTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseV6UnBracketed(org.elasticsearch.transport.TCPTransportTests)",
  "startTimestamp": 1474197390025,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.transport.TCPTransportTests",
  "startTimestamp": 1474197389799,
  "executionTime": 230
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.ingest.TrackingResultProcessorTests",
   "displayName": "org.elasticsearch.action.ingest.TrackingResultProcessorTests",
   "methodName": null,
   "className": "org.elasticsearch.action.ingest.TrackingResultProcessorTests",
   "children": [
    {
     "id": "ID#testActualCompoundProcessorWithOnFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
     "displayName": "testActualCompoundProcessorWithOnFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
     "methodName": "testActualCompoundProcessorWithOnFailure",
     "className": "org.elasticsearch.action.ingest.TrackingResultProcessorTests",
     "children": []
    },
    {
     "id": "ID#testActualProcessor(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
     "displayName": "testActualProcessor(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
     "methodName": "testActualProcessor",
     "className": "org.elasticsearch.action.ingest.TrackingResultProcessorTests",
     "children": []
    },
    {
     "id": "ID#testActualCompoundProcessorWithoutOnFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
     "displayName": "testActualCompoundProcessorWithoutOnFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
     "methodName": "testActualCompoundProcessorWithoutOnFailure",
     "className": "org.elasticsearch.action.ingest.TrackingResultProcessorTests",
     "children": []
    },
    {
     "id": "ID#testActualCompoundProcessorWithIgnoreFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
     "displayName": "testActualCompoundProcessorWithIgnoreFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
     "methodName": "testActualCompoundProcessorWithIgnoreFailure",
     "className": "org.elasticsearch.action.ingest.TrackingResultProcessorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197390038
 }
]

[
 "TEST_STARTED",
 "ID#testActualCompoundProcessorWithOnFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActualCompoundProcessorWithOnFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
  "startTimestamp": 1474197390178,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testActualProcessor(org.elasticsearch.action.ingest.TrackingResultProcessorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActualProcessor(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
  "startTimestamp": 1474197390190,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testActualCompoundProcessorWithoutOnFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActualCompoundProcessorWithoutOnFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
  "startTimestamp": 1474197390193,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testActualCompoundProcessorWithIgnoreFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActualCompoundProcessorWithIgnoreFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
  "startTimestamp": 1474197390195,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.ingest.TrackingResultProcessorTests",
  "startTimestamp": 1474197390038,
  "executionTime": 170
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.AllFieldMapperPositionIncrementGapTests",
   "displayName": "org.elasticsearch.index.mapper.AllFieldMapperPositionIncrementGapTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.AllFieldMapperPositionIncrementGapTests",
   "children": [
    {
     "id": "ID#testDefault(org.elasticsearch.index.mapper.AllFieldMapperPositionIncrementGapTests)",
     "displayName": "testDefault(org.elasticsearch.index.mapper.AllFieldMapperPositionIncrementGapTests)",
     "methodName": "testDefault",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperPositionIncrementGapTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197390213
 }
]

[
 "TEST_STARTED",
 "ID#testDefault(org.elasticsearch.index.mapper.AllFieldMapperPositionIncrementGapTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:30,431][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:30,589][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:30,589][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:30,593][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[564], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:30,600][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:30,600][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:30,805][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:30,806][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:30,806][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[81]}, bound_addresses {local[81]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:30,807][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{yOG6e9EDRLiTh4NjEMasoQ}{yYX7-zCtRjevQ66r-U6Mbg}{local}{local[81]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:30,808][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:30,821][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:30,855][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [auto(index api)], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:30,993][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:31,011][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/8CtWCSKMS92wai1axdbtAQ] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:31,548][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperPositionIncrementGapTests#testDefault]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefault(org.elasticsearch.index.mapper.AllFieldMapperPositionIncrementGapTests)",
  "startTimestamp": 1474197390418,
  "executionTime": 1161
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:31,579][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:31,580][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:31,580][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:31,581][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.AllFieldMapperPositionIncrementGapTests",
  "startTimestamp": 1474197390213,
  "executionTime": 1390
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.shard.IndexSearcherWrapperTests",
   "displayName": "org.elasticsearch.index.shard.IndexSearcherWrapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.shard.IndexSearcherWrapperTests",
   "children": [
    {
     "id": "ID#testNoWrap(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
     "displayName": "testNoWrap(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
     "methodName": "testNoWrap",
     "className": "org.elasticsearch.index.shard.IndexSearcherWrapperTests",
     "children": []
    },
    {
     "id": "ID#testWrappedReaderMustDelegateCoreCacheKey(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
     "displayName": "testWrappedReaderMustDelegateCoreCacheKey(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
     "methodName": "testWrappedReaderMustDelegateCoreCacheKey",
     "className": "org.elasticsearch.index.shard.IndexSearcherWrapperTests",
     "children": []
    },
    {
     "id": "ID#testReaderCloseListenerIsCalled(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
     "displayName": "testReaderCloseListenerIsCalled(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
     "methodName": "testReaderCloseListenerIsCalled",
     "className": "org.elasticsearch.index.shard.IndexSearcherWrapperTests",
     "children": []
    },
    {
     "id": "ID#testIsCacheable(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
     "displayName": "testIsCacheable(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
     "methodName": "testIsCacheable",
     "className": "org.elasticsearch.index.shard.IndexSearcherWrapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197391612
 }
]

[
 "TEST_STARTED",
 "ID#testNoWrap(org.elasticsearch.index.shard.IndexSearcherWrapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoWrap(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
  "startTimestamp": 1474197391633,
  "executionTime": 45
 }
]

[
 "TEST_STARTED",
 "ID#testWrappedReaderMustDelegateCoreCacheKey(org.elasticsearch.index.shard.IndexSearcherWrapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWrappedReaderMustDelegateCoreCacheKey(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
  "startTimestamp": 1474197391678,
  "executionTime": 92
 }
]

[
 "TEST_STARTED",
 "ID#testReaderCloseListenerIsCalled(org.elasticsearch.index.shard.IndexSearcherWrapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReaderCloseListenerIsCalled(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
  "startTimestamp": 1474197391771,
  "executionTime": 565
 }
]

[
 "TEST_STARTED",
 "ID#testIsCacheable(org.elasticsearch.index.shard.IndexSearcherWrapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsCacheable(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
  "startTimestamp": 1474197392336,
  "executionTime": 181
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.shard.IndexSearcherWrapperTests",
  "startTimestamp": 1474197391612,
  "executionTime": 905
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.script.FileScriptTests",
   "displayName": "org.elasticsearch.script.FileScriptTests",
   "methodName": null,
   "className": "org.elasticsearch.script.FileScriptTests",
   "children": [
    {
     "id": "ID#testFileScriptFound(org.elasticsearch.script.FileScriptTests)",
     "displayName": "testFileScriptFound(org.elasticsearch.script.FileScriptTests)",
     "methodName": "testFileScriptFound",
     "className": "org.elasticsearch.script.FileScriptTests",
     "children": []
    },
    {
     "id": "ID#testAllOpsDisabled(org.elasticsearch.script.FileScriptTests)",
     "displayName": "testAllOpsDisabled(org.elasticsearch.script.FileScriptTests)",
     "methodName": "testAllOpsDisabled",
     "className": "org.elasticsearch.script.FileScriptTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197392517
 }
]

[
 "TEST_STARTED",
 "ID#testFileScriptFound(org.elasticsearch.script.FileScriptTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:16:32,548][INFO ][org.elasticsearch.script ] [node_s_0] compiling script file [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J2\\temp\\org.elasticsearch.script.FileScriptTests_DB64F96F238DCA2A-001\\tempDir-001\\config\\scripts\\script1.mockscript]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFileScriptFound(org.elasticsearch.script.FileScriptTests)",
  "startTimestamp": 1474197392532,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testAllOpsDisabled(org.elasticsearch.script.FileScriptTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:16:32,564][WARN ][org.elasticsearch.script ] [node_s_0] skipping compile of script file [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J2\\temp\\org.elasticsearch.script.FileScriptTests_DB64F96F238DCA2A-001\\tempDir-002\\config\\scripts\\script1.mockscript] as all scripted operations are disabled for file scripts%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllOpsDisabled(org.elasticsearch.script.FileScriptTests)",
  "startTimestamp": 1474197392548,
  "executionTime": 16
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.script.FileScriptTests",
  "startTimestamp": 1474197392517,
  "executionTime": 62
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests",
   "children": [
    {
     "id": "ID#testMerge(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
     "displayName": "testMerge(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
     "methodName": "testMerge",
     "className": "org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests",
     "children": []
    },
    {
     "id": "ID#testPrecisionFromThreshold(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
     "displayName": "testPrecisionFromThreshold(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
     "methodName": "testPrecisionFromThreshold",
     "className": "org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests",
     "children": []
    },
    {
     "id": "ID#testEncodeDecode(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
     "displayName": "testEncodeDecode(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
     "methodName": "testEncodeDecode",
     "className": "org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests",
     "children": []
    },
    {
     "id": "ID#testAccuracy(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
     "displayName": "testAccuracy(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
     "methodName": "testAccuracy",
     "className": "org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests",
     "children": []
    },
    {
     "id": "ID#testFakeHashes(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
     "displayName": "testFakeHashes(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
     "methodName": "testFakeHashes",
     "className": "org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197392579
 }
]

[
 "TEST_STARTED",
 "ID#testMerge(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMerge(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
  "startTimestamp": 1474197392610,
  "executionTime": 63
 }
]

[
 "TEST_STARTED",
 "ID#testPrecisionFromThreshold(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrecisionFromThreshold(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
  "startTimestamp": 1474197392673,
  "executionTime": 0
 }
]

[
 "TEST_STARTED",
 "ID#testEncodeDecode(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEncodeDecode(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
  "startTimestamp": 1474197392673,
  "executionTime": 94
 }
]

[
 "TEST_STARTED",
 "ID#testAccuracy(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAccuracy(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
  "startTimestamp": 1474197392767,
  "executionTime": 318
 }
]

[
 "TEST_STARTED",
 "ID#testFakeHashes(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFakeHashes(org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests)",
  "startTimestamp": 1474197393086,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.cardinality.HyperLogLogPlusPlusTests",
  "startTimestamp": 1474197392579,
  "executionTime": 510
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.CopyToMapperTests",
   "displayName": "org.elasticsearch.index.mapper.CopyToMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.CopyToMapperTests",
   "children": [
    {
     "id": "ID#testCopyToDynamicInnerInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "displayName": "testCopyToDynamicInnerInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "methodName": "testCopyToDynamicInnerInnerObjectParsing",
     "className": "org.elasticsearch.index.mapper.CopyToMapperTests",
     "children": []
    },
    {
     "id": "ID#testCopyToStrictDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "displayName": "testCopyToStrictDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "methodName": "testCopyToStrictDynamicInnerObjectParsing",
     "className": "org.elasticsearch.index.mapper.CopyToMapperTests",
     "children": []
    },
    {
     "id": "ID#testCopyToNestedField(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "displayName": "testCopyToNestedField(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "methodName": "testCopyToNestedField",
     "className": "org.elasticsearch.index.mapper.CopyToMapperTests",
     "children": []
    },
    {
     "id": "ID#testCopyToFieldsParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "displayName": "testCopyToFieldsParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "methodName": "testCopyToFieldsParsing",
     "className": "org.elasticsearch.index.mapper.CopyToMapperTests",
     "children": []
    },
    {
     "id": "ID#testCopyToInnerStrictDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "displayName": "testCopyToInnerStrictDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "methodName": "testCopyToInnerStrictDynamicInnerObjectParsing",
     "className": "org.elasticsearch.index.mapper.CopyToMapperTests",
     "children": []
    },
    {
     "id": "ID#testCopyToFieldMerge(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "displayName": "testCopyToFieldMerge(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "methodName": "testCopyToFieldMerge",
     "className": "org.elasticsearch.index.mapper.CopyToMapperTests",
     "children": []
    },
    {
     "id": "ID#testCopyToFieldsInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "displayName": "testCopyToFieldsInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "methodName": "testCopyToFieldsInnerObjectParsing",
     "className": "org.elasticsearch.index.mapper.CopyToMapperTests",
     "children": []
    },
    {
     "id": "ID#testCopyToDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "displayName": "testCopyToDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "methodName": "testCopyToDynamicInnerObjectParsing",
     "className": "org.elasticsearch.index.mapper.CopyToMapperTests",
     "children": []
    },
    {
     "id": "ID#testCopyToDynamicNestedObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "displayName": "testCopyToDynamicNestedObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
     "methodName": "testCopyToDynamicNestedObjectParsing",
     "className": "org.elasticsearch.index.mapper.CopyToMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197393096
 }
]

[
 "TEST_STARTED",
 "ID#testCopyToDynamicInnerInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:33,124][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:33,158][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:33,159][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:33,162][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[564], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:33,164][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:33,164][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:33,860][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:33,861][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:33,862][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[82]}, bound_addresses {local[82]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:34,130][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{H665mrYhScW6qMHaK5XwfA}{wZOEGBBJRoCxFiPgpWvOiw}{local}{local[82]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:34,130][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:34,199][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:34,219][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:34,359][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:34,377][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CopyToMapperTests#testCopyToDynamicInnerInnerObjectParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyToDynamicInnerInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
  "startTimestamp": 1474197393112,
  "executionTime": 1304
 }
]

[
 "TEST_STARTED",
 "ID#testCopyToStrictDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:34,423][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:34,483][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:34,499][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CopyToMapperTests#testCopyToStrictDynamicInnerObjectParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyToStrictDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
  "startTimestamp": 1474197394417,
  "executionTime": 114
 }
]

[
 "TEST_STARTED",
 "ID#testCopyToNestedField(org.elasticsearch.index.mapper.CopyToMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:34,537][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:34,591][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:34,616][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CopyToMapperTests#testCopyToNestedField]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyToNestedField(org.elasticsearch.index.mapper.CopyToMapperTests)",
  "startTimestamp": 1474197394531,
  "executionTime": 205
 }
]

[
 "TEST_STARTED",
 "ID#testCopyToFieldsParsing(org.elasticsearch.index.mapper.CopyToMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:34,744][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:34,818][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:34,841][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/bU-Jg-3kR0WjiW2LErmcDQ] create_mapping [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:34,858][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/bU-Jg-3kR0WjiW2LErmcDQ] update_mapping [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:34,871][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CopyToMapperTests#testCopyToFieldsParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyToFieldsParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
  "startTimestamp": 1474197394737,
  "executionTime": 239
 }
]

[
 "TEST_STARTED",
 "ID#testCopyToInnerStrictDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:34,983][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:35,067][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:35,080][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CopyToMapperTests#testCopyToInnerStrictDynamicInnerObjectParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyToInnerStrictDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
  "startTimestamp": 1474197394976,
  "executionTime": 186
 }
]

[
 "TEST_STARTED",
 "ID#testCopyToFieldMerge(org.elasticsearch.index.mapper.CopyToMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:35,170][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:35,288][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:35,304][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CopyToMapperTests#testCopyToFieldMerge]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyToFieldMerge(org.elasticsearch.index.mapper.CopyToMapperTests)",
  "startTimestamp": 1474197395163,
  "executionTime": 188
 }
]

[
 "TEST_STARTED",
 "ID#testCopyToFieldsInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:35,358][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:35,495][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:35,509][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CopyToMapperTests#testCopyToFieldsInnerObjectParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyToFieldsInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
  "startTimestamp": 1474197395351,
  "executionTime": 251
 }
]

[
 "TEST_STARTED",
 "ID#testCopyToDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:35,608][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:35,664][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:35,677][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CopyToMapperTests#testCopyToDynamicInnerObjectParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyToDynamicInnerObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
  "startTimestamp": 1474197395602,
  "executionTime": 105
 }
]

[
 "TEST_STARTED",
 "ID#testCopyToDynamicNestedObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:35,714][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:35,785][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:35,800][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CopyToMapperTests#testCopyToDynamicNestedObjectParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyToDynamicNestedObjectParsing(org.elasticsearch.index.mapper.CopyToMapperTests)",
  "startTimestamp": 1474197395707,
  "executionTime": 125
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:35,832][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:35,833][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:35,833][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:16:35,834][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.CopyToMapperTests",
  "startTimestamp": 1474197393096,
  "executionTime": 2756
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.concurrent.RefCountedTests",
   "displayName": "org.elasticsearch.common.util.concurrent.RefCountedTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.concurrent.RefCountedTests",
   "children": [
    {
     "id": "ID#testRefCount(org.elasticsearch.common.util.concurrent.RefCountedTests)",
     "displayName": "testRefCount(org.elasticsearch.common.util.concurrent.RefCountedTests)",
     "methodName": "testRefCount",
     "className": "org.elasticsearch.common.util.concurrent.RefCountedTests",
     "children": []
    },
    {
     "id": "ID#testMultiThreaded(org.elasticsearch.common.util.concurrent.RefCountedTests)",
     "displayName": "testMultiThreaded(org.elasticsearch.common.util.concurrent.RefCountedTests)",
     "methodName": "testMultiThreaded",
     "className": "org.elasticsearch.common.util.concurrent.RefCountedTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197395858
 }
]

[
 "TEST_STARTED",
 "ID#testRefCount(org.elasticsearch.common.util.concurrent.RefCountedTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRefCount(org.elasticsearch.common.util.concurrent.RefCountedTests)",
  "startTimestamp": 1474197395878,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMultiThreaded(org.elasticsearch.common.util.concurrent.RefCountedTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiThreaded(org.elasticsearch.common.util.concurrent.RefCountedTests)",
  "startTimestamp": 1474197395881,
  "executionTime": 13
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.concurrent.RefCountedTests",
  "startTimestamp": 1474197395858,
  "executionTime": 38
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.DelayedAllocationServiceTests",
   "displayName": "org.elasticsearch.cluster.routing.DelayedAllocationServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.DelayedAllocationServiceTests",
   "children": [
    {
     "id": "ID#testDelayedUnassignedScheduleRerouteAfterDelayedReroute(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
     "displayName": "testDelayedUnassignedScheduleRerouteAfterDelayedReroute(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
     "methodName": "testDelayedUnassignedScheduleRerouteAfterDelayedReroute",
     "className": "org.elasticsearch.cluster.routing.DelayedAllocationServiceTests",
     "children": []
    },
    {
     "id": "ID#testNoDelayedUnassigned(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
     "displayName": "testNoDelayedUnassigned(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
     "methodName": "testNoDelayedUnassigned",
     "className": "org.elasticsearch.cluster.routing.DelayedAllocationServiceTests",
     "children": []
    },
    {
     "id": "ID#testDelayedUnassignedScheduleRerouteRescheduledOnShorterDelay(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
     "displayName": "testDelayedUnassignedScheduleRerouteRescheduledOnShorterDelay(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
     "methodName": "testDelayedUnassignedScheduleRerouteRescheduledOnShorterDelay",
     "className": "org.elasticsearch.cluster.routing.DelayedAllocationServiceTests",
     "children": []
    },
    {
     "id": "ID#testDelayedUnassignedScheduleReroute(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
     "displayName": "testDelayedUnassignedScheduleReroute(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
     "methodName": "testDelayedUnassignedScheduleReroute",
     "className": "org.elasticsearch.cluster.routing.DelayedAllocationServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197395909
 }
]

[
 "TEST_STARTED",
 "ID#testDelayedUnassignedScheduleRerouteAfterDelayedReroute(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:35,957][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[short_delay][0], [long_delay][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:35,959][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:35,989][INFO ][org.elasticsearch.cluster.routing] [node_s_0] scheduling reroute for delayed shards in [49.4ms] (2 delayed shards)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:36,047][INFO ][org.elasticsearch.cluster.routing] [node_s_0] scheduling reroute for delayed shards in [809.4ms] (1 delayed shards)%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDelayedUnassignedScheduleRerouteAfterDelayedReroute(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
  "startTimestamp": 1474197395925,
  "executionTime": 943
 }
]

[
 "TEST_STARTED",
 "ID#testNoDelayedUnassigned(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:36,878][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:36,879][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoDelayedUnassigned(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
  "startTimestamp": 1474197396869,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testDelayedUnassignedScheduleRerouteRescheduledOnShorterDelay(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:36,897][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[foo][0], [bar][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:36,897][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [fake node left]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:36,897][INFO ][org.elasticsearch.cluster.routing] [node_s_0] scheduling reroute for delayed shards in [29.9s] (1 delayed shards)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:36,898][INFO ][org.elasticsearch.cluster.routing] [node_s_0] scheduling reroute for delayed shards in [76.1ms] (2 delayed shards)%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDelayedUnassignedScheduleRerouteRescheduledOnShorterDelay(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
  "startTimestamp": 1474197396884,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testDelayedUnassignedScheduleReroute(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:36,908][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:36,909][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:46:36,909][INFO ][org.elasticsearch.cluster.routing] [node_s_0] scheduling reroute for delayed shards in [89.7ms] (1 delayed shards)%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDelayedUnassignedScheduleReroute(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
  "startTimestamp": 1474197396899,
  "executionTime": 109
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.DelayedAllocationServiceTests",
  "startTimestamp": 1474197395909,
  "executionTime": 1101
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.PrimaryNotRelocatedWhileBeingRecoveredTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.PrimaryNotRelocatedWhileBeingRecoveredTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.PrimaryNotRelocatedWhileBeingRecoveredTests",
   "children": [
    {
     "id": "ID#testPrimaryNotRelocatedWhileBeingRecoveredFrom(org.elasticsearch.cluster.routing.allocation.PrimaryNotRelocatedWhileBeingRecoveredTests)",
     "displayName": "testPrimaryNotRelocatedWhileBeingRecoveredFrom(org.elasticsearch.cluster.routing.allocation.PrimaryNotRelocatedWhileBeingRecoveredTests)",
     "methodName": "testPrimaryNotRelocatedWhileBeingRecoveredFrom",
     "className": "org.elasticsearch.cluster.routing.allocation.PrimaryNotRelocatedWhileBeingRecoveredTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197397016
 }
]

[
 "TEST_STARTED",
 "ID#testPrimaryNotRelocatedWhileBeingRecoveredFrom(org.elasticsearch.cluster.routing.allocation.PrimaryNotRelocatedWhileBeingRecoveredTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:16:37,035][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:16:37,036][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding two nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:16:37,037][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the primary shard (on node1)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:16:37,038][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start another node, replica will start recovering form primary%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:16:37,039][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start another node, make sure the primary is not relocated%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrimaryNotRelocatedWhileBeingRecoveredFrom(org.elasticsearch.cluster.routing.allocation.PrimaryNotRelocatedWhileBeingRecoveredTests)",
  "startTimestamp": 1474197397029,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.PrimaryNotRelocatedWhileBeingRecoveredTests",
  "startTimestamp": 1474197397016,
  "executionTime": 25
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.SpanNotQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDist(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testDist(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testDist",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParserExceptions(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testParserExceptions(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testParserExceptions",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArgument(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testIllegalArgument(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testIllegalArgument",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testPrePost(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testPrePost(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testPrePost",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseDist(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testParseDist(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testParseDist",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197397047
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:37,082][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{G9vTlwIGSSqNLb7CLz00cQ}{local}{local[165]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:37,089][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:37,090][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1474197397075,
  "executionTime": 42
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1474197397117,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1474197397124,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1474197397127,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDist(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDist(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1474197397130,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParserExceptions(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParserExceptions(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1474197397133,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1474197397137,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1474197397144,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1474197397147,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArgument(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArgument(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1474197397152,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1474197397156,
  "executionTime": 38
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1474197397194,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testPrePost(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrePost(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1474197397210,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseDist(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseDist(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1474197397212,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.SpanNotQueryBuilderTests",
  "startTimestamp": 1474197397047,
  "executionTime": 173
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.recovery.RecoverySourceHandlerTests",
   "displayName": "org.elasticsearch.indices.recovery.RecoverySourceHandlerTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.recovery.RecoverySourceHandlerTests",
   "children": [
    {
     "id": "ID#testThrowExceptionOnPrimaryRelocatedBeforePhase1Completed(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
     "displayName": "testThrowExceptionOnPrimaryRelocatedBeforePhase1Completed(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
     "methodName": "testThrowExceptionOnPrimaryRelocatedBeforePhase1Completed",
     "className": "org.elasticsearch.indices.recovery.RecoverySourceHandlerTests",
     "children": []
    },
    {
     "id": "ID#testWaitForClusterStateOnPrimaryRelocation(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
     "displayName": "testWaitForClusterStateOnPrimaryRelocation(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
     "methodName": "testWaitForClusterStateOnPrimaryRelocation",
     "className": "org.elasticsearch.indices.recovery.RecoverySourceHandlerTests",
     "children": []
    },
    {
     "id": "ID#testHandleExceptinoOnSendSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
     "displayName": "testHandleExceptinoOnSendSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
     "methodName": "testHandleExceptinoOnSendSendFiles",
     "className": "org.elasticsearch.indices.recovery.RecoverySourceHandlerTests",
     "children": []
    },
    {
     "id": "ID#testHandleCorruptedIndexOnSendSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
     "displayName": "testHandleCorruptedIndexOnSendSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
     "methodName": "testHandleCorruptedIndexOnSendSendFiles",
     "className": "org.elasticsearch.indices.recovery.RecoverySourceHandlerTests",
     "children": []
    },
    {
     "id": "ID#testSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
     "displayName": "testSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
     "methodName": "testSendFiles",
     "className": "org.elasticsearch.indices.recovery.RecoverySourceHandlerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197397238
 }
]

[
 "TEST_STARTED",
 "ID#testThrowExceptionOnPrimaryRelocatedBeforePhase1Completed(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThrowExceptionOnPrimaryRelocatedBeforePhase1Completed(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
  "startTimestamp": 1474197397253,
  "executionTime": 72
 }
]

[
 "TEST_STARTED",
 "ID#testWaitForClusterStateOnPrimaryRelocation(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWaitForClusterStateOnPrimaryRelocation(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
  "startTimestamp": 1474197397325,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testHandleExceptinoOnSendSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHandleExceptinoOnSendSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
  "startTimestamp": 1474197397340,
  "executionTime": 438
 }
]

[
 "TEST_STARTED",
 "ID#testHandleCorruptedIndexOnSendSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:38,001][INFO ][test                     ] Corrupting file --  flipping at position 49 from 9 to a file: _0.cfe%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:38,006][INFO ][test                     ] Checksum before: [3165230495] after: [3127834997] checksum value after corruption: 3165230495] file: _0.cfe length: 303%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:38,025][WARN ][org.elasticsearch.indices.recovery]  [index][1] 1 Corrupted file detected name [_0.cfe], length [303], checksum [1gchvhb], writtenBy [6.2.0] checksum mismatch%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHandleCorruptedIndexOnSendSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
  "startTimestamp": 1474197397778,
  "executionTime": 248
 }
]

[
 "TEST_STARTED",
 "ID#testSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
  "startTimestamp": 1474197398026,
  "executionTime": 211
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.recovery.RecoverySourceHandlerTests",
  "startTimestamp": 1474197397238,
  "executionTime": 1027
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.ShapeBuilderTests",
   "displayName": "org.elasticsearch.common.geo.ShapeBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
   "children": [
    {
     "id": "ID#testShapeWithInvalidTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testShapeWithInvalidTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testShapeWithInvalidTangentialHole",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testComplexShapeWithHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testComplexShapeWithHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testComplexShapeWithHole",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMultiLineString(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testMultiLineString(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testMultiLineString",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNewPoint(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testNewPoint(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testNewPoint",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testLineStringBuilder(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testLineStringBuilder(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testLineStringBuilder",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testShapeWithPointOnDateline(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testShapeWithPointOnDateline(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testShapeWithPointOnDateline",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBoundaryShapeWithInvalidTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testBoundaryShapeWithInvalidTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testBoundaryShapeWithInvalidTangentialHole",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNewRectangle(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testNewRectangle(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testNewRectangle",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDatelineOGC(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testDatelineOGC(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testDatelineOGC",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testShapeWithHoleAtEdgeEndPoints(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testShapeWithHoleAtEdgeEndPoints(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testShapeWithHoleAtEdgeEndPoints",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNewPolygon_coordinate(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testNewPolygon_coordinate(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testNewPolygon_coordinate",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testShapeWithTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testShapeWithTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testShapeWithTangentialHole",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBoundaryShape(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testBoundaryShape(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testBoundaryShape",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testShapeWithEdgeAlongDateline(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testShapeWithEdgeAlongDateline(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testShapeWithEdgeAlongDateline",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testShapeWithAlternateOrientation(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testShapeWithAlternateOrientation(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testShapeWithAlternateOrientation",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testShapeWithBoundaryHoles(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testShapeWithBoundaryHoles(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testShapeWithBoundaryHoles",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDateline(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testDateline(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testDateline",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testGeoCircle(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testGeoCircle(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testGeoCircle",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNewPolygon(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testNewPolygon(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testNewPolygon",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNewPolygon_coordinates(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testNewPolygon_coordinates(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testNewPolygon_coordinates",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testPolygonSelfIntersection(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testPolygonSelfIntersection(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testPolygonSelfIntersection",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testLineStringWrapping(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testLineStringWrapping(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testLineStringWrapping",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBoundaryShapeWithTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testBoundaryShapeWithTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testBoundaryShapeWithTangentialHole",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testPolygonWrapping(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testPolygonWrapping(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testPolygonWrapping",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInvalidShapeWithConsecutiveDuplicatePoints(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testInvalidShapeWithConsecutiveDuplicatePoints(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testInvalidShapeWithConsecutiveDuplicatePoints",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197398274
 }
]

[
 "TEST_STARTED",
 "ID#testShapeWithInvalidTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShapeWithInvalidTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474197398290,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testComplexShapeWithHole(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testComplexShapeWithHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474197398292,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testMultiLineString(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiLineString(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474197398299,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNewPoint(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNewPoint(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474197398302,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testLineStringBuilder(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLineStringBuilder(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474197398304,
  "executionTime": 60
 }
]

[
 "TEST_STARTED",
 "ID#testShapeWithPointOnDateline(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShapeWithPointOnDateline(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474197398364,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testBoundaryShapeWithInvalidTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBoundaryShapeWithInvalidTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474197398370,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testNewRectangle(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNewRectangle(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474197398372,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDatelineOGC(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDatelineOGC(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474197398374,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testShapeWithHoleAtEdgeEndPoints(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShapeWithHoleAtEdgeEndPoints(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474197398377,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNewPolygon_coordinate(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNewPolygon_coordinate(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474197398380,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testShapeWithTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShapeWithTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474197398382,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBoundaryShape(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBoundaryShape(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474197398385,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testShapeWithEdgeAlongDateline(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShapeWithEdgeAlongDateline(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474197398387,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testShapeWithAlternateOrientation(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShapeWithAlternateOrientation(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474197398395,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testShapeWithBoundaryHoles(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShapeWithBoundaryHoles(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474197398402,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testDateline(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDateline(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474197398411,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testGeoCircle(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoCircle(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474197398414,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testNewPolygon(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNewPolygon(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474197398425,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNewPolygon_coordinates(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNewPolygon_coordinates(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474197398427,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testPolygonSelfIntersection(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPolygonSelfIntersection(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474197398429,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testLineStringWrapping(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLineStringWrapping(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474197398435,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testBoundaryShapeWithTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBoundaryShapeWithTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474197398436,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testPolygonWrapping(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPolygonWrapping(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474197398448,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidShapeWithConsecutiveDuplicatePoints(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidShapeWithConsecutiveDuplicatePoints(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474197398450,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.ShapeBuilderTests",
  "startTimestamp": 1474197398274,
  "executionTime": 181
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.KeywordFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
   "children": [
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testTermsQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "displayName": "testTermsQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "methodName": "testTermsQuery",
     "className": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFuzzyQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "displayName": "testFuzzyQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "methodName": "testFuzzyQuery",
     "className": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "displayName": "testIsFieldWithinQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "methodName": "testIsFieldWithinQuery",
     "className": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testTermQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "displayName": "testTermQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "methodName": "testTermQuery",
     "className": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testRegexpQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "displayName": "testRegexpQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "methodName": "testRegexpQuery",
     "className": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197398462
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.KeywordFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
  "startTimestamp": 1474197398477,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.KeywordFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
  "startTimestamp": 1474197398479,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.KeywordFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
  "startTimestamp": 1474197398481,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTermsQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermsQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
  "startTimestamp": 1474197398483,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFuzzyQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFuzzyQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
  "startTimestamp": 1474197398486,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.KeywordFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
  "startTimestamp": 1474197398489,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
  "startTimestamp": 1474197398491,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.KeywordFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
  "startTimestamp": 1474197398493,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTermQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
  "startTimestamp": 1474197398495,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRegexpQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegexpQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
  "startTimestamp": 1474197398498,
  "executionTime": 19
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.KeywordFieldTypeTests",
  "startTimestamp": 1474197398462,
  "executionTime": 57
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.snapshots.SnapshotUtilsTests",
   "displayName": "org.elasticsearch.snapshots.SnapshotUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.snapshots.SnapshotUtilsTests",
   "children": [
    {
     "id": "ID#testIndexNameFiltering(org.elasticsearch.snapshots.SnapshotUtilsTests)",
     "displayName": "testIndexNameFiltering(org.elasticsearch.snapshots.SnapshotUtilsTests)",
     "methodName": "testIndexNameFiltering",
     "className": "org.elasticsearch.snapshots.SnapshotUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197398525
 }
]

[
 "TEST_STARTED",
 "ID#testIndexNameFiltering(org.elasticsearch.snapshots.SnapshotUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexNameFiltering(org.elasticsearch.snapshots.SnapshotUtilsTests)",
  "startTimestamp": 1474197398541,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.snapshots.SnapshotUtilsTests",
  "startTimestamp": 1474197398525,
  "executionTime": 21
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cli.CommandTests",
   "displayName": "org.elasticsearch.cli.CommandTests",
   "methodName": null,
   "className": "org.elasticsearch.cli.CommandTests",
   "children": [
    {
     "id": "ID#testUserError(org.elasticsearch.cli.CommandTests)",
     "displayName": "testUserError(org.elasticsearch.cli.CommandTests)",
     "methodName": "testUserError",
     "className": "org.elasticsearch.cli.CommandTests",
     "children": []
    },
    {
     "id": "ID#testUsageError(org.elasticsearch.cli.CommandTests)",
     "displayName": "testUsageError(org.elasticsearch.cli.CommandTests)",
     "methodName": "testUsageError",
     "className": "org.elasticsearch.cli.CommandTests",
     "children": []
    },
    {
     "id": "ID#testNormalVerbosity(org.elasticsearch.cli.CommandTests)",
     "displayName": "testNormalVerbosity(org.elasticsearch.cli.CommandTests)",
     "methodName": "testNormalVerbosity",
     "className": "org.elasticsearch.cli.CommandTests",
     "children": []
    },
    {
     "id": "ID#testSilentVerbosity(org.elasticsearch.cli.CommandTests)",
     "displayName": "testSilentVerbosity(org.elasticsearch.cli.CommandTests)",
     "methodName": "testSilentVerbosity",
     "className": "org.elasticsearch.cli.CommandTests",
     "children": []
    },
    {
     "id": "ID#testHelp(org.elasticsearch.cli.CommandTests)",
     "displayName": "testHelp(org.elasticsearch.cli.CommandTests)",
     "methodName": "testHelp",
     "className": "org.elasticsearch.cli.CommandTests",
     "children": []
    },
    {
     "id": "ID#testVerbositySilentAndVerbose(org.elasticsearch.cli.CommandTests)",
     "displayName": "testVerbositySilentAndVerbose(org.elasticsearch.cli.CommandTests)",
     "methodName": "testVerbositySilentAndVerbose",
     "className": "org.elasticsearch.cli.CommandTests",
     "children": []
    },
    {
     "id": "ID#testVerboseVerbosity(org.elasticsearch.cli.CommandTests)",
     "displayName": "testVerboseVerbosity(org.elasticsearch.cli.CommandTests)",
     "methodName": "testVerboseVerbosity",
     "className": "org.elasticsearch.cli.CommandTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197398559
 }
]

[
 "TEST_STARTED",
 "ID#testUserError(org.elasticsearch.cli.CommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUserError(org.elasticsearch.cli.CommandTests)",
  "startTimestamp": 1474197398583,
  "executionTime": 103
 }
]

[
 "TEST_STARTED",
 "ID#testUsageError(org.elasticsearch.cli.CommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUsageError(org.elasticsearch.cli.CommandTests)",
  "startTimestamp": 1474197398686,
  "executionTime": 32
 }
]

[
 "TEST_STARTED",
 "ID#testNormalVerbosity(org.elasticsearch.cli.CommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalVerbosity(org.elasticsearch.cli.CommandTests)",
  "startTimestamp": 1474197398719,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSilentVerbosity(org.elasticsearch.cli.CommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSilentVerbosity(org.elasticsearch.cli.CommandTests)",
  "startTimestamp": 1474197398721,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testHelp(org.elasticsearch.cli.CommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHelp(org.elasticsearch.cli.CommandTests)",
  "startTimestamp": 1474197398726,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testVerbositySilentAndVerbose(org.elasticsearch.cli.CommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVerbositySilentAndVerbose(org.elasticsearch.cli.CommandTests)",
  "startTimestamp": 1474197398728,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testVerboseVerbosity(org.elasticsearch.cli.CommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVerboseVerbosity(org.elasticsearch.cli.CommandTests)",
  "startTimestamp": 1474197398746,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cli.CommandTests",
  "startTimestamp": 1474197398559,
  "executionTime": 191
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.script.ScriptContextTests",
   "displayName": "org.elasticsearch.script.ScriptContextTests",
   "methodName": null,
   "className": "org.elasticsearch.script.ScriptContextTests",
   "children": [
    {
     "id": "ID#testCustomScriptContextSettings(org.elasticsearch.script.ScriptContextTests)",
     "displayName": "testCustomScriptContextSettings(org.elasticsearch.script.ScriptContextTests)",
     "methodName": "testCustomScriptContextSettings",
     "className": "org.elasticsearch.script.ScriptContextTests",
     "children": []
    },
    {
     "id": "ID#testUnknownPluginScriptContext(org.elasticsearch.script.ScriptContextTests)",
     "displayName": "testUnknownPluginScriptContext(org.elasticsearch.script.ScriptContextTests)",
     "methodName": "testUnknownPluginScriptContext",
     "className": "org.elasticsearch.script.ScriptContextTests",
     "children": []
    },
    {
     "id": "ID#testUnknownCustomScriptContext(org.elasticsearch.script.ScriptContextTests)",
     "displayName": "testUnknownCustomScriptContext(org.elasticsearch.script.ScriptContextTests)",
     "methodName": "testUnknownCustomScriptContext",
     "className": "org.elasticsearch.script.ScriptContextTests",
     "children": []
    },
    {
     "id": "ID#testCustomGlobalScriptContextSettings(org.elasticsearch.script.ScriptContextTests)",
     "displayName": "testCustomGlobalScriptContextSettings(org.elasticsearch.script.ScriptContextTests)",
     "methodName": "testCustomGlobalScriptContextSettings",
     "className": "org.elasticsearch.script.ScriptContextTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197398757
 }
]

[
 "TEST_STARTED",
 "ID#testCustomScriptContextSettings(org.elasticsearch.script.ScriptContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCustomScriptContextSettings(org.elasticsearch.script.ScriptContextTests)",
  "startTimestamp": 1474197398771,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownPluginScriptContext(org.elasticsearch.script.ScriptContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownPluginScriptContext(org.elasticsearch.script.ScriptContextTests)",
  "startTimestamp": 1474197398777,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownCustomScriptContext(org.elasticsearch.script.ScriptContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownCustomScriptContext(org.elasticsearch.script.ScriptContextTests)",
  "startTimestamp": 1474197398784,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testCustomGlobalScriptContextSettings(org.elasticsearch.script.ScriptContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCustomGlobalScriptContextSettings(org.elasticsearch.script.ScriptContextTests)",
  "startTimestamp": 1474197398794,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.script.ScriptContextTests",
  "startTimestamp": 1474197398757,
  "executionTime": 47
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
   "children": [
    {
     "id": "ID#testIllegalValues(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testIllegalValues(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testIllegalValues",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBadAnalyzer(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testBadAnalyzer(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testBadAnalyzer",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testParseFailsWithMultipleFields(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testParseFailsWithMultipleFields",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testPhrasePrefixMatchQuery(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "displayName": "testPhrasePrefixMatchQuery(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
     "methodName": "testPhrasePrefixMatchQuery",
     "className": "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197398812
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalValues(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:38,831][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{wgVYohc4TbCGqaDP8F_9xg}{local}{local[176]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:38,839][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:38,839][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalValues(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1474197398826,
  "executionTime": 40
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1474197398866,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "message": "test runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered\r\n\tat __randomizedtesting.SeedInfo.seed([DB64F96F238DCA2A:2C9FFB51520E0FC0]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests.doCreateTestQueryBuilder(MatchPhrasePrefixQueryBuilderTests.java:46)\r\n\tat org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests.doCreateTestQueryBuilder(MatchPhrasePrefixQueryBuilderTests.java:40)\r\n\tat org.elasticsearch.test.AbstractQueryTestCase.createTestQueryBuilder(AbstractQueryTestCase.java:240)\r\n\tat org.elasticsearch.test.AbstractQueryTestCase.testToQuery(AbstractQueryTestCase.java:589)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1474197398870,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testBadAnalyzer(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBadAnalyzer(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1474197398877,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "message": "test runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered\r\n\tat __randomizedtesting.SeedInfo.seed([DB64F96F238DCA2A:FA0CCC77AA2A2AF0]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests.doCreateTestQueryBuilder(MatchPhrasePrefixQueryBuilderTests.java:46)\r\n\tat org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests.doCreateTestQueryBuilder(MatchPhrasePrefixQueryBuilderTests.java:40)\r\n\tat org.elasticsearch.test.AbstractQueryTestCase.createTestQueryBuilder(AbstractQueryTestCase.java:240)\r\n\tat org.elasticsearch.test.AbstractQueryTestCase.testFromXContent(AbstractQueryTestCase.java:273)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1474197398880,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1474197398885,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1474197398889,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "message": "test runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered\r\n\tat __randomizedtesting.SeedInfo.seed([DB64F96F238DCA2A:8FBC982704DFF7B6]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests.doCreateTestQueryBuilder(MatchPhrasePrefixQueryBuilderTests.java:46)\r\n\tat org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests.doCreateTestQueryBuilder(MatchPhrasePrefixQueryBuilderTests.java:40)\r\n\tat org.elasticsearch.test.AbstractQueryTestCase.createTestQueryBuilder(AbstractQueryTestCase.java:240)\r\n\tat org.elasticsearch.test.AbstractQueryTestCase.testSerialization(AbstractQueryTestCase.java:709)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1474197398891,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "message": "test runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered\r\n\tat __randomizedtesting.SeedInfo.seed([DB64F96F238DCA2A:AA6B81A2EC6A8305]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests.doCreateTestQueryBuilder(MatchPhrasePrefixQueryBuilderTests.java:46)\r\n\tat org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests.doCreateTestQueryBuilder(MatchPhrasePrefixQueryBuilderTests.java:40)\r\n\tat org.elasticsearch.test.AbstractQueryTestCase.createTestQueryBuilder(AbstractQueryTestCase.java:240)\r\n\tat org.elasticsearch.test.AbstractQueryTestCase.testEqualsAndHashcode(AbstractQueryTestCase.java:732)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1474197398894,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1474197398900,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1474197398902,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testPhrasePrefixMatchQuery(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPhrasePrefixMatchQuery(org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests)",
  "startTimestamp": 1474197398907,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilderTests",
  "startTimestamp": 1474197398812,
  "executionTime": 101
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
   "displayName": "org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197398921
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
  "startTimestamp": 1474197398965,
  "executionTime": 48
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
  "startTimestamp": 1474197399013,
  "executionTime": 80
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
  "startTimestamp": 1474197399095,
  "executionTime": 52
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
  "startTimestamp": 1474197398921,
  "executionTime": 234
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.VersionFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.VersionFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.VersionFieldTypeTests",
   "children": [
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.VersionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.VersionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.VersionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.VersionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.VersionFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197399160
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.VersionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
  "startTimestamp": 1474197399180,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.VersionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
  "startTimestamp": 1474197399182,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.VersionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
  "startTimestamp": 1474197399185,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.VersionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
  "startTimestamp": 1474197399188,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.VersionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
  "startTimestamp": 1474197399190,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.VersionFieldTypeTests",
  "startTimestamp": 1474197399160,
  "executionTime": 36
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.QueryDSLDocumentationTests",
   "displayName": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
   "children": [
    {
     "id": "ID#testScript(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testScript(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testScript",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testExists(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testExists(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testExists",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testGeoHashCell(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testGeoHashCell(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testGeoHashCell",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testGeoPolygon(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testGeoPolygon(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testGeoPolygon",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testHasChild(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testHasChild(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testHasChild",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testIndices(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testIndices(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testIndices",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testConstantScore(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testConstantScore(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testConstantScore",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testSpanFirst(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testSpanFirst(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testSpanFirst",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testSpanNot(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testSpanNot(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testSpanNot",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testSpanOr(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testSpanOr(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testSpanOr",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testGeoDistance(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testGeoDistance(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testGeoDistance",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testSpanTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testSpanTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testSpanTerm",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testType(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testType(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testType",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testBool(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testBool(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testBool",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testMLT(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testMLT(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testMLT",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testDisMax(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testDisMax(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testDisMax",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testSimpleQueryString(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testSimpleQueryString(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testSimpleQueryString",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testMatchAll(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testMatchAll(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testMatchAll",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testGeoBoundingBox(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testGeoBoundingBox(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testGeoBoundingBox",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testNested(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testNested(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testNested",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testMatch(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testMatch(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testMatch",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testSpanMultiTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testSpanMultiTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testSpanMultiTerm",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testGeoShape(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testGeoShape(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testGeoShape",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testMultiMatch(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testMultiMatch(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testMultiMatch",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testRange(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testRange(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testRange",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testWildcard(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testWildcard(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testWildcard",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testTerms(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testTerms(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testTerms",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testHasParent(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testHasParent(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testHasParent",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testIds(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testIds(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testIds",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testSpanNear(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testSpanNear(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testSpanNear",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testRegExp(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testRegExp(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testRegExp",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testSpanContaining(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testSpanContaining(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testSpanContaining",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testSpanWithin(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testSpanWithin(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testSpanWithin",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testFunctionScore(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testFunctionScore(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testFunctionScore",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testCommonTerms(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testCommonTerms(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testCommonTerms",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testGeoDistanceRange(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testGeoDistanceRange(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testGeoDistanceRange",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testQueryString(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testQueryString(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testQueryString",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testPrefix(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testPrefix(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testPrefix",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testTerm",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testBoosting(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testBoosting(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testBoosting",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testFuzzy(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testFuzzy(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testFuzzy",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197399205
 }
]

[
 "TEST_STARTED",
 "ID#testScript(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScript(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474197399223,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testExists(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExists(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474197399239,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGeoHashCell(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoHashCell(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474197399241,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGeoPolygon(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoPolygon(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474197399243,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHasChild(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasChild(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474197399245,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIndices(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:16:39,249][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:16:39,252][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndices(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474197399247,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testConstantScore(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConstantScore(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474197399252,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSpanFirst(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSpanFirst(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474197399255,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSpanNot(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSpanNot(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474197399257,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSpanOr(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSpanOr(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474197399260,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGeoDistance(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoDistance(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474197399262,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSpanTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSpanTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474197399265,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testType(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testType(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474197399266,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBool(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBool(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474197399268,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testMLT(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMLT(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474197399273,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDisMax(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDisMax(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474197399277,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleQueryString(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleQueryString(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474197399279,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMatchAll(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMatchAll(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474197399281,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testGeoBoundingBox(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoBoundingBox(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474197399282,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNested(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNested(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474197399284,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMatch(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMatch(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474197399286,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSpanMultiTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSpanMultiTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474197399289,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testGeoShape(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoShape(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474197399290,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMultiMatch(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiMatch(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474197399292,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRange(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRange(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474197399296,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWildcard(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWildcard(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474197399298,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTerms(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTerms(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474197399300,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHasParent(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasParent(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474197399302,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIds(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIds(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474197399304,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSpanNear(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSpanNear(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474197399306,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testRegExp(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegExp(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474197399308,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSpanContaining(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSpanContaining(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474197399309,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSpanWithin(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSpanWithin(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474197399312,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFunctionScore(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFunctionScore(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474197399314,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testCommonTerms(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCommonTerms(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474197399324,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGeoDistanceRange(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoDistanceRange(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474197399326,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testQueryString(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryString(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474197399328,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testPrefix(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrefix(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474197399330,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474197399332,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBoosting(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBoosting(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474197399334,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFuzzy(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFuzzy(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474197399338,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.QueryDSLDocumentationTests",
  "startTimestamp": 1474197399205,
  "executionTime": 137
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.plugins.PluginsServiceTests",
   "displayName": "org.elasticsearch.plugins.PluginsServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.plugins.PluginsServiceTests",
   "children": [
    {
     "id": "ID#testFilterPlugins(org.elasticsearch.plugins.PluginsServiceTests)",
     "displayName": "testFilterPlugins(org.elasticsearch.plugins.PluginsServiceTests)",
     "methodName": "testFilterPlugins",
     "className": "org.elasticsearch.plugins.PluginsServiceTests",
     "children": []
    },
    {
     "id": "ID#testOnModuleExceptionsArePropagated(org.elasticsearch.plugins.PluginsServiceTests)",
     "displayName": "testOnModuleExceptionsArePropagated(org.elasticsearch.plugins.PluginsServiceTests)",
     "methodName": "testOnModuleExceptionsArePropagated",
     "className": "org.elasticsearch.plugins.PluginsServiceTests",
     "children": []
    },
    {
     "id": "ID#testAdditionalSettingsClash(org.elasticsearch.plugins.PluginsServiceTests)",
     "displayName": "testAdditionalSettingsClash(org.elasticsearch.plugins.PluginsServiceTests)",
     "methodName": "testAdditionalSettingsClash",
     "className": "org.elasticsearch.plugins.PluginsServiceTests",
     "children": []
    },
    {
     "id": "ID#testAdditionalSettings(org.elasticsearch.plugins.PluginsServiceTests)",
     "displayName": "testAdditionalSettings(org.elasticsearch.plugins.PluginsServiceTests)",
     "methodName": "testAdditionalSettings",
     "className": "org.elasticsearch.plugins.PluginsServiceTests",
     "children": []
    },
    {
     "id": "ID#testExistingPluginMissingDescriptor(org.elasticsearch.plugins.PluginsServiceTests)",
     "displayName": "testExistingPluginMissingDescriptor(org.elasticsearch.plugins.PluginsServiceTests)",
     "methodName": "testExistingPluginMissingDescriptor",
     "className": "org.elasticsearch.plugins.PluginsServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197399351
 }
]

[
 "TEST_STARTED",
 "ID#testFilterPlugins(org.elasticsearch.plugins.PluginsServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:39,390][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:39,392][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] loaded plugin [org.elasticsearch.plugins.PluginsServiceTests$AdditionalSettingsPlugin1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:39,392][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] loaded plugin [org.elasticsearch.plugins.PluginsServiceTests$FilterablePlugin]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterPlugins(org.elasticsearch.plugins.PluginsServiceTests)",
  "startTimestamp": 1474197399382,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testOnModuleExceptionsArePropagated(org.elasticsearch.plugins.PluginsServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:39,400][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:39,400][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] loaded plugin [org.elasticsearch.plugins.PluginsServiceTests$FailOnModule]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:39,401][WARN ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] plugin java.lang.reflect.InvocationTargetException, failed to invoke custom onModule method%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOnModuleExceptionsArePropagated(org.elasticsearch.plugins.PluginsServiceTests)",
  "startTimestamp": 1474197399393,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testAdditionalSettingsClash(org.elasticsearch.plugins.PluginsServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:39,420][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:39,420][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] loaded plugin [org.elasticsearch.plugins.PluginsServiceTests$AdditionalSettingsPlugin1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:39,421][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] loaded plugin [org.elasticsearch.plugins.PluginsServiceTests$AdditionalSettingsPlugin2]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAdditionalSettingsClash(org.elasticsearch.plugins.PluginsServiceTests)",
  "startTimestamp": 1474197399402,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testAdditionalSettings(org.elasticsearch.plugins.PluginsServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:39,427][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:39,427][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] loaded plugin [org.elasticsearch.plugins.PluginsServiceTests$AdditionalSettingsPlugin1]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAdditionalSettings(org.elasticsearch.plugins.PluginsServiceTests)",
  "startTimestamp": 1474197399421,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testExistingPluginMissingDescriptor(org.elasticsearch.plugins.PluginsServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExistingPluginMissingDescriptor(org.elasticsearch.plugins.PluginsServiceTests)",
  "startTimestamp": 1474197399428,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.plugins.PluginsServiceTests",
  "startTimestamp": 1474197399351,
  "executionTime": 90
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
   "children": [
    {
     "id": "ID#testMoveShardOnceNewNodeWithAttributeAdded5(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "displayName": "testMoveShardOnceNewNodeWithAttributeAdded5(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "methodName": "testMoveShardOnceNewNodeWithAttributeAdded5",
     "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
     "children": []
    },
    {
     "id": "ID#testUnassignedShardsWithUnbalancedZones(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "displayName": "testUnassignedShardsWithUnbalancedZones(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "methodName": "testUnassignedShardsWithUnbalancedZones",
     "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
     "children": []
    },
    {
     "id": "ID#testUnbalancedZones(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "displayName": "testUnbalancedZones(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "methodName": "testUnbalancedZones",
     "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
     "children": []
    },
    {
     "id": "ID#testMoveShardOnceNewNodeWithAttributeAdded1(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "displayName": "testMoveShardOnceNewNodeWithAttributeAdded1(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "methodName": "testMoveShardOnceNewNodeWithAttributeAdded1",
     "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
     "children": []
    },
    {
     "id": "ID#testMoveShardOnceNewNodeWithAttributeAdded4(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "displayName": "testMoveShardOnceNewNodeWithAttributeAdded4(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "methodName": "testMoveShardOnceNewNodeWithAttributeAdded4",
     "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
     "children": []
    },
    {
     "id": "ID#testMoveShardOnceNewNodeWithAttributeAdded6(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "displayName": "testMoveShardOnceNewNodeWithAttributeAdded6(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "methodName": "testMoveShardOnceNewNodeWithAttributeAdded6",
     "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
     "children": []
    },
    {
     "id": "ID#testFullAwareness3(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "displayName": "testFullAwareness3(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "methodName": "testFullAwareness3",
     "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
     "children": []
    },
    {
     "id": "ID#testMoveShardOnceNewNodeWithAttributeAdded3(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "displayName": "testMoveShardOnceNewNodeWithAttributeAdded3(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "methodName": "testMoveShardOnceNewNodeWithAttributeAdded3",
     "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
     "children": []
    },
    {
     "id": "ID#testMoveShardOnceNewNodeWithAttributeAdded2(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "displayName": "testMoveShardOnceNewNodeWithAttributeAdded2(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "methodName": "testMoveShardOnceNewNodeWithAttributeAdded2",
     "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
     "children": []
    },
    {
     "id": "ID#testFullAwareness2(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "displayName": "testFullAwareness2(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "methodName": "testFullAwareness2",
     "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
     "children": []
    },
    {
     "id": "ID#testFullAwareness1(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "displayName": "testFullAwareness1(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "methodName": "testFullAwareness1",
     "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197399452
 }
]

[
 "TEST_STARTED",
 "ID#testMoveShardOnceNewNodeWithAttributeAdded5(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,475][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table for 'moveShardOnceNewNodeWithAttributeAdded5'%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,478][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes on same rack and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,487][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,488][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (replicas)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,489][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add a new node with a new rack and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,491][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,492][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,492][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,493][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add another node with a new rack, we will have another relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,494][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,494][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> make sure another reroute does not move things%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMoveShardOnceNewNodeWithAttributeAdded5(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
  "startTimestamp": 1474197399468,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testUnassignedShardsWithUnbalancedZones(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,501][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table for 'testUnassignedShardsWithUnbalancedZones'%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,501][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding 5 nodes in different zones and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,502][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shard (primary)%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnassignedShardsWithUnbalancedZones(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
  "startTimestamp": 1474197399495,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testUnbalancedZones(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,516][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table for 'testUnbalancedZones'%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,516][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes in different zones and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,517][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,519][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][1], [test][3], [test][2], [test][4], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,519][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> all replicas are allocated and started since we have on node in each zone%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,519][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add a new node in zone 'a' and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,524][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> starting initializing shards on the new node%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnbalancedZones(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
  "startTimestamp": 1474197399509,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testMoveShardOnceNewNodeWithAttributeAdded1(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,537][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table for 'moveShardOnceNewNodeWithAttributeAdded1'%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,537][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes on same rack and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,538][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,538][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (replicas)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,539][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,539][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add a new node with a new rack and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,539][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,540][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,540][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add another node with a new rack, make sure nothing moves%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMoveShardOnceNewNodeWithAttributeAdded1(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
  "startTimestamp": 1474197399530,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testMoveShardOnceNewNodeWithAttributeAdded4(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,547][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table for 'moveShardOnceNewNodeWithAttributeAdded4'%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,547][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes on same rack and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,549][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,550][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (replicas)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,551][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][1], [test2][3], [test1][2], [test1][4], [test1][0], [test2][2], [test2][4], [test2][0], [test1][1], [test1][3]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,551][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add a new node with a new rack and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,553][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,553][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete initializing round: [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,557][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete initializing round: [1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,560][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,561][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add another node with a new rack, some more relocation should happen%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,569][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,570][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete initializing round: [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,575][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete initializing round: [1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,576][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMoveShardOnceNewNodeWithAttributeAdded4(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
  "startTimestamp": 1474197399541,
  "executionTime": 36
 }
]

[
 "TEST_STARTED",
 "ID#testMoveShardOnceNewNodeWithAttributeAdded6(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,583][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table for 'moveShardOnceNewNodeWithAttributeAdded6'%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,583][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes on same rack and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,584][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,585][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (replicas)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,585][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0], [test][0], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,586][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add a new node with a new rack and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,586][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,587][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,588][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add another node with a new rack, we will have another relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,588][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,589][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> make sure another reroute does not move things%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMoveShardOnceNewNodeWithAttributeAdded6(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
  "startTimestamp": 1474197399577,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testFullAwareness3(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,596][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table for 'fullAwareness3'%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,596][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes on same rack and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,598][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,599][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add a new node with a new rack and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,600][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,601][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][2], [test2][1], [test2][3], [test2][4], [test2][0], [test1][1], [test1][3], [test1][2], [test1][4], [test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,601][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> run it again, since we still might have relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,601][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,602][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add another node with a new rack, some more relocation should happen%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,603][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,604][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFullAwareness3(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
  "startTimestamp": 1474197399590,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testMoveShardOnceNewNodeWithAttributeAdded3(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,611][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table for 'moveShardOnceNewNodeWithAttributeAdded3'%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,611][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes on same rack and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,615][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Initializing shards: [[test][2], node[node2], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=OGuBkIxsTkC_hD1wT_Oz8A], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T11:16:39.611Z], delayed=false, allocation_status[no_attempt]], [test][4], node[node2], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=MCuJTJNJRs-naB2yMHBrfA], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T11:16:39.611Z], delayed=false, allocation_status[no_attempt]], [test][0], node[node2], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=uavb_EVGS9GE-VD67NZVFA], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T11:16:39.611Z], delayed=false, allocation_status[no_attempt]], [test][1], node[node1], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=ZfN7Mg2nTw2zbLtee5AIGA], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T11:16:39.611Z], delayed=false, allocation_status[no_attempt]], [test][3], node[node1], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=bkP6bgKmQuOHfPB-LvXWDA], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T11:16:39.611Z], delayed=false, allocation_status[no_attempt]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,617][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Started shards: []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,617][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Relocating shards: []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,617][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Unassigned shards: [[test][2], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T11:16:39.611Z], delayed=false, allocation_status[no_attempt]], [test][1], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T11:16:39.611Z], delayed=false, allocation_status[no_attempt]], [test][3], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T11:16:39.611Z], delayed=false, allocation_status[no_attempt]], [test][4], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T11:16:39.611Z], delayed=false, allocation_status[no_attempt]], [test][0], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T11:16:39.611Z], delayed=false, allocation_status[no_attempt]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,617][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,618][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (replicas)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,619][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][1], [test][3], [test][2], [test][4], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,619][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add a new node with a new rack and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,620][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,624][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> run it again, since we still might have relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,625][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,625][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add another node with a new rack, some more relocation should happen%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,626][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,629][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMoveShardOnceNewNodeWithAttributeAdded3(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
  "startTimestamp": 1474197399605,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testMoveShardOnceNewNodeWithAttributeAdded2(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,636][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table for 'moveShardOnceNewNodeWithAttributeAdded2'%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,640][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes on same rack and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,640][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,641][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (replicas)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,642][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,642][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add a new node with a new rack and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,642][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,648][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,648][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add another node with a new rack, make sure nothing moves%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMoveShardOnceNewNodeWithAttributeAdded2(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
  "startTimestamp": 1474197399629,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testFullAwareness2(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,658][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table for 'fullAwareness2'%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,658][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes on same rack and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,659][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,659][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> replica will not start because we have only one rack value%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,660][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add a new node with a new rack and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,660][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,661][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,661][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,661][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add another node with a new rack, make sure nothing moves%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFullAwareness2(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
  "startTimestamp": 1474197399649,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testFullAwareness1(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,668][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table for 'fullAwareness1'%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,668][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes on same rack and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,669][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,669][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> replica will not start because we have only one rack value%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,669][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add a new node with a new rack and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,670][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,670][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,670][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:16:39,670][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add another node with a new rack, make sure nothing moves%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFullAwareness1(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
  "startTimestamp": 1474197399661,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
  "startTimestamp": 1474197399452,
  "executionTime": 221
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
   "children": [
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueFormat(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "displayName": "testValueFormat(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "methodName": "testValueFormat",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "displayName": "testValueForSearch(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "methodName": "testValueForSearch",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "displayName": "testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "methodName": "testIsFieldWithinQuery",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testIsFieldWithinQueryEmptyReader(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "displayName": "testIsFieldWithinQueryEmptyReader(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "methodName": "testIsFieldWithinQueryEmptyReader",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197399680
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
  "startTimestamp": 1474197399694,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValueFormat(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueFormat(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
  "startTimestamp": 1474197399696,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
  "startTimestamp": 1474197399699,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
  "startTimestamp": 1474197399701,
  "executionTime": 123
 }
]

[
 "TEST_STARTED",
 "ID#testIsFieldWithinQueryEmptyReader(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsFieldWithinQueryEmptyReader(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
  "startTimestamp": 1474197399824,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
  "startTimestamp": 1474197399826,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
  "startTimestamp": 1474197399828,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
  "startTimestamp": 1474197399831,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.LegacyDateFieldTypeTests)",
  "startTimestamp": 1474197399833,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.LegacyDateFieldTypeTests",
  "startTimestamp": 1474197399680,
  "executionTime": 156
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests",
   "displayName": "org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests",
   "methodName": null,
   "className": "org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests",
   "children": [
    {
     "id": "ID#testRemovingNonExistentNodes(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)",
     "displayName": "testRemovingNonExistentNodes(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)",
     "methodName": "testRemovingNonExistentNodes",
     "className": "org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests",
     "children": []
    },
    {
     "id": "ID#testNotEnoughMasterNodesAfterRemove(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)",
     "displayName": "testNotEnoughMasterNodesAfterRemove(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)",
     "methodName": "testNotEnoughMasterNodesAfterRemove",
     "className": "org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests",
     "children": []
    },
    {
     "id": "ID#testRerouteAfterRemovingNodes(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)",
     "displayName": "testRerouteAfterRemovingNodes(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)",
     "methodName": "testRerouteAfterRemovingNodes",
     "className": "org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197399848
 }
]

[
 "TEST_STARTED",
 "ID#testRemovingNonExistentNodes(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemovingNonExistentNodes(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)",
  "startTimestamp": 1474197399863,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNotEnoughMasterNodesAfterRemove(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotEnoughMasterNodesAfterRemove(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)",
  "startTimestamp": 1474197399866,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testRerouteAfterRemovingNodes(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRerouteAfterRemovingNodes(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)",
  "startTimestamp": 1474197399884,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests",
  "startTimestamp": 1474197399848,
  "executionTime": 46
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.stats.IndicesStatsTests",
   "displayName": "org.elasticsearch.action.admin.indices.stats.IndicesStatsTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.stats.IndicesStatsTests",
   "children": [
    {
     "id": "ID#testSegmentStats(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)",
     "displayName": "testSegmentStats(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)",
     "methodName": "testSegmentStats",
     "className": "org.elasticsearch.action.admin.indices.stats.IndicesStatsTests",
     "children": []
    },
    {
     "id": "ID#testCommitStats(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)",
     "displayName": "testCommitStats(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)",
     "methodName": "testCommitStats",
     "className": "org.elasticsearch.action.admin.indices.stats.IndicesStatsTests",
     "children": []
    },
    {
     "id": "ID#testSegmentStatsEmptyIndex(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)",
     "displayName": "testSegmentStatsEmptyIndex(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)",
     "methodName": "testSegmentStatsEmptyIndex",
     "className": "org.elasticsearch.action.admin.indices.stats.IndicesStatsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197399901
 }
]

[
 "TEST_STARTED",
 "ID#testSegmentStats(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:39,944][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:39,969][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:39,969][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:39,973][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[564], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:39,976][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:39,976][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:40,096][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:40,097][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:40,097][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[83]}, bound_addresses {local[83]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:40,098][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{VVS9bW1mTtyleCWpoPIDNw}{gsAqa8eITDa2xcNYrl2LYQ}{local}{local[83]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:40,098][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:40,110][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:40,129][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [doc]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:40,180][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:40,724][INFO ][org.elasticsearch.action.admin.indices.stats] [node_s_0] [IndicesStatsTests#testSegmentStats]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSegmentStats(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)",
  "startTimestamp": 1474197399918,
  "executionTime": 919
 }
]

[
 "TEST_STARTED",
 "ID#testCommitStats(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:40,844][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:40,889][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:40,904][INFO ][org.elasticsearch.action.admin.indices.stats] [node_s_0] [IndicesStatsTests#testCommitStats]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCommitStats(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)",
  "startTimestamp": 1474197400837,
  "executionTime": 159
 }
]

[
 "TEST_STARTED",
 "ID#testSegmentStatsEmptyIndex(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:41,003][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:41,061][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:41,089][INFO ][org.elasticsearch.action.admin.indices.stats] [node_s_0] [IndicesStatsTests#testSegmentStatsEmptyIndex]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSegmentStatsEmptyIndex(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)",
  "startTimestamp": 1474197400996,
  "executionTime": 151
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:41,147][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:41,148][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:41,148][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:41,149][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.stats.IndicesStatsTests",
  "startTimestamp": 1474197399901,
  "executionTime": 1347
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.fetch.subphase.NestedChildrenFilterTests",
   "displayName": "org.elasticsearch.search.fetch.subphase.NestedChildrenFilterTests",
   "methodName": null,
   "className": "org.elasticsearch.search.fetch.subphase.NestedChildrenFilterTests",
   "children": [
    {
     "id": "ID#testNestedChildrenFilter(org.elasticsearch.search.fetch.subphase.NestedChildrenFilterTests)",
     "displayName": "testNestedChildrenFilter(org.elasticsearch.search.fetch.subphase.NestedChildrenFilterTests)",
     "methodName": "testNestedChildrenFilter",
     "className": "org.elasticsearch.search.fetch.subphase.NestedChildrenFilterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197401263
 }
]

[
 "TEST_STARTED",
 "ID#testNestedChildrenFilter(org.elasticsearch.search.fetch.subphase.NestedChildrenFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedChildrenFilter(org.elasticsearch.search.fetch.subphase.NestedChildrenFilterTests)",
  "startTimestamp": 1474197401277,
  "executionTime": 23
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.fetch.subphase.NestedChildrenFilterTests",
  "startTimestamp": 1474197401263,
  "executionTime": 39
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.PathMapperTests",
   "displayName": "org.elasticsearch.index.mapper.PathMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.PathMapperTests",
   "children": [
    {
     "id": "ID#testPathMapping(org.elasticsearch.index.mapper.PathMapperTests)",
     "displayName": "testPathMapping(org.elasticsearch.index.mapper.PathMapperTests)",
     "methodName": "testPathMapping",
     "className": "org.elasticsearch.index.mapper.PathMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197401306
 }
]

[
 "TEST_STARTED",
 "ID#testPathMapping(org.elasticsearch.index.mapper.PathMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:16:41,331][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:16:41,356][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:16:41,356][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:16:41,360][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[564], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:16:41,362][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:16:41,362][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:16:41,477][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:16:41,477][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:16:41,478][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[84]}, bound_addresses {local[84]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:16:41,489][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{gPathrMBQGmWkhKOcu3A2w}{-qDN8TWcTQWSzLrQup0_Vg}{local}{local[84]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:16:41,490][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:16:41,502][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:16:41,552][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:16:41,592][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:16:41,605][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [PathMapperTests#testPathMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPathMapping(org.elasticsearch.index.mapper.PathMapperTests)",
  "startTimestamp": 1474197401321,
  "executionTime": 339
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:16:41,661][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:16:41,661][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:16:41,662][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:16:41,663][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.PathMapperTests",
  "startTimestamp": 1474197401306,
  "executionTime": 363
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.BooleansTests",
   "displayName": "org.elasticsearch.common.BooleansTests",
   "methodName": null,
   "className": "org.elasticsearch.common.BooleansTests",
   "children": [
    {
     "id": "ID#testIsExplicit(org.elasticsearch.common.BooleansTests)",
     "displayName": "testIsExplicit(org.elasticsearch.common.BooleansTests)",
     "methodName": "testIsExplicit",
     "className": "org.elasticsearch.common.BooleansTests",
     "children": []
    },
    {
     "id": "ID#testParseBooleanExact(org.elasticsearch.common.BooleansTests)",
     "displayName": "testParseBooleanExact(org.elasticsearch.common.BooleansTests)",
     "methodName": "testParseBooleanExact",
     "className": "org.elasticsearch.common.BooleansTests",
     "children": []
    },
    {
     "id": "ID#testParseBoolean(org.elasticsearch.common.BooleansTests)",
     "displayName": "testParseBoolean(org.elasticsearch.common.BooleansTests)",
     "methodName": "testParseBoolean",
     "className": "org.elasticsearch.common.BooleansTests",
     "children": []
    },
    {
     "id": "ID#testIsBoolean(org.elasticsearch.common.BooleansTests)",
     "displayName": "testIsBoolean(org.elasticsearch.common.BooleansTests)",
     "methodName": "testIsBoolean",
     "className": "org.elasticsearch.common.BooleansTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197401676
 }
]

[
 "TEST_STARTED",
 "ID#testIsExplicit(org.elasticsearch.common.BooleansTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsExplicit(org.elasticsearch.common.BooleansTests)",
  "startTimestamp": 1474197401706,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseBooleanExact(org.elasticsearch.common.BooleansTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseBooleanExact(org.elasticsearch.common.BooleansTests)",
  "startTimestamp": 1474197401708,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseBoolean(org.elasticsearch.common.BooleansTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseBoolean(org.elasticsearch.common.BooleansTests)",
  "startTimestamp": 1474197401710,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsBoolean(org.elasticsearch.common.BooleansTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsBoolean(org.elasticsearch.common.BooleansTests)",
  "startTimestamp": 1474197401712,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.BooleansTests",
  "startTimestamp": 1474197401676,
  "executionTime": 40
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests",
     "children": []
    },
    {
     "id": "ID#testPercentsFromMixedArray(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
     "displayName": "testPercentsFromMixedArray(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
     "methodName": "testPercentsFromMixedArray",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197401721
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:41,745][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{tzSsooIDQfKd91Ff0jhiLA}{local}{local[250]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:41,803][INFO ][org.elasticsearch.search.aggregations.pipeline.bucketmetrics] Content string: {%0A  \"QNDRwluEeQpPJBqAbN\" : {%0A    \"percentiles_bucket\" : {%0A      \"buckets_path\" : [%0A        \"OSGUpRuf\"%0A      ],%0A      \"format\" : \"H\",%0A      \"gap_policy\" : \"skip\",%0A      \"percents\" : [%0A        1.0,%0A        5.0,%0A        25.0,%0A        50.0,%0A        75.0,%0A        95.0,%0A        99.0%0A      ]%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:41,804][INFO ][org.elasticsearch.search.aggregations.pipeline.bucketmetrics] Content string: {%0A  \"QNDRwluEeQpPJBqAbN\" : {%0A    \"percentiles_bucket\" : {%0A      \"buckets_path\" : [%0A        \"OSGUpRuf\"%0A      ],%0A      \"format\" : \"H\",%0A      \"gap_policy\" : \"skip\",%0A      \"percents\" : [%0A        1.0,%0A        5.0,%0A        25.0,%0A        50.0,%0A        75.0,%0A        95.0,%0A        99.0%0A      ]%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
  "startTimestamp": 1474197401801,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testPercentsFromMixedArray(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPercentsFromMixedArray(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
  "startTimestamp": 1474197401821,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
  "startTimestamp": 1474197401823,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
  "startTimestamp": 1474197401825,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests",
  "startTimestamp": 1474197401721,
  "executionTime": 112
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.StringMappingUpgradeTests",
   "displayName": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
   "children": [
    {
     "id": "ID#testUpgradeNotIndexedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeNotIndexedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeNotIndexedString",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeRandomMapping(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeRandomMapping(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeRandomMapping",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeFielddataSettings(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeFielddataSettings(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeFielddataSettings",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeIgnoreAbove(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeIgnoreAbove(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeIgnoreAbove",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeTemplateWithDynamicType(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeTemplateWithDynamicType(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeTemplateWithDynamicType",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeIndexOptions(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeIndexOptions(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeIndexOptions",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeDefaults(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeDefaults(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeDefaults",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeNotAnalyzedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeNotAnalyzedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeNotAnalyzedString",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeTextIncludeInAll(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeTextIncludeInAll(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeTextIncludeInAll",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeKeywordIncludeInAll(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeKeywordIncludeInAll(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeKeywordIncludeInAll",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeAnalyzer(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeAnalyzer(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeAnalyzer",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testNotSupportedUpgrade(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testNotSupportedUpgrade(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testNotSupportedUpgrade",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeTemplateWithDynamicTypeKeyword2(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeTemplateWithDynamicTypeKeyword2(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeTemplateWithDynamicTypeKeyword2",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeAnalyzedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeAnalyzedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeAnalyzedString",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeTemplateWithDynamicTypeKeyword(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeTemplateWithDynamicTypeKeyword(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeTemplateWithDynamicTypeKeyword",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testIllegalIndexValue(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testIllegalIndexValue(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testIllegalIndexValue",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeTemplateWithDynamicType2(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeTemplateWithDynamicType2(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeTemplateWithDynamicType2",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradePositionGap(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradePositionGap(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradePositionGap",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197401841
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeNotIndexedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:41,868][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:41,894][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:41,895][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:41,898][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[564], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:41,902][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:41,902][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:42,031][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:42,032][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:42,032][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[85]}, bound_addresses {local[85]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:42,044][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{1KA8hEf0TcuMSeUg86Ub2Q}{XmiDi5Q9QV2zGdWz-MLBIA}{local}{local[85]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:42,044][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:42,069][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:42,094][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:42,173][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:42,194][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:42,194][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeNotIndexedString]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeNotIndexedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474197401860,
  "executionTime": 361
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeRandomMapping(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:42,227][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test0] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:42,345][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test0][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:42,391][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test0] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:42,395][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:42,463][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:42,481][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:42,792][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:42,845][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test2] [omit_norms] is deprecated, please use [norms] instead with the opposite boolean value%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:42,850][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test3] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:42,943][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test3][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:42,974][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test4] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:43,108][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test4][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:43,122][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test4] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:43,125][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test5] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:43,414][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test5][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:43,503][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test6] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:43,672][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test6][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:43,778][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test6] [omit_norms] is deprecated, please use [norms] instead with the opposite boolean value%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:43,795][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test7] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:43,964][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test7][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:43,995][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test7] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:44,001][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test8] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:44,087][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test8][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:44,104][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test9] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:44,298][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test9][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:44,312][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test9] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:44,316][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test10] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:44,369][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test10][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:44,433][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test10] Expected a boolean for property [store] but got [yes]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:44,441][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test11] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:44,529][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test11][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:44,555][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test11] Expected a boolean for property [store] but got [no]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:44,555][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test11] [omit_norms] is deprecated, please use [norms] instead with the opposite boolean value%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:44,559][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test12] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:44,627][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test12][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:44,658][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test13] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:44,719][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test13][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:44,735][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test13] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:44,735][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test13] Expected a boolean for property [store] but got [yes]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:44,740][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test14] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:44,820][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test14][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:44,834][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test14] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:44,850][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test15] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:44,921][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test15][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:44,934][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test15] Expected a boolean for property [store] but got [yes]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:44,938][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test16] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:45,016][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test16][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:45,043][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test16] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:45,048][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test17] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:45,127][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test17][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:45,144][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test17] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:45,145][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test17] Expected a boolean for property [store] but got [no]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:45,148][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test18] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:45,200][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test18][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:45,239][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test18] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:45,243][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test19] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:45,309][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test19][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:45,323][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test19] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:45,324][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test19] [StringMappingUpgradeTests#testUpgradeRandomMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeRandomMapping(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474197402221,
  "executionTime": 4050
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeFielddataSettings(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:46,279][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:46,325][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:46,338][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:46,339][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeFielddataSettings]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeFielddataSettings(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474197406271,
  "executionTime": 109
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeIgnoreAbove(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:46,386][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:46,444][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:46,464][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:46,464][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeIgnoreAbove]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeIgnoreAbove(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474197406380,
  "executionTime": 120
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeTemplateWithDynamicType(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:46,506][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:46,555][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:46,567][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeTemplateWithDynamicType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeTemplateWithDynamicType(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474197406500,
  "executionTime": 110
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeIndexOptions(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:46,616][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:46,789][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:46,807][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:46,811][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeIndexOptions]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeIndexOptions(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474197406610,
  "executionTime": 226
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeDefaults(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:46,842][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:46,918][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:46,943][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:46,944][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeDefaults]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeDefaults(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474197406836,
  "executionTime": 132
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeNotAnalyzedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:46,974][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:47,039][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:47,055][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:47,056][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeNotAnalyzedString]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeNotAnalyzedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474197406968,
  "executionTime": 112
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeTextIncludeInAll(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:47,086][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:47,242][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:47,257][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:47,258][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeTextIncludeInAll]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeTextIncludeInAll(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474197407080,
  "executionTime": 228
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeKeywordIncludeInAll(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:47,314][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:47,390][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:47,403][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:47,403][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeKeywordIncludeInAll]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeKeywordIncludeInAll(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474197407308,
  "executionTime": 131
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeAnalyzer(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:47,445][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:47,510][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:47,522][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:47,523][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeAnalyzer]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeAnalyzer(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474197407439,
  "executionTime": 109
 }
]

[
 "TEST_STARTED",
 "ID#testNotSupportedUpgrade(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:47,554][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:47,607][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:47,620][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testNotSupportedUpgrade]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotSupportedUpgrade(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474197407548,
  "executionTime": 98
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeTemplateWithDynamicTypeKeyword2(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:47,652][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:47,752][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:47,765][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] Expected a boolean for property [index] but got [not_analyzed]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:47,765][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeTemplateWithDynamicTypeKeyword2]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeTemplateWithDynamicTypeKeyword2(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474197407646,
  "executionTime": 163
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeAnalyzedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:47,815][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:47,869][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:47,899][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:47,903][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeAnalyzedString]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeAnalyzedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474197407809,
  "executionTime": 152
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeTemplateWithDynamicTypeKeyword(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:47,968][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:48,088][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:48,137][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] Expected a boolean for property [index] but got [not_analyzed]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:48,137][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeTemplateWithDynamicTypeKeyword]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeTemplateWithDynamicTypeKeyword(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474197407961,
  "executionTime": 245
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalIndexValue(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:48,216][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:48,305][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:48,335][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testIllegalIndexValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalIndexValue(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474197408206,
  "executionTime": 155
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeTemplateWithDynamicType2(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:48,369][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:48,550][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:48,589][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeTemplateWithDynamicType2]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeTemplateWithDynamicType2(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474197408361,
  "executionTime": 347
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradePositionGap(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:48,714][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:48,858][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:48,874][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:48,875][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradePositionGap]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradePositionGap(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474197408708,
  "executionTime": 197
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:48,905][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:48,905][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:48,906][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:16:48,907][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.StringMappingUpgradeTests",
  "startTimestamp": 1474197401841,
  "executionTime": 7075
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.search.geo.GeoUtilsTests",
   "displayName": "org.elasticsearch.index.search.geo.GeoUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
   "children": [
    {
     "id": "ID#testNormalizeLatEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLatEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLatEdgeCases",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testQuadTreeCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testQuadTreeCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testQuadTreeCellWidth",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testQuadTreeCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testQuadTreeCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testQuadTreeCellSize",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLatHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLatHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLatHuge",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointLatNoLon(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointLatNoLon(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointLatNoLon",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPoint(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPoint(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPoint",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointGeohashWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointGeohashWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointGeohashWrongType",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizePointEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizePointEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizePointEdgeCases",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointLonLatGeoHash(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointLonLatGeoHash(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointLonLatGeoHash",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizePointHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizePointHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizePointHuge",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointGeohash(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointGeohash(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointGeohash",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLonInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLonInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLonInNormalRange",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testGeohashCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testGeohashCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testGeohashCellHeight",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testGeoHashLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testGeoHashLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testGeoHashLevelsForPrecision",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testGeohashCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testGeohashCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testGeohashCellSize",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointExtraField(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointExtraField(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointExtraField",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLatOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLatOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLatOutsideNormalRange",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testQuadTreeCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testQuadTreeCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testQuadTreeCellHeight",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizePointInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizePointInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizePointInNormalRange",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testQuadTreeLevelsForPrecisionString(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testQuadTreeLevelsForPrecisionString(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testQuadTreeLevelsForPrecisionString",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointLonNoLat(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointLonNoLat(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointLonNoLat",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testPrefixTreeCellSizes(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testPrefixTreeCellSizes(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testPrefixTreeCellSizes",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testQuadTreeLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testQuadTreeLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testQuadTreeLevelsForPrecision",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointArrayTooManyValues(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointArrayTooManyValues(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointArrayTooManyValues",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointInvalidType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointInvalidType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointInvalidType",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLonOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLonOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLonOutsideNormalRange",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testGeoHashLevelsForPrecision_String(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testGeoHashLevelsForPrecision_String(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testGeoHashLevelsForPrecision_String",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizePointOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizePointOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizePointOutsideNormalRange",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLonHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLonHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLonHuge",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLatInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLatInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLatInNormalRange",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testGeohashCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testGeohashCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testGeohashCellWidth",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointArrayWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointArrayWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointArrayWrongType",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLonEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLonEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLonEdgeCases",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizePointOutsideNormalRange_withOptions(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizePointOutsideNormalRange_withOptions(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizePointOutsideNormalRange_withOptions",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointLatWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointLatWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointLatWrongType",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointLonWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointLonWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointLonWrongType",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197408927
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLatEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLatEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474197408971,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testQuadTreeCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQuadTreeCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474197408975,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQuadTreeCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQuadTreeCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474197408978,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLatHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLatHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474197408980,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointLatNoLon(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointLatNoLon(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474197408982,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPoint(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPoint(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474197408985,
  "executionTime": 40
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointGeohashWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointGeohashWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474197409026,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizePointEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizePointEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474197409028,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointLonLatGeoHash(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointLonLatGeoHash(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474197409030,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizePointHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizePointHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474197409032,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointGeohash(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointGeohash(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474197409034,
  "executionTime": 36
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLonInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLonInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474197409070,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGeohashCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeohashCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474197409073,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testGeoHashLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoHashLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474197409074,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testGeohashCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeohashCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474197409083,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointExtraField(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointExtraField(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474197409084,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLatOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLatOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474197409087,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testQuadTreeCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQuadTreeCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474197409089,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizePointInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizePointInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474197409091,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testQuadTreeLevelsForPrecisionString(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQuadTreeLevelsForPrecisionString(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474197409119,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointLonNoLat(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointLonNoLat(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474197409122,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testPrefixTreeCellSizes(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrefixTreeCellSizes(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474197409123,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testQuadTreeLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQuadTreeLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474197409135,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointArrayTooManyValues(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointArrayTooManyValues(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474197409137,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointInvalidType(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointInvalidType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474197409140,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLonOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLonOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474197409142,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGeoHashLevelsForPrecision_String(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoHashLevelsForPrecision_String(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474197409144,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizePointOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizePointOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474197409156,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLonHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLonHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474197409164,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLatInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLatInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474197409167,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGeohashCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeohashCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474197409169,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointArrayWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointArrayWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474197409181,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLonEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLonEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474197409183,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizePointOutsideNormalRange_withOptions(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizePointOutsideNormalRange_withOptions(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474197409185,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointLatWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointLatWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474197409188,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointLonWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointLonWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1474197409190,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.search.geo.GeoUtilsTests",
  "startTimestamp": 1474197408927,
  "executionTime": 267
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.ingest.SimulateDocumentSimpleResultTests",
   "displayName": "org.elasticsearch.action.ingest.SimulateDocumentSimpleResultTests",
   "methodName": null,
   "className": "org.elasticsearch.action.ingest.SimulateDocumentSimpleResultTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.action.ingest.SimulateDocumentSimpleResultTests)",
     "displayName": "testSerialization(org.elasticsearch.action.ingest.SimulateDocumentSimpleResultTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.action.ingest.SimulateDocumentSimpleResultTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197409199
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.action.ingest.SimulateDocumentSimpleResultTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.action.ingest.SimulateDocumentSimpleResultTests)",
  "startTimestamp": 1474197409253,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.ingest.SimulateDocumentSimpleResultTests",
  "startTimestamp": 1474197409199,
  "executionTime": 62
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.PidFileTests",
   "displayName": "org.elasticsearch.common.PidFileTests",
   "methodName": null,
   "className": "org.elasticsearch.common.PidFileTests",
   "children": [
    {
     "id": "ID#testPidFile(org.elasticsearch.common.PidFileTests)",
     "displayName": "testPidFile(org.elasticsearch.common.PidFileTests)",
     "methodName": "testPidFile",
     "className": "org.elasticsearch.common.PidFileTests",
     "children": []
    },
    {
     "id": "ID#testParentIsFile(org.elasticsearch.common.PidFileTests)",
     "displayName": "testParentIsFile(org.elasticsearch.common.PidFileTests)",
     "methodName": "testParentIsFile",
     "className": "org.elasticsearch.common.PidFileTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197409267
 }
]

[
 "TEST_STARTED",
 "ID#testPidFile(org.elasticsearch.common.PidFileTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPidFile(org.elasticsearch.common.PidFileTests)",
  "startTimestamp": 1474197409321,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testParentIsFile(org.elasticsearch.common.PidFileTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParentIsFile(org.elasticsearch.common.PidFileTests)",
  "startTimestamp": 1474197409342,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.PidFileTests",
  "startTimestamp": 1474197409267,
  "executionTime": 85
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.service.ClusterServiceTests",
   "displayName": "org.elasticsearch.cluster.service.ClusterServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.service.ClusterServiceTests",
   "children": [
    {
     "id": "ID#testClusterStateUpdateLogging(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "displayName": "testClusterStateUpdateLogging(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "methodName": "testClusterStateUpdateLogging",
     "className": "org.elasticsearch.cluster.service.ClusterServiceTests",
     "children": []
    },
    {
     "id": "ID#testClusterStateTaskListenerThrowingExceptionIsOkay(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "displayName": "testClusterStateTaskListenerThrowingExceptionIsOkay(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "methodName": "testClusterStateTaskListenerThrowingExceptionIsOkay",
     "className": "org.elasticsearch.cluster.service.ClusterServiceTests",
     "children": []
    },
    {
     "id": "ID#testClusterStateUpdateTasksAreExecutedInOrder(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "displayName": "testClusterStateUpdateTasksAreExecutedInOrder(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "methodName": "testClusterStateUpdateTasksAreExecutedInOrder",
     "className": "org.elasticsearch.cluster.service.ClusterServiceTests",
     "children": []
    },
    {
     "id": "ID#testTimeoutUpdateTask(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "displayName": "testTimeoutUpdateTask(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "methodName": "testTimeoutUpdateTask",
     "className": "org.elasticsearch.cluster.service.ClusterServiceTests",
     "children": []
    },
    {
     "id": "ID#testLongClusterStateUpdateLogging(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "displayName": "testLongClusterStateUpdateLogging(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "methodName": "testLongClusterStateUpdateLogging",
     "className": "org.elasticsearch.cluster.service.ClusterServiceTests",
     "children": []
    },
    {
     "id": "ID#testDuplicateSubmission(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "displayName": "testDuplicateSubmission(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "methodName": "testDuplicateSubmission",
     "className": "org.elasticsearch.cluster.service.ClusterServiceTests",
     "children": []
    },
    {
     "id": "ID#testMasterAwareExecution(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "displayName": "testMasterAwareExecution(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "methodName": "testMasterAwareExecution",
     "className": "org.elasticsearch.cluster.service.ClusterServiceTests",
     "children": []
    },
    {
     "id": "ID#testClusterStateBatchedUpdates(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "displayName": "testClusterStateBatchedUpdates(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "methodName": "testClusterStateBatchedUpdates",
     "className": "org.elasticsearch.cluster.service.ClusterServiceTests",
     "children": []
    },
    {
     "id": "ID#testSingleBatchSubmission(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "displayName": "testSingleBatchSubmission(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "methodName": "testSingleBatchSubmission",
     "className": "org.elasticsearch.cluster.service.ClusterServiceTests",
     "children": []
    },
    {
     "id": "ID#testPrioritizedTasks(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "displayName": "testPrioritizedTasks(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "methodName": "testPrioritizedTasks",
     "className": "org.elasticsearch.cluster.service.ClusterServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197409393
 }
]

[
 "TEST_STARTED",
 "ID#testClusterStateUpdateLogging(org.elasticsearch.cluster.service.ClusterServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,428][TRACE][org.elasticsearch.cluster.service] [node_s_0] will process [test setting state]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,431][DEBUG][org.elasticsearch.cluster.service] [node_s_0] processing [test setting state]: execute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,431][TRACE][org.elasticsearch.cluster.service] [node_s_0] cluster state updated, source [test setting state]%0Acluster uuid: _na_%0Aversion: 2%0Astate uuid: 56oZ5g1KRuSadEFE-CLywA%0Afrom_diff: false%0Ameta data version: 0%0Anodes: %0A   {node1}{gmK8C9-URXmcX6TH7hlD1g}{local}{local[251]}, local, master%0Arouting_table (version 0):%0Arouting_nodes:%0A---- unassigned%0A%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,431][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node1}{gmK8C9-URXmcX6TH7hlD1g}{local}{local[251]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,431][DEBUG][org.elasticsearch.cluster.service] [node_s_0] publishing cluster state version [2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,431][DEBUG][org.elasticsearch.cluster.service] [node_s_0] set local cluster state to version 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,431][DEBUG][org.elasticsearch.cluster.service] [node_s_0] processing [test setting state]: took [0s] done applying updated cluster_state (version: 2, uuid: 56oZ5g1KRuSadEFE-CLywA)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,442][TRACE][org.elasticsearch.cluster.service] [node_s_0] will process [test1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 11:16:49,443 elasticsearch[clusterService#updateTask][T#1] ERROR Attempted to append to non-started appender mock"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,445][DEBUG][org.elasticsearch.cluster.service] [node_s_0] processing [test1]: execute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 11:16:49,445 elasticsearch[clusterService#updateTask][T#1] ERROR Attempted to append to non-started appender mock"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,446][DEBUG][org.elasticsearch.cluster.service] [node_s_0] processing [test1]: took [1s] no change in cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 11:16:49,446 elasticsearch[clusterService#updateTask][T#1] ERROR Attempted to append to non-started appender mock"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,446][TRACE][org.elasticsearch.cluster.service] [node_s_0] will process [test2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 11:16:49,446 elasticsearch[clusterService#updateTask][T#1] ERROR Attempted to append to non-started appender mock"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,446][DEBUG][org.elasticsearch.cluster.service] [node_s_0] processing [test2]: execute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,447][TRACE][org.elasticsearch.cluster.service] failed to execute cluster state update in [2s], state:%0Aversion [2], source [test2]%0Anodes: %0A   {node1}{gmK8C9-URXmcX6TH7hlD1g}{local}{local[251]}, local, master%0Arouting_table (version 0):%0Arouting_nodes:%0A---- unassigned%0A%0D%0Ajava.lang.IllegalArgumentException: Testing handling of exceptions in the cluster state task%0A%09at org.elasticsearch.cluster.service.ClusterServiceTests$14.execute(ClusterServiceTests.java:716) ~[test/:?]%0A%09at org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:45) ~[main/:?]%0A%09at org.elasticsearch.cluster.service.ClusterService.runTasksForExecutor(ClusterService.java:555) [main/:?]%0A%09at org.elasticsearch.cluster.service.ClusterService$UpdateTask.run(ClusterService.java:894) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:444) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:237) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:200) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,450][DEBUG][org.elasticsearch.cluster.service] cluster state update task [test2] failed%0D%0Ajava.lang.IllegalArgumentException: Testing handling of exceptions in the cluster state task%0A%09at org.elasticsearch.cluster.service.ClusterServiceTests$14.execute(ClusterServiceTests.java:716) ~[test/:?]%0A%09at org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:45) ~[main/:?]%0A%09at org.elasticsearch.cluster.service.ClusterService.runTasksForExecutor(ClusterService.java:555) [main/:?]%0A%09at org.elasticsearch.cluster.service.ClusterService$UpdateTask.run(ClusterService.java:894) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:444) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:237) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:200) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,451][DEBUG][org.elasticsearch.cluster.service] [node_s_0] processing [test2]: took [2s] no change in cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,451][TRACE][org.elasticsearch.cluster.service] [node_s_0] will process [test3]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,451][DEBUG][org.elasticsearch.cluster.service] [node_s_0] processing [test3]: execute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,451][TRACE][org.elasticsearch.cluster.service] [node_s_0] cluster state updated, source [test3]%0Acluster uuid: _na_%0Aversion: 4%0Astate uuid: 0UOs5OFbSJu05nCGMfiLQQ%0Afrom_diff: false%0Ameta data version: 0%0Anodes: %0A   {node1}{gmK8C9-URXmcX6TH7hlD1g}{local}{local[251]}, local, master%0Arouting_table (version 0):%0Arouting_nodes:%0A---- unassigned%0A%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,451][DEBUG][org.elasticsearch.cluster.service] [node_s_0] publishing cluster state version [4]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,451][DEBUG][org.elasticsearch.cluster.service] [node_s_0] set local cluster state to version 4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,451][DEBUG][org.elasticsearch.cluster.service] [node_s_0] processing [test3]: took [3s] done applying updated cluster_state (version: 4, uuid: 0UOs5OFbSJu05nCGMfiLQQ)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,451][TRACE][org.elasticsearch.cluster.service] [node_s_0] will process [test4]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,451][DEBUG][org.elasticsearch.cluster.service] [node_s_0] processing [test4]: execute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,451][DEBUG][org.elasticsearch.cluster.service] [node_s_0] processing [test4]: took [0s] no change in cluster_state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterStateUpdateLogging(org.elasticsearch.cluster.service.ClusterServiceTests)",
  "startTimestamp": 1474197409416,
  "executionTime": 38
 }
]

[
 "TEST_STARTED",
 "ID#testClusterStateTaskListenerThrowingExceptionIsOkay(org.elasticsearch.cluster.service.ClusterServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,465][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node1}{ey-gsdjjQRCLc-Z8Fm2VMw}{local}{local[252]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,468][ERROR][org.elasticsearch.cluster.service] exception thrown by listener while notifying of cluster state processed from [testClusterStateTaskListenerThrowingExceptionIsOkay], old cluster state:%0Acluster uuid: _na_%0Aversion: 2%0Astate uuid: qjmk8xy3SZmtpxztoRLvgg%0Afrom_diff: false%0Ameta data version: 0%0Anodes: %0A   {node1}{ey-gsdjjQRCLc-Z8Fm2VMw}{local}{local[252]}, local, master%0Arouting_table (version 0):%0Arouting_nodes:%0A---- unassigned%0A%0Anew cluster state:%0Acluster uuid: _na_%0Aversion: 3%0Astate uuid: 2suFI6DiSqOjR_bJV4odWg%0Afrom_diff: false%0Ameta data version: 0%0Anodes: %0A   {node1}{ey-gsdjjQRCLc-Z8Fm2VMw}{local}{local[252]}, local, master%0Arouting_table (version 0):%0Arouting_nodes:%0A---- unassigned%0A%0D%0Ajava.lang.IllegalStateException: testClusterStateTaskListenerThrowingExceptionIsOkay%0A%09at org.elasticsearch.cluster.service.ClusterServiceTests$8.clusterStateProcessed(ClusterServiceTests.java:291) ~[test/:?]%0A%09at org.elasticsearch.cluster.service.ClusterService$SafeClusterStateTaskListener.clusterStateProcessed(ClusterService.java:821) [main/:?]%0A%09at org.elasticsearch.cluster.service.ClusterService.runTasksForExecutor(ClusterService.java:739) [main/:?]%0A%09at org.elasticsearch.cluster.service.ClusterService$UpdateTask.run(ClusterService.java:894) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:444) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:237) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:200) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterStateTaskListenerThrowingExceptionIsOkay(org.elasticsearch.cluster.service.ClusterServiceTests)",
  "startTimestamp": 1474197409454,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testClusterStateUpdateTasksAreExecutedInOrder(org.elasticsearch.cluster.service.ClusterServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,474][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node1}{MsSwzlYnRZO020sa4TTjDg}{local}{local[253]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterStateUpdateTasksAreExecutedInOrder(org.elasticsearch.cluster.service.ClusterServiceTests)",
  "startTimestamp": 1474197409469,
  "executionTime": 137
 }
]

[
 "TEST_STARTED",
 "ID#testTimeoutUpdateTask(org.elasticsearch.cluster.service.ClusterServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,625][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node1}{3YMihaKhTLCplr_y8YtY3A}{local}{local[254]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeoutUpdateTask(org.elasticsearch.cluster.service.ClusterServiceTests)",
  "startTimestamp": 1474197409607,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testLongClusterStateUpdateLogging(org.elasticsearch.cluster.service.ClusterServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,646][WARN ][org.elasticsearch.cluster.service] [node_s_0] cluster state update task [test2] took [32s] above the warn threshold of 30s%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 11:16:49,646 elasticsearch[clusterService#updateTask][T#1] ERROR Attempted to append to non-started appender mock"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,647][WARN ][org.elasticsearch.cluster.service] [node_s_0] cluster state update task [test2] took [32s] above the warn threshold of 30s%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 11:16:49,647 elasticsearch[clusterService#updateTask][T#1] ERROR Attempted to append to non-started appender mock"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,647][WARN ][org.elasticsearch.cluster.service] [node_s_0] cluster state update task [test3] took [33s] above the warn threshold of 30s%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 11:16:49,647 elasticsearch[clusterService#updateTask][T#1] ERROR Attempted to append to non-started appender mock"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,648][WARN ][org.elasticsearch.cluster.service] [node_s_0] cluster state update task [test4] took [34s] above the warn threshold of 30s%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 11:16:49,648 elasticsearch[clusterService#updateTask][T#1] ERROR Attempted to append to non-started appender mock"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLongClusterStateUpdateLogging(org.elasticsearch.cluster.service.ClusterServiceTests)",
  "startTimestamp": 1474197409636,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testDuplicateSubmission(org.elasticsearch.cluster.service.ClusterServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,670][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node1}{jIOEyZvtSYem_rgv0pCJlA}{local}{local[256]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuplicateSubmission(org.elasticsearch.cluster.service.ClusterServiceTests)",
  "startTimestamp": 1474197409650,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testMasterAwareExecution(org.elasticsearch.cluster.service.ClusterServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,686][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node1}{qYlavoNISZK4kAD4uiUI2Q}{local}{local[257]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMasterAwareExecution(org.elasticsearch.cluster.service.ClusterServiceTests)",
  "startTimestamp": 1474197409679,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testClusterStateBatchedUpdates(org.elasticsearch.cluster.service.ClusterServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,696][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node1}{xQnTL1iDR2eqKzO7H-AF9Q}{local}{local[259]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterStateBatchedUpdates(org.elasticsearch.cluster.service.ClusterServiceTests)",
  "startTimestamp": 1474197409691,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testSingleBatchSubmission(org.elasticsearch.cluster.service.ClusterServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,715][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node1}{2usbiBgEQ_KqrPn8-mbAyQ}{local}{local[260]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleBatchSubmission(org.elasticsearch.cluster.service.ClusterServiceTests)",
  "startTimestamp": 1474197409708,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testPrioritizedTasks(org.elasticsearch.cluster.service.ClusterServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:49,734][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node1}{dtMkEm4VTLiQY4--o0cD5w}{local}{local[261]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrioritizedTasks(org.elasticsearch.cluster.service.ClusterServiceTests)",
  "startTimestamp": 1474197409717,
  "executionTime": 17
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.service.ClusterServiceTests",
  "startTimestamp": 1474197409393,
  "executionTime": 344
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.OperatorTests",
   "displayName": "org.elasticsearch.index.query.OperatorTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.OperatorTests",
   "children": [
    {
     "id": "ID#testToBooleanClauseOccur(org.elasticsearch.index.query.OperatorTests)",
     "displayName": "testToBooleanClauseOccur(org.elasticsearch.index.query.OperatorTests)",
     "methodName": "testToBooleanClauseOccur",
     "className": "org.elasticsearch.index.query.OperatorTests",
     "children": []
    },
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.index.query.OperatorTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.index.query.OperatorTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.index.query.OperatorTests",
     "children": []
    },
    {
     "id": "ID#testToQueryParserOperator(org.elasticsearch.index.query.OperatorTests)",
     "displayName": "testToQueryParserOperator(org.elasticsearch.index.query.OperatorTests)",
     "methodName": "testToQueryParserOperator",
     "className": "org.elasticsearch.index.query.OperatorTests",
     "children": []
    },
    {
     "id": "ID#testFromString(org.elasticsearch.index.query.OperatorTests)",
     "displayName": "testFromString(org.elasticsearch.index.query.OperatorTests)",
     "methodName": "testFromString",
     "className": "org.elasticsearch.index.query.OperatorTests",
     "children": []
    },
    {
     "id": "ID#testReadFrom(org.elasticsearch.index.query.OperatorTests)",
     "displayName": "testReadFrom(org.elasticsearch.index.query.OperatorTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.index.query.OperatorTests",
     "children": []
    },
    {
     "id": "ID#testWriteTo(org.elasticsearch.index.query.OperatorTests)",
     "displayName": "testWriteTo(org.elasticsearch.index.query.OperatorTests)",
     "methodName": "testWriteTo",
     "className": "org.elasticsearch.index.query.OperatorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197409743
 }
]

[
 "TEST_STARTED",
 "ID#testToBooleanClauseOccur(org.elasticsearch.index.query.OperatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBooleanClauseOccur(org.elasticsearch.index.query.OperatorTests)",
  "startTimestamp": 1474197409762,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.index.query.OperatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.index.query.OperatorTests)",
  "startTimestamp": 1474197409764,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryParserOperator(org.elasticsearch.index.query.OperatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryParserOperator(org.elasticsearch.index.query.OperatorTests)",
  "startTimestamp": 1474197409766,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromString(org.elasticsearch.index.query.OperatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromString(org.elasticsearch.index.query.OperatorTests)",
  "startTimestamp": 1474197409768,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.index.query.OperatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.index.query.OperatorTests)",
  "startTimestamp": 1474197409770,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testWriteTo(org.elasticsearch.index.query.OperatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteTo(org.elasticsearch.index.query.OperatorTests)",
  "startTimestamp": 1474197409772,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.OperatorTests",
  "startTimestamp": 1474197409743,
  "executionTime": 32
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.ByteUtilsTests",
   "displayName": "org.elasticsearch.common.util.ByteUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.ByteUtilsTests",
   "children": [
    {
     "id": "ID#testFloat(org.elasticsearch.common.util.ByteUtilsTests)",
     "displayName": "testFloat(org.elasticsearch.common.util.ByteUtilsTests)",
     "methodName": "testFloat",
     "className": "org.elasticsearch.common.util.ByteUtilsTests",
     "children": []
    },
    {
     "id": "ID#testZigZag(org.elasticsearch.common.util.ByteUtilsTests)",
     "displayName": "testZigZag(org.elasticsearch.common.util.ByteUtilsTests)",
     "methodName": "testZigZag",
     "className": "org.elasticsearch.common.util.ByteUtilsTests",
     "children": []
    },
    {
     "id": "ID#testVLong(org.elasticsearch.common.util.ByteUtilsTests)",
     "displayName": "testVLong(org.elasticsearch.common.util.ByteUtilsTests)",
     "methodName": "testVLong",
     "className": "org.elasticsearch.common.util.ByteUtilsTests",
     "children": []
    },
    {
     "id": "ID#testDouble(org.elasticsearch.common.util.ByteUtilsTests)",
     "displayName": "testDouble(org.elasticsearch.common.util.ByteUtilsTests)",
     "methodName": "testDouble",
     "className": "org.elasticsearch.common.util.ByteUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197409781
 }
]

[
 "TEST_STARTED",
 "ID#testFloat(org.elasticsearch.common.util.ByteUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFloat(org.elasticsearch.common.util.ByteUtilsTests)",
  "startTimestamp": 1474197409795,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testZigZag(org.elasticsearch.common.util.ByteUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testZigZag(org.elasticsearch.common.util.ByteUtilsTests)",
  "startTimestamp": 1474197409813,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testVLong(org.elasticsearch.common.util.ByteUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVLong(org.elasticsearch.common.util.ByteUtilsTests)",
  "startTimestamp": 1474197409816,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testDouble(org.elasticsearch.common.util.ByteUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDouble(org.elasticsearch.common.util.ByteUtilsTests)",
  "startTimestamp": 1474197409827,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.ByteUtilsTests",
  "startTimestamp": 1474197409781,
  "executionTime": 54
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.bulk.BulkItemResponseTests",
   "displayName": "org.elasticsearch.action.bulk.BulkItemResponseTests",
   "methodName": null,
   "className": "org.elasticsearch.action.bulk.BulkItemResponseTests",
   "children": [
    {
     "id": "ID#testFailureToString(org.elasticsearch.action.bulk.BulkItemResponseTests)",
     "displayName": "testFailureToString(org.elasticsearch.action.bulk.BulkItemResponseTests)",
     "methodName": "testFailureToString",
     "className": "org.elasticsearch.action.bulk.BulkItemResponseTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197409840
 }
]

[
 "TEST_STARTED",
 "ID#testFailureToString(org.elasticsearch.action.bulk.BulkItemResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailureToString(org.elasticsearch.action.bulk.BulkItemResponseTests)",
  "startTimestamp": 1474197409854,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.bulk.BulkItemResponseTests",
  "startTimestamp": 1474197409840,
  "executionTime": 19
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.shard.StoreRecoveryTests",
   "displayName": "org.elasticsearch.index.shard.StoreRecoveryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.shard.StoreRecoveryTests",
   "children": [
    {
     "id": "ID#testStatsDirWrapper(org.elasticsearch.index.shard.StoreRecoveryTests)",
     "displayName": "testStatsDirWrapper(org.elasticsearch.index.shard.StoreRecoveryTests)",
     "methodName": "testStatsDirWrapper",
     "className": "org.elasticsearch.index.shard.StoreRecoveryTests",
     "children": []
    },
    {
     "id": "ID#testAddIndices(org.elasticsearch.index.shard.StoreRecoveryTests)",
     "displayName": "testAddIndices(org.elasticsearch.index.shard.StoreRecoveryTests)",
     "methodName": "testAddIndices",
     "className": "org.elasticsearch.index.shard.StoreRecoveryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197409864
 }
]

[
 "TEST_STARTED",
 "ID#testStatsDirWrapper(org.elasticsearch.index.shard.StoreRecoveryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStatsDirWrapper(org.elasticsearch.index.shard.StoreRecoveryTests)",
  "startTimestamp": 1474197409884,
  "executionTime": 58
 }
]

[
 "TEST_STARTED",
 "ID#testAddIndices(org.elasticsearch.index.shard.StoreRecoveryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddIndices(org.elasticsearch.index.shard.StoreRecoveryTests)",
  "startTimestamp": 1474197409942,
  "executionTime": 443
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.shard.StoreRecoveryTests",
  "startTimestamp": 1474197409864,
  "executionTime": 531
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.GenericStoreDynamicTemplateTests",
   "displayName": "org.elasticsearch.index.mapper.GenericStoreDynamicTemplateTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.GenericStoreDynamicTemplateTests",
   "children": [
    {
     "id": "ID#testSimple(org.elasticsearch.index.mapper.GenericStoreDynamicTemplateTests)",
     "displayName": "testSimple(org.elasticsearch.index.mapper.GenericStoreDynamicTemplateTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.index.mapper.GenericStoreDynamicTemplateTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197410401
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.index.mapper.GenericStoreDynamicTemplateTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:50,434][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:50,466][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:50,466][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:50,470][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[564], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:50,473][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:50,473][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:50,618][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:50,618][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:50,619][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[86]}, bound_addresses {local[86]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:50,629][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{ZtiTiI71SYGIVGSHSwcL0w}{8FLlXlbzQNSLZw3EQ34gfA}{local}{local[86]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:50,631][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:50,654][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:50,693][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:50,747][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:50,761][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/PcvBIP30TWe22mC_RPqq7Q] create_mapping [person]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:50,780][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/PcvBIP30TWe22mC_RPqq7Q] update_mapping [person]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:50,791][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GenericStoreDynamicTemplateTests#testSimple]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.index.mapper.GenericStoreDynamicTemplateTests)",
  "startTimestamp": 1474197410425,
  "executionTime": 392
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:50,818][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:50,818][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:50,818][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:50,820][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.GenericStoreDynamicTemplateTests",
  "startTimestamp": 1474197410401,
  "executionTime": 424
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.TransportActionFilterChainTests",
   "displayName": "org.elasticsearch.action.support.TransportActionFilterChainTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.TransportActionFilterChainTests",
   "children": [
    {
     "id": "ID#testActionFiltersResponse(org.elasticsearch.action.support.TransportActionFilterChainTests)",
     "displayName": "testActionFiltersResponse(org.elasticsearch.action.support.TransportActionFilterChainTests)",
     "methodName": "testActionFiltersResponse",
     "className": "org.elasticsearch.action.support.TransportActionFilterChainTests",
     "children": []
    },
    {
     "id": "ID#testTooManyContinueProcessingResponse(org.elasticsearch.action.support.TransportActionFilterChainTests)",
     "displayName": "testTooManyContinueProcessingResponse(org.elasticsearch.action.support.TransportActionFilterChainTests)",
     "methodName": "testTooManyContinueProcessingResponse",
     "className": "org.elasticsearch.action.support.TransportActionFilterChainTests",
     "children": []
    },
    {
     "id": "ID#testTooManyContinueProcessingRequest(org.elasticsearch.action.support.TransportActionFilterChainTests)",
     "displayName": "testTooManyContinueProcessingRequest(org.elasticsearch.action.support.TransportActionFilterChainTests)",
     "methodName": "testTooManyContinueProcessingRequest",
     "className": "org.elasticsearch.action.support.TransportActionFilterChainTests",
     "children": []
    },
    {
     "id": "ID#testActionFiltersRequest(org.elasticsearch.action.support.TransportActionFilterChainTests)",
     "displayName": "testActionFiltersRequest(org.elasticsearch.action.support.TransportActionFilterChainTests)",
     "methodName": "testActionFiltersRequest",
     "className": "org.elasticsearch.action.support.TransportActionFilterChainTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197410837
 }
]

[
 "TEST_STARTED",
 "ID#testActionFiltersResponse(org.elasticsearch.action.support.TransportActionFilterChainTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActionFiltersResponse(org.elasticsearch.action.support.TransportActionFilterChainTests)",
  "startTimestamp": 1474197410857,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testTooManyContinueProcessingResponse(org.elasticsearch.action.support.TransportActionFilterChainTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTooManyContinueProcessingResponse(org.elasticsearch.action.support.TransportActionFilterChainTests)",
  "startTimestamp": 1474197410867,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testTooManyContinueProcessingRequest(org.elasticsearch.action.support.TransportActionFilterChainTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTooManyContinueProcessingRequest(org.elasticsearch.action.support.TransportActionFilterChainTests)",
  "startTimestamp": 1474197410871,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testActionFiltersRequest(org.elasticsearch.action.support.TransportActionFilterChainTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActionFiltersRequest(org.elasticsearch.action.support.TransportActionFilterChainTests)",
  "startTimestamp": 1474197410876,
  "executionTime": 11
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.TransportActionFilterChainTests",
  "startTimestamp": 1474197410837,
  "executionTime": 53
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.CollectionUtilsTests",
   "displayName": "org.elasticsearch.common.util.CollectionUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.CollectionUtilsTests",
   "children": [
    {
     "id": "ID#testEmptyPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
     "displayName": "testEmptyPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
     "methodName": "testEmptyPartition",
     "className": "org.elasticsearch.common.util.CollectionUtilsTests",
     "children": []
    },
    {
     "id": "ID#testSortByteRefArray(org.elasticsearch.common.util.CollectionUtilsTests)",
     "displayName": "testSortByteRefArray(org.elasticsearch.common.util.CollectionUtilsTests)",
     "methodName": "testSortByteRefArray",
     "className": "org.elasticsearch.common.util.CollectionUtilsTests",
     "children": []
    },
    {
     "id": "ID#testSortAndDedupByteRefArray(org.elasticsearch.common.util.CollectionUtilsTests)",
     "displayName": "testSortAndDedupByteRefArray(org.elasticsearch.common.util.CollectionUtilsTests)",
     "methodName": "testSortAndDedupByteRefArray",
     "className": "org.elasticsearch.common.util.CollectionUtilsTests",
     "children": []
    },
    {
     "id": "ID#testSimplePartition(org.elasticsearch.common.util.CollectionUtilsTests)",
     "displayName": "testSimplePartition(org.elasticsearch.common.util.CollectionUtilsTests)",
     "methodName": "testSimplePartition",
     "className": "org.elasticsearch.common.util.CollectionUtilsTests",
     "children": []
    },
    {
     "id": "ID#testSingletonPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
     "displayName": "testSingletonPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
     "methodName": "testSingletonPartition",
     "className": "org.elasticsearch.common.util.CollectionUtilsTests",
     "children": []
    },
    {
     "id": "ID#testRotate(org.elasticsearch.common.util.CollectionUtilsTests)",
     "displayName": "testRotate(org.elasticsearch.common.util.CollectionUtilsTests)",
     "methodName": "testRotate",
     "className": "org.elasticsearch.common.util.CollectionUtilsTests",
     "children": []
    },
    {
     "id": "ID#testRotateEmpty(org.elasticsearch.common.util.CollectionUtilsTests)",
     "displayName": "testRotateEmpty(org.elasticsearch.common.util.CollectionUtilsTests)",
     "methodName": "testRotateEmpty",
     "className": "org.elasticsearch.common.util.CollectionUtilsTests",
     "children": []
    },
    {
     "id": "ID#testOversizedPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
     "displayName": "testOversizedPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
     "methodName": "testOversizedPartition",
     "className": "org.elasticsearch.common.util.CollectionUtilsTests",
     "children": []
    },
    {
     "id": "ID#testPerfectPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
     "displayName": "testPerfectPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
     "methodName": "testPerfectPartition",
     "className": "org.elasticsearch.common.util.CollectionUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197410896
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyPartition(org.elasticsearch.common.util.CollectionUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
  "startTimestamp": 1474197410936,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSortByteRefArray(org.elasticsearch.common.util.CollectionUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortByteRefArray(org.elasticsearch.common.util.CollectionUtilsTests)",
  "startTimestamp": 1474197410938,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testSortAndDedupByteRefArray(org.elasticsearch.common.util.CollectionUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortAndDedupByteRefArray(org.elasticsearch.common.util.CollectionUtilsTests)",
  "startTimestamp": 1474197410964,
  "executionTime": 173
 }
]

[
 "TEST_STARTED",
 "ID#testSimplePartition(org.elasticsearch.common.util.CollectionUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimplePartition(org.elasticsearch.common.util.CollectionUtilsTests)",
  "startTimestamp": 1474197411138,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSingletonPartition(org.elasticsearch.common.util.CollectionUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingletonPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
  "startTimestamp": 1474197411140,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testRotate(org.elasticsearch.common.util.CollectionUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRotate(org.elasticsearch.common.util.CollectionUtilsTests)",
  "startTimestamp": 1474197411141,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testRotateEmpty(org.elasticsearch.common.util.CollectionUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRotateEmpty(org.elasticsearch.common.util.CollectionUtilsTests)",
  "startTimestamp": 1474197411150,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testOversizedPartition(org.elasticsearch.common.util.CollectionUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOversizedPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
  "startTimestamp": 1474197411155,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testPerfectPartition(org.elasticsearch.common.util.CollectionUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPerfectPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
  "startTimestamp": 1474197411157,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.CollectionUtilsTests",
  "startTimestamp": 1474197410896,
  "executionTime": 265
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.terms.TermsAggregatorFactoryTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.terms.TermsAggregatorFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.terms.TermsAggregatorFactoryTests",
   "children": [
    {
     "id": "ID#testSubAggCollectMode(org.elasticsearch.search.aggregations.bucket.terms.TermsAggregatorFactoryTests)",
     "displayName": "testSubAggCollectMode(org.elasticsearch.search.aggregations.bucket.terms.TermsAggregatorFactoryTests)",
     "methodName": "testSubAggCollectMode",
     "className": "org.elasticsearch.search.aggregations.bucket.terms.TermsAggregatorFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197411167
 }
]

[
 "TEST_STARTED",
 "ID#testSubAggCollectMode(org.elasticsearch.search.aggregations.bucket.terms.TermsAggregatorFactoryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:51,210][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:51,257][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:51,257][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:51,263][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[564], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:51,266][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:51,266][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:51,440][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:51,441][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:51,441][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[87]}, bound_addresses {local[87]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:51,454][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{-lwV02O2SmGcjV6r1Bdvrw}{mkiDlKExT8a7-Jws0hUg4w}{local}{local[87]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:51,455][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:52,305][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:52,332][INFO ][org.elasticsearch.search.aggregations.bucket.terms] [TermsAggregatorFactoryTests#testSubAggCollectMode]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSubAggCollectMode(org.elasticsearch.search.aggregations.bucket.terms.TermsAggregatorFactoryTests)",
  "startTimestamp": 1474197411195,
  "executionTime": 1138
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:52,333][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:52,334][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:52,334][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:52,342][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.terms.TermsAggregatorFactoryTests",
  "startTimestamp": 1474197411167,
  "executionTime": 1181
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.LongHashTests",
   "displayName": "org.elasticsearch.common.util.LongHashTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.LongHashTests",
   "children": [
    {
     "id": "ID#testKey(org.elasticsearch.common.util.LongHashTests)",
     "displayName": "testKey(org.elasticsearch.common.util.LongHashTests)",
     "methodName": "testKey",
     "className": "org.elasticsearch.common.util.LongHashTests",
     "children": []
    },
    {
     "id": "ID#testSize(org.elasticsearch.common.util.LongHashTests)",
     "displayName": "testSize(org.elasticsearch.common.util.LongHashTests)",
     "methodName": "testSize",
     "className": "org.elasticsearch.common.util.LongHashTests",
     "children": []
    },
    {
     "id": "ID#testDuell(org.elasticsearch.common.util.LongHashTests)",
     "displayName": "testDuell(org.elasticsearch.common.util.LongHashTests)",
     "methodName": "testDuell",
     "className": "org.elasticsearch.common.util.LongHashTests",
     "children": []
    },
    {
     "id": "ID#testAdd(org.elasticsearch.common.util.LongHashTests)",
     "displayName": "testAdd(org.elasticsearch.common.util.LongHashTests)",
     "methodName": "testAdd",
     "className": "org.elasticsearch.common.util.LongHashTests",
     "children": []
    },
    {
     "id": "ID#testFind(org.elasticsearch.common.util.LongHashTests)",
     "displayName": "testFind(org.elasticsearch.common.util.LongHashTests)",
     "methodName": "testFind",
     "className": "org.elasticsearch.common.util.LongHashTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197412364
 }
]

[
 "TEST_STARTED",
 "ID#testKey(org.elasticsearch.common.util.LongHashTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:52,422][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:52,444][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:52,444][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:52,448][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[564], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:52,451][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:52,451][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:52,570][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:52,570][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:52,571][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[88]}, bound_addresses {local[88]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:52,572][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{VkVdoIPvTvuF6S2pagI1Zg}{3ByvHDBpTbmKCBK_ma0rgw}{local}{local[88]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:52,575][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:52,596][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:52,648][INFO ][org.elasticsearch.common.util] [node_s_0] [LongHashTests#testKey]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testKey(org.elasticsearch.common.util.LongHashTests)",
  "startTimestamp": 1474197412415,
  "executionTime": 234
 }
]

[
 "TEST_STARTED",
 "ID#testSize(org.elasticsearch.common.util.LongHashTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:54,038][INFO ][org.elasticsearch.common.util] [node_s_0] [LongHashTests#testSize]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSize(org.elasticsearch.common.util.LongHashTests)",
  "startTimestamp": 1474197412649,
  "executionTime": 1390
 }
]

[
 "TEST_STARTED",
 "ID#testDuell(org.elasticsearch.common.util.LongHashTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:55,044][INFO ][org.elasticsearch.common.util] [node_s_0] [LongHashTests#testDuell]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuell(org.elasticsearch.common.util.LongHashTests)",
  "startTimestamp": 1474197414039,
  "executionTime": 1006
 }
]

[
 "TEST_STARTED",
 "ID#testAdd(org.elasticsearch.common.util.LongHashTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:55,074][INFO ][org.elasticsearch.common.util] [node_s_0] [LongHashTests#testAdd]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAdd(org.elasticsearch.common.util.LongHashTests)",
  "startTimestamp": 1474197415045,
  "executionTime": 30
 }
]

[
 "TEST_STARTED",
 "ID#testFind(org.elasticsearch.common.util.LongHashTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:55,201][INFO ][org.elasticsearch.common.util] [node_s_0] [LongHashTests#testFind]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFind(org.elasticsearch.common.util.LongHashTests)",
  "startTimestamp": 1474197415075,
  "executionTime": 127
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:55,202][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:55,206][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:55,207][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:16:55,210][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.LongHashTests",
  "startTimestamp": 1474197412364,
  "executionTime": 2852
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.RegexpQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
   "children": [
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNumeric(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testNumeric(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testNumeric",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testParseFailsWithMultipleFields(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testParseFailsWithMultipleFields",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197415223
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,280][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{_MqOhu4xQQ-NcfA1Q97UBg}{local}{local[262]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,287][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,287][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,318][WARN ][org.elasticsearch.deprecation.index.mapper]  [f] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,318][WARN ][org.elasticsearch.deprecation.index.mapper]  [f] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,318][WARN ][org.elasticsearch.deprecation.index.mapper]  [f] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,319][WARN ][org.elasticsearch.deprecation.index.mapper]  [f] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,319][WARN ][org.elasticsearch.deprecation.index.mapper]  [f] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,320][WARN ][org.elasticsearch.deprecation.index.mapper]  [f] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,322][WARN ][org.elasticsearch.deprecation.index.mapper]  [f] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,322][WARN ][org.elasticsearch.deprecation.index.mapper]  [f] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,322][WARN ][org.elasticsearch.deprecation.index.mapper]  [f] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,324][WARN ][org.elasticsearch.deprecation.index.mapper]  [f] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,324][WARN ][org.elasticsearch.deprecation.index.mapper]  [f] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,324][WARN ][org.elasticsearch.deprecation.index.mapper]  [f] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,326][WARN ][org.elasticsearch.deprecation.index.mapper]  [f] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,326][WARN ][org.elasticsearch.deprecation.index.mapper]  [f] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,326][WARN ][org.elasticsearch.deprecation.index.mapper]  [f] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,329][WARN ][org.elasticsearch.deprecation.index.mapper]  [f] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,329][WARN ][org.elasticsearch.deprecation.index.mapper]  [f] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,329][WARN ][org.elasticsearch.deprecation.index.mapper]  [f] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,330][WARN ][org.elasticsearch.deprecation.index.mapper]  [f] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,330][WARN ][org.elasticsearch.deprecation.index.mapper]  [f] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,330][WARN ][org.elasticsearch.deprecation.index.mapper]  [f] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,333][WARN ][org.elasticsearch.deprecation.index.mapper]  [f] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,333][WARN ][org.elasticsearch.deprecation.index.mapper]  [f] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,333][WARN ][org.elasticsearch.deprecation.index.mapper]  [f] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,336][WARN ][org.elasticsearch.deprecation.index.mapper]  [f] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,336][WARN ][org.elasticsearch.deprecation.index.mapper]  [f] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,336][WARN ][org.elasticsearch.deprecation.index.mapper]  [f] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,337][WARN ][org.elasticsearch.deprecation.index.mapper]  [f] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,337][WARN ][org.elasticsearch.deprecation.index.mapper]  [f] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,337][WARN ][org.elasticsearch.deprecation.index.mapper]  [f] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,344][WARN ][org.elasticsearch.deprecation.index.mapper]  [f] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,344][WARN ][org.elasticsearch.deprecation.index.mapper]  [f] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,344][WARN ][org.elasticsearch.deprecation.index.mapper]  [f] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,351][WARN ][org.elasticsearch.deprecation.index.mapper]  [f] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,351][WARN ][org.elasticsearch.deprecation.index.mapper]  [f] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,351][WARN ][org.elasticsearch.deprecation.index.mapper]  [f] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,383][WARN ][org.elasticsearch.deprecation.index.mapper]  [f] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,384][WARN ][org.elasticsearch.deprecation.index.mapper]  [f] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,384][WARN ][org.elasticsearch.deprecation.index.mapper]  [f] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,386][WARN ][org.elasticsearch.deprecation.index.mapper]  [f] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,386][WARN ][org.elasticsearch.deprecation.index.mapper]  [f] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,386][WARN ][org.elasticsearch.deprecation.index.mapper]  [f] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,408][WARN ][org.elasticsearch.deprecation.index.mapper]  [f] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,408][WARN ][org.elasticsearch.deprecation.index.mapper]  [f] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:16:55,408][WARN ][org.elasticsearch.deprecation.index.mapper]  [f] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1474197415266,
  "executionTime": 145
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1474197415413,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1474197415415,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1474197415433,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1474197415445,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1474197415452,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1474197415455,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1474197415457,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1474197415462,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1474197415468,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testNumeric(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNumeric(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1474197415472,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1474197415474,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.RegexpQueryBuilderTests",
  "startTimestamp": 1474197415223,
  "executionTime": 267
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.BooleanFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.BooleanFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.BooleanFieldTypeTests",
   "children": [
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.BooleanFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.BooleanFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.BooleanFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueFormat(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "displayName": "testValueFormat(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "methodName": "testValueFormat",
     "className": "org.elasticsearch.index.mapper.BooleanFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.BooleanFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueForSearch(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "displayName": "testValueForSearch(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "methodName": "testValueForSearch",
     "className": "org.elasticsearch.index.mapper.BooleanFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.BooleanFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testTermQuery(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "displayName": "testTermQuery(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "methodName": "testTermQuery",
     "className": "org.elasticsearch.index.mapper.BooleanFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197415495
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.BooleanFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
  "startTimestamp": 1474197415543,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.BooleanFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
  "startTimestamp": 1474197415550,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.BooleanFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
  "startTimestamp": 1474197415551,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValueFormat(org.elasticsearch.index.mapper.BooleanFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueFormat(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
  "startTimestamp": 1474197415554,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.BooleanFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
  "startTimestamp": 1474197415555,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testValueForSearch(org.elasticsearch.index.mapper.BooleanFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueForSearch(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
  "startTimestamp": 1474197415558,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.BooleanFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
  "startTimestamp": 1474197415561,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testTermQuery(org.elasticsearch.index.mapper.BooleanFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermQuery(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
  "startTimestamp": 1474197415562,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.BooleanFieldTypeTests",
  "startTimestamp": 1474197415495,
  "executionTime": 72
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.TextFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.TextFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.TextFieldTypeTests",
   "children": [
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.TextFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testTermsQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "displayName": "testTermsQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "methodName": "testTermsQuery",
     "className": "org.elasticsearch.index.mapper.TextFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testTermQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "displayName": "testTermQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "methodName": "testTermQuery",
     "className": "org.elasticsearch.index.mapper.TextFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFuzzyQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "displayName": "testFuzzyQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "methodName": "testFuzzyQuery",
     "className": "org.elasticsearch.index.mapper.TextFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testRegexpQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "displayName": "testRegexpQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "methodName": "testRegexpQuery",
     "className": "org.elasticsearch.index.mapper.TextFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.TextFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.TextFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.TextFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.TextFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197415598
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.TextFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.TextFieldTypeTests)",
  "startTimestamp": 1474197415640,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testTermsQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermsQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
  "startTimestamp": 1474197415644,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testTermQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
  "startTimestamp": 1474197415647,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFuzzyQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFuzzyQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
  "startTimestamp": 1474197415649,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRegexpQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegexpQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
  "startTimestamp": 1474197415651,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.TextFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.TextFieldTypeTests)",
  "startTimestamp": 1474197415655,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.TextFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.TextFieldTypeTests)",
  "startTimestamp": 1474197415658,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.TextFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.TextFieldTypeTests)",
  "startTimestamp": 1474197415660,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.TextFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.TextFieldTypeTests)",
  "startTimestamp": 1474197415662,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.TextFieldTypeTests",
  "startTimestamp": 1474197415598,
  "executionTime": 67
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.FieldNamesFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.FieldNamesFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.FieldNamesFieldMapperTests",
   "children": [
    {
     "id": "ID#testInjectIntoDocDuringParsing(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "displayName": "testInjectIntoDocDuringParsing(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "methodName": "testInjectIntoDocDuringParsing",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testFieldType(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "displayName": "testFieldType(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "methodName": "testFieldType",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testExplicitEnabled(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "displayName": "testExplicitEnabled(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "methodName": "testExplicitEnabled",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testExtractFieldNames(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "displayName": "testExtractFieldNames(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "methodName": "testExtractFieldNames",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDisabled(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "displayName": "testDisabled(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "methodName": "testDisabled",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testSeesFieldsFromPlugins(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "displayName": "testSeesFieldsFromPlugins(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "methodName": "testSeesFieldsFromPlugins",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testMergingMappings(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "displayName": "testMergingMappings(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "methodName": "testMergingMappings",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197415673
 }
]

[
 "TEST_STARTED",
 "ID#testInjectIntoDocDuringParsing(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:55,703][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:55,726][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:55,726][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:55,730][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[564], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:55,739][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:55,739][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:55,844][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:55,844][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:55,844][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[89]}, bound_addresses {local[89]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:55,845][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{Tkr31ksgTRahgFWHD4B2hQ}{vhd05wYxQW-tWKwSr4DTAw}{local}{local[89]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:55,846][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:55,860][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:55,877][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:55,942][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:55,955][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [FieldNamesFieldMapperTests#testInjectIntoDocDuringParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInjectIntoDocDuringParsing(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
  "startTimestamp": 1474197415690,
  "executionTime": 292
 }
]

[
 "TEST_STARTED",
 "ID#testFieldType(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:55,989][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:56,097][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:56,110][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [FieldNamesFieldMapperTests#testFieldType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldType(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
  "startTimestamp": 1474197415982,
  "executionTime": 163
 }
]

[
 "TEST_STARTED",
 "ID#testExplicitEnabled(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:56,151][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:56,234][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:56,250][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [FieldNamesFieldMapperTests#testExplicitEnabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExplicitEnabled(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
  "startTimestamp": 1474197416145,
  "executionTime": 186
 }
]

[
 "TEST_STARTED",
 "ID#testExtractFieldNames(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:56,334][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [FieldNamesFieldMapperTests#testExtractFieldNames]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractFieldNames(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
  "startTimestamp": 1474197416331,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testDisabled(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:56,344][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:56,406][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:56,418][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [FieldNamesFieldMapperTests#testDisabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDisabled(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
  "startTimestamp": 1474197416335,
  "executionTime": 115
 }
]

[
 "TEST_STARTED",
 "ID#testSeesFieldsFromPlugins(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:56,456][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:56,501][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:56,526][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [FieldNamesFieldMapperTests#testSeesFieldsFromPlugins]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSeesFieldsFromPlugins(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
  "startTimestamp": 1474197416450,
  "executionTime": 101
 }
]

[
 "TEST_STARTED",
 "ID#testMergingMappings(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:56,557][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:56,625][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:56,641][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [FieldNamesFieldMapperTests#testMergingMappings]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergingMappings(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
  "startTimestamp": 1474197416552,
  "executionTime": 189
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:56,741][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:56,742][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:56,742][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:16:56,744][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.FieldNamesFieldMapperTests",
  "startTimestamp": 1474197415673,
  "executionTime": 1077
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.gateway.PrimaryShardAllocatorTests",
   "displayName": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
   "methodName": null,
   "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
   "children": [
    {
     "id": "ID#testRestoreThrottle(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testRestoreThrottle(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testRestoreThrottle",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testEnoughCopiesFoundForAllocationOnLegacyIndex(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testEnoughCopiesFoundForAllocationOnLegacyIndex(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testEnoughCopiesFoundForAllocationOnLegacyIndex",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testNoAllocationFound(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testNoAllocationFound(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testNoAllocationFound",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testNoAsyncFetchData(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testNoAsyncFetchData(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testNoAsyncFetchData",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testFoundAllocationButThrottlingDecider(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testFoundAllocationButThrottlingDecider(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testFoundAllocationButThrottlingDecider",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testStoreException(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testStoreException(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testStoreException",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testDontAllocateOnNoOrThrottleForceAllocationDecision(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testDontAllocateOnNoOrThrottleForceAllocationDecision(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testDontAllocateOnNoOrThrottleForceAllocationDecision",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testRecoverOnAnyNode(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testRecoverOnAnyNode(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testRecoverOnAnyNode",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testForceAllocatePrimary(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testForceAllocatePrimary(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testForceAllocatePrimary",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testRestoreForcesAllocateIfShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testRestoreForcesAllocateIfShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testRestoreForcesAllocateIfShardAvailable",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testNoProcessPrimaryNotAllocatedBefore(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testNoProcessPrimaryNotAllocatedBefore(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testNoProcessPrimaryNotAllocatedBefore",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testVersionBasedAllocationPrefersShardWithAllocationId(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testVersionBasedAllocationPrefersShardWithAllocationId(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testVersionBasedAllocationPrefersShardWithAllocationId",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testAllocateToTheHighestVersionOnLegacyIndex(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testAllocateToTheHighestVersionOnLegacyIndex(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testAllocateToTheHighestVersionOnLegacyIndex",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testRestoreDoesNotAssignIfNoShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testRestoreDoesNotAssignIfNoShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testRestoreDoesNotAssignIfNoShardAvailable",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testRecoverOnAnyNodeThrottle(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testRecoverOnAnyNodeThrottle(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testRecoverOnAnyNodeThrottle",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testRestore(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testRestore(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testRestore",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testEnoughCopiesFoundForAllocationOnLegacyIndexWithDifferentVersion(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testEnoughCopiesFoundForAllocationOnLegacyIndexWithDifferentVersion(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testEnoughCopiesFoundForAllocationOnLegacyIndexWithDifferentVersion",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testFoundAllocationAndAllocating(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testFoundAllocationAndAllocating(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testFoundAllocationAndAllocating",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testNoMatchingAllocationIdFound(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testNoMatchingAllocationIdFound(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testNoMatchingAllocationIdFound",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testPreferAllocatingPreviousPrimary(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testPreferAllocatingPreviousPrimary(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testPreferAllocatingPreviousPrimary",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testRecoverOnAnyNodeDoesNotAssignIfNoShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testRecoverOnAnyNodeDoesNotAssignIfNoShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testRecoverOnAnyNodeDoesNotAssignIfNoShardAvailable",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testNoActiveAllocationIds(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testNoActiveAllocationIds(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testNoActiveAllocationIds",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testDontForceAllocateOnThrottleDecision(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testDontForceAllocateOnThrottleDecision(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testDontForceAllocateOnThrottleDecision",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testRecoverOnAnyNodeForcesAllocateIfShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testRecoverOnAnyNodeForcesAllocateIfShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testRecoverOnAnyNodeForcesAllocateIfShardAvailable",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testFoundAllocationButNoDecider(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testFoundAllocationButNoDecider(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testFoundAllocationButNoDecider",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197416765
 }
]

[
 "TEST_STARTED",
 "ID#testRestoreThrottle(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestoreThrottle(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474197416814,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testEnoughCopiesFoundForAllocationOnLegacyIndex(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnoughCopiesFoundForAllocationOnLegacyIndex(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474197416823,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testNoAllocationFound(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoAllocationFound(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474197416828,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNoAsyncFetchData(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoAsyncFetchData(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474197416833,
  "executionTime": 47
 }
]

[
 "TEST_STARTED",
 "ID#testFoundAllocationButThrottlingDecider(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFoundAllocationButThrottlingDecider(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474197416880,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testStoreException(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStoreException(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474197416883,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testDontAllocateOnNoOrThrottleForceAllocationDecision(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDontAllocateOnNoOrThrottleForceAllocationDecision(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474197416889,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverOnAnyNode(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverOnAnyNode(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474197416892,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testForceAllocatePrimary(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForceAllocatePrimary(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474197416896,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRestoreForcesAllocateIfShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestoreForcesAllocateIfShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474197416899,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNoProcessPrimaryNotAllocatedBefore(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoProcessPrimaryNotAllocatedBefore(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474197416901,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testVersionBasedAllocationPrefersShardWithAllocationId(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionBasedAllocationPrefersShardWithAllocationId(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474197416904,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testAllocateToTheHighestVersionOnLegacyIndex(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllocateToTheHighestVersionOnLegacyIndex(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474197416908,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRestoreDoesNotAssignIfNoShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestoreDoesNotAssignIfNoShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474197416910,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverOnAnyNodeThrottle(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverOnAnyNodeThrottle(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474197416913,
  "executionTime": 32
 }
]

[
 "TEST_STARTED",
 "ID#testRestore(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestore(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474197416946,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEnoughCopiesFoundForAllocationOnLegacyIndexWithDifferentVersion(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnoughCopiesFoundForAllocationOnLegacyIndexWithDifferentVersion(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474197416950,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFoundAllocationAndAllocating(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFoundAllocationAndAllocating(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474197416955,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNoMatchingAllocationIdFound(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoMatchingAllocationIdFound(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474197416958,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testPreferAllocatingPreviousPrimary(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreferAllocatingPreviousPrimary(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474197416961,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverOnAnyNodeDoesNotAssignIfNoShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverOnAnyNodeDoesNotAssignIfNoShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474197416965,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNoActiveAllocationIds(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoActiveAllocationIds(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474197416967,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testDontForceAllocateOnThrottleDecision(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDontForceAllocateOnThrottleDecision(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474197416971,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverOnAnyNodeForcesAllocateIfShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverOnAnyNodeForcesAllocateIfShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474197416975,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testFoundAllocationButNoDecider(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFoundAllocationButNoDecider(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474197416988,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.gateway.PrimaryShardAllocatorTests",
  "startTimestamp": 1474197416765,
  "executionTime": 227
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.ClusterInfoTests",
   "displayName": "org.elasticsearch.cluster.ClusterInfoTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.ClusterInfoTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.cluster.ClusterInfoTests)",
     "displayName": "testSerialization(org.elasticsearch.cluster.ClusterInfoTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.cluster.ClusterInfoTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197416998
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.cluster.ClusterInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.cluster.ClusterInfoTests)",
  "startTimestamp": 1474197417047,
  "executionTime": 22
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.ClusterInfoTests",
  "startTimestamp": 1474197416998,
  "executionTime": 73
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.io.stream.NamedWriteableRegistryTests",
   "displayName": "org.elasticsearch.common.io.stream.NamedWriteableRegistryTests",
   "methodName": null,
   "className": "org.elasticsearch.common.io.stream.NamedWriteableRegistryTests",
   "children": [
    {
     "id": "ID#testUnknownCategory(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
     "displayName": "testUnknownCategory(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
     "methodName": "testUnknownCategory",
     "className": "org.elasticsearch.common.io.stream.NamedWriteableRegistryTests",
     "children": []
    },
    {
     "id": "ID#testUnknownName(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
     "displayName": "testUnknownName(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
     "methodName": "testUnknownName",
     "className": "org.elasticsearch.common.io.stream.NamedWriteableRegistryTests",
     "children": []
    },
    {
     "id": "ID#testDuplicates(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
     "displayName": "testDuplicates(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
     "methodName": "testDuplicates",
     "className": "org.elasticsearch.common.io.stream.NamedWriteableRegistryTests",
     "children": []
    },
    {
     "id": "ID#testBasic(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
     "displayName": "testBasic(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
     "methodName": "testBasic",
     "className": "org.elasticsearch.common.io.stream.NamedWriteableRegistryTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
     "displayName": "testEmpty(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.common.io.stream.NamedWriteableRegistryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197417081
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownCategory(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownCategory(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
  "startTimestamp": 1474197417135,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownName(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownName(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
  "startTimestamp": 1474197417137,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDuplicates(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuplicates(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
  "startTimestamp": 1474197417140,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testBasic(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasic(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
  "startTimestamp": 1474197417143,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
  "startTimestamp": 1474197417145,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.io.stream.NamedWriteableRegistryTests",
  "startTimestamp": 1474197417081,
  "executionTime": 67
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests",
   "displayName": "org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInvalidParameters(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "displayName": "testInvalidParameters(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "methodName": "testInvalidParameters",
     "className": "org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDefaultValuesSet(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "displayName": "testDefaultValuesSet(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "methodName": "testDefaultValuesSet",
     "className": "org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMalformedJson(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "displayName": "testMalformedJson(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "methodName": "testMalformedJson",
     "className": "org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197417162
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
  "startTimestamp": 1474197417185,
  "executionTime": 69
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidParameters(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidParameters(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
  "startTimestamp": 1474197417254,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultValuesSet(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultValuesSet(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
  "startTimestamp": 1474197417261,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
  "startTimestamp": 1474197417269,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
  "startTimestamp": 1474197417290,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testMalformedJson(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMalformedJson(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
  "startTimestamp": 1474197417312,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests",
  "startTimestamp": 1474197417162,
  "executionTime": 157
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.gateway.GatewayServiceTests",
   "displayName": "org.elasticsearch.gateway.GatewayServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.gateway.GatewayServiceTests",
   "children": [
    {
     "id": "ID#testDefaultRecoverAfterTime(org.elasticsearch.gateway.GatewayServiceTests)",
     "displayName": "testDefaultRecoverAfterTime(org.elasticsearch.gateway.GatewayServiceTests)",
     "methodName": "testDefaultRecoverAfterTime",
     "className": "org.elasticsearch.gateway.GatewayServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197417324
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultRecoverAfterTime(org.elasticsearch.gateway.GatewayServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultRecoverAfterTime(org.elasticsearch.gateway.GatewayServiceTests)",
  "startTimestamp": 1474197417339,
  "executionTime": 29
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.gateway.GatewayServiceTests",
  "startTimestamp": 1474197417324,
  "executionTime": 62
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.QueryStringQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
   "children": [
    {
     "id": "ID#testPrefixNumeric(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testPrefixNumeric(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testPrefixNumeric",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testExactGeo(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testExactGeo(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testExactGeo",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryWilcardQueryWithSynonyms(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryWilcardQueryWithSynonyms(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryWilcardQueryWithSynonyms",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryRegExpQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryRegExpQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryRegExpQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testTimezone(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testTimezone(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testTimezone",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryBooleanQueryMultipleBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryBooleanQueryMultipleBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryBooleanQueryMultipleBoosts",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryDisMaxQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryTermQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryTermQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryTermQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryMultipleTermsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryMultipleTermsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryMultipleTermsBooleanQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryPhraseQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryPhraseQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryPhraseQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryPhraseQueryBoostAndSlop(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryPhraseQueryBoostAndSlop(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryPhraseQueryBoostAndSlop",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryFieldsWildcard(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryFieldsWildcard(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryFieldsWildcard",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryMatchAllQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryMatchAllQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryMatchAllQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryBoosts",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryWildcarQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryWildcarQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryWildcarQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryMultipleFieldsDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryMultipleFieldsDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryMultipleFieldsDisMaxQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryMultipleFieldsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryMultipleFieldsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryMultipleFieldsBooleanQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFuzzyNumeric(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testFuzzyNumeric(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testFuzzyNumeric",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryRegExpQueryTooComplex(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryRegExpQueryTooComplex(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryRegExpQueryTooComplex",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197417400
 }
]

[
 "TEST_STARTED",
 "ID#testPrefixNumeric(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:57,531][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{1ERE1CmJSdmAJn8veq7XYA}{local}{local[338]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:57,539][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:57,539][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:57,571][WARN ][org.elasticsearch.deprecation.index.mapper]  [IsCUknA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:57,571][WARN ][org.elasticsearch.deprecation.index.mapper]  [IsCUknA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:57,571][WARN ][org.elasticsearch.deprecation.index.mapper]  [IsCUknA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:57,573][WARN ][org.elasticsearch.deprecation.index.mapper]  [IsCUknA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:57,573][WARN ][org.elasticsearch.deprecation.index.mapper]  [IsCUknA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:57,573][WARN ][org.elasticsearch.deprecation.index.mapper]  [IsCUknA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:57,588][WARN ][org.elasticsearch.deprecation.index.mapper]  [IsCUknA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:57,588][WARN ][org.elasticsearch.deprecation.index.mapper]  [IsCUknA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:57,588][WARN ][org.elasticsearch.deprecation.index.mapper]  [IsCUknA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:57,590][WARN ][org.elasticsearch.deprecation.index.mapper]  [IsCUknA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:57,590][WARN ][org.elasticsearch.deprecation.index.mapper]  [IsCUknA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:57,590][WARN ][org.elasticsearch.deprecation.index.mapper]  [IsCUknA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:57,592][WARN ][org.elasticsearch.deprecation.index.mapper]  [IsCUknA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:57,592][WARN ][org.elasticsearch.deprecation.index.mapper]  [IsCUknA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:57,592][WARN ][org.elasticsearch.deprecation.index.mapper]  [IsCUknA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:57,594][WARN ][org.elasticsearch.deprecation.index.mapper]  [IsCUknA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:57,594][WARN ][org.elasticsearch.deprecation.index.mapper]  [IsCUknA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:57,594][WARN ][org.elasticsearch.deprecation.index.mapper]  [IsCUknA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:57,596][WARN ][org.elasticsearch.deprecation.index.mapper]  [IsCUknA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:57,596][WARN ][org.elasticsearch.deprecation.index.mapper]  [IsCUknA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:57,596][WARN ][org.elasticsearch.deprecation.index.mapper]  [IsCUknA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:57,603][WARN ][org.elasticsearch.deprecation.index.mapper]  [IsCUknA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:57,603][WARN ][org.elasticsearch.deprecation.index.mapper]  [IsCUknA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:57,603][WARN ][org.elasticsearch.deprecation.index.mapper]  [IsCUknA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:57,607][WARN ][org.elasticsearch.deprecation.index.mapper]  [IsCUknA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:57,607][WARN ][org.elasticsearch.deprecation.index.mapper]  [IsCUknA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:57,607][WARN ][org.elasticsearch.deprecation.index.mapper]  [IsCUknA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrefixNumeric(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474197417504,
  "executionTime": 142
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474197417646,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testExactGeo(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExactGeo(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474197417674,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryWilcardQueryWithSynonyms(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryWilcardQueryWithSynonyms(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474197417679,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryRegExpQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryRegExpQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474197417684,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testTimezone(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimezone(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474197417688,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474197417694,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryBooleanQueryMultipleBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryBooleanQueryMultipleBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474197417700,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474197417704,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474197417712,
  "executionTime": 125
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474197417838,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryTermQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryTermQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474197417849,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryMultipleTermsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryMultipleTermsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474197417851,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474197417854,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryPhraseQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryPhraseQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474197417883,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryPhraseQueryBoostAndSlop(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryPhraseQueryBoostAndSlop(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474197417886,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryFieldsWildcard(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryFieldsWildcard(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474197417890,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474197417893,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474197417895,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryMatchAllQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryMatchAllQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474197417915,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474197417918,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474197417923,
  "executionTime": 67
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474197417991,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryWildcarQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryWildcarQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474197417994,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryMultipleFieldsDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryMultipleFieldsDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474197418007,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryMultipleFieldsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryMultipleFieldsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474197418011,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFuzzyNumeric(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFuzzyNumeric(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474197418013,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474197418018,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryRegExpQueryTooComplex(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryRegExpQueryTooComplex(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474197418021,
  "executionTime": 53
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.QueryStringQueryBuilderTests",
  "startTimestamp": 1474197417400,
  "executionTime": 679
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.engine.InternalEngineSettingsTests",
   "displayName": "org.elasticsearch.index.engine.InternalEngineSettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.index.engine.InternalEngineSettingsTests",
   "children": [
    {
     "id": "ID#testSettingsUpdate(org.elasticsearch.index.engine.InternalEngineSettingsTests)",
     "displayName": "testSettingsUpdate(org.elasticsearch.index.engine.InternalEngineSettingsTests)",
     "methodName": "testSettingsUpdate",
     "className": "org.elasticsearch.index.engine.InternalEngineSettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197418085
 }
]

[
 "TEST_STARTED",
 "ID#testSettingsUpdate(org.elasticsearch.index.engine.InternalEngineSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:16:58,139][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:16:58,164][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:16:58,164][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:16:58,168][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[564], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:16:58,171][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:16:58,171][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:16:58,309][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:16:58,309][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:16:58,310][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[90]}, bound_addresses {local[90]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:16:58,313][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{ekPs9QxFRj20BEZcfdn4rg}{NCirqpOIQ66XTbjZmC_pig}{local}{local[90]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:16:58,316][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:16:58,355][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:16:58,380][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [foo] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:16:58,495][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[foo][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:16:58,517][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [60s] to [1339044105188624ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:16:58,518][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [60s] to [1339044105188624ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:16:58,534][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [1339044105188624ms] to [1646345286191435ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:16:58,535][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [1339044105188624ms] to [1646345286191435ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:16:58,554][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [1646345286191435ms] to [775646077111626ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:16:58,554][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [1646345286191435ms] to [775646077111626ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:16:58,568][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [775646077111626ms] to [3948553599222293ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:16:58,569][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [775646077111626ms] to [3948553599222293ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:16:58,583][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [3948553599222293ms] to [3721888790500805ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:16:58,583][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [3948553599222293ms] to [3721888790500805ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:16:58,607][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [3721888790500805ms] to [1496258685519974ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:16:58,607][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [3721888790500805ms] to [1496258685519974ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:16:58,623][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [1496258685519974ms] to [483142732718197ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:16:58,624][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [1496258685519974ms] to [483142732718197ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:16:58,643][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [483142732718197ms] to [1000ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:16:58,643][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [483142732718197ms] to [1000ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:16:58,659][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [1000ms] to [0ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:16:58,659][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [1000ms] to [0ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:16:58,692][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [0ms] to [1000ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:16:58,693][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.gc_deletes] from [0ms] to [1000ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:16:58,705][INFO ][org.elasticsearch.index.engine] [node_s_0] [foo][0] [InternalEngineSettingsTests#testSettingsUpdate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSettingsUpdate(org.elasticsearch.index.engine.InternalEngineSettingsTests)",
  "startTimestamp": 1474197418131,
  "executionTime": 599
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:16:58,730][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:16:58,731][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:16:58,732][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:16:58,733][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.engine.InternalEngineSettingsTests",
  "startTimestamp": 1474197418085,
  "executionTime": 653
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.node.internal.InternalSettingsPreparerTests",
   "displayName": "org.elasticsearch.node.internal.InternalSettingsPreparerTests",
   "methodName": null,
   "className": "org.elasticsearch.node.internal.InternalSettingsPreparerTests",
   "children": [
    {
     "id": "ID#testReplacePromptPlaceholders(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "displayName": "testReplacePromptPlaceholders(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "methodName": "testReplacePromptPlaceholders",
     "className": "org.elasticsearch.node.internal.InternalSettingsPreparerTests",
     "children": []
    },
    {
     "id": "ID#testMultipleSettingsFileNotAllowed(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "displayName": "testMultipleSettingsFileNotAllowed(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "methodName": "testMultipleSettingsFileNotAllowed",
     "className": "org.elasticsearch.node.internal.InternalSettingsPreparerTests",
     "children": []
    },
    {
     "id": "ID#testEmptySettings(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "displayName": "testEmptySettings(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "methodName": "testEmptySettings",
     "className": "org.elasticsearch.node.internal.InternalSettingsPreparerTests",
     "children": []
    },
    {
     "id": "ID#testGarbageIsNotSwallowed(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "displayName": "testGarbageIsNotSwallowed(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "methodName": "testGarbageIsNotSwallowed",
     "className": "org.elasticsearch.node.internal.InternalSettingsPreparerTests",
     "children": []
    },
    {
     "id": "ID#testDefaultClusterName(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "displayName": "testDefaultClusterName(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "methodName": "testDefaultClusterName",
     "className": "org.elasticsearch.node.internal.InternalSettingsPreparerTests",
     "children": []
    },
    {
     "id": "ID#testReplaceTextPromptPlaceholderWithNullTerminal(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "displayName": "testReplaceTextPromptPlaceholderWithNullTerminal(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "methodName": "testReplaceTextPromptPlaceholderWithNullTerminal",
     "className": "org.elasticsearch.node.internal.InternalSettingsPreparerTests",
     "children": []
    },
    {
     "id": "ID#testReplaceSecretPromptPlaceholderWithNullTerminal(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "displayName": "testReplaceSecretPromptPlaceholderWithNullTerminal(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "methodName": "testReplaceSecretPromptPlaceholderWithNullTerminal",
     "className": "org.elasticsearch.node.internal.InternalSettingsPreparerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197418745
 }
]

[
 "TEST_STARTED",
 "ID#testReplacePromptPlaceholders(org.elasticsearch.node.internal.InternalSettingsPreparerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplacePromptPlaceholders(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
  "startTimestamp": 1474197418781,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleSettingsFileNotAllowed(org.elasticsearch.node.internal.InternalSettingsPreparerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleSettingsFileNotAllowed(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
  "startTimestamp": 1474197418800,
  "executionTime": 48
 }
]

[
 "TEST_STARTED",
 "ID#testEmptySettings(org.elasticsearch.node.internal.InternalSettingsPreparerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptySettings(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
  "startTimestamp": 1474197418849,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testGarbageIsNotSwallowed(org.elasticsearch.node.internal.InternalSettingsPreparerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGarbageIsNotSwallowed(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
  "startTimestamp": 1474197418856,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultClusterName(org.elasticsearch.node.internal.InternalSettingsPreparerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultClusterName(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
  "startTimestamp": 1474197418877,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testReplaceTextPromptPlaceholderWithNullTerminal(org.elasticsearch.node.internal.InternalSettingsPreparerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplaceTextPromptPlaceholderWithNullTerminal(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
  "startTimestamp": 1474197418886,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testReplaceSecretPromptPlaceholderWithNullTerminal(org.elasticsearch.node.internal.InternalSettingsPreparerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplaceSecretPromptPlaceholderWithNullTerminal(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
  "startTimestamp": 1474197418894,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.node.internal.InternalSettingsPreparerTests",
  "startTimestamp": 1474197418745,
  "executionTime": 168
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.rest.RestControllerTests",
   "displayName": "org.elasticsearch.rest.RestControllerTests",
   "methodName": null,
   "className": "org.elasticsearch.rest.RestControllerTests",
   "children": [
    {
     "id": "ID#testCanTripCircuitBreaker(org.elasticsearch.rest.RestControllerTests)",
     "displayName": "testCanTripCircuitBreaker(org.elasticsearch.rest.RestControllerTests)",
     "methodName": "testCanTripCircuitBreaker",
     "className": "org.elasticsearch.rest.RestControllerTests",
     "children": []
    },
    {
     "id": "ID#testRegisterWithDeprecatedHandler(org.elasticsearch.rest.RestControllerTests)",
     "displayName": "testRegisterWithDeprecatedHandler(org.elasticsearch.rest.RestControllerTests)",
     "methodName": "testRegisterWithDeprecatedHandler",
     "className": "org.elasticsearch.rest.RestControllerTests",
     "children": []
    },
    {
     "id": "ID#testRegisterAsDeprecatedHandler(org.elasticsearch.rest.RestControllerTests)",
     "displayName": "testRegisterAsDeprecatedHandler(org.elasticsearch.rest.RestControllerTests)",
     "methodName": "testRegisterAsDeprecatedHandler",
     "className": "org.elasticsearch.rest.RestControllerTests",
     "children": []
    },
    {
     "id": "ID#testApplyRelevantHeaders(org.elasticsearch.rest.RestControllerTests)",
     "displayName": "testApplyRelevantHeaders(org.elasticsearch.rest.RestControllerTests)",
     "methodName": "testApplyRelevantHeaders",
     "className": "org.elasticsearch.rest.RestControllerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197418922
 }
]

[
 "TEST_STARTED",
 "ID#testCanTripCircuitBreaker(org.elasticsearch.rest.RestControllerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCanTripCircuitBreaker(org.elasticsearch.rest.RestControllerTests)",
  "startTimestamp": 1474197418963,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterWithDeprecatedHandler(org.elasticsearch.rest.RestControllerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterWithDeprecatedHandler(org.elasticsearch.rest.RestControllerTests)",
  "startTimestamp": 1474197418969,
  "executionTime": 95
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterAsDeprecatedHandler(org.elasticsearch.rest.RestControllerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterAsDeprecatedHandler(org.elasticsearch.rest.RestControllerTests)",
  "startTimestamp": 1474197419064,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testApplyRelevantHeaders(org.elasticsearch.rest.RestControllerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testApplyRelevantHeaders(org.elasticsearch.rest.RestControllerTests)",
  "startTimestamp": 1474197419069,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.rest.RestControllerTests",
  "startTimestamp": 1474197418922,
  "executionTime": 150
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests",
   "displayName": "org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests",
   "methodName": null,
   "className": "org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests",
   "children": [
    {
     "id": "ID#testUncaughtError(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)",
     "displayName": "testUncaughtError(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)",
     "methodName": "testUncaughtError",
     "className": "org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests",
     "children": []
    },
    {
     "id": "ID#testIsFatalCause(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)",
     "displayName": "testIsFatalCause(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)",
     "methodName": "testIsFatalCause",
     "className": "org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests",
     "children": []
    },
    {
     "id": "ID#testUncaughtException(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)",
     "displayName": "testUncaughtException(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)",
     "methodName": "testUncaughtException",
     "className": "org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197419078
 }
]

[
 "TEST_STARTED",
 "ID#testUncaughtError(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUncaughtError(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)",
  "startTimestamp": 1474197419120,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testIsFatalCause(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsFatalCause(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)",
  "startTimestamp": 1474197419148,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUncaughtException(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUncaughtException(org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests)",
  "startTimestamp": 1474197419150,
  "executionTime": 12
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.bootstrap.ElasticsearchUncaughtExceptionHandlerTests",
  "startTimestamp": 1474197419078,
  "executionTime": 86
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests",
   "children": [
    {
     "id": "ID#testInitializingHasExpectedSize(org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests)",
     "displayName": "testInitializingHasExpectedSize(org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests)",
     "methodName": "testInitializingHasExpectedSize",
     "className": "org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests",
     "children": []
    },
    {
     "id": "ID#testExpectedSizeOnMove(org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests)",
     "displayName": "testExpectedSizeOnMove(org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests)",
     "methodName": "testExpectedSizeOnMove",
     "className": "org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197419169
 }
]

[
 "TEST_STARTED",
 "ID#testInitializingHasExpectedSize(org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:59,204][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:59,205][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding one node and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:59,206][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the primary shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:59,207][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Add another one node and reroute%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInitializingHasExpectedSize(org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests)",
  "startTimestamp": 1474197419195,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testExpectedSizeOnMove(org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:59,215][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] creating an index with 1 shard, no replica%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:59,215][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding two nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:59,216][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start primary shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:59,216][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:59,216][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] move the shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:16:59,216][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] finish moving the shard%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExpectedSizeOnMove(org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests)",
  "startTimestamp": 1474197419208,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests",
  "startTimestamp": 1474197419169,
  "executionTime": 50
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.builders.CircleBuilderTests",
   "displayName": "org.elasticsearch.common.geo.builders.CircleBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.builders.CircleBuilderTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.common.geo.builders.CircleBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.common.geo.builders.CircleBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.common.geo.builders.CircleBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.CircleBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.common.geo.builders.CircleBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.common.geo.builders.CircleBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.common.geo.builders.CircleBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.common.geo.builders.CircleBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.common.geo.builders.CircleBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197419232
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.common.geo.builders.CircleBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.common.geo.builders.CircleBuilderTests)",
  "startTimestamp": 1474197419252,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.CircleBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.CircleBuilderTests)",
  "startTimestamp": 1474197419258,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.common.geo.builders.CircleBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.common.geo.builders.CircleBuilderTests)",
  "startTimestamp": 1474197419261,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.builders.CircleBuilderTests",
  "startTimestamp": 1474197419232,
  "executionTime": 32
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.blobstore.FsBlobStoreContainerTests",
   "displayName": "org.elasticsearch.common.blobstore.FsBlobStoreContainerTests",
   "methodName": null,
   "className": "org.elasticsearch.common.blobstore.FsBlobStoreContainerTests",
   "children": [
    {
     "id": "ID#testMoveAndList(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
     "displayName": "testMoveAndList(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
     "methodName": "testMoveAndList",
     "className": "org.elasticsearch.common.blobstore.FsBlobStoreContainerTests",
     "children": []
    },
    {
     "id": "ID#testWriteRead(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
     "displayName": "testWriteRead(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
     "methodName": "testWriteRead",
     "className": "org.elasticsearch.common.blobstore.FsBlobStoreContainerTests",
     "children": []
    },
    {
     "id": "ID#testVerifyOverwriteFails(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
     "displayName": "testVerifyOverwriteFails(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
     "methodName": "testVerifyOverwriteFails",
     "className": "org.elasticsearch.common.blobstore.FsBlobStoreContainerTests",
     "children": []
    },
    {
     "id": "ID#testDeleteBlob(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
     "displayName": "testDeleteBlob(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
     "methodName": "testDeleteBlob",
     "className": "org.elasticsearch.common.blobstore.FsBlobStoreContainerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197419274
 }
]

[
 "TEST_STARTED",
 "ID#testMoveAndList(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMoveAndList(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
  "startTimestamp": 1474197419297,
  "executionTime": 247
 }
]

[
 "TEST_STARTED",
 "ID#testWriteRead(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteRead(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
  "startTimestamp": 1474197419544,
  "executionTime": 45
 }
]

[
 "TEST_STARTED",
 "ID#testVerifyOverwriteFails(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVerifyOverwriteFails(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
  "startTimestamp": 1474197419589,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testDeleteBlob(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeleteBlob(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
  "startTimestamp": 1474197419616,
  "executionTime": 14
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.blobstore.FsBlobStoreContainerTests",
  "startTimestamp": 1474197419274,
  "executionTime": 371
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.deps.jackson.JacksonLocationTests",
   "displayName": "org.elasticsearch.deps.jackson.JacksonLocationTests",
   "methodName": null,
   "className": "org.elasticsearch.deps.jackson.JacksonLocationTests",
   "children": [
    {
     "id": "ID#testLocationExtraction(org.elasticsearch.deps.jackson.JacksonLocationTests)",
     "displayName": "testLocationExtraction(org.elasticsearch.deps.jackson.JacksonLocationTests)",
     "methodName": "testLocationExtraction",
     "className": "org.elasticsearch.deps.jackson.JacksonLocationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197419651
 }
]

[
 "TEST_STARTED",
 "ID#testLocationExtraction(org.elasticsearch.deps.jackson.JacksonLocationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLocationExtraction(org.elasticsearch.deps.jackson.JacksonLocationTests)",
  "startTimestamp": 1474197419669,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.deps.jackson.JacksonLocationTests",
  "startTimestamp": 1474197419651,
  "executionTime": 22
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.deps.lucene.VectorHighlighterTests",
   "displayName": "org.elasticsearch.deps.lucene.VectorHighlighterTests",
   "methodName": null,
   "className": "org.elasticsearch.deps.lucene.VectorHighlighterTests",
   "children": [
    {
     "id": "ID#testVectorHighlighterNoStore(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
     "displayName": "testVectorHighlighterNoStore(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
     "methodName": "testVectorHighlighterNoStore",
     "className": "org.elasticsearch.deps.lucene.VectorHighlighterTests",
     "children": []
    },
    {
     "id": "ID#testVectorHighlighterPrefixQuery(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
     "displayName": "testVectorHighlighterPrefixQuery(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
     "methodName": "testVectorHighlighterPrefixQuery",
     "className": "org.elasticsearch.deps.lucene.VectorHighlighterTests",
     "children": []
    },
    {
     "id": "ID#testVectorHighlighterNoTermVector(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
     "displayName": "testVectorHighlighterNoTermVector(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
     "methodName": "testVectorHighlighterNoTermVector",
     "className": "org.elasticsearch.deps.lucene.VectorHighlighterTests",
     "children": []
    },
    {
     "id": "ID#testVectorHighlighter(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
     "displayName": "testVectorHighlighter(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
     "methodName": "testVectorHighlighter",
     "className": "org.elasticsearch.deps.lucene.VectorHighlighterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197419679
 }
]

[
 "TEST_STARTED",
 "ID#testVectorHighlighterNoStore(org.elasticsearch.deps.lucene.VectorHighlighterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVectorHighlighterNoStore(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
  "startTimestamp": 1474197419696,
  "executionTime": 51
 }
]

[
 "TEST_STARTED",
 "ID#testVectorHighlighterPrefixQuery(org.elasticsearch.deps.lucene.VectorHighlighterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVectorHighlighterPrefixQuery(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
  "startTimestamp": 1474197419747,
  "executionTime": 70
 }
]

[
 "TEST_STARTED",
 "ID#testVectorHighlighterNoTermVector(org.elasticsearch.deps.lucene.VectorHighlighterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVectorHighlighterNoTermVector(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
  "startTimestamp": 1474197419817,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testVectorHighlighter(org.elasticsearch.deps.lucene.VectorHighlighterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVectorHighlighter(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
  "startTimestamp": 1474197419821,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.deps.lucene.VectorHighlighterTests",
  "startTimestamp": 1474197419679,
  "executionTime": 156
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.BucketUtilsTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.BucketUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.BucketUtilsTests",
   "children": [
    {
     "id": "ID#testOptimizesSingleShard(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
     "displayName": "testOptimizesSingleShard(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
     "methodName": "testOptimizesSingleShard",
     "className": "org.elasticsearch.search.aggregations.bucket.BucketUtilsTests",
     "children": []
    },
    {
     "id": "ID#testShardSizeIsGreaterThanGlobalSize(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
     "displayName": "testShardSizeIsGreaterThanGlobalSize(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
     "methodName": "testShardSizeIsGreaterThanGlobalSize",
     "className": "org.elasticsearch.search.aggregations.bucket.BucketUtilsTests",
     "children": []
    },
    {
     "id": "ID#testOverFlow(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
     "displayName": "testOverFlow(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
     "methodName": "testOverFlow",
     "className": "org.elasticsearch.search.aggregations.bucket.BucketUtilsTests",
     "children": []
    },
    {
     "id": "ID#testBadInput(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
     "displayName": "testBadInput(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
     "methodName": "testBadInput",
     "className": "org.elasticsearch.search.aggregations.bucket.BucketUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197419842
 }
]

[
 "TEST_STARTED",
 "ID#testOptimizesSingleShard(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOptimizesSingleShard(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
  "startTimestamp": 1474197419872,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testShardSizeIsGreaterThanGlobalSize(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardSizeIsGreaterThanGlobalSize(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
  "startTimestamp": 1474197419876,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testOverFlow(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOverFlow(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
  "startTimestamp": 1474197419878,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testBadInput(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBadInput(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
  "startTimestamp": 1474197419880,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.BucketUtilsTests",
  "startTimestamp": 1474197419842,
  "executionTime": 41
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.unit.ByteSizeUnitTests",
   "displayName": "org.elasticsearch.common.unit.ByteSizeUnitTests",
   "methodName": null,
   "className": "org.elasticsearch.common.unit.ByteSizeUnitTests",
   "children": [
    {
     "id": "ID#testKB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "displayName": "testKB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "methodName": "testKB",
     "className": "org.elasticsearch.common.unit.ByteSizeUnitTests",
     "children": []
    },
    {
     "id": "ID#testPB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "displayName": "testPB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "methodName": "testPB",
     "className": "org.elasticsearch.common.unit.ByteSizeUnitTests",
     "children": []
    },
    {
     "id": "ID#testMB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "displayName": "testMB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "methodName": "testMB",
     "className": "org.elasticsearch.common.unit.ByteSizeUnitTests",
     "children": []
    },
    {
     "id": "ID#testBytes(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "displayName": "testBytes(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "methodName": "testBytes",
     "className": "org.elasticsearch.common.unit.ByteSizeUnitTests",
     "children": []
    },
    {
     "id": "ID#testGB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "displayName": "testGB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "methodName": "testGB",
     "className": "org.elasticsearch.common.unit.ByteSizeUnitTests",
     "children": []
    },
    {
     "id": "ID#testTB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "displayName": "testTB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "methodName": "testTB",
     "className": "org.elasticsearch.common.unit.ByteSizeUnitTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197419889
 }
]

[
 "TEST_STARTED",
 "ID#testKB(org.elasticsearch.common.unit.ByteSizeUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testKB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
  "startTimestamp": 1474197419905,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testPB(org.elasticsearch.common.unit.ByteSizeUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
  "startTimestamp": 1474197419907,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMB(org.elasticsearch.common.unit.ByteSizeUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
  "startTimestamp": 1474197419909,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testBytes(org.elasticsearch.common.unit.ByteSizeUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBytes(org.elasticsearch.common.unit.ByteSizeUnitTests)",
  "startTimestamp": 1474197419911,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testGB(org.elasticsearch.common.unit.ByteSizeUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
  "startTimestamp": 1474197419912,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTB(org.elasticsearch.common.unit.ByteSizeUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
  "startTimestamp": 1474197419914,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.unit.ByteSizeUnitTests",
  "startTimestamp": 1474197419889,
  "executionTime": 28
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
   "children": [
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testValidateEmptyLike(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testValidateEmptyLike(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testValidateEmptyLike",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnsupportedFields(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testUnsupportedFields(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testUnsupportedFields",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testValidateEmptyFields(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testValidateEmptyFields(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testValidateEmptyFields",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testItemSerialization(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testItemSerialization(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testItemSerialization",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testItemFromXContent(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testItemFromXContent(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testItemFromXContent",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMoreLikeThisBuilder(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testMoreLikeThisBuilder(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testMoreLikeThisBuilder",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197419926
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:59,947][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{RF3ISss-RhK-t7bOHM4xRA}{local}{local[343]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:59,954][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:59,954][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:59,972][WARN ][org.elasticsearch.deprecation.index.mapper]  [rgmrASf] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:59,972][WARN ][org.elasticsearch.deprecation.index.mapper]  [rgmrASf] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:59,972][WARN ][org.elasticsearch.deprecation.index.mapper]  [rgmrASf] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:59,978][WARN ][org.elasticsearch.deprecation.index.mapper]  [rgmrASf] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:59,979][WARN ][org.elasticsearch.deprecation.index.mapper]  [rgmrASf] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:59,979][WARN ][org.elasticsearch.deprecation.index.mapper]  [rgmrASf] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:59,993][WARN ][org.elasticsearch.deprecation.index.mapper]  [rgmrASf] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:59,993][WARN ][org.elasticsearch.deprecation.index.mapper]  [rgmrASf] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:59,993][WARN ][org.elasticsearch.deprecation.index.mapper]  [rgmrASf] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:59,995][WARN ][org.elasticsearch.deprecation.index.mapper]  [rgmrASf] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:59,995][WARN ][org.elasticsearch.deprecation.index.mapper]  [rgmrASf] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:16:59,995][WARN ][org.elasticsearch.deprecation.index.mapper]  [rgmrASf] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:17:00,013][WARN ][org.elasticsearch.deprecation.index.mapper]  [rgmrASf] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:17:00,014][WARN ][org.elasticsearch.deprecation.index.mapper]  [rgmrASf] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:17:00,014][WARN ][org.elasticsearch.deprecation.index.mapper]  [rgmrASf] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:17:00,019][WARN ][org.elasticsearch.deprecation.index.mapper]  [rgmrASf] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:17:00,019][WARN ][org.elasticsearch.deprecation.index.mapper]  [rgmrASf] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:17:00,019][WARN ][org.elasticsearch.deprecation.index.mapper]  [rgmrASf] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1474197419942,
  "executionTime": 295
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1474197420238,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testValidateEmptyLike(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidateEmptyLike(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1474197420265,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1474197420269,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnsupportedFields(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnsupportedFields(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1474197420271,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1474197420274,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1474197420278,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testValidateEmptyFields(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidateEmptyFields(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1474197420282,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1474197420285,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testItemSerialization(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testItemSerialization(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1474197420290,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testItemFromXContent(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testItemFromXContent(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1474197420293,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1474197420296,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1474197420308,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMoreLikeThisBuilder(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMoreLikeThisBuilder(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1474197420310,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:17:00,316][WARN ][org.elasticsearch.deprecation.common] Deprecated field [mlt] used, expected [more_like_this] instead%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1474197420313,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
  "startTimestamp": 1474197419926,
  "executionTime": 395
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.logging.DeprecationLoggerTests",
   "displayName": "org.elasticsearch.common.logging.DeprecationLoggerTests",
   "methodName": null,
   "className": "org.elasticsearch.common.logging.DeprecationLoggerTests",
   "children": [
    {
     "id": "ID#testFailsWhenDoubleSettingSameThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "displayName": "testFailsWhenDoubleSettingSameThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "methodName": "testFailsWhenDoubleSettingSameThreadContext",
     "className": "org.elasticsearch.common.logging.DeprecationLoggerTests",
     "children": []
    },
    {
     "id": "ID#testFailsWhenRemovingUnknownThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "displayName": "testFailsWhenRemovingUnknownThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "methodName": "testFailsWhenRemovingUnknownThreadContext",
     "className": "org.elasticsearch.common.logging.DeprecationLoggerTests",
     "children": []
    },
    {
     "id": "ID#testIgnoresClosedThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "displayName": "testIgnoresClosedThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "methodName": "testIgnoresClosedThreadContext",
     "className": "org.elasticsearch.common.logging.DeprecationLoggerTests",
     "children": []
    },
    {
     "id": "ID#testCanRemoveThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "displayName": "testCanRemoveThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "methodName": "testCanRemoveThreadContext",
     "className": "org.elasticsearch.common.logging.DeprecationLoggerTests",
     "children": []
    },
    {
     "id": "ID#testSafeWithoutThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "displayName": "testSafeWithoutThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "methodName": "testSafeWithoutThreadContext",
     "className": "org.elasticsearch.common.logging.DeprecationLoggerTests",
     "children": []
    },
    {
     "id": "ID#testAddsHeaderWithThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "displayName": "testAddsHeaderWithThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "methodName": "testAddsHeaderWithThreadContext",
     "className": "org.elasticsearch.common.logging.DeprecationLoggerTests",
     "children": []
    },
    {
     "id": "ID#testFailsWithoutThreadContextSet(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "displayName": "testFailsWithoutThreadContextSet(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "methodName": "testFailsWithoutThreadContextSet",
     "className": "org.elasticsearch.common.logging.DeprecationLoggerTests",
     "children": []
    },
    {
     "id": "ID#testAddsCombinedHeaderWithThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "displayName": "testAddsCombinedHeaderWithThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "methodName": "testAddsCombinedHeaderWithThreadContext",
     "className": "org.elasticsearch.common.logging.DeprecationLoggerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197420328
 }
]

[
 "TEST_STARTED",
 "ID#testFailsWhenDoubleSettingSameThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailsWhenDoubleSettingSameThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
  "startTimestamp": 1474197420443,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFailsWhenRemovingUnknownThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailsWhenRemovingUnknownThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
  "startTimestamp": 1474197420446,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoresClosedThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:17:00,451][WARN ][org.elasticsearch.deprecation.common.logging] Ignored logger message%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoresClosedThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
  "startTimestamp": 1474197420448,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCanRemoveThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:17:00,453][WARN ][org.elasticsearch.deprecation.common.logging] testCanRemoveThreadContext%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:17:00,461][WARN ][org.elasticsearch.deprecation.common.logging] testCannotRemoveThreadContext%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCanRemoveThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
  "startTimestamp": 1474197420451,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testSafeWithoutThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:17:00,464][WARN ][org.elasticsearch.deprecation.common.logging] Ignored%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSafeWithoutThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
  "startTimestamp": 1474197420462,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAddsHeaderWithThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:17:00,480][WARN ][org.elasticsearch.deprecation.common.logging] A simple message [R]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddsHeaderWithThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
  "startTimestamp": 1474197420464,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testFailsWithoutThreadContextSet(org.elasticsearch.common.logging.DeprecationLoggerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailsWithoutThreadContextSet(org.elasticsearch.common.logging.DeprecationLoggerTests)",
  "startTimestamp": 1474197420481,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testAddsCombinedHeaderWithThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:17:00,487][WARN ][org.elasticsearch.deprecation.common.logging] A simple message [d]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:17:00,487][WARN ][org.elasticsearch.deprecation.common.logging] SMugyYGK%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddsCombinedHeaderWithThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
  "startTimestamp": 1474197420485,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.logging.DeprecationLoggerTests",
  "startTimestamp": 1474197420328,
  "executionTime": 162
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests",
   "children": [
    {
     "id": "ID#testSettings(org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests)",
     "displayName": "testSettings(org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests)",
     "methodName": "testSettings",
     "className": "org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testDefault(org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests)",
     "displayName": "testDefault(org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests)",
     "methodName": "testDefault",
     "className": "org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197420495
 }
]

[
 "TEST_STARTED",
 "ID#testSettings(org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSettings(org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests)",
  "startTimestamp": 1474197420510,
  "executionTime": 41
 }
]

[
 "TEST_STARTED",
 "ID#testDefault(org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefault(org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests)",
  "startTimestamp": 1474197420551,
  "executionTime": 20
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.LimitTokenCountFilterFactoryTests",
  "startTimestamp": 1474197420495,
  "executionTime": 80
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.IpFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.IpFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.IpFieldTypeTests",
   "children": [
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.IpFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueFormat(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "displayName": "testValueFormat(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "methodName": "testValueFormat",
     "className": "org.elasticsearch.index.mapper.IpFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueForSearch(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "displayName": "testValueForSearch(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "methodName": "testValueForSearch",
     "className": "org.elasticsearch.index.mapper.IpFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testRangeQuery(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "displayName": "testRangeQuery(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "methodName": "testRangeQuery",
     "className": "org.elasticsearch.index.mapper.IpFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testTermQuery(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "displayName": "testTermQuery(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "methodName": "testTermQuery",
     "className": "org.elasticsearch.index.mapper.IpFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.IpFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.IpFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.IpFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.IpFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197420581
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.IpFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.IpFieldTypeTests)",
  "startTimestamp": 1474197420693,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValueFormat(org.elasticsearch.index.mapper.IpFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueFormat(org.elasticsearch.index.mapper.IpFieldTypeTests)",
  "startTimestamp": 1474197420695,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testValueForSearch(org.elasticsearch.index.mapper.IpFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueForSearch(org.elasticsearch.index.mapper.IpFieldTypeTests)",
  "startTimestamp": 1474197420710,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRangeQuery(org.elasticsearch.index.mapper.IpFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRangeQuery(org.elasticsearch.index.mapper.IpFieldTypeTests)",
  "startTimestamp": 1474197420712,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testTermQuery(org.elasticsearch.index.mapper.IpFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermQuery(org.elasticsearch.index.mapper.IpFieldTypeTests)",
  "startTimestamp": 1474197420735,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.IpFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.IpFieldTypeTests)",
  "startTimestamp": 1474197420738,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.IpFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.IpFieldTypeTests)",
  "startTimestamp": 1474197420740,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.IpFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.IpFieldTypeTests)",
  "startTimestamp": 1474197420741,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.IpFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.IpFieldTypeTests)",
  "startTimestamp": 1474197420743,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.IpFieldTypeTests",
  "startTimestamp": 1474197420581,
  "executionTime": 166
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
   "children": [
    {
     "id": "ID#testClusterAllActive3(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "displayName": "testClusterAllActive3(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "methodName": "testClusterAllActive3",
     "className": "org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
     "children": []
    },
    {
     "id": "ID#testClusterPrimariesActive1(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "displayName": "testClusterPrimariesActive1(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "methodName": "testClusterPrimariesActive1",
     "className": "org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
     "children": []
    },
    {
     "id": "ID#testRebalanceWhileShardFetching(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "displayName": "testRebalanceWhileShardFetching(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "methodName": "testRebalanceWhileShardFetching",
     "className": "org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
     "children": []
    },
    {
     "id": "ID#testClusterAllActive2(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "displayName": "testClusterAllActive2(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "methodName": "testClusterAllActive2",
     "className": "org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
     "children": []
    },
    {
     "id": "ID#testRebalanceWithIgnoredUnassignedShards(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "displayName": "testRebalanceWithIgnoredUnassignedShards(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "methodName": "testRebalanceWithIgnoredUnassignedShards",
     "className": "org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
     "children": []
    },
    {
     "id": "ID#testClusterAllActive1(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "displayName": "testClusterAllActive1(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "methodName": "testClusterAllActive1",
     "className": "org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
     "children": []
    },
    {
     "id": "ID#testClusterPrimariesActive2(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "displayName": "testClusterPrimariesActive2(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "methodName": "testClusterPrimariesActive2",
     "className": "org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
     "children": []
    },
    {
     "id": "ID#testAlways(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "displayName": "testAlways(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "methodName": "testAlways",
     "className": "org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197420759
 }
]

[
 "TEST_STARTED",
 "ID#testClusterAllActive3(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:00,791][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start two nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:00,792][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards for test1, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:00,793][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the test1 replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:00,793][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards for test2, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:00,794][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start 1 more node, check that rebalancing will not happen (for test1) because we set it to all_active%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterAllActive3(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
  "startTimestamp": 1474197420784,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testClusterPrimariesActive1(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:00,801][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start two nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:00,801][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards for test1, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:00,802][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the test1 replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:00,803][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards for test2, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:00,803][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start 1 more node, check that rebalancing happen (for test1) because we set it to primaries_active%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterPrimariesActive1(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
  "startTimestamp": 1474197420794,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testRebalanceWhileShardFetching(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:00,812][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start two nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:00,813][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRebalanceWhileShardFetching(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
  "startTimestamp": 1474197420804,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testClusterAllActive2(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:00,826][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start two nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:00,826][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards for test1, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:00,827][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the test1 replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:00,827][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start 1 more node, check that rebalancing will not happen (for test1) because we set it to all_active%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterAllActive2(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
  "startTimestamp": 1474197420816,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testRebalanceWithIgnoredUnassignedShards(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:00,834][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start two nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:00,836][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0], [test1][1]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRebalanceWithIgnoredUnassignedShards(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
  "startTimestamp": 1474197420828,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testClusterAllActive1(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:00,843][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start two nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:00,850][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards for test1, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:00,851][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the test1 replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:00,851][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards for test2, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:00,852][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the test2 replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:00,852][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:00,852][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start 1 more node, check that rebalancing happen (for test1) because we set it to all_active%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterAllActive1(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
  "startTimestamp": 1474197420836,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testClusterPrimariesActive2(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:00,859][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start two nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:00,860][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards for test1, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:00,860][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the test1 replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:00,860][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start 1 more node, check that rebalancing will not happen (for test1) because we set it to primaries_active%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterPrimariesActive2(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
  "startTimestamp": 1474197420853,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testAlways(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:00,867][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start two nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:00,868][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards for test1, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:00,869][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the test1 replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:17:00,869][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start 1 more node, check that rebalancing will happen (for test1) because we set it to always%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAlways(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
  "startTimestamp": 1474197420861,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
  "startTimestamp": 1474197420759,
  "executionTime": 114
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.GeoHashGridTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.GeoHashGridTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.GeoHashGridTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.GeoHashGridTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.GeoHashGridTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.GeoHashGridTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197420878
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:17:00,915][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{_yHEK1vcROmE9ZzDJVq2lw}{local}{local[366]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)",
  "startTimestamp": 1474197420931,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)",
  "startTimestamp": 1474197420942,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.GeoHashGridTests)",
  "startTimestamp": 1474197420956,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.GeoHashGridTests",
  "startTimestamp": 1474197420878,
  "executionTime": 83
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.MissingTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.MissingTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.MissingTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.MissingTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.MissingTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.MissingTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.MissingTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.MissingTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.MissingTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.MissingTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.MissingTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.MissingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197420966
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:17:00,990][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{RuIfxUwwTIOJy_ucAXqJYA}{local}{local[367]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.MissingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.MissingTests)",
  "startTimestamp": 1474197420998,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.MissingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.MissingTests)",
  "startTimestamp": 1474197421000,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.MissingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.MissingTests)",
  "startTimestamp": 1474197421008,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.MissingTests",
  "startTimestamp": 1474197420966,
  "executionTime": 47
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.SpecialPermissionTests",
   "displayName": "org.elasticsearch.SpecialPermissionTests",
   "methodName": null,
   "className": "org.elasticsearch.SpecialPermissionTests",
   "children": [
    {
     "id": "ID#testImplies(org.elasticsearch.SpecialPermissionTests)",
     "displayName": "testImplies(org.elasticsearch.SpecialPermissionTests)",
     "methodName": "testImplies",
     "className": "org.elasticsearch.SpecialPermissionTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.SpecialPermissionTests)",
     "displayName": "testEquals(org.elasticsearch.SpecialPermissionTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.SpecialPermissionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197421021
 }
]

[
 "TEST_STARTED",
 "ID#testImplies(org.elasticsearch.SpecialPermissionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testImplies(org.elasticsearch.SpecialPermissionTests)",
  "startTimestamp": 1474197421066,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.SpecialPermissionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.SpecialPermissionTests)",
  "startTimestamp": 1474197421068,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.SpecialPermissionTests",
  "startTimestamp": 1474197421021,
  "executionTime": 51
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests",
   "displayName": "org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
     "displayName": "testSerialization(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testIllegalXContent(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
     "displayName": "testIllegalXContent(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
     "methodName": "testIllegalXContent",
     "className": "org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197421080
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
  "startTimestamp": 1474197421117,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
  "startTimestamp": 1474197421131,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalXContent(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalXContent(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
  "startTimestamp": 1474197421137,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
  "startTimestamp": 1474197421145,
  "executionTime": 18
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests",
  "startTimestamp": 1474197421080,
  "executionTime": 85
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.apache.lucene.queries.BlendedTermQueryTests",
   "displayName": "org.apache.lucene.queries.BlendedTermQueryTests",
   "methodName": null,
   "className": "org.apache.lucene.queries.BlendedTermQueryTests",
   "children": [
    {
     "id": "ID#testBooleanQuery(org.apache.lucene.queries.BlendedTermQueryTests)",
     "displayName": "testBooleanQuery(org.apache.lucene.queries.BlendedTermQueryTests)",
     "methodName": "testBooleanQuery",
     "className": "org.apache.lucene.queries.BlendedTermQueryTests",
     "children": []
    },
    {
     "id": "ID#testExtractTerms(org.apache.lucene.queries.BlendedTermQueryTests)",
     "displayName": "testExtractTerms(org.apache.lucene.queries.BlendedTermQueryTests)",
     "methodName": "testExtractTerms",
     "className": "org.apache.lucene.queries.BlendedTermQueryTests",
     "children": []
    },
    {
     "id": "ID#testDismaxQuery(org.apache.lucene.queries.BlendedTermQueryTests)",
     "displayName": "testDismaxQuery(org.apache.lucene.queries.BlendedTermQueryTests)",
     "methodName": "testDismaxQuery",
     "className": "org.apache.lucene.queries.BlendedTermQueryTests",
     "children": []
    },
    {
     "id": "ID#testBasics(org.apache.lucene.queries.BlendedTermQueryTests)",
     "displayName": "testBasics(org.apache.lucene.queries.BlendedTermQueryTests)",
     "methodName": "testBasics",
     "className": "org.apache.lucene.queries.BlendedTermQueryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197421173
 }
]

[
 "TEST_STARTED",
 "ID#testBooleanQuery(org.apache.lucene.queries.BlendedTermQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBooleanQuery(org.apache.lucene.queries.BlendedTermQueryTests)",
  "startTimestamp": 1474197421206,
  "executionTime": 112
 }
]

[
 "TEST_STARTED",
 "ID#testExtractTerms(org.apache.lucene.queries.BlendedTermQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractTerms(org.apache.lucene.queries.BlendedTermQueryTests)",
  "startTimestamp": 1474197421318,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testDismaxQuery(org.apache.lucene.queries.BlendedTermQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDismaxQuery(org.apache.lucene.queries.BlendedTermQueryTests)",
  "startTimestamp": 1474197421326,
  "executionTime": 162
 }
]

[
 "TEST_STARTED",
 "ID#testBasics(org.apache.lucene.queries.BlendedTermQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasics(org.apache.lucene.queries.BlendedTermQueryTests)",
  "startTimestamp": 1474197421488,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.apache.lucene.queries.BlendedTermQueryTests",
  "startTimestamp": 1474197421173,
  "executionTime": 468
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.snapshots.blobstore.FileInfoTests",
   "displayName": "org.elasticsearch.index.snapshots.blobstore.FileInfoTests",
   "methodName": null,
   "className": "org.elasticsearch.index.snapshots.blobstore.FileInfoTests",
   "children": [
    {
     "id": "ID#testInvalidFieldsInFromXContent(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)",
     "displayName": "testInvalidFieldsInFromXContent(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)",
     "methodName": "testInvalidFieldsInFromXContent",
     "className": "org.elasticsearch.index.snapshots.blobstore.FileInfoTests",
     "children": []
    },
    {
     "id": "ID#testGetPartSize(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)",
     "displayName": "testGetPartSize(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)",
     "methodName": "testGetPartSize",
     "className": "org.elasticsearch.index.snapshots.blobstore.FileInfoTests",
     "children": []
    },
    {
     "id": "ID#testToFromXContent(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)",
     "displayName": "testToFromXContent(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)",
     "methodName": "testToFromXContent",
     "className": "org.elasticsearch.index.snapshots.blobstore.FileInfoTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197421647
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidFieldsInFromXContent(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidFieldsInFromXContent(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)",
  "startTimestamp": 1474197421663,
  "executionTime": 551
 }
]

[
 "TEST_STARTED",
 "ID#testGetPartSize(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetPartSize(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)",
  "startTimestamp": 1474197422214,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToFromXContent(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToFromXContent(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)",
  "startTimestamp": 1474197422217,
  "executionTime": 690
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.snapshots.blobstore.FileInfoTests",
  "startTimestamp": 1474197421647,
  "executionTime": 1270
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.threadpool.ThreadPoolTests",
   "displayName": "org.elasticsearch.threadpool.ThreadPoolTests",
   "methodName": null,
   "className": "org.elasticsearch.threadpool.ThreadPoolTests",
   "children": [
    {
     "id": "ID#testBoundedByBelowMin(org.elasticsearch.threadpool.ThreadPoolTests)",
     "displayName": "testBoundedByBelowMin(org.elasticsearch.threadpool.ThreadPoolTests)",
     "methodName": "testBoundedByBelowMin",
     "className": "org.elasticsearch.threadpool.ThreadPoolTests",
     "children": []
    },
    {
     "id": "ID#testBoundedByAboveMax(org.elasticsearch.threadpool.ThreadPoolTests)",
     "displayName": "testBoundedByAboveMax(org.elasticsearch.threadpool.ThreadPoolTests)",
     "methodName": "testBoundedByAboveMax",
     "className": "org.elasticsearch.threadpool.ThreadPoolTests",
     "children": []
    },
    {
     "id": "ID#testBoundedByBetweenMinAndMax(org.elasticsearch.threadpool.ThreadPoolTests)",
     "displayName": "testBoundedByBetweenMinAndMax(org.elasticsearch.threadpool.ThreadPoolTests)",
     "methodName": "testBoundedByBetweenMinAndMax",
     "className": "org.elasticsearch.threadpool.ThreadPoolTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197422922
 }
]

[
 "TEST_STARTED",
 "ID#testBoundedByBelowMin(org.elasticsearch.threadpool.ThreadPoolTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBoundedByBelowMin(org.elasticsearch.threadpool.ThreadPoolTests)",
  "startTimestamp": 1474197422993,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testBoundedByAboveMax(org.elasticsearch.threadpool.ThreadPoolTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBoundedByAboveMax(org.elasticsearch.threadpool.ThreadPoolTests)",
  "startTimestamp": 1474197422996,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBoundedByBetweenMinAndMax(org.elasticsearch.threadpool.ThreadPoolTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBoundedByBetweenMinAndMax(org.elasticsearch.threadpool.ThreadPoolTests)",
  "startTimestamp": 1474197422999,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.threadpool.ThreadPoolTests",
  "startTimestamp": 1474197422922,
  "executionTime": 81
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.recycler.LockedRecyclerTests",
   "displayName": "org.elasticsearch.common.recycler.LockedRecyclerTests",
   "methodName": null,
   "className": "org.elasticsearch.common.recycler.LockedRecyclerTests",
   "children": [
    {
     "id": "ID#testRecycle(org.elasticsearch.common.recycler.LockedRecyclerTests)",
     "displayName": "testRecycle(org.elasticsearch.common.recycler.LockedRecyclerTests)",
     "methodName": "testRecycle",
     "className": "org.elasticsearch.common.recycler.LockedRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testReuse(org.elasticsearch.common.recycler.LockedRecyclerTests)",
     "displayName": "testReuse(org.elasticsearch.common.recycler.LockedRecyclerTests)",
     "methodName": "testReuse",
     "className": "org.elasticsearch.common.recycler.LockedRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.LockedRecyclerTests)",
     "displayName": "testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.LockedRecyclerTests)",
     "methodName": "testDestroyWhenOverCapacity",
     "className": "org.elasticsearch.common.recycler.LockedRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testClose(org.elasticsearch.common.recycler.LockedRecyclerTests)",
     "displayName": "testClose(org.elasticsearch.common.recycler.LockedRecyclerTests)",
     "methodName": "testClose",
     "className": "org.elasticsearch.common.recycler.LockedRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testDoubleRelease(org.elasticsearch.common.recycler.LockedRecyclerTests)",
     "displayName": "testDoubleRelease(org.elasticsearch.common.recycler.LockedRecyclerTests)",
     "methodName": "testDoubleRelease",
     "className": "org.elasticsearch.common.recycler.LockedRecyclerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197423010
 }
]

[
 "TEST_STARTED",
 "ID#testRecycle(org.elasticsearch.common.recycler.LockedRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecycle(org.elasticsearch.common.recycler.LockedRecyclerTests)",
  "startTimestamp": 1474197423128,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testReuse(org.elasticsearch.common.recycler.LockedRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReuse(org.elasticsearch.common.recycler.LockedRecyclerTests)",
  "startTimestamp": 1474197423131,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.LockedRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.LockedRecyclerTests)",
  "startTimestamp": 1474197423133,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClose(org.elasticsearch.common.recycler.LockedRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClose(org.elasticsearch.common.recycler.LockedRecyclerTests)",
  "startTimestamp": 1474197423135,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testDoubleRelease(org.elasticsearch.common.recycler.LockedRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoubleRelease(org.elasticsearch.common.recycler.LockedRecyclerTests)",
  "startTimestamp": 1474197423137,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.recycler.LockedRecyclerTests",
  "startTimestamp": 1474197423010,
  "executionTime": 130
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.AggregationCollectorTests",
   "displayName": "org.elasticsearch.search.aggregations.AggregationCollectorTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.AggregationCollectorTests",
   "children": [
    {
     "id": "ID#testNeedsScores(org.elasticsearch.search.aggregations.AggregationCollectorTests)",
     "displayName": "testNeedsScores(org.elasticsearch.search.aggregations.AggregationCollectorTests)",
     "methodName": "testNeedsScores",
     "className": "org.elasticsearch.search.aggregations.AggregationCollectorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197423146
 }
]

[
 "TEST_STARTED",
 "ID#testNeedsScores(org.elasticsearch.search.aggregations.AggregationCollectorTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:17:03,220][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:17:03,274][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:17:03,274][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:17:03,277][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[564], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:17:03,279][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:17:03,280][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:17:03,451][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:17:03,452][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:17:03,452][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[91]}, bound_addresses {local[91]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:17:03,458][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{jRD_Ggp0RdqXPMHPGqC4vw}{kkxUb3BkT4uiqrhZNbN7IA}{local}{local[91]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:17:03,458][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:17:03,473][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:17:03,491][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [idx] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:17:03,553][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[idx][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:17:03,592][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [idx/F2eD8MDVRj-mwCDLZIfiQQ] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:17:04,016][INFO ][org.elasticsearch.search.aggregations] [AggregationCollectorTests#testNeedsScores]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNeedsScores(org.elasticsearch.search.aggregations.AggregationCollectorTests)",
  "startTimestamp": 1474197423187,
  "executionTime": 910
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:17:04,097][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:17:04,098][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:17:04,098][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:17:04,099][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.AggregationCollectorTests",
  "startTimestamp": 1474197423146,
  "executionTime": 959
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.search.nested.LongNestedSortingTests",
   "displayName": "org.elasticsearch.index.search.nested.LongNestedSortingTests",
   "methodName": null,
   "className": "org.elasticsearch.index.search.nested.LongNestedSortingTests",
   "children": [
    {
     "id": "ID#testNestedSorting(org.elasticsearch.index.search.nested.LongNestedSortingTests)",
     "displayName": "testNestedSorting(org.elasticsearch.index.search.nested.LongNestedSortingTests)",
     "methodName": "testNestedSorting",
     "className": "org.elasticsearch.index.search.nested.LongNestedSortingTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.index.search.nested.LongNestedSortingTests)",
     "displayName": "testEmpty(org.elasticsearch.index.search.nested.LongNestedSortingTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.index.search.nested.LongNestedSortingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197424113
 }
]

[
 "TEST_STARTED",
 "ID#testNestedSorting(org.elasticsearch.index.search.nested.LongNestedSortingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:04,153][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:04,193][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:04,193][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:04,197][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[564], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:04,201][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:04,201][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:04,390][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:04,390][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:04,391][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[92]}, bound_addresses {local[92]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:04,481][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{y0yHmWkUQNicgWUwY9paQg}{u80z4mXrRJ29C_51K7th2A}{local}{local[92]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:04,482][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:04,541][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:04,565][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:04,670][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:04,723][INFO ][org.elasticsearch.index.search.nested] [LongNestedSortingTests#testNestedSorting]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedSorting(org.elasticsearch.index.search.nested.LongNestedSortingTests)",
  "startTimestamp": 1474197424141,
  "executionTime": 620
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.index.search.nested.LongNestedSortingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:04,802][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:04,870][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:04,884][INFO ][org.elasticsearch.index.search.nested] [LongNestedSortingTests#testEmpty]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.index.search.nested.LongNestedSortingTests)",
  "startTimestamp": 1474197424761,
  "executionTime": 156
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:04,917][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:04,918][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:04,918][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:17:04,919][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.search.nested.LongNestedSortingTests",
  "startTimestamp": 1474197424113,
  "executionTime": 814
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.IndexFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.IndexFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.IndexFieldMapperTests",
   "children": [
    {
     "id": "ID#testDefaultDisabledIndexMapper(org.elasticsearch.index.mapper.IndexFieldMapperTests)",
     "displayName": "testDefaultDisabledIndexMapper(org.elasticsearch.index.mapper.IndexFieldMapperTests)",
     "methodName": "testDefaultDisabledIndexMapper",
     "className": "org.elasticsearch.index.mapper.IndexFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testBwCompatIndexNotConfigurable(org.elasticsearch.index.mapper.IndexFieldMapperTests)",
     "displayName": "testBwCompatIndexNotConfigurable(org.elasticsearch.index.mapper.IndexFieldMapperTests)",
     "methodName": "testBwCompatIndexNotConfigurable",
     "className": "org.elasticsearch.index.mapper.IndexFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIndexNotConfigurable(org.elasticsearch.index.mapper.IndexFieldMapperTests)",
     "displayName": "testIndexNotConfigurable(org.elasticsearch.index.mapper.IndexFieldMapperTests)",
     "methodName": "testIndexNotConfigurable",
     "className": "org.elasticsearch.index.mapper.IndexFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197424933
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultDisabledIndexMapper(org.elasticsearch.index.mapper.IndexFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:17:04,970][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:17:04,997][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:17:04,998][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:17:05,001][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[564], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:17:05,004][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:17:05,004][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:17:05,137][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:17:05,137][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:17:05,138][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[93]}, bound_addresses {local[93]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:17:05,169][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{yVN29jeqQ4ybm7fsU2SZsQ}{R7snSH7BTUa8A6d-VPaS4Q}{local}{local[93]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:17:05,169][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:17:05,205][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:17:05,225][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:17:05,300][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:17:05,317][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [IndexFieldMapperTests#testDefaultDisabledIndexMapper]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultDisabledIndexMapper(org.elasticsearch.index.mapper.IndexFieldMapperTests)",
  "startTimestamp": 1474197424957,
  "executionTime": 399
 }
]

[
 "TEST_STARTED",
 "ID#testBwCompatIndexNotConfigurable(org.elasticsearch.index.mapper.IndexFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:17:05,362][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:17:05,424][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:17:05,439][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [IndexFieldMapperTests#testBwCompatIndexNotConfigurable]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBwCompatIndexNotConfigurable(org.elasticsearch.index.mapper.IndexFieldMapperTests)",
  "startTimestamp": 1474197425356,
  "executionTime": 113
 }
]

[
 "TEST_STARTED",
 "ID#testIndexNotConfigurable(org.elasticsearch.index.mapper.IndexFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:17:05,475][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:17:05,526][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:17:05,556][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [IndexFieldMapperTests#testIndexNotConfigurable]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexNotConfigurable(org.elasticsearch.index.mapper.IndexFieldMapperTests)",
  "startTimestamp": 1474197425469,
  "executionTime": 120
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:17:05,589][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:17:05,589][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:17:05,590][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:17:05,591][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.IndexFieldMapperTests",
  "startTimestamp": 1474197424933,
  "executionTime": 664
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests",
   "children": [
    {
     "id": "ID#testPreserveOriginal(org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests)",
     "displayName": "testPreserveOriginal(org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests)",
     "methodName": "testPreserveOriginal",
     "className": "org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testDefault(org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests)",
     "displayName": "testDefault(org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests)",
     "methodName": "testDefault",
     "className": "org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474197425602
 }
]

[
 "TEST_STARTED",
 "ID#testPreserveOriginal(org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreserveOriginal(org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests)",
  "startTimestamp": 1474197425652,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testDefault(org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefault(org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests)",
  "startTimestamp": 1474197425662,
  "executionTime": 15
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests",
  "startTimestamp": 1474197425602,
  "executionTime": 77
 }
]

[
 "IDLE",
 {}
]

[
 "QUIT",
 {}
]

